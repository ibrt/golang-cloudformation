// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_glue

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Glue_Crawler)(nil)
	_ cfz.Resource                   = (*AWS_Glue_Crawler)(nil)
)

const (
	// AWS_Glue_Crawler__Type is the CloudFormation type for AWS::Glue::Crawler.
	AWS_Glue_Crawler__Type = "AWS::Glue::Crawler"
)

var (
	// AWS_Glue_Crawler__PropertiesMap reports all the CloudFormation properties for AWS::Glue::Crawler.
	AWS_Glue_Crawler__PropertiesMap = struct {
		Classifiers                  string
		Configuration                string
		CrawlerSecurityConfiguration string
		DatabaseName                 string
		Description                  string
		LakeFormationConfiguration   string
		Name                         string
		RecrawlPolicy                string
		Role                         string
		Schedule                     string
		SchemaChangePolicy           string
		TablePrefix                  string
		Tags                         string
		Targets                      string
	}{
		Classifiers:                  "Classifiers",
		Configuration:                "Configuration",
		CrawlerSecurityConfiguration: "CrawlerSecurityConfiguration",
		DatabaseName:                 "DatabaseName",
		Description:                  "Description",
		LakeFormationConfiguration:   "LakeFormationConfiguration",
		Name:                         "Name",
		RecrawlPolicy:                "RecrawlPolicy",
		Role:                         "Role",
		Schedule:                     "Schedule",
		SchemaChangePolicy:           "SchemaChangePolicy",
		TablePrefix:                  "TablePrefix",
		Tags:                         "Tags",
		Targets:                      "Targets",
	}

	// AWS_Glue_Crawler__PropertiesSlice reports all the CloudFormation properties for AWS::Glue::Crawler.
	AWS_Glue_Crawler__PropertiesSlice = []string{
		AWS_Glue_Crawler__PropertiesMap.Classifiers,
		AWS_Glue_Crawler__PropertiesMap.Configuration,
		AWS_Glue_Crawler__PropertiesMap.CrawlerSecurityConfiguration,
		AWS_Glue_Crawler__PropertiesMap.DatabaseName,
		AWS_Glue_Crawler__PropertiesMap.Description,
		AWS_Glue_Crawler__PropertiesMap.LakeFormationConfiguration,
		AWS_Glue_Crawler__PropertiesMap.Name,
		AWS_Glue_Crawler__PropertiesMap.RecrawlPolicy,
		AWS_Glue_Crawler__PropertiesMap.Role,
		AWS_Glue_Crawler__PropertiesMap.Schedule,
		AWS_Glue_Crawler__PropertiesMap.SchemaChangePolicy,
		AWS_Glue_Crawler__PropertiesMap.TablePrefix,
		AWS_Glue_Crawler__PropertiesMap.Tags,
		AWS_Glue_Crawler__PropertiesMap.Targets,
	}
)

// AWS_Glue_Crawler is a binding for AWS::Glue::Crawler.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html
type AWS_Glue_Crawler struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Classifiers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-classifiers
	Classifiers cfz.ExpressionSlice[string] `json:"Classifiers,omitempty"`

	// Configuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-configuration
	Configuration cfz.Expression[string] `json:"Configuration,omitempty"`

	// CrawlerSecurityConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-crawlersecurityconfiguration
	CrawlerSecurityConfiguration cfz.Expression[string] `json:"CrawlerSecurityConfiguration,omitempty"`

	// DatabaseName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-databasename
	DatabaseName cfz.Expression[string] `json:"DatabaseName,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// LakeFormationConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-lakeformationconfiguration
	LakeFormationConfiguration cfz.Expression[AWS_Glue_Crawler_LakeFormationConfiguration] `json:"LakeFormationConfiguration,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RecrawlPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-recrawlpolicy
	RecrawlPolicy cfz.Expression[AWS_Glue_Crawler_RecrawlPolicy] `json:"RecrawlPolicy,omitempty"`

	// Role is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-role
	Role cfz.Expression[string] `json:"Role,omitempty"`

	// Schedule is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-schedule
	Schedule cfz.Expression[AWS_Glue_Crawler_Schedule] `json:"Schedule,omitempty"`

	// SchemaChangePolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-schemachangepolicy
	SchemaChangePolicy cfz.Expression[AWS_Glue_Crawler_SchemaChangePolicy] `json:"SchemaChangePolicy,omitempty"`

	// TablePrefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-tableprefix
	TablePrefix cfz.Expression[string] `json:"TablePrefix,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-tags
	Tags cfz.Expression[json.RawMessage] `json:"Tags,omitempty"`

	// Targets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-crawler.html#cfn-glue-crawler-targets
	Targets cfz.Expression[AWS_Glue_Crawler_Targets] `json:"Targets,omitempty"`
}

// New__AWS_Glue_Crawler initializes a new *AWS_Glue_Crawler.
func New__AWS_Glue_Crawler(logicalName string) *AWS_Glue_Crawler {
	return &AWS_Glue_Crawler{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Glue_Crawler) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Glue_Crawler) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Glue_Crawler) GetType() string {
	return AWS_Glue_Crawler__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Glue_Crawler) Set__LogicalName(v string) *AWS_Glue_Crawler {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Glue_Crawler) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Glue_Crawler {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Glue_Crawler) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Glue_Crawler {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Glue_Crawler) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Glue_Crawler {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Glue_Crawler) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Glue_Crawler {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Glue_Crawler) Set__RequestedOutputs(v []cfz.Output) *AWS_Glue_Crawler {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Glue_Crawler) Add__RequestedOutputs(v ...cfz.Output) *AWS_Glue_Crawler {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Classifiers updates property "Classifiers".
func (t *AWS_Glue_Crawler) Set__Classifiers(v cfz.ExpressionSlice[string]) *AWS_Glue_Crawler {
	t.Classifiers = v
	return t
}

// SetS__Classifiers updates property "Classifiers".
func (t *AWS_Glue_Crawler) SetS__Classifiers(v ...cfz.Expression[string]) *AWS_Glue_Crawler {
	t.Classifiers = cfz.S(v...)
	return t
}

// SetSV__Classifiers updates property "Classifiers".
func (t *AWS_Glue_Crawler) SetSV__Classifiers(v ...string) *AWS_Glue_Crawler {
	t.Classifiers = cfz.SV(v...)
	return t
}

// Set__Configuration updates property "Configuration".
func (t *AWS_Glue_Crawler) Set__Configuration(v cfz.Expression[string]) *AWS_Glue_Crawler {
	t.Configuration = v
	return t
}

// SetV__Configuration updates property "Configuration".
func (t *AWS_Glue_Crawler) SetV__Configuration(v string) *AWS_Glue_Crawler {
	t.Configuration = cfz.V(v)
	return t
}

// Set__CrawlerSecurityConfiguration updates property "CrawlerSecurityConfiguration".
func (t *AWS_Glue_Crawler) Set__CrawlerSecurityConfiguration(v cfz.Expression[string]) *AWS_Glue_Crawler {
	t.CrawlerSecurityConfiguration = v
	return t
}

// SetV__CrawlerSecurityConfiguration updates property "CrawlerSecurityConfiguration".
func (t *AWS_Glue_Crawler) SetV__CrawlerSecurityConfiguration(v string) *AWS_Glue_Crawler {
	t.CrawlerSecurityConfiguration = cfz.V(v)
	return t
}

// Set__DatabaseName updates property "DatabaseName".
func (t *AWS_Glue_Crawler) Set__DatabaseName(v cfz.Expression[string]) *AWS_Glue_Crawler {
	t.DatabaseName = v
	return t
}

// SetV__DatabaseName updates property "DatabaseName".
func (t *AWS_Glue_Crawler) SetV__DatabaseName(v string) *AWS_Glue_Crawler {
	t.DatabaseName = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Glue_Crawler) Set__Description(v cfz.Expression[string]) *AWS_Glue_Crawler {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Glue_Crawler) SetV__Description(v string) *AWS_Glue_Crawler {
	t.Description = cfz.V(v)
	return t
}

// Set__LakeFormationConfiguration updates property "LakeFormationConfiguration".
func (t *AWS_Glue_Crawler) Set__LakeFormationConfiguration(v cfz.Expression[AWS_Glue_Crawler_LakeFormationConfiguration]) *AWS_Glue_Crawler {
	t.LakeFormationConfiguration = v
	return t
}

// SetV__LakeFormationConfiguration updates property "LakeFormationConfiguration".
func (t *AWS_Glue_Crawler) SetV__LakeFormationConfiguration(v AWS_Glue_Crawler_LakeFormationConfiguration) *AWS_Glue_Crawler {
	t.LakeFormationConfiguration = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Glue_Crawler) Set__Name(v cfz.Expression[string]) *AWS_Glue_Crawler {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Glue_Crawler) SetV__Name(v string) *AWS_Glue_Crawler {
	t.Name = cfz.V(v)
	return t
}

// Set__RecrawlPolicy updates property "RecrawlPolicy".
func (t *AWS_Glue_Crawler) Set__RecrawlPolicy(v cfz.Expression[AWS_Glue_Crawler_RecrawlPolicy]) *AWS_Glue_Crawler {
	t.RecrawlPolicy = v
	return t
}

// SetV__RecrawlPolicy updates property "RecrawlPolicy".
func (t *AWS_Glue_Crawler) SetV__RecrawlPolicy(v AWS_Glue_Crawler_RecrawlPolicy) *AWS_Glue_Crawler {
	t.RecrawlPolicy = cfz.V(v)
	return t
}

// Set__Role updates property "Role".
func (t *AWS_Glue_Crawler) Set__Role(v cfz.Expression[string]) *AWS_Glue_Crawler {
	t.Role = v
	return t
}

// SetV__Role updates property "Role".
func (t *AWS_Glue_Crawler) SetV__Role(v string) *AWS_Glue_Crawler {
	t.Role = cfz.V(v)
	return t
}

// Set__Schedule updates property "Schedule".
func (t *AWS_Glue_Crawler) Set__Schedule(v cfz.Expression[AWS_Glue_Crawler_Schedule]) *AWS_Glue_Crawler {
	t.Schedule = v
	return t
}

// SetV__Schedule updates property "Schedule".
func (t *AWS_Glue_Crawler) SetV__Schedule(v AWS_Glue_Crawler_Schedule) *AWS_Glue_Crawler {
	t.Schedule = cfz.V(v)
	return t
}

// Set__SchemaChangePolicy updates property "SchemaChangePolicy".
func (t *AWS_Glue_Crawler) Set__SchemaChangePolicy(v cfz.Expression[AWS_Glue_Crawler_SchemaChangePolicy]) *AWS_Glue_Crawler {
	t.SchemaChangePolicy = v
	return t
}

// SetV__SchemaChangePolicy updates property "SchemaChangePolicy".
func (t *AWS_Glue_Crawler) SetV__SchemaChangePolicy(v AWS_Glue_Crawler_SchemaChangePolicy) *AWS_Glue_Crawler {
	t.SchemaChangePolicy = cfz.V(v)
	return t
}

// Set__TablePrefix updates property "TablePrefix".
func (t *AWS_Glue_Crawler) Set__TablePrefix(v cfz.Expression[string]) *AWS_Glue_Crawler {
	t.TablePrefix = v
	return t
}

// SetV__TablePrefix updates property "TablePrefix".
func (t *AWS_Glue_Crawler) SetV__TablePrefix(v string) *AWS_Glue_Crawler {
	t.TablePrefix = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Glue_Crawler) Set__Tags(v cfz.Expression[json.RawMessage]) *AWS_Glue_Crawler {
	t.Tags = v
	return t
}

// SetV__Tags updates property "Tags".
func (t *AWS_Glue_Crawler) SetV__Tags(v json.RawMessage) *AWS_Glue_Crawler {
	t.Tags = cfz.V(v)
	return t
}

// Set__Targets updates property "Targets".
func (t *AWS_Glue_Crawler) Set__Targets(v cfz.Expression[AWS_Glue_Crawler_Targets]) *AWS_Glue_Crawler {
	t.Targets = v
	return t
}

// SetV__Targets updates property "Targets".
func (t *AWS_Glue_Crawler) SetV__Targets(v AWS_Glue_Crawler_Targets) *AWS_Glue_Crawler {
	t.Targets = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Glue_Crawler) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Glue_Crawler) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Glue_Crawler) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Glue_Crawler

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Glue_Crawler) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
