// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_glue

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Glue_Classifier)(nil)
	_ cfz.Resource                   = (*AWS_Glue_Classifier)(nil)
)

const (
	// AWS_Glue_Classifier__Type is the CloudFormation type for AWS::Glue::Classifier.
	AWS_Glue_Classifier__Type = "AWS::Glue::Classifier"
)

var (
	// AWS_Glue_Classifier__PropertiesMap reports all the CloudFormation properties for AWS::Glue::Classifier.
	AWS_Glue_Classifier__PropertiesMap = struct {
		CsvClassifier  string
		GrokClassifier string
		JsonClassifier string
		XMLClassifier  string
	}{
		CsvClassifier:  "CsvClassifier",
		GrokClassifier: "GrokClassifier",
		JsonClassifier: "JsonClassifier",
		XMLClassifier:  "XMLClassifier",
	}

	// AWS_Glue_Classifier__PropertiesSlice reports all the CloudFormation properties for AWS::Glue::Classifier.
	AWS_Glue_Classifier__PropertiesSlice = []string{
		AWS_Glue_Classifier__PropertiesMap.CsvClassifier,
		AWS_Glue_Classifier__PropertiesMap.GrokClassifier,
		AWS_Glue_Classifier__PropertiesMap.JsonClassifier,
		AWS_Glue_Classifier__PropertiesMap.XMLClassifier,
	}
)

// AWS_Glue_Classifier is a binding for AWS::Glue::Classifier.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html
type AWS_Glue_Classifier struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CsvClassifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html#cfn-glue-classifier-csvclassifier
	CsvClassifier cfz.Expression[AWS_Glue_Classifier_CsvClassifier] `json:"CsvClassifier,omitempty"`

	// GrokClassifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html#cfn-glue-classifier-grokclassifier
	GrokClassifier cfz.Expression[AWS_Glue_Classifier_GrokClassifier] `json:"GrokClassifier,omitempty"`

	// JsonClassifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html#cfn-glue-classifier-jsonclassifier
	JsonClassifier cfz.Expression[AWS_Glue_Classifier_JsonClassifier] `json:"JsonClassifier,omitempty"`

	// XMLClassifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html#cfn-glue-classifier-xmlclassifier
	XMLClassifier cfz.Expression[AWS_Glue_Classifier_XMLClassifier] `json:"XMLClassifier,omitempty"`
}

// New__AWS_Glue_Classifier initializes a new *AWS_Glue_Classifier.
func New__AWS_Glue_Classifier(logicalName string) *AWS_Glue_Classifier {
	return &AWS_Glue_Classifier{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Glue_Classifier) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Glue_Classifier) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Glue_Classifier) GetType() string {
	return AWS_Glue_Classifier__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Glue_Classifier) Set__LogicalName(v string) *AWS_Glue_Classifier {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Glue_Classifier) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Glue_Classifier {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Glue_Classifier) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Glue_Classifier {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Glue_Classifier) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Glue_Classifier {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Glue_Classifier) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Glue_Classifier {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Glue_Classifier) Set__RequestedOutputs(v []cfz.Output) *AWS_Glue_Classifier {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Glue_Classifier) Add__RequestedOutputs(v ...cfz.Output) *AWS_Glue_Classifier {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CsvClassifier updates property "CsvClassifier".
func (t *AWS_Glue_Classifier) Set__CsvClassifier(v cfz.Expression[AWS_Glue_Classifier_CsvClassifier]) *AWS_Glue_Classifier {
	t.CsvClassifier = v
	return t
}

// SetV__CsvClassifier updates property "CsvClassifier".
func (t *AWS_Glue_Classifier) SetV__CsvClassifier(v AWS_Glue_Classifier_CsvClassifier) *AWS_Glue_Classifier {
	t.CsvClassifier = cfz.V(v)
	return t
}

// Set__GrokClassifier updates property "GrokClassifier".
func (t *AWS_Glue_Classifier) Set__GrokClassifier(v cfz.Expression[AWS_Glue_Classifier_GrokClassifier]) *AWS_Glue_Classifier {
	t.GrokClassifier = v
	return t
}

// SetV__GrokClassifier updates property "GrokClassifier".
func (t *AWS_Glue_Classifier) SetV__GrokClassifier(v AWS_Glue_Classifier_GrokClassifier) *AWS_Glue_Classifier {
	t.GrokClassifier = cfz.V(v)
	return t
}

// Set__JsonClassifier updates property "JsonClassifier".
func (t *AWS_Glue_Classifier) Set__JsonClassifier(v cfz.Expression[AWS_Glue_Classifier_JsonClassifier]) *AWS_Glue_Classifier {
	t.JsonClassifier = v
	return t
}

// SetV__JsonClassifier updates property "JsonClassifier".
func (t *AWS_Glue_Classifier) SetV__JsonClassifier(v AWS_Glue_Classifier_JsonClassifier) *AWS_Glue_Classifier {
	t.JsonClassifier = cfz.V(v)
	return t
}

// Set__XMLClassifier updates property "XMLClassifier".
func (t *AWS_Glue_Classifier) Set__XMLClassifier(v cfz.Expression[AWS_Glue_Classifier_XMLClassifier]) *AWS_Glue_Classifier {
	t.XMLClassifier = v
	return t
}

// SetV__XMLClassifier updates property "XMLClassifier".
func (t *AWS_Glue_Classifier) SetV__XMLClassifier(v AWS_Glue_Classifier_XMLClassifier) *AWS_Glue_Classifier {
	t.XMLClassifier = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Glue_Classifier) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Glue_Classifier) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Glue_Classifier) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Glue_Classifier

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Glue_Classifier) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
