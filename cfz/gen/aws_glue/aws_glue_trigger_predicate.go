// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_glue

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Glue_Trigger_Predicate__Type is the CloudFormation type for AWS::Glue::Trigger.Predicate.
	AWS_Glue_Trigger_Predicate__Type = "AWS::Glue::Trigger.Predicate"
)

var (
	// AWS_Glue_Trigger_Predicate__PropertiesMap reports all the CloudFormation properties for AWS::Glue::Trigger.Predicate.
	AWS_Glue_Trigger_Predicate__PropertiesMap = struct {
		Conditions string
		Logical    string
	}{
		Conditions: "Conditions",
		Logical:    "Logical",
	}

	// AWS_Glue_Trigger_Predicate__PropertiesSlice reports all the CloudFormation properties for AWS::Glue::Trigger.Predicate.
	AWS_Glue_Trigger_Predicate__PropertiesSlice = []string{
		AWS_Glue_Trigger_Predicate__PropertiesMap.Conditions,
		AWS_Glue_Trigger_Predicate__PropertiesMap.Logical,
	}
)

// AWS_Glue_Trigger_Predicate is a binding for AWS::Glue::Trigger.Predicate.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-trigger-predicate.html
type AWS_Glue_Trigger_Predicate struct {
	// Conditions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-trigger-predicate.html#cfn-glue-trigger-predicate-conditions
	Conditions cfz.ExpressionSlice[AWS_Glue_Trigger_Condition] `json:"Conditions,omitempty"`

	// Logical is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-trigger-predicate.html#cfn-glue-trigger-predicate-logical
	Logical cfz.Expression[string] `json:"Logical,omitempty"`
}

// New__AWS_Glue_Trigger_Predicate initializes a new AWS_Glue_Trigger_Predicate.
func New__AWS_Glue_Trigger_Predicate() AWS_Glue_Trigger_Predicate {
	return AWS_Glue_Trigger_Predicate{}
}

// GetType returns the CloudFormation type.
func (AWS_Glue_Trigger_Predicate) GetType() string {
	return AWS_Glue_Trigger_Predicate__Type
}

// Set__Conditions updates property "Conditions".
func (t AWS_Glue_Trigger_Predicate) Set__Conditions(v cfz.ExpressionSlice[AWS_Glue_Trigger_Condition]) AWS_Glue_Trigger_Predicate {
	t.Conditions = v
	return t
}

// SetS__Conditions updates property "Conditions".
func (t AWS_Glue_Trigger_Predicate) SetS__Conditions(v ...cfz.Expression[AWS_Glue_Trigger_Condition]) AWS_Glue_Trigger_Predicate {
	t.Conditions = cfz.S(v...)
	return t
}

// SetSV__Conditions updates property "Conditions".
func (t AWS_Glue_Trigger_Predicate) SetSV__Conditions(v ...AWS_Glue_Trigger_Condition) AWS_Glue_Trigger_Predicate {
	t.Conditions = cfz.SV(v...)
	return t
}

// Set__Logical updates property "Logical".
func (t AWS_Glue_Trigger_Predicate) Set__Logical(v cfz.Expression[string]) AWS_Glue_Trigger_Predicate {
	t.Logical = v
	return t
}

// SetV__Logical updates property "Logical".
func (t AWS_Glue_Trigger_Predicate) SetV__Logical(v string) AWS_Glue_Trigger_Predicate {
	t.Logical = cfz.V(v)
	return t
}
