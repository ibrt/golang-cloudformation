// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_glue

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Glue_Database_DatabaseIdentifier__Type is the CloudFormation type for AWS::Glue::Database.DatabaseIdentifier.
	AWS_Glue_Database_DatabaseIdentifier__Type = "AWS::Glue::Database.DatabaseIdentifier"
)

var (
	// AWS_Glue_Database_DatabaseIdentifier__PropertiesMap reports all the CloudFormation properties for AWS::Glue::Database.DatabaseIdentifier.
	AWS_Glue_Database_DatabaseIdentifier__PropertiesMap = struct {
		CatalogId    string
		DatabaseName string
		Region       string
	}{
		CatalogId:    "CatalogId",
		DatabaseName: "DatabaseName",
		Region:       "Region",
	}

	// AWS_Glue_Database_DatabaseIdentifier__PropertiesSlice reports all the CloudFormation properties for AWS::Glue::Database.DatabaseIdentifier.
	AWS_Glue_Database_DatabaseIdentifier__PropertiesSlice = []string{
		AWS_Glue_Database_DatabaseIdentifier__PropertiesMap.CatalogId,
		AWS_Glue_Database_DatabaseIdentifier__PropertiesMap.DatabaseName,
		AWS_Glue_Database_DatabaseIdentifier__PropertiesMap.Region,
	}
)

// AWS_Glue_Database_DatabaseIdentifier is a binding for AWS::Glue::Database.DatabaseIdentifier.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-database-databaseidentifier.html
type AWS_Glue_Database_DatabaseIdentifier struct {
	// CatalogId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-database-databaseidentifier.html#cfn-glue-database-databaseidentifier-catalogid
	CatalogId cfz.Expression[string] `json:"CatalogId,omitempty"`

	// DatabaseName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-database-databaseidentifier.html#cfn-glue-database-databaseidentifier-databasename
	DatabaseName cfz.Expression[string] `json:"DatabaseName,omitempty"`

	// Region is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-database-databaseidentifier.html#cfn-glue-database-databaseidentifier-region
	Region cfz.Expression[string] `json:"Region,omitempty"`
}

// New__AWS_Glue_Database_DatabaseIdentifier initializes a new AWS_Glue_Database_DatabaseIdentifier.
func New__AWS_Glue_Database_DatabaseIdentifier() AWS_Glue_Database_DatabaseIdentifier {
	return AWS_Glue_Database_DatabaseIdentifier{}
}

// GetType returns the CloudFormation type.
func (AWS_Glue_Database_DatabaseIdentifier) GetType() string {
	return AWS_Glue_Database_DatabaseIdentifier__Type
}

// Set__CatalogId updates property "CatalogId".
func (t AWS_Glue_Database_DatabaseIdentifier) Set__CatalogId(v cfz.Expression[string]) AWS_Glue_Database_DatabaseIdentifier {
	t.CatalogId = v
	return t
}

// SetV__CatalogId updates property "CatalogId".
func (t AWS_Glue_Database_DatabaseIdentifier) SetV__CatalogId(v string) AWS_Glue_Database_DatabaseIdentifier {
	t.CatalogId = cfz.V(v)
	return t
}

// Set__DatabaseName updates property "DatabaseName".
func (t AWS_Glue_Database_DatabaseIdentifier) Set__DatabaseName(v cfz.Expression[string]) AWS_Glue_Database_DatabaseIdentifier {
	t.DatabaseName = v
	return t
}

// SetV__DatabaseName updates property "DatabaseName".
func (t AWS_Glue_Database_DatabaseIdentifier) SetV__DatabaseName(v string) AWS_Glue_Database_DatabaseIdentifier {
	t.DatabaseName = cfz.V(v)
	return t
}

// Set__Region updates property "Region".
func (t AWS_Glue_Database_DatabaseIdentifier) Set__Region(v cfz.Expression[string]) AWS_Glue_Database_DatabaseIdentifier {
	t.Region = v
	return t
}

// SetV__Region updates property "Region".
func (t AWS_Glue_Database_DatabaseIdentifier) SetV__Region(v string) AWS_Glue_Database_DatabaseIdentifier {
	t.Region = cfz.V(v)
	return t
}
