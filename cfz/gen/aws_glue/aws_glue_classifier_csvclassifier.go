// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_glue

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Glue_Classifier_CsvClassifier__Type is the CloudFormation type for AWS::Glue::Classifier.CsvClassifier.
	AWS_Glue_Classifier_CsvClassifier__Type = "AWS::Glue::Classifier.CsvClassifier"
)

var (
	// AWS_Glue_Classifier_CsvClassifier__PropertiesMap reports all the CloudFormation properties for AWS::Glue::Classifier.CsvClassifier.
	AWS_Glue_Classifier_CsvClassifier__PropertiesMap = struct {
		AllowSingleColumn        string
		ContainsCustomDatatype   string
		ContainsHeader           string
		CustomDatatypeConfigured string
		Delimiter                string
		DisableValueTrimming     string
		Header                   string
		Name                     string
		QuoteSymbol              string
	}{
		AllowSingleColumn:        "AllowSingleColumn",
		ContainsCustomDatatype:   "ContainsCustomDatatype",
		ContainsHeader:           "ContainsHeader",
		CustomDatatypeConfigured: "CustomDatatypeConfigured",
		Delimiter:                "Delimiter",
		DisableValueTrimming:     "DisableValueTrimming",
		Header:                   "Header",
		Name:                     "Name",
		QuoteSymbol:              "QuoteSymbol",
	}

	// AWS_Glue_Classifier_CsvClassifier__PropertiesSlice reports all the CloudFormation properties for AWS::Glue::Classifier.CsvClassifier.
	AWS_Glue_Classifier_CsvClassifier__PropertiesSlice = []string{
		AWS_Glue_Classifier_CsvClassifier__PropertiesMap.AllowSingleColumn,
		AWS_Glue_Classifier_CsvClassifier__PropertiesMap.ContainsCustomDatatype,
		AWS_Glue_Classifier_CsvClassifier__PropertiesMap.ContainsHeader,
		AWS_Glue_Classifier_CsvClassifier__PropertiesMap.CustomDatatypeConfigured,
		AWS_Glue_Classifier_CsvClassifier__PropertiesMap.Delimiter,
		AWS_Glue_Classifier_CsvClassifier__PropertiesMap.DisableValueTrimming,
		AWS_Glue_Classifier_CsvClassifier__PropertiesMap.Header,
		AWS_Glue_Classifier_CsvClassifier__PropertiesMap.Name,
		AWS_Glue_Classifier_CsvClassifier__PropertiesMap.QuoteSymbol,
	}
)

// AWS_Glue_Classifier_CsvClassifier is a binding for AWS::Glue::Classifier.CsvClassifier.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html
type AWS_Glue_Classifier_CsvClassifier struct {
	// AllowSingleColumn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html#cfn-glue-classifier-csvclassifier-allowsinglecolumn
	AllowSingleColumn cfz.Expression[bool] `json:"AllowSingleColumn,omitempty"`

	// ContainsCustomDatatype is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html#cfn-glue-classifier-csvclassifier-containscustomdatatype
	ContainsCustomDatatype cfz.ExpressionSlice[string] `json:"ContainsCustomDatatype,omitempty"`

	// ContainsHeader is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html#cfn-glue-classifier-csvclassifier-containsheader
	ContainsHeader cfz.Expression[string] `json:"ContainsHeader,omitempty"`

	// CustomDatatypeConfigured is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html#cfn-glue-classifier-csvclassifier-customdatatypeconfigured
	CustomDatatypeConfigured cfz.Expression[bool] `json:"CustomDatatypeConfigured,omitempty"`

	// Delimiter is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html#cfn-glue-classifier-csvclassifier-delimiter
	Delimiter cfz.Expression[string] `json:"Delimiter,omitempty"`

	// DisableValueTrimming is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html#cfn-glue-classifier-csvclassifier-disablevaluetrimming
	DisableValueTrimming cfz.Expression[bool] `json:"DisableValueTrimming,omitempty"`

	// Header is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html#cfn-glue-classifier-csvclassifier-header
	Header cfz.ExpressionSlice[string] `json:"Header,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html#cfn-glue-classifier-csvclassifier-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// QuoteSymbol is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-classifier-csvclassifier.html#cfn-glue-classifier-csvclassifier-quotesymbol
	QuoteSymbol cfz.Expression[string] `json:"QuoteSymbol,omitempty"`
}

// New__AWS_Glue_Classifier_CsvClassifier initializes a new AWS_Glue_Classifier_CsvClassifier.
func New__AWS_Glue_Classifier_CsvClassifier() AWS_Glue_Classifier_CsvClassifier {
	return AWS_Glue_Classifier_CsvClassifier{}
}

// GetType returns the CloudFormation type.
func (AWS_Glue_Classifier_CsvClassifier) GetType() string {
	return AWS_Glue_Classifier_CsvClassifier__Type
}

// Set__AllowSingleColumn updates property "AllowSingleColumn".
func (t AWS_Glue_Classifier_CsvClassifier) Set__AllowSingleColumn(v cfz.Expression[bool]) AWS_Glue_Classifier_CsvClassifier {
	t.AllowSingleColumn = v
	return t
}

// SetV__AllowSingleColumn updates property "AllowSingleColumn".
func (t AWS_Glue_Classifier_CsvClassifier) SetV__AllowSingleColumn(v bool) AWS_Glue_Classifier_CsvClassifier {
	t.AllowSingleColumn = cfz.V(v)
	return t
}

// Set__ContainsCustomDatatype updates property "ContainsCustomDatatype".
func (t AWS_Glue_Classifier_CsvClassifier) Set__ContainsCustomDatatype(v cfz.ExpressionSlice[string]) AWS_Glue_Classifier_CsvClassifier {
	t.ContainsCustomDatatype = v
	return t
}

// SetS__ContainsCustomDatatype updates property "ContainsCustomDatatype".
func (t AWS_Glue_Classifier_CsvClassifier) SetS__ContainsCustomDatatype(v ...cfz.Expression[string]) AWS_Glue_Classifier_CsvClassifier {
	t.ContainsCustomDatatype = cfz.S(v...)
	return t
}

// SetSV__ContainsCustomDatatype updates property "ContainsCustomDatatype".
func (t AWS_Glue_Classifier_CsvClassifier) SetSV__ContainsCustomDatatype(v ...string) AWS_Glue_Classifier_CsvClassifier {
	t.ContainsCustomDatatype = cfz.SV(v...)
	return t
}

// Set__ContainsHeader updates property "ContainsHeader".
func (t AWS_Glue_Classifier_CsvClassifier) Set__ContainsHeader(v cfz.Expression[string]) AWS_Glue_Classifier_CsvClassifier {
	t.ContainsHeader = v
	return t
}

// SetV__ContainsHeader updates property "ContainsHeader".
func (t AWS_Glue_Classifier_CsvClassifier) SetV__ContainsHeader(v string) AWS_Glue_Classifier_CsvClassifier {
	t.ContainsHeader = cfz.V(v)
	return t
}

// Set__CustomDatatypeConfigured updates property "CustomDatatypeConfigured".
func (t AWS_Glue_Classifier_CsvClassifier) Set__CustomDatatypeConfigured(v cfz.Expression[bool]) AWS_Glue_Classifier_CsvClassifier {
	t.CustomDatatypeConfigured = v
	return t
}

// SetV__CustomDatatypeConfigured updates property "CustomDatatypeConfigured".
func (t AWS_Glue_Classifier_CsvClassifier) SetV__CustomDatatypeConfigured(v bool) AWS_Glue_Classifier_CsvClassifier {
	t.CustomDatatypeConfigured = cfz.V(v)
	return t
}

// Set__Delimiter updates property "Delimiter".
func (t AWS_Glue_Classifier_CsvClassifier) Set__Delimiter(v cfz.Expression[string]) AWS_Glue_Classifier_CsvClassifier {
	t.Delimiter = v
	return t
}

// SetV__Delimiter updates property "Delimiter".
func (t AWS_Glue_Classifier_CsvClassifier) SetV__Delimiter(v string) AWS_Glue_Classifier_CsvClassifier {
	t.Delimiter = cfz.V(v)
	return t
}

// Set__DisableValueTrimming updates property "DisableValueTrimming".
func (t AWS_Glue_Classifier_CsvClassifier) Set__DisableValueTrimming(v cfz.Expression[bool]) AWS_Glue_Classifier_CsvClassifier {
	t.DisableValueTrimming = v
	return t
}

// SetV__DisableValueTrimming updates property "DisableValueTrimming".
func (t AWS_Glue_Classifier_CsvClassifier) SetV__DisableValueTrimming(v bool) AWS_Glue_Classifier_CsvClassifier {
	t.DisableValueTrimming = cfz.V(v)
	return t
}

// Set__Header updates property "Header".
func (t AWS_Glue_Classifier_CsvClassifier) Set__Header(v cfz.ExpressionSlice[string]) AWS_Glue_Classifier_CsvClassifier {
	t.Header = v
	return t
}

// SetS__Header updates property "Header".
func (t AWS_Glue_Classifier_CsvClassifier) SetS__Header(v ...cfz.Expression[string]) AWS_Glue_Classifier_CsvClassifier {
	t.Header = cfz.S(v...)
	return t
}

// SetSV__Header updates property "Header".
func (t AWS_Glue_Classifier_CsvClassifier) SetSV__Header(v ...string) AWS_Glue_Classifier_CsvClassifier {
	t.Header = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t AWS_Glue_Classifier_CsvClassifier) Set__Name(v cfz.Expression[string]) AWS_Glue_Classifier_CsvClassifier {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t AWS_Glue_Classifier_CsvClassifier) SetV__Name(v string) AWS_Glue_Classifier_CsvClassifier {
	t.Name = cfz.V(v)
	return t
}

// Set__QuoteSymbol updates property "QuoteSymbol".
func (t AWS_Glue_Classifier_CsvClassifier) Set__QuoteSymbol(v cfz.Expression[string]) AWS_Glue_Classifier_CsvClassifier {
	t.QuoteSymbol = v
	return t
}

// SetV__QuoteSymbol updates property "QuoteSymbol".
func (t AWS_Glue_Classifier_CsvClassifier) SetV__QuoteSymbol(v string) AWS_Glue_Classifier_CsvClassifier {
	t.QuoteSymbol = cfz.V(v)
	return t
}
