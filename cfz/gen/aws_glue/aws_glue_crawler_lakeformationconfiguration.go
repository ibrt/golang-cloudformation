// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_glue

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Glue_Crawler_LakeFormationConfiguration__Type is the CloudFormation type for AWS::Glue::Crawler.LakeFormationConfiguration.
	AWS_Glue_Crawler_LakeFormationConfiguration__Type = "AWS::Glue::Crawler.LakeFormationConfiguration"
)

var (
	// AWS_Glue_Crawler_LakeFormationConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::Glue::Crawler.LakeFormationConfiguration.
	AWS_Glue_Crawler_LakeFormationConfiguration__PropertiesMap = struct {
		AccountId                   string
		UseLakeFormationCredentials string
	}{
		AccountId:                   "AccountId",
		UseLakeFormationCredentials: "UseLakeFormationCredentials",
	}

	// AWS_Glue_Crawler_LakeFormationConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::Glue::Crawler.LakeFormationConfiguration.
	AWS_Glue_Crawler_LakeFormationConfiguration__PropertiesSlice = []string{
		AWS_Glue_Crawler_LakeFormationConfiguration__PropertiesMap.AccountId,
		AWS_Glue_Crawler_LakeFormationConfiguration__PropertiesMap.UseLakeFormationCredentials,
	}
)

// AWS_Glue_Crawler_LakeFormationConfiguration is a binding for AWS::Glue::Crawler.LakeFormationConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-crawler-lakeformationconfiguration.html
type AWS_Glue_Crawler_LakeFormationConfiguration struct {
	// AccountId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-crawler-lakeformationconfiguration.html#cfn-glue-crawler-lakeformationconfiguration-accountid
	AccountId cfz.Expression[string] `json:"AccountId,omitempty"`

	// UseLakeFormationCredentials is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-crawler-lakeformationconfiguration.html#cfn-glue-crawler-lakeformationconfiguration-uselakeformationcredentials
	UseLakeFormationCredentials cfz.Expression[bool] `json:"UseLakeFormationCredentials,omitempty"`
}

// New__AWS_Glue_Crawler_LakeFormationConfiguration initializes a new AWS_Glue_Crawler_LakeFormationConfiguration.
func New__AWS_Glue_Crawler_LakeFormationConfiguration() AWS_Glue_Crawler_LakeFormationConfiguration {
	return AWS_Glue_Crawler_LakeFormationConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_Glue_Crawler_LakeFormationConfiguration) GetType() string {
	return AWS_Glue_Crawler_LakeFormationConfiguration__Type
}

// Set__AccountId updates property "AccountId".
func (t AWS_Glue_Crawler_LakeFormationConfiguration) Set__AccountId(v cfz.Expression[string]) AWS_Glue_Crawler_LakeFormationConfiguration {
	t.AccountId = v
	return t
}

// SetV__AccountId updates property "AccountId".
func (t AWS_Glue_Crawler_LakeFormationConfiguration) SetV__AccountId(v string) AWS_Glue_Crawler_LakeFormationConfiguration {
	t.AccountId = cfz.V(v)
	return t
}

// Set__UseLakeFormationCredentials updates property "UseLakeFormationCredentials".
func (t AWS_Glue_Crawler_LakeFormationConfiguration) Set__UseLakeFormationCredentials(v cfz.Expression[bool]) AWS_Glue_Crawler_LakeFormationConfiguration {
	t.UseLakeFormationCredentials = v
	return t
}

// SetV__UseLakeFormationCredentials updates property "UseLakeFormationCredentials".
func (t AWS_Glue_Crawler_LakeFormationConfiguration) SetV__UseLakeFormationCredentials(v bool) AWS_Glue_Crawler_LakeFormationConfiguration {
	t.UseLakeFormationCredentials = cfz.V(v)
	return t
}
