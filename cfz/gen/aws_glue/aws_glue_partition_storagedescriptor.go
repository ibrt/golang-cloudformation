// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_glue

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Glue_Partition_StorageDescriptor__Type is the CloudFormation type for AWS::Glue::Partition.StorageDescriptor.
	AWS_Glue_Partition_StorageDescriptor__Type = "AWS::Glue::Partition.StorageDescriptor"
)

var (
	// AWS_Glue_Partition_StorageDescriptor__PropertiesMap reports all the CloudFormation properties for AWS::Glue::Partition.StorageDescriptor.
	AWS_Glue_Partition_StorageDescriptor__PropertiesMap = struct {
		BucketColumns          string
		Columns                string
		Compressed             string
		InputFormat            string
		Location               string
		NumberOfBuckets        string
		OutputFormat           string
		Parameters             string
		SchemaReference        string
		SerdeInfo              string
		SkewedInfo             string
		SortColumns            string
		StoredAsSubDirectories string
	}{
		BucketColumns:          "BucketColumns",
		Columns:                "Columns",
		Compressed:             "Compressed",
		InputFormat:            "InputFormat",
		Location:               "Location",
		NumberOfBuckets:        "NumberOfBuckets",
		OutputFormat:           "OutputFormat",
		Parameters:             "Parameters",
		SchemaReference:        "SchemaReference",
		SerdeInfo:              "SerdeInfo",
		SkewedInfo:             "SkewedInfo",
		SortColumns:            "SortColumns",
		StoredAsSubDirectories: "StoredAsSubDirectories",
	}

	// AWS_Glue_Partition_StorageDescriptor__PropertiesSlice reports all the CloudFormation properties for AWS::Glue::Partition.StorageDescriptor.
	AWS_Glue_Partition_StorageDescriptor__PropertiesSlice = []string{
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.BucketColumns,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.Columns,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.Compressed,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.InputFormat,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.Location,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.NumberOfBuckets,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.OutputFormat,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.Parameters,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.SchemaReference,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.SerdeInfo,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.SkewedInfo,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.SortColumns,
		AWS_Glue_Partition_StorageDescriptor__PropertiesMap.StoredAsSubDirectories,
	}
)

// AWS_Glue_Partition_StorageDescriptor is a binding for AWS::Glue::Partition.StorageDescriptor.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html
type AWS_Glue_Partition_StorageDescriptor struct {
	// BucketColumns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-bucketcolumns
	BucketColumns cfz.ExpressionSlice[string] `json:"BucketColumns,omitempty"`

	// Columns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-columns
	Columns cfz.ExpressionSlice[AWS_Glue_Partition_Column] `json:"Columns,omitempty"`

	// Compressed is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-compressed
	Compressed cfz.Expression[bool] `json:"Compressed,omitempty"`

	// InputFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-inputformat
	InputFormat cfz.Expression[string] `json:"InputFormat,omitempty"`

	// Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-location
	Location cfz.Expression[string] `json:"Location,omitempty"`

	// NumberOfBuckets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-numberofbuckets
	NumberOfBuckets cfz.Expression[int32] `json:"NumberOfBuckets,omitempty"`

	// OutputFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-outputformat
	OutputFormat cfz.Expression[string] `json:"OutputFormat,omitempty"`

	// Parameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-parameters
	Parameters cfz.Expression[json.RawMessage] `json:"Parameters,omitempty"`

	// SchemaReference is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-schemareference
	SchemaReference cfz.Expression[AWS_Glue_Partition_SchemaReference] `json:"SchemaReference,omitempty"`

	// SerdeInfo is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-serdeinfo
	SerdeInfo cfz.Expression[AWS_Glue_Partition_SerdeInfo] `json:"SerdeInfo,omitempty"`

	// SkewedInfo is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-skewedinfo
	SkewedInfo cfz.Expression[AWS_Glue_Partition_SkewedInfo] `json:"SkewedInfo,omitempty"`

	// SortColumns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-sortcolumns
	SortColumns cfz.ExpressionSlice[AWS_Glue_Partition_Order] `json:"SortColumns,omitempty"`

	// StoredAsSubDirectories is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-glue-partition-storagedescriptor.html#cfn-glue-partition-storagedescriptor-storedassubdirectories
	StoredAsSubDirectories cfz.Expression[bool] `json:"StoredAsSubDirectories,omitempty"`
}

// New__AWS_Glue_Partition_StorageDescriptor initializes a new AWS_Glue_Partition_StorageDescriptor.
func New__AWS_Glue_Partition_StorageDescriptor() AWS_Glue_Partition_StorageDescriptor {
	return AWS_Glue_Partition_StorageDescriptor{}
}

// GetType returns the CloudFormation type.
func (AWS_Glue_Partition_StorageDescriptor) GetType() string {
	return AWS_Glue_Partition_StorageDescriptor__Type
}

// Set__BucketColumns updates property "BucketColumns".
func (t AWS_Glue_Partition_StorageDescriptor) Set__BucketColumns(v cfz.ExpressionSlice[string]) AWS_Glue_Partition_StorageDescriptor {
	t.BucketColumns = v
	return t
}

// SetS__BucketColumns updates property "BucketColumns".
func (t AWS_Glue_Partition_StorageDescriptor) SetS__BucketColumns(v ...cfz.Expression[string]) AWS_Glue_Partition_StorageDescriptor {
	t.BucketColumns = cfz.S(v...)
	return t
}

// SetSV__BucketColumns updates property "BucketColumns".
func (t AWS_Glue_Partition_StorageDescriptor) SetSV__BucketColumns(v ...string) AWS_Glue_Partition_StorageDescriptor {
	t.BucketColumns = cfz.SV(v...)
	return t
}

// Set__Columns updates property "Columns".
func (t AWS_Glue_Partition_StorageDescriptor) Set__Columns(v cfz.ExpressionSlice[AWS_Glue_Partition_Column]) AWS_Glue_Partition_StorageDescriptor {
	t.Columns = v
	return t
}

// SetS__Columns updates property "Columns".
func (t AWS_Glue_Partition_StorageDescriptor) SetS__Columns(v ...cfz.Expression[AWS_Glue_Partition_Column]) AWS_Glue_Partition_StorageDescriptor {
	t.Columns = cfz.S(v...)
	return t
}

// SetSV__Columns updates property "Columns".
func (t AWS_Glue_Partition_StorageDescriptor) SetSV__Columns(v ...AWS_Glue_Partition_Column) AWS_Glue_Partition_StorageDescriptor {
	t.Columns = cfz.SV(v...)
	return t
}

// Set__Compressed updates property "Compressed".
func (t AWS_Glue_Partition_StorageDescriptor) Set__Compressed(v cfz.Expression[bool]) AWS_Glue_Partition_StorageDescriptor {
	t.Compressed = v
	return t
}

// SetV__Compressed updates property "Compressed".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__Compressed(v bool) AWS_Glue_Partition_StorageDescriptor {
	t.Compressed = cfz.V(v)
	return t
}

// Set__InputFormat updates property "InputFormat".
func (t AWS_Glue_Partition_StorageDescriptor) Set__InputFormat(v cfz.Expression[string]) AWS_Glue_Partition_StorageDescriptor {
	t.InputFormat = v
	return t
}

// SetV__InputFormat updates property "InputFormat".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__InputFormat(v string) AWS_Glue_Partition_StorageDescriptor {
	t.InputFormat = cfz.V(v)
	return t
}

// Set__Location updates property "Location".
func (t AWS_Glue_Partition_StorageDescriptor) Set__Location(v cfz.Expression[string]) AWS_Glue_Partition_StorageDescriptor {
	t.Location = v
	return t
}

// SetV__Location updates property "Location".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__Location(v string) AWS_Glue_Partition_StorageDescriptor {
	t.Location = cfz.V(v)
	return t
}

// Set__NumberOfBuckets updates property "NumberOfBuckets".
func (t AWS_Glue_Partition_StorageDescriptor) Set__NumberOfBuckets(v cfz.Expression[int32]) AWS_Glue_Partition_StorageDescriptor {
	t.NumberOfBuckets = v
	return t
}

// SetV__NumberOfBuckets updates property "NumberOfBuckets".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__NumberOfBuckets(v int32) AWS_Glue_Partition_StorageDescriptor {
	t.NumberOfBuckets = cfz.V(v)
	return t
}

// Set__OutputFormat updates property "OutputFormat".
func (t AWS_Glue_Partition_StorageDescriptor) Set__OutputFormat(v cfz.Expression[string]) AWS_Glue_Partition_StorageDescriptor {
	t.OutputFormat = v
	return t
}

// SetV__OutputFormat updates property "OutputFormat".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__OutputFormat(v string) AWS_Glue_Partition_StorageDescriptor {
	t.OutputFormat = cfz.V(v)
	return t
}

// Set__Parameters updates property "Parameters".
func (t AWS_Glue_Partition_StorageDescriptor) Set__Parameters(v cfz.Expression[json.RawMessage]) AWS_Glue_Partition_StorageDescriptor {
	t.Parameters = v
	return t
}

// SetV__Parameters updates property "Parameters".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__Parameters(v json.RawMessage) AWS_Glue_Partition_StorageDescriptor {
	t.Parameters = cfz.V(v)
	return t
}

// Set__SchemaReference updates property "SchemaReference".
func (t AWS_Glue_Partition_StorageDescriptor) Set__SchemaReference(v cfz.Expression[AWS_Glue_Partition_SchemaReference]) AWS_Glue_Partition_StorageDescriptor {
	t.SchemaReference = v
	return t
}

// SetV__SchemaReference updates property "SchemaReference".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__SchemaReference(v AWS_Glue_Partition_SchemaReference) AWS_Glue_Partition_StorageDescriptor {
	t.SchemaReference = cfz.V(v)
	return t
}

// Set__SerdeInfo updates property "SerdeInfo".
func (t AWS_Glue_Partition_StorageDescriptor) Set__SerdeInfo(v cfz.Expression[AWS_Glue_Partition_SerdeInfo]) AWS_Glue_Partition_StorageDescriptor {
	t.SerdeInfo = v
	return t
}

// SetV__SerdeInfo updates property "SerdeInfo".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__SerdeInfo(v AWS_Glue_Partition_SerdeInfo) AWS_Glue_Partition_StorageDescriptor {
	t.SerdeInfo = cfz.V(v)
	return t
}

// Set__SkewedInfo updates property "SkewedInfo".
func (t AWS_Glue_Partition_StorageDescriptor) Set__SkewedInfo(v cfz.Expression[AWS_Glue_Partition_SkewedInfo]) AWS_Glue_Partition_StorageDescriptor {
	t.SkewedInfo = v
	return t
}

// SetV__SkewedInfo updates property "SkewedInfo".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__SkewedInfo(v AWS_Glue_Partition_SkewedInfo) AWS_Glue_Partition_StorageDescriptor {
	t.SkewedInfo = cfz.V(v)
	return t
}

// Set__SortColumns updates property "SortColumns".
func (t AWS_Glue_Partition_StorageDescriptor) Set__SortColumns(v cfz.ExpressionSlice[AWS_Glue_Partition_Order]) AWS_Glue_Partition_StorageDescriptor {
	t.SortColumns = v
	return t
}

// SetS__SortColumns updates property "SortColumns".
func (t AWS_Glue_Partition_StorageDescriptor) SetS__SortColumns(v ...cfz.Expression[AWS_Glue_Partition_Order]) AWS_Glue_Partition_StorageDescriptor {
	t.SortColumns = cfz.S(v...)
	return t
}

// SetSV__SortColumns updates property "SortColumns".
func (t AWS_Glue_Partition_StorageDescriptor) SetSV__SortColumns(v ...AWS_Glue_Partition_Order) AWS_Glue_Partition_StorageDescriptor {
	t.SortColumns = cfz.SV(v...)
	return t
}

// Set__StoredAsSubDirectories updates property "StoredAsSubDirectories".
func (t AWS_Glue_Partition_StorageDescriptor) Set__StoredAsSubDirectories(v cfz.Expression[bool]) AWS_Glue_Partition_StorageDescriptor {
	t.StoredAsSubDirectories = v
	return t
}

// SetV__StoredAsSubDirectories updates property "StoredAsSubDirectories".
func (t AWS_Glue_Partition_StorageDescriptor) SetV__StoredAsSubDirectories(v bool) AWS_Glue_Partition_StorageDescriptor {
	t.StoredAsSubDirectories = cfz.V(v)
	return t
}
