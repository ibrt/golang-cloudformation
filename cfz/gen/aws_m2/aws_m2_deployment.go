// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_m2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_M2_Deployment)(nil)
	_ cfz.Resource                   = (*AWS_M2_Deployment)(nil)
)

const (
	// AWS_M2_Deployment__Type is the CloudFormation type for AWS::M2::Deployment.
	AWS_M2_Deployment__Type = "AWS::M2::Deployment"
)

var (
	// AWS_M2_Deployment__AttributesMap reports all the CloudFormation attributes for AWS::M2::Deployment.
	AWS_M2_Deployment__AttributesMap = struct {
		DeploymentId string
		Status       string
	}{
		DeploymentId: "DeploymentId",
		Status:       "Status",
	}

	// AWS_M2_Deployment__AttributesSlice reports all the CloudFormation attributes for AWS::M2::Deployment.
	AWS_M2_Deployment__AttributesSlice = []string{
		AWS_M2_Deployment__AttributesMap.DeploymentId,
		AWS_M2_Deployment__AttributesMap.Status,
	}
)

var (
	// AWS_M2_Deployment__PropertiesMap reports all the CloudFormation properties for AWS::M2::Deployment.
	AWS_M2_Deployment__PropertiesMap = struct {
		ApplicationId      string
		ApplicationVersion string
		EnvironmentId      string
	}{
		ApplicationId:      "ApplicationId",
		ApplicationVersion: "ApplicationVersion",
		EnvironmentId:      "EnvironmentId",
	}

	// AWS_M2_Deployment__PropertiesSlice reports all the CloudFormation properties for AWS::M2::Deployment.
	AWS_M2_Deployment__PropertiesSlice = []string{
		AWS_M2_Deployment__PropertiesMap.ApplicationId,
		AWS_M2_Deployment__PropertiesMap.ApplicationVersion,
		AWS_M2_Deployment__PropertiesMap.EnvironmentId,
	}
)

// AWS_M2_Deployment is a binding for AWS::M2::Deployment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-deployment.html
type AWS_M2_Deployment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-deployment.html#cfn-m2-deployment-applicationid
	ApplicationId cfz.Expression[string] `json:"ApplicationId,omitempty"`

	// ApplicationVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-deployment.html#cfn-m2-deployment-applicationversion
	ApplicationVersion cfz.Expression[int32] `json:"ApplicationVersion,omitempty"`

	// EnvironmentId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-deployment.html#cfn-m2-deployment-environmentid
	EnvironmentId cfz.Expression[string] `json:"EnvironmentId,omitempty"`
}

// New__AWS_M2_Deployment initializes a new *AWS_M2_Deployment.
func New__AWS_M2_Deployment(logicalName string) *AWS_M2_Deployment {
	return &AWS_M2_Deployment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_M2_Deployment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_M2_Deployment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_M2_Deployment) GetType() string {
	return AWS_M2_Deployment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_M2_Deployment) Set__LogicalName(v string) *AWS_M2_Deployment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_M2_Deployment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_M2_Deployment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_M2_Deployment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_M2_Deployment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_M2_Deployment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_M2_Deployment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_M2_Deployment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_M2_Deployment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_M2_Deployment) Set__RequestedOutputs(v []cfz.Output) *AWS_M2_Deployment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_M2_Deployment) Add__RequestedOutputs(v ...cfz.Output) *AWS_M2_Deployment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationId updates property "ApplicationId".
func (t *AWS_M2_Deployment) Set__ApplicationId(v cfz.Expression[string]) *AWS_M2_Deployment {
	t.ApplicationId = v
	return t
}

// SetV__ApplicationId updates property "ApplicationId".
func (t *AWS_M2_Deployment) SetV__ApplicationId(v string) *AWS_M2_Deployment {
	t.ApplicationId = cfz.V(v)
	return t
}

// Set__ApplicationVersion updates property "ApplicationVersion".
func (t *AWS_M2_Deployment) Set__ApplicationVersion(v cfz.Expression[int32]) *AWS_M2_Deployment {
	t.ApplicationVersion = v
	return t
}

// SetV__ApplicationVersion updates property "ApplicationVersion".
func (t *AWS_M2_Deployment) SetV__ApplicationVersion(v int32) *AWS_M2_Deployment {
	t.ApplicationVersion = cfz.V(v)
	return t
}

// Set__EnvironmentId updates property "EnvironmentId".
func (t *AWS_M2_Deployment) Set__EnvironmentId(v cfz.Expression[string]) *AWS_M2_Deployment {
	t.EnvironmentId = v
	return t
}

// SetV__EnvironmentId updates property "EnvironmentId".
func (t *AWS_M2_Deployment) SetV__EnvironmentId(v string) *AWS_M2_Deployment {
	t.EnvironmentId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_M2_Deployment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DeploymentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DeploymentId
func (t *AWS_M2_Deployment) GetAtt__DeploymentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_M2_Deployment__AttributesMap.DeploymentId))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_M2_Deployment) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_M2_Deployment__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_M2_Deployment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DeploymentId returns a conventionally configured output for an attribute of this resource.
// Attribute: DeploymentId
func (t *AWS_M2_Deployment) GetConventionalOutputAtt__DeploymentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDeploymentId", t.GetAtt__DeploymentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_M2_Deployment) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_M2_Deployment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_M2_Deployment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_M2_Deployment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
