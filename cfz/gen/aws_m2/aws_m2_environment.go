// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_m2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_M2_Environment)(nil)
	_ cfz.Resource                   = (*AWS_M2_Environment)(nil)
)

const (
	// AWS_M2_Environment__Type is the CloudFormation type for AWS::M2::Environment.
	AWS_M2_Environment__Type = "AWS::M2::Environment"
)

var (
	// AWS_M2_Environment__AttributesMap reports all the CloudFormation attributes for AWS::M2::Environment.
	AWS_M2_Environment__AttributesMap = struct {
		EnvironmentArn string
		EnvironmentId  string
	}{
		EnvironmentArn: "EnvironmentArn",
		EnvironmentId:  "EnvironmentId",
	}

	// AWS_M2_Environment__AttributesSlice reports all the CloudFormation attributes for AWS::M2::Environment.
	AWS_M2_Environment__AttributesSlice = []string{
		AWS_M2_Environment__AttributesMap.EnvironmentArn,
		AWS_M2_Environment__AttributesMap.EnvironmentId,
	}
)

var (
	// AWS_M2_Environment__PropertiesMap reports all the CloudFormation properties for AWS::M2::Environment.
	AWS_M2_Environment__PropertiesMap = struct {
		Description                string
		EngineType                 string
		EngineVersion              string
		HighAvailabilityConfig     string
		InstanceType               string
		KmsKeyId                   string
		Name                       string
		PreferredMaintenanceWindow string
		PubliclyAccessible         string
		SecurityGroupIds           string
		StorageConfigurations      string
		SubnetIds                  string
		Tags                       string
	}{
		Description:                "Description",
		EngineType:                 "EngineType",
		EngineVersion:              "EngineVersion",
		HighAvailabilityConfig:     "HighAvailabilityConfig",
		InstanceType:               "InstanceType",
		KmsKeyId:                   "KmsKeyId",
		Name:                       "Name",
		PreferredMaintenanceWindow: "PreferredMaintenanceWindow",
		PubliclyAccessible:         "PubliclyAccessible",
		SecurityGroupIds:           "SecurityGroupIds",
		StorageConfigurations:      "StorageConfigurations",
		SubnetIds:                  "SubnetIds",
		Tags:                       "Tags",
	}

	// AWS_M2_Environment__PropertiesSlice reports all the CloudFormation properties for AWS::M2::Environment.
	AWS_M2_Environment__PropertiesSlice = []string{
		AWS_M2_Environment__PropertiesMap.Description,
		AWS_M2_Environment__PropertiesMap.EngineType,
		AWS_M2_Environment__PropertiesMap.EngineVersion,
		AWS_M2_Environment__PropertiesMap.HighAvailabilityConfig,
		AWS_M2_Environment__PropertiesMap.InstanceType,
		AWS_M2_Environment__PropertiesMap.KmsKeyId,
		AWS_M2_Environment__PropertiesMap.Name,
		AWS_M2_Environment__PropertiesMap.PreferredMaintenanceWindow,
		AWS_M2_Environment__PropertiesMap.PubliclyAccessible,
		AWS_M2_Environment__PropertiesMap.SecurityGroupIds,
		AWS_M2_Environment__PropertiesMap.StorageConfigurations,
		AWS_M2_Environment__PropertiesMap.SubnetIds,
		AWS_M2_Environment__PropertiesMap.Tags,
	}
)

// AWS_M2_Environment is a binding for AWS::M2::Environment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html
type AWS_M2_Environment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// EngineType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-enginetype
	EngineType cfz.Expression[string] `json:"EngineType,omitempty"`

	// EngineVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-engineversion
	EngineVersion cfz.Expression[string] `json:"EngineVersion,omitempty"`

	// HighAvailabilityConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-highavailabilityconfig
	HighAvailabilityConfig cfz.Expression[AWS_M2_Environment_HighAvailabilityConfig] `json:"HighAvailabilityConfig,omitempty"`

	// InstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-instancetype
	InstanceType cfz.Expression[string] `json:"InstanceType,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// PreferredMaintenanceWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-preferredmaintenancewindow
	PreferredMaintenanceWindow cfz.Expression[string] `json:"PreferredMaintenanceWindow,omitempty"`

	// PubliclyAccessible is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-publiclyaccessible
	PubliclyAccessible cfz.Expression[bool] `json:"PubliclyAccessible,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// StorageConfigurations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-storageconfigurations
	StorageConfigurations cfz.ExpressionSlice[AWS_M2_Environment_StorageConfiguration] `json:"StorageConfigurations,omitempty"`

	// SubnetIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-subnetids
	SubnetIds cfz.ExpressionSlice[string] `json:"SubnetIds,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-m2-environment.html#cfn-m2-environment-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`
}

// New__AWS_M2_Environment initializes a new *AWS_M2_Environment.
func New__AWS_M2_Environment(logicalName string) *AWS_M2_Environment {
	return &AWS_M2_Environment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_M2_Environment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_M2_Environment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_M2_Environment) GetType() string {
	return AWS_M2_Environment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_M2_Environment) Set__LogicalName(v string) *AWS_M2_Environment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_M2_Environment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_M2_Environment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_M2_Environment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_M2_Environment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_M2_Environment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_M2_Environment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_M2_Environment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_M2_Environment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_M2_Environment) Set__RequestedOutputs(v []cfz.Output) *AWS_M2_Environment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_M2_Environment) Add__RequestedOutputs(v ...cfz.Output) *AWS_M2_Environment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_M2_Environment) Set__Description(v cfz.Expression[string]) *AWS_M2_Environment {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_M2_Environment) SetV__Description(v string) *AWS_M2_Environment {
	t.Description = cfz.V(v)
	return t
}

// Set__EngineType updates property "EngineType".
func (t *AWS_M2_Environment) Set__EngineType(v cfz.Expression[string]) *AWS_M2_Environment {
	t.EngineType = v
	return t
}

// SetV__EngineType updates property "EngineType".
func (t *AWS_M2_Environment) SetV__EngineType(v string) *AWS_M2_Environment {
	t.EngineType = cfz.V(v)
	return t
}

// Set__EngineVersion updates property "EngineVersion".
func (t *AWS_M2_Environment) Set__EngineVersion(v cfz.Expression[string]) *AWS_M2_Environment {
	t.EngineVersion = v
	return t
}

// SetV__EngineVersion updates property "EngineVersion".
func (t *AWS_M2_Environment) SetV__EngineVersion(v string) *AWS_M2_Environment {
	t.EngineVersion = cfz.V(v)
	return t
}

// Set__HighAvailabilityConfig updates property "HighAvailabilityConfig".
func (t *AWS_M2_Environment) Set__HighAvailabilityConfig(v cfz.Expression[AWS_M2_Environment_HighAvailabilityConfig]) *AWS_M2_Environment {
	t.HighAvailabilityConfig = v
	return t
}

// SetV__HighAvailabilityConfig updates property "HighAvailabilityConfig".
func (t *AWS_M2_Environment) SetV__HighAvailabilityConfig(v AWS_M2_Environment_HighAvailabilityConfig) *AWS_M2_Environment {
	t.HighAvailabilityConfig = cfz.V(v)
	return t
}

// Set__InstanceType updates property "InstanceType".
func (t *AWS_M2_Environment) Set__InstanceType(v cfz.Expression[string]) *AWS_M2_Environment {
	t.InstanceType = v
	return t
}

// SetV__InstanceType updates property "InstanceType".
func (t *AWS_M2_Environment) SetV__InstanceType(v string) *AWS_M2_Environment {
	t.InstanceType = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_M2_Environment) Set__KmsKeyId(v cfz.Expression[string]) *AWS_M2_Environment {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_M2_Environment) SetV__KmsKeyId(v string) *AWS_M2_Environment {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_M2_Environment) Set__Name(v cfz.Expression[string]) *AWS_M2_Environment {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_M2_Environment) SetV__Name(v string) *AWS_M2_Environment {
	t.Name = cfz.V(v)
	return t
}

// Set__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_M2_Environment) Set__PreferredMaintenanceWindow(v cfz.Expression[string]) *AWS_M2_Environment {
	t.PreferredMaintenanceWindow = v
	return t
}

// SetV__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_M2_Environment) SetV__PreferredMaintenanceWindow(v string) *AWS_M2_Environment {
	t.PreferredMaintenanceWindow = cfz.V(v)
	return t
}

// Set__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_M2_Environment) Set__PubliclyAccessible(v cfz.Expression[bool]) *AWS_M2_Environment {
	t.PubliclyAccessible = v
	return t
}

// SetV__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_M2_Environment) SetV__PubliclyAccessible(v bool) *AWS_M2_Environment {
	t.PubliclyAccessible = cfz.V(v)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_M2_Environment) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_M2_Environment {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_M2_Environment) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_M2_Environment {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_M2_Environment) SetSV__SecurityGroupIds(v ...string) *AWS_M2_Environment {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__StorageConfigurations updates property "StorageConfigurations".
func (t *AWS_M2_Environment) Set__StorageConfigurations(v cfz.ExpressionSlice[AWS_M2_Environment_StorageConfiguration]) *AWS_M2_Environment {
	t.StorageConfigurations = v
	return t
}

// SetS__StorageConfigurations updates property "StorageConfigurations".
func (t *AWS_M2_Environment) SetS__StorageConfigurations(v ...cfz.Expression[AWS_M2_Environment_StorageConfiguration]) *AWS_M2_Environment {
	t.StorageConfigurations = cfz.S(v...)
	return t
}

// SetSV__StorageConfigurations updates property "StorageConfigurations".
func (t *AWS_M2_Environment) SetSV__StorageConfigurations(v ...AWS_M2_Environment_StorageConfiguration) *AWS_M2_Environment {
	t.StorageConfigurations = cfz.SV(v...)
	return t
}

// Set__SubnetIds updates property "SubnetIds".
func (t *AWS_M2_Environment) Set__SubnetIds(v cfz.ExpressionSlice[string]) *AWS_M2_Environment {
	t.SubnetIds = v
	return t
}

// SetS__SubnetIds updates property "SubnetIds".
func (t *AWS_M2_Environment) SetS__SubnetIds(v ...cfz.Expression[string]) *AWS_M2_Environment {
	t.SubnetIds = cfz.S(v...)
	return t
}

// SetSV__SubnetIds updates property "SubnetIds".
func (t *AWS_M2_Environment) SetSV__SubnetIds(v ...string) *AWS_M2_Environment {
	t.SubnetIds = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_M2_Environment) Set__Tags(v cfz.ExpressionMap[string]) *AWS_M2_Environment {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_M2_Environment) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_M2_Environment {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_M2_Environment) SetMV__Tags(v ...map[string]string) *AWS_M2_Environment {
	t.Tags = cfz.MV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_M2_Environment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__EnvironmentArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EnvironmentArn
func (t *AWS_M2_Environment) GetAtt__EnvironmentArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_M2_Environment__AttributesMap.EnvironmentArn))
}

// GetAtt__EnvironmentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EnvironmentId
func (t *AWS_M2_Environment) GetAtt__EnvironmentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_M2_Environment__AttributesMap.EnvironmentId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_M2_Environment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EnvironmentArn returns a conventionally configured output for an attribute of this resource.
// Attribute: EnvironmentArn
func (t *AWS_M2_Environment) GetConventionalOutputAtt__EnvironmentArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEnvironmentArn", t.GetAtt__EnvironmentArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EnvironmentId returns a conventionally configured output for an attribute of this resource.
// Attribute: EnvironmentId
func (t *AWS_M2_Environment) GetConventionalOutputAtt__EnvironmentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEnvironmentId", t.GetAtt__EnvironmentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_M2_Environment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_M2_Environment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_M2_Environment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
