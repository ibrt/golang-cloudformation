// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_databrew

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DataBrew_Recipe_DataCatalogInputDefinition__Type is the CloudFormation type for AWS::DataBrew::Recipe.DataCatalogInputDefinition.
	AWS_DataBrew_Recipe_DataCatalogInputDefinition__Type = "AWS::DataBrew::Recipe.DataCatalogInputDefinition"
)

var (
	// AWS_DataBrew_Recipe_DataCatalogInputDefinition__PropertiesMap reports all the CloudFormation properties for AWS::DataBrew::Recipe.DataCatalogInputDefinition.
	AWS_DataBrew_Recipe_DataCatalogInputDefinition__PropertiesMap = struct {
		CatalogId     string
		DatabaseName  string
		TableName     string
		TempDirectory string
	}{
		CatalogId:     "CatalogId",
		DatabaseName:  "DatabaseName",
		TableName:     "TableName",
		TempDirectory: "TempDirectory",
	}

	// AWS_DataBrew_Recipe_DataCatalogInputDefinition__PropertiesSlice reports all the CloudFormation properties for AWS::DataBrew::Recipe.DataCatalogInputDefinition.
	AWS_DataBrew_Recipe_DataCatalogInputDefinition__PropertiesSlice = []string{
		AWS_DataBrew_Recipe_DataCatalogInputDefinition__PropertiesMap.CatalogId,
		AWS_DataBrew_Recipe_DataCatalogInputDefinition__PropertiesMap.DatabaseName,
		AWS_DataBrew_Recipe_DataCatalogInputDefinition__PropertiesMap.TableName,
		AWS_DataBrew_Recipe_DataCatalogInputDefinition__PropertiesMap.TempDirectory,
	}
)

// AWS_DataBrew_Recipe_DataCatalogInputDefinition is a binding for AWS::DataBrew::Recipe.DataCatalogInputDefinition.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-datacataloginputdefinition.html
type AWS_DataBrew_Recipe_DataCatalogInputDefinition struct {
	// CatalogId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-datacataloginputdefinition.html#cfn-databrew-recipe-datacataloginputdefinition-catalogid
	CatalogId cfz.Expression[string] `json:"CatalogId,omitempty"`

	// DatabaseName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-datacataloginputdefinition.html#cfn-databrew-recipe-datacataloginputdefinition-databasename
	DatabaseName cfz.Expression[string] `json:"DatabaseName,omitempty"`

	// TableName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-datacataloginputdefinition.html#cfn-databrew-recipe-datacataloginputdefinition-tablename
	TableName cfz.Expression[string] `json:"TableName,omitempty"`

	// TempDirectory is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-datacataloginputdefinition.html#cfn-databrew-recipe-datacataloginputdefinition-tempdirectory
	TempDirectory cfz.Expression[AWS_DataBrew_Recipe_S3Location] `json:"TempDirectory,omitempty"`
}

// New__AWS_DataBrew_Recipe_DataCatalogInputDefinition initializes a new AWS_DataBrew_Recipe_DataCatalogInputDefinition.
func New__AWS_DataBrew_Recipe_DataCatalogInputDefinition() AWS_DataBrew_Recipe_DataCatalogInputDefinition {
	return AWS_DataBrew_Recipe_DataCatalogInputDefinition{}
}

// GetType returns the CloudFormation type.
func (AWS_DataBrew_Recipe_DataCatalogInputDefinition) GetType() string {
	return AWS_DataBrew_Recipe_DataCatalogInputDefinition__Type
}

// Set__CatalogId updates property "CatalogId".
func (t AWS_DataBrew_Recipe_DataCatalogInputDefinition) Set__CatalogId(v cfz.Expression[string]) AWS_DataBrew_Recipe_DataCatalogInputDefinition {
	t.CatalogId = v
	return t
}

// SetV__CatalogId updates property "CatalogId".
func (t AWS_DataBrew_Recipe_DataCatalogInputDefinition) SetV__CatalogId(v string) AWS_DataBrew_Recipe_DataCatalogInputDefinition {
	t.CatalogId = cfz.V(v)
	return t
}

// Set__DatabaseName updates property "DatabaseName".
func (t AWS_DataBrew_Recipe_DataCatalogInputDefinition) Set__DatabaseName(v cfz.Expression[string]) AWS_DataBrew_Recipe_DataCatalogInputDefinition {
	t.DatabaseName = v
	return t
}

// SetV__DatabaseName updates property "DatabaseName".
func (t AWS_DataBrew_Recipe_DataCatalogInputDefinition) SetV__DatabaseName(v string) AWS_DataBrew_Recipe_DataCatalogInputDefinition {
	t.DatabaseName = cfz.V(v)
	return t
}

// Set__TableName updates property "TableName".
func (t AWS_DataBrew_Recipe_DataCatalogInputDefinition) Set__TableName(v cfz.Expression[string]) AWS_DataBrew_Recipe_DataCatalogInputDefinition {
	t.TableName = v
	return t
}

// SetV__TableName updates property "TableName".
func (t AWS_DataBrew_Recipe_DataCatalogInputDefinition) SetV__TableName(v string) AWS_DataBrew_Recipe_DataCatalogInputDefinition {
	t.TableName = cfz.V(v)
	return t
}

// Set__TempDirectory updates property "TempDirectory".
func (t AWS_DataBrew_Recipe_DataCatalogInputDefinition) Set__TempDirectory(v cfz.Expression[AWS_DataBrew_Recipe_S3Location]) AWS_DataBrew_Recipe_DataCatalogInputDefinition {
	t.TempDirectory = v
	return t
}

// SetV__TempDirectory updates property "TempDirectory".
func (t AWS_DataBrew_Recipe_DataCatalogInputDefinition) SetV__TempDirectory(v AWS_DataBrew_Recipe_S3Location) AWS_DataBrew_Recipe_DataCatalogInputDefinition {
	t.TempDirectory = cfz.V(v)
	return t
}
