// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_databrew

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DataBrew_Dataset_FormatOptions__Type is the CloudFormation type for AWS::DataBrew::Dataset.FormatOptions.
	AWS_DataBrew_Dataset_FormatOptions__Type = "AWS::DataBrew::Dataset.FormatOptions"
)

var (
	// AWS_DataBrew_Dataset_FormatOptions__PropertiesMap reports all the CloudFormation properties for AWS::DataBrew::Dataset.FormatOptions.
	AWS_DataBrew_Dataset_FormatOptions__PropertiesMap = struct {
		Csv   string
		Excel string
		Json  string
	}{
		Csv:   "Csv",
		Excel: "Excel",
		Json:  "Json",
	}

	// AWS_DataBrew_Dataset_FormatOptions__PropertiesSlice reports all the CloudFormation properties for AWS::DataBrew::Dataset.FormatOptions.
	AWS_DataBrew_Dataset_FormatOptions__PropertiesSlice = []string{
		AWS_DataBrew_Dataset_FormatOptions__PropertiesMap.Csv,
		AWS_DataBrew_Dataset_FormatOptions__PropertiesMap.Excel,
		AWS_DataBrew_Dataset_FormatOptions__PropertiesMap.Json,
	}
)

// AWS_DataBrew_Dataset_FormatOptions is a binding for AWS::DataBrew::Dataset.FormatOptions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-dataset-formatoptions.html
type AWS_DataBrew_Dataset_FormatOptions struct {
	// Csv is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-dataset-formatoptions.html#cfn-databrew-dataset-formatoptions-csv
	Csv cfz.Expression[AWS_DataBrew_Dataset_CsvOptions] `json:"Csv,omitempty"`

	// Excel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-dataset-formatoptions.html#cfn-databrew-dataset-formatoptions-excel
	Excel cfz.Expression[AWS_DataBrew_Dataset_ExcelOptions] `json:"Excel,omitempty"`

	// Json is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-dataset-formatoptions.html#cfn-databrew-dataset-formatoptions-json
	Json cfz.Expression[AWS_DataBrew_Dataset_JsonOptions] `json:"Json,omitempty"`
}

// New__AWS_DataBrew_Dataset_FormatOptions initializes a new AWS_DataBrew_Dataset_FormatOptions.
func New__AWS_DataBrew_Dataset_FormatOptions() AWS_DataBrew_Dataset_FormatOptions {
	return AWS_DataBrew_Dataset_FormatOptions{}
}

// GetType returns the CloudFormation type.
func (AWS_DataBrew_Dataset_FormatOptions) GetType() string {
	return AWS_DataBrew_Dataset_FormatOptions__Type
}

// Set__Csv updates property "Csv".
func (t AWS_DataBrew_Dataset_FormatOptions) Set__Csv(v cfz.Expression[AWS_DataBrew_Dataset_CsvOptions]) AWS_DataBrew_Dataset_FormatOptions {
	t.Csv = v
	return t
}

// SetV__Csv updates property "Csv".
func (t AWS_DataBrew_Dataset_FormatOptions) SetV__Csv(v AWS_DataBrew_Dataset_CsvOptions) AWS_DataBrew_Dataset_FormatOptions {
	t.Csv = cfz.V(v)
	return t
}

// Set__Excel updates property "Excel".
func (t AWS_DataBrew_Dataset_FormatOptions) Set__Excel(v cfz.Expression[AWS_DataBrew_Dataset_ExcelOptions]) AWS_DataBrew_Dataset_FormatOptions {
	t.Excel = v
	return t
}

// SetV__Excel updates property "Excel".
func (t AWS_DataBrew_Dataset_FormatOptions) SetV__Excel(v AWS_DataBrew_Dataset_ExcelOptions) AWS_DataBrew_Dataset_FormatOptions {
	t.Excel = cfz.V(v)
	return t
}

// Set__Json updates property "Json".
func (t AWS_DataBrew_Dataset_FormatOptions) Set__Json(v cfz.Expression[AWS_DataBrew_Dataset_JsonOptions]) AWS_DataBrew_Dataset_FormatOptions {
	t.Json = v
	return t
}

// SetV__Json updates property "Json".
func (t AWS_DataBrew_Dataset_FormatOptions) SetV__Json(v AWS_DataBrew_Dataset_JsonOptions) AWS_DataBrew_Dataset_FormatOptions {
	t.Json = cfz.V(v)
	return t
}
