// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_databrew

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DataBrew_Dataset_FilterExpression__Type is the CloudFormation type for AWS::DataBrew::Dataset.FilterExpression.
	AWS_DataBrew_Dataset_FilterExpression__Type = "AWS::DataBrew::Dataset.FilterExpression"
)

var (
	// AWS_DataBrew_Dataset_FilterExpression__PropertiesMap reports all the CloudFormation properties for AWS::DataBrew::Dataset.FilterExpression.
	AWS_DataBrew_Dataset_FilterExpression__PropertiesMap = struct {
		Expression string
		ValuesMap  string
	}{
		Expression: "Expression",
		ValuesMap:  "ValuesMap",
	}

	// AWS_DataBrew_Dataset_FilterExpression__PropertiesSlice reports all the CloudFormation properties for AWS::DataBrew::Dataset.FilterExpression.
	AWS_DataBrew_Dataset_FilterExpression__PropertiesSlice = []string{
		AWS_DataBrew_Dataset_FilterExpression__PropertiesMap.Expression,
		AWS_DataBrew_Dataset_FilterExpression__PropertiesMap.ValuesMap,
	}
)

// AWS_DataBrew_Dataset_FilterExpression is a binding for AWS::DataBrew::Dataset.FilterExpression.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-dataset-filterexpression.html
type AWS_DataBrew_Dataset_FilterExpression struct {
	// Expression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-dataset-filterexpression.html#cfn-databrew-dataset-filterexpression-expression
	Expression cfz.Expression[string] `json:"Expression,omitempty"`

	// ValuesMap is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-dataset-filterexpression.html#cfn-databrew-dataset-filterexpression-valuesmap
	ValuesMap cfz.ExpressionSlice[AWS_DataBrew_Dataset_FilterValue] `json:"ValuesMap,omitempty"`
}

// New__AWS_DataBrew_Dataset_FilterExpression initializes a new AWS_DataBrew_Dataset_FilterExpression.
func New__AWS_DataBrew_Dataset_FilterExpression() AWS_DataBrew_Dataset_FilterExpression {
	return AWS_DataBrew_Dataset_FilterExpression{}
}

// GetType returns the CloudFormation type.
func (AWS_DataBrew_Dataset_FilterExpression) GetType() string {
	return AWS_DataBrew_Dataset_FilterExpression__Type
}

// Set__Expression updates property "Expression".
func (t AWS_DataBrew_Dataset_FilterExpression) Set__Expression(v cfz.Expression[string]) AWS_DataBrew_Dataset_FilterExpression {
	t.Expression = v
	return t
}

// SetV__Expression updates property "Expression".
func (t AWS_DataBrew_Dataset_FilterExpression) SetV__Expression(v string) AWS_DataBrew_Dataset_FilterExpression {
	t.Expression = cfz.V(v)
	return t
}

// Set__ValuesMap updates property "ValuesMap".
func (t AWS_DataBrew_Dataset_FilterExpression) Set__ValuesMap(v cfz.ExpressionSlice[AWS_DataBrew_Dataset_FilterValue]) AWS_DataBrew_Dataset_FilterExpression {
	t.ValuesMap = v
	return t
}

// SetS__ValuesMap updates property "ValuesMap".
func (t AWS_DataBrew_Dataset_FilterExpression) SetS__ValuesMap(v ...cfz.Expression[AWS_DataBrew_Dataset_FilterValue]) AWS_DataBrew_Dataset_FilterExpression {
	t.ValuesMap = cfz.S(v...)
	return t
}

// SetSV__ValuesMap updates property "ValuesMap".
func (t AWS_DataBrew_Dataset_FilterExpression) SetSV__ValuesMap(v ...AWS_DataBrew_Dataset_FilterValue) AWS_DataBrew_Dataset_FilterExpression {
	t.ValuesMap = cfz.SV(v...)
	return t
}
