// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_databrew

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DataBrew_Job)(nil)
	_ cfz.Resource                   = (*AWS_DataBrew_Job)(nil)
)

const (
	// AWS_DataBrew_Job__Type is the CloudFormation type for AWS::DataBrew::Job.
	AWS_DataBrew_Job__Type = "AWS::DataBrew::Job"
)

var (
	// AWS_DataBrew_Job__PropertiesMap reports all the CloudFormation properties for AWS::DataBrew::Job.
	AWS_DataBrew_Job__PropertiesMap = struct {
		DataCatalogOutputs       string
		DatabaseOutputs          string
		DatasetName              string
		EncryptionKeyArn         string
		EncryptionMode           string
		JobSample                string
		LogSubscription          string
		MaxCapacity              string
		MaxRetries               string
		Name                     string
		OutputLocation           string
		Outputs                  string
		ProfileConfiguration     string
		ProjectName              string
		Recipe                   string
		RoleArn                  string
		Tags                     string
		Timeout                  string
		Type                     string
		ValidationConfigurations string
	}{
		DataCatalogOutputs:       "DataCatalogOutputs",
		DatabaseOutputs:          "DatabaseOutputs",
		DatasetName:              "DatasetName",
		EncryptionKeyArn:         "EncryptionKeyArn",
		EncryptionMode:           "EncryptionMode",
		JobSample:                "JobSample",
		LogSubscription:          "LogSubscription",
		MaxCapacity:              "MaxCapacity",
		MaxRetries:               "MaxRetries",
		Name:                     "Name",
		OutputLocation:           "OutputLocation",
		Outputs:                  "Outputs",
		ProfileConfiguration:     "ProfileConfiguration",
		ProjectName:              "ProjectName",
		Recipe:                   "Recipe",
		RoleArn:                  "RoleArn",
		Tags:                     "Tags",
		Timeout:                  "Timeout",
		Type:                     "Type",
		ValidationConfigurations: "ValidationConfigurations",
	}

	// AWS_DataBrew_Job__PropertiesSlice reports all the CloudFormation properties for AWS::DataBrew::Job.
	AWS_DataBrew_Job__PropertiesSlice = []string{
		AWS_DataBrew_Job__PropertiesMap.DataCatalogOutputs,
		AWS_DataBrew_Job__PropertiesMap.DatabaseOutputs,
		AWS_DataBrew_Job__PropertiesMap.DatasetName,
		AWS_DataBrew_Job__PropertiesMap.EncryptionKeyArn,
		AWS_DataBrew_Job__PropertiesMap.EncryptionMode,
		AWS_DataBrew_Job__PropertiesMap.JobSample,
		AWS_DataBrew_Job__PropertiesMap.LogSubscription,
		AWS_DataBrew_Job__PropertiesMap.MaxCapacity,
		AWS_DataBrew_Job__PropertiesMap.MaxRetries,
		AWS_DataBrew_Job__PropertiesMap.Name,
		AWS_DataBrew_Job__PropertiesMap.OutputLocation,
		AWS_DataBrew_Job__PropertiesMap.Outputs,
		AWS_DataBrew_Job__PropertiesMap.ProfileConfiguration,
		AWS_DataBrew_Job__PropertiesMap.ProjectName,
		AWS_DataBrew_Job__PropertiesMap.Recipe,
		AWS_DataBrew_Job__PropertiesMap.RoleArn,
		AWS_DataBrew_Job__PropertiesMap.Tags,
		AWS_DataBrew_Job__PropertiesMap.Timeout,
		AWS_DataBrew_Job__PropertiesMap.Type,
		AWS_DataBrew_Job__PropertiesMap.ValidationConfigurations,
	}
)

// AWS_DataBrew_Job is a binding for AWS::DataBrew::Job.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html
type AWS_DataBrew_Job struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DataCatalogOutputs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-datacatalogoutputs
	DataCatalogOutputs cfz.ExpressionSlice[AWS_DataBrew_Job_DataCatalogOutput] `json:"DataCatalogOutputs,omitempty"`

	// DatabaseOutputs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-databaseoutputs
	DatabaseOutputs cfz.ExpressionSlice[AWS_DataBrew_Job_DatabaseOutput] `json:"DatabaseOutputs,omitempty"`

	// DatasetName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-datasetname
	DatasetName cfz.Expression[string] `json:"DatasetName,omitempty"`

	// EncryptionKeyArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-encryptionkeyarn
	EncryptionKeyArn cfz.Expression[string] `json:"EncryptionKeyArn,omitempty"`

	// EncryptionMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-encryptionmode
	EncryptionMode cfz.Expression[string] `json:"EncryptionMode,omitempty"`

	// JobSample is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-jobsample
	JobSample cfz.Expression[AWS_DataBrew_Job_JobSample] `json:"JobSample,omitempty"`

	// LogSubscription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-logsubscription
	LogSubscription cfz.Expression[string] `json:"LogSubscription,omitempty"`

	// MaxCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-maxcapacity
	MaxCapacity cfz.Expression[int32] `json:"MaxCapacity,omitempty"`

	// MaxRetries is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-maxretries
	MaxRetries cfz.Expression[int32] `json:"MaxRetries,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// OutputLocation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-outputlocation
	OutputLocation cfz.Expression[AWS_DataBrew_Job_OutputLocation] `json:"OutputLocation,omitempty"`

	// Outputs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-outputs
	Outputs cfz.ExpressionSlice[AWS_DataBrew_Job_Output] `json:"Outputs,omitempty"`

	// ProfileConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-profileconfiguration
	ProfileConfiguration cfz.Expression[AWS_DataBrew_Job_ProfileConfiguration] `json:"ProfileConfiguration,omitempty"`

	// ProjectName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-projectname
	ProjectName cfz.Expression[string] `json:"ProjectName,omitempty"`

	// Recipe is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-recipe
	Recipe cfz.Expression[AWS_DataBrew_Job_Recipe] `json:"Recipe,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Timeout is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-timeout
	Timeout cfz.Expression[int32] `json:"Timeout,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// ValidationConfigurations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-databrew-job.html#cfn-databrew-job-validationconfigurations
	ValidationConfigurations cfz.ExpressionSlice[AWS_DataBrew_Job_ValidationConfiguration] `json:"ValidationConfigurations,omitempty"`
}

// New__AWS_DataBrew_Job initializes a new *AWS_DataBrew_Job.
func New__AWS_DataBrew_Job(logicalName string) *AWS_DataBrew_Job {
	return &AWS_DataBrew_Job{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DataBrew_Job) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DataBrew_Job) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DataBrew_Job) GetType() string {
	return AWS_DataBrew_Job__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DataBrew_Job) Set__LogicalName(v string) *AWS_DataBrew_Job {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DataBrew_Job) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DataBrew_Job {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DataBrew_Job) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DataBrew_Job {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DataBrew_Job) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DataBrew_Job {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DataBrew_Job) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DataBrew_Job {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DataBrew_Job) Set__RequestedOutputs(v []cfz.Output) *AWS_DataBrew_Job {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DataBrew_Job) Add__RequestedOutputs(v ...cfz.Output) *AWS_DataBrew_Job {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DataCatalogOutputs updates property "DataCatalogOutputs".
func (t *AWS_DataBrew_Job) Set__DataCatalogOutputs(v cfz.ExpressionSlice[AWS_DataBrew_Job_DataCatalogOutput]) *AWS_DataBrew_Job {
	t.DataCatalogOutputs = v
	return t
}

// SetS__DataCatalogOutputs updates property "DataCatalogOutputs".
func (t *AWS_DataBrew_Job) SetS__DataCatalogOutputs(v ...cfz.Expression[AWS_DataBrew_Job_DataCatalogOutput]) *AWS_DataBrew_Job {
	t.DataCatalogOutputs = cfz.S(v...)
	return t
}

// SetSV__DataCatalogOutputs updates property "DataCatalogOutputs".
func (t *AWS_DataBrew_Job) SetSV__DataCatalogOutputs(v ...AWS_DataBrew_Job_DataCatalogOutput) *AWS_DataBrew_Job {
	t.DataCatalogOutputs = cfz.SV(v...)
	return t
}

// Set__DatabaseOutputs updates property "DatabaseOutputs".
func (t *AWS_DataBrew_Job) Set__DatabaseOutputs(v cfz.ExpressionSlice[AWS_DataBrew_Job_DatabaseOutput]) *AWS_DataBrew_Job {
	t.DatabaseOutputs = v
	return t
}

// SetS__DatabaseOutputs updates property "DatabaseOutputs".
func (t *AWS_DataBrew_Job) SetS__DatabaseOutputs(v ...cfz.Expression[AWS_DataBrew_Job_DatabaseOutput]) *AWS_DataBrew_Job {
	t.DatabaseOutputs = cfz.S(v...)
	return t
}

// SetSV__DatabaseOutputs updates property "DatabaseOutputs".
func (t *AWS_DataBrew_Job) SetSV__DatabaseOutputs(v ...AWS_DataBrew_Job_DatabaseOutput) *AWS_DataBrew_Job {
	t.DatabaseOutputs = cfz.SV(v...)
	return t
}

// Set__DatasetName updates property "DatasetName".
func (t *AWS_DataBrew_Job) Set__DatasetName(v cfz.Expression[string]) *AWS_DataBrew_Job {
	t.DatasetName = v
	return t
}

// SetV__DatasetName updates property "DatasetName".
func (t *AWS_DataBrew_Job) SetV__DatasetName(v string) *AWS_DataBrew_Job {
	t.DatasetName = cfz.V(v)
	return t
}

// Set__EncryptionKeyArn updates property "EncryptionKeyArn".
func (t *AWS_DataBrew_Job) Set__EncryptionKeyArn(v cfz.Expression[string]) *AWS_DataBrew_Job {
	t.EncryptionKeyArn = v
	return t
}

// SetV__EncryptionKeyArn updates property "EncryptionKeyArn".
func (t *AWS_DataBrew_Job) SetV__EncryptionKeyArn(v string) *AWS_DataBrew_Job {
	t.EncryptionKeyArn = cfz.V(v)
	return t
}

// Set__EncryptionMode updates property "EncryptionMode".
func (t *AWS_DataBrew_Job) Set__EncryptionMode(v cfz.Expression[string]) *AWS_DataBrew_Job {
	t.EncryptionMode = v
	return t
}

// SetV__EncryptionMode updates property "EncryptionMode".
func (t *AWS_DataBrew_Job) SetV__EncryptionMode(v string) *AWS_DataBrew_Job {
	t.EncryptionMode = cfz.V(v)
	return t
}

// Set__JobSample updates property "JobSample".
func (t *AWS_DataBrew_Job) Set__JobSample(v cfz.Expression[AWS_DataBrew_Job_JobSample]) *AWS_DataBrew_Job {
	t.JobSample = v
	return t
}

// SetV__JobSample updates property "JobSample".
func (t *AWS_DataBrew_Job) SetV__JobSample(v AWS_DataBrew_Job_JobSample) *AWS_DataBrew_Job {
	t.JobSample = cfz.V(v)
	return t
}

// Set__LogSubscription updates property "LogSubscription".
func (t *AWS_DataBrew_Job) Set__LogSubscription(v cfz.Expression[string]) *AWS_DataBrew_Job {
	t.LogSubscription = v
	return t
}

// SetV__LogSubscription updates property "LogSubscription".
func (t *AWS_DataBrew_Job) SetV__LogSubscription(v string) *AWS_DataBrew_Job {
	t.LogSubscription = cfz.V(v)
	return t
}

// Set__MaxCapacity updates property "MaxCapacity".
func (t *AWS_DataBrew_Job) Set__MaxCapacity(v cfz.Expression[int32]) *AWS_DataBrew_Job {
	t.MaxCapacity = v
	return t
}

// SetV__MaxCapacity updates property "MaxCapacity".
func (t *AWS_DataBrew_Job) SetV__MaxCapacity(v int32) *AWS_DataBrew_Job {
	t.MaxCapacity = cfz.V(v)
	return t
}

// Set__MaxRetries updates property "MaxRetries".
func (t *AWS_DataBrew_Job) Set__MaxRetries(v cfz.Expression[int32]) *AWS_DataBrew_Job {
	t.MaxRetries = v
	return t
}

// SetV__MaxRetries updates property "MaxRetries".
func (t *AWS_DataBrew_Job) SetV__MaxRetries(v int32) *AWS_DataBrew_Job {
	t.MaxRetries = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_DataBrew_Job) Set__Name(v cfz.Expression[string]) *AWS_DataBrew_Job {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_DataBrew_Job) SetV__Name(v string) *AWS_DataBrew_Job {
	t.Name = cfz.V(v)
	return t
}

// Set__OutputLocation updates property "OutputLocation".
func (t *AWS_DataBrew_Job) Set__OutputLocation(v cfz.Expression[AWS_DataBrew_Job_OutputLocation]) *AWS_DataBrew_Job {
	t.OutputLocation = v
	return t
}

// SetV__OutputLocation updates property "OutputLocation".
func (t *AWS_DataBrew_Job) SetV__OutputLocation(v AWS_DataBrew_Job_OutputLocation) *AWS_DataBrew_Job {
	t.OutputLocation = cfz.V(v)
	return t
}

// Set__Outputs updates property "Outputs".
func (t *AWS_DataBrew_Job) Set__Outputs(v cfz.ExpressionSlice[AWS_DataBrew_Job_Output]) *AWS_DataBrew_Job {
	t.Outputs = v
	return t
}

// SetS__Outputs updates property "Outputs".
func (t *AWS_DataBrew_Job) SetS__Outputs(v ...cfz.Expression[AWS_DataBrew_Job_Output]) *AWS_DataBrew_Job {
	t.Outputs = cfz.S(v...)
	return t
}

// SetSV__Outputs updates property "Outputs".
func (t *AWS_DataBrew_Job) SetSV__Outputs(v ...AWS_DataBrew_Job_Output) *AWS_DataBrew_Job {
	t.Outputs = cfz.SV(v...)
	return t
}

// Set__ProfileConfiguration updates property "ProfileConfiguration".
func (t *AWS_DataBrew_Job) Set__ProfileConfiguration(v cfz.Expression[AWS_DataBrew_Job_ProfileConfiguration]) *AWS_DataBrew_Job {
	t.ProfileConfiguration = v
	return t
}

// SetV__ProfileConfiguration updates property "ProfileConfiguration".
func (t *AWS_DataBrew_Job) SetV__ProfileConfiguration(v AWS_DataBrew_Job_ProfileConfiguration) *AWS_DataBrew_Job {
	t.ProfileConfiguration = cfz.V(v)
	return t
}

// Set__ProjectName updates property "ProjectName".
func (t *AWS_DataBrew_Job) Set__ProjectName(v cfz.Expression[string]) *AWS_DataBrew_Job {
	t.ProjectName = v
	return t
}

// SetV__ProjectName updates property "ProjectName".
func (t *AWS_DataBrew_Job) SetV__ProjectName(v string) *AWS_DataBrew_Job {
	t.ProjectName = cfz.V(v)
	return t
}

// Set__Recipe updates property "Recipe".
func (t *AWS_DataBrew_Job) Set__Recipe(v cfz.Expression[AWS_DataBrew_Job_Recipe]) *AWS_DataBrew_Job {
	t.Recipe = v
	return t
}

// SetV__Recipe updates property "Recipe".
func (t *AWS_DataBrew_Job) SetV__Recipe(v AWS_DataBrew_Job_Recipe) *AWS_DataBrew_Job {
	t.Recipe = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_DataBrew_Job) Set__RoleArn(v cfz.Expression[string]) *AWS_DataBrew_Job {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_DataBrew_Job) SetV__RoleArn(v string) *AWS_DataBrew_Job {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_DataBrew_Job) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_DataBrew_Job {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_DataBrew_Job) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_DataBrew_Job {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_DataBrew_Job) SetSV__Tags(v ...cfz.Tag) *AWS_DataBrew_Job {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Timeout updates property "Timeout".
func (t *AWS_DataBrew_Job) Set__Timeout(v cfz.Expression[int32]) *AWS_DataBrew_Job {
	t.Timeout = v
	return t
}

// SetV__Timeout updates property "Timeout".
func (t *AWS_DataBrew_Job) SetV__Timeout(v int32) *AWS_DataBrew_Job {
	t.Timeout = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_DataBrew_Job) Set__Type(v cfz.Expression[string]) *AWS_DataBrew_Job {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_DataBrew_Job) SetV__Type(v string) *AWS_DataBrew_Job {
	t.Type = cfz.V(v)
	return t
}

// Set__ValidationConfigurations updates property "ValidationConfigurations".
func (t *AWS_DataBrew_Job) Set__ValidationConfigurations(v cfz.ExpressionSlice[AWS_DataBrew_Job_ValidationConfiguration]) *AWS_DataBrew_Job {
	t.ValidationConfigurations = v
	return t
}

// SetS__ValidationConfigurations updates property "ValidationConfigurations".
func (t *AWS_DataBrew_Job) SetS__ValidationConfigurations(v ...cfz.Expression[AWS_DataBrew_Job_ValidationConfiguration]) *AWS_DataBrew_Job {
	t.ValidationConfigurations = cfz.S(v...)
	return t
}

// SetSV__ValidationConfigurations updates property "ValidationConfigurations".
func (t *AWS_DataBrew_Job) SetSV__ValidationConfigurations(v ...AWS_DataBrew_Job_ValidationConfiguration) *AWS_DataBrew_Job {
	t.ValidationConfigurations = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DataBrew_Job) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DataBrew_Job) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DataBrew_Job) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DataBrew_Job

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DataBrew_Job) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
