// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_databrew

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DataBrew_Recipe_ConditionExpression__Type is the CloudFormation type for AWS::DataBrew::Recipe.ConditionExpression.
	AWS_DataBrew_Recipe_ConditionExpression__Type = "AWS::DataBrew::Recipe.ConditionExpression"
)

var (
	// AWS_DataBrew_Recipe_ConditionExpression__PropertiesMap reports all the CloudFormation properties for AWS::DataBrew::Recipe.ConditionExpression.
	AWS_DataBrew_Recipe_ConditionExpression__PropertiesMap = struct {
		Condition    string
		TargetColumn string
		Value        string
	}{
		Condition:    "Condition",
		TargetColumn: "TargetColumn",
		Value:        "Value",
	}

	// AWS_DataBrew_Recipe_ConditionExpression__PropertiesSlice reports all the CloudFormation properties for AWS::DataBrew::Recipe.ConditionExpression.
	AWS_DataBrew_Recipe_ConditionExpression__PropertiesSlice = []string{
		AWS_DataBrew_Recipe_ConditionExpression__PropertiesMap.Condition,
		AWS_DataBrew_Recipe_ConditionExpression__PropertiesMap.TargetColumn,
		AWS_DataBrew_Recipe_ConditionExpression__PropertiesMap.Value,
	}
)

// AWS_DataBrew_Recipe_ConditionExpression is a binding for AWS::DataBrew::Recipe.ConditionExpression.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-conditionexpression.html
type AWS_DataBrew_Recipe_ConditionExpression struct {
	// Condition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-conditionexpression.html#cfn-databrew-recipe-conditionexpression-condition
	Condition cfz.Expression[string] `json:"Condition,omitempty"`

	// TargetColumn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-conditionexpression.html#cfn-databrew-recipe-conditionexpression-targetcolumn
	TargetColumn cfz.Expression[string] `json:"TargetColumn,omitempty"`

	// Value is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-conditionexpression.html#cfn-databrew-recipe-conditionexpression-value
	Value cfz.Expression[string] `json:"Value,omitempty"`
}

// New__AWS_DataBrew_Recipe_ConditionExpression initializes a new AWS_DataBrew_Recipe_ConditionExpression.
func New__AWS_DataBrew_Recipe_ConditionExpression() AWS_DataBrew_Recipe_ConditionExpression {
	return AWS_DataBrew_Recipe_ConditionExpression{}
}

// GetType returns the CloudFormation type.
func (AWS_DataBrew_Recipe_ConditionExpression) GetType() string {
	return AWS_DataBrew_Recipe_ConditionExpression__Type
}

// Set__Condition updates property "Condition".
func (t AWS_DataBrew_Recipe_ConditionExpression) Set__Condition(v cfz.Expression[string]) AWS_DataBrew_Recipe_ConditionExpression {
	t.Condition = v
	return t
}

// SetV__Condition updates property "Condition".
func (t AWS_DataBrew_Recipe_ConditionExpression) SetV__Condition(v string) AWS_DataBrew_Recipe_ConditionExpression {
	t.Condition = cfz.V(v)
	return t
}

// Set__TargetColumn updates property "TargetColumn".
func (t AWS_DataBrew_Recipe_ConditionExpression) Set__TargetColumn(v cfz.Expression[string]) AWS_DataBrew_Recipe_ConditionExpression {
	t.TargetColumn = v
	return t
}

// SetV__TargetColumn updates property "TargetColumn".
func (t AWS_DataBrew_Recipe_ConditionExpression) SetV__TargetColumn(v string) AWS_DataBrew_Recipe_ConditionExpression {
	t.TargetColumn = cfz.V(v)
	return t
}

// Set__Value updates property "Value".
func (t AWS_DataBrew_Recipe_ConditionExpression) Set__Value(v cfz.Expression[string]) AWS_DataBrew_Recipe_ConditionExpression {
	t.Value = v
	return t
}

// SetV__Value updates property "Value".
func (t AWS_DataBrew_Recipe_ConditionExpression) SetV__Value(v string) AWS_DataBrew_Recipe_ConditionExpression {
	t.Value = cfz.V(v)
	return t
}
