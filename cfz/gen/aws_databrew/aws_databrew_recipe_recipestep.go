// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_databrew

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DataBrew_Recipe_RecipeStep__Type is the CloudFormation type for AWS::DataBrew::Recipe.RecipeStep.
	AWS_DataBrew_Recipe_RecipeStep__Type = "AWS::DataBrew::Recipe.RecipeStep"
)

var (
	// AWS_DataBrew_Recipe_RecipeStep__PropertiesMap reports all the CloudFormation properties for AWS::DataBrew::Recipe.RecipeStep.
	AWS_DataBrew_Recipe_RecipeStep__PropertiesMap = struct {
		Action               string
		ConditionExpressions string
	}{
		Action:               "Action",
		ConditionExpressions: "ConditionExpressions",
	}

	// AWS_DataBrew_Recipe_RecipeStep__PropertiesSlice reports all the CloudFormation properties for AWS::DataBrew::Recipe.RecipeStep.
	AWS_DataBrew_Recipe_RecipeStep__PropertiesSlice = []string{
		AWS_DataBrew_Recipe_RecipeStep__PropertiesMap.Action,
		AWS_DataBrew_Recipe_RecipeStep__PropertiesMap.ConditionExpressions,
	}
)

// AWS_DataBrew_Recipe_RecipeStep is a binding for AWS::DataBrew::Recipe.RecipeStep.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-recipestep.html
type AWS_DataBrew_Recipe_RecipeStep struct {
	// Action is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-recipestep.html#cfn-databrew-recipe-recipestep-action
	Action cfz.Expression[AWS_DataBrew_Recipe_Action] `json:"Action,omitempty"`

	// ConditionExpressions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-recipe-recipestep.html#cfn-databrew-recipe-recipestep-conditionexpressions
	ConditionExpressions cfz.ExpressionSlice[AWS_DataBrew_Recipe_ConditionExpression] `json:"ConditionExpressions,omitempty"`
}

// New__AWS_DataBrew_Recipe_RecipeStep initializes a new AWS_DataBrew_Recipe_RecipeStep.
func New__AWS_DataBrew_Recipe_RecipeStep() AWS_DataBrew_Recipe_RecipeStep {
	return AWS_DataBrew_Recipe_RecipeStep{}
}

// GetType returns the CloudFormation type.
func (AWS_DataBrew_Recipe_RecipeStep) GetType() string {
	return AWS_DataBrew_Recipe_RecipeStep__Type
}

// Set__Action updates property "Action".
func (t AWS_DataBrew_Recipe_RecipeStep) Set__Action(v cfz.Expression[AWS_DataBrew_Recipe_Action]) AWS_DataBrew_Recipe_RecipeStep {
	t.Action = v
	return t
}

// SetV__Action updates property "Action".
func (t AWS_DataBrew_Recipe_RecipeStep) SetV__Action(v AWS_DataBrew_Recipe_Action) AWS_DataBrew_Recipe_RecipeStep {
	t.Action = cfz.V(v)
	return t
}

// Set__ConditionExpressions updates property "ConditionExpressions".
func (t AWS_DataBrew_Recipe_RecipeStep) Set__ConditionExpressions(v cfz.ExpressionSlice[AWS_DataBrew_Recipe_ConditionExpression]) AWS_DataBrew_Recipe_RecipeStep {
	t.ConditionExpressions = v
	return t
}

// SetS__ConditionExpressions updates property "ConditionExpressions".
func (t AWS_DataBrew_Recipe_RecipeStep) SetS__ConditionExpressions(v ...cfz.Expression[AWS_DataBrew_Recipe_ConditionExpression]) AWS_DataBrew_Recipe_RecipeStep {
	t.ConditionExpressions = cfz.S(v...)
	return t
}

// SetSV__ConditionExpressions updates property "ConditionExpressions".
func (t AWS_DataBrew_Recipe_RecipeStep) SetSV__ConditionExpressions(v ...AWS_DataBrew_Recipe_ConditionExpression) AWS_DataBrew_Recipe_RecipeStep {
	t.ConditionExpressions = cfz.SV(v...)
	return t
}
