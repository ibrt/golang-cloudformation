// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_databrew

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DataBrew_Ruleset_Rule__Type is the CloudFormation type for AWS::DataBrew::Ruleset.Rule.
	AWS_DataBrew_Ruleset_Rule__Type = "AWS::DataBrew::Ruleset.Rule"
)

var (
	// AWS_DataBrew_Ruleset_Rule__PropertiesMap reports all the CloudFormation properties for AWS::DataBrew::Ruleset.Rule.
	AWS_DataBrew_Ruleset_Rule__PropertiesMap = struct {
		CheckExpression string
		ColumnSelectors string
		Disabled        string
		Name            string
		SubstitutionMap string
		Threshold       string
	}{
		CheckExpression: "CheckExpression",
		ColumnSelectors: "ColumnSelectors",
		Disabled:        "Disabled",
		Name:            "Name",
		SubstitutionMap: "SubstitutionMap",
		Threshold:       "Threshold",
	}

	// AWS_DataBrew_Ruleset_Rule__PropertiesSlice reports all the CloudFormation properties for AWS::DataBrew::Ruleset.Rule.
	AWS_DataBrew_Ruleset_Rule__PropertiesSlice = []string{
		AWS_DataBrew_Ruleset_Rule__PropertiesMap.CheckExpression,
		AWS_DataBrew_Ruleset_Rule__PropertiesMap.ColumnSelectors,
		AWS_DataBrew_Ruleset_Rule__PropertiesMap.Disabled,
		AWS_DataBrew_Ruleset_Rule__PropertiesMap.Name,
		AWS_DataBrew_Ruleset_Rule__PropertiesMap.SubstitutionMap,
		AWS_DataBrew_Ruleset_Rule__PropertiesMap.Threshold,
	}
)

// AWS_DataBrew_Ruleset_Rule is a binding for AWS::DataBrew::Ruleset.Rule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-ruleset-rule.html
type AWS_DataBrew_Ruleset_Rule struct {
	// CheckExpression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-ruleset-rule.html#cfn-databrew-ruleset-rule-checkexpression
	CheckExpression cfz.Expression[string] `json:"CheckExpression,omitempty"`

	// ColumnSelectors is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-ruleset-rule.html#cfn-databrew-ruleset-rule-columnselectors
	ColumnSelectors cfz.ExpressionSlice[AWS_DataBrew_Ruleset_ColumnSelector] `json:"ColumnSelectors,omitempty"`

	// Disabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-ruleset-rule.html#cfn-databrew-ruleset-rule-disabled
	Disabled cfz.Expression[bool] `json:"Disabled,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-ruleset-rule.html#cfn-databrew-ruleset-rule-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// SubstitutionMap is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-ruleset-rule.html#cfn-databrew-ruleset-rule-substitutionmap
	SubstitutionMap cfz.ExpressionSlice[AWS_DataBrew_Ruleset_SubstitutionValue] `json:"SubstitutionMap,omitempty"`

	// Threshold is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-databrew-ruleset-rule.html#cfn-databrew-ruleset-rule-threshold
	Threshold cfz.Expression[AWS_DataBrew_Ruleset_Threshold] `json:"Threshold,omitempty"`
}

// New__AWS_DataBrew_Ruleset_Rule initializes a new AWS_DataBrew_Ruleset_Rule.
func New__AWS_DataBrew_Ruleset_Rule() AWS_DataBrew_Ruleset_Rule {
	return AWS_DataBrew_Ruleset_Rule{}
}

// GetType returns the CloudFormation type.
func (AWS_DataBrew_Ruleset_Rule) GetType() string {
	return AWS_DataBrew_Ruleset_Rule__Type
}

// Set__CheckExpression updates property "CheckExpression".
func (t AWS_DataBrew_Ruleset_Rule) Set__CheckExpression(v cfz.Expression[string]) AWS_DataBrew_Ruleset_Rule {
	t.CheckExpression = v
	return t
}

// SetV__CheckExpression updates property "CheckExpression".
func (t AWS_DataBrew_Ruleset_Rule) SetV__CheckExpression(v string) AWS_DataBrew_Ruleset_Rule {
	t.CheckExpression = cfz.V(v)
	return t
}

// Set__ColumnSelectors updates property "ColumnSelectors".
func (t AWS_DataBrew_Ruleset_Rule) Set__ColumnSelectors(v cfz.ExpressionSlice[AWS_DataBrew_Ruleset_ColumnSelector]) AWS_DataBrew_Ruleset_Rule {
	t.ColumnSelectors = v
	return t
}

// SetS__ColumnSelectors updates property "ColumnSelectors".
func (t AWS_DataBrew_Ruleset_Rule) SetS__ColumnSelectors(v ...cfz.Expression[AWS_DataBrew_Ruleset_ColumnSelector]) AWS_DataBrew_Ruleset_Rule {
	t.ColumnSelectors = cfz.S(v...)
	return t
}

// SetSV__ColumnSelectors updates property "ColumnSelectors".
func (t AWS_DataBrew_Ruleset_Rule) SetSV__ColumnSelectors(v ...AWS_DataBrew_Ruleset_ColumnSelector) AWS_DataBrew_Ruleset_Rule {
	t.ColumnSelectors = cfz.SV(v...)
	return t
}

// Set__Disabled updates property "Disabled".
func (t AWS_DataBrew_Ruleset_Rule) Set__Disabled(v cfz.Expression[bool]) AWS_DataBrew_Ruleset_Rule {
	t.Disabled = v
	return t
}

// SetV__Disabled updates property "Disabled".
func (t AWS_DataBrew_Ruleset_Rule) SetV__Disabled(v bool) AWS_DataBrew_Ruleset_Rule {
	t.Disabled = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t AWS_DataBrew_Ruleset_Rule) Set__Name(v cfz.Expression[string]) AWS_DataBrew_Ruleset_Rule {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t AWS_DataBrew_Ruleset_Rule) SetV__Name(v string) AWS_DataBrew_Ruleset_Rule {
	t.Name = cfz.V(v)
	return t
}

// Set__SubstitutionMap updates property "SubstitutionMap".
func (t AWS_DataBrew_Ruleset_Rule) Set__SubstitutionMap(v cfz.ExpressionSlice[AWS_DataBrew_Ruleset_SubstitutionValue]) AWS_DataBrew_Ruleset_Rule {
	t.SubstitutionMap = v
	return t
}

// SetS__SubstitutionMap updates property "SubstitutionMap".
func (t AWS_DataBrew_Ruleset_Rule) SetS__SubstitutionMap(v ...cfz.Expression[AWS_DataBrew_Ruleset_SubstitutionValue]) AWS_DataBrew_Ruleset_Rule {
	t.SubstitutionMap = cfz.S(v...)
	return t
}

// SetSV__SubstitutionMap updates property "SubstitutionMap".
func (t AWS_DataBrew_Ruleset_Rule) SetSV__SubstitutionMap(v ...AWS_DataBrew_Ruleset_SubstitutionValue) AWS_DataBrew_Ruleset_Rule {
	t.SubstitutionMap = cfz.SV(v...)
	return t
}

// Set__Threshold updates property "Threshold".
func (t AWS_DataBrew_Ruleset_Rule) Set__Threshold(v cfz.Expression[AWS_DataBrew_Ruleset_Threshold]) AWS_DataBrew_Ruleset_Rule {
	t.Threshold = v
	return t
}

// SetV__Threshold updates property "Threshold".
func (t AWS_DataBrew_Ruleset_Rule) SetV__Threshold(v AWS_DataBrew_Ruleset_Threshold) AWS_DataBrew_Ruleset_Rule {
	t.Threshold = cfz.V(v)
	return t
}
