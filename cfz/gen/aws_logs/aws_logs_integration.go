// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_logs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Logs_Integration)(nil)
	_ cfz.Resource                   = (*AWS_Logs_Integration)(nil)
)

const (
	// AWS_Logs_Integration__Type is the CloudFormation type for AWS::Logs::Integration.
	AWS_Logs_Integration__Type = "AWS::Logs::Integration"
)

var (
	// AWS_Logs_Integration__AttributesMap reports all the CloudFormation attributes for AWS::Logs::Integration.
	AWS_Logs_Integration__AttributesMap = struct {
		IntegrationStatus string
	}{
		IntegrationStatus: "IntegrationStatus",
	}

	// AWS_Logs_Integration__AttributesSlice reports all the CloudFormation attributes for AWS::Logs::Integration.
	AWS_Logs_Integration__AttributesSlice = []string{
		AWS_Logs_Integration__AttributesMap.IntegrationStatus,
	}
)

var (
	// AWS_Logs_Integration__PropertiesMap reports all the CloudFormation properties for AWS::Logs::Integration.
	AWS_Logs_Integration__PropertiesMap = struct {
		IntegrationName string
		IntegrationType string
		ResourceConfig  string
	}{
		IntegrationName: "IntegrationName",
		IntegrationType: "IntegrationType",
		ResourceConfig:  "ResourceConfig",
	}

	// AWS_Logs_Integration__PropertiesSlice reports all the CloudFormation properties for AWS::Logs::Integration.
	AWS_Logs_Integration__PropertiesSlice = []string{
		AWS_Logs_Integration__PropertiesMap.IntegrationName,
		AWS_Logs_Integration__PropertiesMap.IntegrationType,
		AWS_Logs_Integration__PropertiesMap.ResourceConfig,
	}
)

// AWS_Logs_Integration is a binding for AWS::Logs::Integration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-integration.html
type AWS_Logs_Integration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// IntegrationName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-integration.html#cfn-logs-integration-integrationname
	IntegrationName cfz.Expression[string] `json:"IntegrationName,omitempty"`

	// IntegrationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-integration.html#cfn-logs-integration-integrationtype
	IntegrationType cfz.Expression[string] `json:"IntegrationType,omitempty"`

	// ResourceConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-integration.html#cfn-logs-integration-resourceconfig
	ResourceConfig cfz.Expression[AWS_Logs_Integration_ResourceConfig] `json:"ResourceConfig,omitempty"`
}

// New__AWS_Logs_Integration initializes a new *AWS_Logs_Integration.
func New__AWS_Logs_Integration(logicalName string) *AWS_Logs_Integration {
	return &AWS_Logs_Integration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Logs_Integration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Logs_Integration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Logs_Integration) GetType() string {
	return AWS_Logs_Integration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Logs_Integration) Set__LogicalName(v string) *AWS_Logs_Integration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Logs_Integration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Logs_Integration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Logs_Integration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Logs_Integration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Logs_Integration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Logs_Integration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Logs_Integration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Logs_Integration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Logs_Integration) Set__RequestedOutputs(v []cfz.Output) *AWS_Logs_Integration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Logs_Integration) Add__RequestedOutputs(v ...cfz.Output) *AWS_Logs_Integration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__IntegrationName updates property "IntegrationName".
func (t *AWS_Logs_Integration) Set__IntegrationName(v cfz.Expression[string]) *AWS_Logs_Integration {
	t.IntegrationName = v
	return t
}

// SetV__IntegrationName updates property "IntegrationName".
func (t *AWS_Logs_Integration) SetV__IntegrationName(v string) *AWS_Logs_Integration {
	t.IntegrationName = cfz.V(v)
	return t
}

// Set__IntegrationType updates property "IntegrationType".
func (t *AWS_Logs_Integration) Set__IntegrationType(v cfz.Expression[string]) *AWS_Logs_Integration {
	t.IntegrationType = v
	return t
}

// SetV__IntegrationType updates property "IntegrationType".
func (t *AWS_Logs_Integration) SetV__IntegrationType(v string) *AWS_Logs_Integration {
	t.IntegrationType = cfz.V(v)
	return t
}

// Set__ResourceConfig updates property "ResourceConfig".
func (t *AWS_Logs_Integration) Set__ResourceConfig(v cfz.Expression[AWS_Logs_Integration_ResourceConfig]) *AWS_Logs_Integration {
	t.ResourceConfig = v
	return t
}

// SetV__ResourceConfig updates property "ResourceConfig".
func (t *AWS_Logs_Integration) SetV__ResourceConfig(v AWS_Logs_Integration_ResourceConfig) *AWS_Logs_Integration {
	t.ResourceConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Logs_Integration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__IntegrationStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IntegrationStatus
func (t *AWS_Logs_Integration) GetAtt__IntegrationStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Logs_Integration__AttributesMap.IntegrationStatus))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Logs_Integration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IntegrationStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: IntegrationStatus
func (t *AWS_Logs_Integration) GetConventionalOutputAtt__IntegrationStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIntegrationStatus", t.GetAtt__IntegrationStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Logs_Integration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Logs_Integration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Logs_Integration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
