// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_logs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Logs_ResourcePolicy)(nil)
	_ cfz.Resource                   = (*AWS_Logs_ResourcePolicy)(nil)
)

const (
	// AWS_Logs_ResourcePolicy__Type is the CloudFormation type for AWS::Logs::ResourcePolicy.
	AWS_Logs_ResourcePolicy__Type = "AWS::Logs::ResourcePolicy"
)

var (
	// AWS_Logs_ResourcePolicy__PropertiesMap reports all the CloudFormation properties for AWS::Logs::ResourcePolicy.
	AWS_Logs_ResourcePolicy__PropertiesMap = struct {
		PolicyDocument string
		PolicyName     string
	}{
		PolicyDocument: "PolicyDocument",
		PolicyName:     "PolicyName",
	}

	// AWS_Logs_ResourcePolicy__PropertiesSlice reports all the CloudFormation properties for AWS::Logs::ResourcePolicy.
	AWS_Logs_ResourcePolicy__PropertiesSlice = []string{
		AWS_Logs_ResourcePolicy__PropertiesMap.PolicyDocument,
		AWS_Logs_ResourcePolicy__PropertiesMap.PolicyName,
	}
)

// AWS_Logs_ResourcePolicy is a binding for AWS::Logs::ResourcePolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-resourcepolicy.html
type AWS_Logs_ResourcePolicy struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// PolicyDocument is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-resourcepolicy.html#cfn-logs-resourcepolicy-policydocument
	PolicyDocument cfz.Expression[string] `json:"PolicyDocument,omitempty"`

	// PolicyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-resourcepolicy.html#cfn-logs-resourcepolicy-policyname
	PolicyName cfz.Expression[string] `json:"PolicyName,omitempty"`
}

// New__AWS_Logs_ResourcePolicy initializes a new *AWS_Logs_ResourcePolicy.
func New__AWS_Logs_ResourcePolicy(logicalName string) *AWS_Logs_ResourcePolicy {
	return &AWS_Logs_ResourcePolicy{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Logs_ResourcePolicy) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Logs_ResourcePolicy) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Logs_ResourcePolicy) GetType() string {
	return AWS_Logs_ResourcePolicy__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Logs_ResourcePolicy) Set__LogicalName(v string) *AWS_Logs_ResourcePolicy {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Logs_ResourcePolicy) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Logs_ResourcePolicy {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Logs_ResourcePolicy) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Logs_ResourcePolicy {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Logs_ResourcePolicy) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Logs_ResourcePolicy {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Logs_ResourcePolicy) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Logs_ResourcePolicy {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Logs_ResourcePolicy) Set__RequestedOutputs(v []cfz.Output) *AWS_Logs_ResourcePolicy {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Logs_ResourcePolicy) Add__RequestedOutputs(v ...cfz.Output) *AWS_Logs_ResourcePolicy {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__PolicyDocument updates property "PolicyDocument".
func (t *AWS_Logs_ResourcePolicy) Set__PolicyDocument(v cfz.Expression[string]) *AWS_Logs_ResourcePolicy {
	t.PolicyDocument = v
	return t
}

// SetV__PolicyDocument updates property "PolicyDocument".
func (t *AWS_Logs_ResourcePolicy) SetV__PolicyDocument(v string) *AWS_Logs_ResourcePolicy {
	t.PolicyDocument = cfz.V(v)
	return t
}

// Set__PolicyName updates property "PolicyName".
func (t *AWS_Logs_ResourcePolicy) Set__PolicyName(v cfz.Expression[string]) *AWS_Logs_ResourcePolicy {
	t.PolicyName = v
	return t
}

// SetV__PolicyName updates property "PolicyName".
func (t *AWS_Logs_ResourcePolicy) SetV__PolicyName(v string) *AWS_Logs_ResourcePolicy {
	t.PolicyName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Logs_ResourcePolicy) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Logs_ResourcePolicy) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Logs_ResourcePolicy) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Logs_ResourcePolicy

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Logs_ResourcePolicy) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
