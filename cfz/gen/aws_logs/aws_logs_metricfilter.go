// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_logs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Logs_MetricFilter)(nil)
	_ cfz.Resource                   = (*AWS_Logs_MetricFilter)(nil)
)

const (
	// AWS_Logs_MetricFilter__Type is the CloudFormation type for AWS::Logs::MetricFilter.
	AWS_Logs_MetricFilter__Type = "AWS::Logs::MetricFilter"
)

var (
	// AWS_Logs_MetricFilter__PropertiesMap reports all the CloudFormation properties for AWS::Logs::MetricFilter.
	AWS_Logs_MetricFilter__PropertiesMap = struct {
		FilterName            string
		FilterPattern         string
		LogGroupName          string
		MetricTransformations string
	}{
		FilterName:            "FilterName",
		FilterPattern:         "FilterPattern",
		LogGroupName:          "LogGroupName",
		MetricTransformations: "MetricTransformations",
	}

	// AWS_Logs_MetricFilter__PropertiesSlice reports all the CloudFormation properties for AWS::Logs::MetricFilter.
	AWS_Logs_MetricFilter__PropertiesSlice = []string{
		AWS_Logs_MetricFilter__PropertiesMap.FilterName,
		AWS_Logs_MetricFilter__PropertiesMap.FilterPattern,
		AWS_Logs_MetricFilter__PropertiesMap.LogGroupName,
		AWS_Logs_MetricFilter__PropertiesMap.MetricTransformations,
	}
)

// AWS_Logs_MetricFilter is a binding for AWS::Logs::MetricFilter.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html
type AWS_Logs_MetricFilter struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// FilterName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-logs-metricfilter-filtername
	FilterName cfz.Expression[string] `json:"FilterName,omitempty"`

	// FilterPattern is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-logs-metricfilter-filterpattern
	FilterPattern cfz.Expression[string] `json:"FilterPattern,omitempty"`

	// LogGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-logs-metricfilter-loggroupname
	LogGroupName cfz.Expression[string] `json:"LogGroupName,omitempty"`

	// MetricTransformations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-logs-metricfilter-metrictransformations
	MetricTransformations cfz.ExpressionSlice[AWS_Logs_MetricFilter_MetricTransformation] `json:"MetricTransformations,omitempty"`
}

// New__AWS_Logs_MetricFilter initializes a new *AWS_Logs_MetricFilter.
func New__AWS_Logs_MetricFilter(logicalName string) *AWS_Logs_MetricFilter {
	return &AWS_Logs_MetricFilter{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Logs_MetricFilter) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Logs_MetricFilter) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Logs_MetricFilter) GetType() string {
	return AWS_Logs_MetricFilter__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Logs_MetricFilter) Set__LogicalName(v string) *AWS_Logs_MetricFilter {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Logs_MetricFilter) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Logs_MetricFilter {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Logs_MetricFilter) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Logs_MetricFilter {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Logs_MetricFilter) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Logs_MetricFilter {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Logs_MetricFilter) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Logs_MetricFilter {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Logs_MetricFilter) Set__RequestedOutputs(v []cfz.Output) *AWS_Logs_MetricFilter {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Logs_MetricFilter) Add__RequestedOutputs(v ...cfz.Output) *AWS_Logs_MetricFilter {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__FilterName updates property "FilterName".
func (t *AWS_Logs_MetricFilter) Set__FilterName(v cfz.Expression[string]) *AWS_Logs_MetricFilter {
	t.FilterName = v
	return t
}

// SetV__FilterName updates property "FilterName".
func (t *AWS_Logs_MetricFilter) SetV__FilterName(v string) *AWS_Logs_MetricFilter {
	t.FilterName = cfz.V(v)
	return t
}

// Set__FilterPattern updates property "FilterPattern".
func (t *AWS_Logs_MetricFilter) Set__FilterPattern(v cfz.Expression[string]) *AWS_Logs_MetricFilter {
	t.FilterPattern = v
	return t
}

// SetV__FilterPattern updates property "FilterPattern".
func (t *AWS_Logs_MetricFilter) SetV__FilterPattern(v string) *AWS_Logs_MetricFilter {
	t.FilterPattern = cfz.V(v)
	return t
}

// Set__LogGroupName updates property "LogGroupName".
func (t *AWS_Logs_MetricFilter) Set__LogGroupName(v cfz.Expression[string]) *AWS_Logs_MetricFilter {
	t.LogGroupName = v
	return t
}

// SetV__LogGroupName updates property "LogGroupName".
func (t *AWS_Logs_MetricFilter) SetV__LogGroupName(v string) *AWS_Logs_MetricFilter {
	t.LogGroupName = cfz.V(v)
	return t
}

// Set__MetricTransformations updates property "MetricTransformations".
func (t *AWS_Logs_MetricFilter) Set__MetricTransformations(v cfz.ExpressionSlice[AWS_Logs_MetricFilter_MetricTransformation]) *AWS_Logs_MetricFilter {
	t.MetricTransformations = v
	return t
}

// SetS__MetricTransformations updates property "MetricTransformations".
func (t *AWS_Logs_MetricFilter) SetS__MetricTransformations(v ...cfz.Expression[AWS_Logs_MetricFilter_MetricTransformation]) *AWS_Logs_MetricFilter {
	t.MetricTransformations = cfz.S(v...)
	return t
}

// SetSV__MetricTransformations updates property "MetricTransformations".
func (t *AWS_Logs_MetricFilter) SetSV__MetricTransformations(v ...AWS_Logs_MetricFilter_MetricTransformation) *AWS_Logs_MetricFilter {
	t.MetricTransformations = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Logs_MetricFilter) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Logs_MetricFilter) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Logs_MetricFilter) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Logs_MetricFilter

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Logs_MetricFilter) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
