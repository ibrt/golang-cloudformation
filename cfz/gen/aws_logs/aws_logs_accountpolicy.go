// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_logs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Logs_AccountPolicy)(nil)
	_ cfz.Resource                   = (*AWS_Logs_AccountPolicy)(nil)
)

const (
	// AWS_Logs_AccountPolicy__Type is the CloudFormation type for AWS::Logs::AccountPolicy.
	AWS_Logs_AccountPolicy__Type = "AWS::Logs::AccountPolicy"
)

var (
	// AWS_Logs_AccountPolicy__AttributesMap reports all the CloudFormation attributes for AWS::Logs::AccountPolicy.
	AWS_Logs_AccountPolicy__AttributesMap = struct {
		AccountId string
	}{
		AccountId: "AccountId",
	}

	// AWS_Logs_AccountPolicy__AttributesSlice reports all the CloudFormation attributes for AWS::Logs::AccountPolicy.
	AWS_Logs_AccountPolicy__AttributesSlice = []string{
		AWS_Logs_AccountPolicy__AttributesMap.AccountId,
	}
)

var (
	// AWS_Logs_AccountPolicy__PropertiesMap reports all the CloudFormation properties for AWS::Logs::AccountPolicy.
	AWS_Logs_AccountPolicy__PropertiesMap = struct {
		PolicyDocument    string
		PolicyName        string
		PolicyType        string
		Scope             string
		SelectionCriteria string
	}{
		PolicyDocument:    "PolicyDocument",
		PolicyName:        "PolicyName",
		PolicyType:        "PolicyType",
		Scope:             "Scope",
		SelectionCriteria: "SelectionCriteria",
	}

	// AWS_Logs_AccountPolicy__PropertiesSlice reports all the CloudFormation properties for AWS::Logs::AccountPolicy.
	AWS_Logs_AccountPolicy__PropertiesSlice = []string{
		AWS_Logs_AccountPolicy__PropertiesMap.PolicyDocument,
		AWS_Logs_AccountPolicy__PropertiesMap.PolicyName,
		AWS_Logs_AccountPolicy__PropertiesMap.PolicyType,
		AWS_Logs_AccountPolicy__PropertiesMap.Scope,
		AWS_Logs_AccountPolicy__PropertiesMap.SelectionCriteria,
	}
)

// AWS_Logs_AccountPolicy is a binding for AWS::Logs::AccountPolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html
type AWS_Logs_AccountPolicy struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// PolicyDocument is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-policydocument
	PolicyDocument cfz.Expression[string] `json:"PolicyDocument,omitempty"`

	// PolicyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-policyname
	PolicyName cfz.Expression[string] `json:"PolicyName,omitempty"`

	// PolicyType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-policytype
	PolicyType cfz.Expression[string] `json:"PolicyType,omitempty"`

	// Scope is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-scope
	Scope cfz.Expression[string] `json:"Scope,omitempty"`

	// SelectionCriteria is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-accountpolicy.html#cfn-logs-accountpolicy-selectioncriteria
	SelectionCriteria cfz.Expression[string] `json:"SelectionCriteria,omitempty"`
}

// New__AWS_Logs_AccountPolicy initializes a new *AWS_Logs_AccountPolicy.
func New__AWS_Logs_AccountPolicy(logicalName string) *AWS_Logs_AccountPolicy {
	return &AWS_Logs_AccountPolicy{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Logs_AccountPolicy) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Logs_AccountPolicy) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Logs_AccountPolicy) GetType() string {
	return AWS_Logs_AccountPolicy__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Logs_AccountPolicy) Set__LogicalName(v string) *AWS_Logs_AccountPolicy {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Logs_AccountPolicy) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Logs_AccountPolicy {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Logs_AccountPolicy) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Logs_AccountPolicy {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Logs_AccountPolicy) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Logs_AccountPolicy {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Logs_AccountPolicy) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Logs_AccountPolicy {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Logs_AccountPolicy) Set__RequestedOutputs(v []cfz.Output) *AWS_Logs_AccountPolicy {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Logs_AccountPolicy) Add__RequestedOutputs(v ...cfz.Output) *AWS_Logs_AccountPolicy {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__PolicyDocument updates property "PolicyDocument".
func (t *AWS_Logs_AccountPolicy) Set__PolicyDocument(v cfz.Expression[string]) *AWS_Logs_AccountPolicy {
	t.PolicyDocument = v
	return t
}

// SetV__PolicyDocument updates property "PolicyDocument".
func (t *AWS_Logs_AccountPolicy) SetV__PolicyDocument(v string) *AWS_Logs_AccountPolicy {
	t.PolicyDocument = cfz.V(v)
	return t
}

// Set__PolicyName updates property "PolicyName".
func (t *AWS_Logs_AccountPolicy) Set__PolicyName(v cfz.Expression[string]) *AWS_Logs_AccountPolicy {
	t.PolicyName = v
	return t
}

// SetV__PolicyName updates property "PolicyName".
func (t *AWS_Logs_AccountPolicy) SetV__PolicyName(v string) *AWS_Logs_AccountPolicy {
	t.PolicyName = cfz.V(v)
	return t
}

// Set__PolicyType updates property "PolicyType".
func (t *AWS_Logs_AccountPolicy) Set__PolicyType(v cfz.Expression[string]) *AWS_Logs_AccountPolicy {
	t.PolicyType = v
	return t
}

// SetV__PolicyType updates property "PolicyType".
func (t *AWS_Logs_AccountPolicy) SetV__PolicyType(v string) *AWS_Logs_AccountPolicy {
	t.PolicyType = cfz.V(v)
	return t
}

// Set__Scope updates property "Scope".
func (t *AWS_Logs_AccountPolicy) Set__Scope(v cfz.Expression[string]) *AWS_Logs_AccountPolicy {
	t.Scope = v
	return t
}

// SetV__Scope updates property "Scope".
func (t *AWS_Logs_AccountPolicy) SetV__Scope(v string) *AWS_Logs_AccountPolicy {
	t.Scope = cfz.V(v)
	return t
}

// Set__SelectionCriteria updates property "SelectionCriteria".
func (t *AWS_Logs_AccountPolicy) Set__SelectionCriteria(v cfz.Expression[string]) *AWS_Logs_AccountPolicy {
	t.SelectionCriteria = v
	return t
}

// SetV__SelectionCriteria updates property "SelectionCriteria".
func (t *AWS_Logs_AccountPolicy) SetV__SelectionCriteria(v string) *AWS_Logs_AccountPolicy {
	t.SelectionCriteria = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Logs_AccountPolicy) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AccountId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AccountId
func (t *AWS_Logs_AccountPolicy) GetAtt__AccountId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Logs_AccountPolicy__AttributesMap.AccountId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Logs_AccountPolicy) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AccountId returns a conventionally configured output for an attribute of this resource.
// Attribute: AccountId
func (t *AWS_Logs_AccountPolicy) GetConventionalOutputAtt__AccountId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAccountId", t.GetAtt__AccountId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Logs_AccountPolicy) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Logs_AccountPolicy

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Logs_AccountPolicy) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
