// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_logs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Logs_DeliverySource)(nil)
	_ cfz.Resource                   = (*AWS_Logs_DeliverySource)(nil)
)

const (
	// AWS_Logs_DeliverySource__Type is the CloudFormation type for AWS::Logs::DeliverySource.
	AWS_Logs_DeliverySource__Type = "AWS::Logs::DeliverySource"
)

var (
	// AWS_Logs_DeliverySource__AttributesMap reports all the CloudFormation attributes for AWS::Logs::DeliverySource.
	AWS_Logs_DeliverySource__AttributesMap = struct {
		Arn          string
		ResourceArns string
		Service      string
	}{
		Arn:          "Arn",
		ResourceArns: "ResourceArns",
		Service:      "Service",
	}

	// AWS_Logs_DeliverySource__AttributesSlice reports all the CloudFormation attributes for AWS::Logs::DeliverySource.
	AWS_Logs_DeliverySource__AttributesSlice = []string{
		AWS_Logs_DeliverySource__AttributesMap.Arn,
		AWS_Logs_DeliverySource__AttributesMap.ResourceArns,
		AWS_Logs_DeliverySource__AttributesMap.Service,
	}
)

var (
	// AWS_Logs_DeliverySource__PropertiesMap reports all the CloudFormation properties for AWS::Logs::DeliverySource.
	AWS_Logs_DeliverySource__PropertiesMap = struct {
		LogType     string
		Name        string
		ResourceArn string
		Tags        string
	}{
		LogType:     "LogType",
		Name:        "Name",
		ResourceArn: "ResourceArn",
		Tags:        "Tags",
	}

	// AWS_Logs_DeliverySource__PropertiesSlice reports all the CloudFormation properties for AWS::Logs::DeliverySource.
	AWS_Logs_DeliverySource__PropertiesSlice = []string{
		AWS_Logs_DeliverySource__PropertiesMap.LogType,
		AWS_Logs_DeliverySource__PropertiesMap.Name,
		AWS_Logs_DeliverySource__PropertiesMap.ResourceArn,
		AWS_Logs_DeliverySource__PropertiesMap.Tags,
	}
)

// AWS_Logs_DeliverySource is a binding for AWS::Logs::DeliverySource.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html
type AWS_Logs_DeliverySource struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// LogType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html#cfn-logs-deliverysource-logtype
	LogType cfz.Expression[string] `json:"LogType,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html#cfn-logs-deliverysource-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// ResourceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html#cfn-logs-deliverysource-resourcearn
	ResourceArn cfz.Expression[string] `json:"ResourceArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-deliverysource.html#cfn-logs-deliverysource-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Logs_DeliverySource initializes a new *AWS_Logs_DeliverySource.
func New__AWS_Logs_DeliverySource(logicalName string) *AWS_Logs_DeliverySource {
	return &AWS_Logs_DeliverySource{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Logs_DeliverySource) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Logs_DeliverySource) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Logs_DeliverySource) GetType() string {
	return AWS_Logs_DeliverySource__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Logs_DeliverySource) Set__LogicalName(v string) *AWS_Logs_DeliverySource {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Logs_DeliverySource) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Logs_DeliverySource {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Logs_DeliverySource) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Logs_DeliverySource {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Logs_DeliverySource) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Logs_DeliverySource {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Logs_DeliverySource) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Logs_DeliverySource {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Logs_DeliverySource) Set__RequestedOutputs(v []cfz.Output) *AWS_Logs_DeliverySource {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Logs_DeliverySource) Add__RequestedOutputs(v ...cfz.Output) *AWS_Logs_DeliverySource {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__LogType updates property "LogType".
func (t *AWS_Logs_DeliverySource) Set__LogType(v cfz.Expression[string]) *AWS_Logs_DeliverySource {
	t.LogType = v
	return t
}

// SetV__LogType updates property "LogType".
func (t *AWS_Logs_DeliverySource) SetV__LogType(v string) *AWS_Logs_DeliverySource {
	t.LogType = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Logs_DeliverySource) Set__Name(v cfz.Expression[string]) *AWS_Logs_DeliverySource {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Logs_DeliverySource) SetV__Name(v string) *AWS_Logs_DeliverySource {
	t.Name = cfz.V(v)
	return t
}

// Set__ResourceArn updates property "ResourceArn".
func (t *AWS_Logs_DeliverySource) Set__ResourceArn(v cfz.Expression[string]) *AWS_Logs_DeliverySource {
	t.ResourceArn = v
	return t
}

// SetV__ResourceArn updates property "ResourceArn".
func (t *AWS_Logs_DeliverySource) SetV__ResourceArn(v string) *AWS_Logs_DeliverySource {
	t.ResourceArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Logs_DeliverySource) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Logs_DeliverySource {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Logs_DeliverySource) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Logs_DeliverySource {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Logs_DeliverySource) SetSV__Tags(v ...cfz.Tag) *AWS_Logs_DeliverySource {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Logs_DeliverySource) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Logs_DeliverySource) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Logs_DeliverySource__AttributesMap.Arn))
}

// GetAttSlice__ResourceArns returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceArns
func (t *AWS_Logs_DeliverySource) GetAttSlice__ResourceArns() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Logs_DeliverySource__AttributesMap.ResourceArns))
}

// GetAtt__Service returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Service
func (t *AWS_Logs_DeliverySource) GetAtt__Service() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Logs_DeliverySource__AttributesMap.Service))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Logs_DeliverySource) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Logs_DeliverySource) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceArns returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceArns
func (t *AWS_Logs_DeliverySource) GetConventionalOutputAtt__ResourceArns(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceArns", t.GetAttSlice__ResourceArns())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Service returns a conventionally configured output for an attribute of this resource.
// Attribute: Service
func (t *AWS_Logs_DeliverySource) GetConventionalOutputAtt__Service(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttService", t.GetAtt__Service())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Logs_DeliverySource) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Logs_DeliverySource

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Logs_DeliverySource) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
