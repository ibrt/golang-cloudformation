// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotsitewise

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IoTSiteWise_Asset)(nil)
	_ cfz.Resource                   = (*AWS_IoTSiteWise_Asset)(nil)
)

const (
	// AWS_IoTSiteWise_Asset__Type is the CloudFormation type for AWS::IoTSiteWise::Asset.
	AWS_IoTSiteWise_Asset__Type = "AWS::IoTSiteWise::Asset"
)

var (
	// AWS_IoTSiteWise_Asset__AttributesMap reports all the CloudFormation attributes for AWS::IoTSiteWise::Asset.
	AWS_IoTSiteWise_Asset__AttributesMap = struct {
		AssetArn string
		AssetId  string
	}{
		AssetArn: "AssetArn",
		AssetId:  "AssetId",
	}

	// AWS_IoTSiteWise_Asset__AttributesSlice reports all the CloudFormation attributes for AWS::IoTSiteWise::Asset.
	AWS_IoTSiteWise_Asset__AttributesSlice = []string{
		AWS_IoTSiteWise_Asset__AttributesMap.AssetArn,
		AWS_IoTSiteWise_Asset__AttributesMap.AssetId,
	}
)

var (
	// AWS_IoTSiteWise_Asset__PropertiesMap reports all the CloudFormation properties for AWS::IoTSiteWise::Asset.
	AWS_IoTSiteWise_Asset__PropertiesMap = struct {
		AssetDescription string
		AssetExternalId  string
		AssetHierarchies string
		AssetModelId     string
		AssetName        string
		AssetProperties  string
		Tags             string
	}{
		AssetDescription: "AssetDescription",
		AssetExternalId:  "AssetExternalId",
		AssetHierarchies: "AssetHierarchies",
		AssetModelId:     "AssetModelId",
		AssetName:        "AssetName",
		AssetProperties:  "AssetProperties",
		Tags:             "Tags",
	}

	// AWS_IoTSiteWise_Asset__PropertiesSlice reports all the CloudFormation properties for AWS::IoTSiteWise::Asset.
	AWS_IoTSiteWise_Asset__PropertiesSlice = []string{
		AWS_IoTSiteWise_Asset__PropertiesMap.AssetDescription,
		AWS_IoTSiteWise_Asset__PropertiesMap.AssetExternalId,
		AWS_IoTSiteWise_Asset__PropertiesMap.AssetHierarchies,
		AWS_IoTSiteWise_Asset__PropertiesMap.AssetModelId,
		AWS_IoTSiteWise_Asset__PropertiesMap.AssetName,
		AWS_IoTSiteWise_Asset__PropertiesMap.AssetProperties,
		AWS_IoTSiteWise_Asset__PropertiesMap.Tags,
	}
)

// AWS_IoTSiteWise_Asset is a binding for AWS::IoTSiteWise::Asset.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html
type AWS_IoTSiteWise_Asset struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AssetDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetdescription
	AssetDescription cfz.Expression[string] `json:"AssetDescription,omitempty"`

	// AssetExternalId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetexternalid
	AssetExternalId cfz.Expression[string] `json:"AssetExternalId,omitempty"`

	// AssetHierarchies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assethierarchies
	AssetHierarchies cfz.ExpressionSlice[AWS_IoTSiteWise_Asset_AssetHierarchy] `json:"AssetHierarchies,omitempty"`

	// AssetModelId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetmodelid
	AssetModelId cfz.Expression[string] `json:"AssetModelId,omitempty"`

	// AssetName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetname
	AssetName cfz.Expression[string] `json:"AssetName,omitempty"`

	// AssetProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-assetproperties
	AssetProperties cfz.ExpressionSlice[AWS_IoTSiteWise_Asset_AssetProperty] `json:"AssetProperties,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-asset.html#cfn-iotsitewise-asset-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_IoTSiteWise_Asset initializes a new *AWS_IoTSiteWise_Asset.
func New__AWS_IoTSiteWise_Asset(logicalName string) *AWS_IoTSiteWise_Asset {
	return &AWS_IoTSiteWise_Asset{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IoTSiteWise_Asset) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IoTSiteWise_Asset) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IoTSiteWise_Asset) GetType() string {
	return AWS_IoTSiteWise_Asset__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IoTSiteWise_Asset) Set__LogicalName(v string) *AWS_IoTSiteWise_Asset {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IoTSiteWise_Asset) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IoTSiteWise_Asset {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IoTSiteWise_Asset) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IoTSiteWise_Asset {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IoTSiteWise_Asset) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IoTSiteWise_Asset {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IoTSiteWise_Asset) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IoTSiteWise_Asset {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IoTSiteWise_Asset) Set__RequestedOutputs(v []cfz.Output) *AWS_IoTSiteWise_Asset {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IoTSiteWise_Asset) Add__RequestedOutputs(v ...cfz.Output) *AWS_IoTSiteWise_Asset {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AssetDescription updates property "AssetDescription".
func (t *AWS_IoTSiteWise_Asset) Set__AssetDescription(v cfz.Expression[string]) *AWS_IoTSiteWise_Asset {
	t.AssetDescription = v
	return t
}

// SetV__AssetDescription updates property "AssetDescription".
func (t *AWS_IoTSiteWise_Asset) SetV__AssetDescription(v string) *AWS_IoTSiteWise_Asset {
	t.AssetDescription = cfz.V(v)
	return t
}

// Set__AssetExternalId updates property "AssetExternalId".
func (t *AWS_IoTSiteWise_Asset) Set__AssetExternalId(v cfz.Expression[string]) *AWS_IoTSiteWise_Asset {
	t.AssetExternalId = v
	return t
}

// SetV__AssetExternalId updates property "AssetExternalId".
func (t *AWS_IoTSiteWise_Asset) SetV__AssetExternalId(v string) *AWS_IoTSiteWise_Asset {
	t.AssetExternalId = cfz.V(v)
	return t
}

// Set__AssetHierarchies updates property "AssetHierarchies".
func (t *AWS_IoTSiteWise_Asset) Set__AssetHierarchies(v cfz.ExpressionSlice[AWS_IoTSiteWise_Asset_AssetHierarchy]) *AWS_IoTSiteWise_Asset {
	t.AssetHierarchies = v
	return t
}

// SetS__AssetHierarchies updates property "AssetHierarchies".
func (t *AWS_IoTSiteWise_Asset) SetS__AssetHierarchies(v ...cfz.Expression[AWS_IoTSiteWise_Asset_AssetHierarchy]) *AWS_IoTSiteWise_Asset {
	t.AssetHierarchies = cfz.S(v...)
	return t
}

// SetSV__AssetHierarchies updates property "AssetHierarchies".
func (t *AWS_IoTSiteWise_Asset) SetSV__AssetHierarchies(v ...AWS_IoTSiteWise_Asset_AssetHierarchy) *AWS_IoTSiteWise_Asset {
	t.AssetHierarchies = cfz.SV(v...)
	return t
}

// Set__AssetModelId updates property "AssetModelId".
func (t *AWS_IoTSiteWise_Asset) Set__AssetModelId(v cfz.Expression[string]) *AWS_IoTSiteWise_Asset {
	t.AssetModelId = v
	return t
}

// SetV__AssetModelId updates property "AssetModelId".
func (t *AWS_IoTSiteWise_Asset) SetV__AssetModelId(v string) *AWS_IoTSiteWise_Asset {
	t.AssetModelId = cfz.V(v)
	return t
}

// Set__AssetName updates property "AssetName".
func (t *AWS_IoTSiteWise_Asset) Set__AssetName(v cfz.Expression[string]) *AWS_IoTSiteWise_Asset {
	t.AssetName = v
	return t
}

// SetV__AssetName updates property "AssetName".
func (t *AWS_IoTSiteWise_Asset) SetV__AssetName(v string) *AWS_IoTSiteWise_Asset {
	t.AssetName = cfz.V(v)
	return t
}

// Set__AssetProperties updates property "AssetProperties".
func (t *AWS_IoTSiteWise_Asset) Set__AssetProperties(v cfz.ExpressionSlice[AWS_IoTSiteWise_Asset_AssetProperty]) *AWS_IoTSiteWise_Asset {
	t.AssetProperties = v
	return t
}

// SetS__AssetProperties updates property "AssetProperties".
func (t *AWS_IoTSiteWise_Asset) SetS__AssetProperties(v ...cfz.Expression[AWS_IoTSiteWise_Asset_AssetProperty]) *AWS_IoTSiteWise_Asset {
	t.AssetProperties = cfz.S(v...)
	return t
}

// SetSV__AssetProperties updates property "AssetProperties".
func (t *AWS_IoTSiteWise_Asset) SetSV__AssetProperties(v ...AWS_IoTSiteWise_Asset_AssetProperty) *AWS_IoTSiteWise_Asset {
	t.AssetProperties = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IoTSiteWise_Asset) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_IoTSiteWise_Asset {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_IoTSiteWise_Asset) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_IoTSiteWise_Asset {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_IoTSiteWise_Asset) SetSV__Tags(v ...cfz.Tag) *AWS_IoTSiteWise_Asset {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IoTSiteWise_Asset) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AssetArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AssetArn
func (t *AWS_IoTSiteWise_Asset) GetAtt__AssetArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTSiteWise_Asset__AttributesMap.AssetArn))
}

// GetAtt__AssetId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AssetId
func (t *AWS_IoTSiteWise_Asset) GetAtt__AssetId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTSiteWise_Asset__AttributesMap.AssetId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IoTSiteWise_Asset) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AssetArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AssetArn
func (t *AWS_IoTSiteWise_Asset) GetConventionalOutputAtt__AssetArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssetArn", t.GetAtt__AssetArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AssetId returns a conventionally configured output for an attribute of this resource.
// Attribute: AssetId
func (t *AWS_IoTSiteWise_Asset) GetConventionalOutputAtt__AssetId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssetId", t.GetAtt__AssetId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IoTSiteWise_Asset) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IoTSiteWise_Asset

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IoTSiteWise_Asset) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
