// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotsitewise

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IoTSiteWise_AccessPolicy)(nil)
	_ cfz.Resource                   = (*AWS_IoTSiteWise_AccessPolicy)(nil)
)

const (
	// AWS_IoTSiteWise_AccessPolicy__Type is the CloudFormation type for AWS::IoTSiteWise::AccessPolicy.
	AWS_IoTSiteWise_AccessPolicy__Type = "AWS::IoTSiteWise::AccessPolicy"
)

var (
	// AWS_IoTSiteWise_AccessPolicy__AttributesMap reports all the CloudFormation attributes for AWS::IoTSiteWise::AccessPolicy.
	AWS_IoTSiteWise_AccessPolicy__AttributesMap = struct {
		AccessPolicyArn string
		AccessPolicyId  string
	}{
		AccessPolicyArn: "AccessPolicyArn",
		AccessPolicyId:  "AccessPolicyId",
	}

	// AWS_IoTSiteWise_AccessPolicy__AttributesSlice reports all the CloudFormation attributes for AWS::IoTSiteWise::AccessPolicy.
	AWS_IoTSiteWise_AccessPolicy__AttributesSlice = []string{
		AWS_IoTSiteWise_AccessPolicy__AttributesMap.AccessPolicyArn,
		AWS_IoTSiteWise_AccessPolicy__AttributesMap.AccessPolicyId,
	}
)

var (
	// AWS_IoTSiteWise_AccessPolicy__PropertiesMap reports all the CloudFormation properties for AWS::IoTSiteWise::AccessPolicy.
	AWS_IoTSiteWise_AccessPolicy__PropertiesMap = struct {
		AccessPolicyIdentity   string
		AccessPolicyPermission string
		AccessPolicyResource   string
	}{
		AccessPolicyIdentity:   "AccessPolicyIdentity",
		AccessPolicyPermission: "AccessPolicyPermission",
		AccessPolicyResource:   "AccessPolicyResource",
	}

	// AWS_IoTSiteWise_AccessPolicy__PropertiesSlice reports all the CloudFormation properties for AWS::IoTSiteWise::AccessPolicy.
	AWS_IoTSiteWise_AccessPolicy__PropertiesSlice = []string{
		AWS_IoTSiteWise_AccessPolicy__PropertiesMap.AccessPolicyIdentity,
		AWS_IoTSiteWise_AccessPolicy__PropertiesMap.AccessPolicyPermission,
		AWS_IoTSiteWise_AccessPolicy__PropertiesMap.AccessPolicyResource,
	}
)

// AWS_IoTSiteWise_AccessPolicy is a binding for AWS::IoTSiteWise::AccessPolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html
type AWS_IoTSiteWise_AccessPolicy struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessPolicyIdentity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html#cfn-iotsitewise-accesspolicy-accesspolicyidentity
	AccessPolicyIdentity cfz.Expression[AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity] `json:"AccessPolicyIdentity,omitempty"`

	// AccessPolicyPermission is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html#cfn-iotsitewise-accesspolicy-accesspolicypermission
	AccessPolicyPermission cfz.Expression[string] `json:"AccessPolicyPermission,omitempty"`

	// AccessPolicyResource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotsitewise-accesspolicy.html#cfn-iotsitewise-accesspolicy-accesspolicyresource
	AccessPolicyResource cfz.Expression[AWS_IoTSiteWise_AccessPolicy_AccessPolicyResource] `json:"AccessPolicyResource,omitempty"`
}

// New__AWS_IoTSiteWise_AccessPolicy initializes a new *AWS_IoTSiteWise_AccessPolicy.
func New__AWS_IoTSiteWise_AccessPolicy(logicalName string) *AWS_IoTSiteWise_AccessPolicy {
	return &AWS_IoTSiteWise_AccessPolicy{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IoTSiteWise_AccessPolicy) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IoTSiteWise_AccessPolicy) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IoTSiteWise_AccessPolicy) GetType() string {
	return AWS_IoTSiteWise_AccessPolicy__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IoTSiteWise_AccessPolicy) Set__LogicalName(v string) *AWS_IoTSiteWise_AccessPolicy {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IoTSiteWise_AccessPolicy) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IoTSiteWise_AccessPolicy {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IoTSiteWise_AccessPolicy) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IoTSiteWise_AccessPolicy {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IoTSiteWise_AccessPolicy) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IoTSiteWise_AccessPolicy {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IoTSiteWise_AccessPolicy) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IoTSiteWise_AccessPolicy {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IoTSiteWise_AccessPolicy) Set__RequestedOutputs(v []cfz.Output) *AWS_IoTSiteWise_AccessPolicy {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IoTSiteWise_AccessPolicy) Add__RequestedOutputs(v ...cfz.Output) *AWS_IoTSiteWise_AccessPolicy {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessPolicyIdentity updates property "AccessPolicyIdentity".
func (t *AWS_IoTSiteWise_AccessPolicy) Set__AccessPolicyIdentity(v cfz.Expression[AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity]) *AWS_IoTSiteWise_AccessPolicy {
	t.AccessPolicyIdentity = v
	return t
}

// SetV__AccessPolicyIdentity updates property "AccessPolicyIdentity".
func (t *AWS_IoTSiteWise_AccessPolicy) SetV__AccessPolicyIdentity(v AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity) *AWS_IoTSiteWise_AccessPolicy {
	t.AccessPolicyIdentity = cfz.V(v)
	return t
}

// Set__AccessPolicyPermission updates property "AccessPolicyPermission".
func (t *AWS_IoTSiteWise_AccessPolicy) Set__AccessPolicyPermission(v cfz.Expression[string]) *AWS_IoTSiteWise_AccessPolicy {
	t.AccessPolicyPermission = v
	return t
}

// SetV__AccessPolicyPermission updates property "AccessPolicyPermission".
func (t *AWS_IoTSiteWise_AccessPolicy) SetV__AccessPolicyPermission(v string) *AWS_IoTSiteWise_AccessPolicy {
	t.AccessPolicyPermission = cfz.V(v)
	return t
}

// Set__AccessPolicyResource updates property "AccessPolicyResource".
func (t *AWS_IoTSiteWise_AccessPolicy) Set__AccessPolicyResource(v cfz.Expression[AWS_IoTSiteWise_AccessPolicy_AccessPolicyResource]) *AWS_IoTSiteWise_AccessPolicy {
	t.AccessPolicyResource = v
	return t
}

// SetV__AccessPolicyResource updates property "AccessPolicyResource".
func (t *AWS_IoTSiteWise_AccessPolicy) SetV__AccessPolicyResource(v AWS_IoTSiteWise_AccessPolicy_AccessPolicyResource) *AWS_IoTSiteWise_AccessPolicy {
	t.AccessPolicyResource = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IoTSiteWise_AccessPolicy) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AccessPolicyArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AccessPolicyArn
func (t *AWS_IoTSiteWise_AccessPolicy) GetAtt__AccessPolicyArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTSiteWise_AccessPolicy__AttributesMap.AccessPolicyArn))
}

// GetAtt__AccessPolicyId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AccessPolicyId
func (t *AWS_IoTSiteWise_AccessPolicy) GetAtt__AccessPolicyId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTSiteWise_AccessPolicy__AttributesMap.AccessPolicyId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IoTSiteWise_AccessPolicy) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AccessPolicyArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AccessPolicyArn
func (t *AWS_IoTSiteWise_AccessPolicy) GetConventionalOutputAtt__AccessPolicyArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAccessPolicyArn", t.GetAtt__AccessPolicyArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AccessPolicyId returns a conventionally configured output for an attribute of this resource.
// Attribute: AccessPolicyId
func (t *AWS_IoTSiteWise_AccessPolicy) GetConventionalOutputAtt__AccessPolicyId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAccessPolicyId", t.GetAtt__AccessPolicyId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IoTSiteWise_AccessPolicy) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IoTSiteWise_AccessPolicy

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IoTSiteWise_AccessPolicy) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
