// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotsitewise

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__Type is the CloudFormation type for AWS::IoTSiteWise::AccessPolicy.AccessPolicyIdentity.
	AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__Type = "AWS::IoTSiteWise::AccessPolicy.AccessPolicyIdentity"
)

var (
	// AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__PropertiesMap reports all the CloudFormation properties for AWS::IoTSiteWise::AccessPolicy.AccessPolicyIdentity.
	AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__PropertiesMap = struct {
		IamRole string
		IamUser string
		User    string
	}{
		IamRole: "IamRole",
		IamUser: "IamUser",
		User:    "User",
	}

	// AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__PropertiesSlice reports all the CloudFormation properties for AWS::IoTSiteWise::AccessPolicy.AccessPolicyIdentity.
	AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__PropertiesSlice = []string{
		AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__PropertiesMap.IamRole,
		AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__PropertiesMap.IamUser,
		AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__PropertiesMap.User,
	}
)

// AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity is a binding for AWS::IoTSiteWise::AccessPolicy.AccessPolicyIdentity.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotsitewise-accesspolicy-accesspolicyidentity.html
type AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity struct {
	// IamRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotsitewise-accesspolicy-accesspolicyidentity.html#cfn-iotsitewise-accesspolicy-accesspolicyidentity-iamrole
	IamRole cfz.Expression[AWS_IoTSiteWise_AccessPolicy_IamRole] `json:"IamRole,omitempty"`

	// IamUser is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotsitewise-accesspolicy-accesspolicyidentity.html#cfn-iotsitewise-accesspolicy-accesspolicyidentity-iamuser
	IamUser cfz.Expression[AWS_IoTSiteWise_AccessPolicy_IamUser] `json:"IamUser,omitempty"`

	// User is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotsitewise-accesspolicy-accesspolicyidentity.html#cfn-iotsitewise-accesspolicy-accesspolicyidentity-user
	User cfz.Expression[AWS_IoTSiteWise_AccessPolicy_User] `json:"User,omitempty"`
}

// New__AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity initializes a new AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity.
func New__AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity() AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity {
	return AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity{}
}

// GetType returns the CloudFormation type.
func (AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity) GetType() string {
	return AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity__Type
}

// Set__IamRole updates property "IamRole".
func (t AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity) Set__IamRole(v cfz.Expression[AWS_IoTSiteWise_AccessPolicy_IamRole]) AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity {
	t.IamRole = v
	return t
}

// SetV__IamRole updates property "IamRole".
func (t AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity) SetV__IamRole(v AWS_IoTSiteWise_AccessPolicy_IamRole) AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity {
	t.IamRole = cfz.V(v)
	return t
}

// Set__IamUser updates property "IamUser".
func (t AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity) Set__IamUser(v cfz.Expression[AWS_IoTSiteWise_AccessPolicy_IamUser]) AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity {
	t.IamUser = v
	return t
}

// SetV__IamUser updates property "IamUser".
func (t AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity) SetV__IamUser(v AWS_IoTSiteWise_AccessPolicy_IamUser) AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity {
	t.IamUser = cfz.V(v)
	return t
}

// Set__User updates property "User".
func (t AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity) Set__User(v cfz.Expression[AWS_IoTSiteWise_AccessPolicy_User]) AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity {
	t.User = v
	return t
}

// SetV__User updates property "User".
func (t AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity) SetV__User(v AWS_IoTSiteWise_AccessPolicy_User) AWS_IoTSiteWise_AccessPolicy_AccessPolicyIdentity {
	t.User = cfz.V(v)
	return t
}
