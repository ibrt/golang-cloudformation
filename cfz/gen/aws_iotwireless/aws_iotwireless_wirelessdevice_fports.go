// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotwireless

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoTWireless_WirelessDevice_FPorts__Type is the CloudFormation type for AWS::IoTWireless::WirelessDevice.FPorts.
	AWS_IoTWireless_WirelessDevice_FPorts__Type = "AWS::IoTWireless::WirelessDevice.FPorts"
)

var (
	// AWS_IoTWireless_WirelessDevice_FPorts__PropertiesMap reports all the CloudFormation properties for AWS::IoTWireless::WirelessDevice.FPorts.
	AWS_IoTWireless_WirelessDevice_FPorts__PropertiesMap = struct {
		Applications string
	}{
		Applications: "Applications",
	}

	// AWS_IoTWireless_WirelessDevice_FPorts__PropertiesSlice reports all the CloudFormation properties for AWS::IoTWireless::WirelessDevice.FPorts.
	AWS_IoTWireless_WirelessDevice_FPorts__PropertiesSlice = []string{
		AWS_IoTWireless_WirelessDevice_FPorts__PropertiesMap.Applications,
	}
)

// AWS_IoTWireless_WirelessDevice_FPorts is a binding for AWS::IoTWireless::WirelessDevice.FPorts.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotwireless-wirelessdevice-fports.html
type AWS_IoTWireless_WirelessDevice_FPorts struct {
	// Applications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotwireless-wirelessdevice-fports.html#cfn-iotwireless-wirelessdevice-fports-applications
	Applications cfz.ExpressionSlice[AWS_IoTWireless_WirelessDevice_Application] `json:"Applications,omitempty"`
}

// New__AWS_IoTWireless_WirelessDevice_FPorts initializes a new AWS_IoTWireless_WirelessDevice_FPorts.
func New__AWS_IoTWireless_WirelessDevice_FPorts() AWS_IoTWireless_WirelessDevice_FPorts {
	return AWS_IoTWireless_WirelessDevice_FPorts{}
}

// GetType returns the CloudFormation type.
func (AWS_IoTWireless_WirelessDevice_FPorts) GetType() string {
	return AWS_IoTWireless_WirelessDevice_FPorts__Type
}

// Set__Applications updates property "Applications".
func (t AWS_IoTWireless_WirelessDevice_FPorts) Set__Applications(v cfz.ExpressionSlice[AWS_IoTWireless_WirelessDevice_Application]) AWS_IoTWireless_WirelessDevice_FPorts {
	t.Applications = v
	return t
}

// SetS__Applications updates property "Applications".
func (t AWS_IoTWireless_WirelessDevice_FPorts) SetS__Applications(v ...cfz.Expression[AWS_IoTWireless_WirelessDevice_Application]) AWS_IoTWireless_WirelessDevice_FPorts {
	t.Applications = cfz.S(v...)
	return t
}

// SetSV__Applications updates property "Applications".
func (t AWS_IoTWireless_WirelessDevice_FPorts) SetSV__Applications(v ...AWS_IoTWireless_WirelessDevice_Application) AWS_IoTWireless_WirelessDevice_FPorts {
	t.Applications = cfz.SV(v...)
	return t
}
