// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotwireless

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IoTWireless_PartnerAccount)(nil)
	_ cfz.Resource                   = (*AWS_IoTWireless_PartnerAccount)(nil)
)

const (
	// AWS_IoTWireless_PartnerAccount__Type is the CloudFormation type for AWS::IoTWireless::PartnerAccount.
	AWS_IoTWireless_PartnerAccount__Type = "AWS::IoTWireless::PartnerAccount"
)

var (
	// AWS_IoTWireless_PartnerAccount__AttributesMap reports all the CloudFormation attributes for AWS::IoTWireless::PartnerAccount.
	AWS_IoTWireless_PartnerAccount__AttributesMap = struct {
		Arn         string
		Fingerprint string
	}{
		Arn:         "Arn",
		Fingerprint: "Fingerprint",
	}

	// AWS_IoTWireless_PartnerAccount__AttributesSlice reports all the CloudFormation attributes for AWS::IoTWireless::PartnerAccount.
	AWS_IoTWireless_PartnerAccount__AttributesSlice = []string{
		AWS_IoTWireless_PartnerAccount__AttributesMap.Arn,
		AWS_IoTWireless_PartnerAccount__AttributesMap.Fingerprint,
	}
)

var (
	// AWS_IoTWireless_PartnerAccount__PropertiesMap reports all the CloudFormation properties for AWS::IoTWireless::PartnerAccount.
	AWS_IoTWireless_PartnerAccount__PropertiesMap = struct {
		AccountLinked    string
		PartnerAccountId string
		PartnerType      string
		Sidewalk         string
		SidewalkResponse string
		SidewalkUpdate   string
		Tags             string
	}{
		AccountLinked:    "AccountLinked",
		PartnerAccountId: "PartnerAccountId",
		PartnerType:      "PartnerType",
		Sidewalk:         "Sidewalk",
		SidewalkResponse: "SidewalkResponse",
		SidewalkUpdate:   "SidewalkUpdate",
		Tags:             "Tags",
	}

	// AWS_IoTWireless_PartnerAccount__PropertiesSlice reports all the CloudFormation properties for AWS::IoTWireless::PartnerAccount.
	AWS_IoTWireless_PartnerAccount__PropertiesSlice = []string{
		AWS_IoTWireless_PartnerAccount__PropertiesMap.AccountLinked,
		AWS_IoTWireless_PartnerAccount__PropertiesMap.PartnerAccountId,
		AWS_IoTWireless_PartnerAccount__PropertiesMap.PartnerType,
		AWS_IoTWireless_PartnerAccount__PropertiesMap.Sidewalk,
		AWS_IoTWireless_PartnerAccount__PropertiesMap.SidewalkResponse,
		AWS_IoTWireless_PartnerAccount__PropertiesMap.SidewalkUpdate,
		AWS_IoTWireless_PartnerAccount__PropertiesMap.Tags,
	}
)

// AWS_IoTWireless_PartnerAccount is a binding for AWS::IoTWireless::PartnerAccount.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html
type AWS_IoTWireless_PartnerAccount struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccountLinked is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-accountlinked
	AccountLinked cfz.Expression[bool] `json:"AccountLinked,omitempty"`

	// PartnerAccountId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-partneraccountid
	PartnerAccountId cfz.Expression[string] `json:"PartnerAccountId,omitempty"`

	// PartnerType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-partnertype
	PartnerType cfz.Expression[string] `json:"PartnerType,omitempty"`

	// Sidewalk is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-sidewalk
	Sidewalk cfz.Expression[AWS_IoTWireless_PartnerAccount_SidewalkAccountInfo] `json:"Sidewalk,omitempty"`

	// SidewalkResponse is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-sidewalkresponse
	SidewalkResponse cfz.Expression[AWS_IoTWireless_PartnerAccount_SidewalkAccountInfoWithFingerprint] `json:"SidewalkResponse,omitempty"`

	// SidewalkUpdate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-sidewalkupdate
	SidewalkUpdate cfz.Expression[AWS_IoTWireless_PartnerAccount_SidewalkUpdateAccount] `json:"SidewalkUpdate,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-partneraccount.html#cfn-iotwireless-partneraccount-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_IoTWireless_PartnerAccount initializes a new *AWS_IoTWireless_PartnerAccount.
func New__AWS_IoTWireless_PartnerAccount(logicalName string) *AWS_IoTWireless_PartnerAccount {
	return &AWS_IoTWireless_PartnerAccount{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IoTWireless_PartnerAccount) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IoTWireless_PartnerAccount) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IoTWireless_PartnerAccount) GetType() string {
	return AWS_IoTWireless_PartnerAccount__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IoTWireless_PartnerAccount) Set__LogicalName(v string) *AWS_IoTWireless_PartnerAccount {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IoTWireless_PartnerAccount) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IoTWireless_PartnerAccount {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IoTWireless_PartnerAccount) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IoTWireless_PartnerAccount {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IoTWireless_PartnerAccount) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IoTWireless_PartnerAccount {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IoTWireless_PartnerAccount) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IoTWireless_PartnerAccount {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IoTWireless_PartnerAccount) Set__RequestedOutputs(v []cfz.Output) *AWS_IoTWireless_PartnerAccount {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IoTWireless_PartnerAccount) Add__RequestedOutputs(v ...cfz.Output) *AWS_IoTWireless_PartnerAccount {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccountLinked updates property "AccountLinked".
func (t *AWS_IoTWireless_PartnerAccount) Set__AccountLinked(v cfz.Expression[bool]) *AWS_IoTWireless_PartnerAccount {
	t.AccountLinked = v
	return t
}

// SetV__AccountLinked updates property "AccountLinked".
func (t *AWS_IoTWireless_PartnerAccount) SetV__AccountLinked(v bool) *AWS_IoTWireless_PartnerAccount {
	t.AccountLinked = cfz.V(v)
	return t
}

// Set__PartnerAccountId updates property "PartnerAccountId".
func (t *AWS_IoTWireless_PartnerAccount) Set__PartnerAccountId(v cfz.Expression[string]) *AWS_IoTWireless_PartnerAccount {
	t.PartnerAccountId = v
	return t
}

// SetV__PartnerAccountId updates property "PartnerAccountId".
func (t *AWS_IoTWireless_PartnerAccount) SetV__PartnerAccountId(v string) *AWS_IoTWireless_PartnerAccount {
	t.PartnerAccountId = cfz.V(v)
	return t
}

// Set__PartnerType updates property "PartnerType".
func (t *AWS_IoTWireless_PartnerAccount) Set__PartnerType(v cfz.Expression[string]) *AWS_IoTWireless_PartnerAccount {
	t.PartnerType = v
	return t
}

// SetV__PartnerType updates property "PartnerType".
func (t *AWS_IoTWireless_PartnerAccount) SetV__PartnerType(v string) *AWS_IoTWireless_PartnerAccount {
	t.PartnerType = cfz.V(v)
	return t
}

// Set__Sidewalk updates property "Sidewalk".
func (t *AWS_IoTWireless_PartnerAccount) Set__Sidewalk(v cfz.Expression[AWS_IoTWireless_PartnerAccount_SidewalkAccountInfo]) *AWS_IoTWireless_PartnerAccount {
	t.Sidewalk = v
	return t
}

// SetV__Sidewalk updates property "Sidewalk".
func (t *AWS_IoTWireless_PartnerAccount) SetV__Sidewalk(v AWS_IoTWireless_PartnerAccount_SidewalkAccountInfo) *AWS_IoTWireless_PartnerAccount {
	t.Sidewalk = cfz.V(v)
	return t
}

// Set__SidewalkResponse updates property "SidewalkResponse".
func (t *AWS_IoTWireless_PartnerAccount) Set__SidewalkResponse(v cfz.Expression[AWS_IoTWireless_PartnerAccount_SidewalkAccountInfoWithFingerprint]) *AWS_IoTWireless_PartnerAccount {
	t.SidewalkResponse = v
	return t
}

// SetV__SidewalkResponse updates property "SidewalkResponse".
func (t *AWS_IoTWireless_PartnerAccount) SetV__SidewalkResponse(v AWS_IoTWireless_PartnerAccount_SidewalkAccountInfoWithFingerprint) *AWS_IoTWireless_PartnerAccount {
	t.SidewalkResponse = cfz.V(v)
	return t
}

// Set__SidewalkUpdate updates property "SidewalkUpdate".
func (t *AWS_IoTWireless_PartnerAccount) Set__SidewalkUpdate(v cfz.Expression[AWS_IoTWireless_PartnerAccount_SidewalkUpdateAccount]) *AWS_IoTWireless_PartnerAccount {
	t.SidewalkUpdate = v
	return t
}

// SetV__SidewalkUpdate updates property "SidewalkUpdate".
func (t *AWS_IoTWireless_PartnerAccount) SetV__SidewalkUpdate(v AWS_IoTWireless_PartnerAccount_SidewalkUpdateAccount) *AWS_IoTWireless_PartnerAccount {
	t.SidewalkUpdate = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IoTWireless_PartnerAccount) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_IoTWireless_PartnerAccount {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_IoTWireless_PartnerAccount) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_IoTWireless_PartnerAccount {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_IoTWireless_PartnerAccount) SetSV__Tags(v ...cfz.Tag) *AWS_IoTWireless_PartnerAccount {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IoTWireless_PartnerAccount) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IoTWireless_PartnerAccount) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_PartnerAccount__AttributesMap.Arn))
}

// GetAtt__Fingerprint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Fingerprint
func (t *AWS_IoTWireless_PartnerAccount) GetAtt__Fingerprint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_PartnerAccount__AttributesMap.Fingerprint))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IoTWireless_PartnerAccount) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IoTWireless_PartnerAccount) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Fingerprint returns a conventionally configured output for an attribute of this resource.
// Attribute: Fingerprint
func (t *AWS_IoTWireless_PartnerAccount) GetConventionalOutputAtt__Fingerprint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFingerprint", t.GetAtt__Fingerprint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IoTWireless_PartnerAccount) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IoTWireless_PartnerAccount

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IoTWireless_PartnerAccount) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
