// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotwireless

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IoTWireless_ServiceProfile)(nil)
	_ cfz.Resource                   = (*AWS_IoTWireless_ServiceProfile)(nil)
)

const (
	// AWS_IoTWireless_ServiceProfile__Type is the CloudFormation type for AWS::IoTWireless::ServiceProfile.
	AWS_IoTWireless_ServiceProfile__Type = "AWS::IoTWireless::ServiceProfile"
)

var (
	// AWS_IoTWireless_ServiceProfile__AttributesMap reports all the CloudFormation attributes for AWS::IoTWireless::ServiceProfile.
	AWS_IoTWireless_ServiceProfile__AttributesMap = struct {
		Arn                            string
		Id                             string
		LoRaWAN_ChannelMask            string
		LoRaWAN_DevStatusReqFreq       string
		LoRaWAN_DlBucketSize           string
		LoRaWAN_DlRate                 string
		LoRaWAN_DlRatePolicy           string
		LoRaWAN_DrMax                  string
		LoRaWAN_DrMin                  string
		LoRaWAN_HrAllowed              string
		LoRaWAN_MinGwDiversity         string
		LoRaWAN_NwkGeoLoc              string
		LoRaWAN_ReportDevStatusBattery string
		LoRaWAN_ReportDevStatusMargin  string
		LoRaWAN_TargetPer              string
		LoRaWAN_UlBucketSize           string
		LoRaWAN_UlRate                 string
		LoRaWAN_UlRatePolicy           string
	}{
		Arn:                            "Arn",
		Id:                             "Id",
		LoRaWAN_ChannelMask:            "LoRaWAN.ChannelMask",
		LoRaWAN_DevStatusReqFreq:       "LoRaWAN.DevStatusReqFreq",
		LoRaWAN_DlBucketSize:           "LoRaWAN.DlBucketSize",
		LoRaWAN_DlRate:                 "LoRaWAN.DlRate",
		LoRaWAN_DlRatePolicy:           "LoRaWAN.DlRatePolicy",
		LoRaWAN_DrMax:                  "LoRaWAN.DrMax",
		LoRaWAN_DrMin:                  "LoRaWAN.DrMin",
		LoRaWAN_HrAllowed:              "LoRaWAN.HrAllowed",
		LoRaWAN_MinGwDiversity:         "LoRaWAN.MinGwDiversity",
		LoRaWAN_NwkGeoLoc:              "LoRaWAN.NwkGeoLoc",
		LoRaWAN_ReportDevStatusBattery: "LoRaWAN.ReportDevStatusBattery",
		LoRaWAN_ReportDevStatusMargin:  "LoRaWAN.ReportDevStatusMargin",
		LoRaWAN_TargetPer:              "LoRaWAN.TargetPer",
		LoRaWAN_UlBucketSize:           "LoRaWAN.UlBucketSize",
		LoRaWAN_UlRate:                 "LoRaWAN.UlRate",
		LoRaWAN_UlRatePolicy:           "LoRaWAN.UlRatePolicy",
	}

	// AWS_IoTWireless_ServiceProfile__AttributesSlice reports all the CloudFormation attributes for AWS::IoTWireless::ServiceProfile.
	AWS_IoTWireless_ServiceProfile__AttributesSlice = []string{
		AWS_IoTWireless_ServiceProfile__AttributesMap.Arn,
		AWS_IoTWireless_ServiceProfile__AttributesMap.Id,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_ChannelMask,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DevStatusReqFreq,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DlBucketSize,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DlRate,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DlRatePolicy,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DrMax,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DrMin,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_HrAllowed,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_MinGwDiversity,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_NwkGeoLoc,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_ReportDevStatusBattery,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_ReportDevStatusMargin,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_TargetPer,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_UlBucketSize,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_UlRate,
		AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_UlRatePolicy,
	}
)

var (
	// AWS_IoTWireless_ServiceProfile__PropertiesMap reports all the CloudFormation properties for AWS::IoTWireless::ServiceProfile.
	AWS_IoTWireless_ServiceProfile__PropertiesMap = struct {
		LoRaWAN string
		Name    string
		Tags    string
	}{
		LoRaWAN: "LoRaWAN",
		Name:    "Name",
		Tags:    "Tags",
	}

	// AWS_IoTWireless_ServiceProfile__PropertiesSlice reports all the CloudFormation properties for AWS::IoTWireless::ServiceProfile.
	AWS_IoTWireless_ServiceProfile__PropertiesSlice = []string{
		AWS_IoTWireless_ServiceProfile__PropertiesMap.LoRaWAN,
		AWS_IoTWireless_ServiceProfile__PropertiesMap.Name,
		AWS_IoTWireless_ServiceProfile__PropertiesMap.Tags,
	}
)

// AWS_IoTWireless_ServiceProfile is a binding for AWS::IoTWireless::ServiceProfile.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html
type AWS_IoTWireless_ServiceProfile struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// LoRaWAN is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-lorawan
	LoRaWAN cfz.Expression[AWS_IoTWireless_ServiceProfile_LoRaWANServiceProfile] `json:"LoRaWAN,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotwireless-serviceprofile.html#cfn-iotwireless-serviceprofile-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_IoTWireless_ServiceProfile initializes a new *AWS_IoTWireless_ServiceProfile.
func New__AWS_IoTWireless_ServiceProfile(logicalName string) *AWS_IoTWireless_ServiceProfile {
	return &AWS_IoTWireless_ServiceProfile{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IoTWireless_ServiceProfile) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IoTWireless_ServiceProfile) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IoTWireless_ServiceProfile) GetType() string {
	return AWS_IoTWireless_ServiceProfile__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IoTWireless_ServiceProfile) Set__LogicalName(v string) *AWS_IoTWireless_ServiceProfile {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IoTWireless_ServiceProfile) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IoTWireless_ServiceProfile {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IoTWireless_ServiceProfile) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IoTWireless_ServiceProfile {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IoTWireless_ServiceProfile) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IoTWireless_ServiceProfile {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IoTWireless_ServiceProfile) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IoTWireless_ServiceProfile {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IoTWireless_ServiceProfile) Set__RequestedOutputs(v []cfz.Output) *AWS_IoTWireless_ServiceProfile {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IoTWireless_ServiceProfile) Add__RequestedOutputs(v ...cfz.Output) *AWS_IoTWireless_ServiceProfile {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__LoRaWAN updates property "LoRaWAN".
func (t *AWS_IoTWireless_ServiceProfile) Set__LoRaWAN(v cfz.Expression[AWS_IoTWireless_ServiceProfile_LoRaWANServiceProfile]) *AWS_IoTWireless_ServiceProfile {
	t.LoRaWAN = v
	return t
}

// SetV__LoRaWAN updates property "LoRaWAN".
func (t *AWS_IoTWireless_ServiceProfile) SetV__LoRaWAN(v AWS_IoTWireless_ServiceProfile_LoRaWANServiceProfile) *AWS_IoTWireless_ServiceProfile {
	t.LoRaWAN = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_IoTWireless_ServiceProfile) Set__Name(v cfz.Expression[string]) *AWS_IoTWireless_ServiceProfile {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_IoTWireless_ServiceProfile) SetV__Name(v string) *AWS_IoTWireless_ServiceProfile {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IoTWireless_ServiceProfile) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_IoTWireless_ServiceProfile {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_IoTWireless_ServiceProfile) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_IoTWireless_ServiceProfile {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_IoTWireless_ServiceProfile) SetSV__Tags(v ...cfz.Tag) *AWS_IoTWireless_ServiceProfile {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IoTWireless_ServiceProfile) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.Arn))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.Id))
}

// GetAtt__LoRaWAN_ChannelMask returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.ChannelMask
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_ChannelMask() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_ChannelMask))
}

// GetAtt__LoRaWAN_DevStatusReqFreq returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.DevStatusReqFreq
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_DevStatusReqFreq() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DevStatusReqFreq))
}

// GetAtt__LoRaWAN_DlBucketSize returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.DlBucketSize
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_DlBucketSize() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DlBucketSize))
}

// GetAtt__LoRaWAN_DlRate returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.DlRate
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_DlRate() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DlRate))
}

// GetAtt__LoRaWAN_DlRatePolicy returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.DlRatePolicy
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_DlRatePolicy() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DlRatePolicy))
}

// GetAtt__LoRaWAN_DrMax returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.DrMax
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_DrMax() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DrMax))
}

// GetAtt__LoRaWAN_DrMin returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.DrMin
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_DrMin() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_DrMin))
}

// GetAtt__LoRaWAN_HrAllowed returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.HrAllowed
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_HrAllowed() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_HrAllowed))
}

// GetAtt__LoRaWAN_MinGwDiversity returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.MinGwDiversity
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_MinGwDiversity() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_MinGwDiversity))
}

// GetAtt__LoRaWAN_NwkGeoLoc returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.NwkGeoLoc
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_NwkGeoLoc() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_NwkGeoLoc))
}

// GetAtt__LoRaWAN_ReportDevStatusBattery returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.ReportDevStatusBattery
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_ReportDevStatusBattery() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_ReportDevStatusBattery))
}

// GetAtt__LoRaWAN_ReportDevStatusMargin returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.ReportDevStatusMargin
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_ReportDevStatusMargin() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_ReportDevStatusMargin))
}

// GetAtt__LoRaWAN_TargetPer returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.TargetPer
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_TargetPer() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_TargetPer))
}

// GetAtt__LoRaWAN_UlBucketSize returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.UlBucketSize
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_UlBucketSize() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_UlBucketSize))
}

// GetAtt__LoRaWAN_UlRate returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.UlRate
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_UlRate() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_UlRate))
}

// GetAtt__LoRaWAN_UlRatePolicy returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoRaWAN.UlRatePolicy
func (t *AWS_IoTWireless_ServiceProfile) GetAtt__LoRaWAN_UlRatePolicy() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTWireless_ServiceProfile__AttributesMap.LoRaWAN_UlRatePolicy))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_ChannelMask returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.ChannelMask
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_ChannelMask(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANChannelMask", t.GetAtt__LoRaWAN_ChannelMask())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_DevStatusReqFreq returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.DevStatusReqFreq
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_DevStatusReqFreq(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANDevStatusReqFreq", t.GetAtt__LoRaWAN_DevStatusReqFreq())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_DlBucketSize returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.DlBucketSize
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_DlBucketSize(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANDlBucketSize", t.GetAtt__LoRaWAN_DlBucketSize())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_DlRate returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.DlRate
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_DlRate(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANDlRate", t.GetAtt__LoRaWAN_DlRate())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_DlRatePolicy returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.DlRatePolicy
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_DlRatePolicy(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANDlRatePolicy", t.GetAtt__LoRaWAN_DlRatePolicy())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_DrMax returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.DrMax
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_DrMax(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANDrMax", t.GetAtt__LoRaWAN_DrMax())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_DrMin returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.DrMin
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_DrMin(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANDrMin", t.GetAtt__LoRaWAN_DrMin())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_HrAllowed returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.HrAllowed
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_HrAllowed(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANHrAllowed", t.GetAtt__LoRaWAN_HrAllowed())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_MinGwDiversity returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.MinGwDiversity
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_MinGwDiversity(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANMinGwDiversity", t.GetAtt__LoRaWAN_MinGwDiversity())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_NwkGeoLoc returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.NwkGeoLoc
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_NwkGeoLoc(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANNwkGeoLoc", t.GetAtt__LoRaWAN_NwkGeoLoc())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_ReportDevStatusBattery returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.ReportDevStatusBattery
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_ReportDevStatusBattery(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANReportDevStatusBattery", t.GetAtt__LoRaWAN_ReportDevStatusBattery())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_ReportDevStatusMargin returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.ReportDevStatusMargin
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_ReportDevStatusMargin(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANReportDevStatusMargin", t.GetAtt__LoRaWAN_ReportDevStatusMargin())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_TargetPer returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.TargetPer
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_TargetPer(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANTargetPer", t.GetAtt__LoRaWAN_TargetPer())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_UlBucketSize returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.UlBucketSize
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_UlBucketSize(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANUlBucketSize", t.GetAtt__LoRaWAN_UlBucketSize())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_UlRate returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.UlRate
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_UlRate(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANUlRate", t.GetAtt__LoRaWAN_UlRate())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoRaWAN_UlRatePolicy returns a conventionally configured output for an attribute of this resource.
// Attribute: LoRaWAN.UlRatePolicy
func (t *AWS_IoTWireless_ServiceProfile) GetConventionalOutputAtt__LoRaWAN_UlRatePolicy(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoRaWANUlRatePolicy", t.GetAtt__LoRaWAN_UlRatePolicy())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IoTWireless_ServiceProfile) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IoTWireless_ServiceProfile

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IoTWireless_ServiceProfile) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
