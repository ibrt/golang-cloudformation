// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_applicationautoscaling

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ApplicationAutoScaling_ScalableTarget)(nil)
	_ cfz.Resource                   = (*AWS_ApplicationAutoScaling_ScalableTarget)(nil)
)

const (
	// AWS_ApplicationAutoScaling_ScalableTarget__Type is the CloudFormation type for AWS::ApplicationAutoScaling::ScalableTarget.
	AWS_ApplicationAutoScaling_ScalableTarget__Type = "AWS::ApplicationAutoScaling::ScalableTarget"
)

var (
	// AWS_ApplicationAutoScaling_ScalableTarget__AttributesMap reports all the CloudFormation attributes for AWS::ApplicationAutoScaling::ScalableTarget.
	AWS_ApplicationAutoScaling_ScalableTarget__AttributesMap = struct {
		Id string
	}{
		Id: "Id",
	}

	// AWS_ApplicationAutoScaling_ScalableTarget__AttributesSlice reports all the CloudFormation attributes for AWS::ApplicationAutoScaling::ScalableTarget.
	AWS_ApplicationAutoScaling_ScalableTarget__AttributesSlice = []string{
		AWS_ApplicationAutoScaling_ScalableTarget__AttributesMap.Id,
	}
)

var (
	// AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap reports all the CloudFormation properties for AWS::ApplicationAutoScaling::ScalableTarget.
	AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap = struct {
		MaxCapacity       string
		MinCapacity       string
		ResourceId        string
		RoleARN           string
		ScalableDimension string
		ScheduledActions  string
		ServiceNamespace  string
		SuspendedState    string
	}{
		MaxCapacity:       "MaxCapacity",
		MinCapacity:       "MinCapacity",
		ResourceId:        "ResourceId",
		RoleARN:           "RoleARN",
		ScalableDimension: "ScalableDimension",
		ScheduledActions:  "ScheduledActions",
		ServiceNamespace:  "ServiceNamespace",
		SuspendedState:    "SuspendedState",
	}

	// AWS_ApplicationAutoScaling_ScalableTarget__PropertiesSlice reports all the CloudFormation properties for AWS::ApplicationAutoScaling::ScalableTarget.
	AWS_ApplicationAutoScaling_ScalableTarget__PropertiesSlice = []string{
		AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap.MaxCapacity,
		AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap.MinCapacity,
		AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap.ResourceId,
		AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap.RoleARN,
		AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap.ScalableDimension,
		AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap.ScheduledActions,
		AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap.ServiceNamespace,
		AWS_ApplicationAutoScaling_ScalableTarget__PropertiesMap.SuspendedState,
	}
)

// AWS_ApplicationAutoScaling_ScalableTarget is a binding for AWS::ApplicationAutoScaling::ScalableTarget.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html
type AWS_ApplicationAutoScaling_ScalableTarget struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// MaxCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-maxcapacity
	MaxCapacity cfz.Expression[int32] `json:"MaxCapacity,omitempty"`

	// MinCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-mincapacity
	MinCapacity cfz.Expression[int32] `json:"MinCapacity,omitempty"`

	// ResourceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-resourceid
	ResourceId cfz.Expression[string] `json:"ResourceId,omitempty"`

	// RoleARN is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-rolearn
	RoleARN cfz.Expression[string] `json:"RoleARN,omitempty"`

	// ScalableDimension is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scalabledimension
	ScalableDimension cfz.Expression[string] `json:"ScalableDimension,omitempty"`

	// ScheduledActions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-scheduledactions
	ScheduledActions cfz.ExpressionSlice[AWS_ApplicationAutoScaling_ScalableTarget_ScheduledAction] `json:"ScheduledActions,omitempty"`

	// ServiceNamespace is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-servicenamespace
	ServiceNamespace cfz.Expression[string] `json:"ServiceNamespace,omitempty"`

	// SuspendedState is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalabletarget.html#cfn-applicationautoscaling-scalabletarget-suspendedstate
	SuspendedState cfz.Expression[AWS_ApplicationAutoScaling_ScalableTarget_SuspendedState] `json:"SuspendedState,omitempty"`
}

// New__AWS_ApplicationAutoScaling_ScalableTarget initializes a new *AWS_ApplicationAutoScaling_ScalableTarget.
func New__AWS_ApplicationAutoScaling_ScalableTarget(logicalName string) *AWS_ApplicationAutoScaling_ScalableTarget {
	return &AWS_ApplicationAutoScaling_ScalableTarget{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ApplicationAutoScaling_ScalableTarget) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ApplicationAutoScaling_ScalableTarget) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ApplicationAutoScaling_ScalableTarget) GetType() string {
	return AWS_ApplicationAutoScaling_ScalableTarget__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__LogicalName(v string) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__RequestedOutputs(v []cfz.Output) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Add__RequestedOutputs(v ...cfz.Output) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__MaxCapacity updates property "MaxCapacity".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__MaxCapacity(v cfz.Expression[int32]) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.MaxCapacity = v
	return t
}

// SetV__MaxCapacity updates property "MaxCapacity".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) SetV__MaxCapacity(v int32) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.MaxCapacity = cfz.V(v)
	return t
}

// Set__MinCapacity updates property "MinCapacity".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__MinCapacity(v cfz.Expression[int32]) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.MinCapacity = v
	return t
}

// SetV__MinCapacity updates property "MinCapacity".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) SetV__MinCapacity(v int32) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.MinCapacity = cfz.V(v)
	return t
}

// Set__ResourceId updates property "ResourceId".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__ResourceId(v cfz.Expression[string]) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.ResourceId = v
	return t
}

// SetV__ResourceId updates property "ResourceId".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) SetV__ResourceId(v string) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.ResourceId = cfz.V(v)
	return t
}

// Set__RoleARN updates property "RoleARN".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__RoleARN(v cfz.Expression[string]) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.RoleARN = v
	return t
}

// SetV__RoleARN updates property "RoleARN".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) SetV__RoleARN(v string) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.RoleARN = cfz.V(v)
	return t
}

// Set__ScalableDimension updates property "ScalableDimension".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__ScalableDimension(v cfz.Expression[string]) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.ScalableDimension = v
	return t
}

// SetV__ScalableDimension updates property "ScalableDimension".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) SetV__ScalableDimension(v string) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.ScalableDimension = cfz.V(v)
	return t
}

// Set__ScheduledActions updates property "ScheduledActions".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__ScheduledActions(v cfz.ExpressionSlice[AWS_ApplicationAutoScaling_ScalableTarget_ScheduledAction]) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.ScheduledActions = v
	return t
}

// SetS__ScheduledActions updates property "ScheduledActions".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) SetS__ScheduledActions(v ...cfz.Expression[AWS_ApplicationAutoScaling_ScalableTarget_ScheduledAction]) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.ScheduledActions = cfz.S(v...)
	return t
}

// SetSV__ScheduledActions updates property "ScheduledActions".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) SetSV__ScheduledActions(v ...AWS_ApplicationAutoScaling_ScalableTarget_ScheduledAction) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.ScheduledActions = cfz.SV(v...)
	return t
}

// Set__ServiceNamespace updates property "ServiceNamespace".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__ServiceNamespace(v cfz.Expression[string]) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.ServiceNamespace = v
	return t
}

// SetV__ServiceNamespace updates property "ServiceNamespace".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) SetV__ServiceNamespace(v string) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.ServiceNamespace = cfz.V(v)
	return t
}

// Set__SuspendedState updates property "SuspendedState".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Set__SuspendedState(v cfz.Expression[AWS_ApplicationAutoScaling_ScalableTarget_SuspendedState]) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.SuspendedState = v
	return t
}

// SetV__SuspendedState updates property "SuspendedState".
func (t *AWS_ApplicationAutoScaling_ScalableTarget) SetV__SuspendedState(v AWS_ApplicationAutoScaling_ScalableTarget_SuspendedState) *AWS_ApplicationAutoScaling_ScalableTarget {
	t.SuspendedState = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ApplicationAutoScaling_ScalableTarget) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_ApplicationAutoScaling_ScalableTarget) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ApplicationAutoScaling_ScalableTarget__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ApplicationAutoScaling_ScalableTarget) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_ApplicationAutoScaling_ScalableTarget) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ApplicationAutoScaling_ScalableTarget) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ApplicationAutoScaling_ScalableTarget

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ApplicationAutoScaling_ScalableTarget) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
