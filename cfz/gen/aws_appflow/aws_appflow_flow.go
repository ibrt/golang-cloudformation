// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appflow

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppFlow_Flow)(nil)
	_ cfz.Resource                   = (*AWS_AppFlow_Flow)(nil)
)

const (
	// AWS_AppFlow_Flow__Type is the CloudFormation type for AWS::AppFlow::Flow.
	AWS_AppFlow_Flow__Type = "AWS::AppFlow::Flow"
)

var (
	// AWS_AppFlow_Flow__AttributesMap reports all the CloudFormation attributes for AWS::AppFlow::Flow.
	AWS_AppFlow_Flow__AttributesMap = struct {
		FlowArn string
	}{
		FlowArn: "FlowArn",
	}

	// AWS_AppFlow_Flow__AttributesSlice reports all the CloudFormation attributes for AWS::AppFlow::Flow.
	AWS_AppFlow_Flow__AttributesSlice = []string{
		AWS_AppFlow_Flow__AttributesMap.FlowArn,
	}
)

var (
	// AWS_AppFlow_Flow__PropertiesMap reports all the CloudFormation properties for AWS::AppFlow::Flow.
	AWS_AppFlow_Flow__PropertiesMap = struct {
		Description               string
		DestinationFlowConfigList string
		FlowName                  string
		FlowStatus                string
		KMSArn                    string
		MetadataCatalogConfig     string
		SourceFlowConfig          string
		Tags                      string
		Tasks                     string
		TriggerConfig             string
	}{
		Description:               "Description",
		DestinationFlowConfigList: "DestinationFlowConfigList",
		FlowName:                  "FlowName",
		FlowStatus:                "FlowStatus",
		KMSArn:                    "KMSArn",
		MetadataCatalogConfig:     "MetadataCatalogConfig",
		SourceFlowConfig:          "SourceFlowConfig",
		Tags:                      "Tags",
		Tasks:                     "Tasks",
		TriggerConfig:             "TriggerConfig",
	}

	// AWS_AppFlow_Flow__PropertiesSlice reports all the CloudFormation properties for AWS::AppFlow::Flow.
	AWS_AppFlow_Flow__PropertiesSlice = []string{
		AWS_AppFlow_Flow__PropertiesMap.Description,
		AWS_AppFlow_Flow__PropertiesMap.DestinationFlowConfigList,
		AWS_AppFlow_Flow__PropertiesMap.FlowName,
		AWS_AppFlow_Flow__PropertiesMap.FlowStatus,
		AWS_AppFlow_Flow__PropertiesMap.KMSArn,
		AWS_AppFlow_Flow__PropertiesMap.MetadataCatalogConfig,
		AWS_AppFlow_Flow__PropertiesMap.SourceFlowConfig,
		AWS_AppFlow_Flow__PropertiesMap.Tags,
		AWS_AppFlow_Flow__PropertiesMap.Tasks,
		AWS_AppFlow_Flow__PropertiesMap.TriggerConfig,
	}
)

// AWS_AppFlow_Flow is a binding for AWS::AppFlow::Flow.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html
type AWS_AppFlow_Flow struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DestinationFlowConfigList is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-destinationflowconfiglist
	DestinationFlowConfigList cfz.ExpressionSlice[AWS_AppFlow_Flow_DestinationFlowConfig] `json:"DestinationFlowConfigList,omitempty"`

	// FlowName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-flowname
	FlowName cfz.Expression[string] `json:"FlowName,omitempty"`

	// FlowStatus is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-flowstatus
	FlowStatus cfz.Expression[string] `json:"FlowStatus,omitempty"`

	// KMSArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-kmsarn
	KMSArn cfz.Expression[string] `json:"KMSArn,omitempty"`

	// MetadataCatalogConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-metadatacatalogconfig
	MetadataCatalogConfig cfz.Expression[AWS_AppFlow_Flow_MetadataCatalogConfig] `json:"MetadataCatalogConfig,omitempty"`

	// SourceFlowConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-sourceflowconfig
	SourceFlowConfig cfz.Expression[AWS_AppFlow_Flow_SourceFlowConfig] `json:"SourceFlowConfig,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Tasks is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-tasks
	Tasks cfz.ExpressionSlice[AWS_AppFlow_Flow_Task] `json:"Tasks,omitempty"`

	// TriggerConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appflow-flow.html#cfn-appflow-flow-triggerconfig
	TriggerConfig cfz.Expression[AWS_AppFlow_Flow_TriggerConfig] `json:"TriggerConfig,omitempty"`
}

// New__AWS_AppFlow_Flow initializes a new *AWS_AppFlow_Flow.
func New__AWS_AppFlow_Flow(logicalName string) *AWS_AppFlow_Flow {
	return &AWS_AppFlow_Flow{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppFlow_Flow) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppFlow_Flow) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppFlow_Flow) GetType() string {
	return AWS_AppFlow_Flow__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppFlow_Flow) Set__LogicalName(v string) *AWS_AppFlow_Flow {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppFlow_Flow) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppFlow_Flow {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppFlow_Flow) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppFlow_Flow {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppFlow_Flow) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppFlow_Flow {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppFlow_Flow) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppFlow_Flow {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppFlow_Flow) Set__RequestedOutputs(v []cfz.Output) *AWS_AppFlow_Flow {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppFlow_Flow) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppFlow_Flow {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_AppFlow_Flow) Set__Description(v cfz.Expression[string]) *AWS_AppFlow_Flow {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_AppFlow_Flow) SetV__Description(v string) *AWS_AppFlow_Flow {
	t.Description = cfz.V(v)
	return t
}

// Set__DestinationFlowConfigList updates property "DestinationFlowConfigList".
func (t *AWS_AppFlow_Flow) Set__DestinationFlowConfigList(v cfz.ExpressionSlice[AWS_AppFlow_Flow_DestinationFlowConfig]) *AWS_AppFlow_Flow {
	t.DestinationFlowConfigList = v
	return t
}

// SetS__DestinationFlowConfigList updates property "DestinationFlowConfigList".
func (t *AWS_AppFlow_Flow) SetS__DestinationFlowConfigList(v ...cfz.Expression[AWS_AppFlow_Flow_DestinationFlowConfig]) *AWS_AppFlow_Flow {
	t.DestinationFlowConfigList = cfz.S(v...)
	return t
}

// SetSV__DestinationFlowConfigList updates property "DestinationFlowConfigList".
func (t *AWS_AppFlow_Flow) SetSV__DestinationFlowConfigList(v ...AWS_AppFlow_Flow_DestinationFlowConfig) *AWS_AppFlow_Flow {
	t.DestinationFlowConfigList = cfz.SV(v...)
	return t
}

// Set__FlowName updates property "FlowName".
func (t *AWS_AppFlow_Flow) Set__FlowName(v cfz.Expression[string]) *AWS_AppFlow_Flow {
	t.FlowName = v
	return t
}

// SetV__FlowName updates property "FlowName".
func (t *AWS_AppFlow_Flow) SetV__FlowName(v string) *AWS_AppFlow_Flow {
	t.FlowName = cfz.V(v)
	return t
}

// Set__FlowStatus updates property "FlowStatus".
func (t *AWS_AppFlow_Flow) Set__FlowStatus(v cfz.Expression[string]) *AWS_AppFlow_Flow {
	t.FlowStatus = v
	return t
}

// SetV__FlowStatus updates property "FlowStatus".
func (t *AWS_AppFlow_Flow) SetV__FlowStatus(v string) *AWS_AppFlow_Flow {
	t.FlowStatus = cfz.V(v)
	return t
}

// Set__KMSArn updates property "KMSArn".
func (t *AWS_AppFlow_Flow) Set__KMSArn(v cfz.Expression[string]) *AWS_AppFlow_Flow {
	t.KMSArn = v
	return t
}

// SetV__KMSArn updates property "KMSArn".
func (t *AWS_AppFlow_Flow) SetV__KMSArn(v string) *AWS_AppFlow_Flow {
	t.KMSArn = cfz.V(v)
	return t
}

// Set__MetadataCatalogConfig updates property "MetadataCatalogConfig".
func (t *AWS_AppFlow_Flow) Set__MetadataCatalogConfig(v cfz.Expression[AWS_AppFlow_Flow_MetadataCatalogConfig]) *AWS_AppFlow_Flow {
	t.MetadataCatalogConfig = v
	return t
}

// SetV__MetadataCatalogConfig updates property "MetadataCatalogConfig".
func (t *AWS_AppFlow_Flow) SetV__MetadataCatalogConfig(v AWS_AppFlow_Flow_MetadataCatalogConfig) *AWS_AppFlow_Flow {
	t.MetadataCatalogConfig = cfz.V(v)
	return t
}

// Set__SourceFlowConfig updates property "SourceFlowConfig".
func (t *AWS_AppFlow_Flow) Set__SourceFlowConfig(v cfz.Expression[AWS_AppFlow_Flow_SourceFlowConfig]) *AWS_AppFlow_Flow {
	t.SourceFlowConfig = v
	return t
}

// SetV__SourceFlowConfig updates property "SourceFlowConfig".
func (t *AWS_AppFlow_Flow) SetV__SourceFlowConfig(v AWS_AppFlow_Flow_SourceFlowConfig) *AWS_AppFlow_Flow {
	t.SourceFlowConfig = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppFlow_Flow) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_AppFlow_Flow {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppFlow_Flow) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_AppFlow_Flow {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppFlow_Flow) SetSV__Tags(v ...cfz.Tag) *AWS_AppFlow_Flow {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Tasks updates property "Tasks".
func (t *AWS_AppFlow_Flow) Set__Tasks(v cfz.ExpressionSlice[AWS_AppFlow_Flow_Task]) *AWS_AppFlow_Flow {
	t.Tasks = v
	return t
}

// SetS__Tasks updates property "Tasks".
func (t *AWS_AppFlow_Flow) SetS__Tasks(v ...cfz.Expression[AWS_AppFlow_Flow_Task]) *AWS_AppFlow_Flow {
	t.Tasks = cfz.S(v...)
	return t
}

// SetSV__Tasks updates property "Tasks".
func (t *AWS_AppFlow_Flow) SetSV__Tasks(v ...AWS_AppFlow_Flow_Task) *AWS_AppFlow_Flow {
	t.Tasks = cfz.SV(v...)
	return t
}

// Set__TriggerConfig updates property "TriggerConfig".
func (t *AWS_AppFlow_Flow) Set__TriggerConfig(v cfz.Expression[AWS_AppFlow_Flow_TriggerConfig]) *AWS_AppFlow_Flow {
	t.TriggerConfig = v
	return t
}

// SetV__TriggerConfig updates property "TriggerConfig".
func (t *AWS_AppFlow_Flow) SetV__TriggerConfig(v AWS_AppFlow_Flow_TriggerConfig) *AWS_AppFlow_Flow {
	t.TriggerConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppFlow_Flow) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__FlowArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FlowArn
func (t *AWS_AppFlow_Flow) GetAtt__FlowArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppFlow_Flow__AttributesMap.FlowArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppFlow_Flow) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FlowArn returns a conventionally configured output for an attribute of this resource.
// Attribute: FlowArn
func (t *AWS_AppFlow_Flow) GetConventionalOutputAtt__FlowArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFlowArn", t.GetAtt__FlowArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppFlow_Flow) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppFlow_Flow

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppFlow_Flow) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
