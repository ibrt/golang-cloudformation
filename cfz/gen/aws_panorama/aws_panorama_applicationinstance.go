// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_panorama

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Panorama_ApplicationInstance)(nil)
	_ cfz.Resource                   = (*AWS_Panorama_ApplicationInstance)(nil)
)

const (
	// AWS_Panorama_ApplicationInstance__Type is the CloudFormation type for AWS::Panorama::ApplicationInstance.
	AWS_Panorama_ApplicationInstance__Type = "AWS::Panorama::ApplicationInstance"
)

var (
	// AWS_Panorama_ApplicationInstance__AttributesMap reports all the CloudFormation attributes for AWS::Panorama::ApplicationInstance.
	AWS_Panorama_ApplicationInstance__AttributesMap = struct {
		ApplicationInstanceId           string
		Arn                             string
		CreatedTime                     string
		DefaultRuntimeContextDeviceName string
		HealthStatus                    string
		LastUpdatedTime                 string
		Status                          string
		StatusDescription               string
	}{
		ApplicationInstanceId:           "ApplicationInstanceId",
		Arn:                             "Arn",
		CreatedTime:                     "CreatedTime",
		DefaultRuntimeContextDeviceName: "DefaultRuntimeContextDeviceName",
		HealthStatus:                    "HealthStatus",
		LastUpdatedTime:                 "LastUpdatedTime",
		Status:                          "Status",
		StatusDescription:               "StatusDescription",
	}

	// AWS_Panorama_ApplicationInstance__AttributesSlice reports all the CloudFormation attributes for AWS::Panorama::ApplicationInstance.
	AWS_Panorama_ApplicationInstance__AttributesSlice = []string{
		AWS_Panorama_ApplicationInstance__AttributesMap.ApplicationInstanceId,
		AWS_Panorama_ApplicationInstance__AttributesMap.Arn,
		AWS_Panorama_ApplicationInstance__AttributesMap.CreatedTime,
		AWS_Panorama_ApplicationInstance__AttributesMap.DefaultRuntimeContextDeviceName,
		AWS_Panorama_ApplicationInstance__AttributesMap.HealthStatus,
		AWS_Panorama_ApplicationInstance__AttributesMap.LastUpdatedTime,
		AWS_Panorama_ApplicationInstance__AttributesMap.Status,
		AWS_Panorama_ApplicationInstance__AttributesMap.StatusDescription,
	}
)

var (
	// AWS_Panorama_ApplicationInstance__PropertiesMap reports all the CloudFormation properties for AWS::Panorama::ApplicationInstance.
	AWS_Panorama_ApplicationInstance__PropertiesMap = struct {
		ApplicationInstanceIdToReplace string
		DefaultRuntimeContextDevice    string
		Description                    string
		ManifestOverridesPayload       string
		ManifestPayload                string
		Name                           string
		RuntimeRoleArn                 string
		Tags                           string
	}{
		ApplicationInstanceIdToReplace: "ApplicationInstanceIdToReplace",
		DefaultRuntimeContextDevice:    "DefaultRuntimeContextDevice",
		Description:                    "Description",
		ManifestOverridesPayload:       "ManifestOverridesPayload",
		ManifestPayload:                "ManifestPayload",
		Name:                           "Name",
		RuntimeRoleArn:                 "RuntimeRoleArn",
		Tags:                           "Tags",
	}

	// AWS_Panorama_ApplicationInstance__PropertiesSlice reports all the CloudFormation properties for AWS::Panorama::ApplicationInstance.
	AWS_Panorama_ApplicationInstance__PropertiesSlice = []string{
		AWS_Panorama_ApplicationInstance__PropertiesMap.ApplicationInstanceIdToReplace,
		AWS_Panorama_ApplicationInstance__PropertiesMap.DefaultRuntimeContextDevice,
		AWS_Panorama_ApplicationInstance__PropertiesMap.Description,
		AWS_Panorama_ApplicationInstance__PropertiesMap.ManifestOverridesPayload,
		AWS_Panorama_ApplicationInstance__PropertiesMap.ManifestPayload,
		AWS_Panorama_ApplicationInstance__PropertiesMap.Name,
		AWS_Panorama_ApplicationInstance__PropertiesMap.RuntimeRoleArn,
		AWS_Panorama_ApplicationInstance__PropertiesMap.Tags,
	}
)

// AWS_Panorama_ApplicationInstance is a binding for AWS::Panorama::ApplicationInstance.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html
type AWS_Panorama_ApplicationInstance struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationInstanceIdToReplace is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-applicationinstanceidtoreplace
	ApplicationInstanceIdToReplace cfz.Expression[string] `json:"ApplicationInstanceIdToReplace,omitempty"`

	// DefaultRuntimeContextDevice is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-defaultruntimecontextdevice
	DefaultRuntimeContextDevice cfz.Expression[string] `json:"DefaultRuntimeContextDevice,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// ManifestOverridesPayload is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-manifestoverridespayload
	ManifestOverridesPayload cfz.Expression[AWS_Panorama_ApplicationInstance_ManifestOverridesPayload] `json:"ManifestOverridesPayload,omitempty"`

	// ManifestPayload is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-manifestpayload
	ManifestPayload cfz.Expression[AWS_Panorama_ApplicationInstance_ManifestPayload] `json:"ManifestPayload,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RuntimeRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-runtimerolearn
	RuntimeRoleArn cfz.Expression[string] `json:"RuntimeRoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-panorama-applicationinstance.html#cfn-panorama-applicationinstance-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Panorama_ApplicationInstance initializes a new *AWS_Panorama_ApplicationInstance.
func New__AWS_Panorama_ApplicationInstance(logicalName string) *AWS_Panorama_ApplicationInstance {
	return &AWS_Panorama_ApplicationInstance{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Panorama_ApplicationInstance) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Panorama_ApplicationInstance) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Panorama_ApplicationInstance) GetType() string {
	return AWS_Panorama_ApplicationInstance__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Panorama_ApplicationInstance) Set__LogicalName(v string) *AWS_Panorama_ApplicationInstance {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Panorama_ApplicationInstance) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Panorama_ApplicationInstance {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Panorama_ApplicationInstance) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Panorama_ApplicationInstance {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Panorama_ApplicationInstance) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Panorama_ApplicationInstance {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Panorama_ApplicationInstance) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Panorama_ApplicationInstance {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Panorama_ApplicationInstance) Set__RequestedOutputs(v []cfz.Output) *AWS_Panorama_ApplicationInstance {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Panorama_ApplicationInstance) Add__RequestedOutputs(v ...cfz.Output) *AWS_Panorama_ApplicationInstance {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationInstanceIdToReplace updates property "ApplicationInstanceIdToReplace".
func (t *AWS_Panorama_ApplicationInstance) Set__ApplicationInstanceIdToReplace(v cfz.Expression[string]) *AWS_Panorama_ApplicationInstance {
	t.ApplicationInstanceIdToReplace = v
	return t
}

// SetV__ApplicationInstanceIdToReplace updates property "ApplicationInstanceIdToReplace".
func (t *AWS_Panorama_ApplicationInstance) SetV__ApplicationInstanceIdToReplace(v string) *AWS_Panorama_ApplicationInstance {
	t.ApplicationInstanceIdToReplace = cfz.V(v)
	return t
}

// Set__DefaultRuntimeContextDevice updates property "DefaultRuntimeContextDevice".
func (t *AWS_Panorama_ApplicationInstance) Set__DefaultRuntimeContextDevice(v cfz.Expression[string]) *AWS_Panorama_ApplicationInstance {
	t.DefaultRuntimeContextDevice = v
	return t
}

// SetV__DefaultRuntimeContextDevice updates property "DefaultRuntimeContextDevice".
func (t *AWS_Panorama_ApplicationInstance) SetV__DefaultRuntimeContextDevice(v string) *AWS_Panorama_ApplicationInstance {
	t.DefaultRuntimeContextDevice = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Panorama_ApplicationInstance) Set__Description(v cfz.Expression[string]) *AWS_Panorama_ApplicationInstance {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Panorama_ApplicationInstance) SetV__Description(v string) *AWS_Panorama_ApplicationInstance {
	t.Description = cfz.V(v)
	return t
}

// Set__ManifestOverridesPayload updates property "ManifestOverridesPayload".
func (t *AWS_Panorama_ApplicationInstance) Set__ManifestOverridesPayload(v cfz.Expression[AWS_Panorama_ApplicationInstance_ManifestOverridesPayload]) *AWS_Panorama_ApplicationInstance {
	t.ManifestOverridesPayload = v
	return t
}

// SetV__ManifestOverridesPayload updates property "ManifestOverridesPayload".
func (t *AWS_Panorama_ApplicationInstance) SetV__ManifestOverridesPayload(v AWS_Panorama_ApplicationInstance_ManifestOverridesPayload) *AWS_Panorama_ApplicationInstance {
	t.ManifestOverridesPayload = cfz.V(v)
	return t
}

// Set__ManifestPayload updates property "ManifestPayload".
func (t *AWS_Panorama_ApplicationInstance) Set__ManifestPayload(v cfz.Expression[AWS_Panorama_ApplicationInstance_ManifestPayload]) *AWS_Panorama_ApplicationInstance {
	t.ManifestPayload = v
	return t
}

// SetV__ManifestPayload updates property "ManifestPayload".
func (t *AWS_Panorama_ApplicationInstance) SetV__ManifestPayload(v AWS_Panorama_ApplicationInstance_ManifestPayload) *AWS_Panorama_ApplicationInstance {
	t.ManifestPayload = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Panorama_ApplicationInstance) Set__Name(v cfz.Expression[string]) *AWS_Panorama_ApplicationInstance {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Panorama_ApplicationInstance) SetV__Name(v string) *AWS_Panorama_ApplicationInstance {
	t.Name = cfz.V(v)
	return t
}

// Set__RuntimeRoleArn updates property "RuntimeRoleArn".
func (t *AWS_Panorama_ApplicationInstance) Set__RuntimeRoleArn(v cfz.Expression[string]) *AWS_Panorama_ApplicationInstance {
	t.RuntimeRoleArn = v
	return t
}

// SetV__RuntimeRoleArn updates property "RuntimeRoleArn".
func (t *AWS_Panorama_ApplicationInstance) SetV__RuntimeRoleArn(v string) *AWS_Panorama_ApplicationInstance {
	t.RuntimeRoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Panorama_ApplicationInstance) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Panorama_ApplicationInstance {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Panorama_ApplicationInstance) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Panorama_ApplicationInstance {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Panorama_ApplicationInstance) SetSV__Tags(v ...cfz.Tag) *AWS_Panorama_ApplicationInstance {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Panorama_ApplicationInstance) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ApplicationInstanceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ApplicationInstanceId
func (t *AWS_Panorama_ApplicationInstance) GetAtt__ApplicationInstanceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Panorama_ApplicationInstance__AttributesMap.ApplicationInstanceId))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Panorama_ApplicationInstance) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Panorama_ApplicationInstance__AttributesMap.Arn))
}

// GetAtt__CreatedTime returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedTime
func (t *AWS_Panorama_ApplicationInstance) GetAtt__CreatedTime() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Panorama_ApplicationInstance__AttributesMap.CreatedTime))
}

// GetAtt__DefaultRuntimeContextDeviceName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DefaultRuntimeContextDeviceName
func (t *AWS_Panorama_ApplicationInstance) GetAtt__DefaultRuntimeContextDeviceName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Panorama_ApplicationInstance__AttributesMap.DefaultRuntimeContextDeviceName))
}

// GetAtt__HealthStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: HealthStatus
func (t *AWS_Panorama_ApplicationInstance) GetAtt__HealthStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Panorama_ApplicationInstance__AttributesMap.HealthStatus))
}

// GetAtt__LastUpdatedTime returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastUpdatedTime
func (t *AWS_Panorama_ApplicationInstance) GetAtt__LastUpdatedTime() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Panorama_ApplicationInstance__AttributesMap.LastUpdatedTime))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_Panorama_ApplicationInstance) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Panorama_ApplicationInstance__AttributesMap.Status))
}

// GetAtt__StatusDescription returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StatusDescription
func (t *AWS_Panorama_ApplicationInstance) GetAtt__StatusDescription() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Panorama_ApplicationInstance__AttributesMap.StatusDescription))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Panorama_ApplicationInstance) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ApplicationInstanceId returns a conventionally configured output for an attribute of this resource.
// Attribute: ApplicationInstanceId
func (t *AWS_Panorama_ApplicationInstance) GetConventionalOutputAtt__ApplicationInstanceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttApplicationInstanceId", t.GetAtt__ApplicationInstanceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Panorama_ApplicationInstance) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedTime
func (t *AWS_Panorama_ApplicationInstance) GetConventionalOutputAtt__CreatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedTime", t.GetAtt__CreatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DefaultRuntimeContextDeviceName returns a conventionally configured output for an attribute of this resource.
// Attribute: DefaultRuntimeContextDeviceName
func (t *AWS_Panorama_ApplicationInstance) GetConventionalOutputAtt__DefaultRuntimeContextDeviceName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDefaultRuntimeContextDeviceName", t.GetAtt__DefaultRuntimeContextDeviceName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__HealthStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: HealthStatus
func (t *AWS_Panorama_ApplicationInstance) GetConventionalOutputAtt__HealthStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttHealthStatus", t.GetAtt__HealthStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastUpdatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastUpdatedTime
func (t *AWS_Panorama_ApplicationInstance) GetConventionalOutputAtt__LastUpdatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastUpdatedTime", t.GetAtt__LastUpdatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_Panorama_ApplicationInstance) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StatusDescription returns a conventionally configured output for an attribute of this resource.
// Attribute: StatusDescription
func (t *AWS_Panorama_ApplicationInstance) GetConventionalOutputAtt__StatusDescription(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatusDescription", t.GetAtt__StatusDescription())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Panorama_ApplicationInstance) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Panorama_ApplicationInstance

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Panorama_ApplicationInstance) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
