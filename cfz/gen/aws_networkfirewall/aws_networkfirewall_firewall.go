// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_networkfirewall

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_NetworkFirewall_Firewall)(nil)
	_ cfz.Resource                   = (*AWS_NetworkFirewall_Firewall)(nil)
)

const (
	// AWS_NetworkFirewall_Firewall__Type is the CloudFormation type for AWS::NetworkFirewall::Firewall.
	AWS_NetworkFirewall_Firewall__Type = "AWS::NetworkFirewall::Firewall"
)

var (
	// AWS_NetworkFirewall_Firewall__AttributesMap reports all the CloudFormation attributes for AWS::NetworkFirewall::Firewall.
	AWS_NetworkFirewall_Firewall__AttributesMap = struct {
		EndpointIds string
		FirewallArn string
		FirewallId  string
	}{
		EndpointIds: "EndpointIds",
		FirewallArn: "FirewallArn",
		FirewallId:  "FirewallId",
	}

	// AWS_NetworkFirewall_Firewall__AttributesSlice reports all the CloudFormation attributes for AWS::NetworkFirewall::Firewall.
	AWS_NetworkFirewall_Firewall__AttributesSlice = []string{
		AWS_NetworkFirewall_Firewall__AttributesMap.EndpointIds,
		AWS_NetworkFirewall_Firewall__AttributesMap.FirewallArn,
		AWS_NetworkFirewall_Firewall__AttributesMap.FirewallId,
	}
)

var (
	// AWS_NetworkFirewall_Firewall__PropertiesMap reports all the CloudFormation properties for AWS::NetworkFirewall::Firewall.
	AWS_NetworkFirewall_Firewall__PropertiesMap = struct {
		DeleteProtection               string
		Description                    string
		FirewallName                   string
		FirewallPolicyArn              string
		FirewallPolicyChangeProtection string
		SubnetChangeProtection         string
		SubnetMappings                 string
		Tags                           string
		VpcId                          string
	}{
		DeleteProtection:               "DeleteProtection",
		Description:                    "Description",
		FirewallName:                   "FirewallName",
		FirewallPolicyArn:              "FirewallPolicyArn",
		FirewallPolicyChangeProtection: "FirewallPolicyChangeProtection",
		SubnetChangeProtection:         "SubnetChangeProtection",
		SubnetMappings:                 "SubnetMappings",
		Tags:                           "Tags",
		VpcId:                          "VpcId",
	}

	// AWS_NetworkFirewall_Firewall__PropertiesSlice reports all the CloudFormation properties for AWS::NetworkFirewall::Firewall.
	AWS_NetworkFirewall_Firewall__PropertiesSlice = []string{
		AWS_NetworkFirewall_Firewall__PropertiesMap.DeleteProtection,
		AWS_NetworkFirewall_Firewall__PropertiesMap.Description,
		AWS_NetworkFirewall_Firewall__PropertiesMap.FirewallName,
		AWS_NetworkFirewall_Firewall__PropertiesMap.FirewallPolicyArn,
		AWS_NetworkFirewall_Firewall__PropertiesMap.FirewallPolicyChangeProtection,
		AWS_NetworkFirewall_Firewall__PropertiesMap.SubnetChangeProtection,
		AWS_NetworkFirewall_Firewall__PropertiesMap.SubnetMappings,
		AWS_NetworkFirewall_Firewall__PropertiesMap.Tags,
		AWS_NetworkFirewall_Firewall__PropertiesMap.VpcId,
	}
)

// AWS_NetworkFirewall_Firewall is a binding for AWS::NetworkFirewall::Firewall.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html
type AWS_NetworkFirewall_Firewall struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DeleteProtection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-deleteprotection
	DeleteProtection cfz.Expression[bool] `json:"DeleteProtection,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// FirewallName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-firewallname
	FirewallName cfz.Expression[string] `json:"FirewallName,omitempty"`

	// FirewallPolicyArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-firewallpolicyarn
	FirewallPolicyArn cfz.Expression[string] `json:"FirewallPolicyArn,omitempty"`

	// FirewallPolicyChangeProtection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-firewallpolicychangeprotection
	FirewallPolicyChangeProtection cfz.Expression[bool] `json:"FirewallPolicyChangeProtection,omitempty"`

	// SubnetChangeProtection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-subnetchangeprotection
	SubnetChangeProtection cfz.Expression[bool] `json:"SubnetChangeProtection,omitempty"`

	// SubnetMappings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-subnetmappings
	SubnetMappings cfz.ExpressionSlice[AWS_NetworkFirewall_Firewall_SubnetMapping] `json:"SubnetMappings,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-firewall.html#cfn-networkfirewall-firewall-vpcid
	VpcId cfz.Expression[string] `json:"VpcId,omitempty"`
}

// New__AWS_NetworkFirewall_Firewall initializes a new *AWS_NetworkFirewall_Firewall.
func New__AWS_NetworkFirewall_Firewall(logicalName string) *AWS_NetworkFirewall_Firewall {
	return &AWS_NetworkFirewall_Firewall{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_NetworkFirewall_Firewall) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_NetworkFirewall_Firewall) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_NetworkFirewall_Firewall) GetType() string {
	return AWS_NetworkFirewall_Firewall__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_NetworkFirewall_Firewall) Set__LogicalName(v string) *AWS_NetworkFirewall_Firewall {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_NetworkFirewall_Firewall) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_NetworkFirewall_Firewall {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_NetworkFirewall_Firewall) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_NetworkFirewall_Firewall {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_NetworkFirewall_Firewall) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_NetworkFirewall_Firewall {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_NetworkFirewall_Firewall) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_NetworkFirewall_Firewall {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_NetworkFirewall_Firewall) Set__RequestedOutputs(v []cfz.Output) *AWS_NetworkFirewall_Firewall {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_NetworkFirewall_Firewall) Add__RequestedOutputs(v ...cfz.Output) *AWS_NetworkFirewall_Firewall {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DeleteProtection updates property "DeleteProtection".
func (t *AWS_NetworkFirewall_Firewall) Set__DeleteProtection(v cfz.Expression[bool]) *AWS_NetworkFirewall_Firewall {
	t.DeleteProtection = v
	return t
}

// SetV__DeleteProtection updates property "DeleteProtection".
func (t *AWS_NetworkFirewall_Firewall) SetV__DeleteProtection(v bool) *AWS_NetworkFirewall_Firewall {
	t.DeleteProtection = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_NetworkFirewall_Firewall) Set__Description(v cfz.Expression[string]) *AWS_NetworkFirewall_Firewall {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_NetworkFirewall_Firewall) SetV__Description(v string) *AWS_NetworkFirewall_Firewall {
	t.Description = cfz.V(v)
	return t
}

// Set__FirewallName updates property "FirewallName".
func (t *AWS_NetworkFirewall_Firewall) Set__FirewallName(v cfz.Expression[string]) *AWS_NetworkFirewall_Firewall {
	t.FirewallName = v
	return t
}

// SetV__FirewallName updates property "FirewallName".
func (t *AWS_NetworkFirewall_Firewall) SetV__FirewallName(v string) *AWS_NetworkFirewall_Firewall {
	t.FirewallName = cfz.V(v)
	return t
}

// Set__FirewallPolicyArn updates property "FirewallPolicyArn".
func (t *AWS_NetworkFirewall_Firewall) Set__FirewallPolicyArn(v cfz.Expression[string]) *AWS_NetworkFirewall_Firewall {
	t.FirewallPolicyArn = v
	return t
}

// SetV__FirewallPolicyArn updates property "FirewallPolicyArn".
func (t *AWS_NetworkFirewall_Firewall) SetV__FirewallPolicyArn(v string) *AWS_NetworkFirewall_Firewall {
	t.FirewallPolicyArn = cfz.V(v)
	return t
}

// Set__FirewallPolicyChangeProtection updates property "FirewallPolicyChangeProtection".
func (t *AWS_NetworkFirewall_Firewall) Set__FirewallPolicyChangeProtection(v cfz.Expression[bool]) *AWS_NetworkFirewall_Firewall {
	t.FirewallPolicyChangeProtection = v
	return t
}

// SetV__FirewallPolicyChangeProtection updates property "FirewallPolicyChangeProtection".
func (t *AWS_NetworkFirewall_Firewall) SetV__FirewallPolicyChangeProtection(v bool) *AWS_NetworkFirewall_Firewall {
	t.FirewallPolicyChangeProtection = cfz.V(v)
	return t
}

// Set__SubnetChangeProtection updates property "SubnetChangeProtection".
func (t *AWS_NetworkFirewall_Firewall) Set__SubnetChangeProtection(v cfz.Expression[bool]) *AWS_NetworkFirewall_Firewall {
	t.SubnetChangeProtection = v
	return t
}

// SetV__SubnetChangeProtection updates property "SubnetChangeProtection".
func (t *AWS_NetworkFirewall_Firewall) SetV__SubnetChangeProtection(v bool) *AWS_NetworkFirewall_Firewall {
	t.SubnetChangeProtection = cfz.V(v)
	return t
}

// Set__SubnetMappings updates property "SubnetMappings".
func (t *AWS_NetworkFirewall_Firewall) Set__SubnetMappings(v cfz.ExpressionSlice[AWS_NetworkFirewall_Firewall_SubnetMapping]) *AWS_NetworkFirewall_Firewall {
	t.SubnetMappings = v
	return t
}

// SetS__SubnetMappings updates property "SubnetMappings".
func (t *AWS_NetworkFirewall_Firewall) SetS__SubnetMappings(v ...cfz.Expression[AWS_NetworkFirewall_Firewall_SubnetMapping]) *AWS_NetworkFirewall_Firewall {
	t.SubnetMappings = cfz.S(v...)
	return t
}

// SetSV__SubnetMappings updates property "SubnetMappings".
func (t *AWS_NetworkFirewall_Firewall) SetSV__SubnetMappings(v ...AWS_NetworkFirewall_Firewall_SubnetMapping) *AWS_NetworkFirewall_Firewall {
	t.SubnetMappings = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_NetworkFirewall_Firewall) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_NetworkFirewall_Firewall {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_NetworkFirewall_Firewall) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_NetworkFirewall_Firewall {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_NetworkFirewall_Firewall) SetSV__Tags(v ...cfz.Tag) *AWS_NetworkFirewall_Firewall {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcId updates property "VpcId".
func (t *AWS_NetworkFirewall_Firewall) Set__VpcId(v cfz.Expression[string]) *AWS_NetworkFirewall_Firewall {
	t.VpcId = v
	return t
}

// SetV__VpcId updates property "VpcId".
func (t *AWS_NetworkFirewall_Firewall) SetV__VpcId(v string) *AWS_NetworkFirewall_Firewall {
	t.VpcId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_NetworkFirewall_Firewall) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAttSlice__EndpointIds returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointIds
func (t *AWS_NetworkFirewall_Firewall) GetAttSlice__EndpointIds() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkFirewall_Firewall__AttributesMap.EndpointIds))
}

// GetAtt__FirewallArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FirewallArn
func (t *AWS_NetworkFirewall_Firewall) GetAtt__FirewallArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkFirewall_Firewall__AttributesMap.FirewallArn))
}

// GetAtt__FirewallId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FirewallId
func (t *AWS_NetworkFirewall_Firewall) GetAtt__FirewallId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkFirewall_Firewall__AttributesMap.FirewallId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_NetworkFirewall_Firewall) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointIds returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointIds
func (t *AWS_NetworkFirewall_Firewall) GetConventionalOutputAtt__EndpointIds(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointIds", t.GetAttSlice__EndpointIds())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FirewallArn returns a conventionally configured output for an attribute of this resource.
// Attribute: FirewallArn
func (t *AWS_NetworkFirewall_Firewall) GetConventionalOutputAtt__FirewallArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFirewallArn", t.GetAtt__FirewallArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FirewallId returns a conventionally configured output for an attribute of this resource.
// Attribute: FirewallId
func (t *AWS_NetworkFirewall_Firewall) GetConventionalOutputAtt__FirewallId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFirewallId", t.GetAtt__FirewallId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_NetworkFirewall_Firewall) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_NetworkFirewall_Firewall

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_NetworkFirewall_Firewall) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
