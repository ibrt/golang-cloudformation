// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_networkfirewall

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_NetworkFirewall_RuleGroup)(nil)
	_ cfz.Resource                   = (*AWS_NetworkFirewall_RuleGroup)(nil)
)

const (
	// AWS_NetworkFirewall_RuleGroup__Type is the CloudFormation type for AWS::NetworkFirewall::RuleGroup.
	AWS_NetworkFirewall_RuleGroup__Type = "AWS::NetworkFirewall::RuleGroup"
)

var (
	// AWS_NetworkFirewall_RuleGroup__AttributesMap reports all the CloudFormation attributes for AWS::NetworkFirewall::RuleGroup.
	AWS_NetworkFirewall_RuleGroup__AttributesMap = struct {
		RuleGroupArn string
		RuleGroupId  string
	}{
		RuleGroupArn: "RuleGroupArn",
		RuleGroupId:  "RuleGroupId",
	}

	// AWS_NetworkFirewall_RuleGroup__AttributesSlice reports all the CloudFormation attributes for AWS::NetworkFirewall::RuleGroup.
	AWS_NetworkFirewall_RuleGroup__AttributesSlice = []string{
		AWS_NetworkFirewall_RuleGroup__AttributesMap.RuleGroupArn,
		AWS_NetworkFirewall_RuleGroup__AttributesMap.RuleGroupId,
	}
)

var (
	// AWS_NetworkFirewall_RuleGroup__PropertiesMap reports all the CloudFormation properties for AWS::NetworkFirewall::RuleGroup.
	AWS_NetworkFirewall_RuleGroup__PropertiesMap = struct {
		Capacity      string
		Description   string
		RuleGroup     string
		RuleGroupName string
		Tags          string
		Type          string
	}{
		Capacity:      "Capacity",
		Description:   "Description",
		RuleGroup:     "RuleGroup",
		RuleGroupName: "RuleGroupName",
		Tags:          "Tags",
		Type:          "Type",
	}

	// AWS_NetworkFirewall_RuleGroup__PropertiesSlice reports all the CloudFormation properties for AWS::NetworkFirewall::RuleGroup.
	AWS_NetworkFirewall_RuleGroup__PropertiesSlice = []string{
		AWS_NetworkFirewall_RuleGroup__PropertiesMap.Capacity,
		AWS_NetworkFirewall_RuleGroup__PropertiesMap.Description,
		AWS_NetworkFirewall_RuleGroup__PropertiesMap.RuleGroup,
		AWS_NetworkFirewall_RuleGroup__PropertiesMap.RuleGroupName,
		AWS_NetworkFirewall_RuleGroup__PropertiesMap.Tags,
		AWS_NetworkFirewall_RuleGroup__PropertiesMap.Type,
	}
)

// AWS_NetworkFirewall_RuleGroup is a binding for AWS::NetworkFirewall::RuleGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html
type AWS_NetworkFirewall_RuleGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Capacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-capacity
	Capacity cfz.Expression[int32] `json:"Capacity,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// RuleGroup is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-rulegroup
	RuleGroup cfz.Expression[AWS_NetworkFirewall_RuleGroup_RuleGroup] `json:"RuleGroup,omitempty"`

	// RuleGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-rulegroupname
	RuleGroupName cfz.Expression[string] `json:"RuleGroupName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkfirewall-rulegroup.html#cfn-networkfirewall-rulegroup-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_NetworkFirewall_RuleGroup initializes a new *AWS_NetworkFirewall_RuleGroup.
func New__AWS_NetworkFirewall_RuleGroup(logicalName string) *AWS_NetworkFirewall_RuleGroup {
	return &AWS_NetworkFirewall_RuleGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_NetworkFirewall_RuleGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_NetworkFirewall_RuleGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_NetworkFirewall_RuleGroup) GetType() string {
	return AWS_NetworkFirewall_RuleGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_NetworkFirewall_RuleGroup) Set__LogicalName(v string) *AWS_NetworkFirewall_RuleGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_NetworkFirewall_RuleGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_NetworkFirewall_RuleGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_NetworkFirewall_RuleGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_NetworkFirewall_RuleGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_NetworkFirewall_RuleGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_NetworkFirewall_RuleGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_NetworkFirewall_RuleGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_NetworkFirewall_RuleGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_NetworkFirewall_RuleGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_NetworkFirewall_RuleGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_NetworkFirewall_RuleGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_NetworkFirewall_RuleGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Capacity updates property "Capacity".
func (t *AWS_NetworkFirewall_RuleGroup) Set__Capacity(v cfz.Expression[int32]) *AWS_NetworkFirewall_RuleGroup {
	t.Capacity = v
	return t
}

// SetV__Capacity updates property "Capacity".
func (t *AWS_NetworkFirewall_RuleGroup) SetV__Capacity(v int32) *AWS_NetworkFirewall_RuleGroup {
	t.Capacity = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_NetworkFirewall_RuleGroup) Set__Description(v cfz.Expression[string]) *AWS_NetworkFirewall_RuleGroup {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_NetworkFirewall_RuleGroup) SetV__Description(v string) *AWS_NetworkFirewall_RuleGroup {
	t.Description = cfz.V(v)
	return t
}

// Set__RuleGroup updates property "RuleGroup".
func (t *AWS_NetworkFirewall_RuleGroup) Set__RuleGroup(v cfz.Expression[AWS_NetworkFirewall_RuleGroup_RuleGroup]) *AWS_NetworkFirewall_RuleGroup {
	t.RuleGroup = v
	return t
}

// SetV__RuleGroup updates property "RuleGroup".
func (t *AWS_NetworkFirewall_RuleGroup) SetV__RuleGroup(v AWS_NetworkFirewall_RuleGroup_RuleGroup) *AWS_NetworkFirewall_RuleGroup {
	t.RuleGroup = cfz.V(v)
	return t
}

// Set__RuleGroupName updates property "RuleGroupName".
func (t *AWS_NetworkFirewall_RuleGroup) Set__RuleGroupName(v cfz.Expression[string]) *AWS_NetworkFirewall_RuleGroup {
	t.RuleGroupName = v
	return t
}

// SetV__RuleGroupName updates property "RuleGroupName".
func (t *AWS_NetworkFirewall_RuleGroup) SetV__RuleGroupName(v string) *AWS_NetworkFirewall_RuleGroup {
	t.RuleGroupName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_NetworkFirewall_RuleGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_NetworkFirewall_RuleGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_NetworkFirewall_RuleGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_NetworkFirewall_RuleGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_NetworkFirewall_RuleGroup) SetSV__Tags(v ...cfz.Tag) *AWS_NetworkFirewall_RuleGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_NetworkFirewall_RuleGroup) Set__Type(v cfz.Expression[string]) *AWS_NetworkFirewall_RuleGroup {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_NetworkFirewall_RuleGroup) SetV__Type(v string) *AWS_NetworkFirewall_RuleGroup {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_NetworkFirewall_RuleGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__RuleGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RuleGroupArn
func (t *AWS_NetworkFirewall_RuleGroup) GetAtt__RuleGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkFirewall_RuleGroup__AttributesMap.RuleGroupArn))
}

// GetAtt__RuleGroupId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RuleGroupId
func (t *AWS_NetworkFirewall_RuleGroup) GetAtt__RuleGroupId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkFirewall_RuleGroup__AttributesMap.RuleGroupId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_NetworkFirewall_RuleGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RuleGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: RuleGroupArn
func (t *AWS_NetworkFirewall_RuleGroup) GetConventionalOutputAtt__RuleGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRuleGroupArn", t.GetAtt__RuleGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RuleGroupId returns a conventionally configured output for an attribute of this resource.
// Attribute: RuleGroupId
func (t *AWS_NetworkFirewall_RuleGroup) GetConventionalOutputAtt__RuleGroupId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRuleGroupId", t.GetAtt__RuleGroupId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_NetworkFirewall_RuleGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_NetworkFirewall_RuleGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_NetworkFirewall_RuleGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
