// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_emr

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EMR_InstanceGroupConfig_ScalingConstraints__Type is the CloudFormation type for AWS::EMR::InstanceGroupConfig.ScalingConstraints.
	AWS_EMR_InstanceGroupConfig_ScalingConstraints__Type = "AWS::EMR::InstanceGroupConfig.ScalingConstraints"
)

var (
	// AWS_EMR_InstanceGroupConfig_ScalingConstraints__PropertiesMap reports all the CloudFormation properties for AWS::EMR::InstanceGroupConfig.ScalingConstraints.
	AWS_EMR_InstanceGroupConfig_ScalingConstraints__PropertiesMap = struct {
		MaxCapacity string
		MinCapacity string
	}{
		MaxCapacity: "MaxCapacity",
		MinCapacity: "MinCapacity",
	}

	// AWS_EMR_InstanceGroupConfig_ScalingConstraints__PropertiesSlice reports all the CloudFormation properties for AWS::EMR::InstanceGroupConfig.ScalingConstraints.
	AWS_EMR_InstanceGroupConfig_ScalingConstraints__PropertiesSlice = []string{
		AWS_EMR_InstanceGroupConfig_ScalingConstraints__PropertiesMap.MaxCapacity,
		AWS_EMR_InstanceGroupConfig_ScalingConstraints__PropertiesMap.MinCapacity,
	}
)

// AWS_EMR_InstanceGroupConfig_ScalingConstraints is a binding for AWS::EMR::InstanceGroupConfig.ScalingConstraints.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingconstraints.html
type AWS_EMR_InstanceGroupConfig_ScalingConstraints struct {
	// MaxCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingconstraints.html#cfn-elasticmapreduce-instancegroupconfig-scalingconstraints-maxcapacity
	MaxCapacity cfz.Expression[int32] `json:"MaxCapacity,omitempty"`

	// MinCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticmapreduce-instancegroupconfig-scalingconstraints.html#cfn-elasticmapreduce-instancegroupconfig-scalingconstraints-mincapacity
	MinCapacity cfz.Expression[int32] `json:"MinCapacity,omitempty"`
}

// New__AWS_EMR_InstanceGroupConfig_ScalingConstraints initializes a new AWS_EMR_InstanceGroupConfig_ScalingConstraints.
func New__AWS_EMR_InstanceGroupConfig_ScalingConstraints() AWS_EMR_InstanceGroupConfig_ScalingConstraints {
	return AWS_EMR_InstanceGroupConfig_ScalingConstraints{}
}

// GetType returns the CloudFormation type.
func (AWS_EMR_InstanceGroupConfig_ScalingConstraints) GetType() string {
	return AWS_EMR_InstanceGroupConfig_ScalingConstraints__Type
}

// Set__MaxCapacity updates property "MaxCapacity".
func (t AWS_EMR_InstanceGroupConfig_ScalingConstraints) Set__MaxCapacity(v cfz.Expression[int32]) AWS_EMR_InstanceGroupConfig_ScalingConstraints {
	t.MaxCapacity = v
	return t
}

// SetV__MaxCapacity updates property "MaxCapacity".
func (t AWS_EMR_InstanceGroupConfig_ScalingConstraints) SetV__MaxCapacity(v int32) AWS_EMR_InstanceGroupConfig_ScalingConstraints {
	t.MaxCapacity = cfz.V(v)
	return t
}

// Set__MinCapacity updates property "MinCapacity".
func (t AWS_EMR_InstanceGroupConfig_ScalingConstraints) Set__MinCapacity(v cfz.Expression[int32]) AWS_EMR_InstanceGroupConfig_ScalingConstraints {
	t.MinCapacity = v
	return t
}

// SetV__MinCapacity updates property "MinCapacity".
func (t AWS_EMR_InstanceGroupConfig_ScalingConstraints) SetV__MinCapacity(v int32) AWS_EMR_InstanceGroupConfig_ScalingConstraints {
	t.MinCapacity = cfz.V(v)
	return t
}
