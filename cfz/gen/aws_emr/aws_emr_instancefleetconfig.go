// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_emr

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EMR_InstanceFleetConfig)(nil)
	_ cfz.Resource                   = (*AWS_EMR_InstanceFleetConfig)(nil)
)

const (
	// AWS_EMR_InstanceFleetConfig__Type is the CloudFormation type for AWS::EMR::InstanceFleetConfig.
	AWS_EMR_InstanceFleetConfig__Type = "AWS::EMR::InstanceFleetConfig"
)

var (
	// AWS_EMR_InstanceFleetConfig__PropertiesMap reports all the CloudFormation properties for AWS::EMR::InstanceFleetConfig.
	AWS_EMR_InstanceFleetConfig__PropertiesMap = struct {
		ClusterId              string
		InstanceFleetType      string
		InstanceTypeConfigs    string
		LaunchSpecifications   string
		Name                   string
		ResizeSpecifications   string
		TargetOnDemandCapacity string
		TargetSpotCapacity     string
	}{
		ClusterId:              "ClusterId",
		InstanceFleetType:      "InstanceFleetType",
		InstanceTypeConfigs:    "InstanceTypeConfigs",
		LaunchSpecifications:   "LaunchSpecifications",
		Name:                   "Name",
		ResizeSpecifications:   "ResizeSpecifications",
		TargetOnDemandCapacity: "TargetOnDemandCapacity",
		TargetSpotCapacity:     "TargetSpotCapacity",
	}

	// AWS_EMR_InstanceFleetConfig__PropertiesSlice reports all the CloudFormation properties for AWS::EMR::InstanceFleetConfig.
	AWS_EMR_InstanceFleetConfig__PropertiesSlice = []string{
		AWS_EMR_InstanceFleetConfig__PropertiesMap.ClusterId,
		AWS_EMR_InstanceFleetConfig__PropertiesMap.InstanceFleetType,
		AWS_EMR_InstanceFleetConfig__PropertiesMap.InstanceTypeConfigs,
		AWS_EMR_InstanceFleetConfig__PropertiesMap.LaunchSpecifications,
		AWS_EMR_InstanceFleetConfig__PropertiesMap.Name,
		AWS_EMR_InstanceFleetConfig__PropertiesMap.ResizeSpecifications,
		AWS_EMR_InstanceFleetConfig__PropertiesMap.TargetOnDemandCapacity,
		AWS_EMR_InstanceFleetConfig__PropertiesMap.TargetSpotCapacity,
	}
)

// AWS_EMR_InstanceFleetConfig is a binding for AWS::EMR::InstanceFleetConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html
type AWS_EMR_InstanceFleetConfig struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ClusterId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-clusterid
	ClusterId cfz.Expression[string] `json:"ClusterId,omitempty"`

	// InstanceFleetType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancefleettype
	InstanceFleetType cfz.Expression[string] `json:"InstanceFleetType,omitempty"`

	// InstanceTypeConfigs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-instancetypeconfigs
	InstanceTypeConfigs cfz.ExpressionSlice[AWS_EMR_InstanceFleetConfig_InstanceTypeConfig] `json:"InstanceTypeConfigs,omitempty"`

	// LaunchSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-launchspecifications
	LaunchSpecifications cfz.Expression[AWS_EMR_InstanceFleetConfig_InstanceFleetProvisioningSpecifications] `json:"LaunchSpecifications,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// ResizeSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-resizespecifications
	ResizeSpecifications cfz.Expression[AWS_EMR_InstanceFleetConfig_InstanceFleetResizingSpecifications] `json:"ResizeSpecifications,omitempty"`

	// TargetOnDemandCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-targetondemandcapacity
	TargetOnDemandCapacity cfz.Expression[int32] `json:"TargetOnDemandCapacity,omitempty"`

	// TargetSpotCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticmapreduce-instancefleetconfig.html#cfn-elasticmapreduce-instancefleetconfig-targetspotcapacity
	TargetSpotCapacity cfz.Expression[int32] `json:"TargetSpotCapacity,omitempty"`
}

// New__AWS_EMR_InstanceFleetConfig initializes a new *AWS_EMR_InstanceFleetConfig.
func New__AWS_EMR_InstanceFleetConfig(logicalName string) *AWS_EMR_InstanceFleetConfig {
	return &AWS_EMR_InstanceFleetConfig{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EMR_InstanceFleetConfig) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EMR_InstanceFleetConfig) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EMR_InstanceFleetConfig) GetType() string {
	return AWS_EMR_InstanceFleetConfig__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EMR_InstanceFleetConfig) Set__LogicalName(v string) *AWS_EMR_InstanceFleetConfig {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EMR_InstanceFleetConfig) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EMR_InstanceFleetConfig {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EMR_InstanceFleetConfig) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EMR_InstanceFleetConfig {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EMR_InstanceFleetConfig) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EMR_InstanceFleetConfig {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EMR_InstanceFleetConfig) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EMR_InstanceFleetConfig {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EMR_InstanceFleetConfig) Set__RequestedOutputs(v []cfz.Output) *AWS_EMR_InstanceFleetConfig {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EMR_InstanceFleetConfig) Add__RequestedOutputs(v ...cfz.Output) *AWS_EMR_InstanceFleetConfig {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ClusterId updates property "ClusterId".
func (t *AWS_EMR_InstanceFleetConfig) Set__ClusterId(v cfz.Expression[string]) *AWS_EMR_InstanceFleetConfig {
	t.ClusterId = v
	return t
}

// SetV__ClusterId updates property "ClusterId".
func (t *AWS_EMR_InstanceFleetConfig) SetV__ClusterId(v string) *AWS_EMR_InstanceFleetConfig {
	t.ClusterId = cfz.V(v)
	return t
}

// Set__InstanceFleetType updates property "InstanceFleetType".
func (t *AWS_EMR_InstanceFleetConfig) Set__InstanceFleetType(v cfz.Expression[string]) *AWS_EMR_InstanceFleetConfig {
	t.InstanceFleetType = v
	return t
}

// SetV__InstanceFleetType updates property "InstanceFleetType".
func (t *AWS_EMR_InstanceFleetConfig) SetV__InstanceFleetType(v string) *AWS_EMR_InstanceFleetConfig {
	t.InstanceFleetType = cfz.V(v)
	return t
}

// Set__InstanceTypeConfigs updates property "InstanceTypeConfigs".
func (t *AWS_EMR_InstanceFleetConfig) Set__InstanceTypeConfigs(v cfz.ExpressionSlice[AWS_EMR_InstanceFleetConfig_InstanceTypeConfig]) *AWS_EMR_InstanceFleetConfig {
	t.InstanceTypeConfigs = v
	return t
}

// SetS__InstanceTypeConfigs updates property "InstanceTypeConfigs".
func (t *AWS_EMR_InstanceFleetConfig) SetS__InstanceTypeConfigs(v ...cfz.Expression[AWS_EMR_InstanceFleetConfig_InstanceTypeConfig]) *AWS_EMR_InstanceFleetConfig {
	t.InstanceTypeConfigs = cfz.S(v...)
	return t
}

// SetSV__InstanceTypeConfigs updates property "InstanceTypeConfigs".
func (t *AWS_EMR_InstanceFleetConfig) SetSV__InstanceTypeConfigs(v ...AWS_EMR_InstanceFleetConfig_InstanceTypeConfig) *AWS_EMR_InstanceFleetConfig {
	t.InstanceTypeConfigs = cfz.SV(v...)
	return t
}

// Set__LaunchSpecifications updates property "LaunchSpecifications".
func (t *AWS_EMR_InstanceFleetConfig) Set__LaunchSpecifications(v cfz.Expression[AWS_EMR_InstanceFleetConfig_InstanceFleetProvisioningSpecifications]) *AWS_EMR_InstanceFleetConfig {
	t.LaunchSpecifications = v
	return t
}

// SetV__LaunchSpecifications updates property "LaunchSpecifications".
func (t *AWS_EMR_InstanceFleetConfig) SetV__LaunchSpecifications(v AWS_EMR_InstanceFleetConfig_InstanceFleetProvisioningSpecifications) *AWS_EMR_InstanceFleetConfig {
	t.LaunchSpecifications = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_EMR_InstanceFleetConfig) Set__Name(v cfz.Expression[string]) *AWS_EMR_InstanceFleetConfig {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_EMR_InstanceFleetConfig) SetV__Name(v string) *AWS_EMR_InstanceFleetConfig {
	t.Name = cfz.V(v)
	return t
}

// Set__ResizeSpecifications updates property "ResizeSpecifications".
func (t *AWS_EMR_InstanceFleetConfig) Set__ResizeSpecifications(v cfz.Expression[AWS_EMR_InstanceFleetConfig_InstanceFleetResizingSpecifications]) *AWS_EMR_InstanceFleetConfig {
	t.ResizeSpecifications = v
	return t
}

// SetV__ResizeSpecifications updates property "ResizeSpecifications".
func (t *AWS_EMR_InstanceFleetConfig) SetV__ResizeSpecifications(v AWS_EMR_InstanceFleetConfig_InstanceFleetResizingSpecifications) *AWS_EMR_InstanceFleetConfig {
	t.ResizeSpecifications = cfz.V(v)
	return t
}

// Set__TargetOnDemandCapacity updates property "TargetOnDemandCapacity".
func (t *AWS_EMR_InstanceFleetConfig) Set__TargetOnDemandCapacity(v cfz.Expression[int32]) *AWS_EMR_InstanceFleetConfig {
	t.TargetOnDemandCapacity = v
	return t
}

// SetV__TargetOnDemandCapacity updates property "TargetOnDemandCapacity".
func (t *AWS_EMR_InstanceFleetConfig) SetV__TargetOnDemandCapacity(v int32) *AWS_EMR_InstanceFleetConfig {
	t.TargetOnDemandCapacity = cfz.V(v)
	return t
}

// Set__TargetSpotCapacity updates property "TargetSpotCapacity".
func (t *AWS_EMR_InstanceFleetConfig) Set__TargetSpotCapacity(v cfz.Expression[int32]) *AWS_EMR_InstanceFleetConfig {
	t.TargetSpotCapacity = v
	return t
}

// SetV__TargetSpotCapacity updates property "TargetSpotCapacity".
func (t *AWS_EMR_InstanceFleetConfig) SetV__TargetSpotCapacity(v int32) *AWS_EMR_InstanceFleetConfig {
	t.TargetSpotCapacity = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EMR_InstanceFleetConfig) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EMR_InstanceFleetConfig) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EMR_InstanceFleetConfig) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EMR_InstanceFleetConfig

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EMR_InstanceFleetConfig) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
