// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_servicecatalogappregistry

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ServiceCatalogAppRegistry_ResourceAssociation)(nil)
	_ cfz.Resource                   = (*AWS_ServiceCatalogAppRegistry_ResourceAssociation)(nil)
)

const (
	// AWS_ServiceCatalogAppRegistry_ResourceAssociation__Type is the CloudFormation type for AWS::ServiceCatalogAppRegistry::ResourceAssociation.
	AWS_ServiceCatalogAppRegistry_ResourceAssociation__Type = "AWS::ServiceCatalogAppRegistry::ResourceAssociation"
)

var (
	// AWS_ServiceCatalogAppRegistry_ResourceAssociation__AttributesMap reports all the CloudFormation attributes for AWS::ServiceCatalogAppRegistry::ResourceAssociation.
	AWS_ServiceCatalogAppRegistry_ResourceAssociation__AttributesMap = struct {
		ApplicationArn string
		ResourceArn    string
	}{
		ApplicationArn: "ApplicationArn",
		ResourceArn:    "ResourceArn",
	}

	// AWS_ServiceCatalogAppRegistry_ResourceAssociation__AttributesSlice reports all the CloudFormation attributes for AWS::ServiceCatalogAppRegistry::ResourceAssociation.
	AWS_ServiceCatalogAppRegistry_ResourceAssociation__AttributesSlice = []string{
		AWS_ServiceCatalogAppRegistry_ResourceAssociation__AttributesMap.ApplicationArn,
		AWS_ServiceCatalogAppRegistry_ResourceAssociation__AttributesMap.ResourceArn,
	}
)

var (
	// AWS_ServiceCatalogAppRegistry_ResourceAssociation__PropertiesMap reports all the CloudFormation properties for AWS::ServiceCatalogAppRegistry::ResourceAssociation.
	AWS_ServiceCatalogAppRegistry_ResourceAssociation__PropertiesMap = struct {
		Application  string
		Resource     string
		ResourceType string
	}{
		Application:  "Application",
		Resource:     "Resource",
		ResourceType: "ResourceType",
	}

	// AWS_ServiceCatalogAppRegistry_ResourceAssociation__PropertiesSlice reports all the CloudFormation properties for AWS::ServiceCatalogAppRegistry::ResourceAssociation.
	AWS_ServiceCatalogAppRegistry_ResourceAssociation__PropertiesSlice = []string{
		AWS_ServiceCatalogAppRegistry_ResourceAssociation__PropertiesMap.Application,
		AWS_ServiceCatalogAppRegistry_ResourceAssociation__PropertiesMap.Resource,
		AWS_ServiceCatalogAppRegistry_ResourceAssociation__PropertiesMap.ResourceType,
	}
)

// AWS_ServiceCatalogAppRegistry_ResourceAssociation is a binding for AWS::ServiceCatalogAppRegistry::ResourceAssociation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html
type AWS_ServiceCatalogAppRegistry_ResourceAssociation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Application is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html#cfn-servicecatalogappregistry-resourceassociation-application
	Application cfz.Expression[string] `json:"Application,omitempty"`

	// Resource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html#cfn-servicecatalogappregistry-resourceassociation-resource
	Resource cfz.Expression[string] `json:"Resource,omitempty"`

	// ResourceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-resourceassociation.html#cfn-servicecatalogappregistry-resourceassociation-resourcetype
	ResourceType cfz.Expression[string] `json:"ResourceType,omitempty"`
}

// New__AWS_ServiceCatalogAppRegistry_ResourceAssociation initializes a new *AWS_ServiceCatalogAppRegistry_ResourceAssociation.
func New__AWS_ServiceCatalogAppRegistry_ResourceAssociation(logicalName string) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	return &AWS_ServiceCatalogAppRegistry_ResourceAssociation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ServiceCatalogAppRegistry_ResourceAssociation) GetType() string {
	return AWS_ServiceCatalogAppRegistry_ResourceAssociation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Set__LogicalName(v string) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Set__RequestedOutputs(v []cfz.Output) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Add__RequestedOutputs(v ...cfz.Output) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Application updates property "Application".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Set__Application(v cfz.Expression[string]) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.Application = v
	return t
}

// SetV__Application updates property "Application".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) SetV__Application(v string) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.Application = cfz.V(v)
	return t
}

// Set__Resource updates property "Resource".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Set__Resource(v cfz.Expression[string]) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.Resource = v
	return t
}

// SetV__Resource updates property "Resource".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) SetV__Resource(v string) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.Resource = cfz.V(v)
	return t
}

// Set__ResourceType updates property "ResourceType".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Set__ResourceType(v cfz.Expression[string]) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.ResourceType = v
	return t
}

// SetV__ResourceType updates property "ResourceType".
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) SetV__ResourceType(v string) *AWS_ServiceCatalogAppRegistry_ResourceAssociation {
	t.ResourceType = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ApplicationArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ApplicationArn
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) GetAtt__ApplicationArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ServiceCatalogAppRegistry_ResourceAssociation__AttributesMap.ApplicationArn))
}

// GetAtt__ResourceArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceArn
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) GetAtt__ResourceArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ServiceCatalogAppRegistry_ResourceAssociation__AttributesMap.ResourceArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ApplicationArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ApplicationArn
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) GetConventionalOutputAtt__ApplicationArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttApplicationArn", t.GetAtt__ApplicationArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceArn
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) GetConventionalOutputAtt__ResourceArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceArn", t.GetAtt__ResourceArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ServiceCatalogAppRegistry_ResourceAssociation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ServiceCatalogAppRegistry_ResourceAssociation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
