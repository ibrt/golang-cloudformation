// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_servicecatalogappregistry

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation)(nil)
	_ cfz.Resource                   = (*AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation)(nil)
)

const (
	// AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__Type is the CloudFormation type for AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation.
	AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__Type = "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation"
)

var (
	// AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__AttributesMap reports all the CloudFormation attributes for AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation.
	AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__AttributesMap = struct {
		ApplicationArn    string
		AttributeGroupArn string
	}{
		ApplicationArn:    "ApplicationArn",
		AttributeGroupArn: "AttributeGroupArn",
	}

	// AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__AttributesSlice reports all the CloudFormation attributes for AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation.
	AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__AttributesSlice = []string{
		AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__AttributesMap.ApplicationArn,
		AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__AttributesMap.AttributeGroupArn,
	}
)

var (
	// AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__PropertiesMap reports all the CloudFormation properties for AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation.
	AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__PropertiesMap = struct {
		Application    string
		AttributeGroup string
	}{
		Application:    "Application",
		AttributeGroup: "AttributeGroup",
	}

	// AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__PropertiesSlice reports all the CloudFormation properties for AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation.
	AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__PropertiesSlice = []string{
		AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__PropertiesMap.Application,
		AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__PropertiesMap.AttributeGroup,
	}
)

// AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation is a binding for AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html
type AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Application is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-application
	Application cfz.Expression[string] `json:"Application,omitempty"`

	// AttributeGroup is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalogappregistry-attributegroupassociation.html#cfn-servicecatalogappregistry-attributegroupassociation-attributegroup
	AttributeGroup cfz.Expression[string] `json:"AttributeGroup,omitempty"`
}

// New__AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation initializes a new *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation.
func New__AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation(logicalName string) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	return &AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) GetType() string {
	return AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Set__LogicalName(v string) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Set__RequestedOutputs(v []cfz.Output) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Add__RequestedOutputs(v ...cfz.Output) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Application updates property "Application".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Set__Application(v cfz.Expression[string]) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.Application = v
	return t
}

// SetV__Application updates property "Application".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) SetV__Application(v string) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.Application = cfz.V(v)
	return t
}

// Set__AttributeGroup updates property "AttributeGroup".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Set__AttributeGroup(v cfz.Expression[string]) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.AttributeGroup = v
	return t
}

// SetV__AttributeGroup updates property "AttributeGroup".
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) SetV__AttributeGroup(v string) *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation {
	t.AttributeGroup = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ApplicationArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ApplicationArn
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) GetAtt__ApplicationArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__AttributesMap.ApplicationArn))
}

// GetAtt__AttributeGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AttributeGroupArn
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) GetAtt__AttributeGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation__AttributesMap.AttributeGroupArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ApplicationArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ApplicationArn
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) GetConventionalOutputAtt__ApplicationArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttApplicationArn", t.GetAtt__ApplicationArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AttributeGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AttributeGroupArn
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) GetConventionalOutputAtt__AttributeGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAttributeGroupArn", t.GetAtt__AttributeGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ServiceCatalogAppRegistry_AttributeGroupAssociation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
