// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_robomaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_RoboMaker_RobotApplication)(nil)
	_ cfz.Resource                   = (*AWS_RoboMaker_RobotApplication)(nil)
)

const (
	// AWS_RoboMaker_RobotApplication__Type is the CloudFormation type for AWS::RoboMaker::RobotApplication.
	AWS_RoboMaker_RobotApplication__Type = "AWS::RoboMaker::RobotApplication"
)

var (
	// AWS_RoboMaker_RobotApplication__AttributesMap reports all the CloudFormation attributes for AWS::RoboMaker::RobotApplication.
	AWS_RoboMaker_RobotApplication__AttributesMap = struct {
		Arn               string
		CurrentRevisionId string
	}{
		Arn:               "Arn",
		CurrentRevisionId: "CurrentRevisionId",
	}

	// AWS_RoboMaker_RobotApplication__AttributesSlice reports all the CloudFormation attributes for AWS::RoboMaker::RobotApplication.
	AWS_RoboMaker_RobotApplication__AttributesSlice = []string{
		AWS_RoboMaker_RobotApplication__AttributesMap.Arn,
		AWS_RoboMaker_RobotApplication__AttributesMap.CurrentRevisionId,
	}
)

var (
	// AWS_RoboMaker_RobotApplication__PropertiesMap reports all the CloudFormation properties for AWS::RoboMaker::RobotApplication.
	AWS_RoboMaker_RobotApplication__PropertiesMap = struct {
		CurrentRevisionId  string
		Environment        string
		Name               string
		RobotSoftwareSuite string
		Sources            string
		Tags               string
	}{
		CurrentRevisionId:  "CurrentRevisionId",
		Environment:        "Environment",
		Name:               "Name",
		RobotSoftwareSuite: "RobotSoftwareSuite",
		Sources:            "Sources",
		Tags:               "Tags",
	}

	// AWS_RoboMaker_RobotApplication__PropertiesSlice reports all the CloudFormation properties for AWS::RoboMaker::RobotApplication.
	AWS_RoboMaker_RobotApplication__PropertiesSlice = []string{
		AWS_RoboMaker_RobotApplication__PropertiesMap.CurrentRevisionId,
		AWS_RoboMaker_RobotApplication__PropertiesMap.Environment,
		AWS_RoboMaker_RobotApplication__PropertiesMap.Name,
		AWS_RoboMaker_RobotApplication__PropertiesMap.RobotSoftwareSuite,
		AWS_RoboMaker_RobotApplication__PropertiesMap.Sources,
		AWS_RoboMaker_RobotApplication__PropertiesMap.Tags,
	}
)

// AWS_RoboMaker_RobotApplication is a binding for AWS::RoboMaker::RobotApplication.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html
type AWS_RoboMaker_RobotApplication struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CurrentRevisionId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-currentrevisionid
	CurrentRevisionId cfz.Expression[string] `json:"CurrentRevisionId,omitempty"`

	// Environment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-environment
	Environment cfz.Expression[string] `json:"Environment,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RobotSoftwareSuite is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-robotsoftwaresuite
	RobotSoftwareSuite cfz.Expression[AWS_RoboMaker_RobotApplication_RobotSoftwareSuite] `json:"RobotSoftwareSuite,omitempty"`

	// Sources is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-sources
	Sources cfz.ExpressionSlice[AWS_RoboMaker_RobotApplication_SourceConfig] `json:"Sources,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-robomaker-robotapplication.html#cfn-robomaker-robotapplication-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`
}

// New__AWS_RoboMaker_RobotApplication initializes a new *AWS_RoboMaker_RobotApplication.
func New__AWS_RoboMaker_RobotApplication(logicalName string) *AWS_RoboMaker_RobotApplication {
	return &AWS_RoboMaker_RobotApplication{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_RoboMaker_RobotApplication) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_RoboMaker_RobotApplication) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_RoboMaker_RobotApplication) GetType() string {
	return AWS_RoboMaker_RobotApplication__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_RoboMaker_RobotApplication) Set__LogicalName(v string) *AWS_RoboMaker_RobotApplication {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_RoboMaker_RobotApplication) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_RoboMaker_RobotApplication {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_RoboMaker_RobotApplication) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_RoboMaker_RobotApplication {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_RoboMaker_RobotApplication) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_RoboMaker_RobotApplication {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_RoboMaker_RobotApplication) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_RoboMaker_RobotApplication {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_RoboMaker_RobotApplication) Set__RequestedOutputs(v []cfz.Output) *AWS_RoboMaker_RobotApplication {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_RoboMaker_RobotApplication) Add__RequestedOutputs(v ...cfz.Output) *AWS_RoboMaker_RobotApplication {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CurrentRevisionId updates property "CurrentRevisionId".
func (t *AWS_RoboMaker_RobotApplication) Set__CurrentRevisionId(v cfz.Expression[string]) *AWS_RoboMaker_RobotApplication {
	t.CurrentRevisionId = v
	return t
}

// SetV__CurrentRevisionId updates property "CurrentRevisionId".
func (t *AWS_RoboMaker_RobotApplication) SetV__CurrentRevisionId(v string) *AWS_RoboMaker_RobotApplication {
	t.CurrentRevisionId = cfz.V(v)
	return t
}

// Set__Environment updates property "Environment".
func (t *AWS_RoboMaker_RobotApplication) Set__Environment(v cfz.Expression[string]) *AWS_RoboMaker_RobotApplication {
	t.Environment = v
	return t
}

// SetV__Environment updates property "Environment".
func (t *AWS_RoboMaker_RobotApplication) SetV__Environment(v string) *AWS_RoboMaker_RobotApplication {
	t.Environment = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_RoboMaker_RobotApplication) Set__Name(v cfz.Expression[string]) *AWS_RoboMaker_RobotApplication {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_RoboMaker_RobotApplication) SetV__Name(v string) *AWS_RoboMaker_RobotApplication {
	t.Name = cfz.V(v)
	return t
}

// Set__RobotSoftwareSuite updates property "RobotSoftwareSuite".
func (t *AWS_RoboMaker_RobotApplication) Set__RobotSoftwareSuite(v cfz.Expression[AWS_RoboMaker_RobotApplication_RobotSoftwareSuite]) *AWS_RoboMaker_RobotApplication {
	t.RobotSoftwareSuite = v
	return t
}

// SetV__RobotSoftwareSuite updates property "RobotSoftwareSuite".
func (t *AWS_RoboMaker_RobotApplication) SetV__RobotSoftwareSuite(v AWS_RoboMaker_RobotApplication_RobotSoftwareSuite) *AWS_RoboMaker_RobotApplication {
	t.RobotSoftwareSuite = cfz.V(v)
	return t
}

// Set__Sources updates property "Sources".
func (t *AWS_RoboMaker_RobotApplication) Set__Sources(v cfz.ExpressionSlice[AWS_RoboMaker_RobotApplication_SourceConfig]) *AWS_RoboMaker_RobotApplication {
	t.Sources = v
	return t
}

// SetS__Sources updates property "Sources".
func (t *AWS_RoboMaker_RobotApplication) SetS__Sources(v ...cfz.Expression[AWS_RoboMaker_RobotApplication_SourceConfig]) *AWS_RoboMaker_RobotApplication {
	t.Sources = cfz.S(v...)
	return t
}

// SetSV__Sources updates property "Sources".
func (t *AWS_RoboMaker_RobotApplication) SetSV__Sources(v ...AWS_RoboMaker_RobotApplication_SourceConfig) *AWS_RoboMaker_RobotApplication {
	t.Sources = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_RoboMaker_RobotApplication) Set__Tags(v cfz.ExpressionMap[string]) *AWS_RoboMaker_RobotApplication {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_RoboMaker_RobotApplication) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_RoboMaker_RobotApplication {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_RoboMaker_RobotApplication) SetMV__Tags(v ...map[string]string) *AWS_RoboMaker_RobotApplication {
	t.Tags = cfz.MV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_RoboMaker_RobotApplication) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_RoboMaker_RobotApplication) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RoboMaker_RobotApplication__AttributesMap.Arn))
}

// GetAtt__CurrentRevisionId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CurrentRevisionId
func (t *AWS_RoboMaker_RobotApplication) GetAtt__CurrentRevisionId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RoboMaker_RobotApplication__AttributesMap.CurrentRevisionId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_RoboMaker_RobotApplication) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_RoboMaker_RobotApplication) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CurrentRevisionId returns a conventionally configured output for an attribute of this resource.
// Attribute: CurrentRevisionId
func (t *AWS_RoboMaker_RobotApplication) GetConventionalOutputAtt__CurrentRevisionId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCurrentRevisionId", t.GetAtt__CurrentRevisionId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_RoboMaker_RobotApplication) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_RoboMaker_RobotApplication

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_RoboMaker_RobotApplication) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
