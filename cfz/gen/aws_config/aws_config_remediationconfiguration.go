// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_config

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Config_RemediationConfiguration)(nil)
	_ cfz.Resource                   = (*AWS_Config_RemediationConfiguration)(nil)
)

const (
	// AWS_Config_RemediationConfiguration__Type is the CloudFormation type for AWS::Config::RemediationConfiguration.
	AWS_Config_RemediationConfiguration__Type = "AWS::Config::RemediationConfiguration"
)

var (
	// AWS_Config_RemediationConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::Config::RemediationConfiguration.
	AWS_Config_RemediationConfiguration__PropertiesMap = struct {
		Automatic                string
		ConfigRuleName           string
		ExecutionControls        string
		MaximumAutomaticAttempts string
		Parameters               string
		ResourceType             string
		RetryAttemptSeconds      string
		TargetId                 string
		TargetType               string
		TargetVersion            string
	}{
		Automatic:                "Automatic",
		ConfigRuleName:           "ConfigRuleName",
		ExecutionControls:        "ExecutionControls",
		MaximumAutomaticAttempts: "MaximumAutomaticAttempts",
		Parameters:               "Parameters",
		ResourceType:             "ResourceType",
		RetryAttemptSeconds:      "RetryAttemptSeconds",
		TargetId:                 "TargetId",
		TargetType:               "TargetType",
		TargetVersion:            "TargetVersion",
	}

	// AWS_Config_RemediationConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::Config::RemediationConfiguration.
	AWS_Config_RemediationConfiguration__PropertiesSlice = []string{
		AWS_Config_RemediationConfiguration__PropertiesMap.Automatic,
		AWS_Config_RemediationConfiguration__PropertiesMap.ConfigRuleName,
		AWS_Config_RemediationConfiguration__PropertiesMap.ExecutionControls,
		AWS_Config_RemediationConfiguration__PropertiesMap.MaximumAutomaticAttempts,
		AWS_Config_RemediationConfiguration__PropertiesMap.Parameters,
		AWS_Config_RemediationConfiguration__PropertiesMap.ResourceType,
		AWS_Config_RemediationConfiguration__PropertiesMap.RetryAttemptSeconds,
		AWS_Config_RemediationConfiguration__PropertiesMap.TargetId,
		AWS_Config_RemediationConfiguration__PropertiesMap.TargetType,
		AWS_Config_RemediationConfiguration__PropertiesMap.TargetVersion,
	}
)

// AWS_Config_RemediationConfiguration is a binding for AWS::Config::RemediationConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html
type AWS_Config_RemediationConfiguration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Automatic is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-automatic
	Automatic cfz.Expression[bool] `json:"Automatic,omitempty"`

	// ConfigRuleName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-configrulename
	ConfigRuleName cfz.Expression[string] `json:"ConfigRuleName,omitempty"`

	// ExecutionControls is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-executioncontrols
	ExecutionControls cfz.Expression[AWS_Config_RemediationConfiguration_ExecutionControls] `json:"ExecutionControls,omitempty"`

	// MaximumAutomaticAttempts is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-maximumautomaticattempts
	MaximumAutomaticAttempts cfz.Expression[int32] `json:"MaximumAutomaticAttempts,omitempty"`

	// Parameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-parameters
	Parameters cfz.Expression[json.RawMessage] `json:"Parameters,omitempty"`

	// ResourceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-resourcetype
	ResourceType cfz.Expression[string] `json:"ResourceType,omitempty"`

	// RetryAttemptSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-retryattemptseconds
	RetryAttemptSeconds cfz.Expression[int32] `json:"RetryAttemptSeconds,omitempty"`

	// TargetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targetid
	TargetId cfz.Expression[string] `json:"TargetId,omitempty"`

	// TargetType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targettype
	TargetType cfz.Expression[string] `json:"TargetType,omitempty"`

	// TargetVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-remediationconfiguration.html#cfn-config-remediationconfiguration-targetversion
	TargetVersion cfz.Expression[string] `json:"TargetVersion,omitempty"`
}

// New__AWS_Config_RemediationConfiguration initializes a new *AWS_Config_RemediationConfiguration.
func New__AWS_Config_RemediationConfiguration(logicalName string) *AWS_Config_RemediationConfiguration {
	return &AWS_Config_RemediationConfiguration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Config_RemediationConfiguration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Config_RemediationConfiguration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Config_RemediationConfiguration) GetType() string {
	return AWS_Config_RemediationConfiguration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Config_RemediationConfiguration) Set__LogicalName(v string) *AWS_Config_RemediationConfiguration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Config_RemediationConfiguration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Config_RemediationConfiguration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Config_RemediationConfiguration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Config_RemediationConfiguration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Config_RemediationConfiguration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Config_RemediationConfiguration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Config_RemediationConfiguration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Config_RemediationConfiguration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Config_RemediationConfiguration) Set__RequestedOutputs(v []cfz.Output) *AWS_Config_RemediationConfiguration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Config_RemediationConfiguration) Add__RequestedOutputs(v ...cfz.Output) *AWS_Config_RemediationConfiguration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Automatic updates property "Automatic".
func (t *AWS_Config_RemediationConfiguration) Set__Automatic(v cfz.Expression[bool]) *AWS_Config_RemediationConfiguration {
	t.Automatic = v
	return t
}

// SetV__Automatic updates property "Automatic".
func (t *AWS_Config_RemediationConfiguration) SetV__Automatic(v bool) *AWS_Config_RemediationConfiguration {
	t.Automatic = cfz.V(v)
	return t
}

// Set__ConfigRuleName updates property "ConfigRuleName".
func (t *AWS_Config_RemediationConfiguration) Set__ConfigRuleName(v cfz.Expression[string]) *AWS_Config_RemediationConfiguration {
	t.ConfigRuleName = v
	return t
}

// SetV__ConfigRuleName updates property "ConfigRuleName".
func (t *AWS_Config_RemediationConfiguration) SetV__ConfigRuleName(v string) *AWS_Config_RemediationConfiguration {
	t.ConfigRuleName = cfz.V(v)
	return t
}

// Set__ExecutionControls updates property "ExecutionControls".
func (t *AWS_Config_RemediationConfiguration) Set__ExecutionControls(v cfz.Expression[AWS_Config_RemediationConfiguration_ExecutionControls]) *AWS_Config_RemediationConfiguration {
	t.ExecutionControls = v
	return t
}

// SetV__ExecutionControls updates property "ExecutionControls".
func (t *AWS_Config_RemediationConfiguration) SetV__ExecutionControls(v AWS_Config_RemediationConfiguration_ExecutionControls) *AWS_Config_RemediationConfiguration {
	t.ExecutionControls = cfz.V(v)
	return t
}

// Set__MaximumAutomaticAttempts updates property "MaximumAutomaticAttempts".
func (t *AWS_Config_RemediationConfiguration) Set__MaximumAutomaticAttempts(v cfz.Expression[int32]) *AWS_Config_RemediationConfiguration {
	t.MaximumAutomaticAttempts = v
	return t
}

// SetV__MaximumAutomaticAttempts updates property "MaximumAutomaticAttempts".
func (t *AWS_Config_RemediationConfiguration) SetV__MaximumAutomaticAttempts(v int32) *AWS_Config_RemediationConfiguration {
	t.MaximumAutomaticAttempts = cfz.V(v)
	return t
}

// Set__Parameters updates property "Parameters".
func (t *AWS_Config_RemediationConfiguration) Set__Parameters(v cfz.Expression[json.RawMessage]) *AWS_Config_RemediationConfiguration {
	t.Parameters = v
	return t
}

// SetV__Parameters updates property "Parameters".
func (t *AWS_Config_RemediationConfiguration) SetV__Parameters(v json.RawMessage) *AWS_Config_RemediationConfiguration {
	t.Parameters = cfz.V(v)
	return t
}

// Set__ResourceType updates property "ResourceType".
func (t *AWS_Config_RemediationConfiguration) Set__ResourceType(v cfz.Expression[string]) *AWS_Config_RemediationConfiguration {
	t.ResourceType = v
	return t
}

// SetV__ResourceType updates property "ResourceType".
func (t *AWS_Config_RemediationConfiguration) SetV__ResourceType(v string) *AWS_Config_RemediationConfiguration {
	t.ResourceType = cfz.V(v)
	return t
}

// Set__RetryAttemptSeconds updates property "RetryAttemptSeconds".
func (t *AWS_Config_RemediationConfiguration) Set__RetryAttemptSeconds(v cfz.Expression[int32]) *AWS_Config_RemediationConfiguration {
	t.RetryAttemptSeconds = v
	return t
}

// SetV__RetryAttemptSeconds updates property "RetryAttemptSeconds".
func (t *AWS_Config_RemediationConfiguration) SetV__RetryAttemptSeconds(v int32) *AWS_Config_RemediationConfiguration {
	t.RetryAttemptSeconds = cfz.V(v)
	return t
}

// Set__TargetId updates property "TargetId".
func (t *AWS_Config_RemediationConfiguration) Set__TargetId(v cfz.Expression[string]) *AWS_Config_RemediationConfiguration {
	t.TargetId = v
	return t
}

// SetV__TargetId updates property "TargetId".
func (t *AWS_Config_RemediationConfiguration) SetV__TargetId(v string) *AWS_Config_RemediationConfiguration {
	t.TargetId = cfz.V(v)
	return t
}

// Set__TargetType updates property "TargetType".
func (t *AWS_Config_RemediationConfiguration) Set__TargetType(v cfz.Expression[string]) *AWS_Config_RemediationConfiguration {
	t.TargetType = v
	return t
}

// SetV__TargetType updates property "TargetType".
func (t *AWS_Config_RemediationConfiguration) SetV__TargetType(v string) *AWS_Config_RemediationConfiguration {
	t.TargetType = cfz.V(v)
	return t
}

// Set__TargetVersion updates property "TargetVersion".
func (t *AWS_Config_RemediationConfiguration) Set__TargetVersion(v cfz.Expression[string]) *AWS_Config_RemediationConfiguration {
	t.TargetVersion = v
	return t
}

// SetV__TargetVersion updates property "TargetVersion".
func (t *AWS_Config_RemediationConfiguration) SetV__TargetVersion(v string) *AWS_Config_RemediationConfiguration {
	t.TargetVersion = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Config_RemediationConfiguration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Config_RemediationConfiguration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Config_RemediationConfiguration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Config_RemediationConfiguration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Config_RemediationConfiguration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
