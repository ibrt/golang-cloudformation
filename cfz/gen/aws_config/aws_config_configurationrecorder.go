// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_config

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Config_ConfigurationRecorder)(nil)
	_ cfz.Resource                   = (*AWS_Config_ConfigurationRecorder)(nil)
)

const (
	// AWS_Config_ConfigurationRecorder__Type is the CloudFormation type for AWS::Config::ConfigurationRecorder.
	AWS_Config_ConfigurationRecorder__Type = "AWS::Config::ConfigurationRecorder"
)

var (
	// AWS_Config_ConfigurationRecorder__PropertiesMap reports all the CloudFormation properties for AWS::Config::ConfigurationRecorder.
	AWS_Config_ConfigurationRecorder__PropertiesMap = struct {
		Name           string
		RecordingGroup string
		RecordingMode  string
		RoleARN        string
	}{
		Name:           "Name",
		RecordingGroup: "RecordingGroup",
		RecordingMode:  "RecordingMode",
		RoleARN:        "RoleARN",
	}

	// AWS_Config_ConfigurationRecorder__PropertiesSlice reports all the CloudFormation properties for AWS::Config::ConfigurationRecorder.
	AWS_Config_ConfigurationRecorder__PropertiesSlice = []string{
		AWS_Config_ConfigurationRecorder__PropertiesMap.Name,
		AWS_Config_ConfigurationRecorder__PropertiesMap.RecordingGroup,
		AWS_Config_ConfigurationRecorder__PropertiesMap.RecordingMode,
		AWS_Config_ConfigurationRecorder__PropertiesMap.RoleARN,
	}
)

// AWS_Config_ConfigurationRecorder is a binding for AWS::Config::ConfigurationRecorder.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html
type AWS_Config_ConfigurationRecorder struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RecordingGroup is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordinggroup
	RecordingGroup cfz.Expression[AWS_Config_ConfigurationRecorder_RecordingGroup] `json:"RecordingGroup,omitempty"`

	// RecordingMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordingmode
	RecordingMode cfz.Expression[AWS_Config_ConfigurationRecorder_RecordingMode] `json:"RecordingMode,omitempty"`

	// RoleARN is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-rolearn
	RoleARN cfz.Expression[string] `json:"RoleARN,omitempty"`
}

// New__AWS_Config_ConfigurationRecorder initializes a new *AWS_Config_ConfigurationRecorder.
func New__AWS_Config_ConfigurationRecorder(logicalName string) *AWS_Config_ConfigurationRecorder {
	return &AWS_Config_ConfigurationRecorder{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Config_ConfigurationRecorder) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Config_ConfigurationRecorder) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Config_ConfigurationRecorder) GetType() string {
	return AWS_Config_ConfigurationRecorder__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Config_ConfigurationRecorder) Set__LogicalName(v string) *AWS_Config_ConfigurationRecorder {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Config_ConfigurationRecorder) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Config_ConfigurationRecorder {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Config_ConfigurationRecorder) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Config_ConfigurationRecorder {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Config_ConfigurationRecorder) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Config_ConfigurationRecorder {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Config_ConfigurationRecorder) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Config_ConfigurationRecorder {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Config_ConfigurationRecorder) Set__RequestedOutputs(v []cfz.Output) *AWS_Config_ConfigurationRecorder {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Config_ConfigurationRecorder) Add__RequestedOutputs(v ...cfz.Output) *AWS_Config_ConfigurationRecorder {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Config_ConfigurationRecorder) Set__Name(v cfz.Expression[string]) *AWS_Config_ConfigurationRecorder {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Config_ConfigurationRecorder) SetV__Name(v string) *AWS_Config_ConfigurationRecorder {
	t.Name = cfz.V(v)
	return t
}

// Set__RecordingGroup updates property "RecordingGroup".
func (t *AWS_Config_ConfigurationRecorder) Set__RecordingGroup(v cfz.Expression[AWS_Config_ConfigurationRecorder_RecordingGroup]) *AWS_Config_ConfigurationRecorder {
	t.RecordingGroup = v
	return t
}

// SetV__RecordingGroup updates property "RecordingGroup".
func (t *AWS_Config_ConfigurationRecorder) SetV__RecordingGroup(v AWS_Config_ConfigurationRecorder_RecordingGroup) *AWS_Config_ConfigurationRecorder {
	t.RecordingGroup = cfz.V(v)
	return t
}

// Set__RecordingMode updates property "RecordingMode".
func (t *AWS_Config_ConfigurationRecorder) Set__RecordingMode(v cfz.Expression[AWS_Config_ConfigurationRecorder_RecordingMode]) *AWS_Config_ConfigurationRecorder {
	t.RecordingMode = v
	return t
}

// SetV__RecordingMode updates property "RecordingMode".
func (t *AWS_Config_ConfigurationRecorder) SetV__RecordingMode(v AWS_Config_ConfigurationRecorder_RecordingMode) *AWS_Config_ConfigurationRecorder {
	t.RecordingMode = cfz.V(v)
	return t
}

// Set__RoleARN updates property "RoleARN".
func (t *AWS_Config_ConfigurationRecorder) Set__RoleARN(v cfz.Expression[string]) *AWS_Config_ConfigurationRecorder {
	t.RoleARN = v
	return t
}

// SetV__RoleARN updates property "RoleARN".
func (t *AWS_Config_ConfigurationRecorder) SetV__RoleARN(v string) *AWS_Config_ConfigurationRecorder {
	t.RoleARN = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Config_ConfigurationRecorder) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Config_ConfigurationRecorder) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Config_ConfigurationRecorder) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Config_ConfigurationRecorder

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Config_ConfigurationRecorder) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
