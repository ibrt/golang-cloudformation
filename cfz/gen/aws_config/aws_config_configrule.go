// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_config

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Config_ConfigRule)(nil)
	_ cfz.Resource                   = (*AWS_Config_ConfigRule)(nil)
)

const (
	// AWS_Config_ConfigRule__Type is the CloudFormation type for AWS::Config::ConfigRule.
	AWS_Config_ConfigRule__Type = "AWS::Config::ConfigRule"
)

var (
	// AWS_Config_ConfigRule__AttributesMap reports all the CloudFormation attributes for AWS::Config::ConfigRule.
	AWS_Config_ConfigRule__AttributesMap = struct {
		Arn             string
		Compliance_Type string
		ConfigRuleId    string
	}{
		Arn:             "Arn",
		Compliance_Type: "Compliance.Type",
		ConfigRuleId:    "ConfigRuleId",
	}

	// AWS_Config_ConfigRule__AttributesSlice reports all the CloudFormation attributes for AWS::Config::ConfigRule.
	AWS_Config_ConfigRule__AttributesSlice = []string{
		AWS_Config_ConfigRule__AttributesMap.Arn,
		AWS_Config_ConfigRule__AttributesMap.Compliance_Type,
		AWS_Config_ConfigRule__AttributesMap.ConfigRuleId,
	}
)

var (
	// AWS_Config_ConfigRule__PropertiesMap reports all the CloudFormation properties for AWS::Config::ConfigRule.
	AWS_Config_ConfigRule__PropertiesMap = struct {
		Compliance                string
		ConfigRuleName            string
		Description               string
		EvaluationModes           string
		InputParameters           string
		MaximumExecutionFrequency string
		Scope                     string
		Source                    string
	}{
		Compliance:                "Compliance",
		ConfigRuleName:            "ConfigRuleName",
		Description:               "Description",
		EvaluationModes:           "EvaluationModes",
		InputParameters:           "InputParameters",
		MaximumExecutionFrequency: "MaximumExecutionFrequency",
		Scope:                     "Scope",
		Source:                    "Source",
	}

	// AWS_Config_ConfigRule__PropertiesSlice reports all the CloudFormation properties for AWS::Config::ConfigRule.
	AWS_Config_ConfigRule__PropertiesSlice = []string{
		AWS_Config_ConfigRule__PropertiesMap.Compliance,
		AWS_Config_ConfigRule__PropertiesMap.ConfigRuleName,
		AWS_Config_ConfigRule__PropertiesMap.Description,
		AWS_Config_ConfigRule__PropertiesMap.EvaluationModes,
		AWS_Config_ConfigRule__PropertiesMap.InputParameters,
		AWS_Config_ConfigRule__PropertiesMap.MaximumExecutionFrequency,
		AWS_Config_ConfigRule__PropertiesMap.Scope,
		AWS_Config_ConfigRule__PropertiesMap.Source,
	}
)

// AWS_Config_ConfigRule is a binding for AWS::Config::ConfigRule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html
type AWS_Config_ConfigRule struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Compliance is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-compliance
	Compliance cfz.Expression[AWS_Config_ConfigRule_Compliance] `json:"Compliance,omitempty"`

	// ConfigRuleName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-configrulename
	ConfigRuleName cfz.Expression[string] `json:"ConfigRuleName,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// EvaluationModes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-evaluationmodes
	EvaluationModes cfz.ExpressionSlice[AWS_Config_ConfigRule_EvaluationModeConfiguration] `json:"EvaluationModes,omitempty"`

	// InputParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-inputparameters
	InputParameters cfz.Expression[json.RawMessage] `json:"InputParameters,omitempty"`

	// MaximumExecutionFrequency is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-maximumexecutionfrequency
	MaximumExecutionFrequency cfz.Expression[string] `json:"MaximumExecutionFrequency,omitempty"`

	// Scope is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-scope
	Scope cfz.Expression[AWS_Config_ConfigRule_Scope] `json:"Scope,omitempty"`

	// Source is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configrule.html#cfn-config-configrule-source
	Source cfz.Expression[AWS_Config_ConfigRule_Source] `json:"Source,omitempty"`
}

// New__AWS_Config_ConfigRule initializes a new *AWS_Config_ConfigRule.
func New__AWS_Config_ConfigRule(logicalName string) *AWS_Config_ConfigRule {
	return &AWS_Config_ConfigRule{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Config_ConfigRule) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Config_ConfigRule) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Config_ConfigRule) GetType() string {
	return AWS_Config_ConfigRule__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Config_ConfigRule) Set__LogicalName(v string) *AWS_Config_ConfigRule {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Config_ConfigRule) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Config_ConfigRule {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Config_ConfigRule) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Config_ConfigRule {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Config_ConfigRule) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Config_ConfigRule {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Config_ConfigRule) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Config_ConfigRule {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Config_ConfigRule) Set__RequestedOutputs(v []cfz.Output) *AWS_Config_ConfigRule {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Config_ConfigRule) Add__RequestedOutputs(v ...cfz.Output) *AWS_Config_ConfigRule {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Compliance updates property "Compliance".
func (t *AWS_Config_ConfigRule) Set__Compliance(v cfz.Expression[AWS_Config_ConfigRule_Compliance]) *AWS_Config_ConfigRule {
	t.Compliance = v
	return t
}

// SetV__Compliance updates property "Compliance".
func (t *AWS_Config_ConfigRule) SetV__Compliance(v AWS_Config_ConfigRule_Compliance) *AWS_Config_ConfigRule {
	t.Compliance = cfz.V(v)
	return t
}

// Set__ConfigRuleName updates property "ConfigRuleName".
func (t *AWS_Config_ConfigRule) Set__ConfigRuleName(v cfz.Expression[string]) *AWS_Config_ConfigRule {
	t.ConfigRuleName = v
	return t
}

// SetV__ConfigRuleName updates property "ConfigRuleName".
func (t *AWS_Config_ConfigRule) SetV__ConfigRuleName(v string) *AWS_Config_ConfigRule {
	t.ConfigRuleName = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Config_ConfigRule) Set__Description(v cfz.Expression[string]) *AWS_Config_ConfigRule {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Config_ConfigRule) SetV__Description(v string) *AWS_Config_ConfigRule {
	t.Description = cfz.V(v)
	return t
}

// Set__EvaluationModes updates property "EvaluationModes".
func (t *AWS_Config_ConfigRule) Set__EvaluationModes(v cfz.ExpressionSlice[AWS_Config_ConfigRule_EvaluationModeConfiguration]) *AWS_Config_ConfigRule {
	t.EvaluationModes = v
	return t
}

// SetS__EvaluationModes updates property "EvaluationModes".
func (t *AWS_Config_ConfigRule) SetS__EvaluationModes(v ...cfz.Expression[AWS_Config_ConfigRule_EvaluationModeConfiguration]) *AWS_Config_ConfigRule {
	t.EvaluationModes = cfz.S(v...)
	return t
}

// SetSV__EvaluationModes updates property "EvaluationModes".
func (t *AWS_Config_ConfigRule) SetSV__EvaluationModes(v ...AWS_Config_ConfigRule_EvaluationModeConfiguration) *AWS_Config_ConfigRule {
	t.EvaluationModes = cfz.SV(v...)
	return t
}

// Set__InputParameters updates property "InputParameters".
func (t *AWS_Config_ConfigRule) Set__InputParameters(v cfz.Expression[json.RawMessage]) *AWS_Config_ConfigRule {
	t.InputParameters = v
	return t
}

// SetV__InputParameters updates property "InputParameters".
func (t *AWS_Config_ConfigRule) SetV__InputParameters(v json.RawMessage) *AWS_Config_ConfigRule {
	t.InputParameters = cfz.V(v)
	return t
}

// Set__MaximumExecutionFrequency updates property "MaximumExecutionFrequency".
func (t *AWS_Config_ConfigRule) Set__MaximumExecutionFrequency(v cfz.Expression[string]) *AWS_Config_ConfigRule {
	t.MaximumExecutionFrequency = v
	return t
}

// SetV__MaximumExecutionFrequency updates property "MaximumExecutionFrequency".
func (t *AWS_Config_ConfigRule) SetV__MaximumExecutionFrequency(v string) *AWS_Config_ConfigRule {
	t.MaximumExecutionFrequency = cfz.V(v)
	return t
}

// Set__Scope updates property "Scope".
func (t *AWS_Config_ConfigRule) Set__Scope(v cfz.Expression[AWS_Config_ConfigRule_Scope]) *AWS_Config_ConfigRule {
	t.Scope = v
	return t
}

// SetV__Scope updates property "Scope".
func (t *AWS_Config_ConfigRule) SetV__Scope(v AWS_Config_ConfigRule_Scope) *AWS_Config_ConfigRule {
	t.Scope = cfz.V(v)
	return t
}

// Set__Source updates property "Source".
func (t *AWS_Config_ConfigRule) Set__Source(v cfz.Expression[AWS_Config_ConfigRule_Source]) *AWS_Config_ConfigRule {
	t.Source = v
	return t
}

// SetV__Source updates property "Source".
func (t *AWS_Config_ConfigRule) SetV__Source(v AWS_Config_ConfigRule_Source) *AWS_Config_ConfigRule {
	t.Source = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Config_ConfigRule) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Config_ConfigRule) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Config_ConfigRule__AttributesMap.Arn))
}

// GetAtt__Compliance_Type returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Compliance.Type
func (t *AWS_Config_ConfigRule) GetAtt__Compliance_Type() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Config_ConfigRule__AttributesMap.Compliance_Type))
}

// GetAtt__ConfigRuleId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConfigRuleId
func (t *AWS_Config_ConfigRule) GetAtt__ConfigRuleId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Config_ConfigRule__AttributesMap.ConfigRuleId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Config_ConfigRule) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Config_ConfigRule) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Compliance_Type returns a conventionally configured output for an attribute of this resource.
// Attribute: Compliance.Type
func (t *AWS_Config_ConfigRule) GetConventionalOutputAtt__Compliance_Type(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttComplianceType", t.GetAtt__Compliance_Type())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConfigRuleId returns a conventionally configured output for an attribute of this resource.
// Attribute: ConfigRuleId
func (t *AWS_Config_ConfigRule) GetConventionalOutputAtt__ConfigRuleId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConfigRuleId", t.GetAtt__ConfigRuleId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Config_ConfigRule) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Config_ConfigRule

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Config_ConfigRule) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
