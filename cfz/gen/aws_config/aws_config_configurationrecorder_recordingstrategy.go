// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_config

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Config_ConfigurationRecorder_RecordingStrategy__Type is the CloudFormation type for AWS::Config::ConfigurationRecorder.RecordingStrategy.
	AWS_Config_ConfigurationRecorder_RecordingStrategy__Type = "AWS::Config::ConfigurationRecorder.RecordingStrategy"
)

var (
	// AWS_Config_ConfigurationRecorder_RecordingStrategy__PropertiesMap reports all the CloudFormation properties for AWS::Config::ConfigurationRecorder.RecordingStrategy.
	AWS_Config_ConfigurationRecorder_RecordingStrategy__PropertiesMap = struct {
		UseOnly string
	}{
		UseOnly: "UseOnly",
	}

	// AWS_Config_ConfigurationRecorder_RecordingStrategy__PropertiesSlice reports all the CloudFormation properties for AWS::Config::ConfigurationRecorder.RecordingStrategy.
	AWS_Config_ConfigurationRecorder_RecordingStrategy__PropertiesSlice = []string{
		AWS_Config_ConfigurationRecorder_RecordingStrategy__PropertiesMap.UseOnly,
	}
)

// AWS_Config_ConfigurationRecorder_RecordingStrategy is a binding for AWS::Config::ConfigurationRecorder.RecordingStrategy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordingstrategy.html
type AWS_Config_ConfigurationRecorder_RecordingStrategy struct {
	// UseOnly is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-config-configurationrecorder-recordingstrategy.html#cfn-config-configurationrecorder-recordingstrategy-useonly
	UseOnly cfz.Expression[string] `json:"UseOnly,omitempty"`
}

// New__AWS_Config_ConfigurationRecorder_RecordingStrategy initializes a new AWS_Config_ConfigurationRecorder_RecordingStrategy.
func New__AWS_Config_ConfigurationRecorder_RecordingStrategy() AWS_Config_ConfigurationRecorder_RecordingStrategy {
	return AWS_Config_ConfigurationRecorder_RecordingStrategy{}
}

// GetType returns the CloudFormation type.
func (AWS_Config_ConfigurationRecorder_RecordingStrategy) GetType() string {
	return AWS_Config_ConfigurationRecorder_RecordingStrategy__Type
}

// Set__UseOnly updates property "UseOnly".
func (t AWS_Config_ConfigurationRecorder_RecordingStrategy) Set__UseOnly(v cfz.Expression[string]) AWS_Config_ConfigurationRecorder_RecordingStrategy {
	t.UseOnly = v
	return t
}

// SetV__UseOnly updates property "UseOnly".
func (t AWS_Config_ConfigurationRecorder_RecordingStrategy) SetV__UseOnly(v string) AWS_Config_ConfigurationRecorder_RecordingStrategy {
	t.UseOnly = cfz.V(v)
	return t
}
