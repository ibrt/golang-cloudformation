// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_config

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Config_ConformancePack)(nil)
	_ cfz.Resource                   = (*AWS_Config_ConformancePack)(nil)
)

const (
	// AWS_Config_ConformancePack__Type is the CloudFormation type for AWS::Config::ConformancePack.
	AWS_Config_ConformancePack__Type = "AWS::Config::ConformancePack"
)

var (
	// AWS_Config_ConformancePack__PropertiesMap reports all the CloudFormation properties for AWS::Config::ConformancePack.
	AWS_Config_ConformancePack__PropertiesMap = struct {
		ConformancePackInputParameters string
		ConformancePackName            string
		DeliveryS3Bucket               string
		DeliveryS3KeyPrefix            string
		TemplateBody                   string
		TemplateS3Uri                  string
		TemplateSSMDocumentDetails     string
	}{
		ConformancePackInputParameters: "ConformancePackInputParameters",
		ConformancePackName:            "ConformancePackName",
		DeliveryS3Bucket:               "DeliveryS3Bucket",
		DeliveryS3KeyPrefix:            "DeliveryS3KeyPrefix",
		TemplateBody:                   "TemplateBody",
		TemplateS3Uri:                  "TemplateS3Uri",
		TemplateSSMDocumentDetails:     "TemplateSSMDocumentDetails",
	}

	// AWS_Config_ConformancePack__PropertiesSlice reports all the CloudFormation properties for AWS::Config::ConformancePack.
	AWS_Config_ConformancePack__PropertiesSlice = []string{
		AWS_Config_ConformancePack__PropertiesMap.ConformancePackInputParameters,
		AWS_Config_ConformancePack__PropertiesMap.ConformancePackName,
		AWS_Config_ConformancePack__PropertiesMap.DeliveryS3Bucket,
		AWS_Config_ConformancePack__PropertiesMap.DeliveryS3KeyPrefix,
		AWS_Config_ConformancePack__PropertiesMap.TemplateBody,
		AWS_Config_ConformancePack__PropertiesMap.TemplateS3Uri,
		AWS_Config_ConformancePack__PropertiesMap.TemplateSSMDocumentDetails,
	}
)

// AWS_Config_ConformancePack is a binding for AWS::Config::ConformancePack.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html
type AWS_Config_ConformancePack struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ConformancePackInputParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-conformancepackinputparameters
	ConformancePackInputParameters cfz.ExpressionSlice[AWS_Config_ConformancePack_ConformancePackInputParameter] `json:"ConformancePackInputParameters,omitempty"`

	// ConformancePackName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-conformancepackname
	ConformancePackName cfz.Expression[string] `json:"ConformancePackName,omitempty"`

	// DeliveryS3Bucket is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-deliverys3bucket
	DeliveryS3Bucket cfz.Expression[string] `json:"DeliveryS3Bucket,omitempty"`

	// DeliveryS3KeyPrefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-deliverys3keyprefix
	DeliveryS3KeyPrefix cfz.Expression[string] `json:"DeliveryS3KeyPrefix,omitempty"`

	// TemplateBody is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templatebody
	TemplateBody cfz.Expression[string] `json:"TemplateBody,omitempty"`

	// TemplateS3Uri is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templates3uri
	TemplateS3Uri cfz.Expression[string] `json:"TemplateS3Uri,omitempty"`

	// TemplateSSMDocumentDetails is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-conformancepack.html#cfn-config-conformancepack-templatessmdocumentdetails
	TemplateSSMDocumentDetails cfz.Expression[AWS_Config_ConformancePack_TemplateSSMDocumentDetails] `json:"TemplateSSMDocumentDetails,omitempty"`
}

// New__AWS_Config_ConformancePack initializes a new *AWS_Config_ConformancePack.
func New__AWS_Config_ConformancePack(logicalName string) *AWS_Config_ConformancePack {
	return &AWS_Config_ConformancePack{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Config_ConformancePack) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Config_ConformancePack) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Config_ConformancePack) GetType() string {
	return AWS_Config_ConformancePack__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Config_ConformancePack) Set__LogicalName(v string) *AWS_Config_ConformancePack {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Config_ConformancePack) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Config_ConformancePack {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Config_ConformancePack) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Config_ConformancePack {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Config_ConformancePack) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Config_ConformancePack {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Config_ConformancePack) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Config_ConformancePack {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Config_ConformancePack) Set__RequestedOutputs(v []cfz.Output) *AWS_Config_ConformancePack {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Config_ConformancePack) Add__RequestedOutputs(v ...cfz.Output) *AWS_Config_ConformancePack {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ConformancePackInputParameters updates property "ConformancePackInputParameters".
func (t *AWS_Config_ConformancePack) Set__ConformancePackInputParameters(v cfz.ExpressionSlice[AWS_Config_ConformancePack_ConformancePackInputParameter]) *AWS_Config_ConformancePack {
	t.ConformancePackInputParameters = v
	return t
}

// SetS__ConformancePackInputParameters updates property "ConformancePackInputParameters".
func (t *AWS_Config_ConformancePack) SetS__ConformancePackInputParameters(v ...cfz.Expression[AWS_Config_ConformancePack_ConformancePackInputParameter]) *AWS_Config_ConformancePack {
	t.ConformancePackInputParameters = cfz.S(v...)
	return t
}

// SetSV__ConformancePackInputParameters updates property "ConformancePackInputParameters".
func (t *AWS_Config_ConformancePack) SetSV__ConformancePackInputParameters(v ...AWS_Config_ConformancePack_ConformancePackInputParameter) *AWS_Config_ConformancePack {
	t.ConformancePackInputParameters = cfz.SV(v...)
	return t
}

// Set__ConformancePackName updates property "ConformancePackName".
func (t *AWS_Config_ConformancePack) Set__ConformancePackName(v cfz.Expression[string]) *AWS_Config_ConformancePack {
	t.ConformancePackName = v
	return t
}

// SetV__ConformancePackName updates property "ConformancePackName".
func (t *AWS_Config_ConformancePack) SetV__ConformancePackName(v string) *AWS_Config_ConformancePack {
	t.ConformancePackName = cfz.V(v)
	return t
}

// Set__DeliveryS3Bucket updates property "DeliveryS3Bucket".
func (t *AWS_Config_ConformancePack) Set__DeliveryS3Bucket(v cfz.Expression[string]) *AWS_Config_ConformancePack {
	t.DeliveryS3Bucket = v
	return t
}

// SetV__DeliveryS3Bucket updates property "DeliveryS3Bucket".
func (t *AWS_Config_ConformancePack) SetV__DeliveryS3Bucket(v string) *AWS_Config_ConformancePack {
	t.DeliveryS3Bucket = cfz.V(v)
	return t
}

// Set__DeliveryS3KeyPrefix updates property "DeliveryS3KeyPrefix".
func (t *AWS_Config_ConformancePack) Set__DeliveryS3KeyPrefix(v cfz.Expression[string]) *AWS_Config_ConformancePack {
	t.DeliveryS3KeyPrefix = v
	return t
}

// SetV__DeliveryS3KeyPrefix updates property "DeliveryS3KeyPrefix".
func (t *AWS_Config_ConformancePack) SetV__DeliveryS3KeyPrefix(v string) *AWS_Config_ConformancePack {
	t.DeliveryS3KeyPrefix = cfz.V(v)
	return t
}

// Set__TemplateBody updates property "TemplateBody".
func (t *AWS_Config_ConformancePack) Set__TemplateBody(v cfz.Expression[string]) *AWS_Config_ConformancePack {
	t.TemplateBody = v
	return t
}

// SetV__TemplateBody updates property "TemplateBody".
func (t *AWS_Config_ConformancePack) SetV__TemplateBody(v string) *AWS_Config_ConformancePack {
	t.TemplateBody = cfz.V(v)
	return t
}

// Set__TemplateS3Uri updates property "TemplateS3Uri".
func (t *AWS_Config_ConformancePack) Set__TemplateS3Uri(v cfz.Expression[string]) *AWS_Config_ConformancePack {
	t.TemplateS3Uri = v
	return t
}

// SetV__TemplateS3Uri updates property "TemplateS3Uri".
func (t *AWS_Config_ConformancePack) SetV__TemplateS3Uri(v string) *AWS_Config_ConformancePack {
	t.TemplateS3Uri = cfz.V(v)
	return t
}

// Set__TemplateSSMDocumentDetails updates property "TemplateSSMDocumentDetails".
func (t *AWS_Config_ConformancePack) Set__TemplateSSMDocumentDetails(v cfz.Expression[AWS_Config_ConformancePack_TemplateSSMDocumentDetails]) *AWS_Config_ConformancePack {
	t.TemplateSSMDocumentDetails = v
	return t
}

// SetV__TemplateSSMDocumentDetails updates property "TemplateSSMDocumentDetails".
func (t *AWS_Config_ConformancePack) SetV__TemplateSSMDocumentDetails(v AWS_Config_ConformancePack_TemplateSSMDocumentDetails) *AWS_Config_ConformancePack {
	t.TemplateSSMDocumentDetails = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Config_ConformancePack) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Config_ConformancePack) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Config_ConformancePack) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Config_ConformancePack

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Config_ConformancePack) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
