// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_pinpoint

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Pinpoint_Segment)(nil)
	_ cfz.Resource                   = (*AWS_Pinpoint_Segment)(nil)
)

const (
	// AWS_Pinpoint_Segment__Type is the CloudFormation type for AWS::Pinpoint::Segment.
	AWS_Pinpoint_Segment__Type = "AWS::Pinpoint::Segment"
)

var (
	// AWS_Pinpoint_Segment__AttributesMap reports all the CloudFormation attributes for AWS::Pinpoint::Segment.
	AWS_Pinpoint_Segment__AttributesMap = struct {
		Arn       string
		SegmentId string
	}{
		Arn:       "Arn",
		SegmentId: "SegmentId",
	}

	// AWS_Pinpoint_Segment__AttributesSlice reports all the CloudFormation attributes for AWS::Pinpoint::Segment.
	AWS_Pinpoint_Segment__AttributesSlice = []string{
		AWS_Pinpoint_Segment__AttributesMap.Arn,
		AWS_Pinpoint_Segment__AttributesMap.SegmentId,
	}
)

var (
	// AWS_Pinpoint_Segment__PropertiesMap reports all the CloudFormation properties for AWS::Pinpoint::Segment.
	AWS_Pinpoint_Segment__PropertiesMap = struct {
		ApplicationId string
		Dimensions    string
		Name          string
		SegmentGroups string
		Tags          string
	}{
		ApplicationId: "ApplicationId",
		Dimensions:    "Dimensions",
		Name:          "Name",
		SegmentGroups: "SegmentGroups",
		Tags:          "Tags",
	}

	// AWS_Pinpoint_Segment__PropertiesSlice reports all the CloudFormation properties for AWS::Pinpoint::Segment.
	AWS_Pinpoint_Segment__PropertiesSlice = []string{
		AWS_Pinpoint_Segment__PropertiesMap.ApplicationId,
		AWS_Pinpoint_Segment__PropertiesMap.Dimensions,
		AWS_Pinpoint_Segment__PropertiesMap.Name,
		AWS_Pinpoint_Segment__PropertiesMap.SegmentGroups,
		AWS_Pinpoint_Segment__PropertiesMap.Tags,
	}
)

// AWS_Pinpoint_Segment is a binding for AWS::Pinpoint::Segment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html
type AWS_Pinpoint_Segment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-applicationid
	ApplicationId cfz.Expression[string] `json:"ApplicationId,omitempty"`

	// Dimensions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-dimensions
	Dimensions cfz.Expression[AWS_Pinpoint_Segment_SegmentDimensions] `json:"Dimensions,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// SegmentGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-segmentgroups
	SegmentGroups cfz.Expression[AWS_Pinpoint_Segment_SegmentGroups] `json:"SegmentGroups,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-segment.html#cfn-pinpoint-segment-tags
	Tags cfz.Expression[json.RawMessage] `json:"Tags,omitempty"`
}

// New__AWS_Pinpoint_Segment initializes a new *AWS_Pinpoint_Segment.
func New__AWS_Pinpoint_Segment(logicalName string) *AWS_Pinpoint_Segment {
	return &AWS_Pinpoint_Segment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Pinpoint_Segment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Pinpoint_Segment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Pinpoint_Segment) GetType() string {
	return AWS_Pinpoint_Segment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Pinpoint_Segment) Set__LogicalName(v string) *AWS_Pinpoint_Segment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Pinpoint_Segment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Pinpoint_Segment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Pinpoint_Segment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Pinpoint_Segment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Pinpoint_Segment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Pinpoint_Segment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Pinpoint_Segment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Pinpoint_Segment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Pinpoint_Segment) Set__RequestedOutputs(v []cfz.Output) *AWS_Pinpoint_Segment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Pinpoint_Segment) Add__RequestedOutputs(v ...cfz.Output) *AWS_Pinpoint_Segment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationId updates property "ApplicationId".
func (t *AWS_Pinpoint_Segment) Set__ApplicationId(v cfz.Expression[string]) *AWS_Pinpoint_Segment {
	t.ApplicationId = v
	return t
}

// SetV__ApplicationId updates property "ApplicationId".
func (t *AWS_Pinpoint_Segment) SetV__ApplicationId(v string) *AWS_Pinpoint_Segment {
	t.ApplicationId = cfz.V(v)
	return t
}

// Set__Dimensions updates property "Dimensions".
func (t *AWS_Pinpoint_Segment) Set__Dimensions(v cfz.Expression[AWS_Pinpoint_Segment_SegmentDimensions]) *AWS_Pinpoint_Segment {
	t.Dimensions = v
	return t
}

// SetV__Dimensions updates property "Dimensions".
func (t *AWS_Pinpoint_Segment) SetV__Dimensions(v AWS_Pinpoint_Segment_SegmentDimensions) *AWS_Pinpoint_Segment {
	t.Dimensions = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Pinpoint_Segment) Set__Name(v cfz.Expression[string]) *AWS_Pinpoint_Segment {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Pinpoint_Segment) SetV__Name(v string) *AWS_Pinpoint_Segment {
	t.Name = cfz.V(v)
	return t
}

// Set__SegmentGroups updates property "SegmentGroups".
func (t *AWS_Pinpoint_Segment) Set__SegmentGroups(v cfz.Expression[AWS_Pinpoint_Segment_SegmentGroups]) *AWS_Pinpoint_Segment {
	t.SegmentGroups = v
	return t
}

// SetV__SegmentGroups updates property "SegmentGroups".
func (t *AWS_Pinpoint_Segment) SetV__SegmentGroups(v AWS_Pinpoint_Segment_SegmentGroups) *AWS_Pinpoint_Segment {
	t.SegmentGroups = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Pinpoint_Segment) Set__Tags(v cfz.Expression[json.RawMessage]) *AWS_Pinpoint_Segment {
	t.Tags = v
	return t
}

// SetV__Tags updates property "Tags".
func (t *AWS_Pinpoint_Segment) SetV__Tags(v json.RawMessage) *AWS_Pinpoint_Segment {
	t.Tags = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Pinpoint_Segment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Pinpoint_Segment) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Pinpoint_Segment__AttributesMap.Arn))
}

// GetAtt__SegmentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SegmentId
func (t *AWS_Pinpoint_Segment) GetAtt__SegmentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Pinpoint_Segment__AttributesMap.SegmentId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Pinpoint_Segment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Pinpoint_Segment) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SegmentId returns a conventionally configured output for an attribute of this resource.
// Attribute: SegmentId
func (t *AWS_Pinpoint_Segment) GetConventionalOutputAtt__SegmentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSegmentId", t.GetAtt__SegmentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Pinpoint_Segment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Pinpoint_Segment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Pinpoint_Segment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
