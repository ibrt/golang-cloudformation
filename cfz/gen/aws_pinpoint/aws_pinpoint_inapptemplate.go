// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_pinpoint

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Pinpoint_InAppTemplate)(nil)
	_ cfz.Resource                   = (*AWS_Pinpoint_InAppTemplate)(nil)
)

const (
	// AWS_Pinpoint_InAppTemplate__Type is the CloudFormation type for AWS::Pinpoint::InAppTemplate.
	AWS_Pinpoint_InAppTemplate__Type = "AWS::Pinpoint::InAppTemplate"
)

var (
	// AWS_Pinpoint_InAppTemplate__AttributesMap reports all the CloudFormation attributes for AWS::Pinpoint::InAppTemplate.
	AWS_Pinpoint_InAppTemplate__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_Pinpoint_InAppTemplate__AttributesSlice reports all the CloudFormation attributes for AWS::Pinpoint::InAppTemplate.
	AWS_Pinpoint_InAppTemplate__AttributesSlice = []string{
		AWS_Pinpoint_InAppTemplate__AttributesMap.Arn,
	}
)

var (
	// AWS_Pinpoint_InAppTemplate__PropertiesMap reports all the CloudFormation properties for AWS::Pinpoint::InAppTemplate.
	AWS_Pinpoint_InAppTemplate__PropertiesMap = struct {
		Content             string
		CustomConfig        string
		Layout              string
		Tags                string
		TemplateDescription string
		TemplateName        string
	}{
		Content:             "Content",
		CustomConfig:        "CustomConfig",
		Layout:              "Layout",
		Tags:                "Tags",
		TemplateDescription: "TemplateDescription",
		TemplateName:        "TemplateName",
	}

	// AWS_Pinpoint_InAppTemplate__PropertiesSlice reports all the CloudFormation properties for AWS::Pinpoint::InAppTemplate.
	AWS_Pinpoint_InAppTemplate__PropertiesSlice = []string{
		AWS_Pinpoint_InAppTemplate__PropertiesMap.Content,
		AWS_Pinpoint_InAppTemplate__PropertiesMap.CustomConfig,
		AWS_Pinpoint_InAppTemplate__PropertiesMap.Layout,
		AWS_Pinpoint_InAppTemplate__PropertiesMap.Tags,
		AWS_Pinpoint_InAppTemplate__PropertiesMap.TemplateDescription,
		AWS_Pinpoint_InAppTemplate__PropertiesMap.TemplateName,
	}
)

// AWS_Pinpoint_InAppTemplate is a binding for AWS::Pinpoint::InAppTemplate.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html
type AWS_Pinpoint_InAppTemplate struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Content is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-content
	Content cfz.ExpressionSlice[AWS_Pinpoint_InAppTemplate_InAppMessageContent] `json:"Content,omitempty"`

	// CustomConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-customconfig
	CustomConfig cfz.Expression[json.RawMessage] `json:"CustomConfig,omitempty"`

	// Layout is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-layout
	Layout cfz.Expression[string] `json:"Layout,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-tags
	Tags cfz.Expression[json.RawMessage] `json:"Tags,omitempty"`

	// TemplateDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-templatedescription
	TemplateDescription cfz.Expression[string] `json:"TemplateDescription,omitempty"`

	// TemplateName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-inapptemplate.html#cfn-pinpoint-inapptemplate-templatename
	TemplateName cfz.Expression[string] `json:"TemplateName,omitempty"`
}

// New__AWS_Pinpoint_InAppTemplate initializes a new *AWS_Pinpoint_InAppTemplate.
func New__AWS_Pinpoint_InAppTemplate(logicalName string) *AWS_Pinpoint_InAppTemplate {
	return &AWS_Pinpoint_InAppTemplate{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Pinpoint_InAppTemplate) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Pinpoint_InAppTemplate) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Pinpoint_InAppTemplate) GetType() string {
	return AWS_Pinpoint_InAppTemplate__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Pinpoint_InAppTemplate) Set__LogicalName(v string) *AWS_Pinpoint_InAppTemplate {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Pinpoint_InAppTemplate) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Pinpoint_InAppTemplate {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Pinpoint_InAppTemplate) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Pinpoint_InAppTemplate {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Pinpoint_InAppTemplate) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Pinpoint_InAppTemplate {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Pinpoint_InAppTemplate) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Pinpoint_InAppTemplate {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Pinpoint_InAppTemplate) Set__RequestedOutputs(v []cfz.Output) *AWS_Pinpoint_InAppTemplate {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Pinpoint_InAppTemplate) Add__RequestedOutputs(v ...cfz.Output) *AWS_Pinpoint_InAppTemplate {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Content updates property "Content".
func (t *AWS_Pinpoint_InAppTemplate) Set__Content(v cfz.ExpressionSlice[AWS_Pinpoint_InAppTemplate_InAppMessageContent]) *AWS_Pinpoint_InAppTemplate {
	t.Content = v
	return t
}

// SetS__Content updates property "Content".
func (t *AWS_Pinpoint_InAppTemplate) SetS__Content(v ...cfz.Expression[AWS_Pinpoint_InAppTemplate_InAppMessageContent]) *AWS_Pinpoint_InAppTemplate {
	t.Content = cfz.S(v...)
	return t
}

// SetSV__Content updates property "Content".
func (t *AWS_Pinpoint_InAppTemplate) SetSV__Content(v ...AWS_Pinpoint_InAppTemplate_InAppMessageContent) *AWS_Pinpoint_InAppTemplate {
	t.Content = cfz.SV(v...)
	return t
}

// Set__CustomConfig updates property "CustomConfig".
func (t *AWS_Pinpoint_InAppTemplate) Set__CustomConfig(v cfz.Expression[json.RawMessage]) *AWS_Pinpoint_InAppTemplate {
	t.CustomConfig = v
	return t
}

// SetV__CustomConfig updates property "CustomConfig".
func (t *AWS_Pinpoint_InAppTemplate) SetV__CustomConfig(v json.RawMessage) *AWS_Pinpoint_InAppTemplate {
	t.CustomConfig = cfz.V(v)
	return t
}

// Set__Layout updates property "Layout".
func (t *AWS_Pinpoint_InAppTemplate) Set__Layout(v cfz.Expression[string]) *AWS_Pinpoint_InAppTemplate {
	t.Layout = v
	return t
}

// SetV__Layout updates property "Layout".
func (t *AWS_Pinpoint_InAppTemplate) SetV__Layout(v string) *AWS_Pinpoint_InAppTemplate {
	t.Layout = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Pinpoint_InAppTemplate) Set__Tags(v cfz.Expression[json.RawMessage]) *AWS_Pinpoint_InAppTemplate {
	t.Tags = v
	return t
}

// SetV__Tags updates property "Tags".
func (t *AWS_Pinpoint_InAppTemplate) SetV__Tags(v json.RawMessage) *AWS_Pinpoint_InAppTemplate {
	t.Tags = cfz.V(v)
	return t
}

// Set__TemplateDescription updates property "TemplateDescription".
func (t *AWS_Pinpoint_InAppTemplate) Set__TemplateDescription(v cfz.Expression[string]) *AWS_Pinpoint_InAppTemplate {
	t.TemplateDescription = v
	return t
}

// SetV__TemplateDescription updates property "TemplateDescription".
func (t *AWS_Pinpoint_InAppTemplate) SetV__TemplateDescription(v string) *AWS_Pinpoint_InAppTemplate {
	t.TemplateDescription = cfz.V(v)
	return t
}

// Set__TemplateName updates property "TemplateName".
func (t *AWS_Pinpoint_InAppTemplate) Set__TemplateName(v cfz.Expression[string]) *AWS_Pinpoint_InAppTemplate {
	t.TemplateName = v
	return t
}

// SetV__TemplateName updates property "TemplateName".
func (t *AWS_Pinpoint_InAppTemplate) SetV__TemplateName(v string) *AWS_Pinpoint_InAppTemplate {
	t.TemplateName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Pinpoint_InAppTemplate) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Pinpoint_InAppTemplate) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Pinpoint_InAppTemplate__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Pinpoint_InAppTemplate) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Pinpoint_InAppTemplate) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Pinpoint_InAppTemplate) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Pinpoint_InAppTemplate

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Pinpoint_InAppTemplate) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
