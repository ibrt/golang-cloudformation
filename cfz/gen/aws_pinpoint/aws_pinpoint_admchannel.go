// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_pinpoint

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Pinpoint_ADMChannel)(nil)
	_ cfz.Resource                   = (*AWS_Pinpoint_ADMChannel)(nil)
)

const (
	// AWS_Pinpoint_ADMChannel__Type is the CloudFormation type for AWS::Pinpoint::ADMChannel.
	AWS_Pinpoint_ADMChannel__Type = "AWS::Pinpoint::ADMChannel"
)

var (
	// AWS_Pinpoint_ADMChannel__PropertiesMap reports all the CloudFormation properties for AWS::Pinpoint::ADMChannel.
	AWS_Pinpoint_ADMChannel__PropertiesMap = struct {
		ApplicationId string
		ClientId      string
		ClientSecret  string
		Enabled       string
	}{
		ApplicationId: "ApplicationId",
		ClientId:      "ClientId",
		ClientSecret:  "ClientSecret",
		Enabled:       "Enabled",
	}

	// AWS_Pinpoint_ADMChannel__PropertiesSlice reports all the CloudFormation properties for AWS::Pinpoint::ADMChannel.
	AWS_Pinpoint_ADMChannel__PropertiesSlice = []string{
		AWS_Pinpoint_ADMChannel__PropertiesMap.ApplicationId,
		AWS_Pinpoint_ADMChannel__PropertiesMap.ClientId,
		AWS_Pinpoint_ADMChannel__PropertiesMap.ClientSecret,
		AWS_Pinpoint_ADMChannel__PropertiesMap.Enabled,
	}
)

// AWS_Pinpoint_ADMChannel is a binding for AWS::Pinpoint::ADMChannel.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html
type AWS_Pinpoint_ADMChannel struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html#cfn-pinpoint-admchannel-applicationid
	ApplicationId cfz.Expression[string] `json:"ApplicationId,omitempty"`

	// ClientId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html#cfn-pinpoint-admchannel-clientid
	ClientId cfz.Expression[string] `json:"ClientId,omitempty"`

	// ClientSecret is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html#cfn-pinpoint-admchannel-clientsecret
	ClientSecret cfz.Expression[string] `json:"ClientSecret,omitempty"`

	// Enabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-admchannel.html#cfn-pinpoint-admchannel-enabled
	Enabled cfz.Expression[bool] `json:"Enabled,omitempty"`
}

// New__AWS_Pinpoint_ADMChannel initializes a new *AWS_Pinpoint_ADMChannel.
func New__AWS_Pinpoint_ADMChannel(logicalName string) *AWS_Pinpoint_ADMChannel {
	return &AWS_Pinpoint_ADMChannel{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Pinpoint_ADMChannel) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Pinpoint_ADMChannel) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Pinpoint_ADMChannel) GetType() string {
	return AWS_Pinpoint_ADMChannel__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Pinpoint_ADMChannel) Set__LogicalName(v string) *AWS_Pinpoint_ADMChannel {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Pinpoint_ADMChannel) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Pinpoint_ADMChannel {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Pinpoint_ADMChannel) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Pinpoint_ADMChannel {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Pinpoint_ADMChannel) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Pinpoint_ADMChannel {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Pinpoint_ADMChannel) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Pinpoint_ADMChannel {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Pinpoint_ADMChannel) Set__RequestedOutputs(v []cfz.Output) *AWS_Pinpoint_ADMChannel {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Pinpoint_ADMChannel) Add__RequestedOutputs(v ...cfz.Output) *AWS_Pinpoint_ADMChannel {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationId updates property "ApplicationId".
func (t *AWS_Pinpoint_ADMChannel) Set__ApplicationId(v cfz.Expression[string]) *AWS_Pinpoint_ADMChannel {
	t.ApplicationId = v
	return t
}

// SetV__ApplicationId updates property "ApplicationId".
func (t *AWS_Pinpoint_ADMChannel) SetV__ApplicationId(v string) *AWS_Pinpoint_ADMChannel {
	t.ApplicationId = cfz.V(v)
	return t
}

// Set__ClientId updates property "ClientId".
func (t *AWS_Pinpoint_ADMChannel) Set__ClientId(v cfz.Expression[string]) *AWS_Pinpoint_ADMChannel {
	t.ClientId = v
	return t
}

// SetV__ClientId updates property "ClientId".
func (t *AWS_Pinpoint_ADMChannel) SetV__ClientId(v string) *AWS_Pinpoint_ADMChannel {
	t.ClientId = cfz.V(v)
	return t
}

// Set__ClientSecret updates property "ClientSecret".
func (t *AWS_Pinpoint_ADMChannel) Set__ClientSecret(v cfz.Expression[string]) *AWS_Pinpoint_ADMChannel {
	t.ClientSecret = v
	return t
}

// SetV__ClientSecret updates property "ClientSecret".
func (t *AWS_Pinpoint_ADMChannel) SetV__ClientSecret(v string) *AWS_Pinpoint_ADMChannel {
	t.ClientSecret = cfz.V(v)
	return t
}

// Set__Enabled updates property "Enabled".
func (t *AWS_Pinpoint_ADMChannel) Set__Enabled(v cfz.Expression[bool]) *AWS_Pinpoint_ADMChannel {
	t.Enabled = v
	return t
}

// SetV__Enabled updates property "Enabled".
func (t *AWS_Pinpoint_ADMChannel) SetV__Enabled(v bool) *AWS_Pinpoint_ADMChannel {
	t.Enabled = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Pinpoint_ADMChannel) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Pinpoint_ADMChannel) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Pinpoint_ADMChannel) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Pinpoint_ADMChannel

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Pinpoint_ADMChannel) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
