// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_medialive

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaLive_Channel_H264Settings__Type is the CloudFormation type for AWS::MediaLive::Channel.H264Settings.
	AWS_MediaLive_Channel_H264Settings__Type = "AWS::MediaLive::Channel.H264Settings"
)

var (
	// AWS_MediaLive_Channel_H264Settings__PropertiesMap reports all the CloudFormation properties for AWS::MediaLive::Channel.H264Settings.
	AWS_MediaLive_Channel_H264Settings__PropertiesMap = struct {
		AdaptiveQuantization   string
		AfdSignaling           string
		Bitrate                string
		BufFillPct             string
		BufSize                string
		ColorMetadata          string
		ColorSpaceSettings     string
		EntropyEncoding        string
		FilterSettings         string
		FixedAfd               string
		FlickerAq              string
		ForceFieldPictures     string
		FramerateControl       string
		FramerateDenominator   string
		FramerateNumerator     string
		GopBReference          string
		GopClosedCadence       string
		GopNumBFrames          string
		GopSize                string
		GopSizeUnits           string
		Level                  string
		LookAheadRateControl   string
		MaxBitrate             string
		MinIInterval           string
		MinQp                  string
		NumRefFrames           string
		ParControl             string
		ParDenominator         string
		ParNumerator           string
		Profile                string
		QualityLevel           string
		QvbrQualityLevel       string
		RateControlMode        string
		ScanType               string
		SceneChangeDetect      string
		Slices                 string
		Softness               string
		SpatialAq              string
		SubgopLength           string
		Syntax                 string
		TemporalAq             string
		TimecodeBurninSettings string
		TimecodeInsertion      string
	}{
		AdaptiveQuantization:   "AdaptiveQuantization",
		AfdSignaling:           "AfdSignaling",
		Bitrate:                "Bitrate",
		BufFillPct:             "BufFillPct",
		BufSize:                "BufSize",
		ColorMetadata:          "ColorMetadata",
		ColorSpaceSettings:     "ColorSpaceSettings",
		EntropyEncoding:        "EntropyEncoding",
		FilterSettings:         "FilterSettings",
		FixedAfd:               "FixedAfd",
		FlickerAq:              "FlickerAq",
		ForceFieldPictures:     "ForceFieldPictures",
		FramerateControl:       "FramerateControl",
		FramerateDenominator:   "FramerateDenominator",
		FramerateNumerator:     "FramerateNumerator",
		GopBReference:          "GopBReference",
		GopClosedCadence:       "GopClosedCadence",
		GopNumBFrames:          "GopNumBFrames",
		GopSize:                "GopSize",
		GopSizeUnits:           "GopSizeUnits",
		Level:                  "Level",
		LookAheadRateControl:   "LookAheadRateControl",
		MaxBitrate:             "MaxBitrate",
		MinIInterval:           "MinIInterval",
		MinQp:                  "MinQp",
		NumRefFrames:           "NumRefFrames",
		ParControl:             "ParControl",
		ParDenominator:         "ParDenominator",
		ParNumerator:           "ParNumerator",
		Profile:                "Profile",
		QualityLevel:           "QualityLevel",
		QvbrQualityLevel:       "QvbrQualityLevel",
		RateControlMode:        "RateControlMode",
		ScanType:               "ScanType",
		SceneChangeDetect:      "SceneChangeDetect",
		Slices:                 "Slices",
		Softness:               "Softness",
		SpatialAq:              "SpatialAq",
		SubgopLength:           "SubgopLength",
		Syntax:                 "Syntax",
		TemporalAq:             "TemporalAq",
		TimecodeBurninSettings: "TimecodeBurninSettings",
		TimecodeInsertion:      "TimecodeInsertion",
	}

	// AWS_MediaLive_Channel_H264Settings__PropertiesSlice reports all the CloudFormation properties for AWS::MediaLive::Channel.H264Settings.
	AWS_MediaLive_Channel_H264Settings__PropertiesSlice = []string{
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.AdaptiveQuantization,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.AfdSignaling,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.Bitrate,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.BufFillPct,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.BufSize,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.ColorMetadata,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.ColorSpaceSettings,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.EntropyEncoding,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.FilterSettings,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.FixedAfd,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.FlickerAq,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.ForceFieldPictures,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.FramerateControl,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.FramerateDenominator,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.FramerateNumerator,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.GopBReference,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.GopClosedCadence,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.GopNumBFrames,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.GopSize,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.GopSizeUnits,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.Level,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.LookAheadRateControl,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.MaxBitrate,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.MinIInterval,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.MinQp,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.NumRefFrames,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.ParControl,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.ParDenominator,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.ParNumerator,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.Profile,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.QualityLevel,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.QvbrQualityLevel,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.RateControlMode,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.ScanType,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.SceneChangeDetect,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.Slices,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.Softness,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.SpatialAq,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.SubgopLength,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.Syntax,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.TemporalAq,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.TimecodeBurninSettings,
		AWS_MediaLive_Channel_H264Settings__PropertiesMap.TimecodeInsertion,
	}
)

// AWS_MediaLive_Channel_H264Settings is a binding for AWS::MediaLive::Channel.H264Settings.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html
type AWS_MediaLive_Channel_H264Settings struct {
	// AdaptiveQuantization is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-adaptivequantization
	AdaptiveQuantization cfz.Expression[string] `json:"AdaptiveQuantization,omitempty"`

	// AfdSignaling is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-afdsignaling
	AfdSignaling cfz.Expression[string] `json:"AfdSignaling,omitempty"`

	// Bitrate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-bitrate
	Bitrate cfz.Expression[int32] `json:"Bitrate,omitempty"`

	// BufFillPct is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-buffillpct
	BufFillPct cfz.Expression[int32] `json:"BufFillPct,omitempty"`

	// BufSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-bufsize
	BufSize cfz.Expression[int32] `json:"BufSize,omitempty"`

	// ColorMetadata is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-colormetadata
	ColorMetadata cfz.Expression[string] `json:"ColorMetadata,omitempty"`

	// ColorSpaceSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-colorspacesettings
	ColorSpaceSettings cfz.Expression[AWS_MediaLive_Channel_H264ColorSpaceSettings] `json:"ColorSpaceSettings,omitempty"`

	// EntropyEncoding is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-entropyencoding
	EntropyEncoding cfz.Expression[string] `json:"EntropyEncoding,omitempty"`

	// FilterSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-filtersettings
	FilterSettings cfz.Expression[AWS_MediaLive_Channel_H264FilterSettings] `json:"FilterSettings,omitempty"`

	// FixedAfd is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-fixedafd
	FixedAfd cfz.Expression[string] `json:"FixedAfd,omitempty"`

	// FlickerAq is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-flickeraq
	FlickerAq cfz.Expression[string] `json:"FlickerAq,omitempty"`

	// ForceFieldPictures is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-forcefieldpictures
	ForceFieldPictures cfz.Expression[string] `json:"ForceFieldPictures,omitempty"`

	// FramerateControl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-frameratecontrol
	FramerateControl cfz.Expression[string] `json:"FramerateControl,omitempty"`

	// FramerateDenominator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-frameratedenominator
	FramerateDenominator cfz.Expression[int32] `json:"FramerateDenominator,omitempty"`

	// FramerateNumerator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-frameratenumerator
	FramerateNumerator cfz.Expression[int32] `json:"FramerateNumerator,omitempty"`

	// GopBReference is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-gopbreference
	GopBReference cfz.Expression[string] `json:"GopBReference,omitempty"`

	// GopClosedCadence is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-gopclosedcadence
	GopClosedCadence cfz.Expression[int32] `json:"GopClosedCadence,omitempty"`

	// GopNumBFrames is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-gopnumbframes
	GopNumBFrames cfz.Expression[int32] `json:"GopNumBFrames,omitempty"`

	// GopSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-gopsize
	GopSize cfz.Expression[float64] `json:"GopSize,omitempty"`

	// GopSizeUnits is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-gopsizeunits
	GopSizeUnits cfz.Expression[string] `json:"GopSizeUnits,omitempty"`

	// Level is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-level
	Level cfz.Expression[string] `json:"Level,omitempty"`

	// LookAheadRateControl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-lookaheadratecontrol
	LookAheadRateControl cfz.Expression[string] `json:"LookAheadRateControl,omitempty"`

	// MaxBitrate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-maxbitrate
	MaxBitrate cfz.Expression[int32] `json:"MaxBitrate,omitempty"`

	// MinIInterval is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-miniinterval
	MinIInterval cfz.Expression[int32] `json:"MinIInterval,omitempty"`

	// MinQp is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-minqp
	MinQp cfz.Expression[int32] `json:"MinQp,omitempty"`

	// NumRefFrames is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-numrefframes
	NumRefFrames cfz.Expression[int32] `json:"NumRefFrames,omitempty"`

	// ParControl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-parcontrol
	ParControl cfz.Expression[string] `json:"ParControl,omitempty"`

	// ParDenominator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-pardenominator
	ParDenominator cfz.Expression[int32] `json:"ParDenominator,omitempty"`

	// ParNumerator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-parnumerator
	ParNumerator cfz.Expression[int32] `json:"ParNumerator,omitempty"`

	// Profile is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-profile
	Profile cfz.Expression[string] `json:"Profile,omitempty"`

	// QualityLevel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-qualitylevel
	QualityLevel cfz.Expression[string] `json:"QualityLevel,omitempty"`

	// QvbrQualityLevel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-qvbrqualitylevel
	QvbrQualityLevel cfz.Expression[int32] `json:"QvbrQualityLevel,omitempty"`

	// RateControlMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-ratecontrolmode
	RateControlMode cfz.Expression[string] `json:"RateControlMode,omitempty"`

	// ScanType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-scantype
	ScanType cfz.Expression[string] `json:"ScanType,omitempty"`

	// SceneChangeDetect is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-scenechangedetect
	SceneChangeDetect cfz.Expression[string] `json:"SceneChangeDetect,omitempty"`

	// Slices is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-slices
	Slices cfz.Expression[int32] `json:"Slices,omitempty"`

	// Softness is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-softness
	Softness cfz.Expression[int32] `json:"Softness,omitempty"`

	// SpatialAq is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-spatialaq
	SpatialAq cfz.Expression[string] `json:"SpatialAq,omitempty"`

	// SubgopLength is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-subgoplength
	SubgopLength cfz.Expression[string] `json:"SubgopLength,omitempty"`

	// Syntax is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-syntax
	Syntax cfz.Expression[string] `json:"Syntax,omitempty"`

	// TemporalAq is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-temporalaq
	TemporalAq cfz.Expression[string] `json:"TemporalAq,omitempty"`

	// TimecodeBurninSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-timecodeburninsettings
	TimecodeBurninSettings cfz.Expression[AWS_MediaLive_Channel_TimecodeBurninSettings] `json:"TimecodeBurninSettings,omitempty"`

	// TimecodeInsertion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h264settings.html#cfn-medialive-channel-h264settings-timecodeinsertion
	TimecodeInsertion cfz.Expression[string] `json:"TimecodeInsertion,omitempty"`
}

// New__AWS_MediaLive_Channel_H264Settings initializes a new AWS_MediaLive_Channel_H264Settings.
func New__AWS_MediaLive_Channel_H264Settings() AWS_MediaLive_Channel_H264Settings {
	return AWS_MediaLive_Channel_H264Settings{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaLive_Channel_H264Settings) GetType() string {
	return AWS_MediaLive_Channel_H264Settings__Type
}

// Set__AdaptiveQuantization updates property "AdaptiveQuantization".
func (t AWS_MediaLive_Channel_H264Settings) Set__AdaptiveQuantization(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.AdaptiveQuantization = v
	return t
}

// SetV__AdaptiveQuantization updates property "AdaptiveQuantization".
func (t AWS_MediaLive_Channel_H264Settings) SetV__AdaptiveQuantization(v string) AWS_MediaLive_Channel_H264Settings {
	t.AdaptiveQuantization = cfz.V(v)
	return t
}

// Set__AfdSignaling updates property "AfdSignaling".
func (t AWS_MediaLive_Channel_H264Settings) Set__AfdSignaling(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.AfdSignaling = v
	return t
}

// SetV__AfdSignaling updates property "AfdSignaling".
func (t AWS_MediaLive_Channel_H264Settings) SetV__AfdSignaling(v string) AWS_MediaLive_Channel_H264Settings {
	t.AfdSignaling = cfz.V(v)
	return t
}

// Set__Bitrate updates property "Bitrate".
func (t AWS_MediaLive_Channel_H264Settings) Set__Bitrate(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.Bitrate = v
	return t
}

// SetV__Bitrate updates property "Bitrate".
func (t AWS_MediaLive_Channel_H264Settings) SetV__Bitrate(v int32) AWS_MediaLive_Channel_H264Settings {
	t.Bitrate = cfz.V(v)
	return t
}

// Set__BufFillPct updates property "BufFillPct".
func (t AWS_MediaLive_Channel_H264Settings) Set__BufFillPct(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.BufFillPct = v
	return t
}

// SetV__BufFillPct updates property "BufFillPct".
func (t AWS_MediaLive_Channel_H264Settings) SetV__BufFillPct(v int32) AWS_MediaLive_Channel_H264Settings {
	t.BufFillPct = cfz.V(v)
	return t
}

// Set__BufSize updates property "BufSize".
func (t AWS_MediaLive_Channel_H264Settings) Set__BufSize(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.BufSize = v
	return t
}

// SetV__BufSize updates property "BufSize".
func (t AWS_MediaLive_Channel_H264Settings) SetV__BufSize(v int32) AWS_MediaLive_Channel_H264Settings {
	t.BufSize = cfz.V(v)
	return t
}

// Set__ColorMetadata updates property "ColorMetadata".
func (t AWS_MediaLive_Channel_H264Settings) Set__ColorMetadata(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.ColorMetadata = v
	return t
}

// SetV__ColorMetadata updates property "ColorMetadata".
func (t AWS_MediaLive_Channel_H264Settings) SetV__ColorMetadata(v string) AWS_MediaLive_Channel_H264Settings {
	t.ColorMetadata = cfz.V(v)
	return t
}

// Set__ColorSpaceSettings updates property "ColorSpaceSettings".
func (t AWS_MediaLive_Channel_H264Settings) Set__ColorSpaceSettings(v cfz.Expression[AWS_MediaLive_Channel_H264ColorSpaceSettings]) AWS_MediaLive_Channel_H264Settings {
	t.ColorSpaceSettings = v
	return t
}

// SetV__ColorSpaceSettings updates property "ColorSpaceSettings".
func (t AWS_MediaLive_Channel_H264Settings) SetV__ColorSpaceSettings(v AWS_MediaLive_Channel_H264ColorSpaceSettings) AWS_MediaLive_Channel_H264Settings {
	t.ColorSpaceSettings = cfz.V(v)
	return t
}

// Set__EntropyEncoding updates property "EntropyEncoding".
func (t AWS_MediaLive_Channel_H264Settings) Set__EntropyEncoding(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.EntropyEncoding = v
	return t
}

// SetV__EntropyEncoding updates property "EntropyEncoding".
func (t AWS_MediaLive_Channel_H264Settings) SetV__EntropyEncoding(v string) AWS_MediaLive_Channel_H264Settings {
	t.EntropyEncoding = cfz.V(v)
	return t
}

// Set__FilterSettings updates property "FilterSettings".
func (t AWS_MediaLive_Channel_H264Settings) Set__FilterSettings(v cfz.Expression[AWS_MediaLive_Channel_H264FilterSettings]) AWS_MediaLive_Channel_H264Settings {
	t.FilterSettings = v
	return t
}

// SetV__FilterSettings updates property "FilterSettings".
func (t AWS_MediaLive_Channel_H264Settings) SetV__FilterSettings(v AWS_MediaLive_Channel_H264FilterSettings) AWS_MediaLive_Channel_H264Settings {
	t.FilterSettings = cfz.V(v)
	return t
}

// Set__FixedAfd updates property "FixedAfd".
func (t AWS_MediaLive_Channel_H264Settings) Set__FixedAfd(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.FixedAfd = v
	return t
}

// SetV__FixedAfd updates property "FixedAfd".
func (t AWS_MediaLive_Channel_H264Settings) SetV__FixedAfd(v string) AWS_MediaLive_Channel_H264Settings {
	t.FixedAfd = cfz.V(v)
	return t
}

// Set__FlickerAq updates property "FlickerAq".
func (t AWS_MediaLive_Channel_H264Settings) Set__FlickerAq(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.FlickerAq = v
	return t
}

// SetV__FlickerAq updates property "FlickerAq".
func (t AWS_MediaLive_Channel_H264Settings) SetV__FlickerAq(v string) AWS_MediaLive_Channel_H264Settings {
	t.FlickerAq = cfz.V(v)
	return t
}

// Set__ForceFieldPictures updates property "ForceFieldPictures".
func (t AWS_MediaLive_Channel_H264Settings) Set__ForceFieldPictures(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.ForceFieldPictures = v
	return t
}

// SetV__ForceFieldPictures updates property "ForceFieldPictures".
func (t AWS_MediaLive_Channel_H264Settings) SetV__ForceFieldPictures(v string) AWS_MediaLive_Channel_H264Settings {
	t.ForceFieldPictures = cfz.V(v)
	return t
}

// Set__FramerateControl updates property "FramerateControl".
func (t AWS_MediaLive_Channel_H264Settings) Set__FramerateControl(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.FramerateControl = v
	return t
}

// SetV__FramerateControl updates property "FramerateControl".
func (t AWS_MediaLive_Channel_H264Settings) SetV__FramerateControl(v string) AWS_MediaLive_Channel_H264Settings {
	t.FramerateControl = cfz.V(v)
	return t
}

// Set__FramerateDenominator updates property "FramerateDenominator".
func (t AWS_MediaLive_Channel_H264Settings) Set__FramerateDenominator(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.FramerateDenominator = v
	return t
}

// SetV__FramerateDenominator updates property "FramerateDenominator".
func (t AWS_MediaLive_Channel_H264Settings) SetV__FramerateDenominator(v int32) AWS_MediaLive_Channel_H264Settings {
	t.FramerateDenominator = cfz.V(v)
	return t
}

// Set__FramerateNumerator updates property "FramerateNumerator".
func (t AWS_MediaLive_Channel_H264Settings) Set__FramerateNumerator(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.FramerateNumerator = v
	return t
}

// SetV__FramerateNumerator updates property "FramerateNumerator".
func (t AWS_MediaLive_Channel_H264Settings) SetV__FramerateNumerator(v int32) AWS_MediaLive_Channel_H264Settings {
	t.FramerateNumerator = cfz.V(v)
	return t
}

// Set__GopBReference updates property "GopBReference".
func (t AWS_MediaLive_Channel_H264Settings) Set__GopBReference(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.GopBReference = v
	return t
}

// SetV__GopBReference updates property "GopBReference".
func (t AWS_MediaLive_Channel_H264Settings) SetV__GopBReference(v string) AWS_MediaLive_Channel_H264Settings {
	t.GopBReference = cfz.V(v)
	return t
}

// Set__GopClosedCadence updates property "GopClosedCadence".
func (t AWS_MediaLive_Channel_H264Settings) Set__GopClosedCadence(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.GopClosedCadence = v
	return t
}

// SetV__GopClosedCadence updates property "GopClosedCadence".
func (t AWS_MediaLive_Channel_H264Settings) SetV__GopClosedCadence(v int32) AWS_MediaLive_Channel_H264Settings {
	t.GopClosedCadence = cfz.V(v)
	return t
}

// Set__GopNumBFrames updates property "GopNumBFrames".
func (t AWS_MediaLive_Channel_H264Settings) Set__GopNumBFrames(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.GopNumBFrames = v
	return t
}

// SetV__GopNumBFrames updates property "GopNumBFrames".
func (t AWS_MediaLive_Channel_H264Settings) SetV__GopNumBFrames(v int32) AWS_MediaLive_Channel_H264Settings {
	t.GopNumBFrames = cfz.V(v)
	return t
}

// Set__GopSize updates property "GopSize".
func (t AWS_MediaLive_Channel_H264Settings) Set__GopSize(v cfz.Expression[float64]) AWS_MediaLive_Channel_H264Settings {
	t.GopSize = v
	return t
}

// SetV__GopSize updates property "GopSize".
func (t AWS_MediaLive_Channel_H264Settings) SetV__GopSize(v float64) AWS_MediaLive_Channel_H264Settings {
	t.GopSize = cfz.V(v)
	return t
}

// Set__GopSizeUnits updates property "GopSizeUnits".
func (t AWS_MediaLive_Channel_H264Settings) Set__GopSizeUnits(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.GopSizeUnits = v
	return t
}

// SetV__GopSizeUnits updates property "GopSizeUnits".
func (t AWS_MediaLive_Channel_H264Settings) SetV__GopSizeUnits(v string) AWS_MediaLive_Channel_H264Settings {
	t.GopSizeUnits = cfz.V(v)
	return t
}

// Set__Level updates property "Level".
func (t AWS_MediaLive_Channel_H264Settings) Set__Level(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.Level = v
	return t
}

// SetV__Level updates property "Level".
func (t AWS_MediaLive_Channel_H264Settings) SetV__Level(v string) AWS_MediaLive_Channel_H264Settings {
	t.Level = cfz.V(v)
	return t
}

// Set__LookAheadRateControl updates property "LookAheadRateControl".
func (t AWS_MediaLive_Channel_H264Settings) Set__LookAheadRateControl(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.LookAheadRateControl = v
	return t
}

// SetV__LookAheadRateControl updates property "LookAheadRateControl".
func (t AWS_MediaLive_Channel_H264Settings) SetV__LookAheadRateControl(v string) AWS_MediaLive_Channel_H264Settings {
	t.LookAheadRateControl = cfz.V(v)
	return t
}

// Set__MaxBitrate updates property "MaxBitrate".
func (t AWS_MediaLive_Channel_H264Settings) Set__MaxBitrate(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.MaxBitrate = v
	return t
}

// SetV__MaxBitrate updates property "MaxBitrate".
func (t AWS_MediaLive_Channel_H264Settings) SetV__MaxBitrate(v int32) AWS_MediaLive_Channel_H264Settings {
	t.MaxBitrate = cfz.V(v)
	return t
}

// Set__MinIInterval updates property "MinIInterval".
func (t AWS_MediaLive_Channel_H264Settings) Set__MinIInterval(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.MinIInterval = v
	return t
}

// SetV__MinIInterval updates property "MinIInterval".
func (t AWS_MediaLive_Channel_H264Settings) SetV__MinIInterval(v int32) AWS_MediaLive_Channel_H264Settings {
	t.MinIInterval = cfz.V(v)
	return t
}

// Set__MinQp updates property "MinQp".
func (t AWS_MediaLive_Channel_H264Settings) Set__MinQp(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.MinQp = v
	return t
}

// SetV__MinQp updates property "MinQp".
func (t AWS_MediaLive_Channel_H264Settings) SetV__MinQp(v int32) AWS_MediaLive_Channel_H264Settings {
	t.MinQp = cfz.V(v)
	return t
}

// Set__NumRefFrames updates property "NumRefFrames".
func (t AWS_MediaLive_Channel_H264Settings) Set__NumRefFrames(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.NumRefFrames = v
	return t
}

// SetV__NumRefFrames updates property "NumRefFrames".
func (t AWS_MediaLive_Channel_H264Settings) SetV__NumRefFrames(v int32) AWS_MediaLive_Channel_H264Settings {
	t.NumRefFrames = cfz.V(v)
	return t
}

// Set__ParControl updates property "ParControl".
func (t AWS_MediaLive_Channel_H264Settings) Set__ParControl(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.ParControl = v
	return t
}

// SetV__ParControl updates property "ParControl".
func (t AWS_MediaLive_Channel_H264Settings) SetV__ParControl(v string) AWS_MediaLive_Channel_H264Settings {
	t.ParControl = cfz.V(v)
	return t
}

// Set__ParDenominator updates property "ParDenominator".
func (t AWS_MediaLive_Channel_H264Settings) Set__ParDenominator(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.ParDenominator = v
	return t
}

// SetV__ParDenominator updates property "ParDenominator".
func (t AWS_MediaLive_Channel_H264Settings) SetV__ParDenominator(v int32) AWS_MediaLive_Channel_H264Settings {
	t.ParDenominator = cfz.V(v)
	return t
}

// Set__ParNumerator updates property "ParNumerator".
func (t AWS_MediaLive_Channel_H264Settings) Set__ParNumerator(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.ParNumerator = v
	return t
}

// SetV__ParNumerator updates property "ParNumerator".
func (t AWS_MediaLive_Channel_H264Settings) SetV__ParNumerator(v int32) AWS_MediaLive_Channel_H264Settings {
	t.ParNumerator = cfz.V(v)
	return t
}

// Set__Profile updates property "Profile".
func (t AWS_MediaLive_Channel_H264Settings) Set__Profile(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.Profile = v
	return t
}

// SetV__Profile updates property "Profile".
func (t AWS_MediaLive_Channel_H264Settings) SetV__Profile(v string) AWS_MediaLive_Channel_H264Settings {
	t.Profile = cfz.V(v)
	return t
}

// Set__QualityLevel updates property "QualityLevel".
func (t AWS_MediaLive_Channel_H264Settings) Set__QualityLevel(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.QualityLevel = v
	return t
}

// SetV__QualityLevel updates property "QualityLevel".
func (t AWS_MediaLive_Channel_H264Settings) SetV__QualityLevel(v string) AWS_MediaLive_Channel_H264Settings {
	t.QualityLevel = cfz.V(v)
	return t
}

// Set__QvbrQualityLevel updates property "QvbrQualityLevel".
func (t AWS_MediaLive_Channel_H264Settings) Set__QvbrQualityLevel(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.QvbrQualityLevel = v
	return t
}

// SetV__QvbrQualityLevel updates property "QvbrQualityLevel".
func (t AWS_MediaLive_Channel_H264Settings) SetV__QvbrQualityLevel(v int32) AWS_MediaLive_Channel_H264Settings {
	t.QvbrQualityLevel = cfz.V(v)
	return t
}

// Set__RateControlMode updates property "RateControlMode".
func (t AWS_MediaLive_Channel_H264Settings) Set__RateControlMode(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.RateControlMode = v
	return t
}

// SetV__RateControlMode updates property "RateControlMode".
func (t AWS_MediaLive_Channel_H264Settings) SetV__RateControlMode(v string) AWS_MediaLive_Channel_H264Settings {
	t.RateControlMode = cfz.V(v)
	return t
}

// Set__ScanType updates property "ScanType".
func (t AWS_MediaLive_Channel_H264Settings) Set__ScanType(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.ScanType = v
	return t
}

// SetV__ScanType updates property "ScanType".
func (t AWS_MediaLive_Channel_H264Settings) SetV__ScanType(v string) AWS_MediaLive_Channel_H264Settings {
	t.ScanType = cfz.V(v)
	return t
}

// Set__SceneChangeDetect updates property "SceneChangeDetect".
func (t AWS_MediaLive_Channel_H264Settings) Set__SceneChangeDetect(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.SceneChangeDetect = v
	return t
}

// SetV__SceneChangeDetect updates property "SceneChangeDetect".
func (t AWS_MediaLive_Channel_H264Settings) SetV__SceneChangeDetect(v string) AWS_MediaLive_Channel_H264Settings {
	t.SceneChangeDetect = cfz.V(v)
	return t
}

// Set__Slices updates property "Slices".
func (t AWS_MediaLive_Channel_H264Settings) Set__Slices(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.Slices = v
	return t
}

// SetV__Slices updates property "Slices".
func (t AWS_MediaLive_Channel_H264Settings) SetV__Slices(v int32) AWS_MediaLive_Channel_H264Settings {
	t.Slices = cfz.V(v)
	return t
}

// Set__Softness updates property "Softness".
func (t AWS_MediaLive_Channel_H264Settings) Set__Softness(v cfz.Expression[int32]) AWS_MediaLive_Channel_H264Settings {
	t.Softness = v
	return t
}

// SetV__Softness updates property "Softness".
func (t AWS_MediaLive_Channel_H264Settings) SetV__Softness(v int32) AWS_MediaLive_Channel_H264Settings {
	t.Softness = cfz.V(v)
	return t
}

// Set__SpatialAq updates property "SpatialAq".
func (t AWS_MediaLive_Channel_H264Settings) Set__SpatialAq(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.SpatialAq = v
	return t
}

// SetV__SpatialAq updates property "SpatialAq".
func (t AWS_MediaLive_Channel_H264Settings) SetV__SpatialAq(v string) AWS_MediaLive_Channel_H264Settings {
	t.SpatialAq = cfz.V(v)
	return t
}

// Set__SubgopLength updates property "SubgopLength".
func (t AWS_MediaLive_Channel_H264Settings) Set__SubgopLength(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.SubgopLength = v
	return t
}

// SetV__SubgopLength updates property "SubgopLength".
func (t AWS_MediaLive_Channel_H264Settings) SetV__SubgopLength(v string) AWS_MediaLive_Channel_H264Settings {
	t.SubgopLength = cfz.V(v)
	return t
}

// Set__Syntax updates property "Syntax".
func (t AWS_MediaLive_Channel_H264Settings) Set__Syntax(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.Syntax = v
	return t
}

// SetV__Syntax updates property "Syntax".
func (t AWS_MediaLive_Channel_H264Settings) SetV__Syntax(v string) AWS_MediaLive_Channel_H264Settings {
	t.Syntax = cfz.V(v)
	return t
}

// Set__TemporalAq updates property "TemporalAq".
func (t AWS_MediaLive_Channel_H264Settings) Set__TemporalAq(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.TemporalAq = v
	return t
}

// SetV__TemporalAq updates property "TemporalAq".
func (t AWS_MediaLive_Channel_H264Settings) SetV__TemporalAq(v string) AWS_MediaLive_Channel_H264Settings {
	t.TemporalAq = cfz.V(v)
	return t
}

// Set__TimecodeBurninSettings updates property "TimecodeBurninSettings".
func (t AWS_MediaLive_Channel_H264Settings) Set__TimecodeBurninSettings(v cfz.Expression[AWS_MediaLive_Channel_TimecodeBurninSettings]) AWS_MediaLive_Channel_H264Settings {
	t.TimecodeBurninSettings = v
	return t
}

// SetV__TimecodeBurninSettings updates property "TimecodeBurninSettings".
func (t AWS_MediaLive_Channel_H264Settings) SetV__TimecodeBurninSettings(v AWS_MediaLive_Channel_TimecodeBurninSettings) AWS_MediaLive_Channel_H264Settings {
	t.TimecodeBurninSettings = cfz.V(v)
	return t
}

// Set__TimecodeInsertion updates property "TimecodeInsertion".
func (t AWS_MediaLive_Channel_H264Settings) Set__TimecodeInsertion(v cfz.Expression[string]) AWS_MediaLive_Channel_H264Settings {
	t.TimecodeInsertion = v
	return t
}

// SetV__TimecodeInsertion updates property "TimecodeInsertion".
func (t AWS_MediaLive_Channel_H264Settings) SetV__TimecodeInsertion(v string) AWS_MediaLive_Channel_H264Settings {
	t.TimecodeInsertion = cfz.V(v)
	return t
}
