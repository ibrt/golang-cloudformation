// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_medialive

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaLive_Channel_Av1Settings__Type is the CloudFormation type for AWS::MediaLive::Channel.Av1Settings.
	AWS_MediaLive_Channel_Av1Settings__Type = "AWS::MediaLive::Channel.Av1Settings"
)

var (
	// AWS_MediaLive_Channel_Av1Settings__PropertiesMap reports all the CloudFormation properties for AWS::MediaLive::Channel.Av1Settings.
	AWS_MediaLive_Channel_Av1Settings__PropertiesMap = struct {
		AfdSignaling           string
		BufSize                string
		ColorSpaceSettings     string
		FixedAfd               string
		FramerateDenominator   string
		FramerateNumerator     string
		GopSize                string
		GopSizeUnits           string
		Level                  string
		LookAheadRateControl   string
		MaxBitrate             string
		MinIInterval           string
		ParDenominator         string
		ParNumerator           string
		QvbrQualityLevel       string
		SceneChangeDetect      string
		TimecodeBurninSettings string
	}{
		AfdSignaling:           "AfdSignaling",
		BufSize:                "BufSize",
		ColorSpaceSettings:     "ColorSpaceSettings",
		FixedAfd:               "FixedAfd",
		FramerateDenominator:   "FramerateDenominator",
		FramerateNumerator:     "FramerateNumerator",
		GopSize:                "GopSize",
		GopSizeUnits:           "GopSizeUnits",
		Level:                  "Level",
		LookAheadRateControl:   "LookAheadRateControl",
		MaxBitrate:             "MaxBitrate",
		MinIInterval:           "MinIInterval",
		ParDenominator:         "ParDenominator",
		ParNumerator:           "ParNumerator",
		QvbrQualityLevel:       "QvbrQualityLevel",
		SceneChangeDetect:      "SceneChangeDetect",
		TimecodeBurninSettings: "TimecodeBurninSettings",
	}

	// AWS_MediaLive_Channel_Av1Settings__PropertiesSlice reports all the CloudFormation properties for AWS::MediaLive::Channel.Av1Settings.
	AWS_MediaLive_Channel_Av1Settings__PropertiesSlice = []string{
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.AfdSignaling,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.BufSize,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.ColorSpaceSettings,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.FixedAfd,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.FramerateDenominator,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.FramerateNumerator,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.GopSize,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.GopSizeUnits,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.Level,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.LookAheadRateControl,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.MaxBitrate,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.MinIInterval,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.ParDenominator,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.ParNumerator,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.QvbrQualityLevel,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.SceneChangeDetect,
		AWS_MediaLive_Channel_Av1Settings__PropertiesMap.TimecodeBurninSettings,
	}
)

// AWS_MediaLive_Channel_Av1Settings is a binding for AWS::MediaLive::Channel.Av1Settings.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html
type AWS_MediaLive_Channel_Av1Settings struct {
	// AfdSignaling is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-afdsignaling
	AfdSignaling cfz.Expression[string] `json:"AfdSignaling,omitempty"`

	// BufSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-bufsize
	BufSize cfz.Expression[int32] `json:"BufSize,omitempty"`

	// ColorSpaceSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-colorspacesettings
	ColorSpaceSettings cfz.Expression[AWS_MediaLive_Channel_Av1ColorSpaceSettings] `json:"ColorSpaceSettings,omitempty"`

	// FixedAfd is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-fixedafd
	FixedAfd cfz.Expression[string] `json:"FixedAfd,omitempty"`

	// FramerateDenominator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-frameratedenominator
	FramerateDenominator cfz.Expression[int32] `json:"FramerateDenominator,omitempty"`

	// FramerateNumerator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-frameratenumerator
	FramerateNumerator cfz.Expression[int32] `json:"FramerateNumerator,omitempty"`

	// GopSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-gopsize
	GopSize cfz.Expression[float64] `json:"GopSize,omitempty"`

	// GopSizeUnits is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-gopsizeunits
	GopSizeUnits cfz.Expression[string] `json:"GopSizeUnits,omitempty"`

	// Level is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-level
	Level cfz.Expression[string] `json:"Level,omitempty"`

	// LookAheadRateControl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-lookaheadratecontrol
	LookAheadRateControl cfz.Expression[string] `json:"LookAheadRateControl,omitempty"`

	// MaxBitrate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-maxbitrate
	MaxBitrate cfz.Expression[int32] `json:"MaxBitrate,omitempty"`

	// MinIInterval is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-miniinterval
	MinIInterval cfz.Expression[int32] `json:"MinIInterval,omitempty"`

	// ParDenominator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-pardenominator
	ParDenominator cfz.Expression[int32] `json:"ParDenominator,omitempty"`

	// ParNumerator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-parnumerator
	ParNumerator cfz.Expression[int32] `json:"ParNumerator,omitempty"`

	// QvbrQualityLevel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-qvbrqualitylevel
	QvbrQualityLevel cfz.Expression[int32] `json:"QvbrQualityLevel,omitempty"`

	// SceneChangeDetect is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-scenechangedetect
	SceneChangeDetect cfz.Expression[string] `json:"SceneChangeDetect,omitempty"`

	// TimecodeBurninSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-av1settings.html#cfn-medialive-channel-av1settings-timecodeburninsettings
	TimecodeBurninSettings cfz.Expression[AWS_MediaLive_Channel_TimecodeBurninSettings] `json:"TimecodeBurninSettings,omitempty"`
}

// New__AWS_MediaLive_Channel_Av1Settings initializes a new AWS_MediaLive_Channel_Av1Settings.
func New__AWS_MediaLive_Channel_Av1Settings() AWS_MediaLive_Channel_Av1Settings {
	return AWS_MediaLive_Channel_Av1Settings{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaLive_Channel_Av1Settings) GetType() string {
	return AWS_MediaLive_Channel_Av1Settings__Type
}

// Set__AfdSignaling updates property "AfdSignaling".
func (t AWS_MediaLive_Channel_Av1Settings) Set__AfdSignaling(v cfz.Expression[string]) AWS_MediaLive_Channel_Av1Settings {
	t.AfdSignaling = v
	return t
}

// SetV__AfdSignaling updates property "AfdSignaling".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__AfdSignaling(v string) AWS_MediaLive_Channel_Av1Settings {
	t.AfdSignaling = cfz.V(v)
	return t
}

// Set__BufSize updates property "BufSize".
func (t AWS_MediaLive_Channel_Av1Settings) Set__BufSize(v cfz.Expression[int32]) AWS_MediaLive_Channel_Av1Settings {
	t.BufSize = v
	return t
}

// SetV__BufSize updates property "BufSize".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__BufSize(v int32) AWS_MediaLive_Channel_Av1Settings {
	t.BufSize = cfz.V(v)
	return t
}

// Set__ColorSpaceSettings updates property "ColorSpaceSettings".
func (t AWS_MediaLive_Channel_Av1Settings) Set__ColorSpaceSettings(v cfz.Expression[AWS_MediaLive_Channel_Av1ColorSpaceSettings]) AWS_MediaLive_Channel_Av1Settings {
	t.ColorSpaceSettings = v
	return t
}

// SetV__ColorSpaceSettings updates property "ColorSpaceSettings".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__ColorSpaceSettings(v AWS_MediaLive_Channel_Av1ColorSpaceSettings) AWS_MediaLive_Channel_Av1Settings {
	t.ColorSpaceSettings = cfz.V(v)
	return t
}

// Set__FixedAfd updates property "FixedAfd".
func (t AWS_MediaLive_Channel_Av1Settings) Set__FixedAfd(v cfz.Expression[string]) AWS_MediaLive_Channel_Av1Settings {
	t.FixedAfd = v
	return t
}

// SetV__FixedAfd updates property "FixedAfd".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__FixedAfd(v string) AWS_MediaLive_Channel_Av1Settings {
	t.FixedAfd = cfz.V(v)
	return t
}

// Set__FramerateDenominator updates property "FramerateDenominator".
func (t AWS_MediaLive_Channel_Av1Settings) Set__FramerateDenominator(v cfz.Expression[int32]) AWS_MediaLive_Channel_Av1Settings {
	t.FramerateDenominator = v
	return t
}

// SetV__FramerateDenominator updates property "FramerateDenominator".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__FramerateDenominator(v int32) AWS_MediaLive_Channel_Av1Settings {
	t.FramerateDenominator = cfz.V(v)
	return t
}

// Set__FramerateNumerator updates property "FramerateNumerator".
func (t AWS_MediaLive_Channel_Av1Settings) Set__FramerateNumerator(v cfz.Expression[int32]) AWS_MediaLive_Channel_Av1Settings {
	t.FramerateNumerator = v
	return t
}

// SetV__FramerateNumerator updates property "FramerateNumerator".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__FramerateNumerator(v int32) AWS_MediaLive_Channel_Av1Settings {
	t.FramerateNumerator = cfz.V(v)
	return t
}

// Set__GopSize updates property "GopSize".
func (t AWS_MediaLive_Channel_Av1Settings) Set__GopSize(v cfz.Expression[float64]) AWS_MediaLive_Channel_Av1Settings {
	t.GopSize = v
	return t
}

// SetV__GopSize updates property "GopSize".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__GopSize(v float64) AWS_MediaLive_Channel_Av1Settings {
	t.GopSize = cfz.V(v)
	return t
}

// Set__GopSizeUnits updates property "GopSizeUnits".
func (t AWS_MediaLive_Channel_Av1Settings) Set__GopSizeUnits(v cfz.Expression[string]) AWS_MediaLive_Channel_Av1Settings {
	t.GopSizeUnits = v
	return t
}

// SetV__GopSizeUnits updates property "GopSizeUnits".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__GopSizeUnits(v string) AWS_MediaLive_Channel_Av1Settings {
	t.GopSizeUnits = cfz.V(v)
	return t
}

// Set__Level updates property "Level".
func (t AWS_MediaLive_Channel_Av1Settings) Set__Level(v cfz.Expression[string]) AWS_MediaLive_Channel_Av1Settings {
	t.Level = v
	return t
}

// SetV__Level updates property "Level".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__Level(v string) AWS_MediaLive_Channel_Av1Settings {
	t.Level = cfz.V(v)
	return t
}

// Set__LookAheadRateControl updates property "LookAheadRateControl".
func (t AWS_MediaLive_Channel_Av1Settings) Set__LookAheadRateControl(v cfz.Expression[string]) AWS_MediaLive_Channel_Av1Settings {
	t.LookAheadRateControl = v
	return t
}

// SetV__LookAheadRateControl updates property "LookAheadRateControl".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__LookAheadRateControl(v string) AWS_MediaLive_Channel_Av1Settings {
	t.LookAheadRateControl = cfz.V(v)
	return t
}

// Set__MaxBitrate updates property "MaxBitrate".
func (t AWS_MediaLive_Channel_Av1Settings) Set__MaxBitrate(v cfz.Expression[int32]) AWS_MediaLive_Channel_Av1Settings {
	t.MaxBitrate = v
	return t
}

// SetV__MaxBitrate updates property "MaxBitrate".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__MaxBitrate(v int32) AWS_MediaLive_Channel_Av1Settings {
	t.MaxBitrate = cfz.V(v)
	return t
}

// Set__MinIInterval updates property "MinIInterval".
func (t AWS_MediaLive_Channel_Av1Settings) Set__MinIInterval(v cfz.Expression[int32]) AWS_MediaLive_Channel_Av1Settings {
	t.MinIInterval = v
	return t
}

// SetV__MinIInterval updates property "MinIInterval".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__MinIInterval(v int32) AWS_MediaLive_Channel_Av1Settings {
	t.MinIInterval = cfz.V(v)
	return t
}

// Set__ParDenominator updates property "ParDenominator".
func (t AWS_MediaLive_Channel_Av1Settings) Set__ParDenominator(v cfz.Expression[int32]) AWS_MediaLive_Channel_Av1Settings {
	t.ParDenominator = v
	return t
}

// SetV__ParDenominator updates property "ParDenominator".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__ParDenominator(v int32) AWS_MediaLive_Channel_Av1Settings {
	t.ParDenominator = cfz.V(v)
	return t
}

// Set__ParNumerator updates property "ParNumerator".
func (t AWS_MediaLive_Channel_Av1Settings) Set__ParNumerator(v cfz.Expression[int32]) AWS_MediaLive_Channel_Av1Settings {
	t.ParNumerator = v
	return t
}

// SetV__ParNumerator updates property "ParNumerator".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__ParNumerator(v int32) AWS_MediaLive_Channel_Av1Settings {
	t.ParNumerator = cfz.V(v)
	return t
}

// Set__QvbrQualityLevel updates property "QvbrQualityLevel".
func (t AWS_MediaLive_Channel_Av1Settings) Set__QvbrQualityLevel(v cfz.Expression[int32]) AWS_MediaLive_Channel_Av1Settings {
	t.QvbrQualityLevel = v
	return t
}

// SetV__QvbrQualityLevel updates property "QvbrQualityLevel".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__QvbrQualityLevel(v int32) AWS_MediaLive_Channel_Av1Settings {
	t.QvbrQualityLevel = cfz.V(v)
	return t
}

// Set__SceneChangeDetect updates property "SceneChangeDetect".
func (t AWS_MediaLive_Channel_Av1Settings) Set__SceneChangeDetect(v cfz.Expression[string]) AWS_MediaLive_Channel_Av1Settings {
	t.SceneChangeDetect = v
	return t
}

// SetV__SceneChangeDetect updates property "SceneChangeDetect".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__SceneChangeDetect(v string) AWS_MediaLive_Channel_Av1Settings {
	t.SceneChangeDetect = cfz.V(v)
	return t
}

// Set__TimecodeBurninSettings updates property "TimecodeBurninSettings".
func (t AWS_MediaLive_Channel_Av1Settings) Set__TimecodeBurninSettings(v cfz.Expression[AWS_MediaLive_Channel_TimecodeBurninSettings]) AWS_MediaLive_Channel_Av1Settings {
	t.TimecodeBurninSettings = v
	return t
}

// SetV__TimecodeBurninSettings updates property "TimecodeBurninSettings".
func (t AWS_MediaLive_Channel_Av1Settings) SetV__TimecodeBurninSettings(v AWS_MediaLive_Channel_TimecodeBurninSettings) AWS_MediaLive_Channel_Av1Settings {
	t.TimecodeBurninSettings = cfz.V(v)
	return t
}
