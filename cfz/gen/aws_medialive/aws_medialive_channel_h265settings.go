// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_medialive

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaLive_Channel_H265Settings__Type is the CloudFormation type for AWS::MediaLive::Channel.H265Settings.
	AWS_MediaLive_Channel_H265Settings__Type = "AWS::MediaLive::Channel.H265Settings"
)

var (
	// AWS_MediaLive_Channel_H265Settings__PropertiesMap reports all the CloudFormation properties for AWS::MediaLive::Channel.H265Settings.
	AWS_MediaLive_Channel_H265Settings__PropertiesMap = struct {
		AdaptiveQuantization        string
		AfdSignaling                string
		AlternativeTransferFunction string
		Bitrate                     string
		BufSize                     string
		ColorMetadata               string
		ColorSpaceSettings          string
		FilterSettings              string
		FixedAfd                    string
		FlickerAq                   string
		FramerateDenominator        string
		FramerateNumerator          string
		GopClosedCadence            string
		GopSize                     string
		GopSizeUnits                string
		Level                       string
		LookAheadRateControl        string
		MaxBitrate                  string
		MinIInterval                string
		MinQp                       string
		MvOverPictureBoundaries     string
		MvTemporalPredictor         string
		ParDenominator              string
		ParNumerator                string
		Profile                     string
		QvbrQualityLevel            string
		RateControlMode             string
		ScanType                    string
		SceneChangeDetect           string
		Slices                      string
		Tier                        string
		TileHeight                  string
		TilePadding                 string
		TileWidth                   string
		TimecodeBurninSettings      string
		TimecodeInsertion           string
		TreeblockSize               string
	}{
		AdaptiveQuantization:        "AdaptiveQuantization",
		AfdSignaling:                "AfdSignaling",
		AlternativeTransferFunction: "AlternativeTransferFunction",
		Bitrate:                     "Bitrate",
		BufSize:                     "BufSize",
		ColorMetadata:               "ColorMetadata",
		ColorSpaceSettings:          "ColorSpaceSettings",
		FilterSettings:              "FilterSettings",
		FixedAfd:                    "FixedAfd",
		FlickerAq:                   "FlickerAq",
		FramerateDenominator:        "FramerateDenominator",
		FramerateNumerator:          "FramerateNumerator",
		GopClosedCadence:            "GopClosedCadence",
		GopSize:                     "GopSize",
		GopSizeUnits:                "GopSizeUnits",
		Level:                       "Level",
		LookAheadRateControl:        "LookAheadRateControl",
		MaxBitrate:                  "MaxBitrate",
		MinIInterval:                "MinIInterval",
		MinQp:                       "MinQp",
		MvOverPictureBoundaries:     "MvOverPictureBoundaries",
		MvTemporalPredictor:         "MvTemporalPredictor",
		ParDenominator:              "ParDenominator",
		ParNumerator:                "ParNumerator",
		Profile:                     "Profile",
		QvbrQualityLevel:            "QvbrQualityLevel",
		RateControlMode:             "RateControlMode",
		ScanType:                    "ScanType",
		SceneChangeDetect:           "SceneChangeDetect",
		Slices:                      "Slices",
		Tier:                        "Tier",
		TileHeight:                  "TileHeight",
		TilePadding:                 "TilePadding",
		TileWidth:                   "TileWidth",
		TimecodeBurninSettings:      "TimecodeBurninSettings",
		TimecodeInsertion:           "TimecodeInsertion",
		TreeblockSize:               "TreeblockSize",
	}

	// AWS_MediaLive_Channel_H265Settings__PropertiesSlice reports all the CloudFormation properties for AWS::MediaLive::Channel.H265Settings.
	AWS_MediaLive_Channel_H265Settings__PropertiesSlice = []string{
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.AdaptiveQuantization,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.AfdSignaling,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.AlternativeTransferFunction,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.Bitrate,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.BufSize,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.ColorMetadata,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.ColorSpaceSettings,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.FilterSettings,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.FixedAfd,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.FlickerAq,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.FramerateDenominator,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.FramerateNumerator,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.GopClosedCadence,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.GopSize,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.GopSizeUnits,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.Level,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.LookAheadRateControl,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.MaxBitrate,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.MinIInterval,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.MinQp,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.MvOverPictureBoundaries,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.MvTemporalPredictor,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.ParDenominator,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.ParNumerator,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.Profile,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.QvbrQualityLevel,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.RateControlMode,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.ScanType,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.SceneChangeDetect,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.Slices,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.Tier,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.TileHeight,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.TilePadding,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.TileWidth,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.TimecodeBurninSettings,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.TimecodeInsertion,
		AWS_MediaLive_Channel_H265Settings__PropertiesMap.TreeblockSize,
	}
)

// AWS_MediaLive_Channel_H265Settings is a binding for AWS::MediaLive::Channel.H265Settings.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html
type AWS_MediaLive_Channel_H265Settings struct {
	// AdaptiveQuantization is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-adaptivequantization
	AdaptiveQuantization cfz.Expression[string] `json:"AdaptiveQuantization,omitempty"`

	// AfdSignaling is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-afdsignaling
	AfdSignaling cfz.Expression[string] `json:"AfdSignaling,omitempty"`

	// AlternativeTransferFunction is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-alternativetransferfunction
	AlternativeTransferFunction cfz.Expression[string] `json:"AlternativeTransferFunction,omitempty"`

	// Bitrate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-bitrate
	Bitrate cfz.Expression[int32] `json:"Bitrate,omitempty"`

	// BufSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-bufsize
	BufSize cfz.Expression[int32] `json:"BufSize,omitempty"`

	// ColorMetadata is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-colormetadata
	ColorMetadata cfz.Expression[string] `json:"ColorMetadata,omitempty"`

	// ColorSpaceSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-colorspacesettings
	ColorSpaceSettings cfz.Expression[AWS_MediaLive_Channel_H265ColorSpaceSettings] `json:"ColorSpaceSettings,omitempty"`

	// FilterSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-filtersettings
	FilterSettings cfz.Expression[AWS_MediaLive_Channel_H265FilterSettings] `json:"FilterSettings,omitempty"`

	// FixedAfd is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-fixedafd
	FixedAfd cfz.Expression[string] `json:"FixedAfd,omitempty"`

	// FlickerAq is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-flickeraq
	FlickerAq cfz.Expression[string] `json:"FlickerAq,omitempty"`

	// FramerateDenominator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-frameratedenominator
	FramerateDenominator cfz.Expression[int32] `json:"FramerateDenominator,omitempty"`

	// FramerateNumerator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-frameratenumerator
	FramerateNumerator cfz.Expression[int32] `json:"FramerateNumerator,omitempty"`

	// GopClosedCadence is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-gopclosedcadence
	GopClosedCadence cfz.Expression[int32] `json:"GopClosedCadence,omitempty"`

	// GopSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-gopsize
	GopSize cfz.Expression[float64] `json:"GopSize,omitempty"`

	// GopSizeUnits is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-gopsizeunits
	GopSizeUnits cfz.Expression[string] `json:"GopSizeUnits,omitempty"`

	// Level is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-level
	Level cfz.Expression[string] `json:"Level,omitempty"`

	// LookAheadRateControl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-lookaheadratecontrol
	LookAheadRateControl cfz.Expression[string] `json:"LookAheadRateControl,omitempty"`

	// MaxBitrate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-maxbitrate
	MaxBitrate cfz.Expression[int32] `json:"MaxBitrate,omitempty"`

	// MinIInterval is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-miniinterval
	MinIInterval cfz.Expression[int32] `json:"MinIInterval,omitempty"`

	// MinQp is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-minqp
	MinQp cfz.Expression[int32] `json:"MinQp,omitempty"`

	// MvOverPictureBoundaries is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-mvoverpictureboundaries
	MvOverPictureBoundaries cfz.Expression[string] `json:"MvOverPictureBoundaries,omitempty"`

	// MvTemporalPredictor is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-mvtemporalpredictor
	MvTemporalPredictor cfz.Expression[string] `json:"MvTemporalPredictor,omitempty"`

	// ParDenominator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-pardenominator
	ParDenominator cfz.Expression[int32] `json:"ParDenominator,omitempty"`

	// ParNumerator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-parnumerator
	ParNumerator cfz.Expression[int32] `json:"ParNumerator,omitempty"`

	// Profile is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-profile
	Profile cfz.Expression[string] `json:"Profile,omitempty"`

	// QvbrQualityLevel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-qvbrqualitylevel
	QvbrQualityLevel cfz.Expression[int32] `json:"QvbrQualityLevel,omitempty"`

	// RateControlMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-ratecontrolmode
	RateControlMode cfz.Expression[string] `json:"RateControlMode,omitempty"`

	// ScanType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-scantype
	ScanType cfz.Expression[string] `json:"ScanType,omitempty"`

	// SceneChangeDetect is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-scenechangedetect
	SceneChangeDetect cfz.Expression[string] `json:"SceneChangeDetect,omitempty"`

	// Slices is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-slices
	Slices cfz.Expression[int32] `json:"Slices,omitempty"`

	// Tier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-tier
	Tier cfz.Expression[string] `json:"Tier,omitempty"`

	// TileHeight is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-tileheight
	TileHeight cfz.Expression[int32] `json:"TileHeight,omitempty"`

	// TilePadding is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-tilepadding
	TilePadding cfz.Expression[string] `json:"TilePadding,omitempty"`

	// TileWidth is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-tilewidth
	TileWidth cfz.Expression[int32] `json:"TileWidth,omitempty"`

	// TimecodeBurninSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-timecodeburninsettings
	TimecodeBurninSettings cfz.Expression[AWS_MediaLive_Channel_TimecodeBurninSettings] `json:"TimecodeBurninSettings,omitempty"`

	// TimecodeInsertion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-timecodeinsertion
	TimecodeInsertion cfz.Expression[string] `json:"TimecodeInsertion,omitempty"`

	// TreeblockSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-h265settings.html#cfn-medialive-channel-h265settings-treeblocksize
	TreeblockSize cfz.Expression[string] `json:"TreeblockSize,omitempty"`
}

// New__AWS_MediaLive_Channel_H265Settings initializes a new AWS_MediaLive_Channel_H265Settings.
func New__AWS_MediaLive_Channel_H265Settings() AWS_MediaLive_Channel_H265Settings {
	return AWS_MediaLive_Channel_H265Settings{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaLive_Channel_H265Settings) GetType() string {
	return AWS_MediaLive_Channel_H265Settings__Type
}

// Set__AdaptiveQuantization updates property "AdaptiveQuantization".
func (t AWS_MediaLive_Channel_H265Settings) Set__AdaptiveQuantization(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.AdaptiveQuantization = v
	return t
}

// SetV__AdaptiveQuantization updates property "AdaptiveQuantization".
func (t AWS_MediaLive_Channel_H265Settings) SetV__AdaptiveQuantization(v string) AWS_MediaLive_Channel_H265Settings {
	t.AdaptiveQuantization = cfz.V(v)
	return t
}

// Set__AfdSignaling updates property "AfdSignaling".
func (t AWS_MediaLive_Channel_H265Settings) Set__AfdSignaling(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.AfdSignaling = v
	return t
}

// SetV__AfdSignaling updates property "AfdSignaling".
func (t AWS_MediaLive_Channel_H265Settings) SetV__AfdSignaling(v string) AWS_MediaLive_Channel_H265Settings {
	t.AfdSignaling = cfz.V(v)
	return t
}

// Set__AlternativeTransferFunction updates property "AlternativeTransferFunction".
func (t AWS_MediaLive_Channel_H265Settings) Set__AlternativeTransferFunction(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.AlternativeTransferFunction = v
	return t
}

// SetV__AlternativeTransferFunction updates property "AlternativeTransferFunction".
func (t AWS_MediaLive_Channel_H265Settings) SetV__AlternativeTransferFunction(v string) AWS_MediaLive_Channel_H265Settings {
	t.AlternativeTransferFunction = cfz.V(v)
	return t
}

// Set__Bitrate updates property "Bitrate".
func (t AWS_MediaLive_Channel_H265Settings) Set__Bitrate(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.Bitrate = v
	return t
}

// SetV__Bitrate updates property "Bitrate".
func (t AWS_MediaLive_Channel_H265Settings) SetV__Bitrate(v int32) AWS_MediaLive_Channel_H265Settings {
	t.Bitrate = cfz.V(v)
	return t
}

// Set__BufSize updates property "BufSize".
func (t AWS_MediaLive_Channel_H265Settings) Set__BufSize(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.BufSize = v
	return t
}

// SetV__BufSize updates property "BufSize".
func (t AWS_MediaLive_Channel_H265Settings) SetV__BufSize(v int32) AWS_MediaLive_Channel_H265Settings {
	t.BufSize = cfz.V(v)
	return t
}

// Set__ColorMetadata updates property "ColorMetadata".
func (t AWS_MediaLive_Channel_H265Settings) Set__ColorMetadata(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.ColorMetadata = v
	return t
}

// SetV__ColorMetadata updates property "ColorMetadata".
func (t AWS_MediaLive_Channel_H265Settings) SetV__ColorMetadata(v string) AWS_MediaLive_Channel_H265Settings {
	t.ColorMetadata = cfz.V(v)
	return t
}

// Set__ColorSpaceSettings updates property "ColorSpaceSettings".
func (t AWS_MediaLive_Channel_H265Settings) Set__ColorSpaceSettings(v cfz.Expression[AWS_MediaLive_Channel_H265ColorSpaceSettings]) AWS_MediaLive_Channel_H265Settings {
	t.ColorSpaceSettings = v
	return t
}

// SetV__ColorSpaceSettings updates property "ColorSpaceSettings".
func (t AWS_MediaLive_Channel_H265Settings) SetV__ColorSpaceSettings(v AWS_MediaLive_Channel_H265ColorSpaceSettings) AWS_MediaLive_Channel_H265Settings {
	t.ColorSpaceSettings = cfz.V(v)
	return t
}

// Set__FilterSettings updates property "FilterSettings".
func (t AWS_MediaLive_Channel_H265Settings) Set__FilterSettings(v cfz.Expression[AWS_MediaLive_Channel_H265FilterSettings]) AWS_MediaLive_Channel_H265Settings {
	t.FilterSettings = v
	return t
}

// SetV__FilterSettings updates property "FilterSettings".
func (t AWS_MediaLive_Channel_H265Settings) SetV__FilterSettings(v AWS_MediaLive_Channel_H265FilterSettings) AWS_MediaLive_Channel_H265Settings {
	t.FilterSettings = cfz.V(v)
	return t
}

// Set__FixedAfd updates property "FixedAfd".
func (t AWS_MediaLive_Channel_H265Settings) Set__FixedAfd(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.FixedAfd = v
	return t
}

// SetV__FixedAfd updates property "FixedAfd".
func (t AWS_MediaLive_Channel_H265Settings) SetV__FixedAfd(v string) AWS_MediaLive_Channel_H265Settings {
	t.FixedAfd = cfz.V(v)
	return t
}

// Set__FlickerAq updates property "FlickerAq".
func (t AWS_MediaLive_Channel_H265Settings) Set__FlickerAq(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.FlickerAq = v
	return t
}

// SetV__FlickerAq updates property "FlickerAq".
func (t AWS_MediaLive_Channel_H265Settings) SetV__FlickerAq(v string) AWS_MediaLive_Channel_H265Settings {
	t.FlickerAq = cfz.V(v)
	return t
}

// Set__FramerateDenominator updates property "FramerateDenominator".
func (t AWS_MediaLive_Channel_H265Settings) Set__FramerateDenominator(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.FramerateDenominator = v
	return t
}

// SetV__FramerateDenominator updates property "FramerateDenominator".
func (t AWS_MediaLive_Channel_H265Settings) SetV__FramerateDenominator(v int32) AWS_MediaLive_Channel_H265Settings {
	t.FramerateDenominator = cfz.V(v)
	return t
}

// Set__FramerateNumerator updates property "FramerateNumerator".
func (t AWS_MediaLive_Channel_H265Settings) Set__FramerateNumerator(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.FramerateNumerator = v
	return t
}

// SetV__FramerateNumerator updates property "FramerateNumerator".
func (t AWS_MediaLive_Channel_H265Settings) SetV__FramerateNumerator(v int32) AWS_MediaLive_Channel_H265Settings {
	t.FramerateNumerator = cfz.V(v)
	return t
}

// Set__GopClosedCadence updates property "GopClosedCadence".
func (t AWS_MediaLive_Channel_H265Settings) Set__GopClosedCadence(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.GopClosedCadence = v
	return t
}

// SetV__GopClosedCadence updates property "GopClosedCadence".
func (t AWS_MediaLive_Channel_H265Settings) SetV__GopClosedCadence(v int32) AWS_MediaLive_Channel_H265Settings {
	t.GopClosedCadence = cfz.V(v)
	return t
}

// Set__GopSize updates property "GopSize".
func (t AWS_MediaLive_Channel_H265Settings) Set__GopSize(v cfz.Expression[float64]) AWS_MediaLive_Channel_H265Settings {
	t.GopSize = v
	return t
}

// SetV__GopSize updates property "GopSize".
func (t AWS_MediaLive_Channel_H265Settings) SetV__GopSize(v float64) AWS_MediaLive_Channel_H265Settings {
	t.GopSize = cfz.V(v)
	return t
}

// Set__GopSizeUnits updates property "GopSizeUnits".
func (t AWS_MediaLive_Channel_H265Settings) Set__GopSizeUnits(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.GopSizeUnits = v
	return t
}

// SetV__GopSizeUnits updates property "GopSizeUnits".
func (t AWS_MediaLive_Channel_H265Settings) SetV__GopSizeUnits(v string) AWS_MediaLive_Channel_H265Settings {
	t.GopSizeUnits = cfz.V(v)
	return t
}

// Set__Level updates property "Level".
func (t AWS_MediaLive_Channel_H265Settings) Set__Level(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.Level = v
	return t
}

// SetV__Level updates property "Level".
func (t AWS_MediaLive_Channel_H265Settings) SetV__Level(v string) AWS_MediaLive_Channel_H265Settings {
	t.Level = cfz.V(v)
	return t
}

// Set__LookAheadRateControl updates property "LookAheadRateControl".
func (t AWS_MediaLive_Channel_H265Settings) Set__LookAheadRateControl(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.LookAheadRateControl = v
	return t
}

// SetV__LookAheadRateControl updates property "LookAheadRateControl".
func (t AWS_MediaLive_Channel_H265Settings) SetV__LookAheadRateControl(v string) AWS_MediaLive_Channel_H265Settings {
	t.LookAheadRateControl = cfz.V(v)
	return t
}

// Set__MaxBitrate updates property "MaxBitrate".
func (t AWS_MediaLive_Channel_H265Settings) Set__MaxBitrate(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.MaxBitrate = v
	return t
}

// SetV__MaxBitrate updates property "MaxBitrate".
func (t AWS_MediaLive_Channel_H265Settings) SetV__MaxBitrate(v int32) AWS_MediaLive_Channel_H265Settings {
	t.MaxBitrate = cfz.V(v)
	return t
}

// Set__MinIInterval updates property "MinIInterval".
func (t AWS_MediaLive_Channel_H265Settings) Set__MinIInterval(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.MinIInterval = v
	return t
}

// SetV__MinIInterval updates property "MinIInterval".
func (t AWS_MediaLive_Channel_H265Settings) SetV__MinIInterval(v int32) AWS_MediaLive_Channel_H265Settings {
	t.MinIInterval = cfz.V(v)
	return t
}

// Set__MinQp updates property "MinQp".
func (t AWS_MediaLive_Channel_H265Settings) Set__MinQp(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.MinQp = v
	return t
}

// SetV__MinQp updates property "MinQp".
func (t AWS_MediaLive_Channel_H265Settings) SetV__MinQp(v int32) AWS_MediaLive_Channel_H265Settings {
	t.MinQp = cfz.V(v)
	return t
}

// Set__MvOverPictureBoundaries updates property "MvOverPictureBoundaries".
func (t AWS_MediaLive_Channel_H265Settings) Set__MvOverPictureBoundaries(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.MvOverPictureBoundaries = v
	return t
}

// SetV__MvOverPictureBoundaries updates property "MvOverPictureBoundaries".
func (t AWS_MediaLive_Channel_H265Settings) SetV__MvOverPictureBoundaries(v string) AWS_MediaLive_Channel_H265Settings {
	t.MvOverPictureBoundaries = cfz.V(v)
	return t
}

// Set__MvTemporalPredictor updates property "MvTemporalPredictor".
func (t AWS_MediaLive_Channel_H265Settings) Set__MvTemporalPredictor(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.MvTemporalPredictor = v
	return t
}

// SetV__MvTemporalPredictor updates property "MvTemporalPredictor".
func (t AWS_MediaLive_Channel_H265Settings) SetV__MvTemporalPredictor(v string) AWS_MediaLive_Channel_H265Settings {
	t.MvTemporalPredictor = cfz.V(v)
	return t
}

// Set__ParDenominator updates property "ParDenominator".
func (t AWS_MediaLive_Channel_H265Settings) Set__ParDenominator(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.ParDenominator = v
	return t
}

// SetV__ParDenominator updates property "ParDenominator".
func (t AWS_MediaLive_Channel_H265Settings) SetV__ParDenominator(v int32) AWS_MediaLive_Channel_H265Settings {
	t.ParDenominator = cfz.V(v)
	return t
}

// Set__ParNumerator updates property "ParNumerator".
func (t AWS_MediaLive_Channel_H265Settings) Set__ParNumerator(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.ParNumerator = v
	return t
}

// SetV__ParNumerator updates property "ParNumerator".
func (t AWS_MediaLive_Channel_H265Settings) SetV__ParNumerator(v int32) AWS_MediaLive_Channel_H265Settings {
	t.ParNumerator = cfz.V(v)
	return t
}

// Set__Profile updates property "Profile".
func (t AWS_MediaLive_Channel_H265Settings) Set__Profile(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.Profile = v
	return t
}

// SetV__Profile updates property "Profile".
func (t AWS_MediaLive_Channel_H265Settings) SetV__Profile(v string) AWS_MediaLive_Channel_H265Settings {
	t.Profile = cfz.V(v)
	return t
}

// Set__QvbrQualityLevel updates property "QvbrQualityLevel".
func (t AWS_MediaLive_Channel_H265Settings) Set__QvbrQualityLevel(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.QvbrQualityLevel = v
	return t
}

// SetV__QvbrQualityLevel updates property "QvbrQualityLevel".
func (t AWS_MediaLive_Channel_H265Settings) SetV__QvbrQualityLevel(v int32) AWS_MediaLive_Channel_H265Settings {
	t.QvbrQualityLevel = cfz.V(v)
	return t
}

// Set__RateControlMode updates property "RateControlMode".
func (t AWS_MediaLive_Channel_H265Settings) Set__RateControlMode(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.RateControlMode = v
	return t
}

// SetV__RateControlMode updates property "RateControlMode".
func (t AWS_MediaLive_Channel_H265Settings) SetV__RateControlMode(v string) AWS_MediaLive_Channel_H265Settings {
	t.RateControlMode = cfz.V(v)
	return t
}

// Set__ScanType updates property "ScanType".
func (t AWS_MediaLive_Channel_H265Settings) Set__ScanType(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.ScanType = v
	return t
}

// SetV__ScanType updates property "ScanType".
func (t AWS_MediaLive_Channel_H265Settings) SetV__ScanType(v string) AWS_MediaLive_Channel_H265Settings {
	t.ScanType = cfz.V(v)
	return t
}

// Set__SceneChangeDetect updates property "SceneChangeDetect".
func (t AWS_MediaLive_Channel_H265Settings) Set__SceneChangeDetect(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.SceneChangeDetect = v
	return t
}

// SetV__SceneChangeDetect updates property "SceneChangeDetect".
func (t AWS_MediaLive_Channel_H265Settings) SetV__SceneChangeDetect(v string) AWS_MediaLive_Channel_H265Settings {
	t.SceneChangeDetect = cfz.V(v)
	return t
}

// Set__Slices updates property "Slices".
func (t AWS_MediaLive_Channel_H265Settings) Set__Slices(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.Slices = v
	return t
}

// SetV__Slices updates property "Slices".
func (t AWS_MediaLive_Channel_H265Settings) SetV__Slices(v int32) AWS_MediaLive_Channel_H265Settings {
	t.Slices = cfz.V(v)
	return t
}

// Set__Tier updates property "Tier".
func (t AWS_MediaLive_Channel_H265Settings) Set__Tier(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.Tier = v
	return t
}

// SetV__Tier updates property "Tier".
func (t AWS_MediaLive_Channel_H265Settings) SetV__Tier(v string) AWS_MediaLive_Channel_H265Settings {
	t.Tier = cfz.V(v)
	return t
}

// Set__TileHeight updates property "TileHeight".
func (t AWS_MediaLive_Channel_H265Settings) Set__TileHeight(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.TileHeight = v
	return t
}

// SetV__TileHeight updates property "TileHeight".
func (t AWS_MediaLive_Channel_H265Settings) SetV__TileHeight(v int32) AWS_MediaLive_Channel_H265Settings {
	t.TileHeight = cfz.V(v)
	return t
}

// Set__TilePadding updates property "TilePadding".
func (t AWS_MediaLive_Channel_H265Settings) Set__TilePadding(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.TilePadding = v
	return t
}

// SetV__TilePadding updates property "TilePadding".
func (t AWS_MediaLive_Channel_H265Settings) SetV__TilePadding(v string) AWS_MediaLive_Channel_H265Settings {
	t.TilePadding = cfz.V(v)
	return t
}

// Set__TileWidth updates property "TileWidth".
func (t AWS_MediaLive_Channel_H265Settings) Set__TileWidth(v cfz.Expression[int32]) AWS_MediaLive_Channel_H265Settings {
	t.TileWidth = v
	return t
}

// SetV__TileWidth updates property "TileWidth".
func (t AWS_MediaLive_Channel_H265Settings) SetV__TileWidth(v int32) AWS_MediaLive_Channel_H265Settings {
	t.TileWidth = cfz.V(v)
	return t
}

// Set__TimecodeBurninSettings updates property "TimecodeBurninSettings".
func (t AWS_MediaLive_Channel_H265Settings) Set__TimecodeBurninSettings(v cfz.Expression[AWS_MediaLive_Channel_TimecodeBurninSettings]) AWS_MediaLive_Channel_H265Settings {
	t.TimecodeBurninSettings = v
	return t
}

// SetV__TimecodeBurninSettings updates property "TimecodeBurninSettings".
func (t AWS_MediaLive_Channel_H265Settings) SetV__TimecodeBurninSettings(v AWS_MediaLive_Channel_TimecodeBurninSettings) AWS_MediaLive_Channel_H265Settings {
	t.TimecodeBurninSettings = cfz.V(v)
	return t
}

// Set__TimecodeInsertion updates property "TimecodeInsertion".
func (t AWS_MediaLive_Channel_H265Settings) Set__TimecodeInsertion(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.TimecodeInsertion = v
	return t
}

// SetV__TimecodeInsertion updates property "TimecodeInsertion".
func (t AWS_MediaLive_Channel_H265Settings) SetV__TimecodeInsertion(v string) AWS_MediaLive_Channel_H265Settings {
	t.TimecodeInsertion = cfz.V(v)
	return t
}

// Set__TreeblockSize updates property "TreeblockSize".
func (t AWS_MediaLive_Channel_H265Settings) Set__TreeblockSize(v cfz.Expression[string]) AWS_MediaLive_Channel_H265Settings {
	t.TreeblockSize = v
	return t
}

// SetV__TreeblockSize updates property "TreeblockSize".
func (t AWS_MediaLive_Channel_H265Settings) SetV__TreeblockSize(v string) AWS_MediaLive_Channel_H265Settings {
	t.TreeblockSize = cfz.V(v)
	return t
}
