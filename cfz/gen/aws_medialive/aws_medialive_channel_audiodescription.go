// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_medialive

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaLive_Channel_AudioDescription__Type is the CloudFormation type for AWS::MediaLive::Channel.AudioDescription.
	AWS_MediaLive_Channel_AudioDescription__Type = "AWS::MediaLive::Channel.AudioDescription"
)

var (
	// AWS_MediaLive_Channel_AudioDescription__PropertiesMap reports all the CloudFormation properties for AWS::MediaLive::Channel.AudioDescription.
	AWS_MediaLive_Channel_AudioDescription__PropertiesMap = struct {
		AudioDashRoles             string
		AudioNormalizationSettings string
		AudioSelectorName          string
		AudioType                  string
		AudioTypeControl           string
		AudioWatermarkingSettings  string
		CodecSettings              string
		DvbDashAccessibility       string
		LanguageCode               string
		LanguageCodeControl        string
		Name                       string
		RemixSettings              string
		StreamName                 string
	}{
		AudioDashRoles:             "AudioDashRoles",
		AudioNormalizationSettings: "AudioNormalizationSettings",
		AudioSelectorName:          "AudioSelectorName",
		AudioType:                  "AudioType",
		AudioTypeControl:           "AudioTypeControl",
		AudioWatermarkingSettings:  "AudioWatermarkingSettings",
		CodecSettings:              "CodecSettings",
		DvbDashAccessibility:       "DvbDashAccessibility",
		LanguageCode:               "LanguageCode",
		LanguageCodeControl:        "LanguageCodeControl",
		Name:                       "Name",
		RemixSettings:              "RemixSettings",
		StreamName:                 "StreamName",
	}

	// AWS_MediaLive_Channel_AudioDescription__PropertiesSlice reports all the CloudFormation properties for AWS::MediaLive::Channel.AudioDescription.
	AWS_MediaLive_Channel_AudioDescription__PropertiesSlice = []string{
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.AudioDashRoles,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.AudioNormalizationSettings,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.AudioSelectorName,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.AudioType,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.AudioTypeControl,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.AudioWatermarkingSettings,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.CodecSettings,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.DvbDashAccessibility,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.LanguageCode,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.LanguageCodeControl,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.Name,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.RemixSettings,
		AWS_MediaLive_Channel_AudioDescription__PropertiesMap.StreamName,
	}
)

// AWS_MediaLive_Channel_AudioDescription is a binding for AWS::MediaLive::Channel.AudioDescription.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html
type AWS_MediaLive_Channel_AudioDescription struct {
	// AudioDashRoles is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-audiodashroles
	AudioDashRoles cfz.ExpressionSlice[string] `json:"AudioDashRoles,omitempty"`

	// AudioNormalizationSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-audionormalizationsettings
	AudioNormalizationSettings cfz.Expression[AWS_MediaLive_Channel_AudioNormalizationSettings] `json:"AudioNormalizationSettings,omitempty"`

	// AudioSelectorName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-audioselectorname
	AudioSelectorName cfz.Expression[string] `json:"AudioSelectorName,omitempty"`

	// AudioType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-audiotype
	AudioType cfz.Expression[string] `json:"AudioType,omitempty"`

	// AudioTypeControl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-audiotypecontrol
	AudioTypeControl cfz.Expression[string] `json:"AudioTypeControl,omitempty"`

	// AudioWatermarkingSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-audiowatermarkingsettings
	AudioWatermarkingSettings cfz.Expression[AWS_MediaLive_Channel_AudioWatermarkSettings] `json:"AudioWatermarkingSettings,omitempty"`

	// CodecSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-codecsettings
	CodecSettings cfz.Expression[AWS_MediaLive_Channel_AudioCodecSettings] `json:"CodecSettings,omitempty"`

	// DvbDashAccessibility is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-dvbdashaccessibility
	DvbDashAccessibility cfz.Expression[string] `json:"DvbDashAccessibility,omitempty"`

	// LanguageCode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-languagecode
	LanguageCode cfz.Expression[string] `json:"LanguageCode,omitempty"`

	// LanguageCodeControl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-languagecodecontrol
	LanguageCodeControl cfz.Expression[string] `json:"LanguageCodeControl,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RemixSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-remixsettings
	RemixSettings cfz.Expression[AWS_MediaLive_Channel_RemixSettings] `json:"RemixSettings,omitempty"`

	// StreamName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiodescription.html#cfn-medialive-channel-audiodescription-streamname
	StreamName cfz.Expression[string] `json:"StreamName,omitempty"`
}

// New__AWS_MediaLive_Channel_AudioDescription initializes a new AWS_MediaLive_Channel_AudioDescription.
func New__AWS_MediaLive_Channel_AudioDescription() AWS_MediaLive_Channel_AudioDescription {
	return AWS_MediaLive_Channel_AudioDescription{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaLive_Channel_AudioDescription) GetType() string {
	return AWS_MediaLive_Channel_AudioDescription__Type
}

// Set__AudioDashRoles updates property "AudioDashRoles".
func (t AWS_MediaLive_Channel_AudioDescription) Set__AudioDashRoles(v cfz.ExpressionSlice[string]) AWS_MediaLive_Channel_AudioDescription {
	t.AudioDashRoles = v
	return t
}

// SetS__AudioDashRoles updates property "AudioDashRoles".
func (t AWS_MediaLive_Channel_AudioDescription) SetS__AudioDashRoles(v ...cfz.Expression[string]) AWS_MediaLive_Channel_AudioDescription {
	t.AudioDashRoles = cfz.S(v...)
	return t
}

// SetSV__AudioDashRoles updates property "AudioDashRoles".
func (t AWS_MediaLive_Channel_AudioDescription) SetSV__AudioDashRoles(v ...string) AWS_MediaLive_Channel_AudioDescription {
	t.AudioDashRoles = cfz.SV(v...)
	return t
}

// Set__AudioNormalizationSettings updates property "AudioNormalizationSettings".
func (t AWS_MediaLive_Channel_AudioDescription) Set__AudioNormalizationSettings(v cfz.Expression[AWS_MediaLive_Channel_AudioNormalizationSettings]) AWS_MediaLive_Channel_AudioDescription {
	t.AudioNormalizationSettings = v
	return t
}

// SetV__AudioNormalizationSettings updates property "AudioNormalizationSettings".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__AudioNormalizationSettings(v AWS_MediaLive_Channel_AudioNormalizationSettings) AWS_MediaLive_Channel_AudioDescription {
	t.AudioNormalizationSettings = cfz.V(v)
	return t
}

// Set__AudioSelectorName updates property "AudioSelectorName".
func (t AWS_MediaLive_Channel_AudioDescription) Set__AudioSelectorName(v cfz.Expression[string]) AWS_MediaLive_Channel_AudioDescription {
	t.AudioSelectorName = v
	return t
}

// SetV__AudioSelectorName updates property "AudioSelectorName".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__AudioSelectorName(v string) AWS_MediaLive_Channel_AudioDescription {
	t.AudioSelectorName = cfz.V(v)
	return t
}

// Set__AudioType updates property "AudioType".
func (t AWS_MediaLive_Channel_AudioDescription) Set__AudioType(v cfz.Expression[string]) AWS_MediaLive_Channel_AudioDescription {
	t.AudioType = v
	return t
}

// SetV__AudioType updates property "AudioType".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__AudioType(v string) AWS_MediaLive_Channel_AudioDescription {
	t.AudioType = cfz.V(v)
	return t
}

// Set__AudioTypeControl updates property "AudioTypeControl".
func (t AWS_MediaLive_Channel_AudioDescription) Set__AudioTypeControl(v cfz.Expression[string]) AWS_MediaLive_Channel_AudioDescription {
	t.AudioTypeControl = v
	return t
}

// SetV__AudioTypeControl updates property "AudioTypeControl".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__AudioTypeControl(v string) AWS_MediaLive_Channel_AudioDescription {
	t.AudioTypeControl = cfz.V(v)
	return t
}

// Set__AudioWatermarkingSettings updates property "AudioWatermarkingSettings".
func (t AWS_MediaLive_Channel_AudioDescription) Set__AudioWatermarkingSettings(v cfz.Expression[AWS_MediaLive_Channel_AudioWatermarkSettings]) AWS_MediaLive_Channel_AudioDescription {
	t.AudioWatermarkingSettings = v
	return t
}

// SetV__AudioWatermarkingSettings updates property "AudioWatermarkingSettings".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__AudioWatermarkingSettings(v AWS_MediaLive_Channel_AudioWatermarkSettings) AWS_MediaLive_Channel_AudioDescription {
	t.AudioWatermarkingSettings = cfz.V(v)
	return t
}

// Set__CodecSettings updates property "CodecSettings".
func (t AWS_MediaLive_Channel_AudioDescription) Set__CodecSettings(v cfz.Expression[AWS_MediaLive_Channel_AudioCodecSettings]) AWS_MediaLive_Channel_AudioDescription {
	t.CodecSettings = v
	return t
}

// SetV__CodecSettings updates property "CodecSettings".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__CodecSettings(v AWS_MediaLive_Channel_AudioCodecSettings) AWS_MediaLive_Channel_AudioDescription {
	t.CodecSettings = cfz.V(v)
	return t
}

// Set__DvbDashAccessibility updates property "DvbDashAccessibility".
func (t AWS_MediaLive_Channel_AudioDescription) Set__DvbDashAccessibility(v cfz.Expression[string]) AWS_MediaLive_Channel_AudioDescription {
	t.DvbDashAccessibility = v
	return t
}

// SetV__DvbDashAccessibility updates property "DvbDashAccessibility".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__DvbDashAccessibility(v string) AWS_MediaLive_Channel_AudioDescription {
	t.DvbDashAccessibility = cfz.V(v)
	return t
}

// Set__LanguageCode updates property "LanguageCode".
func (t AWS_MediaLive_Channel_AudioDescription) Set__LanguageCode(v cfz.Expression[string]) AWS_MediaLive_Channel_AudioDescription {
	t.LanguageCode = v
	return t
}

// SetV__LanguageCode updates property "LanguageCode".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__LanguageCode(v string) AWS_MediaLive_Channel_AudioDescription {
	t.LanguageCode = cfz.V(v)
	return t
}

// Set__LanguageCodeControl updates property "LanguageCodeControl".
func (t AWS_MediaLive_Channel_AudioDescription) Set__LanguageCodeControl(v cfz.Expression[string]) AWS_MediaLive_Channel_AudioDescription {
	t.LanguageCodeControl = v
	return t
}

// SetV__LanguageCodeControl updates property "LanguageCodeControl".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__LanguageCodeControl(v string) AWS_MediaLive_Channel_AudioDescription {
	t.LanguageCodeControl = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t AWS_MediaLive_Channel_AudioDescription) Set__Name(v cfz.Expression[string]) AWS_MediaLive_Channel_AudioDescription {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__Name(v string) AWS_MediaLive_Channel_AudioDescription {
	t.Name = cfz.V(v)
	return t
}

// Set__RemixSettings updates property "RemixSettings".
func (t AWS_MediaLive_Channel_AudioDescription) Set__RemixSettings(v cfz.Expression[AWS_MediaLive_Channel_RemixSettings]) AWS_MediaLive_Channel_AudioDescription {
	t.RemixSettings = v
	return t
}

// SetV__RemixSettings updates property "RemixSettings".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__RemixSettings(v AWS_MediaLive_Channel_RemixSettings) AWS_MediaLive_Channel_AudioDescription {
	t.RemixSettings = cfz.V(v)
	return t
}

// Set__StreamName updates property "StreamName".
func (t AWS_MediaLive_Channel_AudioDescription) Set__StreamName(v cfz.Expression[string]) AWS_MediaLive_Channel_AudioDescription {
	t.StreamName = v
	return t
}

// SetV__StreamName updates property "StreamName".
func (t AWS_MediaLive_Channel_AudioDescription) SetV__StreamName(v string) AWS_MediaLive_Channel_AudioDescription {
	t.StreamName = cfz.V(v)
	return t
}
