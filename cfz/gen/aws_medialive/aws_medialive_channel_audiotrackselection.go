// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_medialive

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaLive_Channel_AudioTrackSelection__Type is the CloudFormation type for AWS::MediaLive::Channel.AudioTrackSelection.
	AWS_MediaLive_Channel_AudioTrackSelection__Type = "AWS::MediaLive::Channel.AudioTrackSelection"
)

var (
	// AWS_MediaLive_Channel_AudioTrackSelection__PropertiesMap reports all the CloudFormation properties for AWS::MediaLive::Channel.AudioTrackSelection.
	AWS_MediaLive_Channel_AudioTrackSelection__PropertiesMap = struct {
		DolbyEDecode string
		Tracks       string
	}{
		DolbyEDecode: "DolbyEDecode",
		Tracks:       "Tracks",
	}

	// AWS_MediaLive_Channel_AudioTrackSelection__PropertiesSlice reports all the CloudFormation properties for AWS::MediaLive::Channel.AudioTrackSelection.
	AWS_MediaLive_Channel_AudioTrackSelection__PropertiesSlice = []string{
		AWS_MediaLive_Channel_AudioTrackSelection__PropertiesMap.DolbyEDecode,
		AWS_MediaLive_Channel_AudioTrackSelection__PropertiesMap.Tracks,
	}
)

// AWS_MediaLive_Channel_AudioTrackSelection is a binding for AWS::MediaLive::Channel.AudioTrackSelection.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiotrackselection.html
type AWS_MediaLive_Channel_AudioTrackSelection struct {
	// DolbyEDecode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiotrackselection.html#cfn-medialive-channel-audiotrackselection-dolbyedecode
	DolbyEDecode cfz.Expression[AWS_MediaLive_Channel_AudioDolbyEDecode] `json:"DolbyEDecode,omitempty"`

	// Tracks is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiotrackselection.html#cfn-medialive-channel-audiotrackselection-tracks
	Tracks cfz.ExpressionSlice[AWS_MediaLive_Channel_AudioTrack] `json:"Tracks,omitempty"`
}

// New__AWS_MediaLive_Channel_AudioTrackSelection initializes a new AWS_MediaLive_Channel_AudioTrackSelection.
func New__AWS_MediaLive_Channel_AudioTrackSelection() AWS_MediaLive_Channel_AudioTrackSelection {
	return AWS_MediaLive_Channel_AudioTrackSelection{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaLive_Channel_AudioTrackSelection) GetType() string {
	return AWS_MediaLive_Channel_AudioTrackSelection__Type
}

// Set__DolbyEDecode updates property "DolbyEDecode".
func (t AWS_MediaLive_Channel_AudioTrackSelection) Set__DolbyEDecode(v cfz.Expression[AWS_MediaLive_Channel_AudioDolbyEDecode]) AWS_MediaLive_Channel_AudioTrackSelection {
	t.DolbyEDecode = v
	return t
}

// SetV__DolbyEDecode updates property "DolbyEDecode".
func (t AWS_MediaLive_Channel_AudioTrackSelection) SetV__DolbyEDecode(v AWS_MediaLive_Channel_AudioDolbyEDecode) AWS_MediaLive_Channel_AudioTrackSelection {
	t.DolbyEDecode = cfz.V(v)
	return t
}

// Set__Tracks updates property "Tracks".
func (t AWS_MediaLive_Channel_AudioTrackSelection) Set__Tracks(v cfz.ExpressionSlice[AWS_MediaLive_Channel_AudioTrack]) AWS_MediaLive_Channel_AudioTrackSelection {
	t.Tracks = v
	return t
}

// SetS__Tracks updates property "Tracks".
func (t AWS_MediaLive_Channel_AudioTrackSelection) SetS__Tracks(v ...cfz.Expression[AWS_MediaLive_Channel_AudioTrack]) AWS_MediaLive_Channel_AudioTrackSelection {
	t.Tracks = cfz.S(v...)
	return t
}

// SetSV__Tracks updates property "Tracks".
func (t AWS_MediaLive_Channel_AudioTrackSelection) SetSV__Tracks(v ...AWS_MediaLive_Channel_AudioTrack) AWS_MediaLive_Channel_AudioTrackSelection {
	t.Tracks = cfz.SV(v...)
	return t
}
