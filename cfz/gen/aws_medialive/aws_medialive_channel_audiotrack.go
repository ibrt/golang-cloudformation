// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_medialive

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaLive_Channel_AudioTrack__Type is the CloudFormation type for AWS::MediaLive::Channel.AudioTrack.
	AWS_MediaLive_Channel_AudioTrack__Type = "AWS::MediaLive::Channel.AudioTrack"
)

var (
	// AWS_MediaLive_Channel_AudioTrack__PropertiesMap reports all the CloudFormation properties for AWS::MediaLive::Channel.AudioTrack.
	AWS_MediaLive_Channel_AudioTrack__PropertiesMap = struct {
		Track string
	}{
		Track: "Track",
	}

	// AWS_MediaLive_Channel_AudioTrack__PropertiesSlice reports all the CloudFormation properties for AWS::MediaLive::Channel.AudioTrack.
	AWS_MediaLive_Channel_AudioTrack__PropertiesSlice = []string{
		AWS_MediaLive_Channel_AudioTrack__PropertiesMap.Track,
	}
)

// AWS_MediaLive_Channel_AudioTrack is a binding for AWS::MediaLive::Channel.AudioTrack.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiotrack.html
type AWS_MediaLive_Channel_AudioTrack struct {
	// Track is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-audiotrack.html#cfn-medialive-channel-audiotrack-track
	Track cfz.Expression[int32] `json:"Track,omitempty"`
}

// New__AWS_MediaLive_Channel_AudioTrack initializes a new AWS_MediaLive_Channel_AudioTrack.
func New__AWS_MediaLive_Channel_AudioTrack() AWS_MediaLive_Channel_AudioTrack {
	return AWS_MediaLive_Channel_AudioTrack{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaLive_Channel_AudioTrack) GetType() string {
	return AWS_MediaLive_Channel_AudioTrack__Type
}

// Set__Track updates property "Track".
func (t AWS_MediaLive_Channel_AudioTrack) Set__Track(v cfz.Expression[int32]) AWS_MediaLive_Channel_AudioTrack {
	t.Track = v
	return t
}

// SetV__Track updates property "Track".
func (t AWS_MediaLive_Channel_AudioTrack) SetV__Track(v int32) AWS_MediaLive_Channel_AudioTrack {
	t.Track = cfz.V(v)
	return t
}
