// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_medialive

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_MediaLive_Input)(nil)
	_ cfz.Resource                   = (*AWS_MediaLive_Input)(nil)
)

const (
	// AWS_MediaLive_Input__Type is the CloudFormation type for AWS::MediaLive::Input.
	AWS_MediaLive_Input__Type = "AWS::MediaLive::Input"
)

var (
	// AWS_MediaLive_Input__AttributesMap reports all the CloudFormation attributes for AWS::MediaLive::Input.
	AWS_MediaLive_Input__AttributesMap = struct {
		Arn          string
		Destinations string
		Sources      string
	}{
		Arn:          "Arn",
		Destinations: "Destinations",
		Sources:      "Sources",
	}

	// AWS_MediaLive_Input__AttributesSlice reports all the CloudFormation attributes for AWS::MediaLive::Input.
	AWS_MediaLive_Input__AttributesSlice = []string{
		AWS_MediaLive_Input__AttributesMap.Arn,
		AWS_MediaLive_Input__AttributesMap.Destinations,
		AWS_MediaLive_Input__AttributesMap.Sources,
	}
)

var (
	// AWS_MediaLive_Input__PropertiesMap reports all the CloudFormation properties for AWS::MediaLive::Input.
	AWS_MediaLive_Input__PropertiesMap = struct {
		Destinations         string
		InputDevices         string
		InputNetworkLocation string
		InputSecurityGroups  string
		MediaConnectFlows    string
		MulticastSettings    string
		Name                 string
		RoleArn              string
		Sources              string
		SrtSettings          string
		Tags                 string
		Type                 string
		Vpc                  string
	}{
		Destinations:         "Destinations",
		InputDevices:         "InputDevices",
		InputNetworkLocation: "InputNetworkLocation",
		InputSecurityGroups:  "InputSecurityGroups",
		MediaConnectFlows:    "MediaConnectFlows",
		MulticastSettings:    "MulticastSettings",
		Name:                 "Name",
		RoleArn:              "RoleArn",
		Sources:              "Sources",
		SrtSettings:          "SrtSettings",
		Tags:                 "Tags",
		Type:                 "Type",
		Vpc:                  "Vpc",
	}

	// AWS_MediaLive_Input__PropertiesSlice reports all the CloudFormation properties for AWS::MediaLive::Input.
	AWS_MediaLive_Input__PropertiesSlice = []string{
		AWS_MediaLive_Input__PropertiesMap.Destinations,
		AWS_MediaLive_Input__PropertiesMap.InputDevices,
		AWS_MediaLive_Input__PropertiesMap.InputNetworkLocation,
		AWS_MediaLive_Input__PropertiesMap.InputSecurityGroups,
		AWS_MediaLive_Input__PropertiesMap.MediaConnectFlows,
		AWS_MediaLive_Input__PropertiesMap.MulticastSettings,
		AWS_MediaLive_Input__PropertiesMap.Name,
		AWS_MediaLive_Input__PropertiesMap.RoleArn,
		AWS_MediaLive_Input__PropertiesMap.Sources,
		AWS_MediaLive_Input__PropertiesMap.SrtSettings,
		AWS_MediaLive_Input__PropertiesMap.Tags,
		AWS_MediaLive_Input__PropertiesMap.Type,
		AWS_MediaLive_Input__PropertiesMap.Vpc,
	}
)

// AWS_MediaLive_Input is a binding for AWS::MediaLive::Input.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html
type AWS_MediaLive_Input struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Destinations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-destinations
	Destinations cfz.ExpressionSlice[AWS_MediaLive_Input_InputDestinationRequest] `json:"Destinations,omitempty"`

	// InputDevices is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-inputdevices
	InputDevices cfz.ExpressionSlice[AWS_MediaLive_Input_InputDeviceSettings] `json:"InputDevices,omitempty"`

	// InputNetworkLocation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-inputnetworklocation
	InputNetworkLocation cfz.Expression[string] `json:"InputNetworkLocation,omitempty"`

	// InputSecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-inputsecuritygroups
	InputSecurityGroups cfz.ExpressionSlice[string] `json:"InputSecurityGroups,omitempty"`

	// MediaConnectFlows is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-mediaconnectflows
	MediaConnectFlows cfz.ExpressionSlice[AWS_MediaLive_Input_MediaConnectFlowRequest] `json:"MediaConnectFlows,omitempty"`

	// MulticastSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-multicastsettings
	MulticastSettings cfz.Expression[AWS_MediaLive_Input_MulticastSettingsCreateRequest] `json:"MulticastSettings,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// Sources is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-sources
	Sources cfz.ExpressionSlice[AWS_MediaLive_Input_InputSourceRequest] `json:"Sources,omitempty"`

	// SrtSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-srtsettings
	SrtSettings cfz.Expression[AWS_MediaLive_Input_SrtSettingsRequest] `json:"SrtSettings,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-tags
	Tags cfz.Expression[json.RawMessage] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// Vpc is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-medialive-input.html#cfn-medialive-input-vpc
	Vpc cfz.Expression[AWS_MediaLive_Input_InputVpcRequest] `json:"Vpc,omitempty"`
}

// New__AWS_MediaLive_Input initializes a new *AWS_MediaLive_Input.
func New__AWS_MediaLive_Input(logicalName string) *AWS_MediaLive_Input {
	return &AWS_MediaLive_Input{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_MediaLive_Input) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_MediaLive_Input) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_MediaLive_Input) GetType() string {
	return AWS_MediaLive_Input__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_MediaLive_Input) Set__LogicalName(v string) *AWS_MediaLive_Input {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_MediaLive_Input) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_MediaLive_Input {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_MediaLive_Input) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_MediaLive_Input {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_MediaLive_Input) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_MediaLive_Input {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_MediaLive_Input) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_MediaLive_Input {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_MediaLive_Input) Set__RequestedOutputs(v []cfz.Output) *AWS_MediaLive_Input {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_MediaLive_Input) Add__RequestedOutputs(v ...cfz.Output) *AWS_MediaLive_Input {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Destinations updates property "Destinations".
func (t *AWS_MediaLive_Input) Set__Destinations(v cfz.ExpressionSlice[AWS_MediaLive_Input_InputDestinationRequest]) *AWS_MediaLive_Input {
	t.Destinations = v
	return t
}

// SetS__Destinations updates property "Destinations".
func (t *AWS_MediaLive_Input) SetS__Destinations(v ...cfz.Expression[AWS_MediaLive_Input_InputDestinationRequest]) *AWS_MediaLive_Input {
	t.Destinations = cfz.S(v...)
	return t
}

// SetSV__Destinations updates property "Destinations".
func (t *AWS_MediaLive_Input) SetSV__Destinations(v ...AWS_MediaLive_Input_InputDestinationRequest) *AWS_MediaLive_Input {
	t.Destinations = cfz.SV(v...)
	return t
}

// Set__InputDevices updates property "InputDevices".
func (t *AWS_MediaLive_Input) Set__InputDevices(v cfz.ExpressionSlice[AWS_MediaLive_Input_InputDeviceSettings]) *AWS_MediaLive_Input {
	t.InputDevices = v
	return t
}

// SetS__InputDevices updates property "InputDevices".
func (t *AWS_MediaLive_Input) SetS__InputDevices(v ...cfz.Expression[AWS_MediaLive_Input_InputDeviceSettings]) *AWS_MediaLive_Input {
	t.InputDevices = cfz.S(v...)
	return t
}

// SetSV__InputDevices updates property "InputDevices".
func (t *AWS_MediaLive_Input) SetSV__InputDevices(v ...AWS_MediaLive_Input_InputDeviceSettings) *AWS_MediaLive_Input {
	t.InputDevices = cfz.SV(v...)
	return t
}

// Set__InputNetworkLocation updates property "InputNetworkLocation".
func (t *AWS_MediaLive_Input) Set__InputNetworkLocation(v cfz.Expression[string]) *AWS_MediaLive_Input {
	t.InputNetworkLocation = v
	return t
}

// SetV__InputNetworkLocation updates property "InputNetworkLocation".
func (t *AWS_MediaLive_Input) SetV__InputNetworkLocation(v string) *AWS_MediaLive_Input {
	t.InputNetworkLocation = cfz.V(v)
	return t
}

// Set__InputSecurityGroups updates property "InputSecurityGroups".
func (t *AWS_MediaLive_Input) Set__InputSecurityGroups(v cfz.ExpressionSlice[string]) *AWS_MediaLive_Input {
	t.InputSecurityGroups = v
	return t
}

// SetS__InputSecurityGroups updates property "InputSecurityGroups".
func (t *AWS_MediaLive_Input) SetS__InputSecurityGroups(v ...cfz.Expression[string]) *AWS_MediaLive_Input {
	t.InputSecurityGroups = cfz.S(v...)
	return t
}

// SetSV__InputSecurityGroups updates property "InputSecurityGroups".
func (t *AWS_MediaLive_Input) SetSV__InputSecurityGroups(v ...string) *AWS_MediaLive_Input {
	t.InputSecurityGroups = cfz.SV(v...)
	return t
}

// Set__MediaConnectFlows updates property "MediaConnectFlows".
func (t *AWS_MediaLive_Input) Set__MediaConnectFlows(v cfz.ExpressionSlice[AWS_MediaLive_Input_MediaConnectFlowRequest]) *AWS_MediaLive_Input {
	t.MediaConnectFlows = v
	return t
}

// SetS__MediaConnectFlows updates property "MediaConnectFlows".
func (t *AWS_MediaLive_Input) SetS__MediaConnectFlows(v ...cfz.Expression[AWS_MediaLive_Input_MediaConnectFlowRequest]) *AWS_MediaLive_Input {
	t.MediaConnectFlows = cfz.S(v...)
	return t
}

// SetSV__MediaConnectFlows updates property "MediaConnectFlows".
func (t *AWS_MediaLive_Input) SetSV__MediaConnectFlows(v ...AWS_MediaLive_Input_MediaConnectFlowRequest) *AWS_MediaLive_Input {
	t.MediaConnectFlows = cfz.SV(v...)
	return t
}

// Set__MulticastSettings updates property "MulticastSettings".
func (t *AWS_MediaLive_Input) Set__MulticastSettings(v cfz.Expression[AWS_MediaLive_Input_MulticastSettingsCreateRequest]) *AWS_MediaLive_Input {
	t.MulticastSettings = v
	return t
}

// SetV__MulticastSettings updates property "MulticastSettings".
func (t *AWS_MediaLive_Input) SetV__MulticastSettings(v AWS_MediaLive_Input_MulticastSettingsCreateRequest) *AWS_MediaLive_Input {
	t.MulticastSettings = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_MediaLive_Input) Set__Name(v cfz.Expression[string]) *AWS_MediaLive_Input {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_MediaLive_Input) SetV__Name(v string) *AWS_MediaLive_Input {
	t.Name = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_MediaLive_Input) Set__RoleArn(v cfz.Expression[string]) *AWS_MediaLive_Input {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_MediaLive_Input) SetV__RoleArn(v string) *AWS_MediaLive_Input {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__Sources updates property "Sources".
func (t *AWS_MediaLive_Input) Set__Sources(v cfz.ExpressionSlice[AWS_MediaLive_Input_InputSourceRequest]) *AWS_MediaLive_Input {
	t.Sources = v
	return t
}

// SetS__Sources updates property "Sources".
func (t *AWS_MediaLive_Input) SetS__Sources(v ...cfz.Expression[AWS_MediaLive_Input_InputSourceRequest]) *AWS_MediaLive_Input {
	t.Sources = cfz.S(v...)
	return t
}

// SetSV__Sources updates property "Sources".
func (t *AWS_MediaLive_Input) SetSV__Sources(v ...AWS_MediaLive_Input_InputSourceRequest) *AWS_MediaLive_Input {
	t.Sources = cfz.SV(v...)
	return t
}

// Set__SrtSettings updates property "SrtSettings".
func (t *AWS_MediaLive_Input) Set__SrtSettings(v cfz.Expression[AWS_MediaLive_Input_SrtSettingsRequest]) *AWS_MediaLive_Input {
	t.SrtSettings = v
	return t
}

// SetV__SrtSettings updates property "SrtSettings".
func (t *AWS_MediaLive_Input) SetV__SrtSettings(v AWS_MediaLive_Input_SrtSettingsRequest) *AWS_MediaLive_Input {
	t.SrtSettings = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_MediaLive_Input) Set__Tags(v cfz.Expression[json.RawMessage]) *AWS_MediaLive_Input {
	t.Tags = v
	return t
}

// SetV__Tags updates property "Tags".
func (t *AWS_MediaLive_Input) SetV__Tags(v json.RawMessage) *AWS_MediaLive_Input {
	t.Tags = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_MediaLive_Input) Set__Type(v cfz.Expression[string]) *AWS_MediaLive_Input {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_MediaLive_Input) SetV__Type(v string) *AWS_MediaLive_Input {
	t.Type = cfz.V(v)
	return t
}

// Set__Vpc updates property "Vpc".
func (t *AWS_MediaLive_Input) Set__Vpc(v cfz.Expression[AWS_MediaLive_Input_InputVpcRequest]) *AWS_MediaLive_Input {
	t.Vpc = v
	return t
}

// SetV__Vpc updates property "Vpc".
func (t *AWS_MediaLive_Input) SetV__Vpc(v AWS_MediaLive_Input_InputVpcRequest) *AWS_MediaLive_Input {
	t.Vpc = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_MediaLive_Input) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_MediaLive_Input) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaLive_Input__AttributesMap.Arn))
}

// GetAttSlice__Destinations returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Destinations
func (t *AWS_MediaLive_Input) GetAttSlice__Destinations() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaLive_Input__AttributesMap.Destinations))
}

// GetAttSlice__Sources returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Sources
func (t *AWS_MediaLive_Input) GetAttSlice__Sources() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaLive_Input__AttributesMap.Sources))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_MediaLive_Input) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_MediaLive_Input) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Destinations returns a conventionally configured output for an attribute of this resource.
// Attribute: Destinations
func (t *AWS_MediaLive_Input) GetConventionalOutputAtt__Destinations(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDestinations", t.GetAttSlice__Destinations())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Sources returns a conventionally configured output for an attribute of this resource.
// Attribute: Sources
func (t *AWS_MediaLive_Input) GetConventionalOutputAtt__Sources(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSources", t.GetAttSlice__Sources())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_MediaLive_Input) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_MediaLive_Input

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_MediaLive_Input) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
