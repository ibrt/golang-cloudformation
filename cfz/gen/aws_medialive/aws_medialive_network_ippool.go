// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_medialive

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaLive_Network_IpPool__Type is the CloudFormation type for AWS::MediaLive::Network.IpPool.
	AWS_MediaLive_Network_IpPool__Type = "AWS::MediaLive::Network.IpPool"
)

var (
	// AWS_MediaLive_Network_IpPool__PropertiesMap reports all the CloudFormation properties for AWS::MediaLive::Network.IpPool.
	AWS_MediaLive_Network_IpPool__PropertiesMap = struct {
		Cidr string
	}{
		Cidr: "Cidr",
	}

	// AWS_MediaLive_Network_IpPool__PropertiesSlice reports all the CloudFormation properties for AWS::MediaLive::Network.IpPool.
	AWS_MediaLive_Network_IpPool__PropertiesSlice = []string{
		AWS_MediaLive_Network_IpPool__PropertiesMap.Cidr,
	}
)

// AWS_MediaLive_Network_IpPool is a binding for AWS::MediaLive::Network.IpPool.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-network-ippool.html
type AWS_MediaLive_Network_IpPool struct {
	// Cidr is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-network-ippool.html#cfn-medialive-network-ippool-cidr
	Cidr cfz.Expression[string] `json:"Cidr,omitempty"`
}

// New__AWS_MediaLive_Network_IpPool initializes a new AWS_MediaLive_Network_IpPool.
func New__AWS_MediaLive_Network_IpPool() AWS_MediaLive_Network_IpPool {
	return AWS_MediaLive_Network_IpPool{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaLive_Network_IpPool) GetType() string {
	return AWS_MediaLive_Network_IpPool__Type
}

// Set__Cidr updates property "Cidr".
func (t AWS_MediaLive_Network_IpPool) Set__Cidr(v cfz.Expression[string]) AWS_MediaLive_Network_IpPool {
	t.Cidr = v
	return t
}

// SetV__Cidr updates property "Cidr".
func (t AWS_MediaLive_Network_IpPool) SetV__Cidr(v string) AWS_MediaLive_Network_IpPool {
	t.Cidr = cfz.V(v)
	return t
}
