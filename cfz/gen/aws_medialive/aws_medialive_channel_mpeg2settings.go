// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_medialive

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaLive_Channel_Mpeg2Settings__Type is the CloudFormation type for AWS::MediaLive::Channel.Mpeg2Settings.
	AWS_MediaLive_Channel_Mpeg2Settings__Type = "AWS::MediaLive::Channel.Mpeg2Settings"
)

var (
	// AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap reports all the CloudFormation properties for AWS::MediaLive::Channel.Mpeg2Settings.
	AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap = struct {
		AdaptiveQuantization   string
		AfdSignaling           string
		ColorMetadata          string
		ColorSpace             string
		DisplayAspectRatio     string
		FilterSettings         string
		FixedAfd               string
		FramerateDenominator   string
		FramerateNumerator     string
		GopClosedCadence       string
		GopNumBFrames          string
		GopSize                string
		GopSizeUnits           string
		ScanType               string
		SubgopLength           string
		TimecodeBurninSettings string
		TimecodeInsertion      string
	}{
		AdaptiveQuantization:   "AdaptiveQuantization",
		AfdSignaling:           "AfdSignaling",
		ColorMetadata:          "ColorMetadata",
		ColorSpace:             "ColorSpace",
		DisplayAspectRatio:     "DisplayAspectRatio",
		FilterSettings:         "FilterSettings",
		FixedAfd:               "FixedAfd",
		FramerateDenominator:   "FramerateDenominator",
		FramerateNumerator:     "FramerateNumerator",
		GopClosedCadence:       "GopClosedCadence",
		GopNumBFrames:          "GopNumBFrames",
		GopSize:                "GopSize",
		GopSizeUnits:           "GopSizeUnits",
		ScanType:               "ScanType",
		SubgopLength:           "SubgopLength",
		TimecodeBurninSettings: "TimecodeBurninSettings",
		TimecodeInsertion:      "TimecodeInsertion",
	}

	// AWS_MediaLive_Channel_Mpeg2Settings__PropertiesSlice reports all the CloudFormation properties for AWS::MediaLive::Channel.Mpeg2Settings.
	AWS_MediaLive_Channel_Mpeg2Settings__PropertiesSlice = []string{
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.AdaptiveQuantization,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.AfdSignaling,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.ColorMetadata,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.ColorSpace,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.DisplayAspectRatio,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.FilterSettings,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.FixedAfd,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.FramerateDenominator,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.FramerateNumerator,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.GopClosedCadence,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.GopNumBFrames,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.GopSize,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.GopSizeUnits,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.ScanType,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.SubgopLength,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.TimecodeBurninSettings,
		AWS_MediaLive_Channel_Mpeg2Settings__PropertiesMap.TimecodeInsertion,
	}
)

// AWS_MediaLive_Channel_Mpeg2Settings is a binding for AWS::MediaLive::Channel.Mpeg2Settings.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html
type AWS_MediaLive_Channel_Mpeg2Settings struct {
	// AdaptiveQuantization is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-adaptivequantization
	AdaptiveQuantization cfz.Expression[string] `json:"AdaptiveQuantization,omitempty"`

	// AfdSignaling is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-afdsignaling
	AfdSignaling cfz.Expression[string] `json:"AfdSignaling,omitempty"`

	// ColorMetadata is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-colormetadata
	ColorMetadata cfz.Expression[string] `json:"ColorMetadata,omitempty"`

	// ColorSpace is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-colorspace
	ColorSpace cfz.Expression[string] `json:"ColorSpace,omitempty"`

	// DisplayAspectRatio is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-displayaspectratio
	DisplayAspectRatio cfz.Expression[string] `json:"DisplayAspectRatio,omitempty"`

	// FilterSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-filtersettings
	FilterSettings cfz.Expression[AWS_MediaLive_Channel_Mpeg2FilterSettings] `json:"FilterSettings,omitempty"`

	// FixedAfd is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-fixedafd
	FixedAfd cfz.Expression[string] `json:"FixedAfd,omitempty"`

	// FramerateDenominator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-frameratedenominator
	FramerateDenominator cfz.Expression[int32] `json:"FramerateDenominator,omitempty"`

	// FramerateNumerator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-frameratenumerator
	FramerateNumerator cfz.Expression[int32] `json:"FramerateNumerator,omitempty"`

	// GopClosedCadence is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-gopclosedcadence
	GopClosedCadence cfz.Expression[int32] `json:"GopClosedCadence,omitempty"`

	// GopNumBFrames is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-gopnumbframes
	GopNumBFrames cfz.Expression[int32] `json:"GopNumBFrames,omitempty"`

	// GopSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-gopsize
	GopSize cfz.Expression[float64] `json:"GopSize,omitempty"`

	// GopSizeUnits is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-gopsizeunits
	GopSizeUnits cfz.Expression[string] `json:"GopSizeUnits,omitempty"`

	// ScanType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-scantype
	ScanType cfz.Expression[string] `json:"ScanType,omitempty"`

	// SubgopLength is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-subgoplength
	SubgopLength cfz.Expression[string] `json:"SubgopLength,omitempty"`

	// TimecodeBurninSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-timecodeburninsettings
	TimecodeBurninSettings cfz.Expression[AWS_MediaLive_Channel_TimecodeBurninSettings] `json:"TimecodeBurninSettings,omitempty"`

	// TimecodeInsertion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-medialive-channel-mpeg2settings.html#cfn-medialive-channel-mpeg2settings-timecodeinsertion
	TimecodeInsertion cfz.Expression[string] `json:"TimecodeInsertion,omitempty"`
}

// New__AWS_MediaLive_Channel_Mpeg2Settings initializes a new AWS_MediaLive_Channel_Mpeg2Settings.
func New__AWS_MediaLive_Channel_Mpeg2Settings() AWS_MediaLive_Channel_Mpeg2Settings {
	return AWS_MediaLive_Channel_Mpeg2Settings{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaLive_Channel_Mpeg2Settings) GetType() string {
	return AWS_MediaLive_Channel_Mpeg2Settings__Type
}

// Set__AdaptiveQuantization updates property "AdaptiveQuantization".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__AdaptiveQuantization(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.AdaptiveQuantization = v
	return t
}

// SetV__AdaptiveQuantization updates property "AdaptiveQuantization".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__AdaptiveQuantization(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.AdaptiveQuantization = cfz.V(v)
	return t
}

// Set__AfdSignaling updates property "AfdSignaling".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__AfdSignaling(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.AfdSignaling = v
	return t
}

// SetV__AfdSignaling updates property "AfdSignaling".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__AfdSignaling(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.AfdSignaling = cfz.V(v)
	return t
}

// Set__ColorMetadata updates property "ColorMetadata".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__ColorMetadata(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.ColorMetadata = v
	return t
}

// SetV__ColorMetadata updates property "ColorMetadata".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__ColorMetadata(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.ColorMetadata = cfz.V(v)
	return t
}

// Set__ColorSpace updates property "ColorSpace".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__ColorSpace(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.ColorSpace = v
	return t
}

// SetV__ColorSpace updates property "ColorSpace".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__ColorSpace(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.ColorSpace = cfz.V(v)
	return t
}

// Set__DisplayAspectRatio updates property "DisplayAspectRatio".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__DisplayAspectRatio(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.DisplayAspectRatio = v
	return t
}

// SetV__DisplayAspectRatio updates property "DisplayAspectRatio".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__DisplayAspectRatio(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.DisplayAspectRatio = cfz.V(v)
	return t
}

// Set__FilterSettings updates property "FilterSettings".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__FilterSettings(v cfz.Expression[AWS_MediaLive_Channel_Mpeg2FilterSettings]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.FilterSettings = v
	return t
}

// SetV__FilterSettings updates property "FilterSettings".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__FilterSettings(v AWS_MediaLive_Channel_Mpeg2FilterSettings) AWS_MediaLive_Channel_Mpeg2Settings {
	t.FilterSettings = cfz.V(v)
	return t
}

// Set__FixedAfd updates property "FixedAfd".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__FixedAfd(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.FixedAfd = v
	return t
}

// SetV__FixedAfd updates property "FixedAfd".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__FixedAfd(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.FixedAfd = cfz.V(v)
	return t
}

// Set__FramerateDenominator updates property "FramerateDenominator".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__FramerateDenominator(v cfz.Expression[int32]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.FramerateDenominator = v
	return t
}

// SetV__FramerateDenominator updates property "FramerateDenominator".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__FramerateDenominator(v int32) AWS_MediaLive_Channel_Mpeg2Settings {
	t.FramerateDenominator = cfz.V(v)
	return t
}

// Set__FramerateNumerator updates property "FramerateNumerator".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__FramerateNumerator(v cfz.Expression[int32]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.FramerateNumerator = v
	return t
}

// SetV__FramerateNumerator updates property "FramerateNumerator".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__FramerateNumerator(v int32) AWS_MediaLive_Channel_Mpeg2Settings {
	t.FramerateNumerator = cfz.V(v)
	return t
}

// Set__GopClosedCadence updates property "GopClosedCadence".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__GopClosedCadence(v cfz.Expression[int32]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.GopClosedCadence = v
	return t
}

// SetV__GopClosedCadence updates property "GopClosedCadence".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__GopClosedCadence(v int32) AWS_MediaLive_Channel_Mpeg2Settings {
	t.GopClosedCadence = cfz.V(v)
	return t
}

// Set__GopNumBFrames updates property "GopNumBFrames".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__GopNumBFrames(v cfz.Expression[int32]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.GopNumBFrames = v
	return t
}

// SetV__GopNumBFrames updates property "GopNumBFrames".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__GopNumBFrames(v int32) AWS_MediaLive_Channel_Mpeg2Settings {
	t.GopNumBFrames = cfz.V(v)
	return t
}

// Set__GopSize updates property "GopSize".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__GopSize(v cfz.Expression[float64]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.GopSize = v
	return t
}

// SetV__GopSize updates property "GopSize".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__GopSize(v float64) AWS_MediaLive_Channel_Mpeg2Settings {
	t.GopSize = cfz.V(v)
	return t
}

// Set__GopSizeUnits updates property "GopSizeUnits".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__GopSizeUnits(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.GopSizeUnits = v
	return t
}

// SetV__GopSizeUnits updates property "GopSizeUnits".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__GopSizeUnits(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.GopSizeUnits = cfz.V(v)
	return t
}

// Set__ScanType updates property "ScanType".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__ScanType(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.ScanType = v
	return t
}

// SetV__ScanType updates property "ScanType".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__ScanType(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.ScanType = cfz.V(v)
	return t
}

// Set__SubgopLength updates property "SubgopLength".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__SubgopLength(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.SubgopLength = v
	return t
}

// SetV__SubgopLength updates property "SubgopLength".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__SubgopLength(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.SubgopLength = cfz.V(v)
	return t
}

// Set__TimecodeBurninSettings updates property "TimecodeBurninSettings".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__TimecodeBurninSettings(v cfz.Expression[AWS_MediaLive_Channel_TimecodeBurninSettings]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.TimecodeBurninSettings = v
	return t
}

// SetV__TimecodeBurninSettings updates property "TimecodeBurninSettings".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__TimecodeBurninSettings(v AWS_MediaLive_Channel_TimecodeBurninSettings) AWS_MediaLive_Channel_Mpeg2Settings {
	t.TimecodeBurninSettings = cfz.V(v)
	return t
}

// Set__TimecodeInsertion updates property "TimecodeInsertion".
func (t AWS_MediaLive_Channel_Mpeg2Settings) Set__TimecodeInsertion(v cfz.Expression[string]) AWS_MediaLive_Channel_Mpeg2Settings {
	t.TimecodeInsertion = v
	return t
}

// SetV__TimecodeInsertion updates property "TimecodeInsertion".
func (t AWS_MediaLive_Channel_Mpeg2Settings) SetV__TimecodeInsertion(v string) AWS_MediaLive_Channel_Mpeg2Settings {
	t.TimecodeInsertion = cfz.V(v)
	return t
}
