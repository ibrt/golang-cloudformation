// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iam

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IAM_ManagedPolicy)(nil)
	_ cfz.Resource                   = (*AWS_IAM_ManagedPolicy)(nil)
)

const (
	// AWS_IAM_ManagedPolicy__Type is the CloudFormation type for AWS::IAM::ManagedPolicy.
	AWS_IAM_ManagedPolicy__Type = "AWS::IAM::ManagedPolicy"
)

var (
	// AWS_IAM_ManagedPolicy__AttributesMap reports all the CloudFormation attributes for AWS::IAM::ManagedPolicy.
	AWS_IAM_ManagedPolicy__AttributesMap = struct {
		AttachmentCount               string
		CreateDate                    string
		DefaultVersionId              string
		IsAttachable                  string
		PermissionsBoundaryUsageCount string
		PolicyArn                     string
		PolicyId                      string
		UpdateDate                    string
	}{
		AttachmentCount:               "AttachmentCount",
		CreateDate:                    "CreateDate",
		DefaultVersionId:              "DefaultVersionId",
		IsAttachable:                  "IsAttachable",
		PermissionsBoundaryUsageCount: "PermissionsBoundaryUsageCount",
		PolicyArn:                     "PolicyArn",
		PolicyId:                      "PolicyId",
		UpdateDate:                    "UpdateDate",
	}

	// AWS_IAM_ManagedPolicy__AttributesSlice reports all the CloudFormation attributes for AWS::IAM::ManagedPolicy.
	AWS_IAM_ManagedPolicy__AttributesSlice = []string{
		AWS_IAM_ManagedPolicy__AttributesMap.AttachmentCount,
		AWS_IAM_ManagedPolicy__AttributesMap.CreateDate,
		AWS_IAM_ManagedPolicy__AttributesMap.DefaultVersionId,
		AWS_IAM_ManagedPolicy__AttributesMap.IsAttachable,
		AWS_IAM_ManagedPolicy__AttributesMap.PermissionsBoundaryUsageCount,
		AWS_IAM_ManagedPolicy__AttributesMap.PolicyArn,
		AWS_IAM_ManagedPolicy__AttributesMap.PolicyId,
		AWS_IAM_ManagedPolicy__AttributesMap.UpdateDate,
	}
)

var (
	// AWS_IAM_ManagedPolicy__PropertiesMap reports all the CloudFormation properties for AWS::IAM::ManagedPolicy.
	AWS_IAM_ManagedPolicy__PropertiesMap = struct {
		Description       string
		Groups            string
		ManagedPolicyName string
		Path              string
		PolicyDocument    string
		Roles             string
		Users             string
	}{
		Description:       "Description",
		Groups:            "Groups",
		ManagedPolicyName: "ManagedPolicyName",
		Path:              "Path",
		PolicyDocument:    "PolicyDocument",
		Roles:             "Roles",
		Users:             "Users",
	}

	// AWS_IAM_ManagedPolicy__PropertiesSlice reports all the CloudFormation properties for AWS::IAM::ManagedPolicy.
	AWS_IAM_ManagedPolicy__PropertiesSlice = []string{
		AWS_IAM_ManagedPolicy__PropertiesMap.Description,
		AWS_IAM_ManagedPolicy__PropertiesMap.Groups,
		AWS_IAM_ManagedPolicy__PropertiesMap.ManagedPolicyName,
		AWS_IAM_ManagedPolicy__PropertiesMap.Path,
		AWS_IAM_ManagedPolicy__PropertiesMap.PolicyDocument,
		AWS_IAM_ManagedPolicy__PropertiesMap.Roles,
		AWS_IAM_ManagedPolicy__PropertiesMap.Users,
	}
)

// AWS_IAM_ManagedPolicy is a binding for AWS::IAM::ManagedPolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html
type AWS_IAM_ManagedPolicy struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Groups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-groups
	Groups cfz.ExpressionSlice[string] `json:"Groups,omitempty"`

	// ManagedPolicyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-managedpolicyname
	ManagedPolicyName cfz.Expression[string] `json:"ManagedPolicyName,omitempty"`

	// Path is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-path
	Path cfz.Expression[string] `json:"Path,omitempty"`

	// PolicyDocument is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-policydocument
	PolicyDocument cfz.Expression[json.RawMessage] `json:"PolicyDocument,omitempty"`

	// Roles is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-roles
	Roles cfz.ExpressionSlice[string] `json:"Roles,omitempty"`

	// Users is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html#cfn-iam-managedpolicy-users
	Users cfz.ExpressionSlice[string] `json:"Users,omitempty"`
}

// New__AWS_IAM_ManagedPolicy initializes a new *AWS_IAM_ManagedPolicy.
func New__AWS_IAM_ManagedPolicy(logicalName string) *AWS_IAM_ManagedPolicy {
	return &AWS_IAM_ManagedPolicy{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IAM_ManagedPolicy) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IAM_ManagedPolicy) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IAM_ManagedPolicy) GetType() string {
	return AWS_IAM_ManagedPolicy__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IAM_ManagedPolicy) Set__LogicalName(v string) *AWS_IAM_ManagedPolicy {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IAM_ManagedPolicy) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IAM_ManagedPolicy {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IAM_ManagedPolicy) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IAM_ManagedPolicy {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IAM_ManagedPolicy) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IAM_ManagedPolicy {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IAM_ManagedPolicy) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IAM_ManagedPolicy {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IAM_ManagedPolicy) Set__RequestedOutputs(v []cfz.Output) *AWS_IAM_ManagedPolicy {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IAM_ManagedPolicy) Add__RequestedOutputs(v ...cfz.Output) *AWS_IAM_ManagedPolicy {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_IAM_ManagedPolicy) Set__Description(v cfz.Expression[string]) *AWS_IAM_ManagedPolicy {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_IAM_ManagedPolicy) SetV__Description(v string) *AWS_IAM_ManagedPolicy {
	t.Description = cfz.V(v)
	return t
}

// Set__Groups updates property "Groups".
func (t *AWS_IAM_ManagedPolicy) Set__Groups(v cfz.ExpressionSlice[string]) *AWS_IAM_ManagedPolicy {
	t.Groups = v
	return t
}

// SetS__Groups updates property "Groups".
func (t *AWS_IAM_ManagedPolicy) SetS__Groups(v ...cfz.Expression[string]) *AWS_IAM_ManagedPolicy {
	t.Groups = cfz.S(v...)
	return t
}

// SetSV__Groups updates property "Groups".
func (t *AWS_IAM_ManagedPolicy) SetSV__Groups(v ...string) *AWS_IAM_ManagedPolicy {
	t.Groups = cfz.SV(v...)
	return t
}

// Set__ManagedPolicyName updates property "ManagedPolicyName".
func (t *AWS_IAM_ManagedPolicy) Set__ManagedPolicyName(v cfz.Expression[string]) *AWS_IAM_ManagedPolicy {
	t.ManagedPolicyName = v
	return t
}

// SetV__ManagedPolicyName updates property "ManagedPolicyName".
func (t *AWS_IAM_ManagedPolicy) SetV__ManagedPolicyName(v string) *AWS_IAM_ManagedPolicy {
	t.ManagedPolicyName = cfz.V(v)
	return t
}

// Set__Path updates property "Path".
func (t *AWS_IAM_ManagedPolicy) Set__Path(v cfz.Expression[string]) *AWS_IAM_ManagedPolicy {
	t.Path = v
	return t
}

// SetV__Path updates property "Path".
func (t *AWS_IAM_ManagedPolicy) SetV__Path(v string) *AWS_IAM_ManagedPolicy {
	t.Path = cfz.V(v)
	return t
}

// Set__PolicyDocument updates property "PolicyDocument".
func (t *AWS_IAM_ManagedPolicy) Set__PolicyDocument(v cfz.Expression[json.RawMessage]) *AWS_IAM_ManagedPolicy {
	t.PolicyDocument = v
	return t
}

// SetV__PolicyDocument updates property "PolicyDocument".
func (t *AWS_IAM_ManagedPolicy) SetV__PolicyDocument(v json.RawMessage) *AWS_IAM_ManagedPolicy {
	t.PolicyDocument = cfz.V(v)
	return t
}

// Set__Roles updates property "Roles".
func (t *AWS_IAM_ManagedPolicy) Set__Roles(v cfz.ExpressionSlice[string]) *AWS_IAM_ManagedPolicy {
	t.Roles = v
	return t
}

// SetS__Roles updates property "Roles".
func (t *AWS_IAM_ManagedPolicy) SetS__Roles(v ...cfz.Expression[string]) *AWS_IAM_ManagedPolicy {
	t.Roles = cfz.S(v...)
	return t
}

// SetSV__Roles updates property "Roles".
func (t *AWS_IAM_ManagedPolicy) SetSV__Roles(v ...string) *AWS_IAM_ManagedPolicy {
	t.Roles = cfz.SV(v...)
	return t
}

// Set__Users updates property "Users".
func (t *AWS_IAM_ManagedPolicy) Set__Users(v cfz.ExpressionSlice[string]) *AWS_IAM_ManagedPolicy {
	t.Users = v
	return t
}

// SetS__Users updates property "Users".
func (t *AWS_IAM_ManagedPolicy) SetS__Users(v ...cfz.Expression[string]) *AWS_IAM_ManagedPolicy {
	t.Users = cfz.S(v...)
	return t
}

// SetSV__Users updates property "Users".
func (t *AWS_IAM_ManagedPolicy) SetSV__Users(v ...string) *AWS_IAM_ManagedPolicy {
	t.Users = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IAM_ManagedPolicy) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AttachmentCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AttachmentCount
func (t *AWS_IAM_ManagedPolicy) GetAtt__AttachmentCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_ManagedPolicy__AttributesMap.AttachmentCount))
}

// GetAtt__CreateDate returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreateDate
func (t *AWS_IAM_ManagedPolicy) GetAtt__CreateDate() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_ManagedPolicy__AttributesMap.CreateDate))
}

// GetAtt__DefaultVersionId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DefaultVersionId
func (t *AWS_IAM_ManagedPolicy) GetAtt__DefaultVersionId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_ManagedPolicy__AttributesMap.DefaultVersionId))
}

// GetAtt__IsAttachable returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IsAttachable
func (t *AWS_IAM_ManagedPolicy) GetAtt__IsAttachable() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_ManagedPolicy__AttributesMap.IsAttachable))
}

// GetAtt__PermissionsBoundaryUsageCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PermissionsBoundaryUsageCount
func (t *AWS_IAM_ManagedPolicy) GetAtt__PermissionsBoundaryUsageCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_ManagedPolicy__AttributesMap.PermissionsBoundaryUsageCount))
}

// GetAtt__PolicyArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PolicyArn
func (t *AWS_IAM_ManagedPolicy) GetAtt__PolicyArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_ManagedPolicy__AttributesMap.PolicyArn))
}

// GetAtt__PolicyId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PolicyId
func (t *AWS_IAM_ManagedPolicy) GetAtt__PolicyId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_ManagedPolicy__AttributesMap.PolicyId))
}

// GetAtt__UpdateDate returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdateDate
func (t *AWS_IAM_ManagedPolicy) GetAtt__UpdateDate() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_ManagedPolicy__AttributesMap.UpdateDate))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IAM_ManagedPolicy) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AttachmentCount returns a conventionally configured output for an attribute of this resource.
// Attribute: AttachmentCount
func (t *AWS_IAM_ManagedPolicy) GetConventionalOutputAtt__AttachmentCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAttachmentCount", t.GetAtt__AttachmentCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreateDate returns a conventionally configured output for an attribute of this resource.
// Attribute: CreateDate
func (t *AWS_IAM_ManagedPolicy) GetConventionalOutputAtt__CreateDate(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreateDate", t.GetAtt__CreateDate())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DefaultVersionId returns a conventionally configured output for an attribute of this resource.
// Attribute: DefaultVersionId
func (t *AWS_IAM_ManagedPolicy) GetConventionalOutputAtt__DefaultVersionId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDefaultVersionId", t.GetAtt__DefaultVersionId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IsAttachable returns a conventionally configured output for an attribute of this resource.
// Attribute: IsAttachable
func (t *AWS_IAM_ManagedPolicy) GetConventionalOutputAtt__IsAttachable(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIsAttachable", t.GetAtt__IsAttachable())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PermissionsBoundaryUsageCount returns a conventionally configured output for an attribute of this resource.
// Attribute: PermissionsBoundaryUsageCount
func (t *AWS_IAM_ManagedPolicy) GetConventionalOutputAtt__PermissionsBoundaryUsageCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPermissionsBoundaryUsageCount", t.GetAtt__PermissionsBoundaryUsageCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PolicyArn returns a conventionally configured output for an attribute of this resource.
// Attribute: PolicyArn
func (t *AWS_IAM_ManagedPolicy) GetConventionalOutputAtt__PolicyArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPolicyArn", t.GetAtt__PolicyArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PolicyId returns a conventionally configured output for an attribute of this resource.
// Attribute: PolicyId
func (t *AWS_IAM_ManagedPolicy) GetConventionalOutputAtt__PolicyId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPolicyId", t.GetAtt__PolicyId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdateDate returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdateDate
func (t *AWS_IAM_ManagedPolicy) GetConventionalOutputAtt__UpdateDate(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdateDate", t.GetAtt__UpdateDate())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IAM_ManagedPolicy) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IAM_ManagedPolicy

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IAM_ManagedPolicy) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
