// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iam

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IAM_User)(nil)
	_ cfz.Resource                   = (*AWS_IAM_User)(nil)
)

const (
	// AWS_IAM_User__Type is the CloudFormation type for AWS::IAM::User.
	AWS_IAM_User__Type = "AWS::IAM::User"
)

var (
	// AWS_IAM_User__AttributesMap reports all the CloudFormation attributes for AWS::IAM::User.
	AWS_IAM_User__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_IAM_User__AttributesSlice reports all the CloudFormation attributes for AWS::IAM::User.
	AWS_IAM_User__AttributesSlice = []string{
		AWS_IAM_User__AttributesMap.Arn,
	}
)

var (
	// AWS_IAM_User__PropertiesMap reports all the CloudFormation properties for AWS::IAM::User.
	AWS_IAM_User__PropertiesMap = struct {
		Groups              string
		LoginProfile        string
		ManagedPolicyArns   string
		Path                string
		PermissionsBoundary string
		Policies            string
		Tags                string
		UserName            string
	}{
		Groups:              "Groups",
		LoginProfile:        "LoginProfile",
		ManagedPolicyArns:   "ManagedPolicyArns",
		Path:                "Path",
		PermissionsBoundary: "PermissionsBoundary",
		Policies:            "Policies",
		Tags:                "Tags",
		UserName:            "UserName",
	}

	// AWS_IAM_User__PropertiesSlice reports all the CloudFormation properties for AWS::IAM::User.
	AWS_IAM_User__PropertiesSlice = []string{
		AWS_IAM_User__PropertiesMap.Groups,
		AWS_IAM_User__PropertiesMap.LoginProfile,
		AWS_IAM_User__PropertiesMap.ManagedPolicyArns,
		AWS_IAM_User__PropertiesMap.Path,
		AWS_IAM_User__PropertiesMap.PermissionsBoundary,
		AWS_IAM_User__PropertiesMap.Policies,
		AWS_IAM_User__PropertiesMap.Tags,
		AWS_IAM_User__PropertiesMap.UserName,
	}
)

// AWS_IAM_User is a binding for AWS::IAM::User.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html
type AWS_IAM_User struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Groups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-groups
	Groups cfz.ExpressionSlice[string] `json:"Groups,omitempty"`

	// LoginProfile is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-loginprofile
	LoginProfile cfz.Expression[AWS_IAM_User_LoginProfile] `json:"LoginProfile,omitempty"`

	// ManagedPolicyArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-managedpolicyarns
	ManagedPolicyArns cfz.ExpressionSlice[string] `json:"ManagedPolicyArns,omitempty"`

	// Path is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-path
	Path cfz.Expression[string] `json:"Path,omitempty"`

	// PermissionsBoundary is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-permissionsboundary
	PermissionsBoundary cfz.Expression[string] `json:"PermissionsBoundary,omitempty"`

	// Policies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-policies
	Policies cfz.ExpressionSlice[AWS_IAM_User_Policy] `json:"Policies,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UserName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-user.html#cfn-iam-user-username
	UserName cfz.Expression[string] `json:"UserName,omitempty"`
}

// New__AWS_IAM_User initializes a new *AWS_IAM_User.
func New__AWS_IAM_User(logicalName string) *AWS_IAM_User {
	return &AWS_IAM_User{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IAM_User) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IAM_User) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IAM_User) GetType() string {
	return AWS_IAM_User__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IAM_User) Set__LogicalName(v string) *AWS_IAM_User {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IAM_User) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IAM_User {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IAM_User) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IAM_User {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IAM_User) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IAM_User {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IAM_User) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IAM_User {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IAM_User) Set__RequestedOutputs(v []cfz.Output) *AWS_IAM_User {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IAM_User) Add__RequestedOutputs(v ...cfz.Output) *AWS_IAM_User {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Groups updates property "Groups".
func (t *AWS_IAM_User) Set__Groups(v cfz.ExpressionSlice[string]) *AWS_IAM_User {
	t.Groups = v
	return t
}

// SetS__Groups updates property "Groups".
func (t *AWS_IAM_User) SetS__Groups(v ...cfz.Expression[string]) *AWS_IAM_User {
	t.Groups = cfz.S(v...)
	return t
}

// SetSV__Groups updates property "Groups".
func (t *AWS_IAM_User) SetSV__Groups(v ...string) *AWS_IAM_User {
	t.Groups = cfz.SV(v...)
	return t
}

// Set__LoginProfile updates property "LoginProfile".
func (t *AWS_IAM_User) Set__LoginProfile(v cfz.Expression[AWS_IAM_User_LoginProfile]) *AWS_IAM_User {
	t.LoginProfile = v
	return t
}

// SetV__LoginProfile updates property "LoginProfile".
func (t *AWS_IAM_User) SetV__LoginProfile(v AWS_IAM_User_LoginProfile) *AWS_IAM_User {
	t.LoginProfile = cfz.V(v)
	return t
}

// Set__ManagedPolicyArns updates property "ManagedPolicyArns".
func (t *AWS_IAM_User) Set__ManagedPolicyArns(v cfz.ExpressionSlice[string]) *AWS_IAM_User {
	t.ManagedPolicyArns = v
	return t
}

// SetS__ManagedPolicyArns updates property "ManagedPolicyArns".
func (t *AWS_IAM_User) SetS__ManagedPolicyArns(v ...cfz.Expression[string]) *AWS_IAM_User {
	t.ManagedPolicyArns = cfz.S(v...)
	return t
}

// SetSV__ManagedPolicyArns updates property "ManagedPolicyArns".
func (t *AWS_IAM_User) SetSV__ManagedPolicyArns(v ...string) *AWS_IAM_User {
	t.ManagedPolicyArns = cfz.SV(v...)
	return t
}

// Set__Path updates property "Path".
func (t *AWS_IAM_User) Set__Path(v cfz.Expression[string]) *AWS_IAM_User {
	t.Path = v
	return t
}

// SetV__Path updates property "Path".
func (t *AWS_IAM_User) SetV__Path(v string) *AWS_IAM_User {
	t.Path = cfz.V(v)
	return t
}

// Set__PermissionsBoundary updates property "PermissionsBoundary".
func (t *AWS_IAM_User) Set__PermissionsBoundary(v cfz.Expression[string]) *AWS_IAM_User {
	t.PermissionsBoundary = v
	return t
}

// SetV__PermissionsBoundary updates property "PermissionsBoundary".
func (t *AWS_IAM_User) SetV__PermissionsBoundary(v string) *AWS_IAM_User {
	t.PermissionsBoundary = cfz.V(v)
	return t
}

// Set__Policies updates property "Policies".
func (t *AWS_IAM_User) Set__Policies(v cfz.ExpressionSlice[AWS_IAM_User_Policy]) *AWS_IAM_User {
	t.Policies = v
	return t
}

// SetS__Policies updates property "Policies".
func (t *AWS_IAM_User) SetS__Policies(v ...cfz.Expression[AWS_IAM_User_Policy]) *AWS_IAM_User {
	t.Policies = cfz.S(v...)
	return t
}

// SetSV__Policies updates property "Policies".
func (t *AWS_IAM_User) SetSV__Policies(v ...AWS_IAM_User_Policy) *AWS_IAM_User {
	t.Policies = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IAM_User) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_IAM_User {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_IAM_User) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_IAM_User {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_IAM_User) SetSV__Tags(v ...cfz.Tag) *AWS_IAM_User {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UserName updates property "UserName".
func (t *AWS_IAM_User) Set__UserName(v cfz.Expression[string]) *AWS_IAM_User {
	t.UserName = v
	return t
}

// SetV__UserName updates property "UserName".
func (t *AWS_IAM_User) SetV__UserName(v string) *AWS_IAM_User {
	t.UserName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IAM_User) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IAM_User) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_User__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IAM_User) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IAM_User) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IAM_User) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IAM_User

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IAM_User) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
