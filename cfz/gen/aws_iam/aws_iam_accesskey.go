// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iam

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IAM_AccessKey)(nil)
	_ cfz.Resource                   = (*AWS_IAM_AccessKey)(nil)
)

const (
	// AWS_IAM_AccessKey__Type is the CloudFormation type for AWS::IAM::AccessKey.
	AWS_IAM_AccessKey__Type = "AWS::IAM::AccessKey"
)

var (
	// AWS_IAM_AccessKey__AttributesMap reports all the CloudFormation attributes for AWS::IAM::AccessKey.
	AWS_IAM_AccessKey__AttributesMap = struct {
		SecretAccessKey string
	}{
		SecretAccessKey: "SecretAccessKey",
	}

	// AWS_IAM_AccessKey__AttributesSlice reports all the CloudFormation attributes for AWS::IAM::AccessKey.
	AWS_IAM_AccessKey__AttributesSlice = []string{
		AWS_IAM_AccessKey__AttributesMap.SecretAccessKey,
	}
)

var (
	// AWS_IAM_AccessKey__PropertiesMap reports all the CloudFormation properties for AWS::IAM::AccessKey.
	AWS_IAM_AccessKey__PropertiesMap = struct {
		Serial   string
		Status   string
		UserName string
	}{
		Serial:   "Serial",
		Status:   "Status",
		UserName: "UserName",
	}

	// AWS_IAM_AccessKey__PropertiesSlice reports all the CloudFormation properties for AWS::IAM::AccessKey.
	AWS_IAM_AccessKey__PropertiesSlice = []string{
		AWS_IAM_AccessKey__PropertiesMap.Serial,
		AWS_IAM_AccessKey__PropertiesMap.Status,
		AWS_IAM_AccessKey__PropertiesMap.UserName,
	}
)

// AWS_IAM_AccessKey is a binding for AWS::IAM::AccessKey.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html
type AWS_IAM_AccessKey struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Serial is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-serial
	Serial cfz.Expression[int32] `json:"Serial,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-status
	Status cfz.Expression[string] `json:"Status,omitempty"`

	// UserName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html#cfn-iam-accesskey-username
	UserName cfz.Expression[string] `json:"UserName,omitempty"`
}

// New__AWS_IAM_AccessKey initializes a new *AWS_IAM_AccessKey.
func New__AWS_IAM_AccessKey(logicalName string) *AWS_IAM_AccessKey {
	return &AWS_IAM_AccessKey{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IAM_AccessKey) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IAM_AccessKey) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IAM_AccessKey) GetType() string {
	return AWS_IAM_AccessKey__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IAM_AccessKey) Set__LogicalName(v string) *AWS_IAM_AccessKey {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IAM_AccessKey) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IAM_AccessKey {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IAM_AccessKey) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IAM_AccessKey {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IAM_AccessKey) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IAM_AccessKey {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IAM_AccessKey) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IAM_AccessKey {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IAM_AccessKey) Set__RequestedOutputs(v []cfz.Output) *AWS_IAM_AccessKey {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IAM_AccessKey) Add__RequestedOutputs(v ...cfz.Output) *AWS_IAM_AccessKey {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Serial updates property "Serial".
func (t *AWS_IAM_AccessKey) Set__Serial(v cfz.Expression[int32]) *AWS_IAM_AccessKey {
	t.Serial = v
	return t
}

// SetV__Serial updates property "Serial".
func (t *AWS_IAM_AccessKey) SetV__Serial(v int32) *AWS_IAM_AccessKey {
	t.Serial = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t *AWS_IAM_AccessKey) Set__Status(v cfz.Expression[string]) *AWS_IAM_AccessKey {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t *AWS_IAM_AccessKey) SetV__Status(v string) *AWS_IAM_AccessKey {
	t.Status = cfz.V(v)
	return t
}

// Set__UserName updates property "UserName".
func (t *AWS_IAM_AccessKey) Set__UserName(v cfz.Expression[string]) *AWS_IAM_AccessKey {
	t.UserName = v
	return t
}

// SetV__UserName updates property "UserName".
func (t *AWS_IAM_AccessKey) SetV__UserName(v string) *AWS_IAM_AccessKey {
	t.UserName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IAM_AccessKey) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__SecretAccessKey returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SecretAccessKey
func (t *AWS_IAM_AccessKey) GetAtt__SecretAccessKey() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_AccessKey__AttributesMap.SecretAccessKey))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IAM_AccessKey) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SecretAccessKey returns a conventionally configured output for an attribute of this resource.
// Attribute: SecretAccessKey
func (t *AWS_IAM_AccessKey) GetConventionalOutputAtt__SecretAccessKey(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSecretAccessKey", t.GetAtt__SecretAccessKey())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IAM_AccessKey) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IAM_AccessKey

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IAM_AccessKey) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
