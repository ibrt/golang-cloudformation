// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iam

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IAM_Role)(nil)
	_ cfz.Resource                   = (*AWS_IAM_Role)(nil)
)

const (
	// AWS_IAM_Role__Type is the CloudFormation type for AWS::IAM::Role.
	AWS_IAM_Role__Type = "AWS::IAM::Role"
)

var (
	// AWS_IAM_Role__AttributesMap reports all the CloudFormation attributes for AWS::IAM::Role.
	AWS_IAM_Role__AttributesMap = struct {
		Arn    string
		RoleId string
	}{
		Arn:    "Arn",
		RoleId: "RoleId",
	}

	// AWS_IAM_Role__AttributesSlice reports all the CloudFormation attributes for AWS::IAM::Role.
	AWS_IAM_Role__AttributesSlice = []string{
		AWS_IAM_Role__AttributesMap.Arn,
		AWS_IAM_Role__AttributesMap.RoleId,
	}
)

var (
	// AWS_IAM_Role__PropertiesMap reports all the CloudFormation properties for AWS::IAM::Role.
	AWS_IAM_Role__PropertiesMap = struct {
		AssumeRolePolicyDocument string
		Description              string
		ManagedPolicyArns        string
		MaxSessionDuration       string
		Path                     string
		PermissionsBoundary      string
		Policies                 string
		RoleName                 string
		Tags                     string
	}{
		AssumeRolePolicyDocument: "AssumeRolePolicyDocument",
		Description:              "Description",
		ManagedPolicyArns:        "ManagedPolicyArns",
		MaxSessionDuration:       "MaxSessionDuration",
		Path:                     "Path",
		PermissionsBoundary:      "PermissionsBoundary",
		Policies:                 "Policies",
		RoleName:                 "RoleName",
		Tags:                     "Tags",
	}

	// AWS_IAM_Role__PropertiesSlice reports all the CloudFormation properties for AWS::IAM::Role.
	AWS_IAM_Role__PropertiesSlice = []string{
		AWS_IAM_Role__PropertiesMap.AssumeRolePolicyDocument,
		AWS_IAM_Role__PropertiesMap.Description,
		AWS_IAM_Role__PropertiesMap.ManagedPolicyArns,
		AWS_IAM_Role__PropertiesMap.MaxSessionDuration,
		AWS_IAM_Role__PropertiesMap.Path,
		AWS_IAM_Role__PropertiesMap.PermissionsBoundary,
		AWS_IAM_Role__PropertiesMap.Policies,
		AWS_IAM_Role__PropertiesMap.RoleName,
		AWS_IAM_Role__PropertiesMap.Tags,
	}
)

// AWS_IAM_Role is a binding for AWS::IAM::Role.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
type AWS_IAM_Role struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AssumeRolePolicyDocument is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-assumerolepolicydocument
	AssumeRolePolicyDocument cfz.Expression[json.RawMessage] `json:"AssumeRolePolicyDocument,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// ManagedPolicyArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-managedpolicyarns
	ManagedPolicyArns cfz.ExpressionSlice[string] `json:"ManagedPolicyArns,omitempty"`

	// MaxSessionDuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-maxsessionduration
	MaxSessionDuration cfz.Expression[int32] `json:"MaxSessionDuration,omitempty"`

	// Path is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-path
	Path cfz.Expression[string] `json:"Path,omitempty"`

	// PermissionsBoundary is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-permissionsboundary
	PermissionsBoundary cfz.Expression[string] `json:"PermissionsBoundary,omitempty"`

	// Policies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-policies
	Policies cfz.ExpressionSlice[AWS_IAM_Role_Policy] `json:"Policies,omitempty"`

	// RoleName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-rolename
	RoleName cfz.Expression[string] `json:"RoleName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#cfn-iam-role-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_IAM_Role initializes a new *AWS_IAM_Role.
func New__AWS_IAM_Role(logicalName string) *AWS_IAM_Role {
	return &AWS_IAM_Role{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IAM_Role) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IAM_Role) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IAM_Role) GetType() string {
	return AWS_IAM_Role__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IAM_Role) Set__LogicalName(v string) *AWS_IAM_Role {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IAM_Role) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IAM_Role {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IAM_Role) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IAM_Role {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IAM_Role) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IAM_Role {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IAM_Role) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IAM_Role {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IAM_Role) Set__RequestedOutputs(v []cfz.Output) *AWS_IAM_Role {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IAM_Role) Add__RequestedOutputs(v ...cfz.Output) *AWS_IAM_Role {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AssumeRolePolicyDocument updates property "AssumeRolePolicyDocument".
func (t *AWS_IAM_Role) Set__AssumeRolePolicyDocument(v cfz.Expression[json.RawMessage]) *AWS_IAM_Role {
	t.AssumeRolePolicyDocument = v
	return t
}

// SetV__AssumeRolePolicyDocument updates property "AssumeRolePolicyDocument".
func (t *AWS_IAM_Role) SetV__AssumeRolePolicyDocument(v json.RawMessage) *AWS_IAM_Role {
	t.AssumeRolePolicyDocument = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_IAM_Role) Set__Description(v cfz.Expression[string]) *AWS_IAM_Role {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_IAM_Role) SetV__Description(v string) *AWS_IAM_Role {
	t.Description = cfz.V(v)
	return t
}

// Set__ManagedPolicyArns updates property "ManagedPolicyArns".
func (t *AWS_IAM_Role) Set__ManagedPolicyArns(v cfz.ExpressionSlice[string]) *AWS_IAM_Role {
	t.ManagedPolicyArns = v
	return t
}

// SetS__ManagedPolicyArns updates property "ManagedPolicyArns".
func (t *AWS_IAM_Role) SetS__ManagedPolicyArns(v ...cfz.Expression[string]) *AWS_IAM_Role {
	t.ManagedPolicyArns = cfz.S(v...)
	return t
}

// SetSV__ManagedPolicyArns updates property "ManagedPolicyArns".
func (t *AWS_IAM_Role) SetSV__ManagedPolicyArns(v ...string) *AWS_IAM_Role {
	t.ManagedPolicyArns = cfz.SV(v...)
	return t
}

// Set__MaxSessionDuration updates property "MaxSessionDuration".
func (t *AWS_IAM_Role) Set__MaxSessionDuration(v cfz.Expression[int32]) *AWS_IAM_Role {
	t.MaxSessionDuration = v
	return t
}

// SetV__MaxSessionDuration updates property "MaxSessionDuration".
func (t *AWS_IAM_Role) SetV__MaxSessionDuration(v int32) *AWS_IAM_Role {
	t.MaxSessionDuration = cfz.V(v)
	return t
}

// Set__Path updates property "Path".
func (t *AWS_IAM_Role) Set__Path(v cfz.Expression[string]) *AWS_IAM_Role {
	t.Path = v
	return t
}

// SetV__Path updates property "Path".
func (t *AWS_IAM_Role) SetV__Path(v string) *AWS_IAM_Role {
	t.Path = cfz.V(v)
	return t
}

// Set__PermissionsBoundary updates property "PermissionsBoundary".
func (t *AWS_IAM_Role) Set__PermissionsBoundary(v cfz.Expression[string]) *AWS_IAM_Role {
	t.PermissionsBoundary = v
	return t
}

// SetV__PermissionsBoundary updates property "PermissionsBoundary".
func (t *AWS_IAM_Role) SetV__PermissionsBoundary(v string) *AWS_IAM_Role {
	t.PermissionsBoundary = cfz.V(v)
	return t
}

// Set__Policies updates property "Policies".
func (t *AWS_IAM_Role) Set__Policies(v cfz.ExpressionSlice[AWS_IAM_Role_Policy]) *AWS_IAM_Role {
	t.Policies = v
	return t
}

// SetS__Policies updates property "Policies".
func (t *AWS_IAM_Role) SetS__Policies(v ...cfz.Expression[AWS_IAM_Role_Policy]) *AWS_IAM_Role {
	t.Policies = cfz.S(v...)
	return t
}

// SetSV__Policies updates property "Policies".
func (t *AWS_IAM_Role) SetSV__Policies(v ...AWS_IAM_Role_Policy) *AWS_IAM_Role {
	t.Policies = cfz.SV(v...)
	return t
}

// Set__RoleName updates property "RoleName".
func (t *AWS_IAM_Role) Set__RoleName(v cfz.Expression[string]) *AWS_IAM_Role {
	t.RoleName = v
	return t
}

// SetV__RoleName updates property "RoleName".
func (t *AWS_IAM_Role) SetV__RoleName(v string) *AWS_IAM_Role {
	t.RoleName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IAM_Role) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_IAM_Role {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_IAM_Role) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_IAM_Role {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_IAM_Role) SetSV__Tags(v ...cfz.Tag) *AWS_IAM_Role {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IAM_Role) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IAM_Role) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_Role__AttributesMap.Arn))
}

// GetAtt__RoleId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RoleId
func (t *AWS_IAM_Role) GetAtt__RoleId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IAM_Role__AttributesMap.RoleId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IAM_Role) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IAM_Role) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RoleId returns a conventionally configured output for an attribute of this resource.
// Attribute: RoleId
func (t *AWS_IAM_Role) GetConventionalOutputAtt__RoleId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRoleId", t.GetAtt__RoleId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IAM_Role) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IAM_Role

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IAM_Role) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
