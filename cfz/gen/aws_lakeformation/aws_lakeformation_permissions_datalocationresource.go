// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lakeformation

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_LakeFormation_Permissions_DataLocationResource__Type is the CloudFormation type for AWS::LakeFormation::Permissions.DataLocationResource.
	AWS_LakeFormation_Permissions_DataLocationResource__Type = "AWS::LakeFormation::Permissions.DataLocationResource"
)

var (
	// AWS_LakeFormation_Permissions_DataLocationResource__PropertiesMap reports all the CloudFormation properties for AWS::LakeFormation::Permissions.DataLocationResource.
	AWS_LakeFormation_Permissions_DataLocationResource__PropertiesMap = struct {
		CatalogId  string
		S3Resource string
	}{
		CatalogId:  "CatalogId",
		S3Resource: "S3Resource",
	}

	// AWS_LakeFormation_Permissions_DataLocationResource__PropertiesSlice reports all the CloudFormation properties for AWS::LakeFormation::Permissions.DataLocationResource.
	AWS_LakeFormation_Permissions_DataLocationResource__PropertiesSlice = []string{
		AWS_LakeFormation_Permissions_DataLocationResource__PropertiesMap.CatalogId,
		AWS_LakeFormation_Permissions_DataLocationResource__PropertiesMap.S3Resource,
	}
)

// AWS_LakeFormation_Permissions_DataLocationResource is a binding for AWS::LakeFormation::Permissions.DataLocationResource.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-datalocationresource.html
type AWS_LakeFormation_Permissions_DataLocationResource struct {
	// CatalogId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-datalocationresource.html#cfn-lakeformation-permissions-datalocationresource-catalogid
	CatalogId cfz.Expression[string] `json:"CatalogId,omitempty"`

	// S3Resource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-permissions-datalocationresource.html#cfn-lakeformation-permissions-datalocationresource-s3resource
	S3Resource cfz.Expression[string] `json:"S3Resource,omitempty"`
}

// New__AWS_LakeFormation_Permissions_DataLocationResource initializes a new AWS_LakeFormation_Permissions_DataLocationResource.
func New__AWS_LakeFormation_Permissions_DataLocationResource() AWS_LakeFormation_Permissions_DataLocationResource {
	return AWS_LakeFormation_Permissions_DataLocationResource{}
}

// GetType returns the CloudFormation type.
func (AWS_LakeFormation_Permissions_DataLocationResource) GetType() string {
	return AWS_LakeFormation_Permissions_DataLocationResource__Type
}

// Set__CatalogId updates property "CatalogId".
func (t AWS_LakeFormation_Permissions_DataLocationResource) Set__CatalogId(v cfz.Expression[string]) AWS_LakeFormation_Permissions_DataLocationResource {
	t.CatalogId = v
	return t
}

// SetV__CatalogId updates property "CatalogId".
func (t AWS_LakeFormation_Permissions_DataLocationResource) SetV__CatalogId(v string) AWS_LakeFormation_Permissions_DataLocationResource {
	t.CatalogId = cfz.V(v)
	return t
}

// Set__S3Resource updates property "S3Resource".
func (t AWS_LakeFormation_Permissions_DataLocationResource) Set__S3Resource(v cfz.Expression[string]) AWS_LakeFormation_Permissions_DataLocationResource {
	t.S3Resource = v
	return t
}

// SetV__S3Resource updates property "S3Resource".
func (t AWS_LakeFormation_Permissions_DataLocationResource) SetV__S3Resource(v string) AWS_LakeFormation_Permissions_DataLocationResource {
	t.S3Resource = cfz.V(v)
	return t
}
