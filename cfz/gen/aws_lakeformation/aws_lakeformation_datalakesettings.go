// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lakeformation

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_LakeFormation_DataLakeSettings)(nil)
	_ cfz.Resource                   = (*AWS_LakeFormation_DataLakeSettings)(nil)
)

const (
	// AWS_LakeFormation_DataLakeSettings__Type is the CloudFormation type for AWS::LakeFormation::DataLakeSettings.
	AWS_LakeFormation_DataLakeSettings__Type = "AWS::LakeFormation::DataLakeSettings"
)

var (
	// AWS_LakeFormation_DataLakeSettings__PropertiesMap reports all the CloudFormation properties for AWS::LakeFormation::DataLakeSettings.
	AWS_LakeFormation_DataLakeSettings__PropertiesMap = struct {
		Admins                           string
		AllowExternalDataFiltering       string
		AllowFullTableExternalDataAccess string
		AuthorizedSessionTagValueList    string
		CreateDatabaseDefaultPermissions string
		CreateTableDefaultPermissions    string
		ExternalDataFilteringAllowList   string
		MutationType                     string
		Parameters                       string
		TrustedResourceOwners            string
	}{
		Admins:                           "Admins",
		AllowExternalDataFiltering:       "AllowExternalDataFiltering",
		AllowFullTableExternalDataAccess: "AllowFullTableExternalDataAccess",
		AuthorizedSessionTagValueList:    "AuthorizedSessionTagValueList",
		CreateDatabaseDefaultPermissions: "CreateDatabaseDefaultPermissions",
		CreateTableDefaultPermissions:    "CreateTableDefaultPermissions",
		ExternalDataFilteringAllowList:   "ExternalDataFilteringAllowList",
		MutationType:                     "MutationType",
		Parameters:                       "Parameters",
		TrustedResourceOwners:            "TrustedResourceOwners",
	}

	// AWS_LakeFormation_DataLakeSettings__PropertiesSlice reports all the CloudFormation properties for AWS::LakeFormation::DataLakeSettings.
	AWS_LakeFormation_DataLakeSettings__PropertiesSlice = []string{
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.Admins,
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.AllowExternalDataFiltering,
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.AllowFullTableExternalDataAccess,
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.AuthorizedSessionTagValueList,
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.CreateDatabaseDefaultPermissions,
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.CreateTableDefaultPermissions,
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.ExternalDataFilteringAllowList,
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.MutationType,
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.Parameters,
		AWS_LakeFormation_DataLakeSettings__PropertiesMap.TrustedResourceOwners,
	}
)

// AWS_LakeFormation_DataLakeSettings is a binding for AWS::LakeFormation::DataLakeSettings.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html
type AWS_LakeFormation_DataLakeSettings struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Admins is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-admins
	Admins cfz.ExpressionSlice[AWS_LakeFormation_DataLakeSettings_DataLakePrincipal] `json:"Admins,omitempty"`

	// AllowExternalDataFiltering is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-allowexternaldatafiltering
	AllowExternalDataFiltering cfz.Expression[bool] `json:"AllowExternalDataFiltering,omitempty"`

	// AllowFullTableExternalDataAccess is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-allowfulltableexternaldataaccess
	AllowFullTableExternalDataAccess cfz.Expression[bool] `json:"AllowFullTableExternalDataAccess,omitempty"`

	// AuthorizedSessionTagValueList is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-authorizedsessiontagvaluelist
	AuthorizedSessionTagValueList cfz.ExpressionSlice[string] `json:"AuthorizedSessionTagValueList,omitempty"`

	// CreateDatabaseDefaultPermissions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-createdatabasedefaultpermissions
	CreateDatabaseDefaultPermissions cfz.ExpressionSlice[AWS_LakeFormation_DataLakeSettings_PrincipalPermissions] `json:"CreateDatabaseDefaultPermissions,omitempty"`

	// CreateTableDefaultPermissions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-createtabledefaultpermissions
	CreateTableDefaultPermissions cfz.ExpressionSlice[AWS_LakeFormation_DataLakeSettings_PrincipalPermissions] `json:"CreateTableDefaultPermissions,omitempty"`

	// ExternalDataFilteringAllowList is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-externaldatafilteringallowlist
	ExternalDataFilteringAllowList cfz.ExpressionSlice[AWS_LakeFormation_DataLakeSettings_DataLakePrincipal] `json:"ExternalDataFilteringAllowList,omitempty"`

	// MutationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-mutationtype
	MutationType cfz.Expression[string] `json:"MutationType,omitempty"`

	// Parameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-parameters
	Parameters cfz.Expression[json.RawMessage] `json:"Parameters,omitempty"`

	// TrustedResourceOwners is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datalakesettings.html#cfn-lakeformation-datalakesettings-trustedresourceowners
	TrustedResourceOwners cfz.ExpressionSlice[string] `json:"TrustedResourceOwners,omitempty"`
}

// New__AWS_LakeFormation_DataLakeSettings initializes a new *AWS_LakeFormation_DataLakeSettings.
func New__AWS_LakeFormation_DataLakeSettings(logicalName string) *AWS_LakeFormation_DataLakeSettings {
	return &AWS_LakeFormation_DataLakeSettings{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_LakeFormation_DataLakeSettings) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_LakeFormation_DataLakeSettings) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_LakeFormation_DataLakeSettings) GetType() string {
	return AWS_LakeFormation_DataLakeSettings__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_LakeFormation_DataLakeSettings) Set__LogicalName(v string) *AWS_LakeFormation_DataLakeSettings {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_LakeFormation_DataLakeSettings) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_LakeFormation_DataLakeSettings {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_LakeFormation_DataLakeSettings) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_LakeFormation_DataLakeSettings {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_LakeFormation_DataLakeSettings) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_LakeFormation_DataLakeSettings {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_LakeFormation_DataLakeSettings) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_LakeFormation_DataLakeSettings {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_LakeFormation_DataLakeSettings) Set__RequestedOutputs(v []cfz.Output) *AWS_LakeFormation_DataLakeSettings {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_LakeFormation_DataLakeSettings) Add__RequestedOutputs(v ...cfz.Output) *AWS_LakeFormation_DataLakeSettings {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Admins updates property "Admins".
func (t *AWS_LakeFormation_DataLakeSettings) Set__Admins(v cfz.ExpressionSlice[AWS_LakeFormation_DataLakeSettings_DataLakePrincipal]) *AWS_LakeFormation_DataLakeSettings {
	t.Admins = v
	return t
}

// SetS__Admins updates property "Admins".
func (t *AWS_LakeFormation_DataLakeSettings) SetS__Admins(v ...cfz.Expression[AWS_LakeFormation_DataLakeSettings_DataLakePrincipal]) *AWS_LakeFormation_DataLakeSettings {
	t.Admins = cfz.S(v...)
	return t
}

// SetSV__Admins updates property "Admins".
func (t *AWS_LakeFormation_DataLakeSettings) SetSV__Admins(v ...AWS_LakeFormation_DataLakeSettings_DataLakePrincipal) *AWS_LakeFormation_DataLakeSettings {
	t.Admins = cfz.SV(v...)
	return t
}

// Set__AllowExternalDataFiltering updates property "AllowExternalDataFiltering".
func (t *AWS_LakeFormation_DataLakeSettings) Set__AllowExternalDataFiltering(v cfz.Expression[bool]) *AWS_LakeFormation_DataLakeSettings {
	t.AllowExternalDataFiltering = v
	return t
}

// SetV__AllowExternalDataFiltering updates property "AllowExternalDataFiltering".
func (t *AWS_LakeFormation_DataLakeSettings) SetV__AllowExternalDataFiltering(v bool) *AWS_LakeFormation_DataLakeSettings {
	t.AllowExternalDataFiltering = cfz.V(v)
	return t
}

// Set__AllowFullTableExternalDataAccess updates property "AllowFullTableExternalDataAccess".
func (t *AWS_LakeFormation_DataLakeSettings) Set__AllowFullTableExternalDataAccess(v cfz.Expression[bool]) *AWS_LakeFormation_DataLakeSettings {
	t.AllowFullTableExternalDataAccess = v
	return t
}

// SetV__AllowFullTableExternalDataAccess updates property "AllowFullTableExternalDataAccess".
func (t *AWS_LakeFormation_DataLakeSettings) SetV__AllowFullTableExternalDataAccess(v bool) *AWS_LakeFormation_DataLakeSettings {
	t.AllowFullTableExternalDataAccess = cfz.V(v)
	return t
}

// Set__AuthorizedSessionTagValueList updates property "AuthorizedSessionTagValueList".
func (t *AWS_LakeFormation_DataLakeSettings) Set__AuthorizedSessionTagValueList(v cfz.ExpressionSlice[string]) *AWS_LakeFormation_DataLakeSettings {
	t.AuthorizedSessionTagValueList = v
	return t
}

// SetS__AuthorizedSessionTagValueList updates property "AuthorizedSessionTagValueList".
func (t *AWS_LakeFormation_DataLakeSettings) SetS__AuthorizedSessionTagValueList(v ...cfz.Expression[string]) *AWS_LakeFormation_DataLakeSettings {
	t.AuthorizedSessionTagValueList = cfz.S(v...)
	return t
}

// SetSV__AuthorizedSessionTagValueList updates property "AuthorizedSessionTagValueList".
func (t *AWS_LakeFormation_DataLakeSettings) SetSV__AuthorizedSessionTagValueList(v ...string) *AWS_LakeFormation_DataLakeSettings {
	t.AuthorizedSessionTagValueList = cfz.SV(v...)
	return t
}

// Set__CreateDatabaseDefaultPermissions updates property "CreateDatabaseDefaultPermissions".
func (t *AWS_LakeFormation_DataLakeSettings) Set__CreateDatabaseDefaultPermissions(v cfz.ExpressionSlice[AWS_LakeFormation_DataLakeSettings_PrincipalPermissions]) *AWS_LakeFormation_DataLakeSettings {
	t.CreateDatabaseDefaultPermissions = v
	return t
}

// SetS__CreateDatabaseDefaultPermissions updates property "CreateDatabaseDefaultPermissions".
func (t *AWS_LakeFormation_DataLakeSettings) SetS__CreateDatabaseDefaultPermissions(v ...cfz.Expression[AWS_LakeFormation_DataLakeSettings_PrincipalPermissions]) *AWS_LakeFormation_DataLakeSettings {
	t.CreateDatabaseDefaultPermissions = cfz.S(v...)
	return t
}

// SetSV__CreateDatabaseDefaultPermissions updates property "CreateDatabaseDefaultPermissions".
func (t *AWS_LakeFormation_DataLakeSettings) SetSV__CreateDatabaseDefaultPermissions(v ...AWS_LakeFormation_DataLakeSettings_PrincipalPermissions) *AWS_LakeFormation_DataLakeSettings {
	t.CreateDatabaseDefaultPermissions = cfz.SV(v...)
	return t
}

// Set__CreateTableDefaultPermissions updates property "CreateTableDefaultPermissions".
func (t *AWS_LakeFormation_DataLakeSettings) Set__CreateTableDefaultPermissions(v cfz.ExpressionSlice[AWS_LakeFormation_DataLakeSettings_PrincipalPermissions]) *AWS_LakeFormation_DataLakeSettings {
	t.CreateTableDefaultPermissions = v
	return t
}

// SetS__CreateTableDefaultPermissions updates property "CreateTableDefaultPermissions".
func (t *AWS_LakeFormation_DataLakeSettings) SetS__CreateTableDefaultPermissions(v ...cfz.Expression[AWS_LakeFormation_DataLakeSettings_PrincipalPermissions]) *AWS_LakeFormation_DataLakeSettings {
	t.CreateTableDefaultPermissions = cfz.S(v...)
	return t
}

// SetSV__CreateTableDefaultPermissions updates property "CreateTableDefaultPermissions".
func (t *AWS_LakeFormation_DataLakeSettings) SetSV__CreateTableDefaultPermissions(v ...AWS_LakeFormation_DataLakeSettings_PrincipalPermissions) *AWS_LakeFormation_DataLakeSettings {
	t.CreateTableDefaultPermissions = cfz.SV(v...)
	return t
}

// Set__ExternalDataFilteringAllowList updates property "ExternalDataFilteringAllowList".
func (t *AWS_LakeFormation_DataLakeSettings) Set__ExternalDataFilteringAllowList(v cfz.ExpressionSlice[AWS_LakeFormation_DataLakeSettings_DataLakePrincipal]) *AWS_LakeFormation_DataLakeSettings {
	t.ExternalDataFilteringAllowList = v
	return t
}

// SetS__ExternalDataFilteringAllowList updates property "ExternalDataFilteringAllowList".
func (t *AWS_LakeFormation_DataLakeSettings) SetS__ExternalDataFilteringAllowList(v ...cfz.Expression[AWS_LakeFormation_DataLakeSettings_DataLakePrincipal]) *AWS_LakeFormation_DataLakeSettings {
	t.ExternalDataFilteringAllowList = cfz.S(v...)
	return t
}

// SetSV__ExternalDataFilteringAllowList updates property "ExternalDataFilteringAllowList".
func (t *AWS_LakeFormation_DataLakeSettings) SetSV__ExternalDataFilteringAllowList(v ...AWS_LakeFormation_DataLakeSettings_DataLakePrincipal) *AWS_LakeFormation_DataLakeSettings {
	t.ExternalDataFilteringAllowList = cfz.SV(v...)
	return t
}

// Set__MutationType updates property "MutationType".
func (t *AWS_LakeFormation_DataLakeSettings) Set__MutationType(v cfz.Expression[string]) *AWS_LakeFormation_DataLakeSettings {
	t.MutationType = v
	return t
}

// SetV__MutationType updates property "MutationType".
func (t *AWS_LakeFormation_DataLakeSettings) SetV__MutationType(v string) *AWS_LakeFormation_DataLakeSettings {
	t.MutationType = cfz.V(v)
	return t
}

// Set__Parameters updates property "Parameters".
func (t *AWS_LakeFormation_DataLakeSettings) Set__Parameters(v cfz.Expression[json.RawMessage]) *AWS_LakeFormation_DataLakeSettings {
	t.Parameters = v
	return t
}

// SetV__Parameters updates property "Parameters".
func (t *AWS_LakeFormation_DataLakeSettings) SetV__Parameters(v json.RawMessage) *AWS_LakeFormation_DataLakeSettings {
	t.Parameters = cfz.V(v)
	return t
}

// Set__TrustedResourceOwners updates property "TrustedResourceOwners".
func (t *AWS_LakeFormation_DataLakeSettings) Set__TrustedResourceOwners(v cfz.ExpressionSlice[string]) *AWS_LakeFormation_DataLakeSettings {
	t.TrustedResourceOwners = v
	return t
}

// SetS__TrustedResourceOwners updates property "TrustedResourceOwners".
func (t *AWS_LakeFormation_DataLakeSettings) SetS__TrustedResourceOwners(v ...cfz.Expression[string]) *AWS_LakeFormation_DataLakeSettings {
	t.TrustedResourceOwners = cfz.S(v...)
	return t
}

// SetSV__TrustedResourceOwners updates property "TrustedResourceOwners".
func (t *AWS_LakeFormation_DataLakeSettings) SetSV__TrustedResourceOwners(v ...string) *AWS_LakeFormation_DataLakeSettings {
	t.TrustedResourceOwners = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_LakeFormation_DataLakeSettings) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_LakeFormation_DataLakeSettings) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_LakeFormation_DataLakeSettings) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_LakeFormation_DataLakeSettings

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_LakeFormation_DataLakeSettings) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
