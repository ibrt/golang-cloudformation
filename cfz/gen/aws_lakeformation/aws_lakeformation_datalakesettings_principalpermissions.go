// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lakeformation

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_LakeFormation_DataLakeSettings_PrincipalPermissions__Type is the CloudFormation type for AWS::LakeFormation::DataLakeSettings.PrincipalPermissions.
	AWS_LakeFormation_DataLakeSettings_PrincipalPermissions__Type = "AWS::LakeFormation::DataLakeSettings.PrincipalPermissions"
)

var (
	// AWS_LakeFormation_DataLakeSettings_PrincipalPermissions__PropertiesMap reports all the CloudFormation properties for AWS::LakeFormation::DataLakeSettings.PrincipalPermissions.
	AWS_LakeFormation_DataLakeSettings_PrincipalPermissions__PropertiesMap = struct {
		Permissions string
		Principal   string
	}{
		Permissions: "Permissions",
		Principal:   "Principal",
	}

	// AWS_LakeFormation_DataLakeSettings_PrincipalPermissions__PropertiesSlice reports all the CloudFormation properties for AWS::LakeFormation::DataLakeSettings.PrincipalPermissions.
	AWS_LakeFormation_DataLakeSettings_PrincipalPermissions__PropertiesSlice = []string{
		AWS_LakeFormation_DataLakeSettings_PrincipalPermissions__PropertiesMap.Permissions,
		AWS_LakeFormation_DataLakeSettings_PrincipalPermissions__PropertiesMap.Principal,
	}
)

// AWS_LakeFormation_DataLakeSettings_PrincipalPermissions is a binding for AWS::LakeFormation::DataLakeSettings.PrincipalPermissions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-datalakesettings-principalpermissions.html
type AWS_LakeFormation_DataLakeSettings_PrincipalPermissions struct {
	// Permissions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-datalakesettings-principalpermissions.html#cfn-lakeformation-datalakesettings-principalpermissions-permissions
	Permissions cfz.ExpressionSlice[string] `json:"Permissions,omitempty"`

	// Principal is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lakeformation-datalakesettings-principalpermissions.html#cfn-lakeformation-datalakesettings-principalpermissions-principal
	Principal cfz.Expression[AWS_LakeFormation_DataLakeSettings_DataLakePrincipal] `json:"Principal,omitempty"`
}

// New__AWS_LakeFormation_DataLakeSettings_PrincipalPermissions initializes a new AWS_LakeFormation_DataLakeSettings_PrincipalPermissions.
func New__AWS_LakeFormation_DataLakeSettings_PrincipalPermissions() AWS_LakeFormation_DataLakeSettings_PrincipalPermissions {
	return AWS_LakeFormation_DataLakeSettings_PrincipalPermissions{}
}

// GetType returns the CloudFormation type.
func (AWS_LakeFormation_DataLakeSettings_PrincipalPermissions) GetType() string {
	return AWS_LakeFormation_DataLakeSettings_PrincipalPermissions__Type
}

// Set__Permissions updates property "Permissions".
func (t AWS_LakeFormation_DataLakeSettings_PrincipalPermissions) Set__Permissions(v cfz.ExpressionSlice[string]) AWS_LakeFormation_DataLakeSettings_PrincipalPermissions {
	t.Permissions = v
	return t
}

// SetS__Permissions updates property "Permissions".
func (t AWS_LakeFormation_DataLakeSettings_PrincipalPermissions) SetS__Permissions(v ...cfz.Expression[string]) AWS_LakeFormation_DataLakeSettings_PrincipalPermissions {
	t.Permissions = cfz.S(v...)
	return t
}

// SetSV__Permissions updates property "Permissions".
func (t AWS_LakeFormation_DataLakeSettings_PrincipalPermissions) SetSV__Permissions(v ...string) AWS_LakeFormation_DataLakeSettings_PrincipalPermissions {
	t.Permissions = cfz.SV(v...)
	return t
}

// Set__Principal updates property "Principal".
func (t AWS_LakeFormation_DataLakeSettings_PrincipalPermissions) Set__Principal(v cfz.Expression[AWS_LakeFormation_DataLakeSettings_DataLakePrincipal]) AWS_LakeFormation_DataLakeSettings_PrincipalPermissions {
	t.Principal = v
	return t
}

// SetV__Principal updates property "Principal".
func (t AWS_LakeFormation_DataLakeSettings_PrincipalPermissions) SetV__Principal(v AWS_LakeFormation_DataLakeSettings_DataLakePrincipal) AWS_LakeFormation_DataLakeSettings_PrincipalPermissions {
	t.Principal = cfz.V(v)
	return t
}
