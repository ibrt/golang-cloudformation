// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lakeformation

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_LakeFormation_PrincipalPermissions)(nil)
	_ cfz.Resource                   = (*AWS_LakeFormation_PrincipalPermissions)(nil)
)

const (
	// AWS_LakeFormation_PrincipalPermissions__Type is the CloudFormation type for AWS::LakeFormation::PrincipalPermissions.
	AWS_LakeFormation_PrincipalPermissions__Type = "AWS::LakeFormation::PrincipalPermissions"
)

var (
	// AWS_LakeFormation_PrincipalPermissions__AttributesMap reports all the CloudFormation attributes for AWS::LakeFormation::PrincipalPermissions.
	AWS_LakeFormation_PrincipalPermissions__AttributesMap = struct {
		PrincipalIdentifier string
		ResourceIdentifier  string
	}{
		PrincipalIdentifier: "PrincipalIdentifier",
		ResourceIdentifier:  "ResourceIdentifier",
	}

	// AWS_LakeFormation_PrincipalPermissions__AttributesSlice reports all the CloudFormation attributes for AWS::LakeFormation::PrincipalPermissions.
	AWS_LakeFormation_PrincipalPermissions__AttributesSlice = []string{
		AWS_LakeFormation_PrincipalPermissions__AttributesMap.PrincipalIdentifier,
		AWS_LakeFormation_PrincipalPermissions__AttributesMap.ResourceIdentifier,
	}
)

var (
	// AWS_LakeFormation_PrincipalPermissions__PropertiesMap reports all the CloudFormation properties for AWS::LakeFormation::PrincipalPermissions.
	AWS_LakeFormation_PrincipalPermissions__PropertiesMap = struct {
		Catalog                    string
		Permissions                string
		PermissionsWithGrantOption string
		Principal                  string
		Resource                   string
	}{
		Catalog:                    "Catalog",
		Permissions:                "Permissions",
		PermissionsWithGrantOption: "PermissionsWithGrantOption",
		Principal:                  "Principal",
		Resource:                   "Resource",
	}

	// AWS_LakeFormation_PrincipalPermissions__PropertiesSlice reports all the CloudFormation properties for AWS::LakeFormation::PrincipalPermissions.
	AWS_LakeFormation_PrincipalPermissions__PropertiesSlice = []string{
		AWS_LakeFormation_PrincipalPermissions__PropertiesMap.Catalog,
		AWS_LakeFormation_PrincipalPermissions__PropertiesMap.Permissions,
		AWS_LakeFormation_PrincipalPermissions__PropertiesMap.PermissionsWithGrantOption,
		AWS_LakeFormation_PrincipalPermissions__PropertiesMap.Principal,
		AWS_LakeFormation_PrincipalPermissions__PropertiesMap.Resource,
	}
)

// AWS_LakeFormation_PrincipalPermissions is a binding for AWS::LakeFormation::PrincipalPermissions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html
type AWS_LakeFormation_PrincipalPermissions struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Catalog is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-catalog
	Catalog cfz.Expression[string] `json:"Catalog,omitempty"`

	// Permissions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-permissions
	Permissions cfz.ExpressionSlice[string] `json:"Permissions,omitempty"`

	// PermissionsWithGrantOption is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-permissionswithgrantoption
	PermissionsWithGrantOption cfz.ExpressionSlice[string] `json:"PermissionsWithGrantOption,omitempty"`

	// Principal is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-principal
	Principal cfz.Expression[AWS_LakeFormation_PrincipalPermissions_DataLakePrincipal] `json:"Principal,omitempty"`

	// Resource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-principalpermissions.html#cfn-lakeformation-principalpermissions-resource
	Resource cfz.Expression[AWS_LakeFormation_PrincipalPermissions_Resource] `json:"Resource,omitempty"`
}

// New__AWS_LakeFormation_PrincipalPermissions initializes a new *AWS_LakeFormation_PrincipalPermissions.
func New__AWS_LakeFormation_PrincipalPermissions(logicalName string) *AWS_LakeFormation_PrincipalPermissions {
	return &AWS_LakeFormation_PrincipalPermissions{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_LakeFormation_PrincipalPermissions) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_LakeFormation_PrincipalPermissions) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_LakeFormation_PrincipalPermissions) GetType() string {
	return AWS_LakeFormation_PrincipalPermissions__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__LogicalName(v string) *AWS_LakeFormation_PrincipalPermissions {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_LakeFormation_PrincipalPermissions {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_LakeFormation_PrincipalPermissions) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_LakeFormation_PrincipalPermissions {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_LakeFormation_PrincipalPermissions {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_LakeFormation_PrincipalPermissions {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__RequestedOutputs(v []cfz.Output) *AWS_LakeFormation_PrincipalPermissions {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_LakeFormation_PrincipalPermissions) Add__RequestedOutputs(v ...cfz.Output) *AWS_LakeFormation_PrincipalPermissions {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Catalog updates property "Catalog".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__Catalog(v cfz.Expression[string]) *AWS_LakeFormation_PrincipalPermissions {
	t.Catalog = v
	return t
}

// SetV__Catalog updates property "Catalog".
func (t *AWS_LakeFormation_PrincipalPermissions) SetV__Catalog(v string) *AWS_LakeFormation_PrincipalPermissions {
	t.Catalog = cfz.V(v)
	return t
}

// Set__Permissions updates property "Permissions".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__Permissions(v cfz.ExpressionSlice[string]) *AWS_LakeFormation_PrincipalPermissions {
	t.Permissions = v
	return t
}

// SetS__Permissions updates property "Permissions".
func (t *AWS_LakeFormation_PrincipalPermissions) SetS__Permissions(v ...cfz.Expression[string]) *AWS_LakeFormation_PrincipalPermissions {
	t.Permissions = cfz.S(v...)
	return t
}

// SetSV__Permissions updates property "Permissions".
func (t *AWS_LakeFormation_PrincipalPermissions) SetSV__Permissions(v ...string) *AWS_LakeFormation_PrincipalPermissions {
	t.Permissions = cfz.SV(v...)
	return t
}

// Set__PermissionsWithGrantOption updates property "PermissionsWithGrantOption".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__PermissionsWithGrantOption(v cfz.ExpressionSlice[string]) *AWS_LakeFormation_PrincipalPermissions {
	t.PermissionsWithGrantOption = v
	return t
}

// SetS__PermissionsWithGrantOption updates property "PermissionsWithGrantOption".
func (t *AWS_LakeFormation_PrincipalPermissions) SetS__PermissionsWithGrantOption(v ...cfz.Expression[string]) *AWS_LakeFormation_PrincipalPermissions {
	t.PermissionsWithGrantOption = cfz.S(v...)
	return t
}

// SetSV__PermissionsWithGrantOption updates property "PermissionsWithGrantOption".
func (t *AWS_LakeFormation_PrincipalPermissions) SetSV__PermissionsWithGrantOption(v ...string) *AWS_LakeFormation_PrincipalPermissions {
	t.PermissionsWithGrantOption = cfz.SV(v...)
	return t
}

// Set__Principal updates property "Principal".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__Principal(v cfz.Expression[AWS_LakeFormation_PrincipalPermissions_DataLakePrincipal]) *AWS_LakeFormation_PrincipalPermissions {
	t.Principal = v
	return t
}

// SetV__Principal updates property "Principal".
func (t *AWS_LakeFormation_PrincipalPermissions) SetV__Principal(v AWS_LakeFormation_PrincipalPermissions_DataLakePrincipal) *AWS_LakeFormation_PrincipalPermissions {
	t.Principal = cfz.V(v)
	return t
}

// Set__Resource updates property "Resource".
func (t *AWS_LakeFormation_PrincipalPermissions) Set__Resource(v cfz.Expression[AWS_LakeFormation_PrincipalPermissions_Resource]) *AWS_LakeFormation_PrincipalPermissions {
	t.Resource = v
	return t
}

// SetV__Resource updates property "Resource".
func (t *AWS_LakeFormation_PrincipalPermissions) SetV__Resource(v AWS_LakeFormation_PrincipalPermissions_Resource) *AWS_LakeFormation_PrincipalPermissions {
	t.Resource = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_LakeFormation_PrincipalPermissions) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__PrincipalIdentifier returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PrincipalIdentifier
func (t *AWS_LakeFormation_PrincipalPermissions) GetAtt__PrincipalIdentifier() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_LakeFormation_PrincipalPermissions__AttributesMap.PrincipalIdentifier))
}

// GetAtt__ResourceIdentifier returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceIdentifier
func (t *AWS_LakeFormation_PrincipalPermissions) GetAtt__ResourceIdentifier() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_LakeFormation_PrincipalPermissions__AttributesMap.ResourceIdentifier))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_LakeFormation_PrincipalPermissions) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PrincipalIdentifier returns a conventionally configured output for an attribute of this resource.
// Attribute: PrincipalIdentifier
func (t *AWS_LakeFormation_PrincipalPermissions) GetConventionalOutputAtt__PrincipalIdentifier(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPrincipalIdentifier", t.GetAtt__PrincipalIdentifier())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceIdentifier returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceIdentifier
func (t *AWS_LakeFormation_PrincipalPermissions) GetConventionalOutputAtt__ResourceIdentifier(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceIdentifier", t.GetAtt__ResourceIdentifier())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_LakeFormation_PrincipalPermissions) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_LakeFormation_PrincipalPermissions

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_LakeFormation_PrincipalPermissions) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
