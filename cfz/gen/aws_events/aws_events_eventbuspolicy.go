// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_events

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Events_EventBusPolicy)(nil)
	_ cfz.Resource                   = (*AWS_Events_EventBusPolicy)(nil)
)

const (
	// AWS_Events_EventBusPolicy__Type is the CloudFormation type for AWS::Events::EventBusPolicy.
	AWS_Events_EventBusPolicy__Type = "AWS::Events::EventBusPolicy"
)

var (
	// AWS_Events_EventBusPolicy__PropertiesMap reports all the CloudFormation properties for AWS::Events::EventBusPolicy.
	AWS_Events_EventBusPolicy__PropertiesMap = struct {
		Action       string
		Condition    string
		EventBusName string
		Principal    string
		Statement    string
		StatementId  string
	}{
		Action:       "Action",
		Condition:    "Condition",
		EventBusName: "EventBusName",
		Principal:    "Principal",
		Statement:    "Statement",
		StatementId:  "StatementId",
	}

	// AWS_Events_EventBusPolicy__PropertiesSlice reports all the CloudFormation properties for AWS::Events::EventBusPolicy.
	AWS_Events_EventBusPolicy__PropertiesSlice = []string{
		AWS_Events_EventBusPolicy__PropertiesMap.Action,
		AWS_Events_EventBusPolicy__PropertiesMap.Condition,
		AWS_Events_EventBusPolicy__PropertiesMap.EventBusName,
		AWS_Events_EventBusPolicy__PropertiesMap.Principal,
		AWS_Events_EventBusPolicy__PropertiesMap.Statement,
		AWS_Events_EventBusPolicy__PropertiesMap.StatementId,
	}
)

// AWS_Events_EventBusPolicy is a binding for AWS::Events::EventBusPolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html
type AWS_Events_EventBusPolicy struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Action is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-action
	Action cfz.Expression[string] `json:"Action,omitempty"`

	// Condition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-condition
	Condition cfz.Expression[AWS_Events_EventBusPolicy_Condition] `json:"Condition,omitempty"`

	// EventBusName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-eventbusname
	EventBusName cfz.Expression[string] `json:"EventBusName,omitempty"`

	// Principal is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-principal
	Principal cfz.Expression[string] `json:"Principal,omitempty"`

	// Statement is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-statement
	Statement cfz.Expression[json.RawMessage] `json:"Statement,omitempty"`

	// StatementId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbuspolicy.html#cfn-events-eventbuspolicy-statementid
	StatementId cfz.Expression[string] `json:"StatementId,omitempty"`
}

// New__AWS_Events_EventBusPolicy initializes a new *AWS_Events_EventBusPolicy.
func New__AWS_Events_EventBusPolicy(logicalName string) *AWS_Events_EventBusPolicy {
	return &AWS_Events_EventBusPolicy{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Events_EventBusPolicy) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Events_EventBusPolicy) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Events_EventBusPolicy) GetType() string {
	return AWS_Events_EventBusPolicy__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Events_EventBusPolicy) Set__LogicalName(v string) *AWS_Events_EventBusPolicy {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Events_EventBusPolicy) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Events_EventBusPolicy {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Events_EventBusPolicy) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Events_EventBusPolicy {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Events_EventBusPolicy) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Events_EventBusPolicy {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Events_EventBusPolicy) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Events_EventBusPolicy {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Events_EventBusPolicy) Set__RequestedOutputs(v []cfz.Output) *AWS_Events_EventBusPolicy {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Events_EventBusPolicy) Add__RequestedOutputs(v ...cfz.Output) *AWS_Events_EventBusPolicy {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Action updates property "Action".
func (t *AWS_Events_EventBusPolicy) Set__Action(v cfz.Expression[string]) *AWS_Events_EventBusPolicy {
	t.Action = v
	return t
}

// SetV__Action updates property "Action".
func (t *AWS_Events_EventBusPolicy) SetV__Action(v string) *AWS_Events_EventBusPolicy {
	t.Action = cfz.V(v)
	return t
}

// Set__Condition updates property "Condition".
func (t *AWS_Events_EventBusPolicy) Set__Condition(v cfz.Expression[AWS_Events_EventBusPolicy_Condition]) *AWS_Events_EventBusPolicy {
	t.Condition = v
	return t
}

// SetV__Condition updates property "Condition".
func (t *AWS_Events_EventBusPolicy) SetV__Condition(v AWS_Events_EventBusPolicy_Condition) *AWS_Events_EventBusPolicy {
	t.Condition = cfz.V(v)
	return t
}

// Set__EventBusName updates property "EventBusName".
func (t *AWS_Events_EventBusPolicy) Set__EventBusName(v cfz.Expression[string]) *AWS_Events_EventBusPolicy {
	t.EventBusName = v
	return t
}

// SetV__EventBusName updates property "EventBusName".
func (t *AWS_Events_EventBusPolicy) SetV__EventBusName(v string) *AWS_Events_EventBusPolicy {
	t.EventBusName = cfz.V(v)
	return t
}

// Set__Principal updates property "Principal".
func (t *AWS_Events_EventBusPolicy) Set__Principal(v cfz.Expression[string]) *AWS_Events_EventBusPolicy {
	t.Principal = v
	return t
}

// SetV__Principal updates property "Principal".
func (t *AWS_Events_EventBusPolicy) SetV__Principal(v string) *AWS_Events_EventBusPolicy {
	t.Principal = cfz.V(v)
	return t
}

// Set__Statement updates property "Statement".
func (t *AWS_Events_EventBusPolicy) Set__Statement(v cfz.Expression[json.RawMessage]) *AWS_Events_EventBusPolicy {
	t.Statement = v
	return t
}

// SetV__Statement updates property "Statement".
func (t *AWS_Events_EventBusPolicy) SetV__Statement(v json.RawMessage) *AWS_Events_EventBusPolicy {
	t.Statement = cfz.V(v)
	return t
}

// Set__StatementId updates property "StatementId".
func (t *AWS_Events_EventBusPolicy) Set__StatementId(v cfz.Expression[string]) *AWS_Events_EventBusPolicy {
	t.StatementId = v
	return t
}

// SetV__StatementId updates property "StatementId".
func (t *AWS_Events_EventBusPolicy) SetV__StatementId(v string) *AWS_Events_EventBusPolicy {
	t.StatementId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Events_EventBusPolicy) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Events_EventBusPolicy) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Events_EventBusPolicy) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Events_EventBusPolicy

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Events_EventBusPolicy) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
