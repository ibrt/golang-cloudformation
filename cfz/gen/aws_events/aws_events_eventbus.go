// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_events

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Events_EventBus)(nil)
	_ cfz.Resource                   = (*AWS_Events_EventBus)(nil)
)

const (
	// AWS_Events_EventBus__Type is the CloudFormation type for AWS::Events::EventBus.
	AWS_Events_EventBus__Type = "AWS::Events::EventBus"
)

var (
	// AWS_Events_EventBus__AttributesMap reports all the CloudFormation attributes for AWS::Events::EventBus.
	AWS_Events_EventBus__AttributesMap = struct {
		Arn  string
		Name string
	}{
		Arn:  "Arn",
		Name: "Name",
	}

	// AWS_Events_EventBus__AttributesSlice reports all the CloudFormation attributes for AWS::Events::EventBus.
	AWS_Events_EventBus__AttributesSlice = []string{
		AWS_Events_EventBus__AttributesMap.Arn,
		AWS_Events_EventBus__AttributesMap.Name,
	}
)

var (
	// AWS_Events_EventBus__PropertiesMap reports all the CloudFormation properties for AWS::Events::EventBus.
	AWS_Events_EventBus__PropertiesMap = struct {
		DeadLetterConfig string
		Description      string
		EventSourceName  string
		KmsKeyIdentifier string
		Name             string
		Policy           string
		Tags             string
	}{
		DeadLetterConfig: "DeadLetterConfig",
		Description:      "Description",
		EventSourceName:  "EventSourceName",
		KmsKeyIdentifier: "KmsKeyIdentifier",
		Name:             "Name",
		Policy:           "Policy",
		Tags:             "Tags",
	}

	// AWS_Events_EventBus__PropertiesSlice reports all the CloudFormation properties for AWS::Events::EventBus.
	AWS_Events_EventBus__PropertiesSlice = []string{
		AWS_Events_EventBus__PropertiesMap.DeadLetterConfig,
		AWS_Events_EventBus__PropertiesMap.Description,
		AWS_Events_EventBus__PropertiesMap.EventSourceName,
		AWS_Events_EventBus__PropertiesMap.KmsKeyIdentifier,
		AWS_Events_EventBus__PropertiesMap.Name,
		AWS_Events_EventBus__PropertiesMap.Policy,
		AWS_Events_EventBus__PropertiesMap.Tags,
	}
)

// AWS_Events_EventBus is a binding for AWS::Events::EventBus.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html
type AWS_Events_EventBus struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DeadLetterConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-deadletterconfig
	DeadLetterConfig cfz.Expression[AWS_Events_EventBus_DeadLetterConfig] `json:"DeadLetterConfig,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// EventSourceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-eventsourcename
	EventSourceName cfz.Expression[string] `json:"EventSourceName,omitempty"`

	// KmsKeyIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-kmskeyidentifier
	KmsKeyIdentifier cfz.Expression[string] `json:"KmsKeyIdentifier,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Policy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-policy
	Policy cfz.Expression[json.RawMessage] `json:"Policy,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-eventbus.html#cfn-events-eventbus-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Events_EventBus initializes a new *AWS_Events_EventBus.
func New__AWS_Events_EventBus(logicalName string) *AWS_Events_EventBus {
	return &AWS_Events_EventBus{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Events_EventBus) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Events_EventBus) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Events_EventBus) GetType() string {
	return AWS_Events_EventBus__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Events_EventBus) Set__LogicalName(v string) *AWS_Events_EventBus {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Events_EventBus) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Events_EventBus {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Events_EventBus) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Events_EventBus {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Events_EventBus) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Events_EventBus {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Events_EventBus) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Events_EventBus {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Events_EventBus) Set__RequestedOutputs(v []cfz.Output) *AWS_Events_EventBus {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Events_EventBus) Add__RequestedOutputs(v ...cfz.Output) *AWS_Events_EventBus {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DeadLetterConfig updates property "DeadLetterConfig".
func (t *AWS_Events_EventBus) Set__DeadLetterConfig(v cfz.Expression[AWS_Events_EventBus_DeadLetterConfig]) *AWS_Events_EventBus {
	t.DeadLetterConfig = v
	return t
}

// SetV__DeadLetterConfig updates property "DeadLetterConfig".
func (t *AWS_Events_EventBus) SetV__DeadLetterConfig(v AWS_Events_EventBus_DeadLetterConfig) *AWS_Events_EventBus {
	t.DeadLetterConfig = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Events_EventBus) Set__Description(v cfz.Expression[string]) *AWS_Events_EventBus {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Events_EventBus) SetV__Description(v string) *AWS_Events_EventBus {
	t.Description = cfz.V(v)
	return t
}

// Set__EventSourceName updates property "EventSourceName".
func (t *AWS_Events_EventBus) Set__EventSourceName(v cfz.Expression[string]) *AWS_Events_EventBus {
	t.EventSourceName = v
	return t
}

// SetV__EventSourceName updates property "EventSourceName".
func (t *AWS_Events_EventBus) SetV__EventSourceName(v string) *AWS_Events_EventBus {
	t.EventSourceName = cfz.V(v)
	return t
}

// Set__KmsKeyIdentifier updates property "KmsKeyIdentifier".
func (t *AWS_Events_EventBus) Set__KmsKeyIdentifier(v cfz.Expression[string]) *AWS_Events_EventBus {
	t.KmsKeyIdentifier = v
	return t
}

// SetV__KmsKeyIdentifier updates property "KmsKeyIdentifier".
func (t *AWS_Events_EventBus) SetV__KmsKeyIdentifier(v string) *AWS_Events_EventBus {
	t.KmsKeyIdentifier = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Events_EventBus) Set__Name(v cfz.Expression[string]) *AWS_Events_EventBus {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Events_EventBus) SetV__Name(v string) *AWS_Events_EventBus {
	t.Name = cfz.V(v)
	return t
}

// Set__Policy updates property "Policy".
func (t *AWS_Events_EventBus) Set__Policy(v cfz.Expression[json.RawMessage]) *AWS_Events_EventBus {
	t.Policy = v
	return t
}

// SetV__Policy updates property "Policy".
func (t *AWS_Events_EventBus) SetV__Policy(v json.RawMessage) *AWS_Events_EventBus {
	t.Policy = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Events_EventBus) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Events_EventBus {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Events_EventBus) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Events_EventBus {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Events_EventBus) SetSV__Tags(v ...cfz.Tag) *AWS_Events_EventBus {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Events_EventBus) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Events_EventBus) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Events_EventBus__AttributesMap.Arn))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_Events_EventBus) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Events_EventBus__AttributesMap.Name))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Events_EventBus) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Events_EventBus) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_Events_EventBus) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Events_EventBus) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Events_EventBus

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Events_EventBus) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
