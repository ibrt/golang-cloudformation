// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_events

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Events_Endpoint)(nil)
	_ cfz.Resource                   = (*AWS_Events_Endpoint)(nil)
)

const (
	// AWS_Events_Endpoint__Type is the CloudFormation type for AWS::Events::Endpoint.
	AWS_Events_Endpoint__Type = "AWS::Events::Endpoint"
)

var (
	// AWS_Events_Endpoint__AttributesMap reports all the CloudFormation attributes for AWS::Events::Endpoint.
	AWS_Events_Endpoint__AttributesMap = struct {
		Arn         string
		EndpointId  string
		EndpointUrl string
		State       string
		StateReason string
	}{
		Arn:         "Arn",
		EndpointId:  "EndpointId",
		EndpointUrl: "EndpointUrl",
		State:       "State",
		StateReason: "StateReason",
	}

	// AWS_Events_Endpoint__AttributesSlice reports all the CloudFormation attributes for AWS::Events::Endpoint.
	AWS_Events_Endpoint__AttributesSlice = []string{
		AWS_Events_Endpoint__AttributesMap.Arn,
		AWS_Events_Endpoint__AttributesMap.EndpointId,
		AWS_Events_Endpoint__AttributesMap.EndpointUrl,
		AWS_Events_Endpoint__AttributesMap.State,
		AWS_Events_Endpoint__AttributesMap.StateReason,
	}
)

var (
	// AWS_Events_Endpoint__PropertiesMap reports all the CloudFormation properties for AWS::Events::Endpoint.
	AWS_Events_Endpoint__PropertiesMap = struct {
		Description       string
		EventBuses        string
		Name              string
		ReplicationConfig string
		RoleArn           string
		RoutingConfig     string
	}{
		Description:       "Description",
		EventBuses:        "EventBuses",
		Name:              "Name",
		ReplicationConfig: "ReplicationConfig",
		RoleArn:           "RoleArn",
		RoutingConfig:     "RoutingConfig",
	}

	// AWS_Events_Endpoint__PropertiesSlice reports all the CloudFormation properties for AWS::Events::Endpoint.
	AWS_Events_Endpoint__PropertiesSlice = []string{
		AWS_Events_Endpoint__PropertiesMap.Description,
		AWS_Events_Endpoint__PropertiesMap.EventBuses,
		AWS_Events_Endpoint__PropertiesMap.Name,
		AWS_Events_Endpoint__PropertiesMap.ReplicationConfig,
		AWS_Events_Endpoint__PropertiesMap.RoleArn,
		AWS_Events_Endpoint__PropertiesMap.RoutingConfig,
	}
)

// AWS_Events_Endpoint is a binding for AWS::Events::Endpoint.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html
type AWS_Events_Endpoint struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// EventBuses is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-eventbuses
	EventBuses cfz.ExpressionSlice[AWS_Events_Endpoint_EndpointEventBus] `json:"EventBuses,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// ReplicationConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-replicationconfig
	ReplicationConfig cfz.Expression[AWS_Events_Endpoint_ReplicationConfig] `json:"ReplicationConfig,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// RoutingConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-events-endpoint.html#cfn-events-endpoint-routingconfig
	RoutingConfig cfz.Expression[AWS_Events_Endpoint_RoutingConfig] `json:"RoutingConfig,omitempty"`
}

// New__AWS_Events_Endpoint initializes a new *AWS_Events_Endpoint.
func New__AWS_Events_Endpoint(logicalName string) *AWS_Events_Endpoint {
	return &AWS_Events_Endpoint{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Events_Endpoint) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Events_Endpoint) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Events_Endpoint) GetType() string {
	return AWS_Events_Endpoint__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Events_Endpoint) Set__LogicalName(v string) *AWS_Events_Endpoint {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Events_Endpoint) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Events_Endpoint {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Events_Endpoint) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Events_Endpoint {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Events_Endpoint) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Events_Endpoint {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Events_Endpoint) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Events_Endpoint {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Events_Endpoint) Set__RequestedOutputs(v []cfz.Output) *AWS_Events_Endpoint {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Events_Endpoint) Add__RequestedOutputs(v ...cfz.Output) *AWS_Events_Endpoint {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Events_Endpoint) Set__Description(v cfz.Expression[string]) *AWS_Events_Endpoint {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Events_Endpoint) SetV__Description(v string) *AWS_Events_Endpoint {
	t.Description = cfz.V(v)
	return t
}

// Set__EventBuses updates property "EventBuses".
func (t *AWS_Events_Endpoint) Set__EventBuses(v cfz.ExpressionSlice[AWS_Events_Endpoint_EndpointEventBus]) *AWS_Events_Endpoint {
	t.EventBuses = v
	return t
}

// SetS__EventBuses updates property "EventBuses".
func (t *AWS_Events_Endpoint) SetS__EventBuses(v ...cfz.Expression[AWS_Events_Endpoint_EndpointEventBus]) *AWS_Events_Endpoint {
	t.EventBuses = cfz.S(v...)
	return t
}

// SetSV__EventBuses updates property "EventBuses".
func (t *AWS_Events_Endpoint) SetSV__EventBuses(v ...AWS_Events_Endpoint_EndpointEventBus) *AWS_Events_Endpoint {
	t.EventBuses = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Events_Endpoint) Set__Name(v cfz.Expression[string]) *AWS_Events_Endpoint {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Events_Endpoint) SetV__Name(v string) *AWS_Events_Endpoint {
	t.Name = cfz.V(v)
	return t
}

// Set__ReplicationConfig updates property "ReplicationConfig".
func (t *AWS_Events_Endpoint) Set__ReplicationConfig(v cfz.Expression[AWS_Events_Endpoint_ReplicationConfig]) *AWS_Events_Endpoint {
	t.ReplicationConfig = v
	return t
}

// SetV__ReplicationConfig updates property "ReplicationConfig".
func (t *AWS_Events_Endpoint) SetV__ReplicationConfig(v AWS_Events_Endpoint_ReplicationConfig) *AWS_Events_Endpoint {
	t.ReplicationConfig = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_Events_Endpoint) Set__RoleArn(v cfz.Expression[string]) *AWS_Events_Endpoint {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_Events_Endpoint) SetV__RoleArn(v string) *AWS_Events_Endpoint {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__RoutingConfig updates property "RoutingConfig".
func (t *AWS_Events_Endpoint) Set__RoutingConfig(v cfz.Expression[AWS_Events_Endpoint_RoutingConfig]) *AWS_Events_Endpoint {
	t.RoutingConfig = v
	return t
}

// SetV__RoutingConfig updates property "RoutingConfig".
func (t *AWS_Events_Endpoint) SetV__RoutingConfig(v AWS_Events_Endpoint_RoutingConfig) *AWS_Events_Endpoint {
	t.RoutingConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Events_Endpoint) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Events_Endpoint) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Events_Endpoint__AttributesMap.Arn))
}

// GetAtt__EndpointId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointId
func (t *AWS_Events_Endpoint) GetAtt__EndpointId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Events_Endpoint__AttributesMap.EndpointId))
}

// GetAtt__EndpointUrl returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointUrl
func (t *AWS_Events_Endpoint) GetAtt__EndpointUrl() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Events_Endpoint__AttributesMap.EndpointUrl))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_Events_Endpoint) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Events_Endpoint__AttributesMap.State))
}

// GetAtt__StateReason returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StateReason
func (t *AWS_Events_Endpoint) GetAtt__StateReason() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Events_Endpoint__AttributesMap.StateReason))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Events_Endpoint) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Events_Endpoint) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointId returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointId
func (t *AWS_Events_Endpoint) GetConventionalOutputAtt__EndpointId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointId", t.GetAtt__EndpointId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointUrl returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointUrl
func (t *AWS_Events_Endpoint) GetConventionalOutputAtt__EndpointUrl(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointUrl", t.GetAtt__EndpointUrl())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_Events_Endpoint) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StateReason returns a conventionally configured output for an attribute of this resource.
// Attribute: StateReason
func (t *AWS_Events_Endpoint) GetConventionalOutputAtt__StateReason(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStateReason", t.GetAtt__StateReason())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Events_Endpoint) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Events_Endpoint

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Events_Endpoint) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
