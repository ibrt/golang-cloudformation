// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_managedblockchain

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ManagedBlockchain_Member)(nil)
	_ cfz.Resource                   = (*AWS_ManagedBlockchain_Member)(nil)
)

const (
	// AWS_ManagedBlockchain_Member__Type is the CloudFormation type for AWS::ManagedBlockchain::Member.
	AWS_ManagedBlockchain_Member__Type = "AWS::ManagedBlockchain::Member"
)

var (
	// AWS_ManagedBlockchain_Member__AttributesMap reports all the CloudFormation attributes for AWS::ManagedBlockchain::Member.
	AWS_ManagedBlockchain_Member__AttributesMap = struct {
		MemberId  string
		NetworkId string
	}{
		MemberId:  "MemberId",
		NetworkId: "NetworkId",
	}

	// AWS_ManagedBlockchain_Member__AttributesSlice reports all the CloudFormation attributes for AWS::ManagedBlockchain::Member.
	AWS_ManagedBlockchain_Member__AttributesSlice = []string{
		AWS_ManagedBlockchain_Member__AttributesMap.MemberId,
		AWS_ManagedBlockchain_Member__AttributesMap.NetworkId,
	}
)

var (
	// AWS_ManagedBlockchain_Member__PropertiesMap reports all the CloudFormation properties for AWS::ManagedBlockchain::Member.
	AWS_ManagedBlockchain_Member__PropertiesMap = struct {
		InvitationId         string
		MemberConfiguration  string
		NetworkConfiguration string
		NetworkId            string
	}{
		InvitationId:         "InvitationId",
		MemberConfiguration:  "MemberConfiguration",
		NetworkConfiguration: "NetworkConfiguration",
		NetworkId:            "NetworkId",
	}

	// AWS_ManagedBlockchain_Member__PropertiesSlice reports all the CloudFormation properties for AWS::ManagedBlockchain::Member.
	AWS_ManagedBlockchain_Member__PropertiesSlice = []string{
		AWS_ManagedBlockchain_Member__PropertiesMap.InvitationId,
		AWS_ManagedBlockchain_Member__PropertiesMap.MemberConfiguration,
		AWS_ManagedBlockchain_Member__PropertiesMap.NetworkConfiguration,
		AWS_ManagedBlockchain_Member__PropertiesMap.NetworkId,
	}
)

// AWS_ManagedBlockchain_Member is a binding for AWS::ManagedBlockchain::Member.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html
type AWS_ManagedBlockchain_Member struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// InvitationId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html#cfn-managedblockchain-member-invitationid
	InvitationId cfz.Expression[string] `json:"InvitationId,omitempty"`

	// MemberConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html#cfn-managedblockchain-member-memberconfiguration
	MemberConfiguration cfz.Expression[AWS_ManagedBlockchain_Member_MemberConfiguration] `json:"MemberConfiguration,omitempty"`

	// NetworkConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html#cfn-managedblockchain-member-networkconfiguration
	NetworkConfiguration cfz.Expression[AWS_ManagedBlockchain_Member_NetworkConfiguration] `json:"NetworkConfiguration,omitempty"`

	// NetworkId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-managedblockchain-member.html#cfn-managedblockchain-member-networkid
	NetworkId cfz.Expression[string] `json:"NetworkId,omitempty"`
}

// New__AWS_ManagedBlockchain_Member initializes a new *AWS_ManagedBlockchain_Member.
func New__AWS_ManagedBlockchain_Member(logicalName string) *AWS_ManagedBlockchain_Member {
	return &AWS_ManagedBlockchain_Member{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ManagedBlockchain_Member) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ManagedBlockchain_Member) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ManagedBlockchain_Member) GetType() string {
	return AWS_ManagedBlockchain_Member__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ManagedBlockchain_Member) Set__LogicalName(v string) *AWS_ManagedBlockchain_Member {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ManagedBlockchain_Member) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ManagedBlockchain_Member {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ManagedBlockchain_Member) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ManagedBlockchain_Member {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ManagedBlockchain_Member) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ManagedBlockchain_Member {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ManagedBlockchain_Member) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ManagedBlockchain_Member {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ManagedBlockchain_Member) Set__RequestedOutputs(v []cfz.Output) *AWS_ManagedBlockchain_Member {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ManagedBlockchain_Member) Add__RequestedOutputs(v ...cfz.Output) *AWS_ManagedBlockchain_Member {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__InvitationId updates property "InvitationId".
func (t *AWS_ManagedBlockchain_Member) Set__InvitationId(v cfz.Expression[string]) *AWS_ManagedBlockchain_Member {
	t.InvitationId = v
	return t
}

// SetV__InvitationId updates property "InvitationId".
func (t *AWS_ManagedBlockchain_Member) SetV__InvitationId(v string) *AWS_ManagedBlockchain_Member {
	t.InvitationId = cfz.V(v)
	return t
}

// Set__MemberConfiguration updates property "MemberConfiguration".
func (t *AWS_ManagedBlockchain_Member) Set__MemberConfiguration(v cfz.Expression[AWS_ManagedBlockchain_Member_MemberConfiguration]) *AWS_ManagedBlockchain_Member {
	t.MemberConfiguration = v
	return t
}

// SetV__MemberConfiguration updates property "MemberConfiguration".
func (t *AWS_ManagedBlockchain_Member) SetV__MemberConfiguration(v AWS_ManagedBlockchain_Member_MemberConfiguration) *AWS_ManagedBlockchain_Member {
	t.MemberConfiguration = cfz.V(v)
	return t
}

// Set__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_ManagedBlockchain_Member) Set__NetworkConfiguration(v cfz.Expression[AWS_ManagedBlockchain_Member_NetworkConfiguration]) *AWS_ManagedBlockchain_Member {
	t.NetworkConfiguration = v
	return t
}

// SetV__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_ManagedBlockchain_Member) SetV__NetworkConfiguration(v AWS_ManagedBlockchain_Member_NetworkConfiguration) *AWS_ManagedBlockchain_Member {
	t.NetworkConfiguration = cfz.V(v)
	return t
}

// Set__NetworkId updates property "NetworkId".
func (t *AWS_ManagedBlockchain_Member) Set__NetworkId(v cfz.Expression[string]) *AWS_ManagedBlockchain_Member {
	t.NetworkId = v
	return t
}

// SetV__NetworkId updates property "NetworkId".
func (t *AWS_ManagedBlockchain_Member) SetV__NetworkId(v string) *AWS_ManagedBlockchain_Member {
	t.NetworkId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ManagedBlockchain_Member) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__MemberId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MemberId
func (t *AWS_ManagedBlockchain_Member) GetAtt__MemberId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ManagedBlockchain_Member__AttributesMap.MemberId))
}

// GetAtt__NetworkId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NetworkId
func (t *AWS_ManagedBlockchain_Member) GetAtt__NetworkId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ManagedBlockchain_Member__AttributesMap.NetworkId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ManagedBlockchain_Member) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MemberId returns a conventionally configured output for an attribute of this resource.
// Attribute: MemberId
func (t *AWS_ManagedBlockchain_Member) GetConventionalOutputAtt__MemberId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMemberId", t.GetAtt__MemberId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NetworkId returns a conventionally configured output for an attribute of this resource.
// Attribute: NetworkId
func (t *AWS_ManagedBlockchain_Member) GetConventionalOutputAtt__NetworkId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNetworkId", t.GetAtt__NetworkId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ManagedBlockchain_Member) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ManagedBlockchain_Member

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ManagedBlockchain_Member) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
