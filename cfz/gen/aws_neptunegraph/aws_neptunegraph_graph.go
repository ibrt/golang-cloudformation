// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_neptunegraph

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_NeptuneGraph_Graph)(nil)
	_ cfz.Resource                   = (*AWS_NeptuneGraph_Graph)(nil)
)

const (
	// AWS_NeptuneGraph_Graph__Type is the CloudFormation type for AWS::NeptuneGraph::Graph.
	AWS_NeptuneGraph_Graph__Type = "AWS::NeptuneGraph::Graph"
)

var (
	// AWS_NeptuneGraph_Graph__AttributesMap reports all the CloudFormation attributes for AWS::NeptuneGraph::Graph.
	AWS_NeptuneGraph_Graph__AttributesMap = struct {
		Endpoint string
		GraphArn string
		GraphId  string
	}{
		Endpoint: "Endpoint",
		GraphArn: "GraphArn",
		GraphId:  "GraphId",
	}

	// AWS_NeptuneGraph_Graph__AttributesSlice reports all the CloudFormation attributes for AWS::NeptuneGraph::Graph.
	AWS_NeptuneGraph_Graph__AttributesSlice = []string{
		AWS_NeptuneGraph_Graph__AttributesMap.Endpoint,
		AWS_NeptuneGraph_Graph__AttributesMap.GraphArn,
		AWS_NeptuneGraph_Graph__AttributesMap.GraphId,
	}
)

var (
	// AWS_NeptuneGraph_Graph__PropertiesMap reports all the CloudFormation properties for AWS::NeptuneGraph::Graph.
	AWS_NeptuneGraph_Graph__PropertiesMap = struct {
		DeletionProtection        string
		GraphName                 string
		ProvisionedMemory         string
		PublicConnectivity        string
		ReplicaCount              string
		Tags                      string
		VectorSearchConfiguration string
	}{
		DeletionProtection:        "DeletionProtection",
		GraphName:                 "GraphName",
		ProvisionedMemory:         "ProvisionedMemory",
		PublicConnectivity:        "PublicConnectivity",
		ReplicaCount:              "ReplicaCount",
		Tags:                      "Tags",
		VectorSearchConfiguration: "VectorSearchConfiguration",
	}

	// AWS_NeptuneGraph_Graph__PropertiesSlice reports all the CloudFormation properties for AWS::NeptuneGraph::Graph.
	AWS_NeptuneGraph_Graph__PropertiesSlice = []string{
		AWS_NeptuneGraph_Graph__PropertiesMap.DeletionProtection,
		AWS_NeptuneGraph_Graph__PropertiesMap.GraphName,
		AWS_NeptuneGraph_Graph__PropertiesMap.ProvisionedMemory,
		AWS_NeptuneGraph_Graph__PropertiesMap.PublicConnectivity,
		AWS_NeptuneGraph_Graph__PropertiesMap.ReplicaCount,
		AWS_NeptuneGraph_Graph__PropertiesMap.Tags,
		AWS_NeptuneGraph_Graph__PropertiesMap.VectorSearchConfiguration,
	}
)

// AWS_NeptuneGraph_Graph is a binding for AWS::NeptuneGraph::Graph.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html
type AWS_NeptuneGraph_Graph struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DeletionProtection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-deletionprotection
	DeletionProtection cfz.Expression[bool] `json:"DeletionProtection,omitempty"`

	// GraphName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-graphname
	GraphName cfz.Expression[string] `json:"GraphName,omitempty"`

	// ProvisionedMemory is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-provisionedmemory
	ProvisionedMemory cfz.Expression[int32] `json:"ProvisionedMemory,omitempty"`

	// PublicConnectivity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-publicconnectivity
	PublicConnectivity cfz.Expression[bool] `json:"PublicConnectivity,omitempty"`

	// ReplicaCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-replicacount
	ReplicaCount cfz.Expression[int32] `json:"ReplicaCount,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VectorSearchConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-neptunegraph-graph.html#cfn-neptunegraph-graph-vectorsearchconfiguration
	VectorSearchConfiguration cfz.Expression[AWS_NeptuneGraph_Graph_VectorSearchConfiguration] `json:"VectorSearchConfiguration,omitempty"`
}

// New__AWS_NeptuneGraph_Graph initializes a new *AWS_NeptuneGraph_Graph.
func New__AWS_NeptuneGraph_Graph(logicalName string) *AWS_NeptuneGraph_Graph {
	return &AWS_NeptuneGraph_Graph{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_NeptuneGraph_Graph) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_NeptuneGraph_Graph) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_NeptuneGraph_Graph) GetType() string {
	return AWS_NeptuneGraph_Graph__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_NeptuneGraph_Graph) Set__LogicalName(v string) *AWS_NeptuneGraph_Graph {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_NeptuneGraph_Graph) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_NeptuneGraph_Graph {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_NeptuneGraph_Graph) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_NeptuneGraph_Graph {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_NeptuneGraph_Graph) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_NeptuneGraph_Graph {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_NeptuneGraph_Graph) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_NeptuneGraph_Graph {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_NeptuneGraph_Graph) Set__RequestedOutputs(v []cfz.Output) *AWS_NeptuneGraph_Graph {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_NeptuneGraph_Graph) Add__RequestedOutputs(v ...cfz.Output) *AWS_NeptuneGraph_Graph {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DeletionProtection updates property "DeletionProtection".
func (t *AWS_NeptuneGraph_Graph) Set__DeletionProtection(v cfz.Expression[bool]) *AWS_NeptuneGraph_Graph {
	t.DeletionProtection = v
	return t
}

// SetV__DeletionProtection updates property "DeletionProtection".
func (t *AWS_NeptuneGraph_Graph) SetV__DeletionProtection(v bool) *AWS_NeptuneGraph_Graph {
	t.DeletionProtection = cfz.V(v)
	return t
}

// Set__GraphName updates property "GraphName".
func (t *AWS_NeptuneGraph_Graph) Set__GraphName(v cfz.Expression[string]) *AWS_NeptuneGraph_Graph {
	t.GraphName = v
	return t
}

// SetV__GraphName updates property "GraphName".
func (t *AWS_NeptuneGraph_Graph) SetV__GraphName(v string) *AWS_NeptuneGraph_Graph {
	t.GraphName = cfz.V(v)
	return t
}

// Set__ProvisionedMemory updates property "ProvisionedMemory".
func (t *AWS_NeptuneGraph_Graph) Set__ProvisionedMemory(v cfz.Expression[int32]) *AWS_NeptuneGraph_Graph {
	t.ProvisionedMemory = v
	return t
}

// SetV__ProvisionedMemory updates property "ProvisionedMemory".
func (t *AWS_NeptuneGraph_Graph) SetV__ProvisionedMemory(v int32) *AWS_NeptuneGraph_Graph {
	t.ProvisionedMemory = cfz.V(v)
	return t
}

// Set__PublicConnectivity updates property "PublicConnectivity".
func (t *AWS_NeptuneGraph_Graph) Set__PublicConnectivity(v cfz.Expression[bool]) *AWS_NeptuneGraph_Graph {
	t.PublicConnectivity = v
	return t
}

// SetV__PublicConnectivity updates property "PublicConnectivity".
func (t *AWS_NeptuneGraph_Graph) SetV__PublicConnectivity(v bool) *AWS_NeptuneGraph_Graph {
	t.PublicConnectivity = cfz.V(v)
	return t
}

// Set__ReplicaCount updates property "ReplicaCount".
func (t *AWS_NeptuneGraph_Graph) Set__ReplicaCount(v cfz.Expression[int32]) *AWS_NeptuneGraph_Graph {
	t.ReplicaCount = v
	return t
}

// SetV__ReplicaCount updates property "ReplicaCount".
func (t *AWS_NeptuneGraph_Graph) SetV__ReplicaCount(v int32) *AWS_NeptuneGraph_Graph {
	t.ReplicaCount = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_NeptuneGraph_Graph) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_NeptuneGraph_Graph {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_NeptuneGraph_Graph) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_NeptuneGraph_Graph {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_NeptuneGraph_Graph) SetSV__Tags(v ...cfz.Tag) *AWS_NeptuneGraph_Graph {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VectorSearchConfiguration updates property "VectorSearchConfiguration".
func (t *AWS_NeptuneGraph_Graph) Set__VectorSearchConfiguration(v cfz.Expression[AWS_NeptuneGraph_Graph_VectorSearchConfiguration]) *AWS_NeptuneGraph_Graph {
	t.VectorSearchConfiguration = v
	return t
}

// SetV__VectorSearchConfiguration updates property "VectorSearchConfiguration".
func (t *AWS_NeptuneGraph_Graph) SetV__VectorSearchConfiguration(v AWS_NeptuneGraph_Graph_VectorSearchConfiguration) *AWS_NeptuneGraph_Graph {
	t.VectorSearchConfiguration = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_NeptuneGraph_Graph) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Endpoint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint
func (t *AWS_NeptuneGraph_Graph) GetAtt__Endpoint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NeptuneGraph_Graph__AttributesMap.Endpoint))
}

// GetAtt__GraphArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: GraphArn
func (t *AWS_NeptuneGraph_Graph) GetAtt__GraphArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NeptuneGraph_Graph__AttributesMap.GraphArn))
}

// GetAtt__GraphId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: GraphId
func (t *AWS_NeptuneGraph_Graph) GetAtt__GraphId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NeptuneGraph_Graph__AttributesMap.GraphId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_NeptuneGraph_Graph) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint
func (t *AWS_NeptuneGraph_Graph) GetConventionalOutputAtt__Endpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpoint", t.GetAtt__Endpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__GraphArn returns a conventionally configured output for an attribute of this resource.
// Attribute: GraphArn
func (t *AWS_NeptuneGraph_Graph) GetConventionalOutputAtt__GraphArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGraphArn", t.GetAtt__GraphArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__GraphId returns a conventionally configured output for an attribute of this resource.
// Attribute: GraphId
func (t *AWS_NeptuneGraph_Graph) GetConventionalOutputAtt__GraphId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGraphId", t.GetAtt__GraphId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_NeptuneGraph_Graph) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_NeptuneGraph_Graph

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_NeptuneGraph_Graph) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
