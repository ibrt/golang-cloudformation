// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_opensearchservice

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_OpenSearchService_Application)(nil)
	_ cfz.Resource                   = (*AWS_OpenSearchService_Application)(nil)
)

const (
	// AWS_OpenSearchService_Application__Type is the CloudFormation type for AWS::OpenSearchService::Application.
	AWS_OpenSearchService_Application__Type = "AWS::OpenSearchService::Application"
)

var (
	// AWS_OpenSearchService_Application__AttributesMap reports all the CloudFormation attributes for AWS::OpenSearchService::Application.
	AWS_OpenSearchService_Application__AttributesMap = struct {
		Arn string
		Id  string
	}{
		Arn: "Arn",
		Id:  "Id",
	}

	// AWS_OpenSearchService_Application__AttributesSlice reports all the CloudFormation attributes for AWS::OpenSearchService::Application.
	AWS_OpenSearchService_Application__AttributesSlice = []string{
		AWS_OpenSearchService_Application__AttributesMap.Arn,
		AWS_OpenSearchService_Application__AttributesMap.Id,
	}
)

var (
	// AWS_OpenSearchService_Application__PropertiesMap reports all the CloudFormation properties for AWS::OpenSearchService::Application.
	AWS_OpenSearchService_Application__PropertiesMap = struct {
		AppConfigs               string
		DataSources              string
		Endpoint                 string
		IamIdentityCenterOptions string
		Name                     string
		Tags                     string
	}{
		AppConfigs:               "AppConfigs",
		DataSources:              "DataSources",
		Endpoint:                 "Endpoint",
		IamIdentityCenterOptions: "IamIdentityCenterOptions",
		Name:                     "Name",
		Tags:                     "Tags",
	}

	// AWS_OpenSearchService_Application__PropertiesSlice reports all the CloudFormation properties for AWS::OpenSearchService::Application.
	AWS_OpenSearchService_Application__PropertiesSlice = []string{
		AWS_OpenSearchService_Application__PropertiesMap.AppConfigs,
		AWS_OpenSearchService_Application__PropertiesMap.DataSources,
		AWS_OpenSearchService_Application__PropertiesMap.Endpoint,
		AWS_OpenSearchService_Application__PropertiesMap.IamIdentityCenterOptions,
		AWS_OpenSearchService_Application__PropertiesMap.Name,
		AWS_OpenSearchService_Application__PropertiesMap.Tags,
	}
)

// AWS_OpenSearchService_Application is a binding for AWS::OpenSearchService::Application.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html
type AWS_OpenSearchService_Application struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AppConfigs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-appconfigs
	AppConfigs cfz.ExpressionSlice[AWS_OpenSearchService_Application_AppConfig] `json:"AppConfigs,omitempty"`

	// DataSources is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-datasources
	DataSources cfz.ExpressionSlice[AWS_OpenSearchService_Application_DataSource] `json:"DataSources,omitempty"`

	// Endpoint is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-endpoint
	Endpoint cfz.Expression[string] `json:"Endpoint,omitempty"`

	// IamIdentityCenterOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-iamidentitycenteroptions
	IamIdentityCenterOptions cfz.Expression[AWS_OpenSearchService_Application_IamIdentityCenterOptions] `json:"IamIdentityCenterOptions,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-application.html#cfn-opensearchservice-application-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_OpenSearchService_Application initializes a new *AWS_OpenSearchService_Application.
func New__AWS_OpenSearchService_Application(logicalName string) *AWS_OpenSearchService_Application {
	return &AWS_OpenSearchService_Application{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_OpenSearchService_Application) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_OpenSearchService_Application) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_OpenSearchService_Application) GetType() string {
	return AWS_OpenSearchService_Application__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_OpenSearchService_Application) Set__LogicalName(v string) *AWS_OpenSearchService_Application {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_OpenSearchService_Application) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_OpenSearchService_Application {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_OpenSearchService_Application) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_OpenSearchService_Application {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_OpenSearchService_Application) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_OpenSearchService_Application {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_OpenSearchService_Application) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_OpenSearchService_Application {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_OpenSearchService_Application) Set__RequestedOutputs(v []cfz.Output) *AWS_OpenSearchService_Application {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_OpenSearchService_Application) Add__RequestedOutputs(v ...cfz.Output) *AWS_OpenSearchService_Application {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AppConfigs updates property "AppConfigs".
func (t *AWS_OpenSearchService_Application) Set__AppConfigs(v cfz.ExpressionSlice[AWS_OpenSearchService_Application_AppConfig]) *AWS_OpenSearchService_Application {
	t.AppConfigs = v
	return t
}

// SetS__AppConfigs updates property "AppConfigs".
func (t *AWS_OpenSearchService_Application) SetS__AppConfigs(v ...cfz.Expression[AWS_OpenSearchService_Application_AppConfig]) *AWS_OpenSearchService_Application {
	t.AppConfigs = cfz.S(v...)
	return t
}

// SetSV__AppConfigs updates property "AppConfigs".
func (t *AWS_OpenSearchService_Application) SetSV__AppConfigs(v ...AWS_OpenSearchService_Application_AppConfig) *AWS_OpenSearchService_Application {
	t.AppConfigs = cfz.SV(v...)
	return t
}

// Set__DataSources updates property "DataSources".
func (t *AWS_OpenSearchService_Application) Set__DataSources(v cfz.ExpressionSlice[AWS_OpenSearchService_Application_DataSource]) *AWS_OpenSearchService_Application {
	t.DataSources = v
	return t
}

// SetS__DataSources updates property "DataSources".
func (t *AWS_OpenSearchService_Application) SetS__DataSources(v ...cfz.Expression[AWS_OpenSearchService_Application_DataSource]) *AWS_OpenSearchService_Application {
	t.DataSources = cfz.S(v...)
	return t
}

// SetSV__DataSources updates property "DataSources".
func (t *AWS_OpenSearchService_Application) SetSV__DataSources(v ...AWS_OpenSearchService_Application_DataSource) *AWS_OpenSearchService_Application {
	t.DataSources = cfz.SV(v...)
	return t
}

// Set__Endpoint updates property "Endpoint".
func (t *AWS_OpenSearchService_Application) Set__Endpoint(v cfz.Expression[string]) *AWS_OpenSearchService_Application {
	t.Endpoint = v
	return t
}

// SetV__Endpoint updates property "Endpoint".
func (t *AWS_OpenSearchService_Application) SetV__Endpoint(v string) *AWS_OpenSearchService_Application {
	t.Endpoint = cfz.V(v)
	return t
}

// Set__IamIdentityCenterOptions updates property "IamIdentityCenterOptions".
func (t *AWS_OpenSearchService_Application) Set__IamIdentityCenterOptions(v cfz.Expression[AWS_OpenSearchService_Application_IamIdentityCenterOptions]) *AWS_OpenSearchService_Application {
	t.IamIdentityCenterOptions = v
	return t
}

// SetV__IamIdentityCenterOptions updates property "IamIdentityCenterOptions".
func (t *AWS_OpenSearchService_Application) SetV__IamIdentityCenterOptions(v AWS_OpenSearchService_Application_IamIdentityCenterOptions) *AWS_OpenSearchService_Application {
	t.IamIdentityCenterOptions = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_OpenSearchService_Application) Set__Name(v cfz.Expression[string]) *AWS_OpenSearchService_Application {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_OpenSearchService_Application) SetV__Name(v string) *AWS_OpenSearchService_Application {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_OpenSearchService_Application) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_OpenSearchService_Application {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_OpenSearchService_Application) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_OpenSearchService_Application {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_OpenSearchService_Application) SetSV__Tags(v ...cfz.Tag) *AWS_OpenSearchService_Application {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_OpenSearchService_Application) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_OpenSearchService_Application) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_OpenSearchService_Application__AttributesMap.Arn))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_OpenSearchService_Application) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_OpenSearchService_Application__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_OpenSearchService_Application) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_OpenSearchService_Application) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_OpenSearchService_Application) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_OpenSearchService_Application) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_OpenSearchService_Application

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_OpenSearchService_Application) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
