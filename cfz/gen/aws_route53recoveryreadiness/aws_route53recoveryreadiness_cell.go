// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_route53recoveryreadiness

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Route53RecoveryReadiness_Cell)(nil)
	_ cfz.Resource                   = (*AWS_Route53RecoveryReadiness_Cell)(nil)
)

const (
	// AWS_Route53RecoveryReadiness_Cell__Type is the CloudFormation type for AWS::Route53RecoveryReadiness::Cell.
	AWS_Route53RecoveryReadiness_Cell__Type = "AWS::Route53RecoveryReadiness::Cell"
)

var (
	// AWS_Route53RecoveryReadiness_Cell__AttributesMap reports all the CloudFormation attributes for AWS::Route53RecoveryReadiness::Cell.
	AWS_Route53RecoveryReadiness_Cell__AttributesMap = struct {
		CellArn               string
		ParentReadinessScopes string
	}{
		CellArn:               "CellArn",
		ParentReadinessScopes: "ParentReadinessScopes",
	}

	// AWS_Route53RecoveryReadiness_Cell__AttributesSlice reports all the CloudFormation attributes for AWS::Route53RecoveryReadiness::Cell.
	AWS_Route53RecoveryReadiness_Cell__AttributesSlice = []string{
		AWS_Route53RecoveryReadiness_Cell__AttributesMap.CellArn,
		AWS_Route53RecoveryReadiness_Cell__AttributesMap.ParentReadinessScopes,
	}
)

var (
	// AWS_Route53RecoveryReadiness_Cell__PropertiesMap reports all the CloudFormation properties for AWS::Route53RecoveryReadiness::Cell.
	AWS_Route53RecoveryReadiness_Cell__PropertiesMap = struct {
		CellName string
		Cells    string
		Tags     string
	}{
		CellName: "CellName",
		Cells:    "Cells",
		Tags:     "Tags",
	}

	// AWS_Route53RecoveryReadiness_Cell__PropertiesSlice reports all the CloudFormation properties for AWS::Route53RecoveryReadiness::Cell.
	AWS_Route53RecoveryReadiness_Cell__PropertiesSlice = []string{
		AWS_Route53RecoveryReadiness_Cell__PropertiesMap.CellName,
		AWS_Route53RecoveryReadiness_Cell__PropertiesMap.Cells,
		AWS_Route53RecoveryReadiness_Cell__PropertiesMap.Tags,
	}
)

// AWS_Route53RecoveryReadiness_Cell is a binding for AWS::Route53RecoveryReadiness::Cell.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html
type AWS_Route53RecoveryReadiness_Cell struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CellName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-cellname
	CellName cfz.Expression[string] `json:"CellName,omitempty"`

	// Cells is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-cells
	Cells cfz.ExpressionSlice[string] `json:"Cells,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoveryreadiness-cell.html#cfn-route53recoveryreadiness-cell-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Route53RecoveryReadiness_Cell initializes a new *AWS_Route53RecoveryReadiness_Cell.
func New__AWS_Route53RecoveryReadiness_Cell(logicalName string) *AWS_Route53RecoveryReadiness_Cell {
	return &AWS_Route53RecoveryReadiness_Cell{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Route53RecoveryReadiness_Cell) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Route53RecoveryReadiness_Cell) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Route53RecoveryReadiness_Cell) GetType() string {
	return AWS_Route53RecoveryReadiness_Cell__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Route53RecoveryReadiness_Cell) Set__LogicalName(v string) *AWS_Route53RecoveryReadiness_Cell {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Route53RecoveryReadiness_Cell) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Route53RecoveryReadiness_Cell {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Route53RecoveryReadiness_Cell) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Route53RecoveryReadiness_Cell {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Route53RecoveryReadiness_Cell) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Route53RecoveryReadiness_Cell {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Route53RecoveryReadiness_Cell) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Route53RecoveryReadiness_Cell {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Route53RecoveryReadiness_Cell) Set__RequestedOutputs(v []cfz.Output) *AWS_Route53RecoveryReadiness_Cell {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Route53RecoveryReadiness_Cell) Add__RequestedOutputs(v ...cfz.Output) *AWS_Route53RecoveryReadiness_Cell {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CellName updates property "CellName".
func (t *AWS_Route53RecoveryReadiness_Cell) Set__CellName(v cfz.Expression[string]) *AWS_Route53RecoveryReadiness_Cell {
	t.CellName = v
	return t
}

// SetV__CellName updates property "CellName".
func (t *AWS_Route53RecoveryReadiness_Cell) SetV__CellName(v string) *AWS_Route53RecoveryReadiness_Cell {
	t.CellName = cfz.V(v)
	return t
}

// Set__Cells updates property "Cells".
func (t *AWS_Route53RecoveryReadiness_Cell) Set__Cells(v cfz.ExpressionSlice[string]) *AWS_Route53RecoveryReadiness_Cell {
	t.Cells = v
	return t
}

// SetS__Cells updates property "Cells".
func (t *AWS_Route53RecoveryReadiness_Cell) SetS__Cells(v ...cfz.Expression[string]) *AWS_Route53RecoveryReadiness_Cell {
	t.Cells = cfz.S(v...)
	return t
}

// SetSV__Cells updates property "Cells".
func (t *AWS_Route53RecoveryReadiness_Cell) SetSV__Cells(v ...string) *AWS_Route53RecoveryReadiness_Cell {
	t.Cells = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Route53RecoveryReadiness_Cell) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Route53RecoveryReadiness_Cell {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Route53RecoveryReadiness_Cell) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Route53RecoveryReadiness_Cell {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Route53RecoveryReadiness_Cell) SetSV__Tags(v ...cfz.Tag) *AWS_Route53RecoveryReadiness_Cell {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Route53RecoveryReadiness_Cell) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CellArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CellArn
func (t *AWS_Route53RecoveryReadiness_Cell) GetAtt__CellArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53RecoveryReadiness_Cell__AttributesMap.CellArn))
}

// GetAttSlice__ParentReadinessScopes returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ParentReadinessScopes
func (t *AWS_Route53RecoveryReadiness_Cell) GetAttSlice__ParentReadinessScopes() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53RecoveryReadiness_Cell__AttributesMap.ParentReadinessScopes))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Route53RecoveryReadiness_Cell) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CellArn returns a conventionally configured output for an attribute of this resource.
// Attribute: CellArn
func (t *AWS_Route53RecoveryReadiness_Cell) GetConventionalOutputAtt__CellArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCellArn", t.GetAtt__CellArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ParentReadinessScopes returns a conventionally configured output for an attribute of this resource.
// Attribute: ParentReadinessScopes
func (t *AWS_Route53RecoveryReadiness_Cell) GetConventionalOutputAtt__ParentReadinessScopes(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttParentReadinessScopes", t.GetAttSlice__ParentReadinessScopes())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Route53RecoveryReadiness_Cell) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Route53RecoveryReadiness_Cell

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Route53RecoveryReadiness_Cell) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
