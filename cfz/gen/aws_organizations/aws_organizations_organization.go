// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_organizations

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Organizations_Organization)(nil)
	_ cfz.Resource                   = (*AWS_Organizations_Organization)(nil)
)

const (
	// AWS_Organizations_Organization__Type is the CloudFormation type for AWS::Organizations::Organization.
	AWS_Organizations_Organization__Type = "AWS::Organizations::Organization"
)

var (
	// AWS_Organizations_Organization__AttributesMap reports all the CloudFormation attributes for AWS::Organizations::Organization.
	AWS_Organizations_Organization__AttributesMap = struct {
		Arn                    string
		Id                     string
		ManagementAccountArn   string
		ManagementAccountEmail string
		ManagementAccountId    string
		RootId                 string
	}{
		Arn:                    "Arn",
		Id:                     "Id",
		ManagementAccountArn:   "ManagementAccountArn",
		ManagementAccountEmail: "ManagementAccountEmail",
		ManagementAccountId:    "ManagementAccountId",
		RootId:                 "RootId",
	}

	// AWS_Organizations_Organization__AttributesSlice reports all the CloudFormation attributes for AWS::Organizations::Organization.
	AWS_Organizations_Organization__AttributesSlice = []string{
		AWS_Organizations_Organization__AttributesMap.Arn,
		AWS_Organizations_Organization__AttributesMap.Id,
		AWS_Organizations_Organization__AttributesMap.ManagementAccountArn,
		AWS_Organizations_Organization__AttributesMap.ManagementAccountEmail,
		AWS_Organizations_Organization__AttributesMap.ManagementAccountId,
		AWS_Organizations_Organization__AttributesMap.RootId,
	}
)

var (
	// AWS_Organizations_Organization__PropertiesMap reports all the CloudFormation properties for AWS::Organizations::Organization.
	AWS_Organizations_Organization__PropertiesMap = struct {
		FeatureSet string
	}{
		FeatureSet: "FeatureSet",
	}

	// AWS_Organizations_Organization__PropertiesSlice reports all the CloudFormation properties for AWS::Organizations::Organization.
	AWS_Organizations_Organization__PropertiesSlice = []string{
		AWS_Organizations_Organization__PropertiesMap.FeatureSet,
	}
)

// AWS_Organizations_Organization is a binding for AWS::Organizations::Organization.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organization.html
type AWS_Organizations_Organization struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// FeatureSet is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-organizations-organization.html#cfn-organizations-organization-featureset
	FeatureSet cfz.Expression[string] `json:"FeatureSet,omitempty"`
}

// New__AWS_Organizations_Organization initializes a new *AWS_Organizations_Organization.
func New__AWS_Organizations_Organization(logicalName string) *AWS_Organizations_Organization {
	return &AWS_Organizations_Organization{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Organizations_Organization) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Organizations_Organization) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Organizations_Organization) GetType() string {
	return AWS_Organizations_Organization__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Organizations_Organization) Set__LogicalName(v string) *AWS_Organizations_Organization {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Organizations_Organization) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Organizations_Organization {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Organizations_Organization) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Organizations_Organization {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Organizations_Organization) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Organizations_Organization {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Organizations_Organization) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Organizations_Organization {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Organizations_Organization) Set__RequestedOutputs(v []cfz.Output) *AWS_Organizations_Organization {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Organizations_Organization) Add__RequestedOutputs(v ...cfz.Output) *AWS_Organizations_Organization {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__FeatureSet updates property "FeatureSet".
func (t *AWS_Organizations_Organization) Set__FeatureSet(v cfz.Expression[string]) *AWS_Organizations_Organization {
	t.FeatureSet = v
	return t
}

// SetV__FeatureSet updates property "FeatureSet".
func (t *AWS_Organizations_Organization) SetV__FeatureSet(v string) *AWS_Organizations_Organization {
	t.FeatureSet = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Organizations_Organization) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Organizations_Organization) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Organizations_Organization__AttributesMap.Arn))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Organizations_Organization) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Organizations_Organization__AttributesMap.Id))
}

// GetAtt__ManagementAccountArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ManagementAccountArn
func (t *AWS_Organizations_Organization) GetAtt__ManagementAccountArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Organizations_Organization__AttributesMap.ManagementAccountArn))
}

// GetAtt__ManagementAccountEmail returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ManagementAccountEmail
func (t *AWS_Organizations_Organization) GetAtt__ManagementAccountEmail() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Organizations_Organization__AttributesMap.ManagementAccountEmail))
}

// GetAtt__ManagementAccountId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ManagementAccountId
func (t *AWS_Organizations_Organization) GetAtt__ManagementAccountId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Organizations_Organization__AttributesMap.ManagementAccountId))
}

// GetAtt__RootId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RootId
func (t *AWS_Organizations_Organization) GetAtt__RootId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Organizations_Organization__AttributesMap.RootId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Organizations_Organization) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Organizations_Organization) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Organizations_Organization) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ManagementAccountArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ManagementAccountArn
func (t *AWS_Organizations_Organization) GetConventionalOutputAtt__ManagementAccountArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttManagementAccountArn", t.GetAtt__ManagementAccountArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ManagementAccountEmail returns a conventionally configured output for an attribute of this resource.
// Attribute: ManagementAccountEmail
func (t *AWS_Organizations_Organization) GetConventionalOutputAtt__ManagementAccountEmail(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttManagementAccountEmail", t.GetAtt__ManagementAccountEmail())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ManagementAccountId returns a conventionally configured output for an attribute of this resource.
// Attribute: ManagementAccountId
func (t *AWS_Organizations_Organization) GetConventionalOutputAtt__ManagementAccountId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttManagementAccountId", t.GetAtt__ManagementAccountId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RootId returns a conventionally configured output for an attribute of this resource.
// Attribute: RootId
func (t *AWS_Organizations_Organization) GetConventionalOutputAtt__RootId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRootId", t.GetAtt__RootId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Organizations_Organization) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Organizations_Organization

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Organizations_Organization) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
