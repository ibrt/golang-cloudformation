// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_datasync

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DataSync_LocationObjectStorage)(nil)
	_ cfz.Resource                   = (*AWS_DataSync_LocationObjectStorage)(nil)
)

const (
	// AWS_DataSync_LocationObjectStorage__Type is the CloudFormation type for AWS::DataSync::LocationObjectStorage.
	AWS_DataSync_LocationObjectStorage__Type = "AWS::DataSync::LocationObjectStorage"
)

var (
	// AWS_DataSync_LocationObjectStorage__AttributesMap reports all the CloudFormation attributes for AWS::DataSync::LocationObjectStorage.
	AWS_DataSync_LocationObjectStorage__AttributesMap = struct {
		LocationArn string
		LocationUri string
	}{
		LocationArn: "LocationArn",
		LocationUri: "LocationUri",
	}

	// AWS_DataSync_LocationObjectStorage__AttributesSlice reports all the CloudFormation attributes for AWS::DataSync::LocationObjectStorage.
	AWS_DataSync_LocationObjectStorage__AttributesSlice = []string{
		AWS_DataSync_LocationObjectStorage__AttributesMap.LocationArn,
		AWS_DataSync_LocationObjectStorage__AttributesMap.LocationUri,
	}
)

var (
	// AWS_DataSync_LocationObjectStorage__PropertiesMap reports all the CloudFormation properties for AWS::DataSync::LocationObjectStorage.
	AWS_DataSync_LocationObjectStorage__PropertiesMap = struct {
		AccessKey         string
		AgentArns         string
		BucketName        string
		SecretKey         string
		ServerCertificate string
		ServerHostname    string
		ServerPort        string
		ServerProtocol    string
		Subdirectory      string
		Tags              string
	}{
		AccessKey:         "AccessKey",
		AgentArns:         "AgentArns",
		BucketName:        "BucketName",
		SecretKey:         "SecretKey",
		ServerCertificate: "ServerCertificate",
		ServerHostname:    "ServerHostname",
		ServerPort:        "ServerPort",
		ServerProtocol:    "ServerProtocol",
		Subdirectory:      "Subdirectory",
		Tags:              "Tags",
	}

	// AWS_DataSync_LocationObjectStorage__PropertiesSlice reports all the CloudFormation properties for AWS::DataSync::LocationObjectStorage.
	AWS_DataSync_LocationObjectStorage__PropertiesSlice = []string{
		AWS_DataSync_LocationObjectStorage__PropertiesMap.AccessKey,
		AWS_DataSync_LocationObjectStorage__PropertiesMap.AgentArns,
		AWS_DataSync_LocationObjectStorage__PropertiesMap.BucketName,
		AWS_DataSync_LocationObjectStorage__PropertiesMap.SecretKey,
		AWS_DataSync_LocationObjectStorage__PropertiesMap.ServerCertificate,
		AWS_DataSync_LocationObjectStorage__PropertiesMap.ServerHostname,
		AWS_DataSync_LocationObjectStorage__PropertiesMap.ServerPort,
		AWS_DataSync_LocationObjectStorage__PropertiesMap.ServerProtocol,
		AWS_DataSync_LocationObjectStorage__PropertiesMap.Subdirectory,
		AWS_DataSync_LocationObjectStorage__PropertiesMap.Tags,
	}
)

// AWS_DataSync_LocationObjectStorage is a binding for AWS::DataSync::LocationObjectStorage.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html
type AWS_DataSync_LocationObjectStorage struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-accesskey
	AccessKey cfz.Expression[string] `json:"AccessKey,omitempty"`

	// AgentArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-agentarns
	AgentArns cfz.ExpressionSlice[string] `json:"AgentArns,omitempty"`

	// BucketName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-bucketname
	BucketName cfz.Expression[string] `json:"BucketName,omitempty"`

	// SecretKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-secretkey
	SecretKey cfz.Expression[string] `json:"SecretKey,omitempty"`

	// ServerCertificate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-servercertificate
	ServerCertificate cfz.Expression[string] `json:"ServerCertificate,omitempty"`

	// ServerHostname is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverhostname
	ServerHostname cfz.Expression[string] `json:"ServerHostname,omitempty"`

	// ServerPort is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverport
	ServerPort cfz.Expression[int32] `json:"ServerPort,omitempty"`

	// ServerProtocol is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-serverprotocol
	ServerProtocol cfz.Expression[string] `json:"ServerProtocol,omitempty"`

	// Subdirectory is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-subdirectory
	Subdirectory cfz.Expression[string] `json:"Subdirectory,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-locationobjectstorage.html#cfn-datasync-locationobjectstorage-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_DataSync_LocationObjectStorage initializes a new *AWS_DataSync_LocationObjectStorage.
func New__AWS_DataSync_LocationObjectStorage(logicalName string) *AWS_DataSync_LocationObjectStorage {
	return &AWS_DataSync_LocationObjectStorage{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DataSync_LocationObjectStorage) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DataSync_LocationObjectStorage) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DataSync_LocationObjectStorage) GetType() string {
	return AWS_DataSync_LocationObjectStorage__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DataSync_LocationObjectStorage) Set__LogicalName(v string) *AWS_DataSync_LocationObjectStorage {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DataSync_LocationObjectStorage) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DataSync_LocationObjectStorage {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DataSync_LocationObjectStorage) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DataSync_LocationObjectStorage {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DataSync_LocationObjectStorage) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DataSync_LocationObjectStorage {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DataSync_LocationObjectStorage) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DataSync_LocationObjectStorage {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DataSync_LocationObjectStorage) Set__RequestedOutputs(v []cfz.Output) *AWS_DataSync_LocationObjectStorage {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DataSync_LocationObjectStorage) Add__RequestedOutputs(v ...cfz.Output) *AWS_DataSync_LocationObjectStorage {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessKey updates property "AccessKey".
func (t *AWS_DataSync_LocationObjectStorage) Set__AccessKey(v cfz.Expression[string]) *AWS_DataSync_LocationObjectStorage {
	t.AccessKey = v
	return t
}

// SetV__AccessKey updates property "AccessKey".
func (t *AWS_DataSync_LocationObjectStorage) SetV__AccessKey(v string) *AWS_DataSync_LocationObjectStorage {
	t.AccessKey = cfz.V(v)
	return t
}

// Set__AgentArns updates property "AgentArns".
func (t *AWS_DataSync_LocationObjectStorage) Set__AgentArns(v cfz.ExpressionSlice[string]) *AWS_DataSync_LocationObjectStorage {
	t.AgentArns = v
	return t
}

// SetS__AgentArns updates property "AgentArns".
func (t *AWS_DataSync_LocationObjectStorage) SetS__AgentArns(v ...cfz.Expression[string]) *AWS_DataSync_LocationObjectStorage {
	t.AgentArns = cfz.S(v...)
	return t
}

// SetSV__AgentArns updates property "AgentArns".
func (t *AWS_DataSync_LocationObjectStorage) SetSV__AgentArns(v ...string) *AWS_DataSync_LocationObjectStorage {
	t.AgentArns = cfz.SV(v...)
	return t
}

// Set__BucketName updates property "BucketName".
func (t *AWS_DataSync_LocationObjectStorage) Set__BucketName(v cfz.Expression[string]) *AWS_DataSync_LocationObjectStorage {
	t.BucketName = v
	return t
}

// SetV__BucketName updates property "BucketName".
func (t *AWS_DataSync_LocationObjectStorage) SetV__BucketName(v string) *AWS_DataSync_LocationObjectStorage {
	t.BucketName = cfz.V(v)
	return t
}

// Set__SecretKey updates property "SecretKey".
func (t *AWS_DataSync_LocationObjectStorage) Set__SecretKey(v cfz.Expression[string]) *AWS_DataSync_LocationObjectStorage {
	t.SecretKey = v
	return t
}

// SetV__SecretKey updates property "SecretKey".
func (t *AWS_DataSync_LocationObjectStorage) SetV__SecretKey(v string) *AWS_DataSync_LocationObjectStorage {
	t.SecretKey = cfz.V(v)
	return t
}

// Set__ServerCertificate updates property "ServerCertificate".
func (t *AWS_DataSync_LocationObjectStorage) Set__ServerCertificate(v cfz.Expression[string]) *AWS_DataSync_LocationObjectStorage {
	t.ServerCertificate = v
	return t
}

// SetV__ServerCertificate updates property "ServerCertificate".
func (t *AWS_DataSync_LocationObjectStorage) SetV__ServerCertificate(v string) *AWS_DataSync_LocationObjectStorage {
	t.ServerCertificate = cfz.V(v)
	return t
}

// Set__ServerHostname updates property "ServerHostname".
func (t *AWS_DataSync_LocationObjectStorage) Set__ServerHostname(v cfz.Expression[string]) *AWS_DataSync_LocationObjectStorage {
	t.ServerHostname = v
	return t
}

// SetV__ServerHostname updates property "ServerHostname".
func (t *AWS_DataSync_LocationObjectStorage) SetV__ServerHostname(v string) *AWS_DataSync_LocationObjectStorage {
	t.ServerHostname = cfz.V(v)
	return t
}

// Set__ServerPort updates property "ServerPort".
func (t *AWS_DataSync_LocationObjectStorage) Set__ServerPort(v cfz.Expression[int32]) *AWS_DataSync_LocationObjectStorage {
	t.ServerPort = v
	return t
}

// SetV__ServerPort updates property "ServerPort".
func (t *AWS_DataSync_LocationObjectStorage) SetV__ServerPort(v int32) *AWS_DataSync_LocationObjectStorage {
	t.ServerPort = cfz.V(v)
	return t
}

// Set__ServerProtocol updates property "ServerProtocol".
func (t *AWS_DataSync_LocationObjectStorage) Set__ServerProtocol(v cfz.Expression[string]) *AWS_DataSync_LocationObjectStorage {
	t.ServerProtocol = v
	return t
}

// SetV__ServerProtocol updates property "ServerProtocol".
func (t *AWS_DataSync_LocationObjectStorage) SetV__ServerProtocol(v string) *AWS_DataSync_LocationObjectStorage {
	t.ServerProtocol = cfz.V(v)
	return t
}

// Set__Subdirectory updates property "Subdirectory".
func (t *AWS_DataSync_LocationObjectStorage) Set__Subdirectory(v cfz.Expression[string]) *AWS_DataSync_LocationObjectStorage {
	t.Subdirectory = v
	return t
}

// SetV__Subdirectory updates property "Subdirectory".
func (t *AWS_DataSync_LocationObjectStorage) SetV__Subdirectory(v string) *AWS_DataSync_LocationObjectStorage {
	t.Subdirectory = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_DataSync_LocationObjectStorage) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_DataSync_LocationObjectStorage {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_DataSync_LocationObjectStorage) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_DataSync_LocationObjectStorage {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_DataSync_LocationObjectStorage) SetSV__Tags(v ...cfz.Tag) *AWS_DataSync_LocationObjectStorage {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DataSync_LocationObjectStorage) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__LocationArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LocationArn
func (t *AWS_DataSync_LocationObjectStorage) GetAtt__LocationArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataSync_LocationObjectStorage__AttributesMap.LocationArn))
}

// GetAtt__LocationUri returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LocationUri
func (t *AWS_DataSync_LocationObjectStorage) GetAtt__LocationUri() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataSync_LocationObjectStorage__AttributesMap.LocationUri))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DataSync_LocationObjectStorage) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LocationArn returns a conventionally configured output for an attribute of this resource.
// Attribute: LocationArn
func (t *AWS_DataSync_LocationObjectStorage) GetConventionalOutputAtt__LocationArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLocationArn", t.GetAtt__LocationArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LocationUri returns a conventionally configured output for an attribute of this resource.
// Attribute: LocationUri
func (t *AWS_DataSync_LocationObjectStorage) GetConventionalOutputAtt__LocationUri(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLocationUri", t.GetAtt__LocationUri())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DataSync_LocationObjectStorage) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DataSync_LocationObjectStorage

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DataSync_LocationObjectStorage) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
