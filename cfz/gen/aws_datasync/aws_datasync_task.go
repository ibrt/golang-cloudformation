// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_datasync

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DataSync_Task)(nil)
	_ cfz.Resource                   = (*AWS_DataSync_Task)(nil)
)

const (
	// AWS_DataSync_Task__Type is the CloudFormation type for AWS::DataSync::Task.
	AWS_DataSync_Task__Type = "AWS::DataSync::Task"
)

var (
	// AWS_DataSync_Task__AttributesMap reports all the CloudFormation attributes for AWS::DataSync::Task.
	AWS_DataSync_Task__AttributesMap = struct {
		DestinationNetworkInterfaceArns string
		SourceNetworkInterfaceArns      string
		Status                          string
		TaskArn                         string
	}{
		DestinationNetworkInterfaceArns: "DestinationNetworkInterfaceArns",
		SourceNetworkInterfaceArns:      "SourceNetworkInterfaceArns",
		Status:                          "Status",
		TaskArn:                         "TaskArn",
	}

	// AWS_DataSync_Task__AttributesSlice reports all the CloudFormation attributes for AWS::DataSync::Task.
	AWS_DataSync_Task__AttributesSlice = []string{
		AWS_DataSync_Task__AttributesMap.DestinationNetworkInterfaceArns,
		AWS_DataSync_Task__AttributesMap.SourceNetworkInterfaceArns,
		AWS_DataSync_Task__AttributesMap.Status,
		AWS_DataSync_Task__AttributesMap.TaskArn,
	}
)

var (
	// AWS_DataSync_Task__PropertiesMap reports all the CloudFormation properties for AWS::DataSync::Task.
	AWS_DataSync_Task__PropertiesMap = struct {
		CloudWatchLogGroupArn  string
		DestinationLocationArn string
		Excludes               string
		Includes               string
		ManifestConfig         string
		Name                   string
		Options                string
		Schedule               string
		SourceLocationArn      string
		Tags                   string
		TaskMode               string
		TaskReportConfig       string
	}{
		CloudWatchLogGroupArn:  "CloudWatchLogGroupArn",
		DestinationLocationArn: "DestinationLocationArn",
		Excludes:               "Excludes",
		Includes:               "Includes",
		ManifestConfig:         "ManifestConfig",
		Name:                   "Name",
		Options:                "Options",
		Schedule:               "Schedule",
		SourceLocationArn:      "SourceLocationArn",
		Tags:                   "Tags",
		TaskMode:               "TaskMode",
		TaskReportConfig:       "TaskReportConfig",
	}

	// AWS_DataSync_Task__PropertiesSlice reports all the CloudFormation properties for AWS::DataSync::Task.
	AWS_DataSync_Task__PropertiesSlice = []string{
		AWS_DataSync_Task__PropertiesMap.CloudWatchLogGroupArn,
		AWS_DataSync_Task__PropertiesMap.DestinationLocationArn,
		AWS_DataSync_Task__PropertiesMap.Excludes,
		AWS_DataSync_Task__PropertiesMap.Includes,
		AWS_DataSync_Task__PropertiesMap.ManifestConfig,
		AWS_DataSync_Task__PropertiesMap.Name,
		AWS_DataSync_Task__PropertiesMap.Options,
		AWS_DataSync_Task__PropertiesMap.Schedule,
		AWS_DataSync_Task__PropertiesMap.SourceLocationArn,
		AWS_DataSync_Task__PropertiesMap.Tags,
		AWS_DataSync_Task__PropertiesMap.TaskMode,
		AWS_DataSync_Task__PropertiesMap.TaskReportConfig,
	}
)

// AWS_DataSync_Task is a binding for AWS::DataSync::Task.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html
type AWS_DataSync_Task struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CloudWatchLogGroupArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-cloudwatchloggrouparn
	CloudWatchLogGroupArn cfz.Expression[string] `json:"CloudWatchLogGroupArn,omitempty"`

	// DestinationLocationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-destinationlocationarn
	DestinationLocationArn cfz.Expression[string] `json:"DestinationLocationArn,omitempty"`

	// Excludes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-excludes
	Excludes cfz.ExpressionSlice[AWS_DataSync_Task_FilterRule] `json:"Excludes,omitempty"`

	// Includes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-includes
	Includes cfz.ExpressionSlice[AWS_DataSync_Task_FilterRule] `json:"Includes,omitempty"`

	// ManifestConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-manifestconfig
	ManifestConfig cfz.Expression[AWS_DataSync_Task_ManifestConfig] `json:"ManifestConfig,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Options is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-options
	Options cfz.Expression[AWS_DataSync_Task_Options] `json:"Options,omitempty"`

	// Schedule is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-schedule
	Schedule cfz.Expression[AWS_DataSync_Task_TaskSchedule] `json:"Schedule,omitempty"`

	// SourceLocationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-sourcelocationarn
	SourceLocationArn cfz.Expression[string] `json:"SourceLocationArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TaskMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-taskmode
	TaskMode cfz.Expression[string] `json:"TaskMode,omitempty"`

	// TaskReportConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datasync-task.html#cfn-datasync-task-taskreportconfig
	TaskReportConfig cfz.Expression[AWS_DataSync_Task_TaskReportConfig] `json:"TaskReportConfig,omitempty"`
}

// New__AWS_DataSync_Task initializes a new *AWS_DataSync_Task.
func New__AWS_DataSync_Task(logicalName string) *AWS_DataSync_Task {
	return &AWS_DataSync_Task{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DataSync_Task) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DataSync_Task) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DataSync_Task) GetType() string {
	return AWS_DataSync_Task__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DataSync_Task) Set__LogicalName(v string) *AWS_DataSync_Task {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DataSync_Task) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DataSync_Task {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DataSync_Task) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DataSync_Task {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DataSync_Task) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DataSync_Task {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DataSync_Task) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DataSync_Task {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DataSync_Task) Set__RequestedOutputs(v []cfz.Output) *AWS_DataSync_Task {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DataSync_Task) Add__RequestedOutputs(v ...cfz.Output) *AWS_DataSync_Task {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CloudWatchLogGroupArn updates property "CloudWatchLogGroupArn".
func (t *AWS_DataSync_Task) Set__CloudWatchLogGroupArn(v cfz.Expression[string]) *AWS_DataSync_Task {
	t.CloudWatchLogGroupArn = v
	return t
}

// SetV__CloudWatchLogGroupArn updates property "CloudWatchLogGroupArn".
func (t *AWS_DataSync_Task) SetV__CloudWatchLogGroupArn(v string) *AWS_DataSync_Task {
	t.CloudWatchLogGroupArn = cfz.V(v)
	return t
}

// Set__DestinationLocationArn updates property "DestinationLocationArn".
func (t *AWS_DataSync_Task) Set__DestinationLocationArn(v cfz.Expression[string]) *AWS_DataSync_Task {
	t.DestinationLocationArn = v
	return t
}

// SetV__DestinationLocationArn updates property "DestinationLocationArn".
func (t *AWS_DataSync_Task) SetV__DestinationLocationArn(v string) *AWS_DataSync_Task {
	t.DestinationLocationArn = cfz.V(v)
	return t
}

// Set__Excludes updates property "Excludes".
func (t *AWS_DataSync_Task) Set__Excludes(v cfz.ExpressionSlice[AWS_DataSync_Task_FilterRule]) *AWS_DataSync_Task {
	t.Excludes = v
	return t
}

// SetS__Excludes updates property "Excludes".
func (t *AWS_DataSync_Task) SetS__Excludes(v ...cfz.Expression[AWS_DataSync_Task_FilterRule]) *AWS_DataSync_Task {
	t.Excludes = cfz.S(v...)
	return t
}

// SetSV__Excludes updates property "Excludes".
func (t *AWS_DataSync_Task) SetSV__Excludes(v ...AWS_DataSync_Task_FilterRule) *AWS_DataSync_Task {
	t.Excludes = cfz.SV(v...)
	return t
}

// Set__Includes updates property "Includes".
func (t *AWS_DataSync_Task) Set__Includes(v cfz.ExpressionSlice[AWS_DataSync_Task_FilterRule]) *AWS_DataSync_Task {
	t.Includes = v
	return t
}

// SetS__Includes updates property "Includes".
func (t *AWS_DataSync_Task) SetS__Includes(v ...cfz.Expression[AWS_DataSync_Task_FilterRule]) *AWS_DataSync_Task {
	t.Includes = cfz.S(v...)
	return t
}

// SetSV__Includes updates property "Includes".
func (t *AWS_DataSync_Task) SetSV__Includes(v ...AWS_DataSync_Task_FilterRule) *AWS_DataSync_Task {
	t.Includes = cfz.SV(v...)
	return t
}

// Set__ManifestConfig updates property "ManifestConfig".
func (t *AWS_DataSync_Task) Set__ManifestConfig(v cfz.Expression[AWS_DataSync_Task_ManifestConfig]) *AWS_DataSync_Task {
	t.ManifestConfig = v
	return t
}

// SetV__ManifestConfig updates property "ManifestConfig".
func (t *AWS_DataSync_Task) SetV__ManifestConfig(v AWS_DataSync_Task_ManifestConfig) *AWS_DataSync_Task {
	t.ManifestConfig = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_DataSync_Task) Set__Name(v cfz.Expression[string]) *AWS_DataSync_Task {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_DataSync_Task) SetV__Name(v string) *AWS_DataSync_Task {
	t.Name = cfz.V(v)
	return t
}

// Set__Options updates property "Options".
func (t *AWS_DataSync_Task) Set__Options(v cfz.Expression[AWS_DataSync_Task_Options]) *AWS_DataSync_Task {
	t.Options = v
	return t
}

// SetV__Options updates property "Options".
func (t *AWS_DataSync_Task) SetV__Options(v AWS_DataSync_Task_Options) *AWS_DataSync_Task {
	t.Options = cfz.V(v)
	return t
}

// Set__Schedule updates property "Schedule".
func (t *AWS_DataSync_Task) Set__Schedule(v cfz.Expression[AWS_DataSync_Task_TaskSchedule]) *AWS_DataSync_Task {
	t.Schedule = v
	return t
}

// SetV__Schedule updates property "Schedule".
func (t *AWS_DataSync_Task) SetV__Schedule(v AWS_DataSync_Task_TaskSchedule) *AWS_DataSync_Task {
	t.Schedule = cfz.V(v)
	return t
}

// Set__SourceLocationArn updates property "SourceLocationArn".
func (t *AWS_DataSync_Task) Set__SourceLocationArn(v cfz.Expression[string]) *AWS_DataSync_Task {
	t.SourceLocationArn = v
	return t
}

// SetV__SourceLocationArn updates property "SourceLocationArn".
func (t *AWS_DataSync_Task) SetV__SourceLocationArn(v string) *AWS_DataSync_Task {
	t.SourceLocationArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_DataSync_Task) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_DataSync_Task {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_DataSync_Task) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_DataSync_Task {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_DataSync_Task) SetSV__Tags(v ...cfz.Tag) *AWS_DataSync_Task {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TaskMode updates property "TaskMode".
func (t *AWS_DataSync_Task) Set__TaskMode(v cfz.Expression[string]) *AWS_DataSync_Task {
	t.TaskMode = v
	return t
}

// SetV__TaskMode updates property "TaskMode".
func (t *AWS_DataSync_Task) SetV__TaskMode(v string) *AWS_DataSync_Task {
	t.TaskMode = cfz.V(v)
	return t
}

// Set__TaskReportConfig updates property "TaskReportConfig".
func (t *AWS_DataSync_Task) Set__TaskReportConfig(v cfz.Expression[AWS_DataSync_Task_TaskReportConfig]) *AWS_DataSync_Task {
	t.TaskReportConfig = v
	return t
}

// SetV__TaskReportConfig updates property "TaskReportConfig".
func (t *AWS_DataSync_Task) SetV__TaskReportConfig(v AWS_DataSync_Task_TaskReportConfig) *AWS_DataSync_Task {
	t.TaskReportConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DataSync_Task) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAttSlice__DestinationNetworkInterfaceArns returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DestinationNetworkInterfaceArns
func (t *AWS_DataSync_Task) GetAttSlice__DestinationNetworkInterfaceArns() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataSync_Task__AttributesMap.DestinationNetworkInterfaceArns))
}

// GetAttSlice__SourceNetworkInterfaceArns returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SourceNetworkInterfaceArns
func (t *AWS_DataSync_Task) GetAttSlice__SourceNetworkInterfaceArns() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataSync_Task__AttributesMap.SourceNetworkInterfaceArns))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_DataSync_Task) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataSync_Task__AttributesMap.Status))
}

// GetAtt__TaskArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: TaskArn
func (t *AWS_DataSync_Task) GetAtt__TaskArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataSync_Task__AttributesMap.TaskArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DataSync_Task) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DestinationNetworkInterfaceArns returns a conventionally configured output for an attribute of this resource.
// Attribute: DestinationNetworkInterfaceArns
func (t *AWS_DataSync_Task) GetConventionalOutputAtt__DestinationNetworkInterfaceArns(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDestinationNetworkInterfaceArns", t.GetAttSlice__DestinationNetworkInterfaceArns())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SourceNetworkInterfaceArns returns a conventionally configured output for an attribute of this resource.
// Attribute: SourceNetworkInterfaceArns
func (t *AWS_DataSync_Task) GetConventionalOutputAtt__SourceNetworkInterfaceArns(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSourceNetworkInterfaceArns", t.GetAttSlice__SourceNetworkInterfaceArns())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_DataSync_Task) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__TaskArn returns a conventionally configured output for an attribute of this resource.
// Attribute: TaskArn
func (t *AWS_DataSync_Task) GetConventionalOutputAtt__TaskArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTaskArn", t.GetAtt__TaskArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DataSync_Task) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DataSync_Task

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DataSync_Task) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
