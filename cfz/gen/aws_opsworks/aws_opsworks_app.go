// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_opsworks

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_OpsWorks_App)(nil)
	_ cfz.Resource                   = (*AWS_OpsWorks_App)(nil)
)

const (
	// AWS_OpsWorks_App__Type is the CloudFormation type for AWS::OpsWorks::App.
	AWS_OpsWorks_App__Type = "AWS::OpsWorks::App"
)

var (
	// AWS_OpsWorks_App__PropertiesMap reports all the CloudFormation properties for AWS::OpsWorks::App.
	AWS_OpsWorks_App__PropertiesMap = struct {
		AppSource        string
		Attributes       string
		DataSources      string
		Description      string
		Domains          string
		EnableSsl        string
		Environment      string
		Name             string
		Shortname        string
		SslConfiguration string
		StackId          string
		Type             string
	}{
		AppSource:        "AppSource",
		Attributes:       "Attributes",
		DataSources:      "DataSources",
		Description:      "Description",
		Domains:          "Domains",
		EnableSsl:        "EnableSsl",
		Environment:      "Environment",
		Name:             "Name",
		Shortname:        "Shortname",
		SslConfiguration: "SslConfiguration",
		StackId:          "StackId",
		Type:             "Type",
	}

	// AWS_OpsWorks_App__PropertiesSlice reports all the CloudFormation properties for AWS::OpsWorks::App.
	AWS_OpsWorks_App__PropertiesSlice = []string{
		AWS_OpsWorks_App__PropertiesMap.AppSource,
		AWS_OpsWorks_App__PropertiesMap.Attributes,
		AWS_OpsWorks_App__PropertiesMap.DataSources,
		AWS_OpsWorks_App__PropertiesMap.Description,
		AWS_OpsWorks_App__PropertiesMap.Domains,
		AWS_OpsWorks_App__PropertiesMap.EnableSsl,
		AWS_OpsWorks_App__PropertiesMap.Environment,
		AWS_OpsWorks_App__PropertiesMap.Name,
		AWS_OpsWorks_App__PropertiesMap.Shortname,
		AWS_OpsWorks_App__PropertiesMap.SslConfiguration,
		AWS_OpsWorks_App__PropertiesMap.StackId,
		AWS_OpsWorks_App__PropertiesMap.Type,
	}
)

// AWS_OpsWorks_App is a binding for AWS::OpsWorks::App.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html
type AWS_OpsWorks_App struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AppSource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-appsource
	AppSource cfz.Expression[AWS_OpsWorks_App_Source] `json:"AppSource,omitempty"`

	// Attributes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-attributes
	Attributes cfz.ExpressionMap[string] `json:"Attributes,omitempty"`

	// DataSources is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-datasources
	DataSources cfz.ExpressionSlice[AWS_OpsWorks_App_DataSource] `json:"DataSources,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Domains is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-domains
	Domains cfz.ExpressionSlice[string] `json:"Domains,omitempty"`

	// EnableSsl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-enablessl
	EnableSsl cfz.Expression[bool] `json:"EnableSsl,omitempty"`

	// Environment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-environment
	Environment cfz.ExpressionSlice[AWS_OpsWorks_App_EnvironmentVariable] `json:"Environment,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Shortname is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-shortname
	Shortname cfz.Expression[string] `json:"Shortname,omitempty"`

	// SslConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-sslconfiguration
	SslConfiguration cfz.Expression[AWS_OpsWorks_App_SslConfiguration] `json:"SslConfiguration,omitempty"`

	// StackId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-stackid
	StackId cfz.Expression[string] `json:"StackId,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_OpsWorks_App initializes a new *AWS_OpsWorks_App.
func New__AWS_OpsWorks_App(logicalName string) *AWS_OpsWorks_App {
	return &AWS_OpsWorks_App{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_OpsWorks_App) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_OpsWorks_App) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_OpsWorks_App) GetType() string {
	return AWS_OpsWorks_App__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_OpsWorks_App) Set__LogicalName(v string) *AWS_OpsWorks_App {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_OpsWorks_App) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_OpsWorks_App {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_OpsWorks_App) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_OpsWorks_App {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_OpsWorks_App) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_OpsWorks_App {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_OpsWorks_App) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_OpsWorks_App {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_OpsWorks_App) Set__RequestedOutputs(v []cfz.Output) *AWS_OpsWorks_App {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_OpsWorks_App) Add__RequestedOutputs(v ...cfz.Output) *AWS_OpsWorks_App {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AppSource updates property "AppSource".
func (t *AWS_OpsWorks_App) Set__AppSource(v cfz.Expression[AWS_OpsWorks_App_Source]) *AWS_OpsWorks_App {
	t.AppSource = v
	return t
}

// SetV__AppSource updates property "AppSource".
func (t *AWS_OpsWorks_App) SetV__AppSource(v AWS_OpsWorks_App_Source) *AWS_OpsWorks_App {
	t.AppSource = cfz.V(v)
	return t
}

// Set__Attributes updates property "Attributes".
func (t *AWS_OpsWorks_App) Set__Attributes(v cfz.ExpressionMap[string]) *AWS_OpsWorks_App {
	t.Attributes = v
	return t
}

// SetM__Attributes updates property "Attributes".
func (t *AWS_OpsWorks_App) SetM__Attributes(v ...map[string]cfz.Expression[string]) *AWS_OpsWorks_App {
	t.Attributes = cfz.M(v...)
	return t
}

// SetMV__Attributes updates property "Attributes".
func (t *AWS_OpsWorks_App) SetMV__Attributes(v ...map[string]string) *AWS_OpsWorks_App {
	t.Attributes = cfz.MV(v...)
	return t
}

// Set__DataSources updates property "DataSources".
func (t *AWS_OpsWorks_App) Set__DataSources(v cfz.ExpressionSlice[AWS_OpsWorks_App_DataSource]) *AWS_OpsWorks_App {
	t.DataSources = v
	return t
}

// SetS__DataSources updates property "DataSources".
func (t *AWS_OpsWorks_App) SetS__DataSources(v ...cfz.Expression[AWS_OpsWorks_App_DataSource]) *AWS_OpsWorks_App {
	t.DataSources = cfz.S(v...)
	return t
}

// SetSV__DataSources updates property "DataSources".
func (t *AWS_OpsWorks_App) SetSV__DataSources(v ...AWS_OpsWorks_App_DataSource) *AWS_OpsWorks_App {
	t.DataSources = cfz.SV(v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_OpsWorks_App) Set__Description(v cfz.Expression[string]) *AWS_OpsWorks_App {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_OpsWorks_App) SetV__Description(v string) *AWS_OpsWorks_App {
	t.Description = cfz.V(v)
	return t
}

// Set__Domains updates property "Domains".
func (t *AWS_OpsWorks_App) Set__Domains(v cfz.ExpressionSlice[string]) *AWS_OpsWorks_App {
	t.Domains = v
	return t
}

// SetS__Domains updates property "Domains".
func (t *AWS_OpsWorks_App) SetS__Domains(v ...cfz.Expression[string]) *AWS_OpsWorks_App {
	t.Domains = cfz.S(v...)
	return t
}

// SetSV__Domains updates property "Domains".
func (t *AWS_OpsWorks_App) SetSV__Domains(v ...string) *AWS_OpsWorks_App {
	t.Domains = cfz.SV(v...)
	return t
}

// Set__EnableSsl updates property "EnableSsl".
func (t *AWS_OpsWorks_App) Set__EnableSsl(v cfz.Expression[bool]) *AWS_OpsWorks_App {
	t.EnableSsl = v
	return t
}

// SetV__EnableSsl updates property "EnableSsl".
func (t *AWS_OpsWorks_App) SetV__EnableSsl(v bool) *AWS_OpsWorks_App {
	t.EnableSsl = cfz.V(v)
	return t
}

// Set__Environment updates property "Environment".
func (t *AWS_OpsWorks_App) Set__Environment(v cfz.ExpressionSlice[AWS_OpsWorks_App_EnvironmentVariable]) *AWS_OpsWorks_App {
	t.Environment = v
	return t
}

// SetS__Environment updates property "Environment".
func (t *AWS_OpsWorks_App) SetS__Environment(v ...cfz.Expression[AWS_OpsWorks_App_EnvironmentVariable]) *AWS_OpsWorks_App {
	t.Environment = cfz.S(v...)
	return t
}

// SetSV__Environment updates property "Environment".
func (t *AWS_OpsWorks_App) SetSV__Environment(v ...AWS_OpsWorks_App_EnvironmentVariable) *AWS_OpsWorks_App {
	t.Environment = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_OpsWorks_App) Set__Name(v cfz.Expression[string]) *AWS_OpsWorks_App {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_OpsWorks_App) SetV__Name(v string) *AWS_OpsWorks_App {
	t.Name = cfz.V(v)
	return t
}

// Set__Shortname updates property "Shortname".
func (t *AWS_OpsWorks_App) Set__Shortname(v cfz.Expression[string]) *AWS_OpsWorks_App {
	t.Shortname = v
	return t
}

// SetV__Shortname updates property "Shortname".
func (t *AWS_OpsWorks_App) SetV__Shortname(v string) *AWS_OpsWorks_App {
	t.Shortname = cfz.V(v)
	return t
}

// Set__SslConfiguration updates property "SslConfiguration".
func (t *AWS_OpsWorks_App) Set__SslConfiguration(v cfz.Expression[AWS_OpsWorks_App_SslConfiguration]) *AWS_OpsWorks_App {
	t.SslConfiguration = v
	return t
}

// SetV__SslConfiguration updates property "SslConfiguration".
func (t *AWS_OpsWorks_App) SetV__SslConfiguration(v AWS_OpsWorks_App_SslConfiguration) *AWS_OpsWorks_App {
	t.SslConfiguration = cfz.V(v)
	return t
}

// Set__StackId updates property "StackId".
func (t *AWS_OpsWorks_App) Set__StackId(v cfz.Expression[string]) *AWS_OpsWorks_App {
	t.StackId = v
	return t
}

// SetV__StackId updates property "StackId".
func (t *AWS_OpsWorks_App) SetV__StackId(v string) *AWS_OpsWorks_App {
	t.StackId = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_OpsWorks_App) Set__Type(v cfz.Expression[string]) *AWS_OpsWorks_App {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_OpsWorks_App) SetV__Type(v string) *AWS_OpsWorks_App {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_OpsWorks_App) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_OpsWorks_App) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_OpsWorks_App) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_OpsWorks_App

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_OpsWorks_App) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
