// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_eks

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EKS_AccessEntry_AccessScope__Type is the CloudFormation type for AWS::EKS::AccessEntry.AccessScope.
	AWS_EKS_AccessEntry_AccessScope__Type = "AWS::EKS::AccessEntry.AccessScope"
)

var (
	// AWS_EKS_AccessEntry_AccessScope__PropertiesMap reports all the CloudFormation properties for AWS::EKS::AccessEntry.AccessScope.
	AWS_EKS_AccessEntry_AccessScope__PropertiesMap = struct {
		Namespaces string
		Type       string
	}{
		Namespaces: "Namespaces",
		Type:       "Type",
	}

	// AWS_EKS_AccessEntry_AccessScope__PropertiesSlice reports all the CloudFormation properties for AWS::EKS::AccessEntry.AccessScope.
	AWS_EKS_AccessEntry_AccessScope__PropertiesSlice = []string{
		AWS_EKS_AccessEntry_AccessScope__PropertiesMap.Namespaces,
		AWS_EKS_AccessEntry_AccessScope__PropertiesMap.Type,
	}
)

// AWS_EKS_AccessEntry_AccessScope is a binding for AWS::EKS::AccessEntry.AccessScope.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-accessentry-accessscope.html
type AWS_EKS_AccessEntry_AccessScope struct {
	// Namespaces is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-accessentry-accessscope.html#cfn-eks-accessentry-accessscope-namespaces
	Namespaces cfz.ExpressionSlice[string] `json:"Namespaces,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-accessentry-accessscope.html#cfn-eks-accessentry-accessscope-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_EKS_AccessEntry_AccessScope initializes a new AWS_EKS_AccessEntry_AccessScope.
func New__AWS_EKS_AccessEntry_AccessScope() AWS_EKS_AccessEntry_AccessScope {
	return AWS_EKS_AccessEntry_AccessScope{}
}

// GetType returns the CloudFormation type.
func (AWS_EKS_AccessEntry_AccessScope) GetType() string {
	return AWS_EKS_AccessEntry_AccessScope__Type
}

// Set__Namespaces updates property "Namespaces".
func (t AWS_EKS_AccessEntry_AccessScope) Set__Namespaces(v cfz.ExpressionSlice[string]) AWS_EKS_AccessEntry_AccessScope {
	t.Namespaces = v
	return t
}

// SetS__Namespaces updates property "Namespaces".
func (t AWS_EKS_AccessEntry_AccessScope) SetS__Namespaces(v ...cfz.Expression[string]) AWS_EKS_AccessEntry_AccessScope {
	t.Namespaces = cfz.S(v...)
	return t
}

// SetSV__Namespaces updates property "Namespaces".
func (t AWS_EKS_AccessEntry_AccessScope) SetSV__Namespaces(v ...string) AWS_EKS_AccessEntry_AccessScope {
	t.Namespaces = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t AWS_EKS_AccessEntry_AccessScope) Set__Type(v cfz.Expression[string]) AWS_EKS_AccessEntry_AccessScope {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t AWS_EKS_AccessEntry_AccessScope) SetV__Type(v string) AWS_EKS_AccessEntry_AccessScope {
	t.Type = cfz.V(v)
	return t
}
