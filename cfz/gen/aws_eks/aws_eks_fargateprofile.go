// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_eks

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EKS_FargateProfile)(nil)
	_ cfz.Resource                   = (*AWS_EKS_FargateProfile)(nil)
)

const (
	// AWS_EKS_FargateProfile__Type is the CloudFormation type for AWS::EKS::FargateProfile.
	AWS_EKS_FargateProfile__Type = "AWS::EKS::FargateProfile"
)

var (
	// AWS_EKS_FargateProfile__AttributesMap reports all the CloudFormation attributes for AWS::EKS::FargateProfile.
	AWS_EKS_FargateProfile__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_EKS_FargateProfile__AttributesSlice reports all the CloudFormation attributes for AWS::EKS::FargateProfile.
	AWS_EKS_FargateProfile__AttributesSlice = []string{
		AWS_EKS_FargateProfile__AttributesMap.Arn,
	}
)

var (
	// AWS_EKS_FargateProfile__PropertiesMap reports all the CloudFormation properties for AWS::EKS::FargateProfile.
	AWS_EKS_FargateProfile__PropertiesMap = struct {
		ClusterName         string
		FargateProfileName  string
		PodExecutionRoleArn string
		Selectors           string
		Subnets             string
		Tags                string
	}{
		ClusterName:         "ClusterName",
		FargateProfileName:  "FargateProfileName",
		PodExecutionRoleArn: "PodExecutionRoleArn",
		Selectors:           "Selectors",
		Subnets:             "Subnets",
		Tags:                "Tags",
	}

	// AWS_EKS_FargateProfile__PropertiesSlice reports all the CloudFormation properties for AWS::EKS::FargateProfile.
	AWS_EKS_FargateProfile__PropertiesSlice = []string{
		AWS_EKS_FargateProfile__PropertiesMap.ClusterName,
		AWS_EKS_FargateProfile__PropertiesMap.FargateProfileName,
		AWS_EKS_FargateProfile__PropertiesMap.PodExecutionRoleArn,
		AWS_EKS_FargateProfile__PropertiesMap.Selectors,
		AWS_EKS_FargateProfile__PropertiesMap.Subnets,
		AWS_EKS_FargateProfile__PropertiesMap.Tags,
	}
)

// AWS_EKS_FargateProfile is a binding for AWS::EKS::FargateProfile.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html
type AWS_EKS_FargateProfile struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ClusterName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-clustername
	ClusterName cfz.Expression[string] `json:"ClusterName,omitempty"`

	// FargateProfileName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-fargateprofilename
	FargateProfileName cfz.Expression[string] `json:"FargateProfileName,omitempty"`

	// PodExecutionRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-podexecutionrolearn
	PodExecutionRoleArn cfz.Expression[string] `json:"PodExecutionRoleArn,omitempty"`

	// Selectors is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-selectors
	Selectors cfz.ExpressionSlice[AWS_EKS_FargateProfile_Selector] `json:"Selectors,omitempty"`

	// Subnets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-subnets
	Subnets cfz.ExpressionSlice[string] `json:"Subnets,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-fargateprofile.html#cfn-eks-fargateprofile-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_EKS_FargateProfile initializes a new *AWS_EKS_FargateProfile.
func New__AWS_EKS_FargateProfile(logicalName string) *AWS_EKS_FargateProfile {
	return &AWS_EKS_FargateProfile{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EKS_FargateProfile) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EKS_FargateProfile) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EKS_FargateProfile) GetType() string {
	return AWS_EKS_FargateProfile__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EKS_FargateProfile) Set__LogicalName(v string) *AWS_EKS_FargateProfile {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EKS_FargateProfile) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EKS_FargateProfile {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EKS_FargateProfile) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EKS_FargateProfile {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EKS_FargateProfile) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EKS_FargateProfile {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EKS_FargateProfile) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EKS_FargateProfile {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EKS_FargateProfile) Set__RequestedOutputs(v []cfz.Output) *AWS_EKS_FargateProfile {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EKS_FargateProfile) Add__RequestedOutputs(v ...cfz.Output) *AWS_EKS_FargateProfile {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ClusterName updates property "ClusterName".
func (t *AWS_EKS_FargateProfile) Set__ClusterName(v cfz.Expression[string]) *AWS_EKS_FargateProfile {
	t.ClusterName = v
	return t
}

// SetV__ClusterName updates property "ClusterName".
func (t *AWS_EKS_FargateProfile) SetV__ClusterName(v string) *AWS_EKS_FargateProfile {
	t.ClusterName = cfz.V(v)
	return t
}

// Set__FargateProfileName updates property "FargateProfileName".
func (t *AWS_EKS_FargateProfile) Set__FargateProfileName(v cfz.Expression[string]) *AWS_EKS_FargateProfile {
	t.FargateProfileName = v
	return t
}

// SetV__FargateProfileName updates property "FargateProfileName".
func (t *AWS_EKS_FargateProfile) SetV__FargateProfileName(v string) *AWS_EKS_FargateProfile {
	t.FargateProfileName = cfz.V(v)
	return t
}

// Set__PodExecutionRoleArn updates property "PodExecutionRoleArn".
func (t *AWS_EKS_FargateProfile) Set__PodExecutionRoleArn(v cfz.Expression[string]) *AWS_EKS_FargateProfile {
	t.PodExecutionRoleArn = v
	return t
}

// SetV__PodExecutionRoleArn updates property "PodExecutionRoleArn".
func (t *AWS_EKS_FargateProfile) SetV__PodExecutionRoleArn(v string) *AWS_EKS_FargateProfile {
	t.PodExecutionRoleArn = cfz.V(v)
	return t
}

// Set__Selectors updates property "Selectors".
func (t *AWS_EKS_FargateProfile) Set__Selectors(v cfz.ExpressionSlice[AWS_EKS_FargateProfile_Selector]) *AWS_EKS_FargateProfile {
	t.Selectors = v
	return t
}

// SetS__Selectors updates property "Selectors".
func (t *AWS_EKS_FargateProfile) SetS__Selectors(v ...cfz.Expression[AWS_EKS_FargateProfile_Selector]) *AWS_EKS_FargateProfile {
	t.Selectors = cfz.S(v...)
	return t
}

// SetSV__Selectors updates property "Selectors".
func (t *AWS_EKS_FargateProfile) SetSV__Selectors(v ...AWS_EKS_FargateProfile_Selector) *AWS_EKS_FargateProfile {
	t.Selectors = cfz.SV(v...)
	return t
}

// Set__Subnets updates property "Subnets".
func (t *AWS_EKS_FargateProfile) Set__Subnets(v cfz.ExpressionSlice[string]) *AWS_EKS_FargateProfile {
	t.Subnets = v
	return t
}

// SetS__Subnets updates property "Subnets".
func (t *AWS_EKS_FargateProfile) SetS__Subnets(v ...cfz.Expression[string]) *AWS_EKS_FargateProfile {
	t.Subnets = cfz.S(v...)
	return t
}

// SetSV__Subnets updates property "Subnets".
func (t *AWS_EKS_FargateProfile) SetSV__Subnets(v ...string) *AWS_EKS_FargateProfile {
	t.Subnets = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EKS_FargateProfile) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EKS_FargateProfile {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EKS_FargateProfile) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EKS_FargateProfile {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EKS_FargateProfile) SetSV__Tags(v ...cfz.Tag) *AWS_EKS_FargateProfile {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EKS_FargateProfile) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_EKS_FargateProfile) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_FargateProfile__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EKS_FargateProfile) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_EKS_FargateProfile) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EKS_FargateProfile) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EKS_FargateProfile

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EKS_FargateProfile) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
