// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_eks

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EKS_Cluster_KubernetesNetworkConfig__Type is the CloudFormation type for AWS::EKS::Cluster.KubernetesNetworkConfig.
	AWS_EKS_Cluster_KubernetesNetworkConfig__Type = "AWS::EKS::Cluster.KubernetesNetworkConfig"
)

var (
	// AWS_EKS_Cluster_KubernetesNetworkConfig__PropertiesMap reports all the CloudFormation properties for AWS::EKS::Cluster.KubernetesNetworkConfig.
	AWS_EKS_Cluster_KubernetesNetworkConfig__PropertiesMap = struct {
		ElasticLoadBalancing string
		IpFamily             string
		ServiceIpv4Cidr      string
		ServiceIpv6Cidr      string
	}{
		ElasticLoadBalancing: "ElasticLoadBalancing",
		IpFamily:             "IpFamily",
		ServiceIpv4Cidr:      "ServiceIpv4Cidr",
		ServiceIpv6Cidr:      "ServiceIpv6Cidr",
	}

	// AWS_EKS_Cluster_KubernetesNetworkConfig__PropertiesSlice reports all the CloudFormation properties for AWS::EKS::Cluster.KubernetesNetworkConfig.
	AWS_EKS_Cluster_KubernetesNetworkConfig__PropertiesSlice = []string{
		AWS_EKS_Cluster_KubernetesNetworkConfig__PropertiesMap.ElasticLoadBalancing,
		AWS_EKS_Cluster_KubernetesNetworkConfig__PropertiesMap.IpFamily,
		AWS_EKS_Cluster_KubernetesNetworkConfig__PropertiesMap.ServiceIpv4Cidr,
		AWS_EKS_Cluster_KubernetesNetworkConfig__PropertiesMap.ServiceIpv6Cidr,
	}
)

// AWS_EKS_Cluster_KubernetesNetworkConfig is a binding for AWS::EKS::Cluster.KubernetesNetworkConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html
type AWS_EKS_Cluster_KubernetesNetworkConfig struct {
	// ElasticLoadBalancing is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-elasticloadbalancing
	ElasticLoadBalancing cfz.Expression[AWS_EKS_Cluster_ElasticLoadBalancing] `json:"ElasticLoadBalancing,omitempty"`

	// IpFamily is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-ipfamily
	IpFamily cfz.Expression[string] `json:"IpFamily,omitempty"`

	// ServiceIpv4Cidr is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv4cidr
	ServiceIpv4Cidr cfz.Expression[string] `json:"ServiceIpv4Cidr,omitempty"`

	// ServiceIpv6Cidr is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-kubernetesnetworkconfig.html#cfn-eks-cluster-kubernetesnetworkconfig-serviceipv6cidr
	ServiceIpv6Cidr cfz.Expression[string] `json:"ServiceIpv6Cidr,omitempty"`
}

// New__AWS_EKS_Cluster_KubernetesNetworkConfig initializes a new AWS_EKS_Cluster_KubernetesNetworkConfig.
func New__AWS_EKS_Cluster_KubernetesNetworkConfig() AWS_EKS_Cluster_KubernetesNetworkConfig {
	return AWS_EKS_Cluster_KubernetesNetworkConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_EKS_Cluster_KubernetesNetworkConfig) GetType() string {
	return AWS_EKS_Cluster_KubernetesNetworkConfig__Type
}

// Set__ElasticLoadBalancing updates property "ElasticLoadBalancing".
func (t AWS_EKS_Cluster_KubernetesNetworkConfig) Set__ElasticLoadBalancing(v cfz.Expression[AWS_EKS_Cluster_ElasticLoadBalancing]) AWS_EKS_Cluster_KubernetesNetworkConfig {
	t.ElasticLoadBalancing = v
	return t
}

// SetV__ElasticLoadBalancing updates property "ElasticLoadBalancing".
func (t AWS_EKS_Cluster_KubernetesNetworkConfig) SetV__ElasticLoadBalancing(v AWS_EKS_Cluster_ElasticLoadBalancing) AWS_EKS_Cluster_KubernetesNetworkConfig {
	t.ElasticLoadBalancing = cfz.V(v)
	return t
}

// Set__IpFamily updates property "IpFamily".
func (t AWS_EKS_Cluster_KubernetesNetworkConfig) Set__IpFamily(v cfz.Expression[string]) AWS_EKS_Cluster_KubernetesNetworkConfig {
	t.IpFamily = v
	return t
}

// SetV__IpFamily updates property "IpFamily".
func (t AWS_EKS_Cluster_KubernetesNetworkConfig) SetV__IpFamily(v string) AWS_EKS_Cluster_KubernetesNetworkConfig {
	t.IpFamily = cfz.V(v)
	return t
}

// Set__ServiceIpv4Cidr updates property "ServiceIpv4Cidr".
func (t AWS_EKS_Cluster_KubernetesNetworkConfig) Set__ServiceIpv4Cidr(v cfz.Expression[string]) AWS_EKS_Cluster_KubernetesNetworkConfig {
	t.ServiceIpv4Cidr = v
	return t
}

// SetV__ServiceIpv4Cidr updates property "ServiceIpv4Cidr".
func (t AWS_EKS_Cluster_KubernetesNetworkConfig) SetV__ServiceIpv4Cidr(v string) AWS_EKS_Cluster_KubernetesNetworkConfig {
	t.ServiceIpv4Cidr = cfz.V(v)
	return t
}

// Set__ServiceIpv6Cidr updates property "ServiceIpv6Cidr".
func (t AWS_EKS_Cluster_KubernetesNetworkConfig) Set__ServiceIpv6Cidr(v cfz.Expression[string]) AWS_EKS_Cluster_KubernetesNetworkConfig {
	t.ServiceIpv6Cidr = v
	return t
}

// SetV__ServiceIpv6Cidr updates property "ServiceIpv6Cidr".
func (t AWS_EKS_Cluster_KubernetesNetworkConfig) SetV__ServiceIpv6Cidr(v string) AWS_EKS_Cluster_KubernetesNetworkConfig {
	t.ServiceIpv6Cidr = cfz.V(v)
	return t
}
