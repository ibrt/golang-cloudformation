// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_eks

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EKS_Cluster)(nil)
	_ cfz.Resource                   = (*AWS_EKS_Cluster)(nil)
)

const (
	// AWS_EKS_Cluster__Type is the CloudFormation type for AWS::EKS::Cluster.
	AWS_EKS_Cluster__Type = "AWS::EKS::Cluster"
)

var (
	// AWS_EKS_Cluster__AttributesMap reports all the CloudFormation attributes for AWS::EKS::Cluster.
	AWS_EKS_Cluster__AttributesMap = struct {
		Arn                                     string
		CertificateAuthorityData                string
		ClusterSecurityGroupId                  string
		EncryptionConfigKeyArn                  string
		Endpoint                                string
		Id                                      string
		KubernetesNetworkConfig_ServiceIpv6Cidr string
		OpenIdConnectIssuerUrl                  string
	}{
		Arn:                                     "Arn",
		CertificateAuthorityData:                "CertificateAuthorityData",
		ClusterSecurityGroupId:                  "ClusterSecurityGroupId",
		EncryptionConfigKeyArn:                  "EncryptionConfigKeyArn",
		Endpoint:                                "Endpoint",
		Id:                                      "Id",
		KubernetesNetworkConfig_ServiceIpv6Cidr: "KubernetesNetworkConfig.ServiceIpv6Cidr",
		OpenIdConnectIssuerUrl:                  "OpenIdConnectIssuerUrl",
	}

	// AWS_EKS_Cluster__AttributesSlice reports all the CloudFormation attributes for AWS::EKS::Cluster.
	AWS_EKS_Cluster__AttributesSlice = []string{
		AWS_EKS_Cluster__AttributesMap.Arn,
		AWS_EKS_Cluster__AttributesMap.CertificateAuthorityData,
		AWS_EKS_Cluster__AttributesMap.ClusterSecurityGroupId,
		AWS_EKS_Cluster__AttributesMap.EncryptionConfigKeyArn,
		AWS_EKS_Cluster__AttributesMap.Endpoint,
		AWS_EKS_Cluster__AttributesMap.Id,
		AWS_EKS_Cluster__AttributesMap.KubernetesNetworkConfig_ServiceIpv6Cidr,
		AWS_EKS_Cluster__AttributesMap.OpenIdConnectIssuerUrl,
	}
)

var (
	// AWS_EKS_Cluster__PropertiesMap reports all the CloudFormation properties for AWS::EKS::Cluster.
	AWS_EKS_Cluster__PropertiesMap = struct {
		AccessConfig               string
		BootstrapSelfManagedAddons string
		ComputeConfig              string
		EncryptionConfig           string
		KubernetesNetworkConfig    string
		Logging                    string
		Name                       string
		OutpostConfig              string
		RemoteNetworkConfig        string
		ResourcesVpcConfig         string
		RoleArn                    string
		StorageConfig              string
		Tags                       string
		UpgradePolicy              string
		Version                    string
		ZonalShiftConfig           string
	}{
		AccessConfig:               "AccessConfig",
		BootstrapSelfManagedAddons: "BootstrapSelfManagedAddons",
		ComputeConfig:              "ComputeConfig",
		EncryptionConfig:           "EncryptionConfig",
		KubernetesNetworkConfig:    "KubernetesNetworkConfig",
		Logging:                    "Logging",
		Name:                       "Name",
		OutpostConfig:              "OutpostConfig",
		RemoteNetworkConfig:        "RemoteNetworkConfig",
		ResourcesVpcConfig:         "ResourcesVpcConfig",
		RoleArn:                    "RoleArn",
		StorageConfig:              "StorageConfig",
		Tags:                       "Tags",
		UpgradePolicy:              "UpgradePolicy",
		Version:                    "Version",
		ZonalShiftConfig:           "ZonalShiftConfig",
	}

	// AWS_EKS_Cluster__PropertiesSlice reports all the CloudFormation properties for AWS::EKS::Cluster.
	AWS_EKS_Cluster__PropertiesSlice = []string{
		AWS_EKS_Cluster__PropertiesMap.AccessConfig,
		AWS_EKS_Cluster__PropertiesMap.BootstrapSelfManagedAddons,
		AWS_EKS_Cluster__PropertiesMap.ComputeConfig,
		AWS_EKS_Cluster__PropertiesMap.EncryptionConfig,
		AWS_EKS_Cluster__PropertiesMap.KubernetesNetworkConfig,
		AWS_EKS_Cluster__PropertiesMap.Logging,
		AWS_EKS_Cluster__PropertiesMap.Name,
		AWS_EKS_Cluster__PropertiesMap.OutpostConfig,
		AWS_EKS_Cluster__PropertiesMap.RemoteNetworkConfig,
		AWS_EKS_Cluster__PropertiesMap.ResourcesVpcConfig,
		AWS_EKS_Cluster__PropertiesMap.RoleArn,
		AWS_EKS_Cluster__PropertiesMap.StorageConfig,
		AWS_EKS_Cluster__PropertiesMap.Tags,
		AWS_EKS_Cluster__PropertiesMap.UpgradePolicy,
		AWS_EKS_Cluster__PropertiesMap.Version,
		AWS_EKS_Cluster__PropertiesMap.ZonalShiftConfig,
	}
)

// AWS_EKS_Cluster is a binding for AWS::EKS::Cluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html
type AWS_EKS_Cluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-accessconfig
	AccessConfig cfz.Expression[AWS_EKS_Cluster_AccessConfig] `json:"AccessConfig,omitempty"`

	// BootstrapSelfManagedAddons is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-bootstrapselfmanagedaddons
	BootstrapSelfManagedAddons cfz.Expression[bool] `json:"BootstrapSelfManagedAddons,omitempty"`

	// ComputeConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-computeconfig
	ComputeConfig cfz.Expression[AWS_EKS_Cluster_ComputeConfig] `json:"ComputeConfig,omitempty"`

	// EncryptionConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-encryptionconfig
	EncryptionConfig cfz.ExpressionSlice[AWS_EKS_Cluster_EncryptionConfig] `json:"EncryptionConfig,omitempty"`

	// KubernetesNetworkConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-kubernetesnetworkconfig
	KubernetesNetworkConfig cfz.Expression[AWS_EKS_Cluster_KubernetesNetworkConfig] `json:"KubernetesNetworkConfig,omitempty"`

	// Logging is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-logging
	Logging cfz.Expression[AWS_EKS_Cluster_Logging] `json:"Logging,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// OutpostConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-outpostconfig
	OutpostConfig cfz.Expression[AWS_EKS_Cluster_OutpostConfig] `json:"OutpostConfig,omitempty"`

	// RemoteNetworkConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-remotenetworkconfig
	RemoteNetworkConfig cfz.Expression[AWS_EKS_Cluster_RemoteNetworkConfig] `json:"RemoteNetworkConfig,omitempty"`

	// ResourcesVpcConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-resourcesvpcconfig
	ResourcesVpcConfig cfz.Expression[AWS_EKS_Cluster_ResourcesVpcConfig] `json:"ResourcesVpcConfig,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// StorageConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-storageconfig
	StorageConfig cfz.Expression[AWS_EKS_Cluster_StorageConfig] `json:"StorageConfig,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UpgradePolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-upgradepolicy
	UpgradePolicy cfz.Expression[AWS_EKS_Cluster_UpgradePolicy] `json:"UpgradePolicy,omitempty"`

	// Version is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-version
	Version cfz.Expression[string] `json:"Version,omitempty"`

	// ZonalShiftConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-cluster.html#cfn-eks-cluster-zonalshiftconfig
	ZonalShiftConfig cfz.Expression[AWS_EKS_Cluster_ZonalShiftConfig] `json:"ZonalShiftConfig,omitempty"`
}

// New__AWS_EKS_Cluster initializes a new *AWS_EKS_Cluster.
func New__AWS_EKS_Cluster(logicalName string) *AWS_EKS_Cluster {
	return &AWS_EKS_Cluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EKS_Cluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EKS_Cluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EKS_Cluster) GetType() string {
	return AWS_EKS_Cluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EKS_Cluster) Set__LogicalName(v string) *AWS_EKS_Cluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EKS_Cluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EKS_Cluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EKS_Cluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EKS_Cluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EKS_Cluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EKS_Cluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EKS_Cluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EKS_Cluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EKS_Cluster) Set__RequestedOutputs(v []cfz.Output) *AWS_EKS_Cluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EKS_Cluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_EKS_Cluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessConfig updates property "AccessConfig".
func (t *AWS_EKS_Cluster) Set__AccessConfig(v cfz.Expression[AWS_EKS_Cluster_AccessConfig]) *AWS_EKS_Cluster {
	t.AccessConfig = v
	return t
}

// SetV__AccessConfig updates property "AccessConfig".
func (t *AWS_EKS_Cluster) SetV__AccessConfig(v AWS_EKS_Cluster_AccessConfig) *AWS_EKS_Cluster {
	t.AccessConfig = cfz.V(v)
	return t
}

// Set__BootstrapSelfManagedAddons updates property "BootstrapSelfManagedAddons".
func (t *AWS_EKS_Cluster) Set__BootstrapSelfManagedAddons(v cfz.Expression[bool]) *AWS_EKS_Cluster {
	t.BootstrapSelfManagedAddons = v
	return t
}

// SetV__BootstrapSelfManagedAddons updates property "BootstrapSelfManagedAddons".
func (t *AWS_EKS_Cluster) SetV__BootstrapSelfManagedAddons(v bool) *AWS_EKS_Cluster {
	t.BootstrapSelfManagedAddons = cfz.V(v)
	return t
}

// Set__ComputeConfig updates property "ComputeConfig".
func (t *AWS_EKS_Cluster) Set__ComputeConfig(v cfz.Expression[AWS_EKS_Cluster_ComputeConfig]) *AWS_EKS_Cluster {
	t.ComputeConfig = v
	return t
}

// SetV__ComputeConfig updates property "ComputeConfig".
func (t *AWS_EKS_Cluster) SetV__ComputeConfig(v AWS_EKS_Cluster_ComputeConfig) *AWS_EKS_Cluster {
	t.ComputeConfig = cfz.V(v)
	return t
}

// Set__EncryptionConfig updates property "EncryptionConfig".
func (t *AWS_EKS_Cluster) Set__EncryptionConfig(v cfz.ExpressionSlice[AWS_EKS_Cluster_EncryptionConfig]) *AWS_EKS_Cluster {
	t.EncryptionConfig = v
	return t
}

// SetS__EncryptionConfig updates property "EncryptionConfig".
func (t *AWS_EKS_Cluster) SetS__EncryptionConfig(v ...cfz.Expression[AWS_EKS_Cluster_EncryptionConfig]) *AWS_EKS_Cluster {
	t.EncryptionConfig = cfz.S(v...)
	return t
}

// SetSV__EncryptionConfig updates property "EncryptionConfig".
func (t *AWS_EKS_Cluster) SetSV__EncryptionConfig(v ...AWS_EKS_Cluster_EncryptionConfig) *AWS_EKS_Cluster {
	t.EncryptionConfig = cfz.SV(v...)
	return t
}

// Set__KubernetesNetworkConfig updates property "KubernetesNetworkConfig".
func (t *AWS_EKS_Cluster) Set__KubernetesNetworkConfig(v cfz.Expression[AWS_EKS_Cluster_KubernetesNetworkConfig]) *AWS_EKS_Cluster {
	t.KubernetesNetworkConfig = v
	return t
}

// SetV__KubernetesNetworkConfig updates property "KubernetesNetworkConfig".
func (t *AWS_EKS_Cluster) SetV__KubernetesNetworkConfig(v AWS_EKS_Cluster_KubernetesNetworkConfig) *AWS_EKS_Cluster {
	t.KubernetesNetworkConfig = cfz.V(v)
	return t
}

// Set__Logging updates property "Logging".
func (t *AWS_EKS_Cluster) Set__Logging(v cfz.Expression[AWS_EKS_Cluster_Logging]) *AWS_EKS_Cluster {
	t.Logging = v
	return t
}

// SetV__Logging updates property "Logging".
func (t *AWS_EKS_Cluster) SetV__Logging(v AWS_EKS_Cluster_Logging) *AWS_EKS_Cluster {
	t.Logging = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_EKS_Cluster) Set__Name(v cfz.Expression[string]) *AWS_EKS_Cluster {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_EKS_Cluster) SetV__Name(v string) *AWS_EKS_Cluster {
	t.Name = cfz.V(v)
	return t
}

// Set__OutpostConfig updates property "OutpostConfig".
func (t *AWS_EKS_Cluster) Set__OutpostConfig(v cfz.Expression[AWS_EKS_Cluster_OutpostConfig]) *AWS_EKS_Cluster {
	t.OutpostConfig = v
	return t
}

// SetV__OutpostConfig updates property "OutpostConfig".
func (t *AWS_EKS_Cluster) SetV__OutpostConfig(v AWS_EKS_Cluster_OutpostConfig) *AWS_EKS_Cluster {
	t.OutpostConfig = cfz.V(v)
	return t
}

// Set__RemoteNetworkConfig updates property "RemoteNetworkConfig".
func (t *AWS_EKS_Cluster) Set__RemoteNetworkConfig(v cfz.Expression[AWS_EKS_Cluster_RemoteNetworkConfig]) *AWS_EKS_Cluster {
	t.RemoteNetworkConfig = v
	return t
}

// SetV__RemoteNetworkConfig updates property "RemoteNetworkConfig".
func (t *AWS_EKS_Cluster) SetV__RemoteNetworkConfig(v AWS_EKS_Cluster_RemoteNetworkConfig) *AWS_EKS_Cluster {
	t.RemoteNetworkConfig = cfz.V(v)
	return t
}

// Set__ResourcesVpcConfig updates property "ResourcesVpcConfig".
func (t *AWS_EKS_Cluster) Set__ResourcesVpcConfig(v cfz.Expression[AWS_EKS_Cluster_ResourcesVpcConfig]) *AWS_EKS_Cluster {
	t.ResourcesVpcConfig = v
	return t
}

// SetV__ResourcesVpcConfig updates property "ResourcesVpcConfig".
func (t *AWS_EKS_Cluster) SetV__ResourcesVpcConfig(v AWS_EKS_Cluster_ResourcesVpcConfig) *AWS_EKS_Cluster {
	t.ResourcesVpcConfig = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_EKS_Cluster) Set__RoleArn(v cfz.Expression[string]) *AWS_EKS_Cluster {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_EKS_Cluster) SetV__RoleArn(v string) *AWS_EKS_Cluster {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__StorageConfig updates property "StorageConfig".
func (t *AWS_EKS_Cluster) Set__StorageConfig(v cfz.Expression[AWS_EKS_Cluster_StorageConfig]) *AWS_EKS_Cluster {
	t.StorageConfig = v
	return t
}

// SetV__StorageConfig updates property "StorageConfig".
func (t *AWS_EKS_Cluster) SetV__StorageConfig(v AWS_EKS_Cluster_StorageConfig) *AWS_EKS_Cluster {
	t.StorageConfig = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EKS_Cluster) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EKS_Cluster {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EKS_Cluster) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EKS_Cluster {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EKS_Cluster) SetSV__Tags(v ...cfz.Tag) *AWS_EKS_Cluster {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UpgradePolicy updates property "UpgradePolicy".
func (t *AWS_EKS_Cluster) Set__UpgradePolicy(v cfz.Expression[AWS_EKS_Cluster_UpgradePolicy]) *AWS_EKS_Cluster {
	t.UpgradePolicy = v
	return t
}

// SetV__UpgradePolicy updates property "UpgradePolicy".
func (t *AWS_EKS_Cluster) SetV__UpgradePolicy(v AWS_EKS_Cluster_UpgradePolicy) *AWS_EKS_Cluster {
	t.UpgradePolicy = cfz.V(v)
	return t
}

// Set__Version updates property "Version".
func (t *AWS_EKS_Cluster) Set__Version(v cfz.Expression[string]) *AWS_EKS_Cluster {
	t.Version = v
	return t
}

// SetV__Version updates property "Version".
func (t *AWS_EKS_Cluster) SetV__Version(v string) *AWS_EKS_Cluster {
	t.Version = cfz.V(v)
	return t
}

// Set__ZonalShiftConfig updates property "ZonalShiftConfig".
func (t *AWS_EKS_Cluster) Set__ZonalShiftConfig(v cfz.Expression[AWS_EKS_Cluster_ZonalShiftConfig]) *AWS_EKS_Cluster {
	t.ZonalShiftConfig = v
	return t
}

// SetV__ZonalShiftConfig updates property "ZonalShiftConfig".
func (t *AWS_EKS_Cluster) SetV__ZonalShiftConfig(v AWS_EKS_Cluster_ZonalShiftConfig) *AWS_EKS_Cluster {
	t.ZonalShiftConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EKS_Cluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_EKS_Cluster) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_Cluster__AttributesMap.Arn))
}

// GetAtt__CertificateAuthorityData returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CertificateAuthorityData
func (t *AWS_EKS_Cluster) GetAtt__CertificateAuthorityData() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_Cluster__AttributesMap.CertificateAuthorityData))
}

// GetAtt__ClusterSecurityGroupId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ClusterSecurityGroupId
func (t *AWS_EKS_Cluster) GetAtt__ClusterSecurityGroupId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_Cluster__AttributesMap.ClusterSecurityGroupId))
}

// GetAtt__EncryptionConfigKeyArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EncryptionConfigKeyArn
func (t *AWS_EKS_Cluster) GetAtt__EncryptionConfigKeyArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_Cluster__AttributesMap.EncryptionConfigKeyArn))
}

// GetAtt__Endpoint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint
func (t *AWS_EKS_Cluster) GetAtt__Endpoint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_Cluster__AttributesMap.Endpoint))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_EKS_Cluster) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_Cluster__AttributesMap.Id))
}

// GetAtt__KubernetesNetworkConfig_ServiceIpv6Cidr returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: KubernetesNetworkConfig.ServiceIpv6Cidr
func (t *AWS_EKS_Cluster) GetAtt__KubernetesNetworkConfig_ServiceIpv6Cidr() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_Cluster__AttributesMap.KubernetesNetworkConfig_ServiceIpv6Cidr))
}

// GetAtt__OpenIdConnectIssuerUrl returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OpenIdConnectIssuerUrl
func (t *AWS_EKS_Cluster) GetAtt__OpenIdConnectIssuerUrl() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_Cluster__AttributesMap.OpenIdConnectIssuerUrl))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EKS_Cluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_EKS_Cluster) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CertificateAuthorityData returns a conventionally configured output for an attribute of this resource.
// Attribute: CertificateAuthorityData
func (t *AWS_EKS_Cluster) GetConventionalOutputAtt__CertificateAuthorityData(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCertificateAuthorityData", t.GetAtt__CertificateAuthorityData())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ClusterSecurityGroupId returns a conventionally configured output for an attribute of this resource.
// Attribute: ClusterSecurityGroupId
func (t *AWS_EKS_Cluster) GetConventionalOutputAtt__ClusterSecurityGroupId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttClusterSecurityGroupId", t.GetAtt__ClusterSecurityGroupId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EncryptionConfigKeyArn returns a conventionally configured output for an attribute of this resource.
// Attribute: EncryptionConfigKeyArn
func (t *AWS_EKS_Cluster) GetConventionalOutputAtt__EncryptionConfigKeyArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEncryptionConfigKeyArn", t.GetAtt__EncryptionConfigKeyArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint
func (t *AWS_EKS_Cluster) GetConventionalOutputAtt__Endpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpoint", t.GetAtt__Endpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_EKS_Cluster) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__KubernetesNetworkConfig_ServiceIpv6Cidr returns a conventionally configured output for an attribute of this resource.
// Attribute: KubernetesNetworkConfig.ServiceIpv6Cidr
func (t *AWS_EKS_Cluster) GetConventionalOutputAtt__KubernetesNetworkConfig_ServiceIpv6Cidr(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttKubernetesNetworkConfigServiceIpv6Cidr", t.GetAtt__KubernetesNetworkConfig_ServiceIpv6Cidr())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OpenIdConnectIssuerUrl returns a conventionally configured output for an attribute of this resource.
// Attribute: OpenIdConnectIssuerUrl
func (t *AWS_EKS_Cluster) GetConventionalOutputAtt__OpenIdConnectIssuerUrl(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOpenIdConnectIssuerUrl", t.GetAtt__OpenIdConnectIssuerUrl())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EKS_Cluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EKS_Cluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EKS_Cluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
