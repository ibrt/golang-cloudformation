// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_eks

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EKS_Cluster_LoggingTypeConfig__Type is the CloudFormation type for AWS::EKS::Cluster.LoggingTypeConfig.
	AWS_EKS_Cluster_LoggingTypeConfig__Type = "AWS::EKS::Cluster.LoggingTypeConfig"
)

var (
	// AWS_EKS_Cluster_LoggingTypeConfig__PropertiesMap reports all the CloudFormation properties for AWS::EKS::Cluster.LoggingTypeConfig.
	AWS_EKS_Cluster_LoggingTypeConfig__PropertiesMap = struct {
		Type string
	}{
		Type: "Type",
	}

	// AWS_EKS_Cluster_LoggingTypeConfig__PropertiesSlice reports all the CloudFormation properties for AWS::EKS::Cluster.LoggingTypeConfig.
	AWS_EKS_Cluster_LoggingTypeConfig__PropertiesSlice = []string{
		AWS_EKS_Cluster_LoggingTypeConfig__PropertiesMap.Type,
	}
)

// AWS_EKS_Cluster_LoggingTypeConfig is a binding for AWS::EKS::Cluster.LoggingTypeConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-loggingtypeconfig.html
type AWS_EKS_Cluster_LoggingTypeConfig struct {
	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-cluster-loggingtypeconfig.html#cfn-eks-cluster-loggingtypeconfig-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_EKS_Cluster_LoggingTypeConfig initializes a new AWS_EKS_Cluster_LoggingTypeConfig.
func New__AWS_EKS_Cluster_LoggingTypeConfig() AWS_EKS_Cluster_LoggingTypeConfig {
	return AWS_EKS_Cluster_LoggingTypeConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_EKS_Cluster_LoggingTypeConfig) GetType() string {
	return AWS_EKS_Cluster_LoggingTypeConfig__Type
}

// Set__Type updates property "Type".
func (t AWS_EKS_Cluster_LoggingTypeConfig) Set__Type(v cfz.Expression[string]) AWS_EKS_Cluster_LoggingTypeConfig {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t AWS_EKS_Cluster_LoggingTypeConfig) SetV__Type(v string) AWS_EKS_Cluster_LoggingTypeConfig {
	t.Type = cfz.V(v)
	return t
}
