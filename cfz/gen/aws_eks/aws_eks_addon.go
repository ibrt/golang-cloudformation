// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_eks

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EKS_Addon)(nil)
	_ cfz.Resource                   = (*AWS_EKS_Addon)(nil)
)

const (
	// AWS_EKS_Addon__Type is the CloudFormation type for AWS::EKS::Addon.
	AWS_EKS_Addon__Type = "AWS::EKS::Addon"
)

var (
	// AWS_EKS_Addon__AttributesMap reports all the CloudFormation attributes for AWS::EKS::Addon.
	AWS_EKS_Addon__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_EKS_Addon__AttributesSlice reports all the CloudFormation attributes for AWS::EKS::Addon.
	AWS_EKS_Addon__AttributesSlice = []string{
		AWS_EKS_Addon__AttributesMap.Arn,
	}
)

var (
	// AWS_EKS_Addon__PropertiesMap reports all the CloudFormation properties for AWS::EKS::Addon.
	AWS_EKS_Addon__PropertiesMap = struct {
		AddonName               string
		AddonVersion            string
		ClusterName             string
		ConfigurationValues     string
		PodIdentityAssociations string
		PreserveOnDelete        string
		ResolveConflicts        string
		ServiceAccountRoleArn   string
		Tags                    string
	}{
		AddonName:               "AddonName",
		AddonVersion:            "AddonVersion",
		ClusterName:             "ClusterName",
		ConfigurationValues:     "ConfigurationValues",
		PodIdentityAssociations: "PodIdentityAssociations",
		PreserveOnDelete:        "PreserveOnDelete",
		ResolveConflicts:        "ResolveConflicts",
		ServiceAccountRoleArn:   "ServiceAccountRoleArn",
		Tags:                    "Tags",
	}

	// AWS_EKS_Addon__PropertiesSlice reports all the CloudFormation properties for AWS::EKS::Addon.
	AWS_EKS_Addon__PropertiesSlice = []string{
		AWS_EKS_Addon__PropertiesMap.AddonName,
		AWS_EKS_Addon__PropertiesMap.AddonVersion,
		AWS_EKS_Addon__PropertiesMap.ClusterName,
		AWS_EKS_Addon__PropertiesMap.ConfigurationValues,
		AWS_EKS_Addon__PropertiesMap.PodIdentityAssociations,
		AWS_EKS_Addon__PropertiesMap.PreserveOnDelete,
		AWS_EKS_Addon__PropertiesMap.ResolveConflicts,
		AWS_EKS_Addon__PropertiesMap.ServiceAccountRoleArn,
		AWS_EKS_Addon__PropertiesMap.Tags,
	}
)

// AWS_EKS_Addon is a binding for AWS::EKS::Addon.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html
type AWS_EKS_Addon struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AddonName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonname
	AddonName cfz.Expression[string] `json:"AddonName,omitempty"`

	// AddonVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-addonversion
	AddonVersion cfz.Expression[string] `json:"AddonVersion,omitempty"`

	// ClusterName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-clustername
	ClusterName cfz.Expression[string] `json:"ClusterName,omitempty"`

	// ConfigurationValues is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-configurationvalues
	ConfigurationValues cfz.Expression[string] `json:"ConfigurationValues,omitempty"`

	// PodIdentityAssociations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-podidentityassociations
	PodIdentityAssociations cfz.ExpressionSlice[AWS_EKS_Addon_PodIdentityAssociation] `json:"PodIdentityAssociations,omitempty"`

	// PreserveOnDelete is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-preserveondelete
	PreserveOnDelete cfz.Expression[bool] `json:"PreserveOnDelete,omitempty"`

	// ResolveConflicts is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-resolveconflicts
	ResolveConflicts cfz.Expression[string] `json:"ResolveConflicts,omitempty"`

	// ServiceAccountRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-serviceaccountrolearn
	ServiceAccountRoleArn cfz.Expression[string] `json:"ServiceAccountRoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-addon.html#cfn-eks-addon-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_EKS_Addon initializes a new *AWS_EKS_Addon.
func New__AWS_EKS_Addon(logicalName string) *AWS_EKS_Addon {
	return &AWS_EKS_Addon{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EKS_Addon) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EKS_Addon) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EKS_Addon) GetType() string {
	return AWS_EKS_Addon__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EKS_Addon) Set__LogicalName(v string) *AWS_EKS_Addon {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EKS_Addon) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EKS_Addon {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EKS_Addon) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EKS_Addon {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EKS_Addon) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EKS_Addon {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EKS_Addon) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EKS_Addon {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EKS_Addon) Set__RequestedOutputs(v []cfz.Output) *AWS_EKS_Addon {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EKS_Addon) Add__RequestedOutputs(v ...cfz.Output) *AWS_EKS_Addon {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AddonName updates property "AddonName".
func (t *AWS_EKS_Addon) Set__AddonName(v cfz.Expression[string]) *AWS_EKS_Addon {
	t.AddonName = v
	return t
}

// SetV__AddonName updates property "AddonName".
func (t *AWS_EKS_Addon) SetV__AddonName(v string) *AWS_EKS_Addon {
	t.AddonName = cfz.V(v)
	return t
}

// Set__AddonVersion updates property "AddonVersion".
func (t *AWS_EKS_Addon) Set__AddonVersion(v cfz.Expression[string]) *AWS_EKS_Addon {
	t.AddonVersion = v
	return t
}

// SetV__AddonVersion updates property "AddonVersion".
func (t *AWS_EKS_Addon) SetV__AddonVersion(v string) *AWS_EKS_Addon {
	t.AddonVersion = cfz.V(v)
	return t
}

// Set__ClusterName updates property "ClusterName".
func (t *AWS_EKS_Addon) Set__ClusterName(v cfz.Expression[string]) *AWS_EKS_Addon {
	t.ClusterName = v
	return t
}

// SetV__ClusterName updates property "ClusterName".
func (t *AWS_EKS_Addon) SetV__ClusterName(v string) *AWS_EKS_Addon {
	t.ClusterName = cfz.V(v)
	return t
}

// Set__ConfigurationValues updates property "ConfigurationValues".
func (t *AWS_EKS_Addon) Set__ConfigurationValues(v cfz.Expression[string]) *AWS_EKS_Addon {
	t.ConfigurationValues = v
	return t
}

// SetV__ConfigurationValues updates property "ConfigurationValues".
func (t *AWS_EKS_Addon) SetV__ConfigurationValues(v string) *AWS_EKS_Addon {
	t.ConfigurationValues = cfz.V(v)
	return t
}

// Set__PodIdentityAssociations updates property "PodIdentityAssociations".
func (t *AWS_EKS_Addon) Set__PodIdentityAssociations(v cfz.ExpressionSlice[AWS_EKS_Addon_PodIdentityAssociation]) *AWS_EKS_Addon {
	t.PodIdentityAssociations = v
	return t
}

// SetS__PodIdentityAssociations updates property "PodIdentityAssociations".
func (t *AWS_EKS_Addon) SetS__PodIdentityAssociations(v ...cfz.Expression[AWS_EKS_Addon_PodIdentityAssociation]) *AWS_EKS_Addon {
	t.PodIdentityAssociations = cfz.S(v...)
	return t
}

// SetSV__PodIdentityAssociations updates property "PodIdentityAssociations".
func (t *AWS_EKS_Addon) SetSV__PodIdentityAssociations(v ...AWS_EKS_Addon_PodIdentityAssociation) *AWS_EKS_Addon {
	t.PodIdentityAssociations = cfz.SV(v...)
	return t
}

// Set__PreserveOnDelete updates property "PreserveOnDelete".
func (t *AWS_EKS_Addon) Set__PreserveOnDelete(v cfz.Expression[bool]) *AWS_EKS_Addon {
	t.PreserveOnDelete = v
	return t
}

// SetV__PreserveOnDelete updates property "PreserveOnDelete".
func (t *AWS_EKS_Addon) SetV__PreserveOnDelete(v bool) *AWS_EKS_Addon {
	t.PreserveOnDelete = cfz.V(v)
	return t
}

// Set__ResolveConflicts updates property "ResolveConflicts".
func (t *AWS_EKS_Addon) Set__ResolveConflicts(v cfz.Expression[string]) *AWS_EKS_Addon {
	t.ResolveConflicts = v
	return t
}

// SetV__ResolveConflicts updates property "ResolveConflicts".
func (t *AWS_EKS_Addon) SetV__ResolveConflicts(v string) *AWS_EKS_Addon {
	t.ResolveConflicts = cfz.V(v)
	return t
}

// Set__ServiceAccountRoleArn updates property "ServiceAccountRoleArn".
func (t *AWS_EKS_Addon) Set__ServiceAccountRoleArn(v cfz.Expression[string]) *AWS_EKS_Addon {
	t.ServiceAccountRoleArn = v
	return t
}

// SetV__ServiceAccountRoleArn updates property "ServiceAccountRoleArn".
func (t *AWS_EKS_Addon) SetV__ServiceAccountRoleArn(v string) *AWS_EKS_Addon {
	t.ServiceAccountRoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EKS_Addon) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EKS_Addon {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EKS_Addon) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EKS_Addon {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EKS_Addon) SetSV__Tags(v ...cfz.Tag) *AWS_EKS_Addon {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EKS_Addon) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_EKS_Addon) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_Addon__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EKS_Addon) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_EKS_Addon) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EKS_Addon) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EKS_Addon

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EKS_Addon) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
