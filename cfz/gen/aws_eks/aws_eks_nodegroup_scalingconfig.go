// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_eks

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EKS_Nodegroup_ScalingConfig__Type is the CloudFormation type for AWS::EKS::Nodegroup.ScalingConfig.
	AWS_EKS_Nodegroup_ScalingConfig__Type = "AWS::EKS::Nodegroup.ScalingConfig"
)

var (
	// AWS_EKS_Nodegroup_ScalingConfig__PropertiesMap reports all the CloudFormation properties for AWS::EKS::Nodegroup.ScalingConfig.
	AWS_EKS_Nodegroup_ScalingConfig__PropertiesMap = struct {
		DesiredSize string
		MaxSize     string
		MinSize     string
	}{
		DesiredSize: "DesiredSize",
		MaxSize:     "MaxSize",
		MinSize:     "MinSize",
	}

	// AWS_EKS_Nodegroup_ScalingConfig__PropertiesSlice reports all the CloudFormation properties for AWS::EKS::Nodegroup.ScalingConfig.
	AWS_EKS_Nodegroup_ScalingConfig__PropertiesSlice = []string{
		AWS_EKS_Nodegroup_ScalingConfig__PropertiesMap.DesiredSize,
		AWS_EKS_Nodegroup_ScalingConfig__PropertiesMap.MaxSize,
		AWS_EKS_Nodegroup_ScalingConfig__PropertiesMap.MinSize,
	}
)

// AWS_EKS_Nodegroup_ScalingConfig is a binding for AWS::EKS::Nodegroup.ScalingConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html
type AWS_EKS_Nodegroup_ScalingConfig struct {
	// DesiredSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-desiredsize
	DesiredSize cfz.Expression[int32] `json:"DesiredSize,omitempty"`

	// MaxSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-maxsize
	MaxSize cfz.Expression[int32] `json:"MaxSize,omitempty"`

	// MinSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-eks-nodegroup-scalingconfig.html#cfn-eks-nodegroup-scalingconfig-minsize
	MinSize cfz.Expression[int32] `json:"MinSize,omitempty"`
}

// New__AWS_EKS_Nodegroup_ScalingConfig initializes a new AWS_EKS_Nodegroup_ScalingConfig.
func New__AWS_EKS_Nodegroup_ScalingConfig() AWS_EKS_Nodegroup_ScalingConfig {
	return AWS_EKS_Nodegroup_ScalingConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_EKS_Nodegroup_ScalingConfig) GetType() string {
	return AWS_EKS_Nodegroup_ScalingConfig__Type
}

// Set__DesiredSize updates property "DesiredSize".
func (t AWS_EKS_Nodegroup_ScalingConfig) Set__DesiredSize(v cfz.Expression[int32]) AWS_EKS_Nodegroup_ScalingConfig {
	t.DesiredSize = v
	return t
}

// SetV__DesiredSize updates property "DesiredSize".
func (t AWS_EKS_Nodegroup_ScalingConfig) SetV__DesiredSize(v int32) AWS_EKS_Nodegroup_ScalingConfig {
	t.DesiredSize = cfz.V(v)
	return t
}

// Set__MaxSize updates property "MaxSize".
func (t AWS_EKS_Nodegroup_ScalingConfig) Set__MaxSize(v cfz.Expression[int32]) AWS_EKS_Nodegroup_ScalingConfig {
	t.MaxSize = v
	return t
}

// SetV__MaxSize updates property "MaxSize".
func (t AWS_EKS_Nodegroup_ScalingConfig) SetV__MaxSize(v int32) AWS_EKS_Nodegroup_ScalingConfig {
	t.MaxSize = cfz.V(v)
	return t
}

// Set__MinSize updates property "MinSize".
func (t AWS_EKS_Nodegroup_ScalingConfig) Set__MinSize(v cfz.Expression[int32]) AWS_EKS_Nodegroup_ScalingConfig {
	t.MinSize = v
	return t
}

// SetV__MinSize updates property "MinSize".
func (t AWS_EKS_Nodegroup_ScalingConfig) SetV__MinSize(v int32) AWS_EKS_Nodegroup_ScalingConfig {
	t.MinSize = cfz.V(v)
	return t
}
