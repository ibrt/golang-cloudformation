// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_eks

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EKS_PodIdentityAssociation)(nil)
	_ cfz.Resource                   = (*AWS_EKS_PodIdentityAssociation)(nil)
)

const (
	// AWS_EKS_PodIdentityAssociation__Type is the CloudFormation type for AWS::EKS::PodIdentityAssociation.
	AWS_EKS_PodIdentityAssociation__Type = "AWS::EKS::PodIdentityAssociation"
)

var (
	// AWS_EKS_PodIdentityAssociation__AttributesMap reports all the CloudFormation attributes for AWS::EKS::PodIdentityAssociation.
	AWS_EKS_PodIdentityAssociation__AttributesMap = struct {
		AssociationArn string
		AssociationId  string
	}{
		AssociationArn: "AssociationArn",
		AssociationId:  "AssociationId",
	}

	// AWS_EKS_PodIdentityAssociation__AttributesSlice reports all the CloudFormation attributes for AWS::EKS::PodIdentityAssociation.
	AWS_EKS_PodIdentityAssociation__AttributesSlice = []string{
		AWS_EKS_PodIdentityAssociation__AttributesMap.AssociationArn,
		AWS_EKS_PodIdentityAssociation__AttributesMap.AssociationId,
	}
)

var (
	// AWS_EKS_PodIdentityAssociation__PropertiesMap reports all the CloudFormation properties for AWS::EKS::PodIdentityAssociation.
	AWS_EKS_PodIdentityAssociation__PropertiesMap = struct {
		ClusterName    string
		Namespace      string
		RoleArn        string
		ServiceAccount string
		Tags           string
	}{
		ClusterName:    "ClusterName",
		Namespace:      "Namespace",
		RoleArn:        "RoleArn",
		ServiceAccount: "ServiceAccount",
		Tags:           "Tags",
	}

	// AWS_EKS_PodIdentityAssociation__PropertiesSlice reports all the CloudFormation properties for AWS::EKS::PodIdentityAssociation.
	AWS_EKS_PodIdentityAssociation__PropertiesSlice = []string{
		AWS_EKS_PodIdentityAssociation__PropertiesMap.ClusterName,
		AWS_EKS_PodIdentityAssociation__PropertiesMap.Namespace,
		AWS_EKS_PodIdentityAssociation__PropertiesMap.RoleArn,
		AWS_EKS_PodIdentityAssociation__PropertiesMap.ServiceAccount,
		AWS_EKS_PodIdentityAssociation__PropertiesMap.Tags,
	}
)

// AWS_EKS_PodIdentityAssociation is a binding for AWS::EKS::PodIdentityAssociation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html
type AWS_EKS_PodIdentityAssociation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ClusterName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-clustername
	ClusterName cfz.Expression[string] `json:"ClusterName,omitempty"`

	// Namespace is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-namespace
	Namespace cfz.Expression[string] `json:"Namespace,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// ServiceAccount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-serviceaccount
	ServiceAccount cfz.Expression[string] `json:"ServiceAccount,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-podidentityassociation.html#cfn-eks-podidentityassociation-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_EKS_PodIdentityAssociation initializes a new *AWS_EKS_PodIdentityAssociation.
func New__AWS_EKS_PodIdentityAssociation(logicalName string) *AWS_EKS_PodIdentityAssociation {
	return &AWS_EKS_PodIdentityAssociation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EKS_PodIdentityAssociation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EKS_PodIdentityAssociation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EKS_PodIdentityAssociation) GetType() string {
	return AWS_EKS_PodIdentityAssociation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EKS_PodIdentityAssociation) Set__LogicalName(v string) *AWS_EKS_PodIdentityAssociation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EKS_PodIdentityAssociation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EKS_PodIdentityAssociation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EKS_PodIdentityAssociation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EKS_PodIdentityAssociation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EKS_PodIdentityAssociation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EKS_PodIdentityAssociation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EKS_PodIdentityAssociation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EKS_PodIdentityAssociation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EKS_PodIdentityAssociation) Set__RequestedOutputs(v []cfz.Output) *AWS_EKS_PodIdentityAssociation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EKS_PodIdentityAssociation) Add__RequestedOutputs(v ...cfz.Output) *AWS_EKS_PodIdentityAssociation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ClusterName updates property "ClusterName".
func (t *AWS_EKS_PodIdentityAssociation) Set__ClusterName(v cfz.Expression[string]) *AWS_EKS_PodIdentityAssociation {
	t.ClusterName = v
	return t
}

// SetV__ClusterName updates property "ClusterName".
func (t *AWS_EKS_PodIdentityAssociation) SetV__ClusterName(v string) *AWS_EKS_PodIdentityAssociation {
	t.ClusterName = cfz.V(v)
	return t
}

// Set__Namespace updates property "Namespace".
func (t *AWS_EKS_PodIdentityAssociation) Set__Namespace(v cfz.Expression[string]) *AWS_EKS_PodIdentityAssociation {
	t.Namespace = v
	return t
}

// SetV__Namespace updates property "Namespace".
func (t *AWS_EKS_PodIdentityAssociation) SetV__Namespace(v string) *AWS_EKS_PodIdentityAssociation {
	t.Namespace = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_EKS_PodIdentityAssociation) Set__RoleArn(v cfz.Expression[string]) *AWS_EKS_PodIdentityAssociation {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_EKS_PodIdentityAssociation) SetV__RoleArn(v string) *AWS_EKS_PodIdentityAssociation {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__ServiceAccount updates property "ServiceAccount".
func (t *AWS_EKS_PodIdentityAssociation) Set__ServiceAccount(v cfz.Expression[string]) *AWS_EKS_PodIdentityAssociation {
	t.ServiceAccount = v
	return t
}

// SetV__ServiceAccount updates property "ServiceAccount".
func (t *AWS_EKS_PodIdentityAssociation) SetV__ServiceAccount(v string) *AWS_EKS_PodIdentityAssociation {
	t.ServiceAccount = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EKS_PodIdentityAssociation) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EKS_PodIdentityAssociation {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EKS_PodIdentityAssociation) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EKS_PodIdentityAssociation {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EKS_PodIdentityAssociation) SetSV__Tags(v ...cfz.Tag) *AWS_EKS_PodIdentityAssociation {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EKS_PodIdentityAssociation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AssociationArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AssociationArn
func (t *AWS_EKS_PodIdentityAssociation) GetAtt__AssociationArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_PodIdentityAssociation__AttributesMap.AssociationArn))
}

// GetAtt__AssociationId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AssociationId
func (t *AWS_EKS_PodIdentityAssociation) GetAtt__AssociationId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EKS_PodIdentityAssociation__AttributesMap.AssociationId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EKS_PodIdentityAssociation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AssociationArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AssociationArn
func (t *AWS_EKS_PodIdentityAssociation) GetConventionalOutputAtt__AssociationArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssociationArn", t.GetAtt__AssociationArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AssociationId returns a conventionally configured output for an attribute of this resource.
// Attribute: AssociationId
func (t *AWS_EKS_PodIdentityAssociation) GetConventionalOutputAtt__AssociationId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssociationId", t.GetAtt__AssociationId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EKS_PodIdentityAssociation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EKS_PodIdentityAssociation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EKS_PodIdentityAssociation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
