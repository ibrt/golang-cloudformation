// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_omics

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Omics_AnnotationStore_TsvStoreOptions__Type is the CloudFormation type for AWS::Omics::AnnotationStore.TsvStoreOptions.
	AWS_Omics_AnnotationStore_TsvStoreOptions__Type = "AWS::Omics::AnnotationStore.TsvStoreOptions"
)

var (
	// AWS_Omics_AnnotationStore_TsvStoreOptions__PropertiesMap reports all the CloudFormation properties for AWS::Omics::AnnotationStore.TsvStoreOptions.
	AWS_Omics_AnnotationStore_TsvStoreOptions__PropertiesMap = struct {
		AnnotationType string
		FormatToHeader string
		Schema         string
	}{
		AnnotationType: "AnnotationType",
		FormatToHeader: "FormatToHeader",
		Schema:         "Schema",
	}

	// AWS_Omics_AnnotationStore_TsvStoreOptions__PropertiesSlice reports all the CloudFormation properties for AWS::Omics::AnnotationStore.TsvStoreOptions.
	AWS_Omics_AnnotationStore_TsvStoreOptions__PropertiesSlice = []string{
		AWS_Omics_AnnotationStore_TsvStoreOptions__PropertiesMap.AnnotationType,
		AWS_Omics_AnnotationStore_TsvStoreOptions__PropertiesMap.FormatToHeader,
		AWS_Omics_AnnotationStore_TsvStoreOptions__PropertiesMap.Schema,
	}
)

// AWS_Omics_AnnotationStore_TsvStoreOptions is a binding for AWS::Omics::AnnotationStore.TsvStoreOptions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-omics-annotationstore-tsvstoreoptions.html
type AWS_Omics_AnnotationStore_TsvStoreOptions struct {
	// AnnotationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-omics-annotationstore-tsvstoreoptions.html#cfn-omics-annotationstore-tsvstoreoptions-annotationtype
	AnnotationType cfz.Expression[string] `json:"AnnotationType,omitempty"`

	// FormatToHeader is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-omics-annotationstore-tsvstoreoptions.html#cfn-omics-annotationstore-tsvstoreoptions-formattoheader
	FormatToHeader cfz.ExpressionMap[string] `json:"FormatToHeader,omitempty"`

	// Schema is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-omics-annotationstore-tsvstoreoptions.html#cfn-omics-annotationstore-tsvstoreoptions-schema
	Schema cfz.Expression[json.RawMessage] `json:"Schema,omitempty"`
}

// New__AWS_Omics_AnnotationStore_TsvStoreOptions initializes a new AWS_Omics_AnnotationStore_TsvStoreOptions.
func New__AWS_Omics_AnnotationStore_TsvStoreOptions() AWS_Omics_AnnotationStore_TsvStoreOptions {
	return AWS_Omics_AnnotationStore_TsvStoreOptions{}
}

// GetType returns the CloudFormation type.
func (AWS_Omics_AnnotationStore_TsvStoreOptions) GetType() string {
	return AWS_Omics_AnnotationStore_TsvStoreOptions__Type
}

// Set__AnnotationType updates property "AnnotationType".
func (t AWS_Omics_AnnotationStore_TsvStoreOptions) Set__AnnotationType(v cfz.Expression[string]) AWS_Omics_AnnotationStore_TsvStoreOptions {
	t.AnnotationType = v
	return t
}

// SetV__AnnotationType updates property "AnnotationType".
func (t AWS_Omics_AnnotationStore_TsvStoreOptions) SetV__AnnotationType(v string) AWS_Omics_AnnotationStore_TsvStoreOptions {
	t.AnnotationType = cfz.V(v)
	return t
}

// Set__FormatToHeader updates property "FormatToHeader".
func (t AWS_Omics_AnnotationStore_TsvStoreOptions) Set__FormatToHeader(v cfz.ExpressionMap[string]) AWS_Omics_AnnotationStore_TsvStoreOptions {
	t.FormatToHeader = v
	return t
}

// SetM__FormatToHeader updates property "FormatToHeader".
func (t AWS_Omics_AnnotationStore_TsvStoreOptions) SetM__FormatToHeader(v ...map[string]cfz.Expression[string]) AWS_Omics_AnnotationStore_TsvStoreOptions {
	t.FormatToHeader = cfz.M(v...)
	return t
}

// SetMV__FormatToHeader updates property "FormatToHeader".
func (t AWS_Omics_AnnotationStore_TsvStoreOptions) SetMV__FormatToHeader(v ...map[string]string) AWS_Omics_AnnotationStore_TsvStoreOptions {
	t.FormatToHeader = cfz.MV(v...)
	return t
}

// Set__Schema updates property "Schema".
func (t AWS_Omics_AnnotationStore_TsvStoreOptions) Set__Schema(v cfz.Expression[json.RawMessage]) AWS_Omics_AnnotationStore_TsvStoreOptions {
	t.Schema = v
	return t
}

// SetV__Schema updates property "Schema".
func (t AWS_Omics_AnnotationStore_TsvStoreOptions) SetV__Schema(v json.RawMessage) AWS_Omics_AnnotationStore_TsvStoreOptions {
	t.Schema = cfz.V(v)
	return t
}
