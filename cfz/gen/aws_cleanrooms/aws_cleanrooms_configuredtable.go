// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cleanrooms

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CleanRooms_ConfiguredTable)(nil)
	_ cfz.Resource                   = (*AWS_CleanRooms_ConfiguredTable)(nil)
)

const (
	// AWS_CleanRooms_ConfiguredTable__Type is the CloudFormation type for AWS::CleanRooms::ConfiguredTable.
	AWS_CleanRooms_ConfiguredTable__Type = "AWS::CleanRooms::ConfiguredTable"
)

var (
	// AWS_CleanRooms_ConfiguredTable__AttributesMap reports all the CloudFormation attributes for AWS::CleanRooms::ConfiguredTable.
	AWS_CleanRooms_ConfiguredTable__AttributesMap = struct {
		Arn                       string
		ConfiguredTableIdentifier string
	}{
		Arn:                       "Arn",
		ConfiguredTableIdentifier: "ConfiguredTableIdentifier",
	}

	// AWS_CleanRooms_ConfiguredTable__AttributesSlice reports all the CloudFormation attributes for AWS::CleanRooms::ConfiguredTable.
	AWS_CleanRooms_ConfiguredTable__AttributesSlice = []string{
		AWS_CleanRooms_ConfiguredTable__AttributesMap.Arn,
		AWS_CleanRooms_ConfiguredTable__AttributesMap.ConfiguredTableIdentifier,
	}
)

var (
	// AWS_CleanRooms_ConfiguredTable__PropertiesMap reports all the CloudFormation properties for AWS::CleanRooms::ConfiguredTable.
	AWS_CleanRooms_ConfiguredTable__PropertiesMap = struct {
		AllowedColumns string
		AnalysisMethod string
		AnalysisRules  string
		Description    string
		Name           string
		TableReference string
		Tags           string
	}{
		AllowedColumns: "AllowedColumns",
		AnalysisMethod: "AnalysisMethod",
		AnalysisRules:  "AnalysisRules",
		Description:    "Description",
		Name:           "Name",
		TableReference: "TableReference",
		Tags:           "Tags",
	}

	// AWS_CleanRooms_ConfiguredTable__PropertiesSlice reports all the CloudFormation properties for AWS::CleanRooms::ConfiguredTable.
	AWS_CleanRooms_ConfiguredTable__PropertiesSlice = []string{
		AWS_CleanRooms_ConfiguredTable__PropertiesMap.AllowedColumns,
		AWS_CleanRooms_ConfiguredTable__PropertiesMap.AnalysisMethod,
		AWS_CleanRooms_ConfiguredTable__PropertiesMap.AnalysisRules,
		AWS_CleanRooms_ConfiguredTable__PropertiesMap.Description,
		AWS_CleanRooms_ConfiguredTable__PropertiesMap.Name,
		AWS_CleanRooms_ConfiguredTable__PropertiesMap.TableReference,
		AWS_CleanRooms_ConfiguredTable__PropertiesMap.Tags,
	}
)

// AWS_CleanRooms_ConfiguredTable is a binding for AWS::CleanRooms::ConfiguredTable.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html
type AWS_CleanRooms_ConfiguredTable struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AllowedColumns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-allowedcolumns
	AllowedColumns cfz.ExpressionSlice[string] `json:"AllowedColumns,omitempty"`

	// AnalysisMethod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-analysismethod
	AnalysisMethod cfz.Expression[string] `json:"AnalysisMethod,omitempty"`

	// AnalysisRules is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-analysisrules
	AnalysisRules cfz.ExpressionSlice[AWS_CleanRooms_ConfiguredTable_AnalysisRule] `json:"AnalysisRules,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// TableReference is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-tablereference
	TableReference cfz.Expression[AWS_CleanRooms_ConfiguredTable_TableReference] `json:"TableReference,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-configuredtable.html#cfn-cleanrooms-configuredtable-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_CleanRooms_ConfiguredTable initializes a new *AWS_CleanRooms_ConfiguredTable.
func New__AWS_CleanRooms_ConfiguredTable(logicalName string) *AWS_CleanRooms_ConfiguredTable {
	return &AWS_CleanRooms_ConfiguredTable{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CleanRooms_ConfiguredTable) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CleanRooms_ConfiguredTable) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CleanRooms_ConfiguredTable) GetType() string {
	return AWS_CleanRooms_ConfiguredTable__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CleanRooms_ConfiguredTable) Set__LogicalName(v string) *AWS_CleanRooms_ConfiguredTable {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CleanRooms_ConfiguredTable) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CleanRooms_ConfiguredTable {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CleanRooms_ConfiguredTable) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CleanRooms_ConfiguredTable {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CleanRooms_ConfiguredTable) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CleanRooms_ConfiguredTable {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CleanRooms_ConfiguredTable) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CleanRooms_ConfiguredTable {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CleanRooms_ConfiguredTable) Set__RequestedOutputs(v []cfz.Output) *AWS_CleanRooms_ConfiguredTable {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CleanRooms_ConfiguredTable) Add__RequestedOutputs(v ...cfz.Output) *AWS_CleanRooms_ConfiguredTable {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AllowedColumns updates property "AllowedColumns".
func (t *AWS_CleanRooms_ConfiguredTable) Set__AllowedColumns(v cfz.ExpressionSlice[string]) *AWS_CleanRooms_ConfiguredTable {
	t.AllowedColumns = v
	return t
}

// SetS__AllowedColumns updates property "AllowedColumns".
func (t *AWS_CleanRooms_ConfiguredTable) SetS__AllowedColumns(v ...cfz.Expression[string]) *AWS_CleanRooms_ConfiguredTable {
	t.AllowedColumns = cfz.S(v...)
	return t
}

// SetSV__AllowedColumns updates property "AllowedColumns".
func (t *AWS_CleanRooms_ConfiguredTable) SetSV__AllowedColumns(v ...string) *AWS_CleanRooms_ConfiguredTable {
	t.AllowedColumns = cfz.SV(v...)
	return t
}

// Set__AnalysisMethod updates property "AnalysisMethod".
func (t *AWS_CleanRooms_ConfiguredTable) Set__AnalysisMethod(v cfz.Expression[string]) *AWS_CleanRooms_ConfiguredTable {
	t.AnalysisMethod = v
	return t
}

// SetV__AnalysisMethod updates property "AnalysisMethod".
func (t *AWS_CleanRooms_ConfiguredTable) SetV__AnalysisMethod(v string) *AWS_CleanRooms_ConfiguredTable {
	t.AnalysisMethod = cfz.V(v)
	return t
}

// Set__AnalysisRules updates property "AnalysisRules".
func (t *AWS_CleanRooms_ConfiguredTable) Set__AnalysisRules(v cfz.ExpressionSlice[AWS_CleanRooms_ConfiguredTable_AnalysisRule]) *AWS_CleanRooms_ConfiguredTable {
	t.AnalysisRules = v
	return t
}

// SetS__AnalysisRules updates property "AnalysisRules".
func (t *AWS_CleanRooms_ConfiguredTable) SetS__AnalysisRules(v ...cfz.Expression[AWS_CleanRooms_ConfiguredTable_AnalysisRule]) *AWS_CleanRooms_ConfiguredTable {
	t.AnalysisRules = cfz.S(v...)
	return t
}

// SetSV__AnalysisRules updates property "AnalysisRules".
func (t *AWS_CleanRooms_ConfiguredTable) SetSV__AnalysisRules(v ...AWS_CleanRooms_ConfiguredTable_AnalysisRule) *AWS_CleanRooms_ConfiguredTable {
	t.AnalysisRules = cfz.SV(v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_CleanRooms_ConfiguredTable) Set__Description(v cfz.Expression[string]) *AWS_CleanRooms_ConfiguredTable {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_CleanRooms_ConfiguredTable) SetV__Description(v string) *AWS_CleanRooms_ConfiguredTable {
	t.Description = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_CleanRooms_ConfiguredTable) Set__Name(v cfz.Expression[string]) *AWS_CleanRooms_ConfiguredTable {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_CleanRooms_ConfiguredTable) SetV__Name(v string) *AWS_CleanRooms_ConfiguredTable {
	t.Name = cfz.V(v)
	return t
}

// Set__TableReference updates property "TableReference".
func (t *AWS_CleanRooms_ConfiguredTable) Set__TableReference(v cfz.Expression[AWS_CleanRooms_ConfiguredTable_TableReference]) *AWS_CleanRooms_ConfiguredTable {
	t.TableReference = v
	return t
}

// SetV__TableReference updates property "TableReference".
func (t *AWS_CleanRooms_ConfiguredTable) SetV__TableReference(v AWS_CleanRooms_ConfiguredTable_TableReference) *AWS_CleanRooms_ConfiguredTable {
	t.TableReference = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CleanRooms_ConfiguredTable) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CleanRooms_ConfiguredTable {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CleanRooms_ConfiguredTable) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CleanRooms_ConfiguredTable {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CleanRooms_ConfiguredTable) SetSV__Tags(v ...cfz.Tag) *AWS_CleanRooms_ConfiguredTable {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CleanRooms_ConfiguredTable) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_CleanRooms_ConfiguredTable) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CleanRooms_ConfiguredTable__AttributesMap.Arn))
}

// GetAtt__ConfiguredTableIdentifier returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConfiguredTableIdentifier
func (t *AWS_CleanRooms_ConfiguredTable) GetAtt__ConfiguredTableIdentifier() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CleanRooms_ConfiguredTable__AttributesMap.ConfiguredTableIdentifier))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CleanRooms_ConfiguredTable) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_CleanRooms_ConfiguredTable) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConfiguredTableIdentifier returns a conventionally configured output for an attribute of this resource.
// Attribute: ConfiguredTableIdentifier
func (t *AWS_CleanRooms_ConfiguredTable) GetConventionalOutputAtt__ConfiguredTableIdentifier(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConfiguredTableIdentifier", t.GetAtt__ConfiguredTableIdentifier())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CleanRooms_ConfiguredTable) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CleanRooms_ConfiguredTable

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CleanRooms_ConfiguredTable) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
