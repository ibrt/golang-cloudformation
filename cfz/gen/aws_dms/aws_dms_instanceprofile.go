// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_dms

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DMS_InstanceProfile)(nil)
	_ cfz.Resource                   = (*AWS_DMS_InstanceProfile)(nil)
)

const (
	// AWS_DMS_InstanceProfile__Type is the CloudFormation type for AWS::DMS::InstanceProfile.
	AWS_DMS_InstanceProfile__Type = "AWS::DMS::InstanceProfile"
)

var (
	// AWS_DMS_InstanceProfile__AttributesMap reports all the CloudFormation attributes for AWS::DMS::InstanceProfile.
	AWS_DMS_InstanceProfile__AttributesMap = struct {
		InstanceProfileArn          string
		InstanceProfileCreationTime string
	}{
		InstanceProfileArn:          "InstanceProfileArn",
		InstanceProfileCreationTime: "InstanceProfileCreationTime",
	}

	// AWS_DMS_InstanceProfile__AttributesSlice reports all the CloudFormation attributes for AWS::DMS::InstanceProfile.
	AWS_DMS_InstanceProfile__AttributesSlice = []string{
		AWS_DMS_InstanceProfile__AttributesMap.InstanceProfileArn,
		AWS_DMS_InstanceProfile__AttributesMap.InstanceProfileCreationTime,
	}
)

var (
	// AWS_DMS_InstanceProfile__PropertiesMap reports all the CloudFormation properties for AWS::DMS::InstanceProfile.
	AWS_DMS_InstanceProfile__PropertiesMap = struct {
		AvailabilityZone          string
		Description               string
		InstanceProfileIdentifier string
		InstanceProfileName       string
		KmsKeyArn                 string
		NetworkType               string
		PubliclyAccessible        string
		SubnetGroupIdentifier     string
		Tags                      string
		VpcSecurityGroups         string
	}{
		AvailabilityZone:          "AvailabilityZone",
		Description:               "Description",
		InstanceProfileIdentifier: "InstanceProfileIdentifier",
		InstanceProfileName:       "InstanceProfileName",
		KmsKeyArn:                 "KmsKeyArn",
		NetworkType:               "NetworkType",
		PubliclyAccessible:        "PubliclyAccessible",
		SubnetGroupIdentifier:     "SubnetGroupIdentifier",
		Tags:                      "Tags",
		VpcSecurityGroups:         "VpcSecurityGroups",
	}

	// AWS_DMS_InstanceProfile__PropertiesSlice reports all the CloudFormation properties for AWS::DMS::InstanceProfile.
	AWS_DMS_InstanceProfile__PropertiesSlice = []string{
		AWS_DMS_InstanceProfile__PropertiesMap.AvailabilityZone,
		AWS_DMS_InstanceProfile__PropertiesMap.Description,
		AWS_DMS_InstanceProfile__PropertiesMap.InstanceProfileIdentifier,
		AWS_DMS_InstanceProfile__PropertiesMap.InstanceProfileName,
		AWS_DMS_InstanceProfile__PropertiesMap.KmsKeyArn,
		AWS_DMS_InstanceProfile__PropertiesMap.NetworkType,
		AWS_DMS_InstanceProfile__PropertiesMap.PubliclyAccessible,
		AWS_DMS_InstanceProfile__PropertiesMap.SubnetGroupIdentifier,
		AWS_DMS_InstanceProfile__PropertiesMap.Tags,
		AWS_DMS_InstanceProfile__PropertiesMap.VpcSecurityGroups,
	}
)

// AWS_DMS_InstanceProfile is a binding for AWS::DMS::InstanceProfile.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html
type AWS_DMS_InstanceProfile struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AvailabilityZone is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-availabilityzone
	AvailabilityZone cfz.Expression[string] `json:"AvailabilityZone,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// InstanceProfileIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-instanceprofileidentifier
	InstanceProfileIdentifier cfz.Expression[string] `json:"InstanceProfileIdentifier,omitempty"`

	// InstanceProfileName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-instanceprofilename
	InstanceProfileName cfz.Expression[string] `json:"InstanceProfileName,omitempty"`

	// KmsKeyArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-kmskeyarn
	KmsKeyArn cfz.Expression[string] `json:"KmsKeyArn,omitempty"`

	// NetworkType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-networktype
	NetworkType cfz.Expression[string] `json:"NetworkType,omitempty"`

	// PubliclyAccessible is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-publiclyaccessible
	PubliclyAccessible cfz.Expression[bool] `json:"PubliclyAccessible,omitempty"`

	// SubnetGroupIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-subnetgroupidentifier
	SubnetGroupIdentifier cfz.Expression[string] `json:"SubnetGroupIdentifier,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcSecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-instanceprofile.html#cfn-dms-instanceprofile-vpcsecuritygroups
	VpcSecurityGroups cfz.ExpressionSlice[string] `json:"VpcSecurityGroups,omitempty"`
}

// New__AWS_DMS_InstanceProfile initializes a new *AWS_DMS_InstanceProfile.
func New__AWS_DMS_InstanceProfile(logicalName string) *AWS_DMS_InstanceProfile {
	return &AWS_DMS_InstanceProfile{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DMS_InstanceProfile) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DMS_InstanceProfile) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DMS_InstanceProfile) GetType() string {
	return AWS_DMS_InstanceProfile__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DMS_InstanceProfile) Set__LogicalName(v string) *AWS_DMS_InstanceProfile {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DMS_InstanceProfile) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DMS_InstanceProfile {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DMS_InstanceProfile) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DMS_InstanceProfile {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DMS_InstanceProfile) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DMS_InstanceProfile {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DMS_InstanceProfile) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DMS_InstanceProfile {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DMS_InstanceProfile) Set__RequestedOutputs(v []cfz.Output) *AWS_DMS_InstanceProfile {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DMS_InstanceProfile) Add__RequestedOutputs(v ...cfz.Output) *AWS_DMS_InstanceProfile {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_DMS_InstanceProfile) Set__AvailabilityZone(v cfz.Expression[string]) *AWS_DMS_InstanceProfile {
	t.AvailabilityZone = v
	return t
}

// SetV__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_DMS_InstanceProfile) SetV__AvailabilityZone(v string) *AWS_DMS_InstanceProfile {
	t.AvailabilityZone = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_DMS_InstanceProfile) Set__Description(v cfz.Expression[string]) *AWS_DMS_InstanceProfile {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_DMS_InstanceProfile) SetV__Description(v string) *AWS_DMS_InstanceProfile {
	t.Description = cfz.V(v)
	return t
}

// Set__InstanceProfileIdentifier updates property "InstanceProfileIdentifier".
func (t *AWS_DMS_InstanceProfile) Set__InstanceProfileIdentifier(v cfz.Expression[string]) *AWS_DMS_InstanceProfile {
	t.InstanceProfileIdentifier = v
	return t
}

// SetV__InstanceProfileIdentifier updates property "InstanceProfileIdentifier".
func (t *AWS_DMS_InstanceProfile) SetV__InstanceProfileIdentifier(v string) *AWS_DMS_InstanceProfile {
	t.InstanceProfileIdentifier = cfz.V(v)
	return t
}

// Set__InstanceProfileName updates property "InstanceProfileName".
func (t *AWS_DMS_InstanceProfile) Set__InstanceProfileName(v cfz.Expression[string]) *AWS_DMS_InstanceProfile {
	t.InstanceProfileName = v
	return t
}

// SetV__InstanceProfileName updates property "InstanceProfileName".
func (t *AWS_DMS_InstanceProfile) SetV__InstanceProfileName(v string) *AWS_DMS_InstanceProfile {
	t.InstanceProfileName = cfz.V(v)
	return t
}

// Set__KmsKeyArn updates property "KmsKeyArn".
func (t *AWS_DMS_InstanceProfile) Set__KmsKeyArn(v cfz.Expression[string]) *AWS_DMS_InstanceProfile {
	t.KmsKeyArn = v
	return t
}

// SetV__KmsKeyArn updates property "KmsKeyArn".
func (t *AWS_DMS_InstanceProfile) SetV__KmsKeyArn(v string) *AWS_DMS_InstanceProfile {
	t.KmsKeyArn = cfz.V(v)
	return t
}

// Set__NetworkType updates property "NetworkType".
func (t *AWS_DMS_InstanceProfile) Set__NetworkType(v cfz.Expression[string]) *AWS_DMS_InstanceProfile {
	t.NetworkType = v
	return t
}

// SetV__NetworkType updates property "NetworkType".
func (t *AWS_DMS_InstanceProfile) SetV__NetworkType(v string) *AWS_DMS_InstanceProfile {
	t.NetworkType = cfz.V(v)
	return t
}

// Set__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_DMS_InstanceProfile) Set__PubliclyAccessible(v cfz.Expression[bool]) *AWS_DMS_InstanceProfile {
	t.PubliclyAccessible = v
	return t
}

// SetV__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_DMS_InstanceProfile) SetV__PubliclyAccessible(v bool) *AWS_DMS_InstanceProfile {
	t.PubliclyAccessible = cfz.V(v)
	return t
}

// Set__SubnetGroupIdentifier updates property "SubnetGroupIdentifier".
func (t *AWS_DMS_InstanceProfile) Set__SubnetGroupIdentifier(v cfz.Expression[string]) *AWS_DMS_InstanceProfile {
	t.SubnetGroupIdentifier = v
	return t
}

// SetV__SubnetGroupIdentifier updates property "SubnetGroupIdentifier".
func (t *AWS_DMS_InstanceProfile) SetV__SubnetGroupIdentifier(v string) *AWS_DMS_InstanceProfile {
	t.SubnetGroupIdentifier = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_DMS_InstanceProfile) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_DMS_InstanceProfile {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_DMS_InstanceProfile) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_DMS_InstanceProfile {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_DMS_InstanceProfile) SetSV__Tags(v ...cfz.Tag) *AWS_DMS_InstanceProfile {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcSecurityGroups updates property "VpcSecurityGroups".
func (t *AWS_DMS_InstanceProfile) Set__VpcSecurityGroups(v cfz.ExpressionSlice[string]) *AWS_DMS_InstanceProfile {
	t.VpcSecurityGroups = v
	return t
}

// SetS__VpcSecurityGroups updates property "VpcSecurityGroups".
func (t *AWS_DMS_InstanceProfile) SetS__VpcSecurityGroups(v ...cfz.Expression[string]) *AWS_DMS_InstanceProfile {
	t.VpcSecurityGroups = cfz.S(v...)
	return t
}

// SetSV__VpcSecurityGroups updates property "VpcSecurityGroups".
func (t *AWS_DMS_InstanceProfile) SetSV__VpcSecurityGroups(v ...string) *AWS_DMS_InstanceProfile {
	t.VpcSecurityGroups = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DMS_InstanceProfile) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__InstanceProfileArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: InstanceProfileArn
func (t *AWS_DMS_InstanceProfile) GetAtt__InstanceProfileArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DMS_InstanceProfile__AttributesMap.InstanceProfileArn))
}

// GetAtt__InstanceProfileCreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: InstanceProfileCreationTime
func (t *AWS_DMS_InstanceProfile) GetAtt__InstanceProfileCreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DMS_InstanceProfile__AttributesMap.InstanceProfileCreationTime))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DMS_InstanceProfile) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__InstanceProfileArn returns a conventionally configured output for an attribute of this resource.
// Attribute: InstanceProfileArn
func (t *AWS_DMS_InstanceProfile) GetConventionalOutputAtt__InstanceProfileArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttInstanceProfileArn", t.GetAtt__InstanceProfileArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__InstanceProfileCreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: InstanceProfileCreationTime
func (t *AWS_DMS_InstanceProfile) GetConventionalOutputAtt__InstanceProfileCreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttInstanceProfileCreationTime", t.GetAtt__InstanceProfileCreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DMS_InstanceProfile) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DMS_InstanceProfile

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DMS_InstanceProfile) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
