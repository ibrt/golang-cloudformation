// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_dms

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DMS_Endpoint_MicrosoftSqlServerSettings__Type is the CloudFormation type for AWS::DMS::Endpoint.MicrosoftSqlServerSettings.
	AWS_DMS_Endpoint_MicrosoftSqlServerSettings__Type = "AWS::DMS::Endpoint.MicrosoftSqlServerSettings"
)

var (
	// AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap reports all the CloudFormation properties for AWS::DMS::Endpoint.MicrosoftSqlServerSettings.
	AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap = struct {
		BcpPacketSize               string
		ControlTablesFileGroup      string
		DatabaseName                string
		ForceLobLookup              string
		Password                    string
		Port                        string
		QuerySingleAlwaysOnNode     string
		ReadBackupOnly              string
		SafeguardPolicy             string
		SecretsManagerAccessRoleArn string
		SecretsManagerSecretId      string
		ServerName                  string
		TlogAccessMode              string
		TrimSpaceInChar             string
		UseBcpFullLoad              string
		UseThirdPartyBackupDevice   string
		Username                    string
	}{
		BcpPacketSize:               "BcpPacketSize",
		ControlTablesFileGroup:      "ControlTablesFileGroup",
		DatabaseName:                "DatabaseName",
		ForceLobLookup:              "ForceLobLookup",
		Password:                    "Password",
		Port:                        "Port",
		QuerySingleAlwaysOnNode:     "QuerySingleAlwaysOnNode",
		ReadBackupOnly:              "ReadBackupOnly",
		SafeguardPolicy:             "SafeguardPolicy",
		SecretsManagerAccessRoleArn: "SecretsManagerAccessRoleArn",
		SecretsManagerSecretId:      "SecretsManagerSecretId",
		ServerName:                  "ServerName",
		TlogAccessMode:              "TlogAccessMode",
		TrimSpaceInChar:             "TrimSpaceInChar",
		UseBcpFullLoad:              "UseBcpFullLoad",
		UseThirdPartyBackupDevice:   "UseThirdPartyBackupDevice",
		Username:                    "Username",
	}

	// AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesSlice reports all the CloudFormation properties for AWS::DMS::Endpoint.MicrosoftSqlServerSettings.
	AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesSlice = []string{
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.BcpPacketSize,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.ControlTablesFileGroup,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.DatabaseName,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.ForceLobLookup,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.Password,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.Port,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.QuerySingleAlwaysOnNode,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.ReadBackupOnly,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.SafeguardPolicy,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.SecretsManagerAccessRoleArn,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.SecretsManagerSecretId,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.ServerName,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.TlogAccessMode,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.TrimSpaceInChar,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.UseBcpFullLoad,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.UseThirdPartyBackupDevice,
		AWS_DMS_Endpoint_MicrosoftSqlServerSettings__PropertiesMap.Username,
	}
)

// AWS_DMS_Endpoint_MicrosoftSqlServerSettings is a binding for AWS::DMS::Endpoint.MicrosoftSqlServerSettings.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html
type AWS_DMS_Endpoint_MicrosoftSqlServerSettings struct {
	// BcpPacketSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-bcppacketsize
	BcpPacketSize cfz.Expression[int32] `json:"BcpPacketSize,omitempty"`

	// ControlTablesFileGroup is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-controltablesfilegroup
	ControlTablesFileGroup cfz.Expression[string] `json:"ControlTablesFileGroup,omitempty"`

	// DatabaseName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-databasename
	DatabaseName cfz.Expression[string] `json:"DatabaseName,omitempty"`

	// ForceLobLookup is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-forceloblookup
	ForceLobLookup cfz.Expression[bool] `json:"ForceLobLookup,omitempty"`

	// Password is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-password
	Password cfz.Expression[string] `json:"Password,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-port
	Port cfz.Expression[int32] `json:"Port,omitempty"`

	// QuerySingleAlwaysOnNode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-querysinglealwaysonnode
	QuerySingleAlwaysOnNode cfz.Expression[bool] `json:"QuerySingleAlwaysOnNode,omitempty"`

	// ReadBackupOnly is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-readbackuponly
	ReadBackupOnly cfz.Expression[bool] `json:"ReadBackupOnly,omitempty"`

	// SafeguardPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-safeguardpolicy
	SafeguardPolicy cfz.Expression[string] `json:"SafeguardPolicy,omitempty"`

	// SecretsManagerAccessRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-secretsmanageraccessrolearn
	SecretsManagerAccessRoleArn cfz.Expression[string] `json:"SecretsManagerAccessRoleArn,omitempty"`

	// SecretsManagerSecretId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-secretsmanagersecretid
	SecretsManagerSecretId cfz.Expression[string] `json:"SecretsManagerSecretId,omitempty"`

	// ServerName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-servername
	ServerName cfz.Expression[string] `json:"ServerName,omitempty"`

	// TlogAccessMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-tlogaccessmode
	TlogAccessMode cfz.Expression[string] `json:"TlogAccessMode,omitempty"`

	// TrimSpaceInChar is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-trimspaceinchar
	TrimSpaceInChar cfz.Expression[bool] `json:"TrimSpaceInChar,omitempty"`

	// UseBcpFullLoad is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-usebcpfullload
	UseBcpFullLoad cfz.Expression[bool] `json:"UseBcpFullLoad,omitempty"`

	// UseThirdPartyBackupDevice is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-usethirdpartybackupdevice
	UseThirdPartyBackupDevice cfz.Expression[bool] `json:"UseThirdPartyBackupDevice,omitempty"`

	// Username is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-username
	Username cfz.Expression[string] `json:"Username,omitempty"`
}

// New__AWS_DMS_Endpoint_MicrosoftSqlServerSettings initializes a new AWS_DMS_Endpoint_MicrosoftSqlServerSettings.
func New__AWS_DMS_Endpoint_MicrosoftSqlServerSettings() AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	return AWS_DMS_Endpoint_MicrosoftSqlServerSettings{}
}

// GetType returns the CloudFormation type.
func (AWS_DMS_Endpoint_MicrosoftSqlServerSettings) GetType() string {
	return AWS_DMS_Endpoint_MicrosoftSqlServerSettings__Type
}

// Set__BcpPacketSize updates property "BcpPacketSize".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__BcpPacketSize(v cfz.Expression[int32]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.BcpPacketSize = v
	return t
}

// SetV__BcpPacketSize updates property "BcpPacketSize".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__BcpPacketSize(v int32) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.BcpPacketSize = cfz.V(v)
	return t
}

// Set__ControlTablesFileGroup updates property "ControlTablesFileGroup".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__ControlTablesFileGroup(v cfz.Expression[string]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.ControlTablesFileGroup = v
	return t
}

// SetV__ControlTablesFileGroup updates property "ControlTablesFileGroup".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__ControlTablesFileGroup(v string) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.ControlTablesFileGroup = cfz.V(v)
	return t
}

// Set__DatabaseName updates property "DatabaseName".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__DatabaseName(v cfz.Expression[string]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.DatabaseName = v
	return t
}

// SetV__DatabaseName updates property "DatabaseName".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__DatabaseName(v string) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.DatabaseName = cfz.V(v)
	return t
}

// Set__ForceLobLookup updates property "ForceLobLookup".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__ForceLobLookup(v cfz.Expression[bool]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.ForceLobLookup = v
	return t
}

// SetV__ForceLobLookup updates property "ForceLobLookup".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__ForceLobLookup(v bool) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.ForceLobLookup = cfz.V(v)
	return t
}

// Set__Password updates property "Password".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__Password(v cfz.Expression[string]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.Password = v
	return t
}

// SetV__Password updates property "Password".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__Password(v string) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.Password = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__Port(v cfz.Expression[int32]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__Port(v int32) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.Port = cfz.V(v)
	return t
}

// Set__QuerySingleAlwaysOnNode updates property "QuerySingleAlwaysOnNode".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__QuerySingleAlwaysOnNode(v cfz.Expression[bool]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.QuerySingleAlwaysOnNode = v
	return t
}

// SetV__QuerySingleAlwaysOnNode updates property "QuerySingleAlwaysOnNode".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__QuerySingleAlwaysOnNode(v bool) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.QuerySingleAlwaysOnNode = cfz.V(v)
	return t
}

// Set__ReadBackupOnly updates property "ReadBackupOnly".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__ReadBackupOnly(v cfz.Expression[bool]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.ReadBackupOnly = v
	return t
}

// SetV__ReadBackupOnly updates property "ReadBackupOnly".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__ReadBackupOnly(v bool) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.ReadBackupOnly = cfz.V(v)
	return t
}

// Set__SafeguardPolicy updates property "SafeguardPolicy".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__SafeguardPolicy(v cfz.Expression[string]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.SafeguardPolicy = v
	return t
}

// SetV__SafeguardPolicy updates property "SafeguardPolicy".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__SafeguardPolicy(v string) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.SafeguardPolicy = cfz.V(v)
	return t
}

// Set__SecretsManagerAccessRoleArn updates property "SecretsManagerAccessRoleArn".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__SecretsManagerAccessRoleArn(v cfz.Expression[string]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.SecretsManagerAccessRoleArn = v
	return t
}

// SetV__SecretsManagerAccessRoleArn updates property "SecretsManagerAccessRoleArn".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__SecretsManagerAccessRoleArn(v string) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.SecretsManagerAccessRoleArn = cfz.V(v)
	return t
}

// Set__SecretsManagerSecretId updates property "SecretsManagerSecretId".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__SecretsManagerSecretId(v cfz.Expression[string]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.SecretsManagerSecretId = v
	return t
}

// SetV__SecretsManagerSecretId updates property "SecretsManagerSecretId".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__SecretsManagerSecretId(v string) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.SecretsManagerSecretId = cfz.V(v)
	return t
}

// Set__ServerName updates property "ServerName".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__ServerName(v cfz.Expression[string]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.ServerName = v
	return t
}

// SetV__ServerName updates property "ServerName".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__ServerName(v string) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.ServerName = cfz.V(v)
	return t
}

// Set__TlogAccessMode updates property "TlogAccessMode".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__TlogAccessMode(v cfz.Expression[string]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.TlogAccessMode = v
	return t
}

// SetV__TlogAccessMode updates property "TlogAccessMode".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__TlogAccessMode(v string) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.TlogAccessMode = cfz.V(v)
	return t
}

// Set__TrimSpaceInChar updates property "TrimSpaceInChar".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__TrimSpaceInChar(v cfz.Expression[bool]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.TrimSpaceInChar = v
	return t
}

// SetV__TrimSpaceInChar updates property "TrimSpaceInChar".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__TrimSpaceInChar(v bool) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.TrimSpaceInChar = cfz.V(v)
	return t
}

// Set__UseBcpFullLoad updates property "UseBcpFullLoad".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__UseBcpFullLoad(v cfz.Expression[bool]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.UseBcpFullLoad = v
	return t
}

// SetV__UseBcpFullLoad updates property "UseBcpFullLoad".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__UseBcpFullLoad(v bool) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.UseBcpFullLoad = cfz.V(v)
	return t
}

// Set__UseThirdPartyBackupDevice updates property "UseThirdPartyBackupDevice".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__UseThirdPartyBackupDevice(v cfz.Expression[bool]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.UseThirdPartyBackupDevice = v
	return t
}

// SetV__UseThirdPartyBackupDevice updates property "UseThirdPartyBackupDevice".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__UseThirdPartyBackupDevice(v bool) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.UseThirdPartyBackupDevice = cfz.V(v)
	return t
}

// Set__Username updates property "Username".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) Set__Username(v cfz.Expression[string]) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.Username = v
	return t
}

// SetV__Username updates property "Username".
func (t AWS_DMS_Endpoint_MicrosoftSqlServerSettings) SetV__Username(v string) AWS_DMS_Endpoint_MicrosoftSqlServerSettings {
	t.Username = cfz.V(v)
	return t
}
