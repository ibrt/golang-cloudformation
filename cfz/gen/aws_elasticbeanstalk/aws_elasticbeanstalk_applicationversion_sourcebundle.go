// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_elasticbeanstalk

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle__Type is the CloudFormation type for AWS::ElasticBeanstalk::ApplicationVersion.SourceBundle.
	AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle__Type = "AWS::ElasticBeanstalk::ApplicationVersion.SourceBundle"
)

var (
	// AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle__PropertiesMap reports all the CloudFormation properties for AWS::ElasticBeanstalk::ApplicationVersion.SourceBundle.
	AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle__PropertiesMap = struct {
		S3Bucket string
		S3Key    string
	}{
		S3Bucket: "S3Bucket",
		S3Key:    "S3Key",
	}

	// AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle__PropertiesSlice reports all the CloudFormation properties for AWS::ElasticBeanstalk::ApplicationVersion.SourceBundle.
	AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle__PropertiesSlice = []string{
		AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle__PropertiesMap.S3Bucket,
		AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle__PropertiesMap.S3Key,
	}
)

// AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle is a binding for AWS::ElasticBeanstalk::ApplicationVersion.SourceBundle.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticbeanstalk-applicationversion-sourcebundle.html
type AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle struct {
	// S3Bucket is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticbeanstalk-applicationversion-sourcebundle.html#cfn-elasticbeanstalk-applicationversion-sourcebundle-s3bucket
	S3Bucket cfz.Expression[string] `json:"S3Bucket,omitempty"`

	// S3Key is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticbeanstalk-applicationversion-sourcebundle.html#cfn-elasticbeanstalk-applicationversion-sourcebundle-s3key
	S3Key cfz.Expression[string] `json:"S3Key,omitempty"`
}

// New__AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle initializes a new AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle.
func New__AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle() AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle {
	return AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle{}
}

// GetType returns the CloudFormation type.
func (AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle) GetType() string {
	return AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle__Type
}

// Set__S3Bucket updates property "S3Bucket".
func (t AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle) Set__S3Bucket(v cfz.Expression[string]) AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle {
	t.S3Bucket = v
	return t
}

// SetV__S3Bucket updates property "S3Bucket".
func (t AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle) SetV__S3Bucket(v string) AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle {
	t.S3Bucket = cfz.V(v)
	return t
}

// Set__S3Key updates property "S3Key".
func (t AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle) Set__S3Key(v cfz.Expression[string]) AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle {
	t.S3Key = v
	return t
}

// SetV__S3Key updates property "S3Key".
func (t AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle) SetV__S3Key(v string) AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle {
	t.S3Key = cfz.V(v)
	return t
}
