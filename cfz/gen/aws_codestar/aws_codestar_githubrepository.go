// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_codestar

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CodeStar_GitHubRepository)(nil)
	_ cfz.Resource                   = (*AWS_CodeStar_GitHubRepository)(nil)
)

const (
	// AWS_CodeStar_GitHubRepository__Type is the CloudFormation type for AWS::CodeStar::GitHubRepository.
	AWS_CodeStar_GitHubRepository__Type = "AWS::CodeStar::GitHubRepository"
)

var (
	// AWS_CodeStar_GitHubRepository__PropertiesMap reports all the CloudFormation properties for AWS::CodeStar::GitHubRepository.
	AWS_CodeStar_GitHubRepository__PropertiesMap = struct {
		Code                  string
		ConnectionArn         string
		EnableIssues          string
		IsPrivate             string
		RepositoryAccessToken string
		RepositoryDescription string
		RepositoryName        string
		RepositoryOwner       string
	}{
		Code:                  "Code",
		ConnectionArn:         "ConnectionArn",
		EnableIssues:          "EnableIssues",
		IsPrivate:             "IsPrivate",
		RepositoryAccessToken: "RepositoryAccessToken",
		RepositoryDescription: "RepositoryDescription",
		RepositoryName:        "RepositoryName",
		RepositoryOwner:       "RepositoryOwner",
	}

	// AWS_CodeStar_GitHubRepository__PropertiesSlice reports all the CloudFormation properties for AWS::CodeStar::GitHubRepository.
	AWS_CodeStar_GitHubRepository__PropertiesSlice = []string{
		AWS_CodeStar_GitHubRepository__PropertiesMap.Code,
		AWS_CodeStar_GitHubRepository__PropertiesMap.ConnectionArn,
		AWS_CodeStar_GitHubRepository__PropertiesMap.EnableIssues,
		AWS_CodeStar_GitHubRepository__PropertiesMap.IsPrivate,
		AWS_CodeStar_GitHubRepository__PropertiesMap.RepositoryAccessToken,
		AWS_CodeStar_GitHubRepository__PropertiesMap.RepositoryDescription,
		AWS_CodeStar_GitHubRepository__PropertiesMap.RepositoryName,
		AWS_CodeStar_GitHubRepository__PropertiesMap.RepositoryOwner,
	}
)

// AWS_CodeStar_GitHubRepository is a binding for AWS::CodeStar::GitHubRepository.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html
type AWS_CodeStar_GitHubRepository struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Code is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code
	Code cfz.Expression[AWS_CodeStar_GitHubRepository_Code] `json:"Code,omitempty"`

	// ConnectionArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn
	ConnectionArn cfz.Expression[string] `json:"ConnectionArn,omitempty"`

	// EnableIssues is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues
	EnableIssues cfz.Expression[bool] `json:"EnableIssues,omitempty"`

	// IsPrivate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate
	IsPrivate cfz.Expression[bool] `json:"IsPrivate,omitempty"`

	// RepositoryAccessToken is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken
	RepositoryAccessToken cfz.Expression[string] `json:"RepositoryAccessToken,omitempty"`

	// RepositoryDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription
	RepositoryDescription cfz.Expression[string] `json:"RepositoryDescription,omitempty"`

	// RepositoryName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname
	RepositoryName cfz.Expression[string] `json:"RepositoryName,omitempty"`

	// RepositoryOwner is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner
	RepositoryOwner cfz.Expression[string] `json:"RepositoryOwner,omitempty"`
}

// New__AWS_CodeStar_GitHubRepository initializes a new *AWS_CodeStar_GitHubRepository.
func New__AWS_CodeStar_GitHubRepository(logicalName string) *AWS_CodeStar_GitHubRepository {
	return &AWS_CodeStar_GitHubRepository{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CodeStar_GitHubRepository) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CodeStar_GitHubRepository) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CodeStar_GitHubRepository) GetType() string {
	return AWS_CodeStar_GitHubRepository__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CodeStar_GitHubRepository) Set__LogicalName(v string) *AWS_CodeStar_GitHubRepository {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CodeStar_GitHubRepository) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CodeStar_GitHubRepository {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CodeStar_GitHubRepository) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CodeStar_GitHubRepository {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CodeStar_GitHubRepository) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CodeStar_GitHubRepository {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CodeStar_GitHubRepository) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CodeStar_GitHubRepository {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CodeStar_GitHubRepository) Set__RequestedOutputs(v []cfz.Output) *AWS_CodeStar_GitHubRepository {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CodeStar_GitHubRepository) Add__RequestedOutputs(v ...cfz.Output) *AWS_CodeStar_GitHubRepository {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Code updates property "Code".
func (t *AWS_CodeStar_GitHubRepository) Set__Code(v cfz.Expression[AWS_CodeStar_GitHubRepository_Code]) *AWS_CodeStar_GitHubRepository {
	t.Code = v
	return t
}

// SetV__Code updates property "Code".
func (t *AWS_CodeStar_GitHubRepository) SetV__Code(v AWS_CodeStar_GitHubRepository_Code) *AWS_CodeStar_GitHubRepository {
	t.Code = cfz.V(v)
	return t
}

// Set__ConnectionArn updates property "ConnectionArn".
func (t *AWS_CodeStar_GitHubRepository) Set__ConnectionArn(v cfz.Expression[string]) *AWS_CodeStar_GitHubRepository {
	t.ConnectionArn = v
	return t
}

// SetV__ConnectionArn updates property "ConnectionArn".
func (t *AWS_CodeStar_GitHubRepository) SetV__ConnectionArn(v string) *AWS_CodeStar_GitHubRepository {
	t.ConnectionArn = cfz.V(v)
	return t
}

// Set__EnableIssues updates property "EnableIssues".
func (t *AWS_CodeStar_GitHubRepository) Set__EnableIssues(v cfz.Expression[bool]) *AWS_CodeStar_GitHubRepository {
	t.EnableIssues = v
	return t
}

// SetV__EnableIssues updates property "EnableIssues".
func (t *AWS_CodeStar_GitHubRepository) SetV__EnableIssues(v bool) *AWS_CodeStar_GitHubRepository {
	t.EnableIssues = cfz.V(v)
	return t
}

// Set__IsPrivate updates property "IsPrivate".
func (t *AWS_CodeStar_GitHubRepository) Set__IsPrivate(v cfz.Expression[bool]) *AWS_CodeStar_GitHubRepository {
	t.IsPrivate = v
	return t
}

// SetV__IsPrivate updates property "IsPrivate".
func (t *AWS_CodeStar_GitHubRepository) SetV__IsPrivate(v bool) *AWS_CodeStar_GitHubRepository {
	t.IsPrivate = cfz.V(v)
	return t
}

// Set__RepositoryAccessToken updates property "RepositoryAccessToken".
func (t *AWS_CodeStar_GitHubRepository) Set__RepositoryAccessToken(v cfz.Expression[string]) *AWS_CodeStar_GitHubRepository {
	t.RepositoryAccessToken = v
	return t
}

// SetV__RepositoryAccessToken updates property "RepositoryAccessToken".
func (t *AWS_CodeStar_GitHubRepository) SetV__RepositoryAccessToken(v string) *AWS_CodeStar_GitHubRepository {
	t.RepositoryAccessToken = cfz.V(v)
	return t
}

// Set__RepositoryDescription updates property "RepositoryDescription".
func (t *AWS_CodeStar_GitHubRepository) Set__RepositoryDescription(v cfz.Expression[string]) *AWS_CodeStar_GitHubRepository {
	t.RepositoryDescription = v
	return t
}

// SetV__RepositoryDescription updates property "RepositoryDescription".
func (t *AWS_CodeStar_GitHubRepository) SetV__RepositoryDescription(v string) *AWS_CodeStar_GitHubRepository {
	t.RepositoryDescription = cfz.V(v)
	return t
}

// Set__RepositoryName updates property "RepositoryName".
func (t *AWS_CodeStar_GitHubRepository) Set__RepositoryName(v cfz.Expression[string]) *AWS_CodeStar_GitHubRepository {
	t.RepositoryName = v
	return t
}

// SetV__RepositoryName updates property "RepositoryName".
func (t *AWS_CodeStar_GitHubRepository) SetV__RepositoryName(v string) *AWS_CodeStar_GitHubRepository {
	t.RepositoryName = cfz.V(v)
	return t
}

// Set__RepositoryOwner updates property "RepositoryOwner".
func (t *AWS_CodeStar_GitHubRepository) Set__RepositoryOwner(v cfz.Expression[string]) *AWS_CodeStar_GitHubRepository {
	t.RepositoryOwner = v
	return t
}

// SetV__RepositoryOwner updates property "RepositoryOwner".
func (t *AWS_CodeStar_GitHubRepository) SetV__RepositoryOwner(v string) *AWS_CodeStar_GitHubRepository {
	t.RepositoryOwner = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CodeStar_GitHubRepository) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CodeStar_GitHubRepository) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CodeStar_GitHubRepository) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CodeStar_GitHubRepository

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CodeStar_GitHubRepository) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
