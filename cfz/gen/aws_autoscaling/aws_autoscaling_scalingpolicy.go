// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_autoscaling

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AutoScaling_ScalingPolicy)(nil)
	_ cfz.Resource                   = (*AWS_AutoScaling_ScalingPolicy)(nil)
)

const (
	// AWS_AutoScaling_ScalingPolicy__Type is the CloudFormation type for AWS::AutoScaling::ScalingPolicy.
	AWS_AutoScaling_ScalingPolicy__Type = "AWS::AutoScaling::ScalingPolicy"
)

var (
	// AWS_AutoScaling_ScalingPolicy__AttributesMap reports all the CloudFormation attributes for AWS::AutoScaling::ScalingPolicy.
	AWS_AutoScaling_ScalingPolicy__AttributesMap = struct {
		Arn        string
		PolicyName string
	}{
		Arn:        "Arn",
		PolicyName: "PolicyName",
	}

	// AWS_AutoScaling_ScalingPolicy__AttributesSlice reports all the CloudFormation attributes for AWS::AutoScaling::ScalingPolicy.
	AWS_AutoScaling_ScalingPolicy__AttributesSlice = []string{
		AWS_AutoScaling_ScalingPolicy__AttributesMap.Arn,
		AWS_AutoScaling_ScalingPolicy__AttributesMap.PolicyName,
	}
)

var (
	// AWS_AutoScaling_ScalingPolicy__PropertiesMap reports all the CloudFormation properties for AWS::AutoScaling::ScalingPolicy.
	AWS_AutoScaling_ScalingPolicy__PropertiesMap = struct {
		AdjustmentType                 string
		AutoScalingGroupName           string
		Cooldown                       string
		EstimatedInstanceWarmup        string
		MetricAggregationType          string
		MinAdjustmentMagnitude         string
		PolicyType                     string
		PredictiveScalingConfiguration string
		ScalingAdjustment              string
		StepAdjustments                string
		TargetTrackingConfiguration    string
	}{
		AdjustmentType:                 "AdjustmentType",
		AutoScalingGroupName:           "AutoScalingGroupName",
		Cooldown:                       "Cooldown",
		EstimatedInstanceWarmup:        "EstimatedInstanceWarmup",
		MetricAggregationType:          "MetricAggregationType",
		MinAdjustmentMagnitude:         "MinAdjustmentMagnitude",
		PolicyType:                     "PolicyType",
		PredictiveScalingConfiguration: "PredictiveScalingConfiguration",
		ScalingAdjustment:              "ScalingAdjustment",
		StepAdjustments:                "StepAdjustments",
		TargetTrackingConfiguration:    "TargetTrackingConfiguration",
	}

	// AWS_AutoScaling_ScalingPolicy__PropertiesSlice reports all the CloudFormation properties for AWS::AutoScaling::ScalingPolicy.
	AWS_AutoScaling_ScalingPolicy__PropertiesSlice = []string{
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.AdjustmentType,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.AutoScalingGroupName,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.Cooldown,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.EstimatedInstanceWarmup,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.MetricAggregationType,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.MinAdjustmentMagnitude,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.PolicyType,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.PredictiveScalingConfiguration,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.ScalingAdjustment,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.StepAdjustments,
		AWS_AutoScaling_ScalingPolicy__PropertiesMap.TargetTrackingConfiguration,
	}
)

// AWS_AutoScaling_ScalingPolicy is a binding for AWS::AutoScaling::ScalingPolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html
type AWS_AutoScaling_ScalingPolicy struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AdjustmentType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-adjustmenttype
	AdjustmentType cfz.Expression[string] `json:"AdjustmentType,omitempty"`

	// AutoScalingGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-autoscalinggroupname
	AutoScalingGroupName cfz.Expression[string] `json:"AutoScalingGroupName,omitempty"`

	// Cooldown is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-cooldown
	Cooldown cfz.Expression[string] `json:"Cooldown,omitempty"`

	// EstimatedInstanceWarmup is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-estimatedinstancewarmup
	EstimatedInstanceWarmup cfz.Expression[int32] `json:"EstimatedInstanceWarmup,omitempty"`

	// MetricAggregationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-metricaggregationtype
	MetricAggregationType cfz.Expression[string] `json:"MetricAggregationType,omitempty"`

	// MinAdjustmentMagnitude is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-minadjustmentmagnitude
	MinAdjustmentMagnitude cfz.Expression[int32] `json:"MinAdjustmentMagnitude,omitempty"`

	// PolicyType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-policytype
	PolicyType cfz.Expression[string] `json:"PolicyType,omitempty"`

	// PredictiveScalingConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-predictivescalingconfiguration
	PredictiveScalingConfiguration cfz.Expression[AWS_AutoScaling_ScalingPolicy_PredictiveScalingConfiguration] `json:"PredictiveScalingConfiguration,omitempty"`

	// ScalingAdjustment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-scalingadjustment
	ScalingAdjustment cfz.Expression[int32] `json:"ScalingAdjustment,omitempty"`

	// StepAdjustments is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-stepadjustments
	StepAdjustments cfz.ExpressionSlice[AWS_AutoScaling_ScalingPolicy_StepAdjustment] `json:"StepAdjustments,omitempty"`

	// TargetTrackingConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-scalingpolicy.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration
	TargetTrackingConfiguration cfz.Expression[AWS_AutoScaling_ScalingPolicy_TargetTrackingConfiguration] `json:"TargetTrackingConfiguration,omitempty"`
}

// New__AWS_AutoScaling_ScalingPolicy initializes a new *AWS_AutoScaling_ScalingPolicy.
func New__AWS_AutoScaling_ScalingPolicy(logicalName string) *AWS_AutoScaling_ScalingPolicy {
	return &AWS_AutoScaling_ScalingPolicy{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AutoScaling_ScalingPolicy) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AutoScaling_ScalingPolicy) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AutoScaling_ScalingPolicy) GetType() string {
	return AWS_AutoScaling_ScalingPolicy__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AutoScaling_ScalingPolicy) Set__LogicalName(v string) *AWS_AutoScaling_ScalingPolicy {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AutoScaling_ScalingPolicy) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AutoScaling_ScalingPolicy {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AutoScaling_ScalingPolicy) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AutoScaling_ScalingPolicy {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AutoScaling_ScalingPolicy) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AutoScaling_ScalingPolicy {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AutoScaling_ScalingPolicy) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AutoScaling_ScalingPolicy {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AutoScaling_ScalingPolicy) Set__RequestedOutputs(v []cfz.Output) *AWS_AutoScaling_ScalingPolicy {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AutoScaling_ScalingPolicy) Add__RequestedOutputs(v ...cfz.Output) *AWS_AutoScaling_ScalingPolicy {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AdjustmentType updates property "AdjustmentType".
func (t *AWS_AutoScaling_ScalingPolicy) Set__AdjustmentType(v cfz.Expression[string]) *AWS_AutoScaling_ScalingPolicy {
	t.AdjustmentType = v
	return t
}

// SetV__AdjustmentType updates property "AdjustmentType".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__AdjustmentType(v string) *AWS_AutoScaling_ScalingPolicy {
	t.AdjustmentType = cfz.V(v)
	return t
}

// Set__AutoScalingGroupName updates property "AutoScalingGroupName".
func (t *AWS_AutoScaling_ScalingPolicy) Set__AutoScalingGroupName(v cfz.Expression[string]) *AWS_AutoScaling_ScalingPolicy {
	t.AutoScalingGroupName = v
	return t
}

// SetV__AutoScalingGroupName updates property "AutoScalingGroupName".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__AutoScalingGroupName(v string) *AWS_AutoScaling_ScalingPolicy {
	t.AutoScalingGroupName = cfz.V(v)
	return t
}

// Set__Cooldown updates property "Cooldown".
func (t *AWS_AutoScaling_ScalingPolicy) Set__Cooldown(v cfz.Expression[string]) *AWS_AutoScaling_ScalingPolicy {
	t.Cooldown = v
	return t
}

// SetV__Cooldown updates property "Cooldown".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__Cooldown(v string) *AWS_AutoScaling_ScalingPolicy {
	t.Cooldown = cfz.V(v)
	return t
}

// Set__EstimatedInstanceWarmup updates property "EstimatedInstanceWarmup".
func (t *AWS_AutoScaling_ScalingPolicy) Set__EstimatedInstanceWarmup(v cfz.Expression[int32]) *AWS_AutoScaling_ScalingPolicy {
	t.EstimatedInstanceWarmup = v
	return t
}

// SetV__EstimatedInstanceWarmup updates property "EstimatedInstanceWarmup".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__EstimatedInstanceWarmup(v int32) *AWS_AutoScaling_ScalingPolicy {
	t.EstimatedInstanceWarmup = cfz.V(v)
	return t
}

// Set__MetricAggregationType updates property "MetricAggregationType".
func (t *AWS_AutoScaling_ScalingPolicy) Set__MetricAggregationType(v cfz.Expression[string]) *AWS_AutoScaling_ScalingPolicy {
	t.MetricAggregationType = v
	return t
}

// SetV__MetricAggregationType updates property "MetricAggregationType".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__MetricAggregationType(v string) *AWS_AutoScaling_ScalingPolicy {
	t.MetricAggregationType = cfz.V(v)
	return t
}

// Set__MinAdjustmentMagnitude updates property "MinAdjustmentMagnitude".
func (t *AWS_AutoScaling_ScalingPolicy) Set__MinAdjustmentMagnitude(v cfz.Expression[int32]) *AWS_AutoScaling_ScalingPolicy {
	t.MinAdjustmentMagnitude = v
	return t
}

// SetV__MinAdjustmentMagnitude updates property "MinAdjustmentMagnitude".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__MinAdjustmentMagnitude(v int32) *AWS_AutoScaling_ScalingPolicy {
	t.MinAdjustmentMagnitude = cfz.V(v)
	return t
}

// Set__PolicyType updates property "PolicyType".
func (t *AWS_AutoScaling_ScalingPolicy) Set__PolicyType(v cfz.Expression[string]) *AWS_AutoScaling_ScalingPolicy {
	t.PolicyType = v
	return t
}

// SetV__PolicyType updates property "PolicyType".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__PolicyType(v string) *AWS_AutoScaling_ScalingPolicy {
	t.PolicyType = cfz.V(v)
	return t
}

// Set__PredictiveScalingConfiguration updates property "PredictiveScalingConfiguration".
func (t *AWS_AutoScaling_ScalingPolicy) Set__PredictiveScalingConfiguration(v cfz.Expression[AWS_AutoScaling_ScalingPolicy_PredictiveScalingConfiguration]) *AWS_AutoScaling_ScalingPolicy {
	t.PredictiveScalingConfiguration = v
	return t
}

// SetV__PredictiveScalingConfiguration updates property "PredictiveScalingConfiguration".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__PredictiveScalingConfiguration(v AWS_AutoScaling_ScalingPolicy_PredictiveScalingConfiguration) *AWS_AutoScaling_ScalingPolicy {
	t.PredictiveScalingConfiguration = cfz.V(v)
	return t
}

// Set__ScalingAdjustment updates property "ScalingAdjustment".
func (t *AWS_AutoScaling_ScalingPolicy) Set__ScalingAdjustment(v cfz.Expression[int32]) *AWS_AutoScaling_ScalingPolicy {
	t.ScalingAdjustment = v
	return t
}

// SetV__ScalingAdjustment updates property "ScalingAdjustment".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__ScalingAdjustment(v int32) *AWS_AutoScaling_ScalingPolicy {
	t.ScalingAdjustment = cfz.V(v)
	return t
}

// Set__StepAdjustments updates property "StepAdjustments".
func (t *AWS_AutoScaling_ScalingPolicy) Set__StepAdjustments(v cfz.ExpressionSlice[AWS_AutoScaling_ScalingPolicy_StepAdjustment]) *AWS_AutoScaling_ScalingPolicy {
	t.StepAdjustments = v
	return t
}

// SetS__StepAdjustments updates property "StepAdjustments".
func (t *AWS_AutoScaling_ScalingPolicy) SetS__StepAdjustments(v ...cfz.Expression[AWS_AutoScaling_ScalingPolicy_StepAdjustment]) *AWS_AutoScaling_ScalingPolicy {
	t.StepAdjustments = cfz.S(v...)
	return t
}

// SetSV__StepAdjustments updates property "StepAdjustments".
func (t *AWS_AutoScaling_ScalingPolicy) SetSV__StepAdjustments(v ...AWS_AutoScaling_ScalingPolicy_StepAdjustment) *AWS_AutoScaling_ScalingPolicy {
	t.StepAdjustments = cfz.SV(v...)
	return t
}

// Set__TargetTrackingConfiguration updates property "TargetTrackingConfiguration".
func (t *AWS_AutoScaling_ScalingPolicy) Set__TargetTrackingConfiguration(v cfz.Expression[AWS_AutoScaling_ScalingPolicy_TargetTrackingConfiguration]) *AWS_AutoScaling_ScalingPolicy {
	t.TargetTrackingConfiguration = v
	return t
}

// SetV__TargetTrackingConfiguration updates property "TargetTrackingConfiguration".
func (t *AWS_AutoScaling_ScalingPolicy) SetV__TargetTrackingConfiguration(v AWS_AutoScaling_ScalingPolicy_TargetTrackingConfiguration) *AWS_AutoScaling_ScalingPolicy {
	t.TargetTrackingConfiguration = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AutoScaling_ScalingPolicy) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_AutoScaling_ScalingPolicy) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AutoScaling_ScalingPolicy__AttributesMap.Arn))
}

// GetAtt__PolicyName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PolicyName
func (t *AWS_AutoScaling_ScalingPolicy) GetAtt__PolicyName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AutoScaling_ScalingPolicy__AttributesMap.PolicyName))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AutoScaling_ScalingPolicy) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_AutoScaling_ScalingPolicy) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PolicyName returns a conventionally configured output for an attribute of this resource.
// Attribute: PolicyName
func (t *AWS_AutoScaling_ScalingPolicy) GetConventionalOutputAtt__PolicyName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPolicyName", t.GetAtt__PolicyName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AutoScaling_ScalingPolicy) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AutoScaling_ScalingPolicy

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AutoScaling_ScalingPolicy) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
