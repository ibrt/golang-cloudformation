// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_autoscaling

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AutoScaling_LaunchConfiguration)(nil)
	_ cfz.Resource                   = (*AWS_AutoScaling_LaunchConfiguration)(nil)
)

const (
	// AWS_AutoScaling_LaunchConfiguration__Type is the CloudFormation type for AWS::AutoScaling::LaunchConfiguration.
	AWS_AutoScaling_LaunchConfiguration__Type = "AWS::AutoScaling::LaunchConfiguration"
)

var (
	// AWS_AutoScaling_LaunchConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::AutoScaling::LaunchConfiguration.
	AWS_AutoScaling_LaunchConfiguration__PropertiesMap = struct {
		AssociatePublicIpAddress     string
		BlockDeviceMappings          string
		ClassicLinkVPCId             string
		ClassicLinkVPCSecurityGroups string
		EbsOptimized                 string
		IamInstanceProfile           string
		ImageId                      string
		InstanceId                   string
		InstanceMonitoring           string
		InstanceType                 string
		KernelId                     string
		KeyName                      string
		LaunchConfigurationName      string
		MetadataOptions              string
		PlacementTenancy             string
		RamDiskId                    string
		SecurityGroups               string
		SpotPrice                    string
		UserData                     string
	}{
		AssociatePublicIpAddress:     "AssociatePublicIpAddress",
		BlockDeviceMappings:          "BlockDeviceMappings",
		ClassicLinkVPCId:             "ClassicLinkVPCId",
		ClassicLinkVPCSecurityGroups: "ClassicLinkVPCSecurityGroups",
		EbsOptimized:                 "EbsOptimized",
		IamInstanceProfile:           "IamInstanceProfile",
		ImageId:                      "ImageId",
		InstanceId:                   "InstanceId",
		InstanceMonitoring:           "InstanceMonitoring",
		InstanceType:                 "InstanceType",
		KernelId:                     "KernelId",
		KeyName:                      "KeyName",
		LaunchConfigurationName:      "LaunchConfigurationName",
		MetadataOptions:              "MetadataOptions",
		PlacementTenancy:             "PlacementTenancy",
		RamDiskId:                    "RamDiskId",
		SecurityGroups:               "SecurityGroups",
		SpotPrice:                    "SpotPrice",
		UserData:                     "UserData",
	}

	// AWS_AutoScaling_LaunchConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::AutoScaling::LaunchConfiguration.
	AWS_AutoScaling_LaunchConfiguration__PropertiesSlice = []string{
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.AssociatePublicIpAddress,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.BlockDeviceMappings,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.ClassicLinkVPCId,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.ClassicLinkVPCSecurityGroups,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.EbsOptimized,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.IamInstanceProfile,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.ImageId,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.InstanceId,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.InstanceMonitoring,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.InstanceType,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.KernelId,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.KeyName,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.LaunchConfigurationName,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.MetadataOptions,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.PlacementTenancy,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.RamDiskId,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.SecurityGroups,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.SpotPrice,
		AWS_AutoScaling_LaunchConfiguration__PropertiesMap.UserData,
	}
)

// AWS_AutoScaling_LaunchConfiguration is a binding for AWS::AutoScaling::LaunchConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html
type AWS_AutoScaling_LaunchConfiguration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AssociatePublicIpAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-associatepublicipaddress
	AssociatePublicIpAddress cfz.Expression[bool] `json:"AssociatePublicIpAddress,omitempty"`

	// BlockDeviceMappings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-blockdevicemappings
	BlockDeviceMappings cfz.ExpressionSlice[AWS_AutoScaling_LaunchConfiguration_BlockDeviceMapping] `json:"BlockDeviceMappings,omitempty"`

	// ClassicLinkVPCId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-classiclinkvpcid
	ClassicLinkVPCId cfz.Expression[string] `json:"ClassicLinkVPCId,omitempty"`

	// ClassicLinkVPCSecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-classiclinkvpcsecuritygroups
	ClassicLinkVPCSecurityGroups cfz.ExpressionSlice[string] `json:"ClassicLinkVPCSecurityGroups,omitempty"`

	// EbsOptimized is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-ebsoptimized
	EbsOptimized cfz.Expression[bool] `json:"EbsOptimized,omitempty"`

	// IamInstanceProfile is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-iaminstanceprofile
	IamInstanceProfile cfz.Expression[string] `json:"IamInstanceProfile,omitempty"`

	// ImageId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-imageid
	ImageId cfz.Expression[string] `json:"ImageId,omitempty"`

	// InstanceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instanceid
	InstanceId cfz.Expression[string] `json:"InstanceId,omitempty"`

	// InstanceMonitoring is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instancemonitoring
	InstanceMonitoring cfz.Expression[bool] `json:"InstanceMonitoring,omitempty"`

	// InstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-instancetype
	InstanceType cfz.Expression[string] `json:"InstanceType,omitempty"`

	// KernelId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-kernelid
	KernelId cfz.Expression[string] `json:"KernelId,omitempty"`

	// KeyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-keyname
	KeyName cfz.Expression[string] `json:"KeyName,omitempty"`

	// LaunchConfigurationName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-launchconfigurationname
	LaunchConfigurationName cfz.Expression[string] `json:"LaunchConfigurationName,omitempty"`

	// MetadataOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-metadataoptions
	MetadataOptions cfz.Expression[AWS_AutoScaling_LaunchConfiguration_MetadataOptions] `json:"MetadataOptions,omitempty"`

	// PlacementTenancy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-placementtenancy
	PlacementTenancy cfz.Expression[string] `json:"PlacementTenancy,omitempty"`

	// RamDiskId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-ramdiskid
	RamDiskId cfz.Expression[string] `json:"RamDiskId,omitempty"`

	// SecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-securitygroups
	SecurityGroups cfz.ExpressionSlice[string] `json:"SecurityGroups,omitempty"`

	// SpotPrice is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-spotprice
	SpotPrice cfz.Expression[string] `json:"SpotPrice,omitempty"`

	// UserData is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-launchconfiguration.html#cfn-autoscaling-launchconfiguration-userdata
	UserData cfz.Expression[string] `json:"UserData,omitempty"`
}

// New__AWS_AutoScaling_LaunchConfiguration initializes a new *AWS_AutoScaling_LaunchConfiguration.
func New__AWS_AutoScaling_LaunchConfiguration(logicalName string) *AWS_AutoScaling_LaunchConfiguration {
	return &AWS_AutoScaling_LaunchConfiguration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AutoScaling_LaunchConfiguration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AutoScaling_LaunchConfiguration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AutoScaling_LaunchConfiguration) GetType() string {
	return AWS_AutoScaling_LaunchConfiguration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__LogicalName(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AutoScaling_LaunchConfiguration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AutoScaling_LaunchConfiguration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AutoScaling_LaunchConfiguration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AutoScaling_LaunchConfiguration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AutoScaling_LaunchConfiguration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__RequestedOutputs(v []cfz.Output) *AWS_AutoScaling_LaunchConfiguration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AutoScaling_LaunchConfiguration) Add__RequestedOutputs(v ...cfz.Output) *AWS_AutoScaling_LaunchConfiguration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AssociatePublicIpAddress updates property "AssociatePublicIpAddress".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__AssociatePublicIpAddress(v cfz.Expression[bool]) *AWS_AutoScaling_LaunchConfiguration {
	t.AssociatePublicIpAddress = v
	return t
}

// SetV__AssociatePublicIpAddress updates property "AssociatePublicIpAddress".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__AssociatePublicIpAddress(v bool) *AWS_AutoScaling_LaunchConfiguration {
	t.AssociatePublicIpAddress = cfz.V(v)
	return t
}

// Set__BlockDeviceMappings updates property "BlockDeviceMappings".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__BlockDeviceMappings(v cfz.ExpressionSlice[AWS_AutoScaling_LaunchConfiguration_BlockDeviceMapping]) *AWS_AutoScaling_LaunchConfiguration {
	t.BlockDeviceMappings = v
	return t
}

// SetS__BlockDeviceMappings updates property "BlockDeviceMappings".
func (t *AWS_AutoScaling_LaunchConfiguration) SetS__BlockDeviceMappings(v ...cfz.Expression[AWS_AutoScaling_LaunchConfiguration_BlockDeviceMapping]) *AWS_AutoScaling_LaunchConfiguration {
	t.BlockDeviceMappings = cfz.S(v...)
	return t
}

// SetSV__BlockDeviceMappings updates property "BlockDeviceMappings".
func (t *AWS_AutoScaling_LaunchConfiguration) SetSV__BlockDeviceMappings(v ...AWS_AutoScaling_LaunchConfiguration_BlockDeviceMapping) *AWS_AutoScaling_LaunchConfiguration {
	t.BlockDeviceMappings = cfz.SV(v...)
	return t
}

// Set__ClassicLinkVPCId updates property "ClassicLinkVPCId".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__ClassicLinkVPCId(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.ClassicLinkVPCId = v
	return t
}

// SetV__ClassicLinkVPCId updates property "ClassicLinkVPCId".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__ClassicLinkVPCId(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.ClassicLinkVPCId = cfz.V(v)
	return t
}

// Set__ClassicLinkVPCSecurityGroups updates property "ClassicLinkVPCSecurityGroups".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__ClassicLinkVPCSecurityGroups(v cfz.ExpressionSlice[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.ClassicLinkVPCSecurityGroups = v
	return t
}

// SetS__ClassicLinkVPCSecurityGroups updates property "ClassicLinkVPCSecurityGroups".
func (t *AWS_AutoScaling_LaunchConfiguration) SetS__ClassicLinkVPCSecurityGroups(v ...cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.ClassicLinkVPCSecurityGroups = cfz.S(v...)
	return t
}

// SetSV__ClassicLinkVPCSecurityGroups updates property "ClassicLinkVPCSecurityGroups".
func (t *AWS_AutoScaling_LaunchConfiguration) SetSV__ClassicLinkVPCSecurityGroups(v ...string) *AWS_AutoScaling_LaunchConfiguration {
	t.ClassicLinkVPCSecurityGroups = cfz.SV(v...)
	return t
}

// Set__EbsOptimized updates property "EbsOptimized".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__EbsOptimized(v cfz.Expression[bool]) *AWS_AutoScaling_LaunchConfiguration {
	t.EbsOptimized = v
	return t
}

// SetV__EbsOptimized updates property "EbsOptimized".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__EbsOptimized(v bool) *AWS_AutoScaling_LaunchConfiguration {
	t.EbsOptimized = cfz.V(v)
	return t
}

// Set__IamInstanceProfile updates property "IamInstanceProfile".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__IamInstanceProfile(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.IamInstanceProfile = v
	return t
}

// SetV__IamInstanceProfile updates property "IamInstanceProfile".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__IamInstanceProfile(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.IamInstanceProfile = cfz.V(v)
	return t
}

// Set__ImageId updates property "ImageId".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__ImageId(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.ImageId = v
	return t
}

// SetV__ImageId updates property "ImageId".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__ImageId(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.ImageId = cfz.V(v)
	return t
}

// Set__InstanceId updates property "InstanceId".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__InstanceId(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.InstanceId = v
	return t
}

// SetV__InstanceId updates property "InstanceId".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__InstanceId(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.InstanceId = cfz.V(v)
	return t
}

// Set__InstanceMonitoring updates property "InstanceMonitoring".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__InstanceMonitoring(v cfz.Expression[bool]) *AWS_AutoScaling_LaunchConfiguration {
	t.InstanceMonitoring = v
	return t
}

// SetV__InstanceMonitoring updates property "InstanceMonitoring".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__InstanceMonitoring(v bool) *AWS_AutoScaling_LaunchConfiguration {
	t.InstanceMonitoring = cfz.V(v)
	return t
}

// Set__InstanceType updates property "InstanceType".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__InstanceType(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.InstanceType = v
	return t
}

// SetV__InstanceType updates property "InstanceType".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__InstanceType(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.InstanceType = cfz.V(v)
	return t
}

// Set__KernelId updates property "KernelId".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__KernelId(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.KernelId = v
	return t
}

// SetV__KernelId updates property "KernelId".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__KernelId(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.KernelId = cfz.V(v)
	return t
}

// Set__KeyName updates property "KeyName".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__KeyName(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.KeyName = v
	return t
}

// SetV__KeyName updates property "KeyName".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__KeyName(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.KeyName = cfz.V(v)
	return t
}

// Set__LaunchConfigurationName updates property "LaunchConfigurationName".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__LaunchConfigurationName(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.LaunchConfigurationName = v
	return t
}

// SetV__LaunchConfigurationName updates property "LaunchConfigurationName".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__LaunchConfigurationName(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.LaunchConfigurationName = cfz.V(v)
	return t
}

// Set__MetadataOptions updates property "MetadataOptions".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__MetadataOptions(v cfz.Expression[AWS_AutoScaling_LaunchConfiguration_MetadataOptions]) *AWS_AutoScaling_LaunchConfiguration {
	t.MetadataOptions = v
	return t
}

// SetV__MetadataOptions updates property "MetadataOptions".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__MetadataOptions(v AWS_AutoScaling_LaunchConfiguration_MetadataOptions) *AWS_AutoScaling_LaunchConfiguration {
	t.MetadataOptions = cfz.V(v)
	return t
}

// Set__PlacementTenancy updates property "PlacementTenancy".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__PlacementTenancy(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.PlacementTenancy = v
	return t
}

// SetV__PlacementTenancy updates property "PlacementTenancy".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__PlacementTenancy(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.PlacementTenancy = cfz.V(v)
	return t
}

// Set__RamDiskId updates property "RamDiskId".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__RamDiskId(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.RamDiskId = v
	return t
}

// SetV__RamDiskId updates property "RamDiskId".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__RamDiskId(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.RamDiskId = cfz.V(v)
	return t
}

// Set__SecurityGroups updates property "SecurityGroups".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__SecurityGroups(v cfz.ExpressionSlice[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.SecurityGroups = v
	return t
}

// SetS__SecurityGroups updates property "SecurityGroups".
func (t *AWS_AutoScaling_LaunchConfiguration) SetS__SecurityGroups(v ...cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.SecurityGroups = cfz.S(v...)
	return t
}

// SetSV__SecurityGroups updates property "SecurityGroups".
func (t *AWS_AutoScaling_LaunchConfiguration) SetSV__SecurityGroups(v ...string) *AWS_AutoScaling_LaunchConfiguration {
	t.SecurityGroups = cfz.SV(v...)
	return t
}

// Set__SpotPrice updates property "SpotPrice".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__SpotPrice(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.SpotPrice = v
	return t
}

// SetV__SpotPrice updates property "SpotPrice".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__SpotPrice(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.SpotPrice = cfz.V(v)
	return t
}

// Set__UserData updates property "UserData".
func (t *AWS_AutoScaling_LaunchConfiguration) Set__UserData(v cfz.Expression[string]) *AWS_AutoScaling_LaunchConfiguration {
	t.UserData = v
	return t
}

// SetV__UserData updates property "UserData".
func (t *AWS_AutoScaling_LaunchConfiguration) SetV__UserData(v string) *AWS_AutoScaling_LaunchConfiguration {
	t.UserData = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AutoScaling_LaunchConfiguration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AutoScaling_LaunchConfiguration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AutoScaling_LaunchConfiguration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AutoScaling_LaunchConfiguration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AutoScaling_LaunchConfiguration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
