// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ecs

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_ECS_CapacityProvider_ManagedScaling__Type is the CloudFormation type for AWS::ECS::CapacityProvider.ManagedScaling.
	AWS_ECS_CapacityProvider_ManagedScaling__Type = "AWS::ECS::CapacityProvider.ManagedScaling"
)

var (
	// AWS_ECS_CapacityProvider_ManagedScaling__PropertiesMap reports all the CloudFormation properties for AWS::ECS::CapacityProvider.ManagedScaling.
	AWS_ECS_CapacityProvider_ManagedScaling__PropertiesMap = struct {
		InstanceWarmupPeriod   string
		MaximumScalingStepSize string
		MinimumScalingStepSize string
		Status                 string
		TargetCapacity         string
	}{
		InstanceWarmupPeriod:   "InstanceWarmupPeriod",
		MaximumScalingStepSize: "MaximumScalingStepSize",
		MinimumScalingStepSize: "MinimumScalingStepSize",
		Status:                 "Status",
		TargetCapacity:         "TargetCapacity",
	}

	// AWS_ECS_CapacityProvider_ManagedScaling__PropertiesSlice reports all the CloudFormation properties for AWS::ECS::CapacityProvider.ManagedScaling.
	AWS_ECS_CapacityProvider_ManagedScaling__PropertiesSlice = []string{
		AWS_ECS_CapacityProvider_ManagedScaling__PropertiesMap.InstanceWarmupPeriod,
		AWS_ECS_CapacityProvider_ManagedScaling__PropertiesMap.MaximumScalingStepSize,
		AWS_ECS_CapacityProvider_ManagedScaling__PropertiesMap.MinimumScalingStepSize,
		AWS_ECS_CapacityProvider_ManagedScaling__PropertiesMap.Status,
		AWS_ECS_CapacityProvider_ManagedScaling__PropertiesMap.TargetCapacity,
	}
)

// AWS_ECS_CapacityProvider_ManagedScaling is a binding for AWS::ECS::CapacityProvider.ManagedScaling.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html
type AWS_ECS_CapacityProvider_ManagedScaling struct {
	// InstanceWarmupPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html#cfn-ecs-capacityprovider-managedscaling-instancewarmupperiod
	InstanceWarmupPeriod cfz.Expression[int32] `json:"InstanceWarmupPeriod,omitempty"`

	// MaximumScalingStepSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html#cfn-ecs-capacityprovider-managedscaling-maximumscalingstepsize
	MaximumScalingStepSize cfz.Expression[int32] `json:"MaximumScalingStepSize,omitempty"`

	// MinimumScalingStepSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html#cfn-ecs-capacityprovider-managedscaling-minimumscalingstepsize
	MinimumScalingStepSize cfz.Expression[int32] `json:"MinimumScalingStepSize,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html#cfn-ecs-capacityprovider-managedscaling-status
	Status cfz.Expression[string] `json:"Status,omitempty"`

	// TargetCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-capacityprovider-managedscaling.html#cfn-ecs-capacityprovider-managedscaling-targetcapacity
	TargetCapacity cfz.Expression[int32] `json:"TargetCapacity,omitempty"`
}

// New__AWS_ECS_CapacityProvider_ManagedScaling initializes a new AWS_ECS_CapacityProvider_ManagedScaling.
func New__AWS_ECS_CapacityProvider_ManagedScaling() AWS_ECS_CapacityProvider_ManagedScaling {
	return AWS_ECS_CapacityProvider_ManagedScaling{}
}

// GetType returns the CloudFormation type.
func (AWS_ECS_CapacityProvider_ManagedScaling) GetType() string {
	return AWS_ECS_CapacityProvider_ManagedScaling__Type
}

// Set__InstanceWarmupPeriod updates property "InstanceWarmupPeriod".
func (t AWS_ECS_CapacityProvider_ManagedScaling) Set__InstanceWarmupPeriod(v cfz.Expression[int32]) AWS_ECS_CapacityProvider_ManagedScaling {
	t.InstanceWarmupPeriod = v
	return t
}

// SetV__InstanceWarmupPeriod updates property "InstanceWarmupPeriod".
func (t AWS_ECS_CapacityProvider_ManagedScaling) SetV__InstanceWarmupPeriod(v int32) AWS_ECS_CapacityProvider_ManagedScaling {
	t.InstanceWarmupPeriod = cfz.V(v)
	return t
}

// Set__MaximumScalingStepSize updates property "MaximumScalingStepSize".
func (t AWS_ECS_CapacityProvider_ManagedScaling) Set__MaximumScalingStepSize(v cfz.Expression[int32]) AWS_ECS_CapacityProvider_ManagedScaling {
	t.MaximumScalingStepSize = v
	return t
}

// SetV__MaximumScalingStepSize updates property "MaximumScalingStepSize".
func (t AWS_ECS_CapacityProvider_ManagedScaling) SetV__MaximumScalingStepSize(v int32) AWS_ECS_CapacityProvider_ManagedScaling {
	t.MaximumScalingStepSize = cfz.V(v)
	return t
}

// Set__MinimumScalingStepSize updates property "MinimumScalingStepSize".
func (t AWS_ECS_CapacityProvider_ManagedScaling) Set__MinimumScalingStepSize(v cfz.Expression[int32]) AWS_ECS_CapacityProvider_ManagedScaling {
	t.MinimumScalingStepSize = v
	return t
}

// SetV__MinimumScalingStepSize updates property "MinimumScalingStepSize".
func (t AWS_ECS_CapacityProvider_ManagedScaling) SetV__MinimumScalingStepSize(v int32) AWS_ECS_CapacityProvider_ManagedScaling {
	t.MinimumScalingStepSize = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t AWS_ECS_CapacityProvider_ManagedScaling) Set__Status(v cfz.Expression[string]) AWS_ECS_CapacityProvider_ManagedScaling {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t AWS_ECS_CapacityProvider_ManagedScaling) SetV__Status(v string) AWS_ECS_CapacityProvider_ManagedScaling {
	t.Status = cfz.V(v)
	return t
}

// Set__TargetCapacity updates property "TargetCapacity".
func (t AWS_ECS_CapacityProvider_ManagedScaling) Set__TargetCapacity(v cfz.Expression[int32]) AWS_ECS_CapacityProvider_ManagedScaling {
	t.TargetCapacity = v
	return t
}

// SetV__TargetCapacity updates property "TargetCapacity".
func (t AWS_ECS_CapacityProvider_ManagedScaling) SetV__TargetCapacity(v int32) AWS_ECS_CapacityProvider_ManagedScaling {
	t.TargetCapacity = cfz.V(v)
	return t
}
