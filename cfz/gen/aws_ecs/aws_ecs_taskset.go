// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ecs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ECS_TaskSet)(nil)
	_ cfz.Resource                   = (*AWS_ECS_TaskSet)(nil)
)

const (
	// AWS_ECS_TaskSet__Type is the CloudFormation type for AWS::ECS::TaskSet.
	AWS_ECS_TaskSet__Type = "AWS::ECS::TaskSet"
)

var (
	// AWS_ECS_TaskSet__AttributesMap reports all the CloudFormation attributes for AWS::ECS::TaskSet.
	AWS_ECS_TaskSet__AttributesMap = struct {
		Id string
	}{
		Id: "Id",
	}

	// AWS_ECS_TaskSet__AttributesSlice reports all the CloudFormation attributes for AWS::ECS::TaskSet.
	AWS_ECS_TaskSet__AttributesSlice = []string{
		AWS_ECS_TaskSet__AttributesMap.Id,
	}
)

var (
	// AWS_ECS_TaskSet__PropertiesMap reports all the CloudFormation properties for AWS::ECS::TaskSet.
	AWS_ECS_TaskSet__PropertiesMap = struct {
		CapacityProviderStrategy string
		Cluster                  string
		ExternalId               string
		LaunchType               string
		LoadBalancers            string
		NetworkConfiguration     string
		PlatformVersion          string
		Scale                    string
		Service                  string
		ServiceRegistries        string
		Tags                     string
		TaskDefinition           string
	}{
		CapacityProviderStrategy: "CapacityProviderStrategy",
		Cluster:                  "Cluster",
		ExternalId:               "ExternalId",
		LaunchType:               "LaunchType",
		LoadBalancers:            "LoadBalancers",
		NetworkConfiguration:     "NetworkConfiguration",
		PlatformVersion:          "PlatformVersion",
		Scale:                    "Scale",
		Service:                  "Service",
		ServiceRegistries:        "ServiceRegistries",
		Tags:                     "Tags",
		TaskDefinition:           "TaskDefinition",
	}

	// AWS_ECS_TaskSet__PropertiesSlice reports all the CloudFormation properties for AWS::ECS::TaskSet.
	AWS_ECS_TaskSet__PropertiesSlice = []string{
		AWS_ECS_TaskSet__PropertiesMap.CapacityProviderStrategy,
		AWS_ECS_TaskSet__PropertiesMap.Cluster,
		AWS_ECS_TaskSet__PropertiesMap.ExternalId,
		AWS_ECS_TaskSet__PropertiesMap.LaunchType,
		AWS_ECS_TaskSet__PropertiesMap.LoadBalancers,
		AWS_ECS_TaskSet__PropertiesMap.NetworkConfiguration,
		AWS_ECS_TaskSet__PropertiesMap.PlatformVersion,
		AWS_ECS_TaskSet__PropertiesMap.Scale,
		AWS_ECS_TaskSet__PropertiesMap.Service,
		AWS_ECS_TaskSet__PropertiesMap.ServiceRegistries,
		AWS_ECS_TaskSet__PropertiesMap.Tags,
		AWS_ECS_TaskSet__PropertiesMap.TaskDefinition,
	}
)

// AWS_ECS_TaskSet is a binding for AWS::ECS::TaskSet.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html
type AWS_ECS_TaskSet struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CapacityProviderStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-capacityproviderstrategy
	CapacityProviderStrategy cfz.ExpressionSlice[AWS_ECS_TaskSet_CapacityProviderStrategyItem] `json:"CapacityProviderStrategy,omitempty"`

	// Cluster is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-cluster
	Cluster cfz.Expression[string] `json:"Cluster,omitempty"`

	// ExternalId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-externalid
	ExternalId cfz.Expression[string] `json:"ExternalId,omitempty"`

	// LaunchType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-launchtype
	LaunchType cfz.Expression[string] `json:"LaunchType,omitempty"`

	// LoadBalancers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-loadbalancers
	LoadBalancers cfz.ExpressionSlice[AWS_ECS_TaskSet_LoadBalancer] `json:"LoadBalancers,omitempty"`

	// NetworkConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-networkconfiguration
	NetworkConfiguration cfz.Expression[AWS_ECS_TaskSet_NetworkConfiguration] `json:"NetworkConfiguration,omitempty"`

	// PlatformVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-platformversion
	PlatformVersion cfz.Expression[string] `json:"PlatformVersion,omitempty"`

	// Scale is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-scale
	Scale cfz.Expression[AWS_ECS_TaskSet_Scale] `json:"Scale,omitempty"`

	// Service is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-service
	Service cfz.Expression[string] `json:"Service,omitempty"`

	// ServiceRegistries is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-serviceregistries
	ServiceRegistries cfz.ExpressionSlice[AWS_ECS_TaskSet_ServiceRegistry] `json:"ServiceRegistries,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TaskDefinition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskset.html#cfn-ecs-taskset-taskdefinition
	TaskDefinition cfz.Expression[string] `json:"TaskDefinition,omitempty"`
}

// New__AWS_ECS_TaskSet initializes a new *AWS_ECS_TaskSet.
func New__AWS_ECS_TaskSet(logicalName string) *AWS_ECS_TaskSet {
	return &AWS_ECS_TaskSet{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ECS_TaskSet) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ECS_TaskSet) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ECS_TaskSet) GetType() string {
	return AWS_ECS_TaskSet__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ECS_TaskSet) Set__LogicalName(v string) *AWS_ECS_TaskSet {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ECS_TaskSet) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ECS_TaskSet {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ECS_TaskSet) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ECS_TaskSet {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ECS_TaskSet) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ECS_TaskSet {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ECS_TaskSet) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ECS_TaskSet {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ECS_TaskSet) Set__RequestedOutputs(v []cfz.Output) *AWS_ECS_TaskSet {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ECS_TaskSet) Add__RequestedOutputs(v ...cfz.Output) *AWS_ECS_TaskSet {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CapacityProviderStrategy updates property "CapacityProviderStrategy".
func (t *AWS_ECS_TaskSet) Set__CapacityProviderStrategy(v cfz.ExpressionSlice[AWS_ECS_TaskSet_CapacityProviderStrategyItem]) *AWS_ECS_TaskSet {
	t.CapacityProviderStrategy = v
	return t
}

// SetS__CapacityProviderStrategy updates property "CapacityProviderStrategy".
func (t *AWS_ECS_TaskSet) SetS__CapacityProviderStrategy(v ...cfz.Expression[AWS_ECS_TaskSet_CapacityProviderStrategyItem]) *AWS_ECS_TaskSet {
	t.CapacityProviderStrategy = cfz.S(v...)
	return t
}

// SetSV__CapacityProviderStrategy updates property "CapacityProviderStrategy".
func (t *AWS_ECS_TaskSet) SetSV__CapacityProviderStrategy(v ...AWS_ECS_TaskSet_CapacityProviderStrategyItem) *AWS_ECS_TaskSet {
	t.CapacityProviderStrategy = cfz.SV(v...)
	return t
}

// Set__Cluster updates property "Cluster".
func (t *AWS_ECS_TaskSet) Set__Cluster(v cfz.Expression[string]) *AWS_ECS_TaskSet {
	t.Cluster = v
	return t
}

// SetV__Cluster updates property "Cluster".
func (t *AWS_ECS_TaskSet) SetV__Cluster(v string) *AWS_ECS_TaskSet {
	t.Cluster = cfz.V(v)
	return t
}

// Set__ExternalId updates property "ExternalId".
func (t *AWS_ECS_TaskSet) Set__ExternalId(v cfz.Expression[string]) *AWS_ECS_TaskSet {
	t.ExternalId = v
	return t
}

// SetV__ExternalId updates property "ExternalId".
func (t *AWS_ECS_TaskSet) SetV__ExternalId(v string) *AWS_ECS_TaskSet {
	t.ExternalId = cfz.V(v)
	return t
}

// Set__LaunchType updates property "LaunchType".
func (t *AWS_ECS_TaskSet) Set__LaunchType(v cfz.Expression[string]) *AWS_ECS_TaskSet {
	t.LaunchType = v
	return t
}

// SetV__LaunchType updates property "LaunchType".
func (t *AWS_ECS_TaskSet) SetV__LaunchType(v string) *AWS_ECS_TaskSet {
	t.LaunchType = cfz.V(v)
	return t
}

// Set__LoadBalancers updates property "LoadBalancers".
func (t *AWS_ECS_TaskSet) Set__LoadBalancers(v cfz.ExpressionSlice[AWS_ECS_TaskSet_LoadBalancer]) *AWS_ECS_TaskSet {
	t.LoadBalancers = v
	return t
}

// SetS__LoadBalancers updates property "LoadBalancers".
func (t *AWS_ECS_TaskSet) SetS__LoadBalancers(v ...cfz.Expression[AWS_ECS_TaskSet_LoadBalancer]) *AWS_ECS_TaskSet {
	t.LoadBalancers = cfz.S(v...)
	return t
}

// SetSV__LoadBalancers updates property "LoadBalancers".
func (t *AWS_ECS_TaskSet) SetSV__LoadBalancers(v ...AWS_ECS_TaskSet_LoadBalancer) *AWS_ECS_TaskSet {
	t.LoadBalancers = cfz.SV(v...)
	return t
}

// Set__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_ECS_TaskSet) Set__NetworkConfiguration(v cfz.Expression[AWS_ECS_TaskSet_NetworkConfiguration]) *AWS_ECS_TaskSet {
	t.NetworkConfiguration = v
	return t
}

// SetV__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_ECS_TaskSet) SetV__NetworkConfiguration(v AWS_ECS_TaskSet_NetworkConfiguration) *AWS_ECS_TaskSet {
	t.NetworkConfiguration = cfz.V(v)
	return t
}

// Set__PlatformVersion updates property "PlatformVersion".
func (t *AWS_ECS_TaskSet) Set__PlatformVersion(v cfz.Expression[string]) *AWS_ECS_TaskSet {
	t.PlatformVersion = v
	return t
}

// SetV__PlatformVersion updates property "PlatformVersion".
func (t *AWS_ECS_TaskSet) SetV__PlatformVersion(v string) *AWS_ECS_TaskSet {
	t.PlatformVersion = cfz.V(v)
	return t
}

// Set__Scale updates property "Scale".
func (t *AWS_ECS_TaskSet) Set__Scale(v cfz.Expression[AWS_ECS_TaskSet_Scale]) *AWS_ECS_TaskSet {
	t.Scale = v
	return t
}

// SetV__Scale updates property "Scale".
func (t *AWS_ECS_TaskSet) SetV__Scale(v AWS_ECS_TaskSet_Scale) *AWS_ECS_TaskSet {
	t.Scale = cfz.V(v)
	return t
}

// Set__Service updates property "Service".
func (t *AWS_ECS_TaskSet) Set__Service(v cfz.Expression[string]) *AWS_ECS_TaskSet {
	t.Service = v
	return t
}

// SetV__Service updates property "Service".
func (t *AWS_ECS_TaskSet) SetV__Service(v string) *AWS_ECS_TaskSet {
	t.Service = cfz.V(v)
	return t
}

// Set__ServiceRegistries updates property "ServiceRegistries".
func (t *AWS_ECS_TaskSet) Set__ServiceRegistries(v cfz.ExpressionSlice[AWS_ECS_TaskSet_ServiceRegistry]) *AWS_ECS_TaskSet {
	t.ServiceRegistries = v
	return t
}

// SetS__ServiceRegistries updates property "ServiceRegistries".
func (t *AWS_ECS_TaskSet) SetS__ServiceRegistries(v ...cfz.Expression[AWS_ECS_TaskSet_ServiceRegistry]) *AWS_ECS_TaskSet {
	t.ServiceRegistries = cfz.S(v...)
	return t
}

// SetSV__ServiceRegistries updates property "ServiceRegistries".
func (t *AWS_ECS_TaskSet) SetSV__ServiceRegistries(v ...AWS_ECS_TaskSet_ServiceRegistry) *AWS_ECS_TaskSet {
	t.ServiceRegistries = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ECS_TaskSet) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ECS_TaskSet {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ECS_TaskSet) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ECS_TaskSet {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ECS_TaskSet) SetSV__Tags(v ...cfz.Tag) *AWS_ECS_TaskSet {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TaskDefinition updates property "TaskDefinition".
func (t *AWS_ECS_TaskSet) Set__TaskDefinition(v cfz.Expression[string]) *AWS_ECS_TaskSet {
	t.TaskDefinition = v
	return t
}

// SetV__TaskDefinition updates property "TaskDefinition".
func (t *AWS_ECS_TaskSet) SetV__TaskDefinition(v string) *AWS_ECS_TaskSet {
	t.TaskDefinition = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ECS_TaskSet) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_ECS_TaskSet) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ECS_TaskSet__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ECS_TaskSet) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_ECS_TaskSet) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ECS_TaskSet) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ECS_TaskSet

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ECS_TaskSet) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
