// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ecs

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_ECS_TaskDefinition_ContainerDefinition__Type is the CloudFormation type for AWS::ECS::TaskDefinition.ContainerDefinition.
	AWS_ECS_TaskDefinition_ContainerDefinition__Type = "AWS::ECS::TaskDefinition.ContainerDefinition"
)

var (
	// AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap reports all the CloudFormation properties for AWS::ECS::TaskDefinition.ContainerDefinition.
	AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap = struct {
		Command                string
		Cpu                    string
		CredentialSpecs        string
		DependsOn              string
		DisableNetworking      string
		DnsSearchDomains       string
		DnsServers             string
		DockerLabels           string
		DockerSecurityOptions  string
		EntryPoint             string
		Environment            string
		EnvironmentFiles       string
		Essential              string
		ExtraHosts             string
		FirelensConfiguration  string
		HealthCheck            string
		Hostname               string
		Image                  string
		Interactive            string
		Links                  string
		LinuxParameters        string
		LogConfiguration       string
		Memory                 string
		MemoryReservation      string
		MountPoints            string
		Name                   string
		PortMappings           string
		Privileged             string
		PseudoTerminal         string
		ReadonlyRootFilesystem string
		RepositoryCredentials  string
		ResourceRequirements   string
		RestartPolicy          string
		Secrets                string
		StartTimeout           string
		StopTimeout            string
		SystemControls         string
		Ulimits                string
		User                   string
		VersionConsistency     string
		VolumesFrom            string
		WorkingDirectory       string
	}{
		Command:                "Command",
		Cpu:                    "Cpu",
		CredentialSpecs:        "CredentialSpecs",
		DependsOn:              "DependsOn",
		DisableNetworking:      "DisableNetworking",
		DnsSearchDomains:       "DnsSearchDomains",
		DnsServers:             "DnsServers",
		DockerLabels:           "DockerLabels",
		DockerSecurityOptions:  "DockerSecurityOptions",
		EntryPoint:             "EntryPoint",
		Environment:            "Environment",
		EnvironmentFiles:       "EnvironmentFiles",
		Essential:              "Essential",
		ExtraHosts:             "ExtraHosts",
		FirelensConfiguration:  "FirelensConfiguration",
		HealthCheck:            "HealthCheck",
		Hostname:               "Hostname",
		Image:                  "Image",
		Interactive:            "Interactive",
		Links:                  "Links",
		LinuxParameters:        "LinuxParameters",
		LogConfiguration:       "LogConfiguration",
		Memory:                 "Memory",
		MemoryReservation:      "MemoryReservation",
		MountPoints:            "MountPoints",
		Name:                   "Name",
		PortMappings:           "PortMappings",
		Privileged:             "Privileged",
		PseudoTerminal:         "PseudoTerminal",
		ReadonlyRootFilesystem: "ReadonlyRootFilesystem",
		RepositoryCredentials:  "RepositoryCredentials",
		ResourceRequirements:   "ResourceRequirements",
		RestartPolicy:          "RestartPolicy",
		Secrets:                "Secrets",
		StartTimeout:           "StartTimeout",
		StopTimeout:            "StopTimeout",
		SystemControls:         "SystemControls",
		Ulimits:                "Ulimits",
		User:                   "User",
		VersionConsistency:     "VersionConsistency",
		VolumesFrom:            "VolumesFrom",
		WorkingDirectory:       "WorkingDirectory",
	}

	// AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesSlice reports all the CloudFormation properties for AWS::ECS::TaskDefinition.ContainerDefinition.
	AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesSlice = []string{
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Command,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Cpu,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.CredentialSpecs,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.DependsOn,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.DisableNetworking,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.DnsSearchDomains,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.DnsServers,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.DockerLabels,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.DockerSecurityOptions,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.EntryPoint,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Environment,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.EnvironmentFiles,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Essential,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.ExtraHosts,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.FirelensConfiguration,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.HealthCheck,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Hostname,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Image,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Interactive,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Links,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.LinuxParameters,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.LogConfiguration,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Memory,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.MemoryReservation,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.MountPoints,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Name,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.PortMappings,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Privileged,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.PseudoTerminal,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.ReadonlyRootFilesystem,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.RepositoryCredentials,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.ResourceRequirements,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.RestartPolicy,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Secrets,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.StartTimeout,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.StopTimeout,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.SystemControls,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.Ulimits,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.User,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.VersionConsistency,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.VolumesFrom,
		AWS_ECS_TaskDefinition_ContainerDefinition__PropertiesMap.WorkingDirectory,
	}
)

// AWS_ECS_TaskDefinition_ContainerDefinition is a binding for AWS::ECS::TaskDefinition.ContainerDefinition.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html
type AWS_ECS_TaskDefinition_ContainerDefinition struct {
	// Command is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-command
	Command cfz.ExpressionSlice[string] `json:"Command,omitempty"`

	// Cpu is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-cpu
	Cpu cfz.Expression[int32] `json:"Cpu,omitempty"`

	// CredentialSpecs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-credentialspecs
	CredentialSpecs cfz.ExpressionSlice[string] `json:"CredentialSpecs,omitempty"`

	// DependsOn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-dependson
	DependsOn cfz.ExpressionSlice[AWS_ECS_TaskDefinition_ContainerDependency] `json:"DependsOn,omitempty"`

	// DisableNetworking is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-disablenetworking
	DisableNetworking cfz.Expression[bool] `json:"DisableNetworking,omitempty"`

	// DnsSearchDomains is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-dnssearchdomains
	DnsSearchDomains cfz.ExpressionSlice[string] `json:"DnsSearchDomains,omitempty"`

	// DnsServers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-dnsservers
	DnsServers cfz.ExpressionSlice[string] `json:"DnsServers,omitempty"`

	// DockerLabels is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-dockerlabels
	DockerLabels cfz.ExpressionMap[string] `json:"DockerLabels,omitempty"`

	// DockerSecurityOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-dockersecurityoptions
	DockerSecurityOptions cfz.ExpressionSlice[string] `json:"DockerSecurityOptions,omitempty"`

	// EntryPoint is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-entrypoint
	EntryPoint cfz.ExpressionSlice[string] `json:"EntryPoint,omitempty"`

	// Environment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-environment
	Environment cfz.ExpressionSlice[AWS_ECS_TaskDefinition_KeyValuePair] `json:"Environment,omitempty"`

	// EnvironmentFiles is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-environmentfiles
	EnvironmentFiles cfz.ExpressionSlice[AWS_ECS_TaskDefinition_EnvironmentFile] `json:"EnvironmentFiles,omitempty"`

	// Essential is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-essential
	Essential cfz.Expression[bool] `json:"Essential,omitempty"`

	// ExtraHosts is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-extrahosts
	ExtraHosts cfz.ExpressionSlice[AWS_ECS_TaskDefinition_HostEntry] `json:"ExtraHosts,omitempty"`

	// FirelensConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-firelensconfiguration
	FirelensConfiguration cfz.Expression[AWS_ECS_TaskDefinition_FirelensConfiguration] `json:"FirelensConfiguration,omitempty"`

	// HealthCheck is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-healthcheck
	HealthCheck cfz.Expression[AWS_ECS_TaskDefinition_HealthCheck] `json:"HealthCheck,omitempty"`

	// Hostname is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-hostname
	Hostname cfz.Expression[string] `json:"Hostname,omitempty"`

	// Image is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-image
	Image cfz.Expression[string] `json:"Image,omitempty"`

	// Interactive is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-interactive
	Interactive cfz.Expression[bool] `json:"Interactive,omitempty"`

	// Links is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-links
	Links cfz.ExpressionSlice[string] `json:"Links,omitempty"`

	// LinuxParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-linuxparameters
	LinuxParameters cfz.Expression[AWS_ECS_TaskDefinition_LinuxParameters] `json:"LinuxParameters,omitempty"`

	// LogConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-logconfiguration
	LogConfiguration cfz.Expression[AWS_ECS_TaskDefinition_LogConfiguration] `json:"LogConfiguration,omitempty"`

	// Memory is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-memory
	Memory cfz.Expression[int32] `json:"Memory,omitempty"`

	// MemoryReservation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-memoryreservation
	MemoryReservation cfz.Expression[int32] `json:"MemoryReservation,omitempty"`

	// MountPoints is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-mountpoints
	MountPoints cfz.ExpressionSlice[AWS_ECS_TaskDefinition_MountPoint] `json:"MountPoints,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// PortMappings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-portmappings
	PortMappings cfz.ExpressionSlice[AWS_ECS_TaskDefinition_PortMapping] `json:"PortMappings,omitempty"`

	// Privileged is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-privileged
	Privileged cfz.Expression[bool] `json:"Privileged,omitempty"`

	// PseudoTerminal is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-pseudoterminal
	PseudoTerminal cfz.Expression[bool] `json:"PseudoTerminal,omitempty"`

	// ReadonlyRootFilesystem is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-readonlyrootfilesystem
	ReadonlyRootFilesystem cfz.Expression[bool] `json:"ReadonlyRootFilesystem,omitempty"`

	// RepositoryCredentials is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-repositorycredentials
	RepositoryCredentials cfz.Expression[AWS_ECS_TaskDefinition_RepositoryCredentials] `json:"RepositoryCredentials,omitempty"`

	// ResourceRequirements is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-resourcerequirements
	ResourceRequirements cfz.ExpressionSlice[AWS_ECS_TaskDefinition_ResourceRequirement] `json:"ResourceRequirements,omitempty"`

	// RestartPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-restartpolicy
	RestartPolicy cfz.Expression[AWS_ECS_TaskDefinition_RestartPolicy] `json:"RestartPolicy,omitempty"`

	// Secrets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-secrets
	Secrets cfz.ExpressionSlice[AWS_ECS_TaskDefinition_Secret] `json:"Secrets,omitempty"`

	// StartTimeout is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-starttimeout
	StartTimeout cfz.Expression[int32] `json:"StartTimeout,omitempty"`

	// StopTimeout is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-stoptimeout
	StopTimeout cfz.Expression[int32] `json:"StopTimeout,omitempty"`

	// SystemControls is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-systemcontrols
	SystemControls cfz.ExpressionSlice[AWS_ECS_TaskDefinition_SystemControl] `json:"SystemControls,omitempty"`

	// Ulimits is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-ulimits
	Ulimits cfz.ExpressionSlice[AWS_ECS_TaskDefinition_Ulimit] `json:"Ulimits,omitempty"`

	// User is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-user
	User cfz.Expression[string] `json:"User,omitempty"`

	// VersionConsistency is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-versionconsistency
	VersionConsistency cfz.Expression[string] `json:"VersionConsistency,omitempty"`

	// VolumesFrom is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-volumesfrom
	VolumesFrom cfz.ExpressionSlice[AWS_ECS_TaskDefinition_VolumeFrom] `json:"VolumesFrom,omitempty"`

	// WorkingDirectory is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-workingdirectory
	WorkingDirectory cfz.Expression[string] `json:"WorkingDirectory,omitempty"`
}

// New__AWS_ECS_TaskDefinition_ContainerDefinition initializes a new AWS_ECS_TaskDefinition_ContainerDefinition.
func New__AWS_ECS_TaskDefinition_ContainerDefinition() AWS_ECS_TaskDefinition_ContainerDefinition {
	return AWS_ECS_TaskDefinition_ContainerDefinition{}
}

// GetType returns the CloudFormation type.
func (AWS_ECS_TaskDefinition_ContainerDefinition) GetType() string {
	return AWS_ECS_TaskDefinition_ContainerDefinition__Type
}

// Set__Command updates property "Command".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Command(v cfz.ExpressionSlice[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Command = v
	return t
}

// SetS__Command updates property "Command".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__Command(v ...cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Command = cfz.S(v...)
	return t
}

// SetSV__Command updates property "Command".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__Command(v ...string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Command = cfz.SV(v...)
	return t
}

// Set__Cpu updates property "Cpu".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Cpu(v cfz.Expression[int32]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Cpu = v
	return t
}

// SetV__Cpu updates property "Cpu".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__Cpu(v int32) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Cpu = cfz.V(v)
	return t
}

// Set__CredentialSpecs updates property "CredentialSpecs".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__CredentialSpecs(v cfz.ExpressionSlice[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.CredentialSpecs = v
	return t
}

// SetS__CredentialSpecs updates property "CredentialSpecs".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__CredentialSpecs(v ...cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.CredentialSpecs = cfz.S(v...)
	return t
}

// SetSV__CredentialSpecs updates property "CredentialSpecs".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__CredentialSpecs(v ...string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.CredentialSpecs = cfz.SV(v...)
	return t
}

// Set__DependsOn updates property "DependsOn".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__DependsOn(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_ContainerDependency]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DependsOn = v
	return t
}

// SetS__DependsOn updates property "DependsOn".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__DependsOn(v ...cfz.Expression[AWS_ECS_TaskDefinition_ContainerDependency]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DependsOn = cfz.S(v...)
	return t
}

// SetSV__DependsOn updates property "DependsOn".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__DependsOn(v ...AWS_ECS_TaskDefinition_ContainerDependency) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DependsOn = cfz.SV(v...)
	return t
}

// Set__DisableNetworking updates property "DisableNetworking".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__DisableNetworking(v cfz.Expression[bool]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DisableNetworking = v
	return t
}

// SetV__DisableNetworking updates property "DisableNetworking".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__DisableNetworking(v bool) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DisableNetworking = cfz.V(v)
	return t
}

// Set__DnsSearchDomains updates property "DnsSearchDomains".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__DnsSearchDomains(v cfz.ExpressionSlice[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DnsSearchDomains = v
	return t
}

// SetS__DnsSearchDomains updates property "DnsSearchDomains".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__DnsSearchDomains(v ...cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DnsSearchDomains = cfz.S(v...)
	return t
}

// SetSV__DnsSearchDomains updates property "DnsSearchDomains".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__DnsSearchDomains(v ...string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DnsSearchDomains = cfz.SV(v...)
	return t
}

// Set__DnsServers updates property "DnsServers".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__DnsServers(v cfz.ExpressionSlice[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DnsServers = v
	return t
}

// SetS__DnsServers updates property "DnsServers".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__DnsServers(v ...cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DnsServers = cfz.S(v...)
	return t
}

// SetSV__DnsServers updates property "DnsServers".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__DnsServers(v ...string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DnsServers = cfz.SV(v...)
	return t
}

// Set__DockerLabels updates property "DockerLabels".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__DockerLabels(v cfz.ExpressionMap[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DockerLabels = v
	return t
}

// SetM__DockerLabels updates property "DockerLabels".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetM__DockerLabels(v ...map[string]cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DockerLabels = cfz.M(v...)
	return t
}

// SetMV__DockerLabels updates property "DockerLabels".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetMV__DockerLabels(v ...map[string]string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DockerLabels = cfz.MV(v...)
	return t
}

// Set__DockerSecurityOptions updates property "DockerSecurityOptions".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__DockerSecurityOptions(v cfz.ExpressionSlice[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DockerSecurityOptions = v
	return t
}

// SetS__DockerSecurityOptions updates property "DockerSecurityOptions".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__DockerSecurityOptions(v ...cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DockerSecurityOptions = cfz.S(v...)
	return t
}

// SetSV__DockerSecurityOptions updates property "DockerSecurityOptions".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__DockerSecurityOptions(v ...string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.DockerSecurityOptions = cfz.SV(v...)
	return t
}

// Set__EntryPoint updates property "EntryPoint".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__EntryPoint(v cfz.ExpressionSlice[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.EntryPoint = v
	return t
}

// SetS__EntryPoint updates property "EntryPoint".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__EntryPoint(v ...cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.EntryPoint = cfz.S(v...)
	return t
}

// SetSV__EntryPoint updates property "EntryPoint".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__EntryPoint(v ...string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.EntryPoint = cfz.SV(v...)
	return t
}

// Set__Environment updates property "Environment".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Environment(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_KeyValuePair]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Environment = v
	return t
}

// SetS__Environment updates property "Environment".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__Environment(v ...cfz.Expression[AWS_ECS_TaskDefinition_KeyValuePair]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Environment = cfz.S(v...)
	return t
}

// SetSV__Environment updates property "Environment".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__Environment(v ...AWS_ECS_TaskDefinition_KeyValuePair) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Environment = cfz.SV(v...)
	return t
}

// Set__EnvironmentFiles updates property "EnvironmentFiles".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__EnvironmentFiles(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_EnvironmentFile]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.EnvironmentFiles = v
	return t
}

// SetS__EnvironmentFiles updates property "EnvironmentFiles".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__EnvironmentFiles(v ...cfz.Expression[AWS_ECS_TaskDefinition_EnvironmentFile]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.EnvironmentFiles = cfz.S(v...)
	return t
}

// SetSV__EnvironmentFiles updates property "EnvironmentFiles".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__EnvironmentFiles(v ...AWS_ECS_TaskDefinition_EnvironmentFile) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.EnvironmentFiles = cfz.SV(v...)
	return t
}

// Set__Essential updates property "Essential".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Essential(v cfz.Expression[bool]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Essential = v
	return t
}

// SetV__Essential updates property "Essential".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__Essential(v bool) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Essential = cfz.V(v)
	return t
}

// Set__ExtraHosts updates property "ExtraHosts".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__ExtraHosts(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_HostEntry]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.ExtraHosts = v
	return t
}

// SetS__ExtraHosts updates property "ExtraHosts".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__ExtraHosts(v ...cfz.Expression[AWS_ECS_TaskDefinition_HostEntry]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.ExtraHosts = cfz.S(v...)
	return t
}

// SetSV__ExtraHosts updates property "ExtraHosts".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__ExtraHosts(v ...AWS_ECS_TaskDefinition_HostEntry) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.ExtraHosts = cfz.SV(v...)
	return t
}

// Set__FirelensConfiguration updates property "FirelensConfiguration".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__FirelensConfiguration(v cfz.Expression[AWS_ECS_TaskDefinition_FirelensConfiguration]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.FirelensConfiguration = v
	return t
}

// SetV__FirelensConfiguration updates property "FirelensConfiguration".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__FirelensConfiguration(v AWS_ECS_TaskDefinition_FirelensConfiguration) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.FirelensConfiguration = cfz.V(v)
	return t
}

// Set__HealthCheck updates property "HealthCheck".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__HealthCheck(v cfz.Expression[AWS_ECS_TaskDefinition_HealthCheck]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.HealthCheck = v
	return t
}

// SetV__HealthCheck updates property "HealthCheck".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__HealthCheck(v AWS_ECS_TaskDefinition_HealthCheck) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.HealthCheck = cfz.V(v)
	return t
}

// Set__Hostname updates property "Hostname".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Hostname(v cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Hostname = v
	return t
}

// SetV__Hostname updates property "Hostname".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__Hostname(v string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Hostname = cfz.V(v)
	return t
}

// Set__Image updates property "Image".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Image(v cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Image = v
	return t
}

// SetV__Image updates property "Image".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__Image(v string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Image = cfz.V(v)
	return t
}

// Set__Interactive updates property "Interactive".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Interactive(v cfz.Expression[bool]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Interactive = v
	return t
}

// SetV__Interactive updates property "Interactive".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__Interactive(v bool) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Interactive = cfz.V(v)
	return t
}

// Set__Links updates property "Links".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Links(v cfz.ExpressionSlice[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Links = v
	return t
}

// SetS__Links updates property "Links".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__Links(v ...cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Links = cfz.S(v...)
	return t
}

// SetSV__Links updates property "Links".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__Links(v ...string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Links = cfz.SV(v...)
	return t
}

// Set__LinuxParameters updates property "LinuxParameters".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__LinuxParameters(v cfz.Expression[AWS_ECS_TaskDefinition_LinuxParameters]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.LinuxParameters = v
	return t
}

// SetV__LinuxParameters updates property "LinuxParameters".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__LinuxParameters(v AWS_ECS_TaskDefinition_LinuxParameters) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.LinuxParameters = cfz.V(v)
	return t
}

// Set__LogConfiguration updates property "LogConfiguration".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__LogConfiguration(v cfz.Expression[AWS_ECS_TaskDefinition_LogConfiguration]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.LogConfiguration = v
	return t
}

// SetV__LogConfiguration updates property "LogConfiguration".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__LogConfiguration(v AWS_ECS_TaskDefinition_LogConfiguration) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.LogConfiguration = cfz.V(v)
	return t
}

// Set__Memory updates property "Memory".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Memory(v cfz.Expression[int32]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Memory = v
	return t
}

// SetV__Memory updates property "Memory".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__Memory(v int32) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Memory = cfz.V(v)
	return t
}

// Set__MemoryReservation updates property "MemoryReservation".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__MemoryReservation(v cfz.Expression[int32]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.MemoryReservation = v
	return t
}

// SetV__MemoryReservation updates property "MemoryReservation".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__MemoryReservation(v int32) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.MemoryReservation = cfz.V(v)
	return t
}

// Set__MountPoints updates property "MountPoints".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__MountPoints(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_MountPoint]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.MountPoints = v
	return t
}

// SetS__MountPoints updates property "MountPoints".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__MountPoints(v ...cfz.Expression[AWS_ECS_TaskDefinition_MountPoint]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.MountPoints = cfz.S(v...)
	return t
}

// SetSV__MountPoints updates property "MountPoints".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__MountPoints(v ...AWS_ECS_TaskDefinition_MountPoint) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.MountPoints = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Name(v cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__Name(v string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Name = cfz.V(v)
	return t
}

// Set__PortMappings updates property "PortMappings".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__PortMappings(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_PortMapping]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.PortMappings = v
	return t
}

// SetS__PortMappings updates property "PortMappings".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__PortMappings(v ...cfz.Expression[AWS_ECS_TaskDefinition_PortMapping]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.PortMappings = cfz.S(v...)
	return t
}

// SetSV__PortMappings updates property "PortMappings".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__PortMappings(v ...AWS_ECS_TaskDefinition_PortMapping) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.PortMappings = cfz.SV(v...)
	return t
}

// Set__Privileged updates property "Privileged".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Privileged(v cfz.Expression[bool]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Privileged = v
	return t
}

// SetV__Privileged updates property "Privileged".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__Privileged(v bool) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Privileged = cfz.V(v)
	return t
}

// Set__PseudoTerminal updates property "PseudoTerminal".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__PseudoTerminal(v cfz.Expression[bool]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.PseudoTerminal = v
	return t
}

// SetV__PseudoTerminal updates property "PseudoTerminal".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__PseudoTerminal(v bool) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.PseudoTerminal = cfz.V(v)
	return t
}

// Set__ReadonlyRootFilesystem updates property "ReadonlyRootFilesystem".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__ReadonlyRootFilesystem(v cfz.Expression[bool]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.ReadonlyRootFilesystem = v
	return t
}

// SetV__ReadonlyRootFilesystem updates property "ReadonlyRootFilesystem".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__ReadonlyRootFilesystem(v bool) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.ReadonlyRootFilesystem = cfz.V(v)
	return t
}

// Set__RepositoryCredentials updates property "RepositoryCredentials".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__RepositoryCredentials(v cfz.Expression[AWS_ECS_TaskDefinition_RepositoryCredentials]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.RepositoryCredentials = v
	return t
}

// SetV__RepositoryCredentials updates property "RepositoryCredentials".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__RepositoryCredentials(v AWS_ECS_TaskDefinition_RepositoryCredentials) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.RepositoryCredentials = cfz.V(v)
	return t
}

// Set__ResourceRequirements updates property "ResourceRequirements".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__ResourceRequirements(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_ResourceRequirement]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.ResourceRequirements = v
	return t
}

// SetS__ResourceRequirements updates property "ResourceRequirements".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__ResourceRequirements(v ...cfz.Expression[AWS_ECS_TaskDefinition_ResourceRequirement]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.ResourceRequirements = cfz.S(v...)
	return t
}

// SetSV__ResourceRequirements updates property "ResourceRequirements".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__ResourceRequirements(v ...AWS_ECS_TaskDefinition_ResourceRequirement) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.ResourceRequirements = cfz.SV(v...)
	return t
}

// Set__RestartPolicy updates property "RestartPolicy".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__RestartPolicy(v cfz.Expression[AWS_ECS_TaskDefinition_RestartPolicy]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.RestartPolicy = v
	return t
}

// SetV__RestartPolicy updates property "RestartPolicy".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__RestartPolicy(v AWS_ECS_TaskDefinition_RestartPolicy) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.RestartPolicy = cfz.V(v)
	return t
}

// Set__Secrets updates property "Secrets".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Secrets(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_Secret]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Secrets = v
	return t
}

// SetS__Secrets updates property "Secrets".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__Secrets(v ...cfz.Expression[AWS_ECS_TaskDefinition_Secret]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Secrets = cfz.S(v...)
	return t
}

// SetSV__Secrets updates property "Secrets".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__Secrets(v ...AWS_ECS_TaskDefinition_Secret) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Secrets = cfz.SV(v...)
	return t
}

// Set__StartTimeout updates property "StartTimeout".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__StartTimeout(v cfz.Expression[int32]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.StartTimeout = v
	return t
}

// SetV__StartTimeout updates property "StartTimeout".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__StartTimeout(v int32) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.StartTimeout = cfz.V(v)
	return t
}

// Set__StopTimeout updates property "StopTimeout".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__StopTimeout(v cfz.Expression[int32]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.StopTimeout = v
	return t
}

// SetV__StopTimeout updates property "StopTimeout".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__StopTimeout(v int32) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.StopTimeout = cfz.V(v)
	return t
}

// Set__SystemControls updates property "SystemControls".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__SystemControls(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_SystemControl]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.SystemControls = v
	return t
}

// SetS__SystemControls updates property "SystemControls".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__SystemControls(v ...cfz.Expression[AWS_ECS_TaskDefinition_SystemControl]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.SystemControls = cfz.S(v...)
	return t
}

// SetSV__SystemControls updates property "SystemControls".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__SystemControls(v ...AWS_ECS_TaskDefinition_SystemControl) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.SystemControls = cfz.SV(v...)
	return t
}

// Set__Ulimits updates property "Ulimits".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__Ulimits(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_Ulimit]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Ulimits = v
	return t
}

// SetS__Ulimits updates property "Ulimits".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__Ulimits(v ...cfz.Expression[AWS_ECS_TaskDefinition_Ulimit]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Ulimits = cfz.S(v...)
	return t
}

// SetSV__Ulimits updates property "Ulimits".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__Ulimits(v ...AWS_ECS_TaskDefinition_Ulimit) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.Ulimits = cfz.SV(v...)
	return t
}

// Set__User updates property "User".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__User(v cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.User = v
	return t
}

// SetV__User updates property "User".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__User(v string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.User = cfz.V(v)
	return t
}

// Set__VersionConsistency updates property "VersionConsistency".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__VersionConsistency(v cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.VersionConsistency = v
	return t
}

// SetV__VersionConsistency updates property "VersionConsistency".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__VersionConsistency(v string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.VersionConsistency = cfz.V(v)
	return t
}

// Set__VolumesFrom updates property "VolumesFrom".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__VolumesFrom(v cfz.ExpressionSlice[AWS_ECS_TaskDefinition_VolumeFrom]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.VolumesFrom = v
	return t
}

// SetS__VolumesFrom updates property "VolumesFrom".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetS__VolumesFrom(v ...cfz.Expression[AWS_ECS_TaskDefinition_VolumeFrom]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.VolumesFrom = cfz.S(v...)
	return t
}

// SetSV__VolumesFrom updates property "VolumesFrom".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetSV__VolumesFrom(v ...AWS_ECS_TaskDefinition_VolumeFrom) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.VolumesFrom = cfz.SV(v...)
	return t
}

// Set__WorkingDirectory updates property "WorkingDirectory".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) Set__WorkingDirectory(v cfz.Expression[string]) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.WorkingDirectory = v
	return t
}

// SetV__WorkingDirectory updates property "WorkingDirectory".
func (t AWS_ECS_TaskDefinition_ContainerDefinition) SetV__WorkingDirectory(v string) AWS_ECS_TaskDefinition_ContainerDefinition {
	t.WorkingDirectory = cfz.V(v)
	return t
}
