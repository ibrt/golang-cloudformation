// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ecs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ECS_Cluster)(nil)
	_ cfz.Resource                   = (*AWS_ECS_Cluster)(nil)
)

const (
	// AWS_ECS_Cluster__Type is the CloudFormation type for AWS::ECS::Cluster.
	AWS_ECS_Cluster__Type = "AWS::ECS::Cluster"
)

var (
	// AWS_ECS_Cluster__AttributesMap reports all the CloudFormation attributes for AWS::ECS::Cluster.
	AWS_ECS_Cluster__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_ECS_Cluster__AttributesSlice reports all the CloudFormation attributes for AWS::ECS::Cluster.
	AWS_ECS_Cluster__AttributesSlice = []string{
		AWS_ECS_Cluster__AttributesMap.Arn,
	}
)

var (
	// AWS_ECS_Cluster__PropertiesMap reports all the CloudFormation properties for AWS::ECS::Cluster.
	AWS_ECS_Cluster__PropertiesMap = struct {
		CapacityProviders               string
		ClusterName                     string
		ClusterSettings                 string
		Configuration                   string
		DefaultCapacityProviderStrategy string
		ServiceConnectDefaults          string
		Tags                            string
	}{
		CapacityProviders:               "CapacityProviders",
		ClusterName:                     "ClusterName",
		ClusterSettings:                 "ClusterSettings",
		Configuration:                   "Configuration",
		DefaultCapacityProviderStrategy: "DefaultCapacityProviderStrategy",
		ServiceConnectDefaults:          "ServiceConnectDefaults",
		Tags:                            "Tags",
	}

	// AWS_ECS_Cluster__PropertiesSlice reports all the CloudFormation properties for AWS::ECS::Cluster.
	AWS_ECS_Cluster__PropertiesSlice = []string{
		AWS_ECS_Cluster__PropertiesMap.CapacityProviders,
		AWS_ECS_Cluster__PropertiesMap.ClusterName,
		AWS_ECS_Cluster__PropertiesMap.ClusterSettings,
		AWS_ECS_Cluster__PropertiesMap.Configuration,
		AWS_ECS_Cluster__PropertiesMap.DefaultCapacityProviderStrategy,
		AWS_ECS_Cluster__PropertiesMap.ServiceConnectDefaults,
		AWS_ECS_Cluster__PropertiesMap.Tags,
	}
)

// AWS_ECS_Cluster is a binding for AWS::ECS::Cluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html
type AWS_ECS_Cluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CapacityProviders is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-capacityproviders
	CapacityProviders cfz.ExpressionSlice[string] `json:"CapacityProviders,omitempty"`

	// ClusterName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustername
	ClusterName cfz.Expression[string] `json:"ClusterName,omitempty"`

	// ClusterSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-clustersettings
	ClusterSettings cfz.ExpressionSlice[AWS_ECS_Cluster_ClusterSettings] `json:"ClusterSettings,omitempty"`

	// Configuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-configuration
	Configuration cfz.Expression[AWS_ECS_Cluster_ClusterConfiguration] `json:"Configuration,omitempty"`

	// DefaultCapacityProviderStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-defaultcapacityproviderstrategy
	DefaultCapacityProviderStrategy cfz.ExpressionSlice[AWS_ECS_Cluster_CapacityProviderStrategyItem] `json:"DefaultCapacityProviderStrategy,omitempty"`

	// ServiceConnectDefaults is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-serviceconnectdefaults
	ServiceConnectDefaults cfz.Expression[AWS_ECS_Cluster_ServiceConnectDefaults] `json:"ServiceConnectDefaults,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-cluster.html#cfn-ecs-cluster-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_ECS_Cluster initializes a new *AWS_ECS_Cluster.
func New__AWS_ECS_Cluster(logicalName string) *AWS_ECS_Cluster {
	return &AWS_ECS_Cluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ECS_Cluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ECS_Cluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ECS_Cluster) GetType() string {
	return AWS_ECS_Cluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ECS_Cluster) Set__LogicalName(v string) *AWS_ECS_Cluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ECS_Cluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ECS_Cluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ECS_Cluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ECS_Cluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ECS_Cluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ECS_Cluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ECS_Cluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ECS_Cluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ECS_Cluster) Set__RequestedOutputs(v []cfz.Output) *AWS_ECS_Cluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ECS_Cluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_ECS_Cluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CapacityProviders updates property "CapacityProviders".
func (t *AWS_ECS_Cluster) Set__CapacityProviders(v cfz.ExpressionSlice[string]) *AWS_ECS_Cluster {
	t.CapacityProviders = v
	return t
}

// SetS__CapacityProviders updates property "CapacityProviders".
func (t *AWS_ECS_Cluster) SetS__CapacityProviders(v ...cfz.Expression[string]) *AWS_ECS_Cluster {
	t.CapacityProviders = cfz.S(v...)
	return t
}

// SetSV__CapacityProviders updates property "CapacityProviders".
func (t *AWS_ECS_Cluster) SetSV__CapacityProviders(v ...string) *AWS_ECS_Cluster {
	t.CapacityProviders = cfz.SV(v...)
	return t
}

// Set__ClusterName updates property "ClusterName".
func (t *AWS_ECS_Cluster) Set__ClusterName(v cfz.Expression[string]) *AWS_ECS_Cluster {
	t.ClusterName = v
	return t
}

// SetV__ClusterName updates property "ClusterName".
func (t *AWS_ECS_Cluster) SetV__ClusterName(v string) *AWS_ECS_Cluster {
	t.ClusterName = cfz.V(v)
	return t
}

// Set__ClusterSettings updates property "ClusterSettings".
func (t *AWS_ECS_Cluster) Set__ClusterSettings(v cfz.ExpressionSlice[AWS_ECS_Cluster_ClusterSettings]) *AWS_ECS_Cluster {
	t.ClusterSettings = v
	return t
}

// SetS__ClusterSettings updates property "ClusterSettings".
func (t *AWS_ECS_Cluster) SetS__ClusterSettings(v ...cfz.Expression[AWS_ECS_Cluster_ClusterSettings]) *AWS_ECS_Cluster {
	t.ClusterSettings = cfz.S(v...)
	return t
}

// SetSV__ClusterSettings updates property "ClusterSettings".
func (t *AWS_ECS_Cluster) SetSV__ClusterSettings(v ...AWS_ECS_Cluster_ClusterSettings) *AWS_ECS_Cluster {
	t.ClusterSettings = cfz.SV(v...)
	return t
}

// Set__Configuration updates property "Configuration".
func (t *AWS_ECS_Cluster) Set__Configuration(v cfz.Expression[AWS_ECS_Cluster_ClusterConfiguration]) *AWS_ECS_Cluster {
	t.Configuration = v
	return t
}

// SetV__Configuration updates property "Configuration".
func (t *AWS_ECS_Cluster) SetV__Configuration(v AWS_ECS_Cluster_ClusterConfiguration) *AWS_ECS_Cluster {
	t.Configuration = cfz.V(v)
	return t
}

// Set__DefaultCapacityProviderStrategy updates property "DefaultCapacityProviderStrategy".
func (t *AWS_ECS_Cluster) Set__DefaultCapacityProviderStrategy(v cfz.ExpressionSlice[AWS_ECS_Cluster_CapacityProviderStrategyItem]) *AWS_ECS_Cluster {
	t.DefaultCapacityProviderStrategy = v
	return t
}

// SetS__DefaultCapacityProviderStrategy updates property "DefaultCapacityProviderStrategy".
func (t *AWS_ECS_Cluster) SetS__DefaultCapacityProviderStrategy(v ...cfz.Expression[AWS_ECS_Cluster_CapacityProviderStrategyItem]) *AWS_ECS_Cluster {
	t.DefaultCapacityProviderStrategy = cfz.S(v...)
	return t
}

// SetSV__DefaultCapacityProviderStrategy updates property "DefaultCapacityProviderStrategy".
func (t *AWS_ECS_Cluster) SetSV__DefaultCapacityProviderStrategy(v ...AWS_ECS_Cluster_CapacityProviderStrategyItem) *AWS_ECS_Cluster {
	t.DefaultCapacityProviderStrategy = cfz.SV(v...)
	return t
}

// Set__ServiceConnectDefaults updates property "ServiceConnectDefaults".
func (t *AWS_ECS_Cluster) Set__ServiceConnectDefaults(v cfz.Expression[AWS_ECS_Cluster_ServiceConnectDefaults]) *AWS_ECS_Cluster {
	t.ServiceConnectDefaults = v
	return t
}

// SetV__ServiceConnectDefaults updates property "ServiceConnectDefaults".
func (t *AWS_ECS_Cluster) SetV__ServiceConnectDefaults(v AWS_ECS_Cluster_ServiceConnectDefaults) *AWS_ECS_Cluster {
	t.ServiceConnectDefaults = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ECS_Cluster) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ECS_Cluster {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ECS_Cluster) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ECS_Cluster {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ECS_Cluster) SetSV__Tags(v ...cfz.Tag) *AWS_ECS_Cluster {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ECS_Cluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_ECS_Cluster) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ECS_Cluster__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ECS_Cluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_ECS_Cluster) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ECS_Cluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ECS_Cluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ECS_Cluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
