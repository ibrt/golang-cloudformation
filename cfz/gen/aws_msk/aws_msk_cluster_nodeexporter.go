// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_msk

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MSK_Cluster_NodeExporter__Type is the CloudFormation type for AWS::MSK::Cluster.NodeExporter.
	AWS_MSK_Cluster_NodeExporter__Type = "AWS::MSK::Cluster.NodeExporter"
)

var (
	// AWS_MSK_Cluster_NodeExporter__PropertiesMap reports all the CloudFormation properties for AWS::MSK::Cluster.NodeExporter.
	AWS_MSK_Cluster_NodeExporter__PropertiesMap = struct {
		EnabledInBroker string
	}{
		EnabledInBroker: "EnabledInBroker",
	}

	// AWS_MSK_Cluster_NodeExporter__PropertiesSlice reports all the CloudFormation properties for AWS::MSK::Cluster.NodeExporter.
	AWS_MSK_Cluster_NodeExporter__PropertiesSlice = []string{
		AWS_MSK_Cluster_NodeExporter__PropertiesMap.EnabledInBroker,
	}
)

// AWS_MSK_Cluster_NodeExporter is a binding for AWS::MSK::Cluster.NodeExporter.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-msk-cluster-nodeexporter.html
type AWS_MSK_Cluster_NodeExporter struct {
	// EnabledInBroker is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-msk-cluster-nodeexporter.html#cfn-msk-cluster-nodeexporter-enabledinbroker
	EnabledInBroker cfz.Expression[bool] `json:"EnabledInBroker,omitempty"`
}

// New__AWS_MSK_Cluster_NodeExporter initializes a new AWS_MSK_Cluster_NodeExporter.
func New__AWS_MSK_Cluster_NodeExporter() AWS_MSK_Cluster_NodeExporter {
	return AWS_MSK_Cluster_NodeExporter{}
}

// GetType returns the CloudFormation type.
func (AWS_MSK_Cluster_NodeExporter) GetType() string {
	return AWS_MSK_Cluster_NodeExporter__Type
}

// Set__EnabledInBroker updates property "EnabledInBroker".
func (t AWS_MSK_Cluster_NodeExporter) Set__EnabledInBroker(v cfz.Expression[bool]) AWS_MSK_Cluster_NodeExporter {
	t.EnabledInBroker = v
	return t
}

// SetV__EnabledInBroker updates property "EnabledInBroker".
func (t AWS_MSK_Cluster_NodeExporter) SetV__EnabledInBroker(v bool) AWS_MSK_Cluster_NodeExporter {
	t.EnabledInBroker = cfz.V(v)
	return t
}
