// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_msk

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_MSK_Replicator)(nil)
	_ cfz.Resource                   = (*AWS_MSK_Replicator)(nil)
)

const (
	// AWS_MSK_Replicator__Type is the CloudFormation type for AWS::MSK::Replicator.
	AWS_MSK_Replicator__Type = "AWS::MSK::Replicator"
)

var (
	// AWS_MSK_Replicator__AttributesMap reports all the CloudFormation attributes for AWS::MSK::Replicator.
	AWS_MSK_Replicator__AttributesMap = struct {
		ReplicatorArn string
	}{
		ReplicatorArn: "ReplicatorArn",
	}

	// AWS_MSK_Replicator__AttributesSlice reports all the CloudFormation attributes for AWS::MSK::Replicator.
	AWS_MSK_Replicator__AttributesSlice = []string{
		AWS_MSK_Replicator__AttributesMap.ReplicatorArn,
	}
)

var (
	// AWS_MSK_Replicator__PropertiesMap reports all the CloudFormation properties for AWS::MSK::Replicator.
	AWS_MSK_Replicator__PropertiesMap = struct {
		CurrentVersion          string
		Description             string
		KafkaClusters           string
		ReplicationInfoList     string
		ReplicatorName          string
		ServiceExecutionRoleArn string
		Tags                    string
	}{
		CurrentVersion:          "CurrentVersion",
		Description:             "Description",
		KafkaClusters:           "KafkaClusters",
		ReplicationInfoList:     "ReplicationInfoList",
		ReplicatorName:          "ReplicatorName",
		ServiceExecutionRoleArn: "ServiceExecutionRoleArn",
		Tags:                    "Tags",
	}

	// AWS_MSK_Replicator__PropertiesSlice reports all the CloudFormation properties for AWS::MSK::Replicator.
	AWS_MSK_Replicator__PropertiesSlice = []string{
		AWS_MSK_Replicator__PropertiesMap.CurrentVersion,
		AWS_MSK_Replicator__PropertiesMap.Description,
		AWS_MSK_Replicator__PropertiesMap.KafkaClusters,
		AWS_MSK_Replicator__PropertiesMap.ReplicationInfoList,
		AWS_MSK_Replicator__PropertiesMap.ReplicatorName,
		AWS_MSK_Replicator__PropertiesMap.ServiceExecutionRoleArn,
		AWS_MSK_Replicator__PropertiesMap.Tags,
	}
)

// AWS_MSK_Replicator is a binding for AWS::MSK::Replicator.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html
type AWS_MSK_Replicator struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CurrentVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-currentversion
	CurrentVersion cfz.Expression[string] `json:"CurrentVersion,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// KafkaClusters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-kafkaclusters
	KafkaClusters cfz.ExpressionSlice[AWS_MSK_Replicator_KafkaCluster] `json:"KafkaClusters,omitempty"`

	// ReplicationInfoList is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-replicationinfolist
	ReplicationInfoList cfz.ExpressionSlice[AWS_MSK_Replicator_ReplicationInfo] `json:"ReplicationInfoList,omitempty"`

	// ReplicatorName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-replicatorname
	ReplicatorName cfz.Expression[string] `json:"ReplicatorName,omitempty"`

	// ServiceExecutionRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-serviceexecutionrolearn
	ServiceExecutionRoleArn cfz.Expression[string] `json:"ServiceExecutionRoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-msk-replicator.html#cfn-msk-replicator-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_MSK_Replicator initializes a new *AWS_MSK_Replicator.
func New__AWS_MSK_Replicator(logicalName string) *AWS_MSK_Replicator {
	return &AWS_MSK_Replicator{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_MSK_Replicator) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_MSK_Replicator) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_MSK_Replicator) GetType() string {
	return AWS_MSK_Replicator__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_MSK_Replicator) Set__LogicalName(v string) *AWS_MSK_Replicator {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_MSK_Replicator) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_MSK_Replicator {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_MSK_Replicator) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_MSK_Replicator {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_MSK_Replicator) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_MSK_Replicator {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_MSK_Replicator) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_MSK_Replicator {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_MSK_Replicator) Set__RequestedOutputs(v []cfz.Output) *AWS_MSK_Replicator {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_MSK_Replicator) Add__RequestedOutputs(v ...cfz.Output) *AWS_MSK_Replicator {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CurrentVersion updates property "CurrentVersion".
func (t *AWS_MSK_Replicator) Set__CurrentVersion(v cfz.Expression[string]) *AWS_MSK_Replicator {
	t.CurrentVersion = v
	return t
}

// SetV__CurrentVersion updates property "CurrentVersion".
func (t *AWS_MSK_Replicator) SetV__CurrentVersion(v string) *AWS_MSK_Replicator {
	t.CurrentVersion = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_MSK_Replicator) Set__Description(v cfz.Expression[string]) *AWS_MSK_Replicator {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_MSK_Replicator) SetV__Description(v string) *AWS_MSK_Replicator {
	t.Description = cfz.V(v)
	return t
}

// Set__KafkaClusters updates property "KafkaClusters".
func (t *AWS_MSK_Replicator) Set__KafkaClusters(v cfz.ExpressionSlice[AWS_MSK_Replicator_KafkaCluster]) *AWS_MSK_Replicator {
	t.KafkaClusters = v
	return t
}

// SetS__KafkaClusters updates property "KafkaClusters".
func (t *AWS_MSK_Replicator) SetS__KafkaClusters(v ...cfz.Expression[AWS_MSK_Replicator_KafkaCluster]) *AWS_MSK_Replicator {
	t.KafkaClusters = cfz.S(v...)
	return t
}

// SetSV__KafkaClusters updates property "KafkaClusters".
func (t *AWS_MSK_Replicator) SetSV__KafkaClusters(v ...AWS_MSK_Replicator_KafkaCluster) *AWS_MSK_Replicator {
	t.KafkaClusters = cfz.SV(v...)
	return t
}

// Set__ReplicationInfoList updates property "ReplicationInfoList".
func (t *AWS_MSK_Replicator) Set__ReplicationInfoList(v cfz.ExpressionSlice[AWS_MSK_Replicator_ReplicationInfo]) *AWS_MSK_Replicator {
	t.ReplicationInfoList = v
	return t
}

// SetS__ReplicationInfoList updates property "ReplicationInfoList".
func (t *AWS_MSK_Replicator) SetS__ReplicationInfoList(v ...cfz.Expression[AWS_MSK_Replicator_ReplicationInfo]) *AWS_MSK_Replicator {
	t.ReplicationInfoList = cfz.S(v...)
	return t
}

// SetSV__ReplicationInfoList updates property "ReplicationInfoList".
func (t *AWS_MSK_Replicator) SetSV__ReplicationInfoList(v ...AWS_MSK_Replicator_ReplicationInfo) *AWS_MSK_Replicator {
	t.ReplicationInfoList = cfz.SV(v...)
	return t
}

// Set__ReplicatorName updates property "ReplicatorName".
func (t *AWS_MSK_Replicator) Set__ReplicatorName(v cfz.Expression[string]) *AWS_MSK_Replicator {
	t.ReplicatorName = v
	return t
}

// SetV__ReplicatorName updates property "ReplicatorName".
func (t *AWS_MSK_Replicator) SetV__ReplicatorName(v string) *AWS_MSK_Replicator {
	t.ReplicatorName = cfz.V(v)
	return t
}

// Set__ServiceExecutionRoleArn updates property "ServiceExecutionRoleArn".
func (t *AWS_MSK_Replicator) Set__ServiceExecutionRoleArn(v cfz.Expression[string]) *AWS_MSK_Replicator {
	t.ServiceExecutionRoleArn = v
	return t
}

// SetV__ServiceExecutionRoleArn updates property "ServiceExecutionRoleArn".
func (t *AWS_MSK_Replicator) SetV__ServiceExecutionRoleArn(v string) *AWS_MSK_Replicator {
	t.ServiceExecutionRoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_MSK_Replicator) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_MSK_Replicator {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_MSK_Replicator) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_MSK_Replicator {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_MSK_Replicator) SetSV__Tags(v ...cfz.Tag) *AWS_MSK_Replicator {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_MSK_Replicator) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ReplicatorArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ReplicatorArn
func (t *AWS_MSK_Replicator) GetAtt__ReplicatorArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MSK_Replicator__AttributesMap.ReplicatorArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_MSK_Replicator) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ReplicatorArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ReplicatorArn
func (t *AWS_MSK_Replicator) GetConventionalOutputAtt__ReplicatorArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttReplicatorArn", t.GetAtt__ReplicatorArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_MSK_Replicator) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_MSK_Replicator

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_MSK_Replicator) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
