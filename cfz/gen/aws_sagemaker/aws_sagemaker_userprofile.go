// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_UserProfile)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_UserProfile)(nil)
)

const (
	// AWS_SageMaker_UserProfile__Type is the CloudFormation type for AWS::SageMaker::UserProfile.
	AWS_SageMaker_UserProfile__Type = "AWS::SageMaker::UserProfile"
)

var (
	// AWS_SageMaker_UserProfile__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::UserProfile.
	AWS_SageMaker_UserProfile__AttributesMap = struct {
		UserProfileArn string
	}{
		UserProfileArn: "UserProfileArn",
	}

	// AWS_SageMaker_UserProfile__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::UserProfile.
	AWS_SageMaker_UserProfile__AttributesSlice = []string{
		AWS_SageMaker_UserProfile__AttributesMap.UserProfileArn,
	}
)

var (
	// AWS_SageMaker_UserProfile__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::UserProfile.
	AWS_SageMaker_UserProfile__PropertiesMap = struct {
		DomainId                   string
		SingleSignOnUserIdentifier string
		SingleSignOnUserValue      string
		Tags                       string
		UserProfileName            string
		UserSettings               string
	}{
		DomainId:                   "DomainId",
		SingleSignOnUserIdentifier: "SingleSignOnUserIdentifier",
		SingleSignOnUserValue:      "SingleSignOnUserValue",
		Tags:                       "Tags",
		UserProfileName:            "UserProfileName",
		UserSettings:               "UserSettings",
	}

	// AWS_SageMaker_UserProfile__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::UserProfile.
	AWS_SageMaker_UserProfile__PropertiesSlice = []string{
		AWS_SageMaker_UserProfile__PropertiesMap.DomainId,
		AWS_SageMaker_UserProfile__PropertiesMap.SingleSignOnUserIdentifier,
		AWS_SageMaker_UserProfile__PropertiesMap.SingleSignOnUserValue,
		AWS_SageMaker_UserProfile__PropertiesMap.Tags,
		AWS_SageMaker_UserProfile__PropertiesMap.UserProfileName,
		AWS_SageMaker_UserProfile__PropertiesMap.UserSettings,
	}
)

// AWS_SageMaker_UserProfile is a binding for AWS::SageMaker::UserProfile.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html
type AWS_SageMaker_UserProfile struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DomainId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-domainid
	DomainId cfz.Expression[string] `json:"DomainId,omitempty"`

	// SingleSignOnUserIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-singlesignonuseridentifier
	SingleSignOnUserIdentifier cfz.Expression[string] `json:"SingleSignOnUserIdentifier,omitempty"`

	// SingleSignOnUserValue is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-singlesignonuservalue
	SingleSignOnUserValue cfz.Expression[string] `json:"SingleSignOnUserValue,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UserProfileName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-userprofilename
	UserProfileName cfz.Expression[string] `json:"UserProfileName,omitempty"`

	// UserSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-userprofile.html#cfn-sagemaker-userprofile-usersettings
	UserSettings cfz.Expression[AWS_SageMaker_UserProfile_UserSettings] `json:"UserSettings,omitempty"`
}

// New__AWS_SageMaker_UserProfile initializes a new *AWS_SageMaker_UserProfile.
func New__AWS_SageMaker_UserProfile(logicalName string) *AWS_SageMaker_UserProfile {
	return &AWS_SageMaker_UserProfile{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_UserProfile) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_UserProfile) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_UserProfile) GetType() string {
	return AWS_SageMaker_UserProfile__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_UserProfile) Set__LogicalName(v string) *AWS_SageMaker_UserProfile {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_UserProfile) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_UserProfile {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_UserProfile) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_UserProfile {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_UserProfile) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_UserProfile {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_UserProfile) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_UserProfile {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_UserProfile) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_UserProfile {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_UserProfile) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_UserProfile {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DomainId updates property "DomainId".
func (t *AWS_SageMaker_UserProfile) Set__DomainId(v cfz.Expression[string]) *AWS_SageMaker_UserProfile {
	t.DomainId = v
	return t
}

// SetV__DomainId updates property "DomainId".
func (t *AWS_SageMaker_UserProfile) SetV__DomainId(v string) *AWS_SageMaker_UserProfile {
	t.DomainId = cfz.V(v)
	return t
}

// Set__SingleSignOnUserIdentifier updates property "SingleSignOnUserIdentifier".
func (t *AWS_SageMaker_UserProfile) Set__SingleSignOnUserIdentifier(v cfz.Expression[string]) *AWS_SageMaker_UserProfile {
	t.SingleSignOnUserIdentifier = v
	return t
}

// SetV__SingleSignOnUserIdentifier updates property "SingleSignOnUserIdentifier".
func (t *AWS_SageMaker_UserProfile) SetV__SingleSignOnUserIdentifier(v string) *AWS_SageMaker_UserProfile {
	t.SingleSignOnUserIdentifier = cfz.V(v)
	return t
}

// Set__SingleSignOnUserValue updates property "SingleSignOnUserValue".
func (t *AWS_SageMaker_UserProfile) Set__SingleSignOnUserValue(v cfz.Expression[string]) *AWS_SageMaker_UserProfile {
	t.SingleSignOnUserValue = v
	return t
}

// SetV__SingleSignOnUserValue updates property "SingleSignOnUserValue".
func (t *AWS_SageMaker_UserProfile) SetV__SingleSignOnUserValue(v string) *AWS_SageMaker_UserProfile {
	t.SingleSignOnUserValue = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_UserProfile) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_UserProfile {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_UserProfile) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_UserProfile {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_UserProfile) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_UserProfile {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UserProfileName updates property "UserProfileName".
func (t *AWS_SageMaker_UserProfile) Set__UserProfileName(v cfz.Expression[string]) *AWS_SageMaker_UserProfile {
	t.UserProfileName = v
	return t
}

// SetV__UserProfileName updates property "UserProfileName".
func (t *AWS_SageMaker_UserProfile) SetV__UserProfileName(v string) *AWS_SageMaker_UserProfile {
	t.UserProfileName = cfz.V(v)
	return t
}

// Set__UserSettings updates property "UserSettings".
func (t *AWS_SageMaker_UserProfile) Set__UserSettings(v cfz.Expression[AWS_SageMaker_UserProfile_UserSettings]) *AWS_SageMaker_UserProfile {
	t.UserSettings = v
	return t
}

// SetV__UserSettings updates property "UserSettings".
func (t *AWS_SageMaker_UserProfile) SetV__UserSettings(v AWS_SageMaker_UserProfile_UserSettings) *AWS_SageMaker_UserProfile {
	t.UserSettings = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_UserProfile) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__UserProfileArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UserProfileArn
func (t *AWS_SageMaker_UserProfile) GetAtt__UserProfileArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_UserProfile__AttributesMap.UserProfileArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_UserProfile) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UserProfileArn returns a conventionally configured output for an attribute of this resource.
// Attribute: UserProfileArn
func (t *AWS_SageMaker_UserProfile) GetConventionalOutputAtt__UserProfileArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUserProfileArn", t.GetAtt__UserProfileArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_UserProfile) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_UserProfile

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_UserProfile) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
