// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_App)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_App)(nil)
)

const (
	// AWS_SageMaker_App__Type is the CloudFormation type for AWS::SageMaker::App.
	AWS_SageMaker_App__Type = "AWS::SageMaker::App"
)

var (
	// AWS_SageMaker_App__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::App.
	AWS_SageMaker_App__AttributesMap = struct {
		AppArn string
	}{
		AppArn: "AppArn",
	}

	// AWS_SageMaker_App__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::App.
	AWS_SageMaker_App__AttributesSlice = []string{
		AWS_SageMaker_App__AttributesMap.AppArn,
	}
)

var (
	// AWS_SageMaker_App__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::App.
	AWS_SageMaker_App__PropertiesMap = struct {
		AppName         string
		AppType         string
		DomainId        string
		ResourceSpec    string
		Tags            string
		UserProfileName string
	}{
		AppName:         "AppName",
		AppType:         "AppType",
		DomainId:        "DomainId",
		ResourceSpec:    "ResourceSpec",
		Tags:            "Tags",
		UserProfileName: "UserProfileName",
	}

	// AWS_SageMaker_App__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::App.
	AWS_SageMaker_App__PropertiesSlice = []string{
		AWS_SageMaker_App__PropertiesMap.AppName,
		AWS_SageMaker_App__PropertiesMap.AppType,
		AWS_SageMaker_App__PropertiesMap.DomainId,
		AWS_SageMaker_App__PropertiesMap.ResourceSpec,
		AWS_SageMaker_App__PropertiesMap.Tags,
		AWS_SageMaker_App__PropertiesMap.UserProfileName,
	}
)

// AWS_SageMaker_App is a binding for AWS::SageMaker::App.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html
type AWS_SageMaker_App struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AppName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-appname
	AppName cfz.Expression[string] `json:"AppName,omitempty"`

	// AppType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-apptype
	AppType cfz.Expression[string] `json:"AppType,omitempty"`

	// DomainId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-domainid
	DomainId cfz.Expression[string] `json:"DomainId,omitempty"`

	// ResourceSpec is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-resourcespec
	ResourceSpec cfz.Expression[AWS_SageMaker_App_ResourceSpec] `json:"ResourceSpec,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UserProfileName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-app.html#cfn-sagemaker-app-userprofilename
	UserProfileName cfz.Expression[string] `json:"UserProfileName,omitempty"`
}

// New__AWS_SageMaker_App initializes a new *AWS_SageMaker_App.
func New__AWS_SageMaker_App(logicalName string) *AWS_SageMaker_App {
	return &AWS_SageMaker_App{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_App) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_App) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_App) GetType() string {
	return AWS_SageMaker_App__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_App) Set__LogicalName(v string) *AWS_SageMaker_App {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_App) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_App {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_App) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_App {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_App) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_App {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_App) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_App {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_App) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_App {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_App) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_App {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AppName updates property "AppName".
func (t *AWS_SageMaker_App) Set__AppName(v cfz.Expression[string]) *AWS_SageMaker_App {
	t.AppName = v
	return t
}

// SetV__AppName updates property "AppName".
func (t *AWS_SageMaker_App) SetV__AppName(v string) *AWS_SageMaker_App {
	t.AppName = cfz.V(v)
	return t
}

// Set__AppType updates property "AppType".
func (t *AWS_SageMaker_App) Set__AppType(v cfz.Expression[string]) *AWS_SageMaker_App {
	t.AppType = v
	return t
}

// SetV__AppType updates property "AppType".
func (t *AWS_SageMaker_App) SetV__AppType(v string) *AWS_SageMaker_App {
	t.AppType = cfz.V(v)
	return t
}

// Set__DomainId updates property "DomainId".
func (t *AWS_SageMaker_App) Set__DomainId(v cfz.Expression[string]) *AWS_SageMaker_App {
	t.DomainId = v
	return t
}

// SetV__DomainId updates property "DomainId".
func (t *AWS_SageMaker_App) SetV__DomainId(v string) *AWS_SageMaker_App {
	t.DomainId = cfz.V(v)
	return t
}

// Set__ResourceSpec updates property "ResourceSpec".
func (t *AWS_SageMaker_App) Set__ResourceSpec(v cfz.Expression[AWS_SageMaker_App_ResourceSpec]) *AWS_SageMaker_App {
	t.ResourceSpec = v
	return t
}

// SetV__ResourceSpec updates property "ResourceSpec".
func (t *AWS_SageMaker_App) SetV__ResourceSpec(v AWS_SageMaker_App_ResourceSpec) *AWS_SageMaker_App {
	t.ResourceSpec = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_App) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_App {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_App) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_App {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_App) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_App {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UserProfileName updates property "UserProfileName".
func (t *AWS_SageMaker_App) Set__UserProfileName(v cfz.Expression[string]) *AWS_SageMaker_App {
	t.UserProfileName = v
	return t
}

// SetV__UserProfileName updates property "UserProfileName".
func (t *AWS_SageMaker_App) SetV__UserProfileName(v string) *AWS_SageMaker_App {
	t.UserProfileName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_App) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AppArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AppArn
func (t *AWS_SageMaker_App) GetAtt__AppArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_App__AttributesMap.AppArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_App) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AppArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AppArn
func (t *AWS_SageMaker_App) GetConventionalOutputAtt__AppArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAppArn", t.GetAtt__AppArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_App) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_App

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_App) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
