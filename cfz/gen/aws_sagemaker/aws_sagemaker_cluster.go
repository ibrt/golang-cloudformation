// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_Cluster)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_Cluster)(nil)
)

const (
	// AWS_SageMaker_Cluster__Type is the CloudFormation type for AWS::SageMaker::Cluster.
	AWS_SageMaker_Cluster__Type = "AWS::SageMaker::Cluster"
)

var (
	// AWS_SageMaker_Cluster__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::Cluster.
	AWS_SageMaker_Cluster__AttributesMap = struct {
		ClusterArn     string
		ClusterStatus  string
		CreationTime   string
		FailureMessage string
	}{
		ClusterArn:     "ClusterArn",
		ClusterStatus:  "ClusterStatus",
		CreationTime:   "CreationTime",
		FailureMessage: "FailureMessage",
	}

	// AWS_SageMaker_Cluster__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::Cluster.
	AWS_SageMaker_Cluster__AttributesSlice = []string{
		AWS_SageMaker_Cluster__AttributesMap.ClusterArn,
		AWS_SageMaker_Cluster__AttributesMap.ClusterStatus,
		AWS_SageMaker_Cluster__AttributesMap.CreationTime,
		AWS_SageMaker_Cluster__AttributesMap.FailureMessage,
	}
)

var (
	// AWS_SageMaker_Cluster__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::Cluster.
	AWS_SageMaker_Cluster__PropertiesMap = struct {
		ClusterName    string
		InstanceGroups string
		NodeRecovery   string
		Orchestrator   string
		Tags           string
		VpcConfig      string
	}{
		ClusterName:    "ClusterName",
		InstanceGroups: "InstanceGroups",
		NodeRecovery:   "NodeRecovery",
		Orchestrator:   "Orchestrator",
		Tags:           "Tags",
		VpcConfig:      "VpcConfig",
	}

	// AWS_SageMaker_Cluster__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::Cluster.
	AWS_SageMaker_Cluster__PropertiesSlice = []string{
		AWS_SageMaker_Cluster__PropertiesMap.ClusterName,
		AWS_SageMaker_Cluster__PropertiesMap.InstanceGroups,
		AWS_SageMaker_Cluster__PropertiesMap.NodeRecovery,
		AWS_SageMaker_Cluster__PropertiesMap.Orchestrator,
		AWS_SageMaker_Cluster__PropertiesMap.Tags,
		AWS_SageMaker_Cluster__PropertiesMap.VpcConfig,
	}
)

// AWS_SageMaker_Cluster is a binding for AWS::SageMaker::Cluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html
type AWS_SageMaker_Cluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ClusterName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-clustername
	ClusterName cfz.Expression[string] `json:"ClusterName,omitempty"`

	// InstanceGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-instancegroups
	InstanceGroups cfz.ExpressionSlice[AWS_SageMaker_Cluster_ClusterInstanceGroup] `json:"InstanceGroups,omitempty"`

	// NodeRecovery is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-noderecovery
	NodeRecovery cfz.Expression[string] `json:"NodeRecovery,omitempty"`

	// Orchestrator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-orchestrator
	Orchestrator cfz.Expression[AWS_SageMaker_Cluster_Orchestrator] `json:"Orchestrator,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-cluster.html#cfn-sagemaker-cluster-vpcconfig
	VpcConfig cfz.Expression[AWS_SageMaker_Cluster_VpcConfig] `json:"VpcConfig,omitempty"`
}

// New__AWS_SageMaker_Cluster initializes a new *AWS_SageMaker_Cluster.
func New__AWS_SageMaker_Cluster(logicalName string) *AWS_SageMaker_Cluster {
	return &AWS_SageMaker_Cluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_Cluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_Cluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_Cluster) GetType() string {
	return AWS_SageMaker_Cluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_Cluster) Set__LogicalName(v string) *AWS_SageMaker_Cluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_Cluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_Cluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_Cluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_Cluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_Cluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_Cluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_Cluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_Cluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_Cluster) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_Cluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_Cluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_Cluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ClusterName updates property "ClusterName".
func (t *AWS_SageMaker_Cluster) Set__ClusterName(v cfz.Expression[string]) *AWS_SageMaker_Cluster {
	t.ClusterName = v
	return t
}

// SetV__ClusterName updates property "ClusterName".
func (t *AWS_SageMaker_Cluster) SetV__ClusterName(v string) *AWS_SageMaker_Cluster {
	t.ClusterName = cfz.V(v)
	return t
}

// Set__InstanceGroups updates property "InstanceGroups".
func (t *AWS_SageMaker_Cluster) Set__InstanceGroups(v cfz.ExpressionSlice[AWS_SageMaker_Cluster_ClusterInstanceGroup]) *AWS_SageMaker_Cluster {
	t.InstanceGroups = v
	return t
}

// SetS__InstanceGroups updates property "InstanceGroups".
func (t *AWS_SageMaker_Cluster) SetS__InstanceGroups(v ...cfz.Expression[AWS_SageMaker_Cluster_ClusterInstanceGroup]) *AWS_SageMaker_Cluster {
	t.InstanceGroups = cfz.S(v...)
	return t
}

// SetSV__InstanceGroups updates property "InstanceGroups".
func (t *AWS_SageMaker_Cluster) SetSV__InstanceGroups(v ...AWS_SageMaker_Cluster_ClusterInstanceGroup) *AWS_SageMaker_Cluster {
	t.InstanceGroups = cfz.SV(v...)
	return t
}

// Set__NodeRecovery updates property "NodeRecovery".
func (t *AWS_SageMaker_Cluster) Set__NodeRecovery(v cfz.Expression[string]) *AWS_SageMaker_Cluster {
	t.NodeRecovery = v
	return t
}

// SetV__NodeRecovery updates property "NodeRecovery".
func (t *AWS_SageMaker_Cluster) SetV__NodeRecovery(v string) *AWS_SageMaker_Cluster {
	t.NodeRecovery = cfz.V(v)
	return t
}

// Set__Orchestrator updates property "Orchestrator".
func (t *AWS_SageMaker_Cluster) Set__Orchestrator(v cfz.Expression[AWS_SageMaker_Cluster_Orchestrator]) *AWS_SageMaker_Cluster {
	t.Orchestrator = v
	return t
}

// SetV__Orchestrator updates property "Orchestrator".
func (t *AWS_SageMaker_Cluster) SetV__Orchestrator(v AWS_SageMaker_Cluster_Orchestrator) *AWS_SageMaker_Cluster {
	t.Orchestrator = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_Cluster) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_Cluster {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_Cluster) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_Cluster {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_Cluster) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_Cluster {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcConfig updates property "VpcConfig".
func (t *AWS_SageMaker_Cluster) Set__VpcConfig(v cfz.Expression[AWS_SageMaker_Cluster_VpcConfig]) *AWS_SageMaker_Cluster {
	t.VpcConfig = v
	return t
}

// SetV__VpcConfig updates property "VpcConfig".
func (t *AWS_SageMaker_Cluster) SetV__VpcConfig(v AWS_SageMaker_Cluster_VpcConfig) *AWS_SageMaker_Cluster {
	t.VpcConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_Cluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ClusterArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ClusterArn
func (t *AWS_SageMaker_Cluster) GetAtt__ClusterArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Cluster__AttributesMap.ClusterArn))
}

// GetAtt__ClusterStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ClusterStatus
func (t *AWS_SageMaker_Cluster) GetAtt__ClusterStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Cluster__AttributesMap.ClusterStatus))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_Cluster) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Cluster__AttributesMap.CreationTime))
}

// GetAtt__FailureMessage returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FailureMessage
func (t *AWS_SageMaker_Cluster) GetAtt__FailureMessage() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Cluster__AttributesMap.FailureMessage))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_Cluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ClusterArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ClusterArn
func (t *AWS_SageMaker_Cluster) GetConventionalOutputAtt__ClusterArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttClusterArn", t.GetAtt__ClusterArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ClusterStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: ClusterStatus
func (t *AWS_SageMaker_Cluster) GetConventionalOutputAtt__ClusterStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttClusterStatus", t.GetAtt__ClusterStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_Cluster) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FailureMessage returns a conventionally configured output for an attribute of this resource.
// Attribute: FailureMessage
func (t *AWS_SageMaker_Cluster) GetConventionalOutputAtt__FailureMessage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFailureMessage", t.GetAtt__FailureMessage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_Cluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_Cluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_Cluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
