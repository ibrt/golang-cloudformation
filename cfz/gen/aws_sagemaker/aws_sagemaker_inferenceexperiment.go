// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_InferenceExperiment)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_InferenceExperiment)(nil)
)

const (
	// AWS_SageMaker_InferenceExperiment__Type is the CloudFormation type for AWS::SageMaker::InferenceExperiment.
	AWS_SageMaker_InferenceExperiment__Type = "AWS::SageMaker::InferenceExperiment"
)

var (
	// AWS_SageMaker_InferenceExperiment__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::InferenceExperiment.
	AWS_SageMaker_InferenceExperiment__AttributesMap = struct {
		Arn                                 string
		CreationTime                        string
		EndpointMetadata                    string
		EndpointMetadata_EndpointConfigName string
		EndpointMetadata_EndpointName       string
		EndpointMetadata_EndpointStatus     string
		LastModifiedTime                    string
		Status                              string
	}{
		Arn:                                 "Arn",
		CreationTime:                        "CreationTime",
		EndpointMetadata:                    "EndpointMetadata",
		EndpointMetadata_EndpointConfigName: "EndpointMetadata.EndpointConfigName",
		EndpointMetadata_EndpointName:       "EndpointMetadata.EndpointName",
		EndpointMetadata_EndpointStatus:     "EndpointMetadata.EndpointStatus",
		LastModifiedTime:                    "LastModifiedTime",
		Status:                              "Status",
	}

	// AWS_SageMaker_InferenceExperiment__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::InferenceExperiment.
	AWS_SageMaker_InferenceExperiment__AttributesSlice = []string{
		AWS_SageMaker_InferenceExperiment__AttributesMap.Arn,
		AWS_SageMaker_InferenceExperiment__AttributesMap.CreationTime,
		AWS_SageMaker_InferenceExperiment__AttributesMap.EndpointMetadata,
		AWS_SageMaker_InferenceExperiment__AttributesMap.EndpointMetadata_EndpointConfigName,
		AWS_SageMaker_InferenceExperiment__AttributesMap.EndpointMetadata_EndpointName,
		AWS_SageMaker_InferenceExperiment__AttributesMap.EndpointMetadata_EndpointStatus,
		AWS_SageMaker_InferenceExperiment__AttributesMap.LastModifiedTime,
		AWS_SageMaker_InferenceExperiment__AttributesMap.Status,
	}
)

var (
	// AWS_SageMaker_InferenceExperiment__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::InferenceExperiment.
	AWS_SageMaker_InferenceExperiment__PropertiesMap = struct {
		DataStorageConfig string
		Description       string
		DesiredState      string
		EndpointName      string
		KmsKey            string
		ModelVariants     string
		Name              string
		RoleArn           string
		Schedule          string
		ShadowModeConfig  string
		StatusReason      string
		Tags              string
		Type              string
	}{
		DataStorageConfig: "DataStorageConfig",
		Description:       "Description",
		DesiredState:      "DesiredState",
		EndpointName:      "EndpointName",
		KmsKey:            "KmsKey",
		ModelVariants:     "ModelVariants",
		Name:              "Name",
		RoleArn:           "RoleArn",
		Schedule:          "Schedule",
		ShadowModeConfig:  "ShadowModeConfig",
		StatusReason:      "StatusReason",
		Tags:              "Tags",
		Type:              "Type",
	}

	// AWS_SageMaker_InferenceExperiment__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::InferenceExperiment.
	AWS_SageMaker_InferenceExperiment__PropertiesSlice = []string{
		AWS_SageMaker_InferenceExperiment__PropertiesMap.DataStorageConfig,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.Description,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.DesiredState,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.EndpointName,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.KmsKey,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.ModelVariants,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.Name,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.RoleArn,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.Schedule,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.ShadowModeConfig,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.StatusReason,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.Tags,
		AWS_SageMaker_InferenceExperiment__PropertiesMap.Type,
	}
)

// AWS_SageMaker_InferenceExperiment is a binding for AWS::SageMaker::InferenceExperiment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html
type AWS_SageMaker_InferenceExperiment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DataStorageConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-datastorageconfig
	DataStorageConfig cfz.Expression[AWS_SageMaker_InferenceExperiment_DataStorageConfig] `json:"DataStorageConfig,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DesiredState is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-desiredstate
	DesiredState cfz.Expression[string] `json:"DesiredState,omitempty"`

	// EndpointName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-endpointname
	EndpointName cfz.Expression[string] `json:"EndpointName,omitempty"`

	// KmsKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-kmskey
	KmsKey cfz.Expression[string] `json:"KmsKey,omitempty"`

	// ModelVariants is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-modelvariants
	ModelVariants cfz.ExpressionSlice[AWS_SageMaker_InferenceExperiment_ModelVariantConfig] `json:"ModelVariants,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// Schedule is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-schedule
	Schedule cfz.Expression[AWS_SageMaker_InferenceExperiment_InferenceExperimentSchedule] `json:"Schedule,omitempty"`

	// ShadowModeConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-shadowmodeconfig
	ShadowModeConfig cfz.Expression[AWS_SageMaker_InferenceExperiment_ShadowModeConfig] `json:"ShadowModeConfig,omitempty"`

	// StatusReason is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-statusreason
	StatusReason cfz.Expression[string] `json:"StatusReason,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferenceexperiment.html#cfn-sagemaker-inferenceexperiment-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_SageMaker_InferenceExperiment initializes a new *AWS_SageMaker_InferenceExperiment.
func New__AWS_SageMaker_InferenceExperiment(logicalName string) *AWS_SageMaker_InferenceExperiment {
	return &AWS_SageMaker_InferenceExperiment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_InferenceExperiment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_InferenceExperiment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_InferenceExperiment) GetType() string {
	return AWS_SageMaker_InferenceExperiment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_InferenceExperiment) Set__LogicalName(v string) *AWS_SageMaker_InferenceExperiment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_InferenceExperiment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_InferenceExperiment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_InferenceExperiment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_InferenceExperiment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_InferenceExperiment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_InferenceExperiment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_InferenceExperiment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_InferenceExperiment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_InferenceExperiment) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_InferenceExperiment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_InferenceExperiment) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_InferenceExperiment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DataStorageConfig updates property "DataStorageConfig".
func (t *AWS_SageMaker_InferenceExperiment) Set__DataStorageConfig(v cfz.Expression[AWS_SageMaker_InferenceExperiment_DataStorageConfig]) *AWS_SageMaker_InferenceExperiment {
	t.DataStorageConfig = v
	return t
}

// SetV__DataStorageConfig updates property "DataStorageConfig".
func (t *AWS_SageMaker_InferenceExperiment) SetV__DataStorageConfig(v AWS_SageMaker_InferenceExperiment_DataStorageConfig) *AWS_SageMaker_InferenceExperiment {
	t.DataStorageConfig = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_SageMaker_InferenceExperiment) Set__Description(v cfz.Expression[string]) *AWS_SageMaker_InferenceExperiment {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_SageMaker_InferenceExperiment) SetV__Description(v string) *AWS_SageMaker_InferenceExperiment {
	t.Description = cfz.V(v)
	return t
}

// Set__DesiredState updates property "DesiredState".
func (t *AWS_SageMaker_InferenceExperiment) Set__DesiredState(v cfz.Expression[string]) *AWS_SageMaker_InferenceExperiment {
	t.DesiredState = v
	return t
}

// SetV__DesiredState updates property "DesiredState".
func (t *AWS_SageMaker_InferenceExperiment) SetV__DesiredState(v string) *AWS_SageMaker_InferenceExperiment {
	t.DesiredState = cfz.V(v)
	return t
}

// Set__EndpointName updates property "EndpointName".
func (t *AWS_SageMaker_InferenceExperiment) Set__EndpointName(v cfz.Expression[string]) *AWS_SageMaker_InferenceExperiment {
	t.EndpointName = v
	return t
}

// SetV__EndpointName updates property "EndpointName".
func (t *AWS_SageMaker_InferenceExperiment) SetV__EndpointName(v string) *AWS_SageMaker_InferenceExperiment {
	t.EndpointName = cfz.V(v)
	return t
}

// Set__KmsKey updates property "KmsKey".
func (t *AWS_SageMaker_InferenceExperiment) Set__KmsKey(v cfz.Expression[string]) *AWS_SageMaker_InferenceExperiment {
	t.KmsKey = v
	return t
}

// SetV__KmsKey updates property "KmsKey".
func (t *AWS_SageMaker_InferenceExperiment) SetV__KmsKey(v string) *AWS_SageMaker_InferenceExperiment {
	t.KmsKey = cfz.V(v)
	return t
}

// Set__ModelVariants updates property "ModelVariants".
func (t *AWS_SageMaker_InferenceExperiment) Set__ModelVariants(v cfz.ExpressionSlice[AWS_SageMaker_InferenceExperiment_ModelVariantConfig]) *AWS_SageMaker_InferenceExperiment {
	t.ModelVariants = v
	return t
}

// SetS__ModelVariants updates property "ModelVariants".
func (t *AWS_SageMaker_InferenceExperiment) SetS__ModelVariants(v ...cfz.Expression[AWS_SageMaker_InferenceExperiment_ModelVariantConfig]) *AWS_SageMaker_InferenceExperiment {
	t.ModelVariants = cfz.S(v...)
	return t
}

// SetSV__ModelVariants updates property "ModelVariants".
func (t *AWS_SageMaker_InferenceExperiment) SetSV__ModelVariants(v ...AWS_SageMaker_InferenceExperiment_ModelVariantConfig) *AWS_SageMaker_InferenceExperiment {
	t.ModelVariants = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_SageMaker_InferenceExperiment) Set__Name(v cfz.Expression[string]) *AWS_SageMaker_InferenceExperiment {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_SageMaker_InferenceExperiment) SetV__Name(v string) *AWS_SageMaker_InferenceExperiment {
	t.Name = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_SageMaker_InferenceExperiment) Set__RoleArn(v cfz.Expression[string]) *AWS_SageMaker_InferenceExperiment {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_SageMaker_InferenceExperiment) SetV__RoleArn(v string) *AWS_SageMaker_InferenceExperiment {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__Schedule updates property "Schedule".
func (t *AWS_SageMaker_InferenceExperiment) Set__Schedule(v cfz.Expression[AWS_SageMaker_InferenceExperiment_InferenceExperimentSchedule]) *AWS_SageMaker_InferenceExperiment {
	t.Schedule = v
	return t
}

// SetV__Schedule updates property "Schedule".
func (t *AWS_SageMaker_InferenceExperiment) SetV__Schedule(v AWS_SageMaker_InferenceExperiment_InferenceExperimentSchedule) *AWS_SageMaker_InferenceExperiment {
	t.Schedule = cfz.V(v)
	return t
}

// Set__ShadowModeConfig updates property "ShadowModeConfig".
func (t *AWS_SageMaker_InferenceExperiment) Set__ShadowModeConfig(v cfz.Expression[AWS_SageMaker_InferenceExperiment_ShadowModeConfig]) *AWS_SageMaker_InferenceExperiment {
	t.ShadowModeConfig = v
	return t
}

// SetV__ShadowModeConfig updates property "ShadowModeConfig".
func (t *AWS_SageMaker_InferenceExperiment) SetV__ShadowModeConfig(v AWS_SageMaker_InferenceExperiment_ShadowModeConfig) *AWS_SageMaker_InferenceExperiment {
	t.ShadowModeConfig = cfz.V(v)
	return t
}

// Set__StatusReason updates property "StatusReason".
func (t *AWS_SageMaker_InferenceExperiment) Set__StatusReason(v cfz.Expression[string]) *AWS_SageMaker_InferenceExperiment {
	t.StatusReason = v
	return t
}

// SetV__StatusReason updates property "StatusReason".
func (t *AWS_SageMaker_InferenceExperiment) SetV__StatusReason(v string) *AWS_SageMaker_InferenceExperiment {
	t.StatusReason = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_InferenceExperiment) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_InferenceExperiment {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_InferenceExperiment) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_InferenceExperiment {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_InferenceExperiment) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_InferenceExperiment {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_SageMaker_InferenceExperiment) Set__Type(v cfz.Expression[string]) *AWS_SageMaker_InferenceExperiment {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_SageMaker_InferenceExperiment) SetV__Type(v string) *AWS_SageMaker_InferenceExperiment {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_InferenceExperiment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_SageMaker_InferenceExperiment) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceExperiment__AttributesMap.Arn))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_InferenceExperiment) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceExperiment__AttributesMap.CreationTime))
}

// GetAtt__EndpointMetadata returns a $cfz.Expression[AWS_SageMaker_InferenceExperiment_EndpointMetadata] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointMetadata
func (t *AWS_SageMaker_InferenceExperiment) GetAtt__EndpointMetadata() cfz.Expression[AWS_SageMaker_InferenceExperiment_EndpointMetadata] {
	return cfz.GetAtt[AWS_SageMaker_InferenceExperiment_EndpointMetadata](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceExperiment__AttributesMap.EndpointMetadata))
}

// GetAtt__EndpointMetadata_EndpointConfigName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointMetadata.EndpointConfigName
func (t *AWS_SageMaker_InferenceExperiment) GetAtt__EndpointMetadata_EndpointConfigName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceExperiment__AttributesMap.EndpointMetadata_EndpointConfigName))
}

// GetAtt__EndpointMetadata_EndpointName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointMetadata.EndpointName
func (t *AWS_SageMaker_InferenceExperiment) GetAtt__EndpointMetadata_EndpointName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceExperiment__AttributesMap.EndpointMetadata_EndpointName))
}

// GetAtt__EndpointMetadata_EndpointStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointMetadata.EndpointStatus
func (t *AWS_SageMaker_InferenceExperiment) GetAtt__EndpointMetadata_EndpointStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceExperiment__AttributesMap.EndpointMetadata_EndpointStatus))
}

// GetAtt__LastModifiedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastModifiedTime
func (t *AWS_SageMaker_InferenceExperiment) GetAtt__LastModifiedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceExperiment__AttributesMap.LastModifiedTime))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_SageMaker_InferenceExperiment) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceExperiment__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_InferenceExperiment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_SageMaker_InferenceExperiment) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_InferenceExperiment) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointMetadata returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointMetadata
func (t *AWS_SageMaker_InferenceExperiment) GetConventionalOutputAtt__EndpointMetadata(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointMetadata", t.GetAtt__EndpointMetadata())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointMetadata_EndpointConfigName returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointMetadata.EndpointConfigName
func (t *AWS_SageMaker_InferenceExperiment) GetConventionalOutputAtt__EndpointMetadata_EndpointConfigName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointMetadataEndpointConfigName", t.GetAtt__EndpointMetadata_EndpointConfigName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointMetadata_EndpointName returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointMetadata.EndpointName
func (t *AWS_SageMaker_InferenceExperiment) GetConventionalOutputAtt__EndpointMetadata_EndpointName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointMetadataEndpointName", t.GetAtt__EndpointMetadata_EndpointName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointMetadata_EndpointStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointMetadata.EndpointStatus
func (t *AWS_SageMaker_InferenceExperiment) GetConventionalOutputAtt__EndpointMetadata_EndpointStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointMetadataEndpointStatus", t.GetAtt__EndpointMetadata_EndpointStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastModifiedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastModifiedTime
func (t *AWS_SageMaker_InferenceExperiment) GetConventionalOutputAtt__LastModifiedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastModifiedTime", t.GetAtt__LastModifiedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_SageMaker_InferenceExperiment) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_InferenceExperiment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_InferenceExperiment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_InferenceExperiment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
