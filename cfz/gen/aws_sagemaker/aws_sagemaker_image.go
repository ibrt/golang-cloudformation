// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_Image)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_Image)(nil)
)

const (
	// AWS_SageMaker_Image__Type is the CloudFormation type for AWS::SageMaker::Image.
	AWS_SageMaker_Image__Type = "AWS::SageMaker::Image"
)

var (
	// AWS_SageMaker_Image__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::Image.
	AWS_SageMaker_Image__AttributesMap = struct {
		ImageArn string
	}{
		ImageArn: "ImageArn",
	}

	// AWS_SageMaker_Image__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::Image.
	AWS_SageMaker_Image__AttributesSlice = []string{
		AWS_SageMaker_Image__AttributesMap.ImageArn,
	}
)

var (
	// AWS_SageMaker_Image__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::Image.
	AWS_SageMaker_Image__PropertiesMap = struct {
		ImageDescription string
		ImageDisplayName string
		ImageName        string
		ImageRoleArn     string
		Tags             string
	}{
		ImageDescription: "ImageDescription",
		ImageDisplayName: "ImageDisplayName",
		ImageName:        "ImageName",
		ImageRoleArn:     "ImageRoleArn",
		Tags:             "Tags",
	}

	// AWS_SageMaker_Image__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::Image.
	AWS_SageMaker_Image__PropertiesSlice = []string{
		AWS_SageMaker_Image__PropertiesMap.ImageDescription,
		AWS_SageMaker_Image__PropertiesMap.ImageDisplayName,
		AWS_SageMaker_Image__PropertiesMap.ImageName,
		AWS_SageMaker_Image__PropertiesMap.ImageRoleArn,
		AWS_SageMaker_Image__PropertiesMap.Tags,
	}
)

// AWS_SageMaker_Image is a binding for AWS::SageMaker::Image.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html
type AWS_SageMaker_Image struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ImageDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-imagedescription
	ImageDescription cfz.Expression[string] `json:"ImageDescription,omitempty"`

	// ImageDisplayName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-imagedisplayname
	ImageDisplayName cfz.Expression[string] `json:"ImageDisplayName,omitempty"`

	// ImageName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-imagename
	ImageName cfz.Expression[string] `json:"ImageName,omitempty"`

	// ImageRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-imagerolearn
	ImageRoleArn cfz.Expression[string] `json:"ImageRoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-image.html#cfn-sagemaker-image-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_SageMaker_Image initializes a new *AWS_SageMaker_Image.
func New__AWS_SageMaker_Image(logicalName string) *AWS_SageMaker_Image {
	return &AWS_SageMaker_Image{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_Image) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_Image) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_Image) GetType() string {
	return AWS_SageMaker_Image__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_Image) Set__LogicalName(v string) *AWS_SageMaker_Image {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_Image) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_Image {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_Image) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_Image {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_Image) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_Image {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_Image) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_Image {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_Image) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_Image {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_Image) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_Image {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ImageDescription updates property "ImageDescription".
func (t *AWS_SageMaker_Image) Set__ImageDescription(v cfz.Expression[string]) *AWS_SageMaker_Image {
	t.ImageDescription = v
	return t
}

// SetV__ImageDescription updates property "ImageDescription".
func (t *AWS_SageMaker_Image) SetV__ImageDescription(v string) *AWS_SageMaker_Image {
	t.ImageDescription = cfz.V(v)
	return t
}

// Set__ImageDisplayName updates property "ImageDisplayName".
func (t *AWS_SageMaker_Image) Set__ImageDisplayName(v cfz.Expression[string]) *AWS_SageMaker_Image {
	t.ImageDisplayName = v
	return t
}

// SetV__ImageDisplayName updates property "ImageDisplayName".
func (t *AWS_SageMaker_Image) SetV__ImageDisplayName(v string) *AWS_SageMaker_Image {
	t.ImageDisplayName = cfz.V(v)
	return t
}

// Set__ImageName updates property "ImageName".
func (t *AWS_SageMaker_Image) Set__ImageName(v cfz.Expression[string]) *AWS_SageMaker_Image {
	t.ImageName = v
	return t
}

// SetV__ImageName updates property "ImageName".
func (t *AWS_SageMaker_Image) SetV__ImageName(v string) *AWS_SageMaker_Image {
	t.ImageName = cfz.V(v)
	return t
}

// Set__ImageRoleArn updates property "ImageRoleArn".
func (t *AWS_SageMaker_Image) Set__ImageRoleArn(v cfz.Expression[string]) *AWS_SageMaker_Image {
	t.ImageRoleArn = v
	return t
}

// SetV__ImageRoleArn updates property "ImageRoleArn".
func (t *AWS_SageMaker_Image) SetV__ImageRoleArn(v string) *AWS_SageMaker_Image {
	t.ImageRoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_Image) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_Image {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_Image) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_Image {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_Image) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_Image {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_Image) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ImageArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ImageArn
func (t *AWS_SageMaker_Image) GetAtt__ImageArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Image__AttributesMap.ImageArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_Image) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ImageArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ImageArn
func (t *AWS_SageMaker_Image) GetConventionalOutputAtt__ImageArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttImageArn", t.GetAtt__ImageArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_Image) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_Image

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_Image) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
