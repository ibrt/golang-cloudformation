// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_Domain)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_Domain)(nil)
)

const (
	// AWS_SageMaker_Domain__Type is the CloudFormation type for AWS::SageMaker::Domain.
	AWS_SageMaker_Domain__Type = "AWS::SageMaker::Domain"
)

var (
	// AWS_SageMaker_Domain__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::Domain.
	AWS_SageMaker_Domain__AttributesMap = struct {
		DomainArn                                string
		DomainId                                 string
		HomeEfsFileSystemId                      string
		SecurityGroupIdForDomainBoundary         string
		SingleSignOnApplicationArn               string
		SingleSignOnManagedApplicationInstanceId string
		Url                                      string
	}{
		DomainArn:                                "DomainArn",
		DomainId:                                 "DomainId",
		HomeEfsFileSystemId:                      "HomeEfsFileSystemId",
		SecurityGroupIdForDomainBoundary:         "SecurityGroupIdForDomainBoundary",
		SingleSignOnApplicationArn:               "SingleSignOnApplicationArn",
		SingleSignOnManagedApplicationInstanceId: "SingleSignOnManagedApplicationInstanceId",
		Url:                                      "Url",
	}

	// AWS_SageMaker_Domain__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::Domain.
	AWS_SageMaker_Domain__AttributesSlice = []string{
		AWS_SageMaker_Domain__AttributesMap.DomainArn,
		AWS_SageMaker_Domain__AttributesMap.DomainId,
		AWS_SageMaker_Domain__AttributesMap.HomeEfsFileSystemId,
		AWS_SageMaker_Domain__AttributesMap.SecurityGroupIdForDomainBoundary,
		AWS_SageMaker_Domain__AttributesMap.SingleSignOnApplicationArn,
		AWS_SageMaker_Domain__AttributesMap.SingleSignOnManagedApplicationInstanceId,
		AWS_SageMaker_Domain__AttributesMap.Url,
	}
)

var (
	// AWS_SageMaker_Domain__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::Domain.
	AWS_SageMaker_Domain__PropertiesMap = struct {
		AppNetworkAccessType       string
		AppSecurityGroupManagement string
		AuthMode                   string
		DefaultSpaceSettings       string
		DefaultUserSettings        string
		DomainName                 string
		DomainSettings             string
		KmsKeyId                   string
		SubnetIds                  string
		TagPropagation             string
		Tags                       string
		VpcId                      string
	}{
		AppNetworkAccessType:       "AppNetworkAccessType",
		AppSecurityGroupManagement: "AppSecurityGroupManagement",
		AuthMode:                   "AuthMode",
		DefaultSpaceSettings:       "DefaultSpaceSettings",
		DefaultUserSettings:        "DefaultUserSettings",
		DomainName:                 "DomainName",
		DomainSettings:             "DomainSettings",
		KmsKeyId:                   "KmsKeyId",
		SubnetIds:                  "SubnetIds",
		TagPropagation:             "TagPropagation",
		Tags:                       "Tags",
		VpcId:                      "VpcId",
	}

	// AWS_SageMaker_Domain__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::Domain.
	AWS_SageMaker_Domain__PropertiesSlice = []string{
		AWS_SageMaker_Domain__PropertiesMap.AppNetworkAccessType,
		AWS_SageMaker_Domain__PropertiesMap.AppSecurityGroupManagement,
		AWS_SageMaker_Domain__PropertiesMap.AuthMode,
		AWS_SageMaker_Domain__PropertiesMap.DefaultSpaceSettings,
		AWS_SageMaker_Domain__PropertiesMap.DefaultUserSettings,
		AWS_SageMaker_Domain__PropertiesMap.DomainName,
		AWS_SageMaker_Domain__PropertiesMap.DomainSettings,
		AWS_SageMaker_Domain__PropertiesMap.KmsKeyId,
		AWS_SageMaker_Domain__PropertiesMap.SubnetIds,
		AWS_SageMaker_Domain__PropertiesMap.TagPropagation,
		AWS_SageMaker_Domain__PropertiesMap.Tags,
		AWS_SageMaker_Domain__PropertiesMap.VpcId,
	}
)

// AWS_SageMaker_Domain is a binding for AWS::SageMaker::Domain.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html
type AWS_SageMaker_Domain struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AppNetworkAccessType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-appnetworkaccesstype
	AppNetworkAccessType cfz.Expression[string] `json:"AppNetworkAccessType,omitempty"`

	// AppSecurityGroupManagement is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-appsecuritygroupmanagement
	AppSecurityGroupManagement cfz.Expression[string] `json:"AppSecurityGroupManagement,omitempty"`

	// AuthMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-authmode
	AuthMode cfz.Expression[string] `json:"AuthMode,omitempty"`

	// DefaultSpaceSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-defaultspacesettings
	DefaultSpaceSettings cfz.Expression[AWS_SageMaker_Domain_DefaultSpaceSettings] `json:"DefaultSpaceSettings,omitempty"`

	// DefaultUserSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-defaultusersettings
	DefaultUserSettings cfz.Expression[AWS_SageMaker_Domain_UserSettings] `json:"DefaultUserSettings,omitempty"`

	// DomainName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-domainname
	DomainName cfz.Expression[string] `json:"DomainName,omitempty"`

	// DomainSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-domainsettings
	DomainSettings cfz.Expression[AWS_SageMaker_Domain_DomainSettings] `json:"DomainSettings,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// SubnetIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-subnetids
	SubnetIds cfz.ExpressionSlice[string] `json:"SubnetIds,omitempty"`

	// TagPropagation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-tagpropagation
	TagPropagation cfz.Expression[string] `json:"TagPropagation,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-domain.html#cfn-sagemaker-domain-vpcid
	VpcId cfz.Expression[string] `json:"VpcId,omitempty"`
}

// New__AWS_SageMaker_Domain initializes a new *AWS_SageMaker_Domain.
func New__AWS_SageMaker_Domain(logicalName string) *AWS_SageMaker_Domain {
	return &AWS_SageMaker_Domain{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_Domain) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_Domain) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_Domain) GetType() string {
	return AWS_SageMaker_Domain__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_Domain) Set__LogicalName(v string) *AWS_SageMaker_Domain {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_Domain) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_Domain {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_Domain) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_Domain {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_Domain) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_Domain {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_Domain) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_Domain {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_Domain) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_Domain {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_Domain) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_Domain {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AppNetworkAccessType updates property "AppNetworkAccessType".
func (t *AWS_SageMaker_Domain) Set__AppNetworkAccessType(v cfz.Expression[string]) *AWS_SageMaker_Domain {
	t.AppNetworkAccessType = v
	return t
}

// SetV__AppNetworkAccessType updates property "AppNetworkAccessType".
func (t *AWS_SageMaker_Domain) SetV__AppNetworkAccessType(v string) *AWS_SageMaker_Domain {
	t.AppNetworkAccessType = cfz.V(v)
	return t
}

// Set__AppSecurityGroupManagement updates property "AppSecurityGroupManagement".
func (t *AWS_SageMaker_Domain) Set__AppSecurityGroupManagement(v cfz.Expression[string]) *AWS_SageMaker_Domain {
	t.AppSecurityGroupManagement = v
	return t
}

// SetV__AppSecurityGroupManagement updates property "AppSecurityGroupManagement".
func (t *AWS_SageMaker_Domain) SetV__AppSecurityGroupManagement(v string) *AWS_SageMaker_Domain {
	t.AppSecurityGroupManagement = cfz.V(v)
	return t
}

// Set__AuthMode updates property "AuthMode".
func (t *AWS_SageMaker_Domain) Set__AuthMode(v cfz.Expression[string]) *AWS_SageMaker_Domain {
	t.AuthMode = v
	return t
}

// SetV__AuthMode updates property "AuthMode".
func (t *AWS_SageMaker_Domain) SetV__AuthMode(v string) *AWS_SageMaker_Domain {
	t.AuthMode = cfz.V(v)
	return t
}

// Set__DefaultSpaceSettings updates property "DefaultSpaceSettings".
func (t *AWS_SageMaker_Domain) Set__DefaultSpaceSettings(v cfz.Expression[AWS_SageMaker_Domain_DefaultSpaceSettings]) *AWS_SageMaker_Domain {
	t.DefaultSpaceSettings = v
	return t
}

// SetV__DefaultSpaceSettings updates property "DefaultSpaceSettings".
func (t *AWS_SageMaker_Domain) SetV__DefaultSpaceSettings(v AWS_SageMaker_Domain_DefaultSpaceSettings) *AWS_SageMaker_Domain {
	t.DefaultSpaceSettings = cfz.V(v)
	return t
}

// Set__DefaultUserSettings updates property "DefaultUserSettings".
func (t *AWS_SageMaker_Domain) Set__DefaultUserSettings(v cfz.Expression[AWS_SageMaker_Domain_UserSettings]) *AWS_SageMaker_Domain {
	t.DefaultUserSettings = v
	return t
}

// SetV__DefaultUserSettings updates property "DefaultUserSettings".
func (t *AWS_SageMaker_Domain) SetV__DefaultUserSettings(v AWS_SageMaker_Domain_UserSettings) *AWS_SageMaker_Domain {
	t.DefaultUserSettings = cfz.V(v)
	return t
}

// Set__DomainName updates property "DomainName".
func (t *AWS_SageMaker_Domain) Set__DomainName(v cfz.Expression[string]) *AWS_SageMaker_Domain {
	t.DomainName = v
	return t
}

// SetV__DomainName updates property "DomainName".
func (t *AWS_SageMaker_Domain) SetV__DomainName(v string) *AWS_SageMaker_Domain {
	t.DomainName = cfz.V(v)
	return t
}

// Set__DomainSettings updates property "DomainSettings".
func (t *AWS_SageMaker_Domain) Set__DomainSettings(v cfz.Expression[AWS_SageMaker_Domain_DomainSettings]) *AWS_SageMaker_Domain {
	t.DomainSettings = v
	return t
}

// SetV__DomainSettings updates property "DomainSettings".
func (t *AWS_SageMaker_Domain) SetV__DomainSettings(v AWS_SageMaker_Domain_DomainSettings) *AWS_SageMaker_Domain {
	t.DomainSettings = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_SageMaker_Domain) Set__KmsKeyId(v cfz.Expression[string]) *AWS_SageMaker_Domain {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_SageMaker_Domain) SetV__KmsKeyId(v string) *AWS_SageMaker_Domain {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__SubnetIds updates property "SubnetIds".
func (t *AWS_SageMaker_Domain) Set__SubnetIds(v cfz.ExpressionSlice[string]) *AWS_SageMaker_Domain {
	t.SubnetIds = v
	return t
}

// SetS__SubnetIds updates property "SubnetIds".
func (t *AWS_SageMaker_Domain) SetS__SubnetIds(v ...cfz.Expression[string]) *AWS_SageMaker_Domain {
	t.SubnetIds = cfz.S(v...)
	return t
}

// SetSV__SubnetIds updates property "SubnetIds".
func (t *AWS_SageMaker_Domain) SetSV__SubnetIds(v ...string) *AWS_SageMaker_Domain {
	t.SubnetIds = cfz.SV(v...)
	return t
}

// Set__TagPropagation updates property "TagPropagation".
func (t *AWS_SageMaker_Domain) Set__TagPropagation(v cfz.Expression[string]) *AWS_SageMaker_Domain {
	t.TagPropagation = v
	return t
}

// SetV__TagPropagation updates property "TagPropagation".
func (t *AWS_SageMaker_Domain) SetV__TagPropagation(v string) *AWS_SageMaker_Domain {
	t.TagPropagation = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_Domain) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_Domain {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_Domain) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_Domain {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_Domain) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_Domain {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcId updates property "VpcId".
func (t *AWS_SageMaker_Domain) Set__VpcId(v cfz.Expression[string]) *AWS_SageMaker_Domain {
	t.VpcId = v
	return t
}

// SetV__VpcId updates property "VpcId".
func (t *AWS_SageMaker_Domain) SetV__VpcId(v string) *AWS_SageMaker_Domain {
	t.VpcId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_Domain) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DomainArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DomainArn
func (t *AWS_SageMaker_Domain) GetAtt__DomainArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Domain__AttributesMap.DomainArn))
}

// GetAtt__DomainId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DomainId
func (t *AWS_SageMaker_Domain) GetAtt__DomainId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Domain__AttributesMap.DomainId))
}

// GetAtt__HomeEfsFileSystemId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: HomeEfsFileSystemId
func (t *AWS_SageMaker_Domain) GetAtt__HomeEfsFileSystemId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Domain__AttributesMap.HomeEfsFileSystemId))
}

// GetAtt__SecurityGroupIdForDomainBoundary returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SecurityGroupIdForDomainBoundary
func (t *AWS_SageMaker_Domain) GetAtt__SecurityGroupIdForDomainBoundary() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Domain__AttributesMap.SecurityGroupIdForDomainBoundary))
}

// GetAtt__SingleSignOnApplicationArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SingleSignOnApplicationArn
func (t *AWS_SageMaker_Domain) GetAtt__SingleSignOnApplicationArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Domain__AttributesMap.SingleSignOnApplicationArn))
}

// GetAtt__SingleSignOnManagedApplicationInstanceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SingleSignOnManagedApplicationInstanceId
func (t *AWS_SageMaker_Domain) GetAtt__SingleSignOnManagedApplicationInstanceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Domain__AttributesMap.SingleSignOnManagedApplicationInstanceId))
}

// GetAtt__Url returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Url
func (t *AWS_SageMaker_Domain) GetAtt__Url() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Domain__AttributesMap.Url))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_Domain) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DomainArn returns a conventionally configured output for an attribute of this resource.
// Attribute: DomainArn
func (t *AWS_SageMaker_Domain) GetConventionalOutputAtt__DomainArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDomainArn", t.GetAtt__DomainArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DomainId returns a conventionally configured output for an attribute of this resource.
// Attribute: DomainId
func (t *AWS_SageMaker_Domain) GetConventionalOutputAtt__DomainId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDomainId", t.GetAtt__DomainId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__HomeEfsFileSystemId returns a conventionally configured output for an attribute of this resource.
// Attribute: HomeEfsFileSystemId
func (t *AWS_SageMaker_Domain) GetConventionalOutputAtt__HomeEfsFileSystemId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttHomeEfsFileSystemId", t.GetAtt__HomeEfsFileSystemId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SecurityGroupIdForDomainBoundary returns a conventionally configured output for an attribute of this resource.
// Attribute: SecurityGroupIdForDomainBoundary
func (t *AWS_SageMaker_Domain) GetConventionalOutputAtt__SecurityGroupIdForDomainBoundary(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSecurityGroupIdForDomainBoundary", t.GetAtt__SecurityGroupIdForDomainBoundary())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SingleSignOnApplicationArn returns a conventionally configured output for an attribute of this resource.
// Attribute: SingleSignOnApplicationArn
func (t *AWS_SageMaker_Domain) GetConventionalOutputAtt__SingleSignOnApplicationArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSingleSignOnApplicationArn", t.GetAtt__SingleSignOnApplicationArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SingleSignOnManagedApplicationInstanceId returns a conventionally configured output for an attribute of this resource.
// Attribute: SingleSignOnManagedApplicationInstanceId
func (t *AWS_SageMaker_Domain) GetConventionalOutputAtt__SingleSignOnManagedApplicationInstanceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSingleSignOnManagedApplicationInstanceId", t.GetAtt__SingleSignOnManagedApplicationInstanceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Url returns a conventionally configured output for an attribute of this resource.
// Attribute: Url
func (t *AWS_SageMaker_Domain) GetConventionalOutputAtt__Url(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUrl", t.GetAtt__Url())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_Domain) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_Domain

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_Domain) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
