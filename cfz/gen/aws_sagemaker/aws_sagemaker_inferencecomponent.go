// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_InferenceComponent)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_InferenceComponent)(nil)
)

const (
	// AWS_SageMaker_InferenceComponent__Type is the CloudFormation type for AWS::SageMaker::InferenceComponent.
	AWS_SageMaker_InferenceComponent__Type = "AWS::SageMaker::InferenceComponent"
)

var (
	// AWS_SageMaker_InferenceComponent__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::InferenceComponent.
	AWS_SageMaker_InferenceComponent__AttributesMap = struct {
		CreationTime                                         string
		FailureReason                                        string
		InferenceComponentArn                                string
		InferenceComponentStatus                             string
		LastModifiedTime                                     string
		RuntimeConfig_CurrentCopyCount                       string
		RuntimeConfig_DesiredCopyCount                       string
		Specification_Container_DeployedImage                string
		Specification_Container_DeployedImage_ResolutionTime string
		Specification_Container_DeployedImage_ResolvedImage  string
		Specification_Container_DeployedImage_SpecifiedImage string
	}{
		CreationTime:                                         "CreationTime",
		FailureReason:                                        "FailureReason",
		InferenceComponentArn:                                "InferenceComponentArn",
		InferenceComponentStatus:                             "InferenceComponentStatus",
		LastModifiedTime:                                     "LastModifiedTime",
		RuntimeConfig_CurrentCopyCount:                       "RuntimeConfig.CurrentCopyCount",
		RuntimeConfig_DesiredCopyCount:                       "RuntimeConfig.DesiredCopyCount",
		Specification_Container_DeployedImage:                "Specification.Container.DeployedImage",
		Specification_Container_DeployedImage_ResolutionTime: "Specification.Container.DeployedImage.ResolutionTime",
		Specification_Container_DeployedImage_ResolvedImage:  "Specification.Container.DeployedImage.ResolvedImage",
		Specification_Container_DeployedImage_SpecifiedImage: "Specification.Container.DeployedImage.SpecifiedImage",
	}

	// AWS_SageMaker_InferenceComponent__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::InferenceComponent.
	AWS_SageMaker_InferenceComponent__AttributesSlice = []string{
		AWS_SageMaker_InferenceComponent__AttributesMap.CreationTime,
		AWS_SageMaker_InferenceComponent__AttributesMap.FailureReason,
		AWS_SageMaker_InferenceComponent__AttributesMap.InferenceComponentArn,
		AWS_SageMaker_InferenceComponent__AttributesMap.InferenceComponentStatus,
		AWS_SageMaker_InferenceComponent__AttributesMap.LastModifiedTime,
		AWS_SageMaker_InferenceComponent__AttributesMap.RuntimeConfig_CurrentCopyCount,
		AWS_SageMaker_InferenceComponent__AttributesMap.RuntimeConfig_DesiredCopyCount,
		AWS_SageMaker_InferenceComponent__AttributesMap.Specification_Container_DeployedImage,
		AWS_SageMaker_InferenceComponent__AttributesMap.Specification_Container_DeployedImage_ResolutionTime,
		AWS_SageMaker_InferenceComponent__AttributesMap.Specification_Container_DeployedImage_ResolvedImage,
		AWS_SageMaker_InferenceComponent__AttributesMap.Specification_Container_DeployedImage_SpecifiedImage,
	}
)

var (
	// AWS_SageMaker_InferenceComponent__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::InferenceComponent.
	AWS_SageMaker_InferenceComponent__PropertiesMap = struct {
		EndpointArn            string
		EndpointName           string
		InferenceComponentName string
		RuntimeConfig          string
		Specification          string
		Tags                   string
		VariantName            string
	}{
		EndpointArn:            "EndpointArn",
		EndpointName:           "EndpointName",
		InferenceComponentName: "InferenceComponentName",
		RuntimeConfig:          "RuntimeConfig",
		Specification:          "Specification",
		Tags:                   "Tags",
		VariantName:            "VariantName",
	}

	// AWS_SageMaker_InferenceComponent__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::InferenceComponent.
	AWS_SageMaker_InferenceComponent__PropertiesSlice = []string{
		AWS_SageMaker_InferenceComponent__PropertiesMap.EndpointArn,
		AWS_SageMaker_InferenceComponent__PropertiesMap.EndpointName,
		AWS_SageMaker_InferenceComponent__PropertiesMap.InferenceComponentName,
		AWS_SageMaker_InferenceComponent__PropertiesMap.RuntimeConfig,
		AWS_SageMaker_InferenceComponent__PropertiesMap.Specification,
		AWS_SageMaker_InferenceComponent__PropertiesMap.Tags,
		AWS_SageMaker_InferenceComponent__PropertiesMap.VariantName,
	}
)

// AWS_SageMaker_InferenceComponent is a binding for AWS::SageMaker::InferenceComponent.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html
type AWS_SageMaker_InferenceComponent struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// EndpointArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-endpointarn
	EndpointArn cfz.Expression[string] `json:"EndpointArn,omitempty"`

	// EndpointName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-endpointname
	EndpointName cfz.Expression[string] `json:"EndpointName,omitempty"`

	// InferenceComponentName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-inferencecomponentname
	InferenceComponentName cfz.Expression[string] `json:"InferenceComponentName,omitempty"`

	// RuntimeConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-runtimeconfig
	RuntimeConfig cfz.Expression[AWS_SageMaker_InferenceComponent_InferenceComponentRuntimeConfig] `json:"RuntimeConfig,omitempty"`

	// Specification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-specification
	Specification cfz.Expression[AWS_SageMaker_InferenceComponent_InferenceComponentSpecification] `json:"Specification,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VariantName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-inferencecomponent.html#cfn-sagemaker-inferencecomponent-variantname
	VariantName cfz.Expression[string] `json:"VariantName,omitempty"`
}

// New__AWS_SageMaker_InferenceComponent initializes a new *AWS_SageMaker_InferenceComponent.
func New__AWS_SageMaker_InferenceComponent(logicalName string) *AWS_SageMaker_InferenceComponent {
	return &AWS_SageMaker_InferenceComponent{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_InferenceComponent) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_InferenceComponent) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_InferenceComponent) GetType() string {
	return AWS_SageMaker_InferenceComponent__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_InferenceComponent) Set__LogicalName(v string) *AWS_SageMaker_InferenceComponent {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_InferenceComponent) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_InferenceComponent {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_InferenceComponent) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_InferenceComponent {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_InferenceComponent) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_InferenceComponent {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_InferenceComponent) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_InferenceComponent {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_InferenceComponent) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_InferenceComponent {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_InferenceComponent) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_InferenceComponent {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__EndpointArn updates property "EndpointArn".
func (t *AWS_SageMaker_InferenceComponent) Set__EndpointArn(v cfz.Expression[string]) *AWS_SageMaker_InferenceComponent {
	t.EndpointArn = v
	return t
}

// SetV__EndpointArn updates property "EndpointArn".
func (t *AWS_SageMaker_InferenceComponent) SetV__EndpointArn(v string) *AWS_SageMaker_InferenceComponent {
	t.EndpointArn = cfz.V(v)
	return t
}

// Set__EndpointName updates property "EndpointName".
func (t *AWS_SageMaker_InferenceComponent) Set__EndpointName(v cfz.Expression[string]) *AWS_SageMaker_InferenceComponent {
	t.EndpointName = v
	return t
}

// SetV__EndpointName updates property "EndpointName".
func (t *AWS_SageMaker_InferenceComponent) SetV__EndpointName(v string) *AWS_SageMaker_InferenceComponent {
	t.EndpointName = cfz.V(v)
	return t
}

// Set__InferenceComponentName updates property "InferenceComponentName".
func (t *AWS_SageMaker_InferenceComponent) Set__InferenceComponentName(v cfz.Expression[string]) *AWS_SageMaker_InferenceComponent {
	t.InferenceComponentName = v
	return t
}

// SetV__InferenceComponentName updates property "InferenceComponentName".
func (t *AWS_SageMaker_InferenceComponent) SetV__InferenceComponentName(v string) *AWS_SageMaker_InferenceComponent {
	t.InferenceComponentName = cfz.V(v)
	return t
}

// Set__RuntimeConfig updates property "RuntimeConfig".
func (t *AWS_SageMaker_InferenceComponent) Set__RuntimeConfig(v cfz.Expression[AWS_SageMaker_InferenceComponent_InferenceComponentRuntimeConfig]) *AWS_SageMaker_InferenceComponent {
	t.RuntimeConfig = v
	return t
}

// SetV__RuntimeConfig updates property "RuntimeConfig".
func (t *AWS_SageMaker_InferenceComponent) SetV__RuntimeConfig(v AWS_SageMaker_InferenceComponent_InferenceComponentRuntimeConfig) *AWS_SageMaker_InferenceComponent {
	t.RuntimeConfig = cfz.V(v)
	return t
}

// Set__Specification updates property "Specification".
func (t *AWS_SageMaker_InferenceComponent) Set__Specification(v cfz.Expression[AWS_SageMaker_InferenceComponent_InferenceComponentSpecification]) *AWS_SageMaker_InferenceComponent {
	t.Specification = v
	return t
}

// SetV__Specification updates property "Specification".
func (t *AWS_SageMaker_InferenceComponent) SetV__Specification(v AWS_SageMaker_InferenceComponent_InferenceComponentSpecification) *AWS_SageMaker_InferenceComponent {
	t.Specification = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_InferenceComponent) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_InferenceComponent {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_InferenceComponent) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_InferenceComponent {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_InferenceComponent) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_InferenceComponent {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VariantName updates property "VariantName".
func (t *AWS_SageMaker_InferenceComponent) Set__VariantName(v cfz.Expression[string]) *AWS_SageMaker_InferenceComponent {
	t.VariantName = v
	return t
}

// SetV__VariantName updates property "VariantName".
func (t *AWS_SageMaker_InferenceComponent) SetV__VariantName(v string) *AWS_SageMaker_InferenceComponent {
	t.VariantName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_InferenceComponent) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_InferenceComponent) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.CreationTime))
}

// GetAtt__FailureReason returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FailureReason
func (t *AWS_SageMaker_InferenceComponent) GetAtt__FailureReason() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.FailureReason))
}

// GetAtt__InferenceComponentArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: InferenceComponentArn
func (t *AWS_SageMaker_InferenceComponent) GetAtt__InferenceComponentArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.InferenceComponentArn))
}

// GetAtt__InferenceComponentStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: InferenceComponentStatus
func (t *AWS_SageMaker_InferenceComponent) GetAtt__InferenceComponentStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.InferenceComponentStatus))
}

// GetAtt__LastModifiedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastModifiedTime
func (t *AWS_SageMaker_InferenceComponent) GetAtt__LastModifiedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.LastModifiedTime))
}

// GetAtt__RuntimeConfig_CurrentCopyCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RuntimeConfig.CurrentCopyCount
func (t *AWS_SageMaker_InferenceComponent) GetAtt__RuntimeConfig_CurrentCopyCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.RuntimeConfig_CurrentCopyCount))
}

// GetAtt__RuntimeConfig_DesiredCopyCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RuntimeConfig.DesiredCopyCount
func (t *AWS_SageMaker_InferenceComponent) GetAtt__RuntimeConfig_DesiredCopyCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.RuntimeConfig_DesiredCopyCount))
}

// GetAtt__Specification_Container_DeployedImage returns a $cfz.Expression[AWS_SageMaker_InferenceComponent_DeployedImage] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Specification.Container.DeployedImage
func (t *AWS_SageMaker_InferenceComponent) GetAtt__Specification_Container_DeployedImage() cfz.Expression[AWS_SageMaker_InferenceComponent_DeployedImage] {
	return cfz.GetAtt[AWS_SageMaker_InferenceComponent_DeployedImage](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.Specification_Container_DeployedImage))
}

// GetAtt__Specification_Container_DeployedImage_ResolutionTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Specification.Container.DeployedImage.ResolutionTime
func (t *AWS_SageMaker_InferenceComponent) GetAtt__Specification_Container_DeployedImage_ResolutionTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.Specification_Container_DeployedImage_ResolutionTime))
}

// GetAtt__Specification_Container_DeployedImage_ResolvedImage returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Specification.Container.DeployedImage.ResolvedImage
func (t *AWS_SageMaker_InferenceComponent) GetAtt__Specification_Container_DeployedImage_ResolvedImage() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.Specification_Container_DeployedImage_ResolvedImage))
}

// GetAtt__Specification_Container_DeployedImage_SpecifiedImage returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Specification.Container.DeployedImage.SpecifiedImage
func (t *AWS_SageMaker_InferenceComponent) GetAtt__Specification_Container_DeployedImage_SpecifiedImage() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_InferenceComponent__AttributesMap.Specification_Container_DeployedImage_SpecifiedImage))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FailureReason returns a conventionally configured output for an attribute of this resource.
// Attribute: FailureReason
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__FailureReason(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFailureReason", t.GetAtt__FailureReason())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__InferenceComponentArn returns a conventionally configured output for an attribute of this resource.
// Attribute: InferenceComponentArn
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__InferenceComponentArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttInferenceComponentArn", t.GetAtt__InferenceComponentArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__InferenceComponentStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: InferenceComponentStatus
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__InferenceComponentStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttInferenceComponentStatus", t.GetAtt__InferenceComponentStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastModifiedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastModifiedTime
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__LastModifiedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastModifiedTime", t.GetAtt__LastModifiedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RuntimeConfig_CurrentCopyCount returns a conventionally configured output for an attribute of this resource.
// Attribute: RuntimeConfig.CurrentCopyCount
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__RuntimeConfig_CurrentCopyCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRuntimeConfigCurrentCopyCount", t.GetAtt__RuntimeConfig_CurrentCopyCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RuntimeConfig_DesiredCopyCount returns a conventionally configured output for an attribute of this resource.
// Attribute: RuntimeConfig.DesiredCopyCount
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__RuntimeConfig_DesiredCopyCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRuntimeConfigDesiredCopyCount", t.GetAtt__RuntimeConfig_DesiredCopyCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Specification_Container_DeployedImage returns a conventionally configured output for an attribute of this resource.
// Attribute: Specification.Container.DeployedImage
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__Specification_Container_DeployedImage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSpecificationContainerDeployedImage", t.GetAtt__Specification_Container_DeployedImage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Specification_Container_DeployedImage_ResolutionTime returns a conventionally configured output for an attribute of this resource.
// Attribute: Specification.Container.DeployedImage.ResolutionTime
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__Specification_Container_DeployedImage_ResolutionTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSpecificationContainerDeployedImageResolutionTime", t.GetAtt__Specification_Container_DeployedImage_ResolutionTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Specification_Container_DeployedImage_ResolvedImage returns a conventionally configured output for an attribute of this resource.
// Attribute: Specification.Container.DeployedImage.ResolvedImage
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__Specification_Container_DeployedImage_ResolvedImage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSpecificationContainerDeployedImageResolvedImage", t.GetAtt__Specification_Container_DeployedImage_ResolvedImage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Specification_Container_DeployedImage_SpecifiedImage returns a conventionally configured output for an attribute of this resource.
// Attribute: Specification.Container.DeployedImage.SpecifiedImage
func (t *AWS_SageMaker_InferenceComponent) GetConventionalOutputAtt__Specification_Container_DeployedImage_SpecifiedImage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSpecificationContainerDeployedImageSpecifiedImage", t.GetAtt__Specification_Container_DeployedImage_SpecifiedImage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_InferenceComponent) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_InferenceComponent

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_InferenceComponent) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
