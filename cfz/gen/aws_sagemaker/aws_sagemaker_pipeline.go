// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_Pipeline)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_Pipeline)(nil)
)

const (
	// AWS_SageMaker_Pipeline__Type is the CloudFormation type for AWS::SageMaker::Pipeline.
	AWS_SageMaker_Pipeline__Type = "AWS::SageMaker::Pipeline"
)

var (
	// AWS_SageMaker_Pipeline__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::Pipeline.
	AWS_SageMaker_Pipeline__PropertiesMap = struct {
		ParallelismConfiguration string
		PipelineDefinition       string
		PipelineDescription      string
		PipelineDisplayName      string
		PipelineName             string
		RoleArn                  string
		Tags                     string
	}{
		ParallelismConfiguration: "ParallelismConfiguration",
		PipelineDefinition:       "PipelineDefinition",
		PipelineDescription:      "PipelineDescription",
		PipelineDisplayName:      "PipelineDisplayName",
		PipelineName:             "PipelineName",
		RoleArn:                  "RoleArn",
		Tags:                     "Tags",
	}

	// AWS_SageMaker_Pipeline__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::Pipeline.
	AWS_SageMaker_Pipeline__PropertiesSlice = []string{
		AWS_SageMaker_Pipeline__PropertiesMap.ParallelismConfiguration,
		AWS_SageMaker_Pipeline__PropertiesMap.PipelineDefinition,
		AWS_SageMaker_Pipeline__PropertiesMap.PipelineDescription,
		AWS_SageMaker_Pipeline__PropertiesMap.PipelineDisplayName,
		AWS_SageMaker_Pipeline__PropertiesMap.PipelineName,
		AWS_SageMaker_Pipeline__PropertiesMap.RoleArn,
		AWS_SageMaker_Pipeline__PropertiesMap.Tags,
	}
)

// AWS_SageMaker_Pipeline is a binding for AWS::SageMaker::Pipeline.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html
type AWS_SageMaker_Pipeline struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ParallelismConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-parallelismconfiguration
	ParallelismConfiguration cfz.Expression[AWS_SageMaker_Pipeline_ParallelismConfiguration] `json:"ParallelismConfiguration,omitempty"`

	// PipelineDefinition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-pipelinedefinition
	PipelineDefinition cfz.Expression[AWS_SageMaker_Pipeline_PipelineDefinition] `json:"PipelineDefinition,omitempty"`

	// PipelineDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-pipelinedescription
	PipelineDescription cfz.Expression[string] `json:"PipelineDescription,omitempty"`

	// PipelineDisplayName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-pipelinedisplayname
	PipelineDisplayName cfz.Expression[string] `json:"PipelineDisplayName,omitempty"`

	// PipelineName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-pipelinename
	PipelineName cfz.Expression[string] `json:"PipelineName,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-pipeline.html#cfn-sagemaker-pipeline-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_SageMaker_Pipeline initializes a new *AWS_SageMaker_Pipeline.
func New__AWS_SageMaker_Pipeline(logicalName string) *AWS_SageMaker_Pipeline {
	return &AWS_SageMaker_Pipeline{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_Pipeline) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_Pipeline) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_Pipeline) GetType() string {
	return AWS_SageMaker_Pipeline__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_Pipeline) Set__LogicalName(v string) *AWS_SageMaker_Pipeline {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_Pipeline) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_Pipeline {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_Pipeline) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_Pipeline {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_Pipeline) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_Pipeline {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_Pipeline) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_Pipeline {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_Pipeline) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_Pipeline {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_Pipeline) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_Pipeline {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ParallelismConfiguration updates property "ParallelismConfiguration".
func (t *AWS_SageMaker_Pipeline) Set__ParallelismConfiguration(v cfz.Expression[AWS_SageMaker_Pipeline_ParallelismConfiguration]) *AWS_SageMaker_Pipeline {
	t.ParallelismConfiguration = v
	return t
}

// SetV__ParallelismConfiguration updates property "ParallelismConfiguration".
func (t *AWS_SageMaker_Pipeline) SetV__ParallelismConfiguration(v AWS_SageMaker_Pipeline_ParallelismConfiguration) *AWS_SageMaker_Pipeline {
	t.ParallelismConfiguration = cfz.V(v)
	return t
}

// Set__PipelineDefinition updates property "PipelineDefinition".
func (t *AWS_SageMaker_Pipeline) Set__PipelineDefinition(v cfz.Expression[AWS_SageMaker_Pipeline_PipelineDefinition]) *AWS_SageMaker_Pipeline {
	t.PipelineDefinition = v
	return t
}

// SetV__PipelineDefinition updates property "PipelineDefinition".
func (t *AWS_SageMaker_Pipeline) SetV__PipelineDefinition(v AWS_SageMaker_Pipeline_PipelineDefinition) *AWS_SageMaker_Pipeline {
	t.PipelineDefinition = cfz.V(v)
	return t
}

// Set__PipelineDescription updates property "PipelineDescription".
func (t *AWS_SageMaker_Pipeline) Set__PipelineDescription(v cfz.Expression[string]) *AWS_SageMaker_Pipeline {
	t.PipelineDescription = v
	return t
}

// SetV__PipelineDescription updates property "PipelineDescription".
func (t *AWS_SageMaker_Pipeline) SetV__PipelineDescription(v string) *AWS_SageMaker_Pipeline {
	t.PipelineDescription = cfz.V(v)
	return t
}

// Set__PipelineDisplayName updates property "PipelineDisplayName".
func (t *AWS_SageMaker_Pipeline) Set__PipelineDisplayName(v cfz.Expression[string]) *AWS_SageMaker_Pipeline {
	t.PipelineDisplayName = v
	return t
}

// SetV__PipelineDisplayName updates property "PipelineDisplayName".
func (t *AWS_SageMaker_Pipeline) SetV__PipelineDisplayName(v string) *AWS_SageMaker_Pipeline {
	t.PipelineDisplayName = cfz.V(v)
	return t
}

// Set__PipelineName updates property "PipelineName".
func (t *AWS_SageMaker_Pipeline) Set__PipelineName(v cfz.Expression[string]) *AWS_SageMaker_Pipeline {
	t.PipelineName = v
	return t
}

// SetV__PipelineName updates property "PipelineName".
func (t *AWS_SageMaker_Pipeline) SetV__PipelineName(v string) *AWS_SageMaker_Pipeline {
	t.PipelineName = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_SageMaker_Pipeline) Set__RoleArn(v cfz.Expression[string]) *AWS_SageMaker_Pipeline {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_SageMaker_Pipeline) SetV__RoleArn(v string) *AWS_SageMaker_Pipeline {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_Pipeline) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_Pipeline {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_Pipeline) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_Pipeline {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_Pipeline) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_Pipeline {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_Pipeline) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_Pipeline) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_Pipeline) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_Pipeline

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_Pipeline) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
