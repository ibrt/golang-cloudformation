// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_MonitoringSchedule)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_MonitoringSchedule)(nil)
)

const (
	// AWS_SageMaker_MonitoringSchedule__Type is the CloudFormation type for AWS::SageMaker::MonitoringSchedule.
	AWS_SageMaker_MonitoringSchedule__Type = "AWS::SageMaker::MonitoringSchedule"
)

var (
	// AWS_SageMaker_MonitoringSchedule__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::MonitoringSchedule.
	AWS_SageMaker_MonitoringSchedule__AttributesMap = struct {
		CreationTime          string
		LastModifiedTime      string
		MonitoringScheduleArn string
	}{
		CreationTime:          "CreationTime",
		LastModifiedTime:      "LastModifiedTime",
		MonitoringScheduleArn: "MonitoringScheduleArn",
	}

	// AWS_SageMaker_MonitoringSchedule__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::MonitoringSchedule.
	AWS_SageMaker_MonitoringSchedule__AttributesSlice = []string{
		AWS_SageMaker_MonitoringSchedule__AttributesMap.CreationTime,
		AWS_SageMaker_MonitoringSchedule__AttributesMap.LastModifiedTime,
		AWS_SageMaker_MonitoringSchedule__AttributesMap.MonitoringScheduleArn,
	}
)

var (
	// AWS_SageMaker_MonitoringSchedule__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::MonitoringSchedule.
	AWS_SageMaker_MonitoringSchedule__PropertiesMap = struct {
		EndpointName                   string
		FailureReason                  string
		LastMonitoringExecutionSummary string
		MonitoringScheduleConfig       string
		MonitoringScheduleName         string
		MonitoringScheduleStatus       string
		Tags                           string
	}{
		EndpointName:                   "EndpointName",
		FailureReason:                  "FailureReason",
		LastMonitoringExecutionSummary: "LastMonitoringExecutionSummary",
		MonitoringScheduleConfig:       "MonitoringScheduleConfig",
		MonitoringScheduleName:         "MonitoringScheduleName",
		MonitoringScheduleStatus:       "MonitoringScheduleStatus",
		Tags:                           "Tags",
	}

	// AWS_SageMaker_MonitoringSchedule__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::MonitoringSchedule.
	AWS_SageMaker_MonitoringSchedule__PropertiesSlice = []string{
		AWS_SageMaker_MonitoringSchedule__PropertiesMap.EndpointName,
		AWS_SageMaker_MonitoringSchedule__PropertiesMap.FailureReason,
		AWS_SageMaker_MonitoringSchedule__PropertiesMap.LastMonitoringExecutionSummary,
		AWS_SageMaker_MonitoringSchedule__PropertiesMap.MonitoringScheduleConfig,
		AWS_SageMaker_MonitoringSchedule__PropertiesMap.MonitoringScheduleName,
		AWS_SageMaker_MonitoringSchedule__PropertiesMap.MonitoringScheduleStatus,
		AWS_SageMaker_MonitoringSchedule__PropertiesMap.Tags,
	}
)

// AWS_SageMaker_MonitoringSchedule is a binding for AWS::SageMaker::MonitoringSchedule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html
type AWS_SageMaker_MonitoringSchedule struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// EndpointName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-endpointname
	EndpointName cfz.Expression[string] `json:"EndpointName,omitempty"`

	// FailureReason is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-failurereason
	FailureReason cfz.Expression[string] `json:"FailureReason,omitempty"`

	// LastMonitoringExecutionSummary is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-lastmonitoringexecutionsummary
	LastMonitoringExecutionSummary cfz.Expression[AWS_SageMaker_MonitoringSchedule_MonitoringExecutionSummary] `json:"LastMonitoringExecutionSummary,omitempty"`

	// MonitoringScheduleConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringscheduleconfig
	MonitoringScheduleConfig cfz.Expression[AWS_SageMaker_MonitoringSchedule_MonitoringScheduleConfig] `json:"MonitoringScheduleConfig,omitempty"`

	// MonitoringScheduleName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulename
	MonitoringScheduleName cfz.Expression[string] `json:"MonitoringScheduleName,omitempty"`

	// MonitoringScheduleStatus is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-monitoringschedulestatus
	MonitoringScheduleStatus cfz.Expression[string] `json:"MonitoringScheduleStatus,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-monitoringschedule.html#cfn-sagemaker-monitoringschedule-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_SageMaker_MonitoringSchedule initializes a new *AWS_SageMaker_MonitoringSchedule.
func New__AWS_SageMaker_MonitoringSchedule(logicalName string) *AWS_SageMaker_MonitoringSchedule {
	return &AWS_SageMaker_MonitoringSchedule{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_MonitoringSchedule) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_MonitoringSchedule) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_MonitoringSchedule) GetType() string {
	return AWS_SageMaker_MonitoringSchedule__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_MonitoringSchedule) Set__LogicalName(v string) *AWS_SageMaker_MonitoringSchedule {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_MonitoringSchedule) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_MonitoringSchedule {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_MonitoringSchedule) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_MonitoringSchedule {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_MonitoringSchedule) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_MonitoringSchedule {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_MonitoringSchedule) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_MonitoringSchedule {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_MonitoringSchedule) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_MonitoringSchedule {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_MonitoringSchedule) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_MonitoringSchedule {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__EndpointName updates property "EndpointName".
func (t *AWS_SageMaker_MonitoringSchedule) Set__EndpointName(v cfz.Expression[string]) *AWS_SageMaker_MonitoringSchedule {
	t.EndpointName = v
	return t
}

// SetV__EndpointName updates property "EndpointName".
func (t *AWS_SageMaker_MonitoringSchedule) SetV__EndpointName(v string) *AWS_SageMaker_MonitoringSchedule {
	t.EndpointName = cfz.V(v)
	return t
}

// Set__FailureReason updates property "FailureReason".
func (t *AWS_SageMaker_MonitoringSchedule) Set__FailureReason(v cfz.Expression[string]) *AWS_SageMaker_MonitoringSchedule {
	t.FailureReason = v
	return t
}

// SetV__FailureReason updates property "FailureReason".
func (t *AWS_SageMaker_MonitoringSchedule) SetV__FailureReason(v string) *AWS_SageMaker_MonitoringSchedule {
	t.FailureReason = cfz.V(v)
	return t
}

// Set__LastMonitoringExecutionSummary updates property "LastMonitoringExecutionSummary".
func (t *AWS_SageMaker_MonitoringSchedule) Set__LastMonitoringExecutionSummary(v cfz.Expression[AWS_SageMaker_MonitoringSchedule_MonitoringExecutionSummary]) *AWS_SageMaker_MonitoringSchedule {
	t.LastMonitoringExecutionSummary = v
	return t
}

// SetV__LastMonitoringExecutionSummary updates property "LastMonitoringExecutionSummary".
func (t *AWS_SageMaker_MonitoringSchedule) SetV__LastMonitoringExecutionSummary(v AWS_SageMaker_MonitoringSchedule_MonitoringExecutionSummary) *AWS_SageMaker_MonitoringSchedule {
	t.LastMonitoringExecutionSummary = cfz.V(v)
	return t
}

// Set__MonitoringScheduleConfig updates property "MonitoringScheduleConfig".
func (t *AWS_SageMaker_MonitoringSchedule) Set__MonitoringScheduleConfig(v cfz.Expression[AWS_SageMaker_MonitoringSchedule_MonitoringScheduleConfig]) *AWS_SageMaker_MonitoringSchedule {
	t.MonitoringScheduleConfig = v
	return t
}

// SetV__MonitoringScheduleConfig updates property "MonitoringScheduleConfig".
func (t *AWS_SageMaker_MonitoringSchedule) SetV__MonitoringScheduleConfig(v AWS_SageMaker_MonitoringSchedule_MonitoringScheduleConfig) *AWS_SageMaker_MonitoringSchedule {
	t.MonitoringScheduleConfig = cfz.V(v)
	return t
}

// Set__MonitoringScheduleName updates property "MonitoringScheduleName".
func (t *AWS_SageMaker_MonitoringSchedule) Set__MonitoringScheduleName(v cfz.Expression[string]) *AWS_SageMaker_MonitoringSchedule {
	t.MonitoringScheduleName = v
	return t
}

// SetV__MonitoringScheduleName updates property "MonitoringScheduleName".
func (t *AWS_SageMaker_MonitoringSchedule) SetV__MonitoringScheduleName(v string) *AWS_SageMaker_MonitoringSchedule {
	t.MonitoringScheduleName = cfz.V(v)
	return t
}

// Set__MonitoringScheduleStatus updates property "MonitoringScheduleStatus".
func (t *AWS_SageMaker_MonitoringSchedule) Set__MonitoringScheduleStatus(v cfz.Expression[string]) *AWS_SageMaker_MonitoringSchedule {
	t.MonitoringScheduleStatus = v
	return t
}

// SetV__MonitoringScheduleStatus updates property "MonitoringScheduleStatus".
func (t *AWS_SageMaker_MonitoringSchedule) SetV__MonitoringScheduleStatus(v string) *AWS_SageMaker_MonitoringSchedule {
	t.MonitoringScheduleStatus = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_MonitoringSchedule) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_MonitoringSchedule {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_MonitoringSchedule) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_MonitoringSchedule {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_MonitoringSchedule) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_MonitoringSchedule {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_MonitoringSchedule) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_MonitoringSchedule) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_MonitoringSchedule__AttributesMap.CreationTime))
}

// GetAtt__LastModifiedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastModifiedTime
func (t *AWS_SageMaker_MonitoringSchedule) GetAtt__LastModifiedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_MonitoringSchedule__AttributesMap.LastModifiedTime))
}

// GetAtt__MonitoringScheduleArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MonitoringScheduleArn
func (t *AWS_SageMaker_MonitoringSchedule) GetAtt__MonitoringScheduleArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_MonitoringSchedule__AttributesMap.MonitoringScheduleArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_MonitoringSchedule) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_MonitoringSchedule) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastModifiedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastModifiedTime
func (t *AWS_SageMaker_MonitoringSchedule) GetConventionalOutputAtt__LastModifiedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastModifiedTime", t.GetAtt__LastModifiedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MonitoringScheduleArn returns a conventionally configured output for an attribute of this resource.
// Attribute: MonitoringScheduleArn
func (t *AWS_SageMaker_MonitoringSchedule) GetConventionalOutputAtt__MonitoringScheduleArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMonitoringScheduleArn", t.GetAtt__MonitoringScheduleArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_MonitoringSchedule) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_MonitoringSchedule

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_MonitoringSchedule) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
