// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_NotebookInstance)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_NotebookInstance)(nil)
)

const (
	// AWS_SageMaker_NotebookInstance__Type is the CloudFormation type for AWS::SageMaker::NotebookInstance.
	AWS_SageMaker_NotebookInstance__Type = "AWS::SageMaker::NotebookInstance"
)

var (
	// AWS_SageMaker_NotebookInstance__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::NotebookInstance.
	AWS_SageMaker_NotebookInstance__AttributesMap = struct {
		NotebookInstanceName string
	}{
		NotebookInstanceName: "NotebookInstanceName",
	}

	// AWS_SageMaker_NotebookInstance__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::NotebookInstance.
	AWS_SageMaker_NotebookInstance__AttributesSlice = []string{
		AWS_SageMaker_NotebookInstance__AttributesMap.NotebookInstanceName,
	}
)

var (
	// AWS_SageMaker_NotebookInstance__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::NotebookInstance.
	AWS_SageMaker_NotebookInstance__PropertiesMap = struct {
		AcceleratorTypes                     string
		AdditionalCodeRepositories           string
		DefaultCodeRepository                string
		DirectInternetAccess                 string
		InstanceMetadataServiceConfiguration string
		InstanceType                         string
		KmsKeyId                             string
		LifecycleConfigName                  string
		NotebookInstanceName                 string
		PlatformIdentifier                   string
		RoleArn                              string
		RootAccess                           string
		SecurityGroupIds                     string
		SubnetId                             string
		Tags                                 string
		VolumeSizeInGB                       string
	}{
		AcceleratorTypes:                     "AcceleratorTypes",
		AdditionalCodeRepositories:           "AdditionalCodeRepositories",
		DefaultCodeRepository:                "DefaultCodeRepository",
		DirectInternetAccess:                 "DirectInternetAccess",
		InstanceMetadataServiceConfiguration: "InstanceMetadataServiceConfiguration",
		InstanceType:                         "InstanceType",
		KmsKeyId:                             "KmsKeyId",
		LifecycleConfigName:                  "LifecycleConfigName",
		NotebookInstanceName:                 "NotebookInstanceName",
		PlatformIdentifier:                   "PlatformIdentifier",
		RoleArn:                              "RoleArn",
		RootAccess:                           "RootAccess",
		SecurityGroupIds:                     "SecurityGroupIds",
		SubnetId:                             "SubnetId",
		Tags:                                 "Tags",
		VolumeSizeInGB:                       "VolumeSizeInGB",
	}

	// AWS_SageMaker_NotebookInstance__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::NotebookInstance.
	AWS_SageMaker_NotebookInstance__PropertiesSlice = []string{
		AWS_SageMaker_NotebookInstance__PropertiesMap.AcceleratorTypes,
		AWS_SageMaker_NotebookInstance__PropertiesMap.AdditionalCodeRepositories,
		AWS_SageMaker_NotebookInstance__PropertiesMap.DefaultCodeRepository,
		AWS_SageMaker_NotebookInstance__PropertiesMap.DirectInternetAccess,
		AWS_SageMaker_NotebookInstance__PropertiesMap.InstanceMetadataServiceConfiguration,
		AWS_SageMaker_NotebookInstance__PropertiesMap.InstanceType,
		AWS_SageMaker_NotebookInstance__PropertiesMap.KmsKeyId,
		AWS_SageMaker_NotebookInstance__PropertiesMap.LifecycleConfigName,
		AWS_SageMaker_NotebookInstance__PropertiesMap.NotebookInstanceName,
		AWS_SageMaker_NotebookInstance__PropertiesMap.PlatformIdentifier,
		AWS_SageMaker_NotebookInstance__PropertiesMap.RoleArn,
		AWS_SageMaker_NotebookInstance__PropertiesMap.RootAccess,
		AWS_SageMaker_NotebookInstance__PropertiesMap.SecurityGroupIds,
		AWS_SageMaker_NotebookInstance__PropertiesMap.SubnetId,
		AWS_SageMaker_NotebookInstance__PropertiesMap.Tags,
		AWS_SageMaker_NotebookInstance__PropertiesMap.VolumeSizeInGB,
	}
)

// AWS_SageMaker_NotebookInstance is a binding for AWS::SageMaker::NotebookInstance.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html
type AWS_SageMaker_NotebookInstance struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AcceleratorTypes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-acceleratortypes
	AcceleratorTypes cfz.ExpressionSlice[string] `json:"AcceleratorTypes,omitempty"`

	// AdditionalCodeRepositories is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-additionalcoderepositories
	AdditionalCodeRepositories cfz.ExpressionSlice[string] `json:"AdditionalCodeRepositories,omitempty"`

	// DefaultCodeRepository is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-defaultcoderepository
	DefaultCodeRepository cfz.Expression[string] `json:"DefaultCodeRepository,omitempty"`

	// DirectInternetAccess is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-directinternetaccess
	DirectInternetAccess cfz.Expression[string] `json:"DirectInternetAccess,omitempty"`

	// InstanceMetadataServiceConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-instancemetadataserviceconfiguration
	InstanceMetadataServiceConfiguration cfz.Expression[AWS_SageMaker_NotebookInstance_InstanceMetadataServiceConfiguration] `json:"InstanceMetadataServiceConfiguration,omitempty"`

	// InstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-instancetype
	InstanceType cfz.Expression[string] `json:"InstanceType,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// LifecycleConfigName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-lifecycleconfigname
	LifecycleConfigName cfz.Expression[string] `json:"LifecycleConfigName,omitempty"`

	// NotebookInstanceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-notebookinstancename
	NotebookInstanceName cfz.Expression[string] `json:"NotebookInstanceName,omitempty"`

	// PlatformIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-platformidentifier
	PlatformIdentifier cfz.Expression[string] `json:"PlatformIdentifier,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// RootAccess is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-rootaccess
	RootAccess cfz.Expression[string] `json:"RootAccess,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// SubnetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-subnetid
	SubnetId cfz.Expression[string] `json:"SubnetId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VolumeSizeInGB is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-volumesizeingb
	VolumeSizeInGB cfz.Expression[int32] `json:"VolumeSizeInGB,omitempty"`
}

// New__AWS_SageMaker_NotebookInstance initializes a new *AWS_SageMaker_NotebookInstance.
func New__AWS_SageMaker_NotebookInstance(logicalName string) *AWS_SageMaker_NotebookInstance {
	return &AWS_SageMaker_NotebookInstance{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_NotebookInstance) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_NotebookInstance) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_NotebookInstance) GetType() string {
	return AWS_SageMaker_NotebookInstance__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_NotebookInstance) Set__LogicalName(v string) *AWS_SageMaker_NotebookInstance {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_NotebookInstance) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_NotebookInstance {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_NotebookInstance) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_NotebookInstance {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_NotebookInstance) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_NotebookInstance {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_NotebookInstance) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_NotebookInstance {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_NotebookInstance) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_NotebookInstance {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_NotebookInstance) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_NotebookInstance {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AcceleratorTypes updates property "AcceleratorTypes".
func (t *AWS_SageMaker_NotebookInstance) Set__AcceleratorTypes(v cfz.ExpressionSlice[string]) *AWS_SageMaker_NotebookInstance {
	t.AcceleratorTypes = v
	return t
}

// SetS__AcceleratorTypes updates property "AcceleratorTypes".
func (t *AWS_SageMaker_NotebookInstance) SetS__AcceleratorTypes(v ...cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.AcceleratorTypes = cfz.S(v...)
	return t
}

// SetSV__AcceleratorTypes updates property "AcceleratorTypes".
func (t *AWS_SageMaker_NotebookInstance) SetSV__AcceleratorTypes(v ...string) *AWS_SageMaker_NotebookInstance {
	t.AcceleratorTypes = cfz.SV(v...)
	return t
}

// Set__AdditionalCodeRepositories updates property "AdditionalCodeRepositories".
func (t *AWS_SageMaker_NotebookInstance) Set__AdditionalCodeRepositories(v cfz.ExpressionSlice[string]) *AWS_SageMaker_NotebookInstance {
	t.AdditionalCodeRepositories = v
	return t
}

// SetS__AdditionalCodeRepositories updates property "AdditionalCodeRepositories".
func (t *AWS_SageMaker_NotebookInstance) SetS__AdditionalCodeRepositories(v ...cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.AdditionalCodeRepositories = cfz.S(v...)
	return t
}

// SetSV__AdditionalCodeRepositories updates property "AdditionalCodeRepositories".
func (t *AWS_SageMaker_NotebookInstance) SetSV__AdditionalCodeRepositories(v ...string) *AWS_SageMaker_NotebookInstance {
	t.AdditionalCodeRepositories = cfz.SV(v...)
	return t
}

// Set__DefaultCodeRepository updates property "DefaultCodeRepository".
func (t *AWS_SageMaker_NotebookInstance) Set__DefaultCodeRepository(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.DefaultCodeRepository = v
	return t
}

// SetV__DefaultCodeRepository updates property "DefaultCodeRepository".
func (t *AWS_SageMaker_NotebookInstance) SetV__DefaultCodeRepository(v string) *AWS_SageMaker_NotebookInstance {
	t.DefaultCodeRepository = cfz.V(v)
	return t
}

// Set__DirectInternetAccess updates property "DirectInternetAccess".
func (t *AWS_SageMaker_NotebookInstance) Set__DirectInternetAccess(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.DirectInternetAccess = v
	return t
}

// SetV__DirectInternetAccess updates property "DirectInternetAccess".
func (t *AWS_SageMaker_NotebookInstance) SetV__DirectInternetAccess(v string) *AWS_SageMaker_NotebookInstance {
	t.DirectInternetAccess = cfz.V(v)
	return t
}

// Set__InstanceMetadataServiceConfiguration updates property "InstanceMetadataServiceConfiguration".
func (t *AWS_SageMaker_NotebookInstance) Set__InstanceMetadataServiceConfiguration(v cfz.Expression[AWS_SageMaker_NotebookInstance_InstanceMetadataServiceConfiguration]) *AWS_SageMaker_NotebookInstance {
	t.InstanceMetadataServiceConfiguration = v
	return t
}

// SetV__InstanceMetadataServiceConfiguration updates property "InstanceMetadataServiceConfiguration".
func (t *AWS_SageMaker_NotebookInstance) SetV__InstanceMetadataServiceConfiguration(v AWS_SageMaker_NotebookInstance_InstanceMetadataServiceConfiguration) *AWS_SageMaker_NotebookInstance {
	t.InstanceMetadataServiceConfiguration = cfz.V(v)
	return t
}

// Set__InstanceType updates property "InstanceType".
func (t *AWS_SageMaker_NotebookInstance) Set__InstanceType(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.InstanceType = v
	return t
}

// SetV__InstanceType updates property "InstanceType".
func (t *AWS_SageMaker_NotebookInstance) SetV__InstanceType(v string) *AWS_SageMaker_NotebookInstance {
	t.InstanceType = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_SageMaker_NotebookInstance) Set__KmsKeyId(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_SageMaker_NotebookInstance) SetV__KmsKeyId(v string) *AWS_SageMaker_NotebookInstance {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__LifecycleConfigName updates property "LifecycleConfigName".
func (t *AWS_SageMaker_NotebookInstance) Set__LifecycleConfigName(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.LifecycleConfigName = v
	return t
}

// SetV__LifecycleConfigName updates property "LifecycleConfigName".
func (t *AWS_SageMaker_NotebookInstance) SetV__LifecycleConfigName(v string) *AWS_SageMaker_NotebookInstance {
	t.LifecycleConfigName = cfz.V(v)
	return t
}

// Set__NotebookInstanceName updates property "NotebookInstanceName".
func (t *AWS_SageMaker_NotebookInstance) Set__NotebookInstanceName(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.NotebookInstanceName = v
	return t
}

// SetV__NotebookInstanceName updates property "NotebookInstanceName".
func (t *AWS_SageMaker_NotebookInstance) SetV__NotebookInstanceName(v string) *AWS_SageMaker_NotebookInstance {
	t.NotebookInstanceName = cfz.V(v)
	return t
}

// Set__PlatformIdentifier updates property "PlatformIdentifier".
func (t *AWS_SageMaker_NotebookInstance) Set__PlatformIdentifier(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.PlatformIdentifier = v
	return t
}

// SetV__PlatformIdentifier updates property "PlatformIdentifier".
func (t *AWS_SageMaker_NotebookInstance) SetV__PlatformIdentifier(v string) *AWS_SageMaker_NotebookInstance {
	t.PlatformIdentifier = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_SageMaker_NotebookInstance) Set__RoleArn(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_SageMaker_NotebookInstance) SetV__RoleArn(v string) *AWS_SageMaker_NotebookInstance {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__RootAccess updates property "RootAccess".
func (t *AWS_SageMaker_NotebookInstance) Set__RootAccess(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.RootAccess = v
	return t
}

// SetV__RootAccess updates property "RootAccess".
func (t *AWS_SageMaker_NotebookInstance) SetV__RootAccess(v string) *AWS_SageMaker_NotebookInstance {
	t.RootAccess = cfz.V(v)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_SageMaker_NotebookInstance) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_SageMaker_NotebookInstance {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_SageMaker_NotebookInstance) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_SageMaker_NotebookInstance) SetSV__SecurityGroupIds(v ...string) *AWS_SageMaker_NotebookInstance {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__SubnetId updates property "SubnetId".
func (t *AWS_SageMaker_NotebookInstance) Set__SubnetId(v cfz.Expression[string]) *AWS_SageMaker_NotebookInstance {
	t.SubnetId = v
	return t
}

// SetV__SubnetId updates property "SubnetId".
func (t *AWS_SageMaker_NotebookInstance) SetV__SubnetId(v string) *AWS_SageMaker_NotebookInstance {
	t.SubnetId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_NotebookInstance) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_NotebookInstance {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_NotebookInstance) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_NotebookInstance {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_NotebookInstance) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_NotebookInstance {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VolumeSizeInGB updates property "VolumeSizeInGB".
func (t *AWS_SageMaker_NotebookInstance) Set__VolumeSizeInGB(v cfz.Expression[int32]) *AWS_SageMaker_NotebookInstance {
	t.VolumeSizeInGB = v
	return t
}

// SetV__VolumeSizeInGB updates property "VolumeSizeInGB".
func (t *AWS_SageMaker_NotebookInstance) SetV__VolumeSizeInGB(v int32) *AWS_SageMaker_NotebookInstance {
	t.VolumeSizeInGB = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_NotebookInstance) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__NotebookInstanceName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NotebookInstanceName
func (t *AWS_SageMaker_NotebookInstance) GetAtt__NotebookInstanceName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_NotebookInstance__AttributesMap.NotebookInstanceName))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_NotebookInstance) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NotebookInstanceName returns a conventionally configured output for an attribute of this resource.
// Attribute: NotebookInstanceName
func (t *AWS_SageMaker_NotebookInstance) GetConventionalOutputAtt__NotebookInstanceName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNotebookInstanceName", t.GetAtt__NotebookInstanceName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_NotebookInstance) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_NotebookInstance

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_NotebookInstance) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
