// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_Model)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_Model)(nil)
)

const (
	// AWS_SageMaker_Model__Type is the CloudFormation type for AWS::SageMaker::Model.
	AWS_SageMaker_Model__Type = "AWS::SageMaker::Model"
)

var (
	// AWS_SageMaker_Model__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::Model.
	AWS_SageMaker_Model__AttributesMap = struct {
		ModelName string
	}{
		ModelName: "ModelName",
	}

	// AWS_SageMaker_Model__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::Model.
	AWS_SageMaker_Model__AttributesSlice = []string{
		AWS_SageMaker_Model__AttributesMap.ModelName,
	}
)

var (
	// AWS_SageMaker_Model__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::Model.
	AWS_SageMaker_Model__PropertiesMap = struct {
		Containers               string
		EnableNetworkIsolation   string
		ExecutionRoleArn         string
		InferenceExecutionConfig string
		ModelName                string
		PrimaryContainer         string
		Tags                     string
		VpcConfig                string
	}{
		Containers:               "Containers",
		EnableNetworkIsolation:   "EnableNetworkIsolation",
		ExecutionRoleArn:         "ExecutionRoleArn",
		InferenceExecutionConfig: "InferenceExecutionConfig",
		ModelName:                "ModelName",
		PrimaryContainer:         "PrimaryContainer",
		Tags:                     "Tags",
		VpcConfig:                "VpcConfig",
	}

	// AWS_SageMaker_Model__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::Model.
	AWS_SageMaker_Model__PropertiesSlice = []string{
		AWS_SageMaker_Model__PropertiesMap.Containers,
		AWS_SageMaker_Model__PropertiesMap.EnableNetworkIsolation,
		AWS_SageMaker_Model__PropertiesMap.ExecutionRoleArn,
		AWS_SageMaker_Model__PropertiesMap.InferenceExecutionConfig,
		AWS_SageMaker_Model__PropertiesMap.ModelName,
		AWS_SageMaker_Model__PropertiesMap.PrimaryContainer,
		AWS_SageMaker_Model__PropertiesMap.Tags,
		AWS_SageMaker_Model__PropertiesMap.VpcConfig,
	}
)

// AWS_SageMaker_Model is a binding for AWS::SageMaker::Model.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html
type AWS_SageMaker_Model struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Containers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-containers
	Containers cfz.ExpressionSlice[AWS_SageMaker_Model_ContainerDefinition] `json:"Containers,omitempty"`

	// EnableNetworkIsolation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-enablenetworkisolation
	EnableNetworkIsolation cfz.Expression[bool] `json:"EnableNetworkIsolation,omitempty"`

	// ExecutionRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-executionrolearn
	ExecutionRoleArn cfz.Expression[string] `json:"ExecutionRoleArn,omitempty"`

	// InferenceExecutionConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-inferenceexecutionconfig
	InferenceExecutionConfig cfz.Expression[AWS_SageMaker_Model_InferenceExecutionConfig] `json:"InferenceExecutionConfig,omitempty"`

	// ModelName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-modelname
	ModelName cfz.Expression[string] `json:"ModelName,omitempty"`

	// PrimaryContainer is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-primarycontainer
	PrimaryContainer cfz.Expression[AWS_SageMaker_Model_ContainerDefinition] `json:"PrimaryContainer,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-model.html#cfn-sagemaker-model-vpcconfig
	VpcConfig cfz.Expression[AWS_SageMaker_Model_VpcConfig] `json:"VpcConfig,omitempty"`
}

// New__AWS_SageMaker_Model initializes a new *AWS_SageMaker_Model.
func New__AWS_SageMaker_Model(logicalName string) *AWS_SageMaker_Model {
	return &AWS_SageMaker_Model{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_Model) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_Model) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_Model) GetType() string {
	return AWS_SageMaker_Model__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_Model) Set__LogicalName(v string) *AWS_SageMaker_Model {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_Model) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_Model {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_Model) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_Model {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_Model) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_Model {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_Model) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_Model {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_Model) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_Model {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_Model) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_Model {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Containers updates property "Containers".
func (t *AWS_SageMaker_Model) Set__Containers(v cfz.ExpressionSlice[AWS_SageMaker_Model_ContainerDefinition]) *AWS_SageMaker_Model {
	t.Containers = v
	return t
}

// SetS__Containers updates property "Containers".
func (t *AWS_SageMaker_Model) SetS__Containers(v ...cfz.Expression[AWS_SageMaker_Model_ContainerDefinition]) *AWS_SageMaker_Model {
	t.Containers = cfz.S(v...)
	return t
}

// SetSV__Containers updates property "Containers".
func (t *AWS_SageMaker_Model) SetSV__Containers(v ...AWS_SageMaker_Model_ContainerDefinition) *AWS_SageMaker_Model {
	t.Containers = cfz.SV(v...)
	return t
}

// Set__EnableNetworkIsolation updates property "EnableNetworkIsolation".
func (t *AWS_SageMaker_Model) Set__EnableNetworkIsolation(v cfz.Expression[bool]) *AWS_SageMaker_Model {
	t.EnableNetworkIsolation = v
	return t
}

// SetV__EnableNetworkIsolation updates property "EnableNetworkIsolation".
func (t *AWS_SageMaker_Model) SetV__EnableNetworkIsolation(v bool) *AWS_SageMaker_Model {
	t.EnableNetworkIsolation = cfz.V(v)
	return t
}

// Set__ExecutionRoleArn updates property "ExecutionRoleArn".
func (t *AWS_SageMaker_Model) Set__ExecutionRoleArn(v cfz.Expression[string]) *AWS_SageMaker_Model {
	t.ExecutionRoleArn = v
	return t
}

// SetV__ExecutionRoleArn updates property "ExecutionRoleArn".
func (t *AWS_SageMaker_Model) SetV__ExecutionRoleArn(v string) *AWS_SageMaker_Model {
	t.ExecutionRoleArn = cfz.V(v)
	return t
}

// Set__InferenceExecutionConfig updates property "InferenceExecutionConfig".
func (t *AWS_SageMaker_Model) Set__InferenceExecutionConfig(v cfz.Expression[AWS_SageMaker_Model_InferenceExecutionConfig]) *AWS_SageMaker_Model {
	t.InferenceExecutionConfig = v
	return t
}

// SetV__InferenceExecutionConfig updates property "InferenceExecutionConfig".
func (t *AWS_SageMaker_Model) SetV__InferenceExecutionConfig(v AWS_SageMaker_Model_InferenceExecutionConfig) *AWS_SageMaker_Model {
	t.InferenceExecutionConfig = cfz.V(v)
	return t
}

// Set__ModelName updates property "ModelName".
func (t *AWS_SageMaker_Model) Set__ModelName(v cfz.Expression[string]) *AWS_SageMaker_Model {
	t.ModelName = v
	return t
}

// SetV__ModelName updates property "ModelName".
func (t *AWS_SageMaker_Model) SetV__ModelName(v string) *AWS_SageMaker_Model {
	t.ModelName = cfz.V(v)
	return t
}

// Set__PrimaryContainer updates property "PrimaryContainer".
func (t *AWS_SageMaker_Model) Set__PrimaryContainer(v cfz.Expression[AWS_SageMaker_Model_ContainerDefinition]) *AWS_SageMaker_Model {
	t.PrimaryContainer = v
	return t
}

// SetV__PrimaryContainer updates property "PrimaryContainer".
func (t *AWS_SageMaker_Model) SetV__PrimaryContainer(v AWS_SageMaker_Model_ContainerDefinition) *AWS_SageMaker_Model {
	t.PrimaryContainer = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_Model) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_Model {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_Model) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_Model {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_Model) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_Model {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcConfig updates property "VpcConfig".
func (t *AWS_SageMaker_Model) Set__VpcConfig(v cfz.Expression[AWS_SageMaker_Model_VpcConfig]) *AWS_SageMaker_Model {
	t.VpcConfig = v
	return t
}

// SetV__VpcConfig updates property "VpcConfig".
func (t *AWS_SageMaker_Model) SetV__VpcConfig(v AWS_SageMaker_Model_VpcConfig) *AWS_SageMaker_Model {
	t.VpcConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_Model) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ModelName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ModelName
func (t *AWS_SageMaker_Model) GetAtt__ModelName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_Model__AttributesMap.ModelName))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_Model) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ModelName returns a conventionally configured output for an attribute of this resource.
// Attribute: ModelName
func (t *AWS_SageMaker_Model) GetConventionalOutputAtt__ModelName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttModelName", t.GetAtt__ModelName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_Model) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_Model

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_Model) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
