// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sagemaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SageMaker_ModelPackageGroup)(nil)
	_ cfz.Resource                   = (*AWS_SageMaker_ModelPackageGroup)(nil)
)

const (
	// AWS_SageMaker_ModelPackageGroup__Type is the CloudFormation type for AWS::SageMaker::ModelPackageGroup.
	AWS_SageMaker_ModelPackageGroup__Type = "AWS::SageMaker::ModelPackageGroup"
)

var (
	// AWS_SageMaker_ModelPackageGroup__AttributesMap reports all the CloudFormation attributes for AWS::SageMaker::ModelPackageGroup.
	AWS_SageMaker_ModelPackageGroup__AttributesMap = struct {
		CreationTime            string
		ModelPackageGroupArn    string
		ModelPackageGroupStatus string
	}{
		CreationTime:            "CreationTime",
		ModelPackageGroupArn:    "ModelPackageGroupArn",
		ModelPackageGroupStatus: "ModelPackageGroupStatus",
	}

	// AWS_SageMaker_ModelPackageGroup__AttributesSlice reports all the CloudFormation attributes for AWS::SageMaker::ModelPackageGroup.
	AWS_SageMaker_ModelPackageGroup__AttributesSlice = []string{
		AWS_SageMaker_ModelPackageGroup__AttributesMap.CreationTime,
		AWS_SageMaker_ModelPackageGroup__AttributesMap.ModelPackageGroupArn,
		AWS_SageMaker_ModelPackageGroup__AttributesMap.ModelPackageGroupStatus,
	}
)

var (
	// AWS_SageMaker_ModelPackageGroup__PropertiesMap reports all the CloudFormation properties for AWS::SageMaker::ModelPackageGroup.
	AWS_SageMaker_ModelPackageGroup__PropertiesMap = struct {
		ModelPackageGroupDescription string
		ModelPackageGroupName        string
		ModelPackageGroupPolicy      string
		Tags                         string
	}{
		ModelPackageGroupDescription: "ModelPackageGroupDescription",
		ModelPackageGroupName:        "ModelPackageGroupName",
		ModelPackageGroupPolicy:      "ModelPackageGroupPolicy",
		Tags:                         "Tags",
	}

	// AWS_SageMaker_ModelPackageGroup__PropertiesSlice reports all the CloudFormation properties for AWS::SageMaker::ModelPackageGroup.
	AWS_SageMaker_ModelPackageGroup__PropertiesSlice = []string{
		AWS_SageMaker_ModelPackageGroup__PropertiesMap.ModelPackageGroupDescription,
		AWS_SageMaker_ModelPackageGroup__PropertiesMap.ModelPackageGroupName,
		AWS_SageMaker_ModelPackageGroup__PropertiesMap.ModelPackageGroupPolicy,
		AWS_SageMaker_ModelPackageGroup__PropertiesMap.Tags,
	}
)

// AWS_SageMaker_ModelPackageGroup is a binding for AWS::SageMaker::ModelPackageGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html
type AWS_SageMaker_ModelPackageGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ModelPackageGroupDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html#cfn-sagemaker-modelpackagegroup-modelpackagegroupdescription
	ModelPackageGroupDescription cfz.Expression[string] `json:"ModelPackageGroupDescription,omitempty"`

	// ModelPackageGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html#cfn-sagemaker-modelpackagegroup-modelpackagegroupname
	ModelPackageGroupName cfz.Expression[string] `json:"ModelPackageGroupName,omitempty"`

	// ModelPackageGroupPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html#cfn-sagemaker-modelpackagegroup-modelpackagegrouppolicy
	ModelPackageGroupPolicy cfz.Expression[json.RawMessage] `json:"ModelPackageGroupPolicy,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-modelpackagegroup.html#cfn-sagemaker-modelpackagegroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_SageMaker_ModelPackageGroup initializes a new *AWS_SageMaker_ModelPackageGroup.
func New__AWS_SageMaker_ModelPackageGroup(logicalName string) *AWS_SageMaker_ModelPackageGroup {
	return &AWS_SageMaker_ModelPackageGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SageMaker_ModelPackageGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SageMaker_ModelPackageGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SageMaker_ModelPackageGroup) GetType() string {
	return AWS_SageMaker_ModelPackageGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SageMaker_ModelPackageGroup) Set__LogicalName(v string) *AWS_SageMaker_ModelPackageGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SageMaker_ModelPackageGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SageMaker_ModelPackageGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SageMaker_ModelPackageGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SageMaker_ModelPackageGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SageMaker_ModelPackageGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SageMaker_ModelPackageGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SageMaker_ModelPackageGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SageMaker_ModelPackageGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SageMaker_ModelPackageGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_SageMaker_ModelPackageGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SageMaker_ModelPackageGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_SageMaker_ModelPackageGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ModelPackageGroupDescription updates property "ModelPackageGroupDescription".
func (t *AWS_SageMaker_ModelPackageGroup) Set__ModelPackageGroupDescription(v cfz.Expression[string]) *AWS_SageMaker_ModelPackageGroup {
	t.ModelPackageGroupDescription = v
	return t
}

// SetV__ModelPackageGroupDescription updates property "ModelPackageGroupDescription".
func (t *AWS_SageMaker_ModelPackageGroup) SetV__ModelPackageGroupDescription(v string) *AWS_SageMaker_ModelPackageGroup {
	t.ModelPackageGroupDescription = cfz.V(v)
	return t
}

// Set__ModelPackageGroupName updates property "ModelPackageGroupName".
func (t *AWS_SageMaker_ModelPackageGroup) Set__ModelPackageGroupName(v cfz.Expression[string]) *AWS_SageMaker_ModelPackageGroup {
	t.ModelPackageGroupName = v
	return t
}

// SetV__ModelPackageGroupName updates property "ModelPackageGroupName".
func (t *AWS_SageMaker_ModelPackageGroup) SetV__ModelPackageGroupName(v string) *AWS_SageMaker_ModelPackageGroup {
	t.ModelPackageGroupName = cfz.V(v)
	return t
}

// Set__ModelPackageGroupPolicy updates property "ModelPackageGroupPolicy".
func (t *AWS_SageMaker_ModelPackageGroup) Set__ModelPackageGroupPolicy(v cfz.Expression[json.RawMessage]) *AWS_SageMaker_ModelPackageGroup {
	t.ModelPackageGroupPolicy = v
	return t
}

// SetV__ModelPackageGroupPolicy updates property "ModelPackageGroupPolicy".
func (t *AWS_SageMaker_ModelPackageGroup) SetV__ModelPackageGroupPolicy(v json.RawMessage) *AWS_SageMaker_ModelPackageGroup {
	t.ModelPackageGroupPolicy = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SageMaker_ModelPackageGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SageMaker_ModelPackageGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SageMaker_ModelPackageGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SageMaker_ModelPackageGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SageMaker_ModelPackageGroup) SetSV__Tags(v ...cfz.Tag) *AWS_SageMaker_ModelPackageGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SageMaker_ModelPackageGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_ModelPackageGroup) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_ModelPackageGroup__AttributesMap.CreationTime))
}

// GetAtt__ModelPackageGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ModelPackageGroupArn
func (t *AWS_SageMaker_ModelPackageGroup) GetAtt__ModelPackageGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_ModelPackageGroup__AttributesMap.ModelPackageGroupArn))
}

// GetAtt__ModelPackageGroupStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ModelPackageGroupStatus
func (t *AWS_SageMaker_ModelPackageGroup) GetAtt__ModelPackageGroupStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SageMaker_ModelPackageGroup__AttributesMap.ModelPackageGroupStatus))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SageMaker_ModelPackageGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_SageMaker_ModelPackageGroup) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ModelPackageGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ModelPackageGroupArn
func (t *AWS_SageMaker_ModelPackageGroup) GetConventionalOutputAtt__ModelPackageGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttModelPackageGroupArn", t.GetAtt__ModelPackageGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ModelPackageGroupStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: ModelPackageGroupStatus
func (t *AWS_SageMaker_ModelPackageGroup) GetConventionalOutputAtt__ModelPackageGroupStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttModelPackageGroupStatus", t.GetAtt__ModelPackageGroupStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SageMaker_ModelPackageGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SageMaker_ModelPackageGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SageMaker_ModelPackageGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
