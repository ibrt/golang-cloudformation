// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_location

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Location_PlaceIndex)(nil)
	_ cfz.Resource                   = (*AWS_Location_PlaceIndex)(nil)
)

const (
	// AWS_Location_PlaceIndex__Type is the CloudFormation type for AWS::Location::PlaceIndex.
	AWS_Location_PlaceIndex__Type = "AWS::Location::PlaceIndex"
)

var (
	// AWS_Location_PlaceIndex__AttributesMap reports all the CloudFormation attributes for AWS::Location::PlaceIndex.
	AWS_Location_PlaceIndex__AttributesMap = struct {
		Arn        string
		CreateTime string
		IndexArn   string
		UpdateTime string
	}{
		Arn:        "Arn",
		CreateTime: "CreateTime",
		IndexArn:   "IndexArn",
		UpdateTime: "UpdateTime",
	}

	// AWS_Location_PlaceIndex__AttributesSlice reports all the CloudFormation attributes for AWS::Location::PlaceIndex.
	AWS_Location_PlaceIndex__AttributesSlice = []string{
		AWS_Location_PlaceIndex__AttributesMap.Arn,
		AWS_Location_PlaceIndex__AttributesMap.CreateTime,
		AWS_Location_PlaceIndex__AttributesMap.IndexArn,
		AWS_Location_PlaceIndex__AttributesMap.UpdateTime,
	}
)

var (
	// AWS_Location_PlaceIndex__PropertiesMap reports all the CloudFormation properties for AWS::Location::PlaceIndex.
	AWS_Location_PlaceIndex__PropertiesMap = struct {
		DataSource              string
		DataSourceConfiguration string
		Description             string
		IndexName               string
		PricingPlan             string
		Tags                    string
	}{
		DataSource:              "DataSource",
		DataSourceConfiguration: "DataSourceConfiguration",
		Description:             "Description",
		IndexName:               "IndexName",
		PricingPlan:             "PricingPlan",
		Tags:                    "Tags",
	}

	// AWS_Location_PlaceIndex__PropertiesSlice reports all the CloudFormation properties for AWS::Location::PlaceIndex.
	AWS_Location_PlaceIndex__PropertiesSlice = []string{
		AWS_Location_PlaceIndex__PropertiesMap.DataSource,
		AWS_Location_PlaceIndex__PropertiesMap.DataSourceConfiguration,
		AWS_Location_PlaceIndex__PropertiesMap.Description,
		AWS_Location_PlaceIndex__PropertiesMap.IndexName,
		AWS_Location_PlaceIndex__PropertiesMap.PricingPlan,
		AWS_Location_PlaceIndex__PropertiesMap.Tags,
	}
)

// AWS_Location_PlaceIndex is a binding for AWS::Location::PlaceIndex.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html
type AWS_Location_PlaceIndex struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DataSource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-datasource
	DataSource cfz.Expression[string] `json:"DataSource,omitempty"`

	// DataSourceConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-datasourceconfiguration
	DataSourceConfiguration cfz.Expression[AWS_Location_PlaceIndex_DataSourceConfiguration] `json:"DataSourceConfiguration,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// IndexName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-indexname
	IndexName cfz.Expression[string] `json:"IndexName,omitempty"`

	// PricingPlan is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-pricingplan
	PricingPlan cfz.Expression[string] `json:"PricingPlan,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-placeindex.html#cfn-location-placeindex-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Location_PlaceIndex initializes a new *AWS_Location_PlaceIndex.
func New__AWS_Location_PlaceIndex(logicalName string) *AWS_Location_PlaceIndex {
	return &AWS_Location_PlaceIndex{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Location_PlaceIndex) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Location_PlaceIndex) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Location_PlaceIndex) GetType() string {
	return AWS_Location_PlaceIndex__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Location_PlaceIndex) Set__LogicalName(v string) *AWS_Location_PlaceIndex {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Location_PlaceIndex) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Location_PlaceIndex {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Location_PlaceIndex) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Location_PlaceIndex {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Location_PlaceIndex) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Location_PlaceIndex {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Location_PlaceIndex) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Location_PlaceIndex {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Location_PlaceIndex) Set__RequestedOutputs(v []cfz.Output) *AWS_Location_PlaceIndex {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Location_PlaceIndex) Add__RequestedOutputs(v ...cfz.Output) *AWS_Location_PlaceIndex {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DataSource updates property "DataSource".
func (t *AWS_Location_PlaceIndex) Set__DataSource(v cfz.Expression[string]) *AWS_Location_PlaceIndex {
	t.DataSource = v
	return t
}

// SetV__DataSource updates property "DataSource".
func (t *AWS_Location_PlaceIndex) SetV__DataSource(v string) *AWS_Location_PlaceIndex {
	t.DataSource = cfz.V(v)
	return t
}

// Set__DataSourceConfiguration updates property "DataSourceConfiguration".
func (t *AWS_Location_PlaceIndex) Set__DataSourceConfiguration(v cfz.Expression[AWS_Location_PlaceIndex_DataSourceConfiguration]) *AWS_Location_PlaceIndex {
	t.DataSourceConfiguration = v
	return t
}

// SetV__DataSourceConfiguration updates property "DataSourceConfiguration".
func (t *AWS_Location_PlaceIndex) SetV__DataSourceConfiguration(v AWS_Location_PlaceIndex_DataSourceConfiguration) *AWS_Location_PlaceIndex {
	t.DataSourceConfiguration = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Location_PlaceIndex) Set__Description(v cfz.Expression[string]) *AWS_Location_PlaceIndex {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Location_PlaceIndex) SetV__Description(v string) *AWS_Location_PlaceIndex {
	t.Description = cfz.V(v)
	return t
}

// Set__IndexName updates property "IndexName".
func (t *AWS_Location_PlaceIndex) Set__IndexName(v cfz.Expression[string]) *AWS_Location_PlaceIndex {
	t.IndexName = v
	return t
}

// SetV__IndexName updates property "IndexName".
func (t *AWS_Location_PlaceIndex) SetV__IndexName(v string) *AWS_Location_PlaceIndex {
	t.IndexName = cfz.V(v)
	return t
}

// Set__PricingPlan updates property "PricingPlan".
func (t *AWS_Location_PlaceIndex) Set__PricingPlan(v cfz.Expression[string]) *AWS_Location_PlaceIndex {
	t.PricingPlan = v
	return t
}

// SetV__PricingPlan updates property "PricingPlan".
func (t *AWS_Location_PlaceIndex) SetV__PricingPlan(v string) *AWS_Location_PlaceIndex {
	t.PricingPlan = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Location_PlaceIndex) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Location_PlaceIndex {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Location_PlaceIndex) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Location_PlaceIndex {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Location_PlaceIndex) SetSV__Tags(v ...cfz.Tag) *AWS_Location_PlaceIndex {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Location_PlaceIndex) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Location_PlaceIndex) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Location_PlaceIndex__AttributesMap.Arn))
}

// GetAtt__CreateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreateTime
func (t *AWS_Location_PlaceIndex) GetAtt__CreateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Location_PlaceIndex__AttributesMap.CreateTime))
}

// GetAtt__IndexArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IndexArn
func (t *AWS_Location_PlaceIndex) GetAtt__IndexArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Location_PlaceIndex__AttributesMap.IndexArn))
}

// GetAtt__UpdateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdateTime
func (t *AWS_Location_PlaceIndex) GetAtt__UpdateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Location_PlaceIndex__AttributesMap.UpdateTime))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Location_PlaceIndex) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Location_PlaceIndex) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreateTime
func (t *AWS_Location_PlaceIndex) GetConventionalOutputAtt__CreateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreateTime", t.GetAtt__CreateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IndexArn returns a conventionally configured output for an attribute of this resource.
// Attribute: IndexArn
func (t *AWS_Location_PlaceIndex) GetConventionalOutputAtt__IndexArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIndexArn", t.GetAtt__IndexArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdateTime
func (t *AWS_Location_PlaceIndex) GetConventionalOutputAtt__UpdateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdateTime", t.GetAtt__UpdateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Location_PlaceIndex) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Location_PlaceIndex

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Location_PlaceIndex) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
