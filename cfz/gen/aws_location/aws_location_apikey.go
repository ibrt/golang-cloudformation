// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_location

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Location_APIKey)(nil)
	_ cfz.Resource                   = (*AWS_Location_APIKey)(nil)
)

const (
	// AWS_Location_APIKey__Type is the CloudFormation type for AWS::Location::APIKey.
	AWS_Location_APIKey__Type = "AWS::Location::APIKey"
)

var (
	// AWS_Location_APIKey__AttributesMap reports all the CloudFormation attributes for AWS::Location::APIKey.
	AWS_Location_APIKey__AttributesMap = struct {
		Arn        string
		CreateTime string
		KeyArn     string
		UpdateTime string
	}{
		Arn:        "Arn",
		CreateTime: "CreateTime",
		KeyArn:     "KeyArn",
		UpdateTime: "UpdateTime",
	}

	// AWS_Location_APIKey__AttributesSlice reports all the CloudFormation attributes for AWS::Location::APIKey.
	AWS_Location_APIKey__AttributesSlice = []string{
		AWS_Location_APIKey__AttributesMap.Arn,
		AWS_Location_APIKey__AttributesMap.CreateTime,
		AWS_Location_APIKey__AttributesMap.KeyArn,
		AWS_Location_APIKey__AttributesMap.UpdateTime,
	}
)

var (
	// AWS_Location_APIKey__PropertiesMap reports all the CloudFormation properties for AWS::Location::APIKey.
	AWS_Location_APIKey__PropertiesMap = struct {
		Description  string
		ExpireTime   string
		ForceDelete  string
		ForceUpdate  string
		KeyName      string
		NoExpiry     string
		Restrictions string
		Tags         string
	}{
		Description:  "Description",
		ExpireTime:   "ExpireTime",
		ForceDelete:  "ForceDelete",
		ForceUpdate:  "ForceUpdate",
		KeyName:      "KeyName",
		NoExpiry:     "NoExpiry",
		Restrictions: "Restrictions",
		Tags:         "Tags",
	}

	// AWS_Location_APIKey__PropertiesSlice reports all the CloudFormation properties for AWS::Location::APIKey.
	AWS_Location_APIKey__PropertiesSlice = []string{
		AWS_Location_APIKey__PropertiesMap.Description,
		AWS_Location_APIKey__PropertiesMap.ExpireTime,
		AWS_Location_APIKey__PropertiesMap.ForceDelete,
		AWS_Location_APIKey__PropertiesMap.ForceUpdate,
		AWS_Location_APIKey__PropertiesMap.KeyName,
		AWS_Location_APIKey__PropertiesMap.NoExpiry,
		AWS_Location_APIKey__PropertiesMap.Restrictions,
		AWS_Location_APIKey__PropertiesMap.Tags,
	}
)

// AWS_Location_APIKey is a binding for AWS::Location::APIKey.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html
type AWS_Location_APIKey struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// ExpireTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-expiretime
	ExpireTime cfz.Expression[string] `json:"ExpireTime,omitempty"`

	// ForceDelete is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-forcedelete
	ForceDelete cfz.Expression[bool] `json:"ForceDelete,omitempty"`

	// ForceUpdate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-forceupdate
	ForceUpdate cfz.Expression[bool] `json:"ForceUpdate,omitempty"`

	// KeyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-keyname
	KeyName cfz.Expression[string] `json:"KeyName,omitempty"`

	// NoExpiry is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-noexpiry
	NoExpiry cfz.Expression[bool] `json:"NoExpiry,omitempty"`

	// Restrictions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-restrictions
	Restrictions cfz.Expression[AWS_Location_APIKey_ApiKeyRestrictions] `json:"Restrictions,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-location-apikey.html#cfn-location-apikey-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Location_APIKey initializes a new *AWS_Location_APIKey.
func New__AWS_Location_APIKey(logicalName string) *AWS_Location_APIKey {
	return &AWS_Location_APIKey{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Location_APIKey) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Location_APIKey) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Location_APIKey) GetType() string {
	return AWS_Location_APIKey__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Location_APIKey) Set__LogicalName(v string) *AWS_Location_APIKey {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Location_APIKey) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Location_APIKey {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Location_APIKey) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Location_APIKey {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Location_APIKey) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Location_APIKey {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Location_APIKey) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Location_APIKey {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Location_APIKey) Set__RequestedOutputs(v []cfz.Output) *AWS_Location_APIKey {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Location_APIKey) Add__RequestedOutputs(v ...cfz.Output) *AWS_Location_APIKey {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Location_APIKey) Set__Description(v cfz.Expression[string]) *AWS_Location_APIKey {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Location_APIKey) SetV__Description(v string) *AWS_Location_APIKey {
	t.Description = cfz.V(v)
	return t
}

// Set__ExpireTime updates property "ExpireTime".
func (t *AWS_Location_APIKey) Set__ExpireTime(v cfz.Expression[string]) *AWS_Location_APIKey {
	t.ExpireTime = v
	return t
}

// SetV__ExpireTime updates property "ExpireTime".
func (t *AWS_Location_APIKey) SetV__ExpireTime(v string) *AWS_Location_APIKey {
	t.ExpireTime = cfz.V(v)
	return t
}

// Set__ForceDelete updates property "ForceDelete".
func (t *AWS_Location_APIKey) Set__ForceDelete(v cfz.Expression[bool]) *AWS_Location_APIKey {
	t.ForceDelete = v
	return t
}

// SetV__ForceDelete updates property "ForceDelete".
func (t *AWS_Location_APIKey) SetV__ForceDelete(v bool) *AWS_Location_APIKey {
	t.ForceDelete = cfz.V(v)
	return t
}

// Set__ForceUpdate updates property "ForceUpdate".
func (t *AWS_Location_APIKey) Set__ForceUpdate(v cfz.Expression[bool]) *AWS_Location_APIKey {
	t.ForceUpdate = v
	return t
}

// SetV__ForceUpdate updates property "ForceUpdate".
func (t *AWS_Location_APIKey) SetV__ForceUpdate(v bool) *AWS_Location_APIKey {
	t.ForceUpdate = cfz.V(v)
	return t
}

// Set__KeyName updates property "KeyName".
func (t *AWS_Location_APIKey) Set__KeyName(v cfz.Expression[string]) *AWS_Location_APIKey {
	t.KeyName = v
	return t
}

// SetV__KeyName updates property "KeyName".
func (t *AWS_Location_APIKey) SetV__KeyName(v string) *AWS_Location_APIKey {
	t.KeyName = cfz.V(v)
	return t
}

// Set__NoExpiry updates property "NoExpiry".
func (t *AWS_Location_APIKey) Set__NoExpiry(v cfz.Expression[bool]) *AWS_Location_APIKey {
	t.NoExpiry = v
	return t
}

// SetV__NoExpiry updates property "NoExpiry".
func (t *AWS_Location_APIKey) SetV__NoExpiry(v bool) *AWS_Location_APIKey {
	t.NoExpiry = cfz.V(v)
	return t
}

// Set__Restrictions updates property "Restrictions".
func (t *AWS_Location_APIKey) Set__Restrictions(v cfz.Expression[AWS_Location_APIKey_ApiKeyRestrictions]) *AWS_Location_APIKey {
	t.Restrictions = v
	return t
}

// SetV__Restrictions updates property "Restrictions".
func (t *AWS_Location_APIKey) SetV__Restrictions(v AWS_Location_APIKey_ApiKeyRestrictions) *AWS_Location_APIKey {
	t.Restrictions = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Location_APIKey) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Location_APIKey {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Location_APIKey) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Location_APIKey {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Location_APIKey) SetSV__Tags(v ...cfz.Tag) *AWS_Location_APIKey {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Location_APIKey) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Location_APIKey) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Location_APIKey__AttributesMap.Arn))
}

// GetAtt__CreateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreateTime
func (t *AWS_Location_APIKey) GetAtt__CreateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Location_APIKey__AttributesMap.CreateTime))
}

// GetAtt__KeyArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: KeyArn
func (t *AWS_Location_APIKey) GetAtt__KeyArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Location_APIKey__AttributesMap.KeyArn))
}

// GetAtt__UpdateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdateTime
func (t *AWS_Location_APIKey) GetAtt__UpdateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Location_APIKey__AttributesMap.UpdateTime))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Location_APIKey) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Location_APIKey) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreateTime
func (t *AWS_Location_APIKey) GetConventionalOutputAtt__CreateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreateTime", t.GetAtt__CreateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__KeyArn returns a conventionally configured output for an attribute of this resource.
// Attribute: KeyArn
func (t *AWS_Location_APIKey) GetConventionalOutputAtt__KeyArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttKeyArn", t.GetAtt__KeyArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdateTime
func (t *AWS_Location_APIKey) GetConventionalOutputAtt__UpdateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdateTime", t.GetAtt__UpdateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Location_APIKey) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Location_APIKey

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Location_APIKey) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
