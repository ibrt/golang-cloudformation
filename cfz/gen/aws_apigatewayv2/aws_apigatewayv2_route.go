// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_apigatewayv2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ApiGatewayV2_Route)(nil)
	_ cfz.Resource                   = (*AWS_ApiGatewayV2_Route)(nil)
)

const (
	// AWS_ApiGatewayV2_Route__Type is the CloudFormation type for AWS::ApiGatewayV2::Route.
	AWS_ApiGatewayV2_Route__Type = "AWS::ApiGatewayV2::Route"
)

var (
	// AWS_ApiGatewayV2_Route__AttributesMap reports all the CloudFormation attributes for AWS::ApiGatewayV2::Route.
	AWS_ApiGatewayV2_Route__AttributesMap = struct {
		RouteId string
	}{
		RouteId: "RouteId",
	}

	// AWS_ApiGatewayV2_Route__AttributesSlice reports all the CloudFormation attributes for AWS::ApiGatewayV2::Route.
	AWS_ApiGatewayV2_Route__AttributesSlice = []string{
		AWS_ApiGatewayV2_Route__AttributesMap.RouteId,
	}
)

var (
	// AWS_ApiGatewayV2_Route__PropertiesMap reports all the CloudFormation properties for AWS::ApiGatewayV2::Route.
	AWS_ApiGatewayV2_Route__PropertiesMap = struct {
		ApiId                            string
		ApiKeyRequired                   string
		AuthorizationScopes              string
		AuthorizationType                string
		AuthorizerId                     string
		ModelSelectionExpression         string
		OperationName                    string
		RequestModels                    string
		RequestParameters                string
		RouteKey                         string
		RouteResponseSelectionExpression string
		Target                           string
	}{
		ApiId:                            "ApiId",
		ApiKeyRequired:                   "ApiKeyRequired",
		AuthorizationScopes:              "AuthorizationScopes",
		AuthorizationType:                "AuthorizationType",
		AuthorizerId:                     "AuthorizerId",
		ModelSelectionExpression:         "ModelSelectionExpression",
		OperationName:                    "OperationName",
		RequestModels:                    "RequestModels",
		RequestParameters:                "RequestParameters",
		RouteKey:                         "RouteKey",
		RouteResponseSelectionExpression: "RouteResponseSelectionExpression",
		Target:                           "Target",
	}

	// AWS_ApiGatewayV2_Route__PropertiesSlice reports all the CloudFormation properties for AWS::ApiGatewayV2::Route.
	AWS_ApiGatewayV2_Route__PropertiesSlice = []string{
		AWS_ApiGatewayV2_Route__PropertiesMap.ApiId,
		AWS_ApiGatewayV2_Route__PropertiesMap.ApiKeyRequired,
		AWS_ApiGatewayV2_Route__PropertiesMap.AuthorizationScopes,
		AWS_ApiGatewayV2_Route__PropertiesMap.AuthorizationType,
		AWS_ApiGatewayV2_Route__PropertiesMap.AuthorizerId,
		AWS_ApiGatewayV2_Route__PropertiesMap.ModelSelectionExpression,
		AWS_ApiGatewayV2_Route__PropertiesMap.OperationName,
		AWS_ApiGatewayV2_Route__PropertiesMap.RequestModels,
		AWS_ApiGatewayV2_Route__PropertiesMap.RequestParameters,
		AWS_ApiGatewayV2_Route__PropertiesMap.RouteKey,
		AWS_ApiGatewayV2_Route__PropertiesMap.RouteResponseSelectionExpression,
		AWS_ApiGatewayV2_Route__PropertiesMap.Target,
	}
)

// AWS_ApiGatewayV2_Route is a binding for AWS::ApiGatewayV2::Route.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html
type AWS_ApiGatewayV2_Route struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApiId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-apiid
	ApiId cfz.Expression[string] `json:"ApiId,omitempty"`

	// ApiKeyRequired is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-apikeyrequired
	ApiKeyRequired cfz.Expression[bool] `json:"ApiKeyRequired,omitempty"`

	// AuthorizationScopes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-authorizationscopes
	AuthorizationScopes cfz.ExpressionSlice[string] `json:"AuthorizationScopes,omitempty"`

	// AuthorizationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-authorizationtype
	AuthorizationType cfz.Expression[string] `json:"AuthorizationType,omitempty"`

	// AuthorizerId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-authorizerid
	AuthorizerId cfz.Expression[string] `json:"AuthorizerId,omitempty"`

	// ModelSelectionExpression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-modelselectionexpression
	ModelSelectionExpression cfz.Expression[string] `json:"ModelSelectionExpression,omitempty"`

	// OperationName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-operationname
	OperationName cfz.Expression[string] `json:"OperationName,omitempty"`

	// RequestModels is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-requestmodels
	RequestModels cfz.Expression[json.RawMessage] `json:"RequestModels,omitempty"`

	// RequestParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-requestparameters
	RequestParameters cfz.Expression[json.RawMessage] `json:"RequestParameters,omitempty"`

	// RouteKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-routekey
	RouteKey cfz.Expression[string] `json:"RouteKey,omitempty"`

	// RouteResponseSelectionExpression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-routeresponseselectionexpression
	RouteResponseSelectionExpression cfz.Expression[string] `json:"RouteResponseSelectionExpression,omitempty"`

	// Target is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-target
	Target cfz.Expression[string] `json:"Target,omitempty"`
}

// New__AWS_ApiGatewayV2_Route initializes a new *AWS_ApiGatewayV2_Route.
func New__AWS_ApiGatewayV2_Route(logicalName string) *AWS_ApiGatewayV2_Route {
	return &AWS_ApiGatewayV2_Route{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ApiGatewayV2_Route) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ApiGatewayV2_Route) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ApiGatewayV2_Route) GetType() string {
	return AWS_ApiGatewayV2_Route__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ApiGatewayV2_Route) Set__LogicalName(v string) *AWS_ApiGatewayV2_Route {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ApiGatewayV2_Route) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ApiGatewayV2_Route {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ApiGatewayV2_Route) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ApiGatewayV2_Route {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ApiGatewayV2_Route) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ApiGatewayV2_Route {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ApiGatewayV2_Route) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ApiGatewayV2_Route {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ApiGatewayV2_Route) Set__RequestedOutputs(v []cfz.Output) *AWS_ApiGatewayV2_Route {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ApiGatewayV2_Route) Add__RequestedOutputs(v ...cfz.Output) *AWS_ApiGatewayV2_Route {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApiId updates property "ApiId".
func (t *AWS_ApiGatewayV2_Route) Set__ApiId(v cfz.Expression[string]) *AWS_ApiGatewayV2_Route {
	t.ApiId = v
	return t
}

// SetV__ApiId updates property "ApiId".
func (t *AWS_ApiGatewayV2_Route) SetV__ApiId(v string) *AWS_ApiGatewayV2_Route {
	t.ApiId = cfz.V(v)
	return t
}

// Set__ApiKeyRequired updates property "ApiKeyRequired".
func (t *AWS_ApiGatewayV2_Route) Set__ApiKeyRequired(v cfz.Expression[bool]) *AWS_ApiGatewayV2_Route {
	t.ApiKeyRequired = v
	return t
}

// SetV__ApiKeyRequired updates property "ApiKeyRequired".
func (t *AWS_ApiGatewayV2_Route) SetV__ApiKeyRequired(v bool) *AWS_ApiGatewayV2_Route {
	t.ApiKeyRequired = cfz.V(v)
	return t
}

// Set__AuthorizationScopes updates property "AuthorizationScopes".
func (t *AWS_ApiGatewayV2_Route) Set__AuthorizationScopes(v cfz.ExpressionSlice[string]) *AWS_ApiGatewayV2_Route {
	t.AuthorizationScopes = v
	return t
}

// SetS__AuthorizationScopes updates property "AuthorizationScopes".
func (t *AWS_ApiGatewayV2_Route) SetS__AuthorizationScopes(v ...cfz.Expression[string]) *AWS_ApiGatewayV2_Route {
	t.AuthorizationScopes = cfz.S(v...)
	return t
}

// SetSV__AuthorizationScopes updates property "AuthorizationScopes".
func (t *AWS_ApiGatewayV2_Route) SetSV__AuthorizationScopes(v ...string) *AWS_ApiGatewayV2_Route {
	t.AuthorizationScopes = cfz.SV(v...)
	return t
}

// Set__AuthorizationType updates property "AuthorizationType".
func (t *AWS_ApiGatewayV2_Route) Set__AuthorizationType(v cfz.Expression[string]) *AWS_ApiGatewayV2_Route {
	t.AuthorizationType = v
	return t
}

// SetV__AuthorizationType updates property "AuthorizationType".
func (t *AWS_ApiGatewayV2_Route) SetV__AuthorizationType(v string) *AWS_ApiGatewayV2_Route {
	t.AuthorizationType = cfz.V(v)
	return t
}

// Set__AuthorizerId updates property "AuthorizerId".
func (t *AWS_ApiGatewayV2_Route) Set__AuthorizerId(v cfz.Expression[string]) *AWS_ApiGatewayV2_Route {
	t.AuthorizerId = v
	return t
}

// SetV__AuthorizerId updates property "AuthorizerId".
func (t *AWS_ApiGatewayV2_Route) SetV__AuthorizerId(v string) *AWS_ApiGatewayV2_Route {
	t.AuthorizerId = cfz.V(v)
	return t
}

// Set__ModelSelectionExpression updates property "ModelSelectionExpression".
func (t *AWS_ApiGatewayV2_Route) Set__ModelSelectionExpression(v cfz.Expression[string]) *AWS_ApiGatewayV2_Route {
	t.ModelSelectionExpression = v
	return t
}

// SetV__ModelSelectionExpression updates property "ModelSelectionExpression".
func (t *AWS_ApiGatewayV2_Route) SetV__ModelSelectionExpression(v string) *AWS_ApiGatewayV2_Route {
	t.ModelSelectionExpression = cfz.V(v)
	return t
}

// Set__OperationName updates property "OperationName".
func (t *AWS_ApiGatewayV2_Route) Set__OperationName(v cfz.Expression[string]) *AWS_ApiGatewayV2_Route {
	t.OperationName = v
	return t
}

// SetV__OperationName updates property "OperationName".
func (t *AWS_ApiGatewayV2_Route) SetV__OperationName(v string) *AWS_ApiGatewayV2_Route {
	t.OperationName = cfz.V(v)
	return t
}

// Set__RequestModels updates property "RequestModels".
func (t *AWS_ApiGatewayV2_Route) Set__RequestModels(v cfz.Expression[json.RawMessage]) *AWS_ApiGatewayV2_Route {
	t.RequestModels = v
	return t
}

// SetV__RequestModels updates property "RequestModels".
func (t *AWS_ApiGatewayV2_Route) SetV__RequestModels(v json.RawMessage) *AWS_ApiGatewayV2_Route {
	t.RequestModels = cfz.V(v)
	return t
}

// Set__RequestParameters updates property "RequestParameters".
func (t *AWS_ApiGatewayV2_Route) Set__RequestParameters(v cfz.Expression[json.RawMessage]) *AWS_ApiGatewayV2_Route {
	t.RequestParameters = v
	return t
}

// SetV__RequestParameters updates property "RequestParameters".
func (t *AWS_ApiGatewayV2_Route) SetV__RequestParameters(v json.RawMessage) *AWS_ApiGatewayV2_Route {
	t.RequestParameters = cfz.V(v)
	return t
}

// Set__RouteKey updates property "RouteKey".
func (t *AWS_ApiGatewayV2_Route) Set__RouteKey(v cfz.Expression[string]) *AWS_ApiGatewayV2_Route {
	t.RouteKey = v
	return t
}

// SetV__RouteKey updates property "RouteKey".
func (t *AWS_ApiGatewayV2_Route) SetV__RouteKey(v string) *AWS_ApiGatewayV2_Route {
	t.RouteKey = cfz.V(v)
	return t
}

// Set__RouteResponseSelectionExpression updates property "RouteResponseSelectionExpression".
func (t *AWS_ApiGatewayV2_Route) Set__RouteResponseSelectionExpression(v cfz.Expression[string]) *AWS_ApiGatewayV2_Route {
	t.RouteResponseSelectionExpression = v
	return t
}

// SetV__RouteResponseSelectionExpression updates property "RouteResponseSelectionExpression".
func (t *AWS_ApiGatewayV2_Route) SetV__RouteResponseSelectionExpression(v string) *AWS_ApiGatewayV2_Route {
	t.RouteResponseSelectionExpression = cfz.V(v)
	return t
}

// Set__Target updates property "Target".
func (t *AWS_ApiGatewayV2_Route) Set__Target(v cfz.Expression[string]) *AWS_ApiGatewayV2_Route {
	t.Target = v
	return t
}

// SetV__Target updates property "Target".
func (t *AWS_ApiGatewayV2_Route) SetV__Target(v string) *AWS_ApiGatewayV2_Route {
	t.Target = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ApiGatewayV2_Route) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__RouteId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RouteId
func (t *AWS_ApiGatewayV2_Route) GetAtt__RouteId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ApiGatewayV2_Route__AttributesMap.RouteId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ApiGatewayV2_Route) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RouteId returns a conventionally configured output for an attribute of this resource.
// Attribute: RouteId
func (t *AWS_ApiGatewayV2_Route) GetConventionalOutputAtt__RouteId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRouteId", t.GetAtt__RouteId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ApiGatewayV2_Route) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ApiGatewayV2_Route

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ApiGatewayV2_Route) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
