// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_apigatewayv2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ApiGatewayV2_Authorizer)(nil)
	_ cfz.Resource                   = (*AWS_ApiGatewayV2_Authorizer)(nil)
)

const (
	// AWS_ApiGatewayV2_Authorizer__Type is the CloudFormation type for AWS::ApiGatewayV2::Authorizer.
	AWS_ApiGatewayV2_Authorizer__Type = "AWS::ApiGatewayV2::Authorizer"
)

var (
	// AWS_ApiGatewayV2_Authorizer__AttributesMap reports all the CloudFormation attributes for AWS::ApiGatewayV2::Authorizer.
	AWS_ApiGatewayV2_Authorizer__AttributesMap = struct {
		AuthorizerId string
	}{
		AuthorizerId: "AuthorizerId",
	}

	// AWS_ApiGatewayV2_Authorizer__AttributesSlice reports all the CloudFormation attributes for AWS::ApiGatewayV2::Authorizer.
	AWS_ApiGatewayV2_Authorizer__AttributesSlice = []string{
		AWS_ApiGatewayV2_Authorizer__AttributesMap.AuthorizerId,
	}
)

var (
	// AWS_ApiGatewayV2_Authorizer__PropertiesMap reports all the CloudFormation properties for AWS::ApiGatewayV2::Authorizer.
	AWS_ApiGatewayV2_Authorizer__PropertiesMap = struct {
		ApiId                          string
		AuthorizerCredentialsArn       string
		AuthorizerPayloadFormatVersion string
		AuthorizerResultTtlInSeconds   string
		AuthorizerType                 string
		AuthorizerUri                  string
		EnableSimpleResponses          string
		IdentitySource                 string
		IdentityValidationExpression   string
		JwtConfiguration               string
		Name                           string
	}{
		ApiId:                          "ApiId",
		AuthorizerCredentialsArn:       "AuthorizerCredentialsArn",
		AuthorizerPayloadFormatVersion: "AuthorizerPayloadFormatVersion",
		AuthorizerResultTtlInSeconds:   "AuthorizerResultTtlInSeconds",
		AuthorizerType:                 "AuthorizerType",
		AuthorizerUri:                  "AuthorizerUri",
		EnableSimpleResponses:          "EnableSimpleResponses",
		IdentitySource:                 "IdentitySource",
		IdentityValidationExpression:   "IdentityValidationExpression",
		JwtConfiguration:               "JwtConfiguration",
		Name:                           "Name",
	}

	// AWS_ApiGatewayV2_Authorizer__PropertiesSlice reports all the CloudFormation properties for AWS::ApiGatewayV2::Authorizer.
	AWS_ApiGatewayV2_Authorizer__PropertiesSlice = []string{
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.ApiId,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.AuthorizerCredentialsArn,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.AuthorizerPayloadFormatVersion,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.AuthorizerResultTtlInSeconds,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.AuthorizerType,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.AuthorizerUri,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.EnableSimpleResponses,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.IdentitySource,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.IdentityValidationExpression,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.JwtConfiguration,
		AWS_ApiGatewayV2_Authorizer__PropertiesMap.Name,
	}
)

// AWS_ApiGatewayV2_Authorizer is a binding for AWS::ApiGatewayV2::Authorizer.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html
type AWS_ApiGatewayV2_Authorizer struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApiId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-apiid
	ApiId cfz.Expression[string] `json:"ApiId,omitempty"`

	// AuthorizerCredentialsArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizercredentialsarn
	AuthorizerCredentialsArn cfz.Expression[string] `json:"AuthorizerCredentialsArn,omitempty"`

	// AuthorizerPayloadFormatVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizerpayloadformatversion
	AuthorizerPayloadFormatVersion cfz.Expression[string] `json:"AuthorizerPayloadFormatVersion,omitempty"`

	// AuthorizerResultTtlInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizerresultttlinseconds
	AuthorizerResultTtlInSeconds cfz.Expression[int32] `json:"AuthorizerResultTtlInSeconds,omitempty"`

	// AuthorizerType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizertype
	AuthorizerType cfz.Expression[string] `json:"AuthorizerType,omitempty"`

	// AuthorizerUri is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-authorizeruri
	AuthorizerUri cfz.Expression[string] `json:"AuthorizerUri,omitempty"`

	// EnableSimpleResponses is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-enablesimpleresponses
	EnableSimpleResponses cfz.Expression[bool] `json:"EnableSimpleResponses,omitempty"`

	// IdentitySource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-identitysource
	IdentitySource cfz.ExpressionSlice[string] `json:"IdentitySource,omitempty"`

	// IdentityValidationExpression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-identityvalidationexpression
	IdentityValidationExpression cfz.Expression[string] `json:"IdentityValidationExpression,omitempty"`

	// JwtConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-jwtconfiguration
	JwtConfiguration cfz.Expression[AWS_ApiGatewayV2_Authorizer_JWTConfiguration] `json:"JwtConfiguration,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-authorizer.html#cfn-apigatewayv2-authorizer-name
	Name cfz.Expression[string] `json:"Name,omitempty"`
}

// New__AWS_ApiGatewayV2_Authorizer initializes a new *AWS_ApiGatewayV2_Authorizer.
func New__AWS_ApiGatewayV2_Authorizer(logicalName string) *AWS_ApiGatewayV2_Authorizer {
	return &AWS_ApiGatewayV2_Authorizer{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ApiGatewayV2_Authorizer) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ApiGatewayV2_Authorizer) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ApiGatewayV2_Authorizer) GetType() string {
	return AWS_ApiGatewayV2_Authorizer__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ApiGatewayV2_Authorizer) Set__LogicalName(v string) *AWS_ApiGatewayV2_Authorizer {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ApiGatewayV2_Authorizer) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ApiGatewayV2_Authorizer {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ApiGatewayV2_Authorizer) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ApiGatewayV2_Authorizer {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ApiGatewayV2_Authorizer) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ApiGatewayV2_Authorizer {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ApiGatewayV2_Authorizer) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ApiGatewayV2_Authorizer {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ApiGatewayV2_Authorizer) Set__RequestedOutputs(v []cfz.Output) *AWS_ApiGatewayV2_Authorizer {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ApiGatewayV2_Authorizer) Add__RequestedOutputs(v ...cfz.Output) *AWS_ApiGatewayV2_Authorizer {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApiId updates property "ApiId".
func (t *AWS_ApiGatewayV2_Authorizer) Set__ApiId(v cfz.Expression[string]) *AWS_ApiGatewayV2_Authorizer {
	t.ApiId = v
	return t
}

// SetV__ApiId updates property "ApiId".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__ApiId(v string) *AWS_ApiGatewayV2_Authorizer {
	t.ApiId = cfz.V(v)
	return t
}

// Set__AuthorizerCredentialsArn updates property "AuthorizerCredentialsArn".
func (t *AWS_ApiGatewayV2_Authorizer) Set__AuthorizerCredentialsArn(v cfz.Expression[string]) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerCredentialsArn = v
	return t
}

// SetV__AuthorizerCredentialsArn updates property "AuthorizerCredentialsArn".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__AuthorizerCredentialsArn(v string) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerCredentialsArn = cfz.V(v)
	return t
}

// Set__AuthorizerPayloadFormatVersion updates property "AuthorizerPayloadFormatVersion".
func (t *AWS_ApiGatewayV2_Authorizer) Set__AuthorizerPayloadFormatVersion(v cfz.Expression[string]) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerPayloadFormatVersion = v
	return t
}

// SetV__AuthorizerPayloadFormatVersion updates property "AuthorizerPayloadFormatVersion".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__AuthorizerPayloadFormatVersion(v string) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerPayloadFormatVersion = cfz.V(v)
	return t
}

// Set__AuthorizerResultTtlInSeconds updates property "AuthorizerResultTtlInSeconds".
func (t *AWS_ApiGatewayV2_Authorizer) Set__AuthorizerResultTtlInSeconds(v cfz.Expression[int32]) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerResultTtlInSeconds = v
	return t
}

// SetV__AuthorizerResultTtlInSeconds updates property "AuthorizerResultTtlInSeconds".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__AuthorizerResultTtlInSeconds(v int32) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerResultTtlInSeconds = cfz.V(v)
	return t
}

// Set__AuthorizerType updates property "AuthorizerType".
func (t *AWS_ApiGatewayV2_Authorizer) Set__AuthorizerType(v cfz.Expression[string]) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerType = v
	return t
}

// SetV__AuthorizerType updates property "AuthorizerType".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__AuthorizerType(v string) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerType = cfz.V(v)
	return t
}

// Set__AuthorizerUri updates property "AuthorizerUri".
func (t *AWS_ApiGatewayV2_Authorizer) Set__AuthorizerUri(v cfz.Expression[string]) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerUri = v
	return t
}

// SetV__AuthorizerUri updates property "AuthorizerUri".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__AuthorizerUri(v string) *AWS_ApiGatewayV2_Authorizer {
	t.AuthorizerUri = cfz.V(v)
	return t
}

// Set__EnableSimpleResponses updates property "EnableSimpleResponses".
func (t *AWS_ApiGatewayV2_Authorizer) Set__EnableSimpleResponses(v cfz.Expression[bool]) *AWS_ApiGatewayV2_Authorizer {
	t.EnableSimpleResponses = v
	return t
}

// SetV__EnableSimpleResponses updates property "EnableSimpleResponses".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__EnableSimpleResponses(v bool) *AWS_ApiGatewayV2_Authorizer {
	t.EnableSimpleResponses = cfz.V(v)
	return t
}

// Set__IdentitySource updates property "IdentitySource".
func (t *AWS_ApiGatewayV2_Authorizer) Set__IdentitySource(v cfz.ExpressionSlice[string]) *AWS_ApiGatewayV2_Authorizer {
	t.IdentitySource = v
	return t
}

// SetS__IdentitySource updates property "IdentitySource".
func (t *AWS_ApiGatewayV2_Authorizer) SetS__IdentitySource(v ...cfz.Expression[string]) *AWS_ApiGatewayV2_Authorizer {
	t.IdentitySource = cfz.S(v...)
	return t
}

// SetSV__IdentitySource updates property "IdentitySource".
func (t *AWS_ApiGatewayV2_Authorizer) SetSV__IdentitySource(v ...string) *AWS_ApiGatewayV2_Authorizer {
	t.IdentitySource = cfz.SV(v...)
	return t
}

// Set__IdentityValidationExpression updates property "IdentityValidationExpression".
func (t *AWS_ApiGatewayV2_Authorizer) Set__IdentityValidationExpression(v cfz.Expression[string]) *AWS_ApiGatewayV2_Authorizer {
	t.IdentityValidationExpression = v
	return t
}

// SetV__IdentityValidationExpression updates property "IdentityValidationExpression".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__IdentityValidationExpression(v string) *AWS_ApiGatewayV2_Authorizer {
	t.IdentityValidationExpression = cfz.V(v)
	return t
}

// Set__JwtConfiguration updates property "JwtConfiguration".
func (t *AWS_ApiGatewayV2_Authorizer) Set__JwtConfiguration(v cfz.Expression[AWS_ApiGatewayV2_Authorizer_JWTConfiguration]) *AWS_ApiGatewayV2_Authorizer {
	t.JwtConfiguration = v
	return t
}

// SetV__JwtConfiguration updates property "JwtConfiguration".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__JwtConfiguration(v AWS_ApiGatewayV2_Authorizer_JWTConfiguration) *AWS_ApiGatewayV2_Authorizer {
	t.JwtConfiguration = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_ApiGatewayV2_Authorizer) Set__Name(v cfz.Expression[string]) *AWS_ApiGatewayV2_Authorizer {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_ApiGatewayV2_Authorizer) SetV__Name(v string) *AWS_ApiGatewayV2_Authorizer {
	t.Name = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ApiGatewayV2_Authorizer) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AuthorizerId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AuthorizerId
func (t *AWS_ApiGatewayV2_Authorizer) GetAtt__AuthorizerId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ApiGatewayV2_Authorizer__AttributesMap.AuthorizerId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ApiGatewayV2_Authorizer) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AuthorizerId returns a conventionally configured output for an attribute of this resource.
// Attribute: AuthorizerId
func (t *AWS_ApiGatewayV2_Authorizer) GetConventionalOutputAtt__AuthorizerId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAuthorizerId", t.GetAtt__AuthorizerId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ApiGatewayV2_Authorizer) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ApiGatewayV2_Authorizer

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ApiGatewayV2_Authorizer) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
