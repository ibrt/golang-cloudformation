// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_codeconnections

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CodeConnections_Connection)(nil)
	_ cfz.Resource                   = (*AWS_CodeConnections_Connection)(nil)
)

const (
	// AWS_CodeConnections_Connection__Type is the CloudFormation type for AWS::CodeConnections::Connection.
	AWS_CodeConnections_Connection__Type = "AWS::CodeConnections::Connection"
)

var (
	// AWS_CodeConnections_Connection__AttributesMap reports all the CloudFormation attributes for AWS::CodeConnections::Connection.
	AWS_CodeConnections_Connection__AttributesMap = struct {
		ConnectionArn    string
		ConnectionStatus string
		OwnerAccountId   string
	}{
		ConnectionArn:    "ConnectionArn",
		ConnectionStatus: "ConnectionStatus",
		OwnerAccountId:   "OwnerAccountId",
	}

	// AWS_CodeConnections_Connection__AttributesSlice reports all the CloudFormation attributes for AWS::CodeConnections::Connection.
	AWS_CodeConnections_Connection__AttributesSlice = []string{
		AWS_CodeConnections_Connection__AttributesMap.ConnectionArn,
		AWS_CodeConnections_Connection__AttributesMap.ConnectionStatus,
		AWS_CodeConnections_Connection__AttributesMap.OwnerAccountId,
	}
)

var (
	// AWS_CodeConnections_Connection__PropertiesMap reports all the CloudFormation properties for AWS::CodeConnections::Connection.
	AWS_CodeConnections_Connection__PropertiesMap = struct {
		ConnectionName string
		HostArn        string
		ProviderType   string
		Tags           string
	}{
		ConnectionName: "ConnectionName",
		HostArn:        "HostArn",
		ProviderType:   "ProviderType",
		Tags:           "Tags",
	}

	// AWS_CodeConnections_Connection__PropertiesSlice reports all the CloudFormation properties for AWS::CodeConnections::Connection.
	AWS_CodeConnections_Connection__PropertiesSlice = []string{
		AWS_CodeConnections_Connection__PropertiesMap.ConnectionName,
		AWS_CodeConnections_Connection__PropertiesMap.HostArn,
		AWS_CodeConnections_Connection__PropertiesMap.ProviderType,
		AWS_CodeConnections_Connection__PropertiesMap.Tags,
	}
)

// AWS_CodeConnections_Connection is a binding for AWS::CodeConnections::Connection.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html
type AWS_CodeConnections_Connection struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ConnectionName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html#cfn-codeconnections-connection-connectionname
	ConnectionName cfz.Expression[string] `json:"ConnectionName,omitempty"`

	// HostArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html#cfn-codeconnections-connection-hostarn
	HostArn cfz.Expression[string] `json:"HostArn,omitempty"`

	// ProviderType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html#cfn-codeconnections-connection-providertype
	ProviderType cfz.Expression[string] `json:"ProviderType,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeconnections-connection.html#cfn-codeconnections-connection-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_CodeConnections_Connection initializes a new *AWS_CodeConnections_Connection.
func New__AWS_CodeConnections_Connection(logicalName string) *AWS_CodeConnections_Connection {
	return &AWS_CodeConnections_Connection{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CodeConnections_Connection) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CodeConnections_Connection) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CodeConnections_Connection) GetType() string {
	return AWS_CodeConnections_Connection__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CodeConnections_Connection) Set__LogicalName(v string) *AWS_CodeConnections_Connection {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CodeConnections_Connection) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CodeConnections_Connection {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CodeConnections_Connection) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CodeConnections_Connection {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CodeConnections_Connection) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CodeConnections_Connection {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CodeConnections_Connection) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CodeConnections_Connection {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CodeConnections_Connection) Set__RequestedOutputs(v []cfz.Output) *AWS_CodeConnections_Connection {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CodeConnections_Connection) Add__RequestedOutputs(v ...cfz.Output) *AWS_CodeConnections_Connection {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ConnectionName updates property "ConnectionName".
func (t *AWS_CodeConnections_Connection) Set__ConnectionName(v cfz.Expression[string]) *AWS_CodeConnections_Connection {
	t.ConnectionName = v
	return t
}

// SetV__ConnectionName updates property "ConnectionName".
func (t *AWS_CodeConnections_Connection) SetV__ConnectionName(v string) *AWS_CodeConnections_Connection {
	t.ConnectionName = cfz.V(v)
	return t
}

// Set__HostArn updates property "HostArn".
func (t *AWS_CodeConnections_Connection) Set__HostArn(v cfz.Expression[string]) *AWS_CodeConnections_Connection {
	t.HostArn = v
	return t
}

// SetV__HostArn updates property "HostArn".
func (t *AWS_CodeConnections_Connection) SetV__HostArn(v string) *AWS_CodeConnections_Connection {
	t.HostArn = cfz.V(v)
	return t
}

// Set__ProviderType updates property "ProviderType".
func (t *AWS_CodeConnections_Connection) Set__ProviderType(v cfz.Expression[string]) *AWS_CodeConnections_Connection {
	t.ProviderType = v
	return t
}

// SetV__ProviderType updates property "ProviderType".
func (t *AWS_CodeConnections_Connection) SetV__ProviderType(v string) *AWS_CodeConnections_Connection {
	t.ProviderType = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CodeConnections_Connection) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CodeConnections_Connection {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CodeConnections_Connection) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CodeConnections_Connection {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CodeConnections_Connection) SetSV__Tags(v ...cfz.Tag) *AWS_CodeConnections_Connection {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CodeConnections_Connection) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ConnectionArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConnectionArn
func (t *AWS_CodeConnections_Connection) GetAtt__ConnectionArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeConnections_Connection__AttributesMap.ConnectionArn))
}

// GetAtt__ConnectionStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConnectionStatus
func (t *AWS_CodeConnections_Connection) GetAtt__ConnectionStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeConnections_Connection__AttributesMap.ConnectionStatus))
}

// GetAtt__OwnerAccountId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OwnerAccountId
func (t *AWS_CodeConnections_Connection) GetAtt__OwnerAccountId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeConnections_Connection__AttributesMap.OwnerAccountId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CodeConnections_Connection) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConnectionArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ConnectionArn
func (t *AWS_CodeConnections_Connection) GetConventionalOutputAtt__ConnectionArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConnectionArn", t.GetAtt__ConnectionArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConnectionStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: ConnectionStatus
func (t *AWS_CodeConnections_Connection) GetConventionalOutputAtt__ConnectionStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConnectionStatus", t.GetAtt__ConnectionStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OwnerAccountId returns a conventionally configured output for an attribute of this resource.
// Attribute: OwnerAccountId
func (t *AWS_CodeConnections_Connection) GetConventionalOutputAtt__OwnerAccountId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOwnerAccountId", t.GetAtt__OwnerAccountId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CodeConnections_Connection) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CodeConnections_Connection

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CodeConnections_Connection) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
