// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_sqs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SQS_Queue)(nil)
	_ cfz.Resource                   = (*AWS_SQS_Queue)(nil)
)

const (
	// AWS_SQS_Queue__Type is the CloudFormation type for AWS::SQS::Queue.
	AWS_SQS_Queue__Type = "AWS::SQS::Queue"
)

var (
	// AWS_SQS_Queue__AttributesMap reports all the CloudFormation attributes for AWS::SQS::Queue.
	AWS_SQS_Queue__AttributesMap = struct {
		Arn       string
		QueueName string
		QueueUrl  string
	}{
		Arn:       "Arn",
		QueueName: "QueueName",
		QueueUrl:  "QueueUrl",
	}

	// AWS_SQS_Queue__AttributesSlice reports all the CloudFormation attributes for AWS::SQS::Queue.
	AWS_SQS_Queue__AttributesSlice = []string{
		AWS_SQS_Queue__AttributesMap.Arn,
		AWS_SQS_Queue__AttributesMap.QueueName,
		AWS_SQS_Queue__AttributesMap.QueueUrl,
	}
)

var (
	// AWS_SQS_Queue__PropertiesMap reports all the CloudFormation properties for AWS::SQS::Queue.
	AWS_SQS_Queue__PropertiesMap = struct {
		ContentBasedDeduplication     string
		DeduplicationScope            string
		DelaySeconds                  string
		FifoQueue                     string
		FifoThroughputLimit           string
		KmsDataKeyReusePeriodSeconds  string
		KmsMasterKeyId                string
		MaximumMessageSize            string
		MessageRetentionPeriod        string
		QueueName                     string
		ReceiveMessageWaitTimeSeconds string
		RedriveAllowPolicy            string
		RedrivePolicy                 string
		SqsManagedSseEnabled          string
		Tags                          string
		VisibilityTimeout             string
	}{
		ContentBasedDeduplication:     "ContentBasedDeduplication",
		DeduplicationScope:            "DeduplicationScope",
		DelaySeconds:                  "DelaySeconds",
		FifoQueue:                     "FifoQueue",
		FifoThroughputLimit:           "FifoThroughputLimit",
		KmsDataKeyReusePeriodSeconds:  "KmsDataKeyReusePeriodSeconds",
		KmsMasterKeyId:                "KmsMasterKeyId",
		MaximumMessageSize:            "MaximumMessageSize",
		MessageRetentionPeriod:        "MessageRetentionPeriod",
		QueueName:                     "QueueName",
		ReceiveMessageWaitTimeSeconds: "ReceiveMessageWaitTimeSeconds",
		RedriveAllowPolicy:            "RedriveAllowPolicy",
		RedrivePolicy:                 "RedrivePolicy",
		SqsManagedSseEnabled:          "SqsManagedSseEnabled",
		Tags:                          "Tags",
		VisibilityTimeout:             "VisibilityTimeout",
	}

	// AWS_SQS_Queue__PropertiesSlice reports all the CloudFormation properties for AWS::SQS::Queue.
	AWS_SQS_Queue__PropertiesSlice = []string{
		AWS_SQS_Queue__PropertiesMap.ContentBasedDeduplication,
		AWS_SQS_Queue__PropertiesMap.DeduplicationScope,
		AWS_SQS_Queue__PropertiesMap.DelaySeconds,
		AWS_SQS_Queue__PropertiesMap.FifoQueue,
		AWS_SQS_Queue__PropertiesMap.FifoThroughputLimit,
		AWS_SQS_Queue__PropertiesMap.KmsDataKeyReusePeriodSeconds,
		AWS_SQS_Queue__PropertiesMap.KmsMasterKeyId,
		AWS_SQS_Queue__PropertiesMap.MaximumMessageSize,
		AWS_SQS_Queue__PropertiesMap.MessageRetentionPeriod,
		AWS_SQS_Queue__PropertiesMap.QueueName,
		AWS_SQS_Queue__PropertiesMap.ReceiveMessageWaitTimeSeconds,
		AWS_SQS_Queue__PropertiesMap.RedriveAllowPolicy,
		AWS_SQS_Queue__PropertiesMap.RedrivePolicy,
		AWS_SQS_Queue__PropertiesMap.SqsManagedSseEnabled,
		AWS_SQS_Queue__PropertiesMap.Tags,
		AWS_SQS_Queue__PropertiesMap.VisibilityTimeout,
	}
)

// AWS_SQS_Queue is a binding for AWS::SQS::Queue.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html
type AWS_SQS_Queue struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ContentBasedDeduplication is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-contentbaseddeduplication
	ContentBasedDeduplication cfz.Expression[bool] `json:"ContentBasedDeduplication,omitempty"`

	// DeduplicationScope is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-deduplicationscope
	DeduplicationScope cfz.Expression[string] `json:"DeduplicationScope,omitempty"`

	// DelaySeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-delayseconds
	DelaySeconds cfz.Expression[int32] `json:"DelaySeconds,omitempty"`

	// FifoQueue is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-fifoqueue
	FifoQueue cfz.Expression[bool] `json:"FifoQueue,omitempty"`

	// FifoThroughputLimit is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-fifothroughputlimit
	FifoThroughputLimit cfz.Expression[string] `json:"FifoThroughputLimit,omitempty"`

	// KmsDataKeyReusePeriodSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-kmsdatakeyreuseperiodseconds
	KmsDataKeyReusePeriodSeconds cfz.Expression[int32] `json:"KmsDataKeyReusePeriodSeconds,omitempty"`

	// KmsMasterKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-kmsmasterkeyid
	KmsMasterKeyId cfz.Expression[string] `json:"KmsMasterKeyId,omitempty"`

	// MaximumMessageSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-maximummessagesize
	MaximumMessageSize cfz.Expression[int32] `json:"MaximumMessageSize,omitempty"`

	// MessageRetentionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-messageretentionperiod
	MessageRetentionPeriod cfz.Expression[int32] `json:"MessageRetentionPeriod,omitempty"`

	// QueueName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-queuename
	QueueName cfz.Expression[string] `json:"QueueName,omitempty"`

	// ReceiveMessageWaitTimeSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-receivemessagewaittimeseconds
	ReceiveMessageWaitTimeSeconds cfz.Expression[int32] `json:"ReceiveMessageWaitTimeSeconds,omitempty"`

	// RedriveAllowPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-redriveallowpolicy
	RedriveAllowPolicy cfz.Expression[json.RawMessage] `json:"RedriveAllowPolicy,omitempty"`

	// RedrivePolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-redrivepolicy
	RedrivePolicy cfz.Expression[json.RawMessage] `json:"RedrivePolicy,omitempty"`

	// SqsManagedSseEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-sqsmanagedsseenabled
	SqsManagedSseEnabled cfz.Expression[bool] `json:"SqsManagedSseEnabled,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VisibilityTimeout is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html#cfn-sqs-queue-visibilitytimeout
	VisibilityTimeout cfz.Expression[int32] `json:"VisibilityTimeout,omitempty"`
}

// New__AWS_SQS_Queue initializes a new *AWS_SQS_Queue.
func New__AWS_SQS_Queue(logicalName string) *AWS_SQS_Queue {
	return &AWS_SQS_Queue{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SQS_Queue) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SQS_Queue) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SQS_Queue) GetType() string {
	return AWS_SQS_Queue__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SQS_Queue) Set__LogicalName(v string) *AWS_SQS_Queue {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SQS_Queue) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SQS_Queue {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SQS_Queue) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SQS_Queue {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SQS_Queue) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SQS_Queue {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SQS_Queue) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SQS_Queue {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SQS_Queue) Set__RequestedOutputs(v []cfz.Output) *AWS_SQS_Queue {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SQS_Queue) Add__RequestedOutputs(v ...cfz.Output) *AWS_SQS_Queue {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ContentBasedDeduplication updates property "ContentBasedDeduplication".
func (t *AWS_SQS_Queue) Set__ContentBasedDeduplication(v cfz.Expression[bool]) *AWS_SQS_Queue {
	t.ContentBasedDeduplication = v
	return t
}

// SetV__ContentBasedDeduplication updates property "ContentBasedDeduplication".
func (t *AWS_SQS_Queue) SetV__ContentBasedDeduplication(v bool) *AWS_SQS_Queue {
	t.ContentBasedDeduplication = cfz.V(v)
	return t
}

// Set__DeduplicationScope updates property "DeduplicationScope".
func (t *AWS_SQS_Queue) Set__DeduplicationScope(v cfz.Expression[string]) *AWS_SQS_Queue {
	t.DeduplicationScope = v
	return t
}

// SetV__DeduplicationScope updates property "DeduplicationScope".
func (t *AWS_SQS_Queue) SetV__DeduplicationScope(v string) *AWS_SQS_Queue {
	t.DeduplicationScope = cfz.V(v)
	return t
}

// Set__DelaySeconds updates property "DelaySeconds".
func (t *AWS_SQS_Queue) Set__DelaySeconds(v cfz.Expression[int32]) *AWS_SQS_Queue {
	t.DelaySeconds = v
	return t
}

// SetV__DelaySeconds updates property "DelaySeconds".
func (t *AWS_SQS_Queue) SetV__DelaySeconds(v int32) *AWS_SQS_Queue {
	t.DelaySeconds = cfz.V(v)
	return t
}

// Set__FifoQueue updates property "FifoQueue".
func (t *AWS_SQS_Queue) Set__FifoQueue(v cfz.Expression[bool]) *AWS_SQS_Queue {
	t.FifoQueue = v
	return t
}

// SetV__FifoQueue updates property "FifoQueue".
func (t *AWS_SQS_Queue) SetV__FifoQueue(v bool) *AWS_SQS_Queue {
	t.FifoQueue = cfz.V(v)
	return t
}

// Set__FifoThroughputLimit updates property "FifoThroughputLimit".
func (t *AWS_SQS_Queue) Set__FifoThroughputLimit(v cfz.Expression[string]) *AWS_SQS_Queue {
	t.FifoThroughputLimit = v
	return t
}

// SetV__FifoThroughputLimit updates property "FifoThroughputLimit".
func (t *AWS_SQS_Queue) SetV__FifoThroughputLimit(v string) *AWS_SQS_Queue {
	t.FifoThroughputLimit = cfz.V(v)
	return t
}

// Set__KmsDataKeyReusePeriodSeconds updates property "KmsDataKeyReusePeriodSeconds".
func (t *AWS_SQS_Queue) Set__KmsDataKeyReusePeriodSeconds(v cfz.Expression[int32]) *AWS_SQS_Queue {
	t.KmsDataKeyReusePeriodSeconds = v
	return t
}

// SetV__KmsDataKeyReusePeriodSeconds updates property "KmsDataKeyReusePeriodSeconds".
func (t *AWS_SQS_Queue) SetV__KmsDataKeyReusePeriodSeconds(v int32) *AWS_SQS_Queue {
	t.KmsDataKeyReusePeriodSeconds = cfz.V(v)
	return t
}

// Set__KmsMasterKeyId updates property "KmsMasterKeyId".
func (t *AWS_SQS_Queue) Set__KmsMasterKeyId(v cfz.Expression[string]) *AWS_SQS_Queue {
	t.KmsMasterKeyId = v
	return t
}

// SetV__KmsMasterKeyId updates property "KmsMasterKeyId".
func (t *AWS_SQS_Queue) SetV__KmsMasterKeyId(v string) *AWS_SQS_Queue {
	t.KmsMasterKeyId = cfz.V(v)
	return t
}

// Set__MaximumMessageSize updates property "MaximumMessageSize".
func (t *AWS_SQS_Queue) Set__MaximumMessageSize(v cfz.Expression[int32]) *AWS_SQS_Queue {
	t.MaximumMessageSize = v
	return t
}

// SetV__MaximumMessageSize updates property "MaximumMessageSize".
func (t *AWS_SQS_Queue) SetV__MaximumMessageSize(v int32) *AWS_SQS_Queue {
	t.MaximumMessageSize = cfz.V(v)
	return t
}

// Set__MessageRetentionPeriod updates property "MessageRetentionPeriod".
func (t *AWS_SQS_Queue) Set__MessageRetentionPeriod(v cfz.Expression[int32]) *AWS_SQS_Queue {
	t.MessageRetentionPeriod = v
	return t
}

// SetV__MessageRetentionPeriod updates property "MessageRetentionPeriod".
func (t *AWS_SQS_Queue) SetV__MessageRetentionPeriod(v int32) *AWS_SQS_Queue {
	t.MessageRetentionPeriod = cfz.V(v)
	return t
}

// Set__QueueName updates property "QueueName".
func (t *AWS_SQS_Queue) Set__QueueName(v cfz.Expression[string]) *AWS_SQS_Queue {
	t.QueueName = v
	return t
}

// SetV__QueueName updates property "QueueName".
func (t *AWS_SQS_Queue) SetV__QueueName(v string) *AWS_SQS_Queue {
	t.QueueName = cfz.V(v)
	return t
}

// Set__ReceiveMessageWaitTimeSeconds updates property "ReceiveMessageWaitTimeSeconds".
func (t *AWS_SQS_Queue) Set__ReceiveMessageWaitTimeSeconds(v cfz.Expression[int32]) *AWS_SQS_Queue {
	t.ReceiveMessageWaitTimeSeconds = v
	return t
}

// SetV__ReceiveMessageWaitTimeSeconds updates property "ReceiveMessageWaitTimeSeconds".
func (t *AWS_SQS_Queue) SetV__ReceiveMessageWaitTimeSeconds(v int32) *AWS_SQS_Queue {
	t.ReceiveMessageWaitTimeSeconds = cfz.V(v)
	return t
}

// Set__RedriveAllowPolicy updates property "RedriveAllowPolicy".
func (t *AWS_SQS_Queue) Set__RedriveAllowPolicy(v cfz.Expression[json.RawMessage]) *AWS_SQS_Queue {
	t.RedriveAllowPolicy = v
	return t
}

// SetV__RedriveAllowPolicy updates property "RedriveAllowPolicy".
func (t *AWS_SQS_Queue) SetV__RedriveAllowPolicy(v json.RawMessage) *AWS_SQS_Queue {
	t.RedriveAllowPolicy = cfz.V(v)
	return t
}

// Set__RedrivePolicy updates property "RedrivePolicy".
func (t *AWS_SQS_Queue) Set__RedrivePolicy(v cfz.Expression[json.RawMessage]) *AWS_SQS_Queue {
	t.RedrivePolicy = v
	return t
}

// SetV__RedrivePolicy updates property "RedrivePolicy".
func (t *AWS_SQS_Queue) SetV__RedrivePolicy(v json.RawMessage) *AWS_SQS_Queue {
	t.RedrivePolicy = cfz.V(v)
	return t
}

// Set__SqsManagedSseEnabled updates property "SqsManagedSseEnabled".
func (t *AWS_SQS_Queue) Set__SqsManagedSseEnabled(v cfz.Expression[bool]) *AWS_SQS_Queue {
	t.SqsManagedSseEnabled = v
	return t
}

// SetV__SqsManagedSseEnabled updates property "SqsManagedSseEnabled".
func (t *AWS_SQS_Queue) SetV__SqsManagedSseEnabled(v bool) *AWS_SQS_Queue {
	t.SqsManagedSseEnabled = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SQS_Queue) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SQS_Queue {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SQS_Queue) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SQS_Queue {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SQS_Queue) SetSV__Tags(v ...cfz.Tag) *AWS_SQS_Queue {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VisibilityTimeout updates property "VisibilityTimeout".
func (t *AWS_SQS_Queue) Set__VisibilityTimeout(v cfz.Expression[int32]) *AWS_SQS_Queue {
	t.VisibilityTimeout = v
	return t
}

// SetV__VisibilityTimeout updates property "VisibilityTimeout".
func (t *AWS_SQS_Queue) SetV__VisibilityTimeout(v int32) *AWS_SQS_Queue {
	t.VisibilityTimeout = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SQS_Queue) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_SQS_Queue) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SQS_Queue__AttributesMap.Arn))
}

// GetAtt__QueueName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: QueueName
func (t *AWS_SQS_Queue) GetAtt__QueueName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SQS_Queue__AttributesMap.QueueName))
}

// GetAtt__QueueUrl returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: QueueUrl
func (t *AWS_SQS_Queue) GetAtt__QueueUrl() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SQS_Queue__AttributesMap.QueueUrl))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SQS_Queue) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_SQS_Queue) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__QueueName returns a conventionally configured output for an attribute of this resource.
// Attribute: QueueName
func (t *AWS_SQS_Queue) GetConventionalOutputAtt__QueueName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttQueueName", t.GetAtt__QueueName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__QueueUrl returns a conventionally configured output for an attribute of this resource.
// Attribute: QueueUrl
func (t *AWS_SQS_Queue) GetConventionalOutputAtt__QueueUrl(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttQueueUrl", t.GetAtt__QueueUrl())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SQS_Queue) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SQS_Queue

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SQS_Queue) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
