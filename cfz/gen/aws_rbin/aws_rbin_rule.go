// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_rbin

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Rbin_Rule)(nil)
	_ cfz.Resource                   = (*AWS_Rbin_Rule)(nil)
)

const (
	// AWS_Rbin_Rule__Type is the CloudFormation type for AWS::Rbin::Rule.
	AWS_Rbin_Rule__Type = "AWS::Rbin::Rule"
)

var (
	// AWS_Rbin_Rule__AttributesMap reports all the CloudFormation attributes for AWS::Rbin::Rule.
	AWS_Rbin_Rule__AttributesMap = struct {
		Arn        string
		Identifier string
		LockState  string
	}{
		Arn:        "Arn",
		Identifier: "Identifier",
		LockState:  "LockState",
	}

	// AWS_Rbin_Rule__AttributesSlice reports all the CloudFormation attributes for AWS::Rbin::Rule.
	AWS_Rbin_Rule__AttributesSlice = []string{
		AWS_Rbin_Rule__AttributesMap.Arn,
		AWS_Rbin_Rule__AttributesMap.Identifier,
		AWS_Rbin_Rule__AttributesMap.LockState,
	}
)

var (
	// AWS_Rbin_Rule__PropertiesMap reports all the CloudFormation properties for AWS::Rbin::Rule.
	AWS_Rbin_Rule__PropertiesMap = struct {
		Description         string
		ExcludeResourceTags string
		LockConfiguration   string
		ResourceTags        string
		ResourceType        string
		RetentionPeriod     string
		Status              string
		Tags                string
	}{
		Description:         "Description",
		ExcludeResourceTags: "ExcludeResourceTags",
		LockConfiguration:   "LockConfiguration",
		ResourceTags:        "ResourceTags",
		ResourceType:        "ResourceType",
		RetentionPeriod:     "RetentionPeriod",
		Status:              "Status",
		Tags:                "Tags",
	}

	// AWS_Rbin_Rule__PropertiesSlice reports all the CloudFormation properties for AWS::Rbin::Rule.
	AWS_Rbin_Rule__PropertiesSlice = []string{
		AWS_Rbin_Rule__PropertiesMap.Description,
		AWS_Rbin_Rule__PropertiesMap.ExcludeResourceTags,
		AWS_Rbin_Rule__PropertiesMap.LockConfiguration,
		AWS_Rbin_Rule__PropertiesMap.ResourceTags,
		AWS_Rbin_Rule__PropertiesMap.ResourceType,
		AWS_Rbin_Rule__PropertiesMap.RetentionPeriod,
		AWS_Rbin_Rule__PropertiesMap.Status,
		AWS_Rbin_Rule__PropertiesMap.Tags,
	}
)

// AWS_Rbin_Rule is a binding for AWS::Rbin::Rule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html
type AWS_Rbin_Rule struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// ExcludeResourceTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-excluderesourcetags
	ExcludeResourceTags cfz.ExpressionSlice[AWS_Rbin_Rule_ResourceTag] `json:"ExcludeResourceTags,omitempty"`

	// LockConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-lockconfiguration
	LockConfiguration cfz.Expression[AWS_Rbin_Rule_UnlockDelay] `json:"LockConfiguration,omitempty"`

	// ResourceTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-resourcetags
	ResourceTags cfz.ExpressionSlice[AWS_Rbin_Rule_ResourceTag] `json:"ResourceTags,omitempty"`

	// ResourceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-resourcetype
	ResourceType cfz.Expression[string] `json:"ResourceType,omitempty"`

	// RetentionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-retentionperiod
	RetentionPeriod cfz.Expression[AWS_Rbin_Rule_RetentionPeriod] `json:"RetentionPeriod,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-status
	Status cfz.Expression[string] `json:"Status,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rbin-rule.html#cfn-rbin-rule-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Rbin_Rule initializes a new *AWS_Rbin_Rule.
func New__AWS_Rbin_Rule(logicalName string) *AWS_Rbin_Rule {
	return &AWS_Rbin_Rule{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Rbin_Rule) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Rbin_Rule) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Rbin_Rule) GetType() string {
	return AWS_Rbin_Rule__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Rbin_Rule) Set__LogicalName(v string) *AWS_Rbin_Rule {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Rbin_Rule) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Rbin_Rule {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Rbin_Rule) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Rbin_Rule {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Rbin_Rule) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Rbin_Rule {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Rbin_Rule) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Rbin_Rule {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Rbin_Rule) Set__RequestedOutputs(v []cfz.Output) *AWS_Rbin_Rule {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Rbin_Rule) Add__RequestedOutputs(v ...cfz.Output) *AWS_Rbin_Rule {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Rbin_Rule) Set__Description(v cfz.Expression[string]) *AWS_Rbin_Rule {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Rbin_Rule) SetV__Description(v string) *AWS_Rbin_Rule {
	t.Description = cfz.V(v)
	return t
}

// Set__ExcludeResourceTags updates property "ExcludeResourceTags".
func (t *AWS_Rbin_Rule) Set__ExcludeResourceTags(v cfz.ExpressionSlice[AWS_Rbin_Rule_ResourceTag]) *AWS_Rbin_Rule {
	t.ExcludeResourceTags = v
	return t
}

// SetS__ExcludeResourceTags updates property "ExcludeResourceTags".
func (t *AWS_Rbin_Rule) SetS__ExcludeResourceTags(v ...cfz.Expression[AWS_Rbin_Rule_ResourceTag]) *AWS_Rbin_Rule {
	t.ExcludeResourceTags = cfz.S(v...)
	return t
}

// SetSV__ExcludeResourceTags updates property "ExcludeResourceTags".
func (t *AWS_Rbin_Rule) SetSV__ExcludeResourceTags(v ...AWS_Rbin_Rule_ResourceTag) *AWS_Rbin_Rule {
	t.ExcludeResourceTags = cfz.SV(v...)
	return t
}

// Set__LockConfiguration updates property "LockConfiguration".
func (t *AWS_Rbin_Rule) Set__LockConfiguration(v cfz.Expression[AWS_Rbin_Rule_UnlockDelay]) *AWS_Rbin_Rule {
	t.LockConfiguration = v
	return t
}

// SetV__LockConfiguration updates property "LockConfiguration".
func (t *AWS_Rbin_Rule) SetV__LockConfiguration(v AWS_Rbin_Rule_UnlockDelay) *AWS_Rbin_Rule {
	t.LockConfiguration = cfz.V(v)
	return t
}

// Set__ResourceTags updates property "ResourceTags".
func (t *AWS_Rbin_Rule) Set__ResourceTags(v cfz.ExpressionSlice[AWS_Rbin_Rule_ResourceTag]) *AWS_Rbin_Rule {
	t.ResourceTags = v
	return t
}

// SetS__ResourceTags updates property "ResourceTags".
func (t *AWS_Rbin_Rule) SetS__ResourceTags(v ...cfz.Expression[AWS_Rbin_Rule_ResourceTag]) *AWS_Rbin_Rule {
	t.ResourceTags = cfz.S(v...)
	return t
}

// SetSV__ResourceTags updates property "ResourceTags".
func (t *AWS_Rbin_Rule) SetSV__ResourceTags(v ...AWS_Rbin_Rule_ResourceTag) *AWS_Rbin_Rule {
	t.ResourceTags = cfz.SV(v...)
	return t
}

// Set__ResourceType updates property "ResourceType".
func (t *AWS_Rbin_Rule) Set__ResourceType(v cfz.Expression[string]) *AWS_Rbin_Rule {
	t.ResourceType = v
	return t
}

// SetV__ResourceType updates property "ResourceType".
func (t *AWS_Rbin_Rule) SetV__ResourceType(v string) *AWS_Rbin_Rule {
	t.ResourceType = cfz.V(v)
	return t
}

// Set__RetentionPeriod updates property "RetentionPeriod".
func (t *AWS_Rbin_Rule) Set__RetentionPeriod(v cfz.Expression[AWS_Rbin_Rule_RetentionPeriod]) *AWS_Rbin_Rule {
	t.RetentionPeriod = v
	return t
}

// SetV__RetentionPeriod updates property "RetentionPeriod".
func (t *AWS_Rbin_Rule) SetV__RetentionPeriod(v AWS_Rbin_Rule_RetentionPeriod) *AWS_Rbin_Rule {
	t.RetentionPeriod = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t *AWS_Rbin_Rule) Set__Status(v cfz.Expression[string]) *AWS_Rbin_Rule {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t *AWS_Rbin_Rule) SetV__Status(v string) *AWS_Rbin_Rule {
	t.Status = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Rbin_Rule) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Rbin_Rule {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Rbin_Rule) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Rbin_Rule {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Rbin_Rule) SetSV__Tags(v ...cfz.Tag) *AWS_Rbin_Rule {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Rbin_Rule) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Rbin_Rule) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Rbin_Rule__AttributesMap.Arn))
}

// GetAtt__Identifier returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Identifier
func (t *AWS_Rbin_Rule) GetAtt__Identifier() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Rbin_Rule__AttributesMap.Identifier))
}

// GetAtt__LockState returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LockState
func (t *AWS_Rbin_Rule) GetAtt__LockState() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Rbin_Rule__AttributesMap.LockState))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Rbin_Rule) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Rbin_Rule) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Identifier returns a conventionally configured output for an attribute of this resource.
// Attribute: Identifier
func (t *AWS_Rbin_Rule) GetConventionalOutputAtt__Identifier(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIdentifier", t.GetAtt__Identifier())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LockState returns a conventionally configured output for an attribute of this resource.
// Attribute: LockState
func (t *AWS_Rbin_Rule) GetConventionalOutputAtt__LockState(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLockState", t.GetAtt__LockState())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Rbin_Rule) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Rbin_Rule

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Rbin_Rule) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
