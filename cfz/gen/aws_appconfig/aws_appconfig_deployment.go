// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appconfig

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppConfig_Deployment)(nil)
	_ cfz.Resource                   = (*AWS_AppConfig_Deployment)(nil)
)

const (
	// AWS_AppConfig_Deployment__Type is the CloudFormation type for AWS::AppConfig::Deployment.
	AWS_AppConfig_Deployment__Type = "AWS::AppConfig::Deployment"
)

var (
	// AWS_AppConfig_Deployment__PropertiesMap reports all the CloudFormation properties for AWS::AppConfig::Deployment.
	AWS_AppConfig_Deployment__PropertiesMap = struct {
		ApplicationId              string
		ConfigurationProfileId     string
		ConfigurationVersion       string
		DeploymentStrategyId       string
		Description                string
		DynamicExtensionParameters string
		EnvironmentId              string
		KmsKeyIdentifier           string
		Tags                       string
	}{
		ApplicationId:              "ApplicationId",
		ConfigurationProfileId:     "ConfigurationProfileId",
		ConfigurationVersion:       "ConfigurationVersion",
		DeploymentStrategyId:       "DeploymentStrategyId",
		Description:                "Description",
		DynamicExtensionParameters: "DynamicExtensionParameters",
		EnvironmentId:              "EnvironmentId",
		KmsKeyIdentifier:           "KmsKeyIdentifier",
		Tags:                       "Tags",
	}

	// AWS_AppConfig_Deployment__PropertiesSlice reports all the CloudFormation properties for AWS::AppConfig::Deployment.
	AWS_AppConfig_Deployment__PropertiesSlice = []string{
		AWS_AppConfig_Deployment__PropertiesMap.ApplicationId,
		AWS_AppConfig_Deployment__PropertiesMap.ConfigurationProfileId,
		AWS_AppConfig_Deployment__PropertiesMap.ConfigurationVersion,
		AWS_AppConfig_Deployment__PropertiesMap.DeploymentStrategyId,
		AWS_AppConfig_Deployment__PropertiesMap.Description,
		AWS_AppConfig_Deployment__PropertiesMap.DynamicExtensionParameters,
		AWS_AppConfig_Deployment__PropertiesMap.EnvironmentId,
		AWS_AppConfig_Deployment__PropertiesMap.KmsKeyIdentifier,
		AWS_AppConfig_Deployment__PropertiesMap.Tags,
	}
)

// AWS_AppConfig_Deployment is a binding for AWS::AppConfig::Deployment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html
type AWS_AppConfig_Deployment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-applicationid
	ApplicationId cfz.Expression[string] `json:"ApplicationId,omitempty"`

	// ConfigurationProfileId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-configurationprofileid
	ConfigurationProfileId cfz.Expression[string] `json:"ConfigurationProfileId,omitempty"`

	// ConfigurationVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-configurationversion
	ConfigurationVersion cfz.Expression[string] `json:"ConfigurationVersion,omitempty"`

	// DeploymentStrategyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-deploymentstrategyid
	DeploymentStrategyId cfz.Expression[string] `json:"DeploymentStrategyId,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DynamicExtensionParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-dynamicextensionparameters
	DynamicExtensionParameters cfz.ExpressionSlice[AWS_AppConfig_Deployment_DynamicExtensionParameters] `json:"DynamicExtensionParameters,omitempty"`

	// EnvironmentId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-environmentid
	EnvironmentId cfz.Expression[string] `json:"EnvironmentId,omitempty"`

	// KmsKeyIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-kmskeyidentifier
	KmsKeyIdentifier cfz.Expression[string] `json:"KmsKeyIdentifier,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appconfig-deployment.html#cfn-appconfig-deployment-tags
	Tags cfz.ExpressionSlice[AWS_AppConfig_Deployment_Tags] `json:"Tags,omitempty"`
}

// New__AWS_AppConfig_Deployment initializes a new *AWS_AppConfig_Deployment.
func New__AWS_AppConfig_Deployment(logicalName string) *AWS_AppConfig_Deployment {
	return &AWS_AppConfig_Deployment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppConfig_Deployment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppConfig_Deployment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppConfig_Deployment) GetType() string {
	return AWS_AppConfig_Deployment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppConfig_Deployment) Set__LogicalName(v string) *AWS_AppConfig_Deployment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppConfig_Deployment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppConfig_Deployment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppConfig_Deployment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppConfig_Deployment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppConfig_Deployment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppConfig_Deployment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppConfig_Deployment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppConfig_Deployment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppConfig_Deployment) Set__RequestedOutputs(v []cfz.Output) *AWS_AppConfig_Deployment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppConfig_Deployment) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppConfig_Deployment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationId updates property "ApplicationId".
func (t *AWS_AppConfig_Deployment) Set__ApplicationId(v cfz.Expression[string]) *AWS_AppConfig_Deployment {
	t.ApplicationId = v
	return t
}

// SetV__ApplicationId updates property "ApplicationId".
func (t *AWS_AppConfig_Deployment) SetV__ApplicationId(v string) *AWS_AppConfig_Deployment {
	t.ApplicationId = cfz.V(v)
	return t
}

// Set__ConfigurationProfileId updates property "ConfigurationProfileId".
func (t *AWS_AppConfig_Deployment) Set__ConfigurationProfileId(v cfz.Expression[string]) *AWS_AppConfig_Deployment {
	t.ConfigurationProfileId = v
	return t
}

// SetV__ConfigurationProfileId updates property "ConfigurationProfileId".
func (t *AWS_AppConfig_Deployment) SetV__ConfigurationProfileId(v string) *AWS_AppConfig_Deployment {
	t.ConfigurationProfileId = cfz.V(v)
	return t
}

// Set__ConfigurationVersion updates property "ConfigurationVersion".
func (t *AWS_AppConfig_Deployment) Set__ConfigurationVersion(v cfz.Expression[string]) *AWS_AppConfig_Deployment {
	t.ConfigurationVersion = v
	return t
}

// SetV__ConfigurationVersion updates property "ConfigurationVersion".
func (t *AWS_AppConfig_Deployment) SetV__ConfigurationVersion(v string) *AWS_AppConfig_Deployment {
	t.ConfigurationVersion = cfz.V(v)
	return t
}

// Set__DeploymentStrategyId updates property "DeploymentStrategyId".
func (t *AWS_AppConfig_Deployment) Set__DeploymentStrategyId(v cfz.Expression[string]) *AWS_AppConfig_Deployment {
	t.DeploymentStrategyId = v
	return t
}

// SetV__DeploymentStrategyId updates property "DeploymentStrategyId".
func (t *AWS_AppConfig_Deployment) SetV__DeploymentStrategyId(v string) *AWS_AppConfig_Deployment {
	t.DeploymentStrategyId = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_AppConfig_Deployment) Set__Description(v cfz.Expression[string]) *AWS_AppConfig_Deployment {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_AppConfig_Deployment) SetV__Description(v string) *AWS_AppConfig_Deployment {
	t.Description = cfz.V(v)
	return t
}

// Set__DynamicExtensionParameters updates property "DynamicExtensionParameters".
func (t *AWS_AppConfig_Deployment) Set__DynamicExtensionParameters(v cfz.ExpressionSlice[AWS_AppConfig_Deployment_DynamicExtensionParameters]) *AWS_AppConfig_Deployment {
	t.DynamicExtensionParameters = v
	return t
}

// SetS__DynamicExtensionParameters updates property "DynamicExtensionParameters".
func (t *AWS_AppConfig_Deployment) SetS__DynamicExtensionParameters(v ...cfz.Expression[AWS_AppConfig_Deployment_DynamicExtensionParameters]) *AWS_AppConfig_Deployment {
	t.DynamicExtensionParameters = cfz.S(v...)
	return t
}

// SetSV__DynamicExtensionParameters updates property "DynamicExtensionParameters".
func (t *AWS_AppConfig_Deployment) SetSV__DynamicExtensionParameters(v ...AWS_AppConfig_Deployment_DynamicExtensionParameters) *AWS_AppConfig_Deployment {
	t.DynamicExtensionParameters = cfz.SV(v...)
	return t
}

// Set__EnvironmentId updates property "EnvironmentId".
func (t *AWS_AppConfig_Deployment) Set__EnvironmentId(v cfz.Expression[string]) *AWS_AppConfig_Deployment {
	t.EnvironmentId = v
	return t
}

// SetV__EnvironmentId updates property "EnvironmentId".
func (t *AWS_AppConfig_Deployment) SetV__EnvironmentId(v string) *AWS_AppConfig_Deployment {
	t.EnvironmentId = cfz.V(v)
	return t
}

// Set__KmsKeyIdentifier updates property "KmsKeyIdentifier".
func (t *AWS_AppConfig_Deployment) Set__KmsKeyIdentifier(v cfz.Expression[string]) *AWS_AppConfig_Deployment {
	t.KmsKeyIdentifier = v
	return t
}

// SetV__KmsKeyIdentifier updates property "KmsKeyIdentifier".
func (t *AWS_AppConfig_Deployment) SetV__KmsKeyIdentifier(v string) *AWS_AppConfig_Deployment {
	t.KmsKeyIdentifier = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppConfig_Deployment) Set__Tags(v cfz.ExpressionSlice[AWS_AppConfig_Deployment_Tags]) *AWS_AppConfig_Deployment {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppConfig_Deployment) SetS__Tags(v ...cfz.Expression[AWS_AppConfig_Deployment_Tags]) *AWS_AppConfig_Deployment {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppConfig_Deployment) SetSV__Tags(v ...AWS_AppConfig_Deployment_Tags) *AWS_AppConfig_Deployment {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppConfig_Deployment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppConfig_Deployment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppConfig_Deployment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppConfig_Deployment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppConfig_Deployment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
