// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_licensemanager

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_LicenseManager_License_ConsumptionConfiguration__Type is the CloudFormation type for AWS::LicenseManager::License.ConsumptionConfiguration.
	AWS_LicenseManager_License_ConsumptionConfiguration__Type = "AWS::LicenseManager::License.ConsumptionConfiguration"
)

var (
	// AWS_LicenseManager_License_ConsumptionConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::LicenseManager::License.ConsumptionConfiguration.
	AWS_LicenseManager_License_ConsumptionConfiguration__PropertiesMap = struct {
		BorrowConfiguration      string
		ProvisionalConfiguration string
		RenewType                string
	}{
		BorrowConfiguration:      "BorrowConfiguration",
		ProvisionalConfiguration: "ProvisionalConfiguration",
		RenewType:                "RenewType",
	}

	// AWS_LicenseManager_License_ConsumptionConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::LicenseManager::License.ConsumptionConfiguration.
	AWS_LicenseManager_License_ConsumptionConfiguration__PropertiesSlice = []string{
		AWS_LicenseManager_License_ConsumptionConfiguration__PropertiesMap.BorrowConfiguration,
		AWS_LicenseManager_License_ConsumptionConfiguration__PropertiesMap.ProvisionalConfiguration,
		AWS_LicenseManager_License_ConsumptionConfiguration__PropertiesMap.RenewType,
	}
)

// AWS_LicenseManager_License_ConsumptionConfiguration is a binding for AWS::LicenseManager::License.ConsumptionConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html
type AWS_LicenseManager_License_ConsumptionConfiguration struct {
	// BorrowConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-borrowconfiguration
	BorrowConfiguration cfz.Expression[AWS_LicenseManager_License_BorrowConfiguration] `json:"BorrowConfiguration,omitempty"`

	// ProvisionalConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-provisionalconfiguration
	ProvisionalConfiguration cfz.Expression[AWS_LicenseManager_License_ProvisionalConfiguration] `json:"ProvisionalConfiguration,omitempty"`

	// RenewType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-renewtype
	RenewType cfz.Expression[string] `json:"RenewType,omitempty"`
}

// New__AWS_LicenseManager_License_ConsumptionConfiguration initializes a new AWS_LicenseManager_License_ConsumptionConfiguration.
func New__AWS_LicenseManager_License_ConsumptionConfiguration() AWS_LicenseManager_License_ConsumptionConfiguration {
	return AWS_LicenseManager_License_ConsumptionConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_LicenseManager_License_ConsumptionConfiguration) GetType() string {
	return AWS_LicenseManager_License_ConsumptionConfiguration__Type
}

// Set__BorrowConfiguration updates property "BorrowConfiguration".
func (t AWS_LicenseManager_License_ConsumptionConfiguration) Set__BorrowConfiguration(v cfz.Expression[AWS_LicenseManager_License_BorrowConfiguration]) AWS_LicenseManager_License_ConsumptionConfiguration {
	t.BorrowConfiguration = v
	return t
}

// SetV__BorrowConfiguration updates property "BorrowConfiguration".
func (t AWS_LicenseManager_License_ConsumptionConfiguration) SetV__BorrowConfiguration(v AWS_LicenseManager_License_BorrowConfiguration) AWS_LicenseManager_License_ConsumptionConfiguration {
	t.BorrowConfiguration = cfz.V(v)
	return t
}

// Set__ProvisionalConfiguration updates property "ProvisionalConfiguration".
func (t AWS_LicenseManager_License_ConsumptionConfiguration) Set__ProvisionalConfiguration(v cfz.Expression[AWS_LicenseManager_License_ProvisionalConfiguration]) AWS_LicenseManager_License_ConsumptionConfiguration {
	t.ProvisionalConfiguration = v
	return t
}

// SetV__ProvisionalConfiguration updates property "ProvisionalConfiguration".
func (t AWS_LicenseManager_License_ConsumptionConfiguration) SetV__ProvisionalConfiguration(v AWS_LicenseManager_License_ProvisionalConfiguration) AWS_LicenseManager_License_ConsumptionConfiguration {
	t.ProvisionalConfiguration = cfz.V(v)
	return t
}

// Set__RenewType updates property "RenewType".
func (t AWS_LicenseManager_License_ConsumptionConfiguration) Set__RenewType(v cfz.Expression[string]) AWS_LicenseManager_License_ConsumptionConfiguration {
	t.RenewType = v
	return t
}

// SetV__RenewType updates property "RenewType".
func (t AWS_LicenseManager_License_ConsumptionConfiguration) SetV__RenewType(v string) AWS_LicenseManager_License_ConsumptionConfiguration {
	t.RenewType = cfz.V(v)
	return t
}
