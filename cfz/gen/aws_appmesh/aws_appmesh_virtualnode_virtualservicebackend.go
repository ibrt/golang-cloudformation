// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appmesh

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_AppMesh_VirtualNode_VirtualServiceBackend__Type is the CloudFormation type for AWS::AppMesh::VirtualNode.VirtualServiceBackend.
	AWS_AppMesh_VirtualNode_VirtualServiceBackend__Type = "AWS::AppMesh::VirtualNode.VirtualServiceBackend"
)

var (
	// AWS_AppMesh_VirtualNode_VirtualServiceBackend__PropertiesMap reports all the CloudFormation properties for AWS::AppMesh::VirtualNode.VirtualServiceBackend.
	AWS_AppMesh_VirtualNode_VirtualServiceBackend__PropertiesMap = struct {
		ClientPolicy       string
		VirtualServiceName string
	}{
		ClientPolicy:       "ClientPolicy",
		VirtualServiceName: "VirtualServiceName",
	}

	// AWS_AppMesh_VirtualNode_VirtualServiceBackend__PropertiesSlice reports all the CloudFormation properties for AWS::AppMesh::VirtualNode.VirtualServiceBackend.
	AWS_AppMesh_VirtualNode_VirtualServiceBackend__PropertiesSlice = []string{
		AWS_AppMesh_VirtualNode_VirtualServiceBackend__PropertiesMap.ClientPolicy,
		AWS_AppMesh_VirtualNode_VirtualServiceBackend__PropertiesMap.VirtualServiceName,
	}
)

// AWS_AppMesh_VirtualNode_VirtualServiceBackend is a binding for AWS::AppMesh::VirtualNode.VirtualServiceBackend.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-virtualnode-virtualservicebackend.html
type AWS_AppMesh_VirtualNode_VirtualServiceBackend struct {
	// ClientPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-virtualnode-virtualservicebackend.html#cfn-appmesh-virtualnode-virtualservicebackend-clientpolicy
	ClientPolicy cfz.Expression[AWS_AppMesh_VirtualNode_ClientPolicy] `json:"ClientPolicy,omitempty"`

	// VirtualServiceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-virtualnode-virtualservicebackend.html#cfn-appmesh-virtualnode-virtualservicebackend-virtualservicename
	VirtualServiceName cfz.Expression[string] `json:"VirtualServiceName,omitempty"`
}

// New__AWS_AppMesh_VirtualNode_VirtualServiceBackend initializes a new AWS_AppMesh_VirtualNode_VirtualServiceBackend.
func New__AWS_AppMesh_VirtualNode_VirtualServiceBackend() AWS_AppMesh_VirtualNode_VirtualServiceBackend {
	return AWS_AppMesh_VirtualNode_VirtualServiceBackend{}
}

// GetType returns the CloudFormation type.
func (AWS_AppMesh_VirtualNode_VirtualServiceBackend) GetType() string {
	return AWS_AppMesh_VirtualNode_VirtualServiceBackend__Type
}

// Set__ClientPolicy updates property "ClientPolicy".
func (t AWS_AppMesh_VirtualNode_VirtualServiceBackend) Set__ClientPolicy(v cfz.Expression[AWS_AppMesh_VirtualNode_ClientPolicy]) AWS_AppMesh_VirtualNode_VirtualServiceBackend {
	t.ClientPolicy = v
	return t
}

// SetV__ClientPolicy updates property "ClientPolicy".
func (t AWS_AppMesh_VirtualNode_VirtualServiceBackend) SetV__ClientPolicy(v AWS_AppMesh_VirtualNode_ClientPolicy) AWS_AppMesh_VirtualNode_VirtualServiceBackend {
	t.ClientPolicy = cfz.V(v)
	return t
}

// Set__VirtualServiceName updates property "VirtualServiceName".
func (t AWS_AppMesh_VirtualNode_VirtualServiceBackend) Set__VirtualServiceName(v cfz.Expression[string]) AWS_AppMesh_VirtualNode_VirtualServiceBackend {
	t.VirtualServiceName = v
	return t
}

// SetV__VirtualServiceName updates property "VirtualServiceName".
func (t AWS_AppMesh_VirtualNode_VirtualServiceBackend) SetV__VirtualServiceName(v string) AWS_AppMesh_VirtualNode_VirtualServiceBackend {
	t.VirtualServiceName = cfz.V(v)
	return t
}
