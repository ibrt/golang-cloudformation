// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appmesh

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppMesh_VirtualService)(nil)
	_ cfz.Resource                   = (*AWS_AppMesh_VirtualService)(nil)
)

const (
	// AWS_AppMesh_VirtualService__Type is the CloudFormation type for AWS::AppMesh::VirtualService.
	AWS_AppMesh_VirtualService__Type = "AWS::AppMesh::VirtualService"
)

var (
	// AWS_AppMesh_VirtualService__AttributesMap reports all the CloudFormation attributes for AWS::AppMesh::VirtualService.
	AWS_AppMesh_VirtualService__AttributesMap = struct {
		Arn                string
		MeshName           string
		MeshOwner          string
		ResourceOwner      string
		Uid                string
		VirtualServiceName string
	}{
		Arn:                "Arn",
		MeshName:           "MeshName",
		MeshOwner:          "MeshOwner",
		ResourceOwner:      "ResourceOwner",
		Uid:                "Uid",
		VirtualServiceName: "VirtualServiceName",
	}

	// AWS_AppMesh_VirtualService__AttributesSlice reports all the CloudFormation attributes for AWS::AppMesh::VirtualService.
	AWS_AppMesh_VirtualService__AttributesSlice = []string{
		AWS_AppMesh_VirtualService__AttributesMap.Arn,
		AWS_AppMesh_VirtualService__AttributesMap.MeshName,
		AWS_AppMesh_VirtualService__AttributesMap.MeshOwner,
		AWS_AppMesh_VirtualService__AttributesMap.ResourceOwner,
		AWS_AppMesh_VirtualService__AttributesMap.Uid,
		AWS_AppMesh_VirtualService__AttributesMap.VirtualServiceName,
	}
)

var (
	// AWS_AppMesh_VirtualService__PropertiesMap reports all the CloudFormation properties for AWS::AppMesh::VirtualService.
	AWS_AppMesh_VirtualService__PropertiesMap = struct {
		MeshName           string
		MeshOwner          string
		Spec               string
		Tags               string
		VirtualServiceName string
	}{
		MeshName:           "MeshName",
		MeshOwner:          "MeshOwner",
		Spec:               "Spec",
		Tags:               "Tags",
		VirtualServiceName: "VirtualServiceName",
	}

	// AWS_AppMesh_VirtualService__PropertiesSlice reports all the CloudFormation properties for AWS::AppMesh::VirtualService.
	AWS_AppMesh_VirtualService__PropertiesSlice = []string{
		AWS_AppMesh_VirtualService__PropertiesMap.MeshName,
		AWS_AppMesh_VirtualService__PropertiesMap.MeshOwner,
		AWS_AppMesh_VirtualService__PropertiesMap.Spec,
		AWS_AppMesh_VirtualService__PropertiesMap.Tags,
		AWS_AppMesh_VirtualService__PropertiesMap.VirtualServiceName,
	}
)

// AWS_AppMesh_VirtualService is a binding for AWS::AppMesh::VirtualService.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html
type AWS_AppMesh_VirtualService struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// MeshName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-meshname
	MeshName cfz.Expression[string] `json:"MeshName,omitempty"`

	// MeshOwner is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-meshowner
	MeshOwner cfz.Expression[string] `json:"MeshOwner,omitempty"`

	// Spec is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-spec
	Spec cfz.Expression[AWS_AppMesh_VirtualService_VirtualServiceSpec] `json:"Spec,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VirtualServiceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appmesh-virtualservice.html#cfn-appmesh-virtualservice-virtualservicename
	VirtualServiceName cfz.Expression[string] `json:"VirtualServiceName,omitempty"`
}

// New__AWS_AppMesh_VirtualService initializes a new *AWS_AppMesh_VirtualService.
func New__AWS_AppMesh_VirtualService(logicalName string) *AWS_AppMesh_VirtualService {
	return &AWS_AppMesh_VirtualService{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppMesh_VirtualService) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppMesh_VirtualService) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppMesh_VirtualService) GetType() string {
	return AWS_AppMesh_VirtualService__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppMesh_VirtualService) Set__LogicalName(v string) *AWS_AppMesh_VirtualService {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppMesh_VirtualService) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppMesh_VirtualService {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppMesh_VirtualService) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppMesh_VirtualService {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppMesh_VirtualService) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppMesh_VirtualService {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppMesh_VirtualService) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppMesh_VirtualService {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppMesh_VirtualService) Set__RequestedOutputs(v []cfz.Output) *AWS_AppMesh_VirtualService {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppMesh_VirtualService) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppMesh_VirtualService {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__MeshName updates property "MeshName".
func (t *AWS_AppMesh_VirtualService) Set__MeshName(v cfz.Expression[string]) *AWS_AppMesh_VirtualService {
	t.MeshName = v
	return t
}

// SetV__MeshName updates property "MeshName".
func (t *AWS_AppMesh_VirtualService) SetV__MeshName(v string) *AWS_AppMesh_VirtualService {
	t.MeshName = cfz.V(v)
	return t
}

// Set__MeshOwner updates property "MeshOwner".
func (t *AWS_AppMesh_VirtualService) Set__MeshOwner(v cfz.Expression[string]) *AWS_AppMesh_VirtualService {
	t.MeshOwner = v
	return t
}

// SetV__MeshOwner updates property "MeshOwner".
func (t *AWS_AppMesh_VirtualService) SetV__MeshOwner(v string) *AWS_AppMesh_VirtualService {
	t.MeshOwner = cfz.V(v)
	return t
}

// Set__Spec updates property "Spec".
func (t *AWS_AppMesh_VirtualService) Set__Spec(v cfz.Expression[AWS_AppMesh_VirtualService_VirtualServiceSpec]) *AWS_AppMesh_VirtualService {
	t.Spec = v
	return t
}

// SetV__Spec updates property "Spec".
func (t *AWS_AppMesh_VirtualService) SetV__Spec(v AWS_AppMesh_VirtualService_VirtualServiceSpec) *AWS_AppMesh_VirtualService {
	t.Spec = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppMesh_VirtualService) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_AppMesh_VirtualService {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppMesh_VirtualService) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_AppMesh_VirtualService {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppMesh_VirtualService) SetSV__Tags(v ...cfz.Tag) *AWS_AppMesh_VirtualService {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VirtualServiceName updates property "VirtualServiceName".
func (t *AWS_AppMesh_VirtualService) Set__VirtualServiceName(v cfz.Expression[string]) *AWS_AppMesh_VirtualService {
	t.VirtualServiceName = v
	return t
}

// SetV__VirtualServiceName updates property "VirtualServiceName".
func (t *AWS_AppMesh_VirtualService) SetV__VirtualServiceName(v string) *AWS_AppMesh_VirtualService {
	t.VirtualServiceName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppMesh_VirtualService) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_AppMesh_VirtualService) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppMesh_VirtualService__AttributesMap.Arn))
}

// GetAtt__MeshName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MeshName
func (t *AWS_AppMesh_VirtualService) GetAtt__MeshName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppMesh_VirtualService__AttributesMap.MeshName))
}

// GetAtt__MeshOwner returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MeshOwner
func (t *AWS_AppMesh_VirtualService) GetAtt__MeshOwner() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppMesh_VirtualService__AttributesMap.MeshOwner))
}

// GetAtt__ResourceOwner returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceOwner
func (t *AWS_AppMesh_VirtualService) GetAtt__ResourceOwner() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppMesh_VirtualService__AttributesMap.ResourceOwner))
}

// GetAtt__Uid returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Uid
func (t *AWS_AppMesh_VirtualService) GetAtt__Uid() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppMesh_VirtualService__AttributesMap.Uid))
}

// GetAtt__VirtualServiceName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VirtualServiceName
func (t *AWS_AppMesh_VirtualService) GetAtt__VirtualServiceName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppMesh_VirtualService__AttributesMap.VirtualServiceName))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppMesh_VirtualService) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_AppMesh_VirtualService) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MeshName returns a conventionally configured output for an attribute of this resource.
// Attribute: MeshName
func (t *AWS_AppMesh_VirtualService) GetConventionalOutputAtt__MeshName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMeshName", t.GetAtt__MeshName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MeshOwner returns a conventionally configured output for an attribute of this resource.
// Attribute: MeshOwner
func (t *AWS_AppMesh_VirtualService) GetConventionalOutputAtt__MeshOwner(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMeshOwner", t.GetAtt__MeshOwner())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceOwner returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceOwner
func (t *AWS_AppMesh_VirtualService) GetConventionalOutputAtt__ResourceOwner(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceOwner", t.GetAtt__ResourceOwner())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Uid returns a conventionally configured output for an attribute of this resource.
// Attribute: Uid
func (t *AWS_AppMesh_VirtualService) GetConventionalOutputAtt__Uid(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUid", t.GetAtt__Uid())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VirtualServiceName returns a conventionally configured output for an attribute of this resource.
// Attribute: VirtualServiceName
func (t *AWS_AppMesh_VirtualService) GetConventionalOutputAtt__VirtualServiceName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVirtualServiceName", t.GetAtt__VirtualServiceName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppMesh_VirtualService) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppMesh_VirtualService

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppMesh_VirtualService) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
