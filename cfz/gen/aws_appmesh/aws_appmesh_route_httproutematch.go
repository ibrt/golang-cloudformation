// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appmesh

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_AppMesh_Route_HttpRouteMatch__Type is the CloudFormation type for AWS::AppMesh::Route.HttpRouteMatch.
	AWS_AppMesh_Route_HttpRouteMatch__Type = "AWS::AppMesh::Route.HttpRouteMatch"
)

var (
	// AWS_AppMesh_Route_HttpRouteMatch__PropertiesMap reports all the CloudFormation properties for AWS::AppMesh::Route.HttpRouteMatch.
	AWS_AppMesh_Route_HttpRouteMatch__PropertiesMap = struct {
		Headers         string
		Method          string
		Path            string
		Port            string
		Prefix          string
		QueryParameters string
		Scheme          string
	}{
		Headers:         "Headers",
		Method:          "Method",
		Path:            "Path",
		Port:            "Port",
		Prefix:          "Prefix",
		QueryParameters: "QueryParameters",
		Scheme:          "Scheme",
	}

	// AWS_AppMesh_Route_HttpRouteMatch__PropertiesSlice reports all the CloudFormation properties for AWS::AppMesh::Route.HttpRouteMatch.
	AWS_AppMesh_Route_HttpRouteMatch__PropertiesSlice = []string{
		AWS_AppMesh_Route_HttpRouteMatch__PropertiesMap.Headers,
		AWS_AppMesh_Route_HttpRouteMatch__PropertiesMap.Method,
		AWS_AppMesh_Route_HttpRouteMatch__PropertiesMap.Path,
		AWS_AppMesh_Route_HttpRouteMatch__PropertiesMap.Port,
		AWS_AppMesh_Route_HttpRouteMatch__PropertiesMap.Prefix,
		AWS_AppMesh_Route_HttpRouteMatch__PropertiesMap.QueryParameters,
		AWS_AppMesh_Route_HttpRouteMatch__PropertiesMap.Scheme,
	}
)

// AWS_AppMesh_Route_HttpRouteMatch is a binding for AWS::AppMesh::Route.HttpRouteMatch.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-route-httproutematch.html
type AWS_AppMesh_Route_HttpRouteMatch struct {
	// Headers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-route-httproutematch.html#cfn-appmesh-route-httproutematch-headers
	Headers cfz.ExpressionSlice[AWS_AppMesh_Route_HttpRouteHeader] `json:"Headers,omitempty"`

	// Method is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-route-httproutematch.html#cfn-appmesh-route-httproutematch-method
	Method cfz.Expression[string] `json:"Method,omitempty"`

	// Path is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-route-httproutematch.html#cfn-appmesh-route-httproutematch-path
	Path cfz.Expression[AWS_AppMesh_Route_HttpPathMatch] `json:"Path,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-route-httproutematch.html#cfn-appmesh-route-httproutematch-port
	Port cfz.Expression[int32] `json:"Port,omitempty"`

	// Prefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-route-httproutematch.html#cfn-appmesh-route-httproutematch-prefix
	Prefix cfz.Expression[string] `json:"Prefix,omitempty"`

	// QueryParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-route-httproutematch.html#cfn-appmesh-route-httproutematch-queryparameters
	QueryParameters cfz.ExpressionSlice[AWS_AppMesh_Route_QueryParameter] `json:"QueryParameters,omitempty"`

	// Scheme is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appmesh-route-httproutematch.html#cfn-appmesh-route-httproutematch-scheme
	Scheme cfz.Expression[string] `json:"Scheme,omitempty"`
}

// New__AWS_AppMesh_Route_HttpRouteMatch initializes a new AWS_AppMesh_Route_HttpRouteMatch.
func New__AWS_AppMesh_Route_HttpRouteMatch() AWS_AppMesh_Route_HttpRouteMatch {
	return AWS_AppMesh_Route_HttpRouteMatch{}
}

// GetType returns the CloudFormation type.
func (AWS_AppMesh_Route_HttpRouteMatch) GetType() string {
	return AWS_AppMesh_Route_HttpRouteMatch__Type
}

// Set__Headers updates property "Headers".
func (t AWS_AppMesh_Route_HttpRouteMatch) Set__Headers(v cfz.ExpressionSlice[AWS_AppMesh_Route_HttpRouteHeader]) AWS_AppMesh_Route_HttpRouteMatch {
	t.Headers = v
	return t
}

// SetS__Headers updates property "Headers".
func (t AWS_AppMesh_Route_HttpRouteMatch) SetS__Headers(v ...cfz.Expression[AWS_AppMesh_Route_HttpRouteHeader]) AWS_AppMesh_Route_HttpRouteMatch {
	t.Headers = cfz.S(v...)
	return t
}

// SetSV__Headers updates property "Headers".
func (t AWS_AppMesh_Route_HttpRouteMatch) SetSV__Headers(v ...AWS_AppMesh_Route_HttpRouteHeader) AWS_AppMesh_Route_HttpRouteMatch {
	t.Headers = cfz.SV(v...)
	return t
}

// Set__Method updates property "Method".
func (t AWS_AppMesh_Route_HttpRouteMatch) Set__Method(v cfz.Expression[string]) AWS_AppMesh_Route_HttpRouteMatch {
	t.Method = v
	return t
}

// SetV__Method updates property "Method".
func (t AWS_AppMesh_Route_HttpRouteMatch) SetV__Method(v string) AWS_AppMesh_Route_HttpRouteMatch {
	t.Method = cfz.V(v)
	return t
}

// Set__Path updates property "Path".
func (t AWS_AppMesh_Route_HttpRouteMatch) Set__Path(v cfz.Expression[AWS_AppMesh_Route_HttpPathMatch]) AWS_AppMesh_Route_HttpRouteMatch {
	t.Path = v
	return t
}

// SetV__Path updates property "Path".
func (t AWS_AppMesh_Route_HttpRouteMatch) SetV__Path(v AWS_AppMesh_Route_HttpPathMatch) AWS_AppMesh_Route_HttpRouteMatch {
	t.Path = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t AWS_AppMesh_Route_HttpRouteMatch) Set__Port(v cfz.Expression[int32]) AWS_AppMesh_Route_HttpRouteMatch {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t AWS_AppMesh_Route_HttpRouteMatch) SetV__Port(v int32) AWS_AppMesh_Route_HttpRouteMatch {
	t.Port = cfz.V(v)
	return t
}

// Set__Prefix updates property "Prefix".
func (t AWS_AppMesh_Route_HttpRouteMatch) Set__Prefix(v cfz.Expression[string]) AWS_AppMesh_Route_HttpRouteMatch {
	t.Prefix = v
	return t
}

// SetV__Prefix updates property "Prefix".
func (t AWS_AppMesh_Route_HttpRouteMatch) SetV__Prefix(v string) AWS_AppMesh_Route_HttpRouteMatch {
	t.Prefix = cfz.V(v)
	return t
}

// Set__QueryParameters updates property "QueryParameters".
func (t AWS_AppMesh_Route_HttpRouteMatch) Set__QueryParameters(v cfz.ExpressionSlice[AWS_AppMesh_Route_QueryParameter]) AWS_AppMesh_Route_HttpRouteMatch {
	t.QueryParameters = v
	return t
}

// SetS__QueryParameters updates property "QueryParameters".
func (t AWS_AppMesh_Route_HttpRouteMatch) SetS__QueryParameters(v ...cfz.Expression[AWS_AppMesh_Route_QueryParameter]) AWS_AppMesh_Route_HttpRouteMatch {
	t.QueryParameters = cfz.S(v...)
	return t
}

// SetSV__QueryParameters updates property "QueryParameters".
func (t AWS_AppMesh_Route_HttpRouteMatch) SetSV__QueryParameters(v ...AWS_AppMesh_Route_QueryParameter) AWS_AppMesh_Route_HttpRouteMatch {
	t.QueryParameters = cfz.SV(v...)
	return t
}

// Set__Scheme updates property "Scheme".
func (t AWS_AppMesh_Route_HttpRouteMatch) Set__Scheme(v cfz.Expression[string]) AWS_AppMesh_Route_HttpRouteMatch {
	t.Scheme = v
	return t
}

// SetV__Scheme updates property "Scheme".
func (t AWS_AppMesh_Route_HttpRouteMatch) SetV__Scheme(v string) AWS_AppMesh_Route_HttpRouteMatch {
	t.Scheme = cfz.V(v)
	return t
}
