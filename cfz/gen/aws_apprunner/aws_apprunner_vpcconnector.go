// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_apprunner

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppRunner_VpcConnector)(nil)
	_ cfz.Resource                   = (*AWS_AppRunner_VpcConnector)(nil)
)

const (
	// AWS_AppRunner_VpcConnector__Type is the CloudFormation type for AWS::AppRunner::VpcConnector.
	AWS_AppRunner_VpcConnector__Type = "AWS::AppRunner::VpcConnector"
)

var (
	// AWS_AppRunner_VpcConnector__AttributesMap reports all the CloudFormation attributes for AWS::AppRunner::VpcConnector.
	AWS_AppRunner_VpcConnector__AttributesMap = struct {
		VpcConnectorArn      string
		VpcConnectorRevision string
	}{
		VpcConnectorArn:      "VpcConnectorArn",
		VpcConnectorRevision: "VpcConnectorRevision",
	}

	// AWS_AppRunner_VpcConnector__AttributesSlice reports all the CloudFormation attributes for AWS::AppRunner::VpcConnector.
	AWS_AppRunner_VpcConnector__AttributesSlice = []string{
		AWS_AppRunner_VpcConnector__AttributesMap.VpcConnectorArn,
		AWS_AppRunner_VpcConnector__AttributesMap.VpcConnectorRevision,
	}
)

var (
	// AWS_AppRunner_VpcConnector__PropertiesMap reports all the CloudFormation properties for AWS::AppRunner::VpcConnector.
	AWS_AppRunner_VpcConnector__PropertiesMap = struct {
		SecurityGroups   string
		Subnets          string
		Tags             string
		VpcConnectorName string
	}{
		SecurityGroups:   "SecurityGroups",
		Subnets:          "Subnets",
		Tags:             "Tags",
		VpcConnectorName: "VpcConnectorName",
	}

	// AWS_AppRunner_VpcConnector__PropertiesSlice reports all the CloudFormation properties for AWS::AppRunner::VpcConnector.
	AWS_AppRunner_VpcConnector__PropertiesSlice = []string{
		AWS_AppRunner_VpcConnector__PropertiesMap.SecurityGroups,
		AWS_AppRunner_VpcConnector__PropertiesMap.Subnets,
		AWS_AppRunner_VpcConnector__PropertiesMap.Tags,
		AWS_AppRunner_VpcConnector__PropertiesMap.VpcConnectorName,
	}
)

// AWS_AppRunner_VpcConnector is a binding for AWS::AppRunner::VpcConnector.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html
type AWS_AppRunner_VpcConnector struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// SecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-securitygroups
	SecurityGroups cfz.ExpressionSlice[string] `json:"SecurityGroups,omitempty"`

	// Subnets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-subnets
	Subnets cfz.ExpressionSlice[string] `json:"Subnets,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcConnectorName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-vpcconnector.html#cfn-apprunner-vpcconnector-vpcconnectorname
	VpcConnectorName cfz.Expression[string] `json:"VpcConnectorName,omitempty"`
}

// New__AWS_AppRunner_VpcConnector initializes a new *AWS_AppRunner_VpcConnector.
func New__AWS_AppRunner_VpcConnector(logicalName string) *AWS_AppRunner_VpcConnector {
	return &AWS_AppRunner_VpcConnector{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppRunner_VpcConnector) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppRunner_VpcConnector) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppRunner_VpcConnector) GetType() string {
	return AWS_AppRunner_VpcConnector__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppRunner_VpcConnector) Set__LogicalName(v string) *AWS_AppRunner_VpcConnector {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppRunner_VpcConnector) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppRunner_VpcConnector {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppRunner_VpcConnector) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppRunner_VpcConnector {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppRunner_VpcConnector) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppRunner_VpcConnector {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppRunner_VpcConnector) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppRunner_VpcConnector {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppRunner_VpcConnector) Set__RequestedOutputs(v []cfz.Output) *AWS_AppRunner_VpcConnector {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppRunner_VpcConnector) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppRunner_VpcConnector {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__SecurityGroups updates property "SecurityGroups".
func (t *AWS_AppRunner_VpcConnector) Set__SecurityGroups(v cfz.ExpressionSlice[string]) *AWS_AppRunner_VpcConnector {
	t.SecurityGroups = v
	return t
}

// SetS__SecurityGroups updates property "SecurityGroups".
func (t *AWS_AppRunner_VpcConnector) SetS__SecurityGroups(v ...cfz.Expression[string]) *AWS_AppRunner_VpcConnector {
	t.SecurityGroups = cfz.S(v...)
	return t
}

// SetSV__SecurityGroups updates property "SecurityGroups".
func (t *AWS_AppRunner_VpcConnector) SetSV__SecurityGroups(v ...string) *AWS_AppRunner_VpcConnector {
	t.SecurityGroups = cfz.SV(v...)
	return t
}

// Set__Subnets updates property "Subnets".
func (t *AWS_AppRunner_VpcConnector) Set__Subnets(v cfz.ExpressionSlice[string]) *AWS_AppRunner_VpcConnector {
	t.Subnets = v
	return t
}

// SetS__Subnets updates property "Subnets".
func (t *AWS_AppRunner_VpcConnector) SetS__Subnets(v ...cfz.Expression[string]) *AWS_AppRunner_VpcConnector {
	t.Subnets = cfz.S(v...)
	return t
}

// SetSV__Subnets updates property "Subnets".
func (t *AWS_AppRunner_VpcConnector) SetSV__Subnets(v ...string) *AWS_AppRunner_VpcConnector {
	t.Subnets = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppRunner_VpcConnector) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_AppRunner_VpcConnector {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppRunner_VpcConnector) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_AppRunner_VpcConnector {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppRunner_VpcConnector) SetSV__Tags(v ...cfz.Tag) *AWS_AppRunner_VpcConnector {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcConnectorName updates property "VpcConnectorName".
func (t *AWS_AppRunner_VpcConnector) Set__VpcConnectorName(v cfz.Expression[string]) *AWS_AppRunner_VpcConnector {
	t.VpcConnectorName = v
	return t
}

// SetV__VpcConnectorName updates property "VpcConnectorName".
func (t *AWS_AppRunner_VpcConnector) SetV__VpcConnectorName(v string) *AWS_AppRunner_VpcConnector {
	t.VpcConnectorName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppRunner_VpcConnector) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__VpcConnectorArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcConnectorArn
func (t *AWS_AppRunner_VpcConnector) GetAtt__VpcConnectorArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppRunner_VpcConnector__AttributesMap.VpcConnectorArn))
}

// GetAtt__VpcConnectorRevision returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcConnectorRevision
func (t *AWS_AppRunner_VpcConnector) GetAtt__VpcConnectorRevision() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppRunner_VpcConnector__AttributesMap.VpcConnectorRevision))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppRunner_VpcConnector) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcConnectorArn returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcConnectorArn
func (t *AWS_AppRunner_VpcConnector) GetConventionalOutputAtt__VpcConnectorArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcConnectorArn", t.GetAtt__VpcConnectorArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcConnectorRevision returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcConnectorRevision
func (t *AWS_AppRunner_VpcConnector) GetConventionalOutputAtt__VpcConnectorRevision(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcConnectorRevision", t.GetAtt__VpcConnectorRevision())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppRunner_VpcConnector) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppRunner_VpcConnector

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppRunner_VpcConnector) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
