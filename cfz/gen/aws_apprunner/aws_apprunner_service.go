// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_apprunner

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppRunner_Service)(nil)
	_ cfz.Resource                   = (*AWS_AppRunner_Service)(nil)
)

const (
	// AWS_AppRunner_Service__Type is the CloudFormation type for AWS::AppRunner::Service.
	AWS_AppRunner_Service__Type = "AWS::AppRunner::Service"
)

var (
	// AWS_AppRunner_Service__AttributesMap reports all the CloudFormation attributes for AWS::AppRunner::Service.
	AWS_AppRunner_Service__AttributesMap = struct {
		ServiceArn string
		ServiceId  string
		ServiceUrl string
		Status     string
	}{
		ServiceArn: "ServiceArn",
		ServiceId:  "ServiceId",
		ServiceUrl: "ServiceUrl",
		Status:     "Status",
	}

	// AWS_AppRunner_Service__AttributesSlice reports all the CloudFormation attributes for AWS::AppRunner::Service.
	AWS_AppRunner_Service__AttributesSlice = []string{
		AWS_AppRunner_Service__AttributesMap.ServiceArn,
		AWS_AppRunner_Service__AttributesMap.ServiceId,
		AWS_AppRunner_Service__AttributesMap.ServiceUrl,
		AWS_AppRunner_Service__AttributesMap.Status,
	}
)

var (
	// AWS_AppRunner_Service__PropertiesMap reports all the CloudFormation properties for AWS::AppRunner::Service.
	AWS_AppRunner_Service__PropertiesMap = struct {
		AutoScalingConfigurationArn string
		EncryptionConfiguration     string
		HealthCheckConfiguration    string
		InstanceConfiguration       string
		NetworkConfiguration        string
		ObservabilityConfiguration  string
		ServiceName                 string
		SourceConfiguration         string
		Tags                        string
	}{
		AutoScalingConfigurationArn: "AutoScalingConfigurationArn",
		EncryptionConfiguration:     "EncryptionConfiguration",
		HealthCheckConfiguration:    "HealthCheckConfiguration",
		InstanceConfiguration:       "InstanceConfiguration",
		NetworkConfiguration:        "NetworkConfiguration",
		ObservabilityConfiguration:  "ObservabilityConfiguration",
		ServiceName:                 "ServiceName",
		SourceConfiguration:         "SourceConfiguration",
		Tags:                        "Tags",
	}

	// AWS_AppRunner_Service__PropertiesSlice reports all the CloudFormation properties for AWS::AppRunner::Service.
	AWS_AppRunner_Service__PropertiesSlice = []string{
		AWS_AppRunner_Service__PropertiesMap.AutoScalingConfigurationArn,
		AWS_AppRunner_Service__PropertiesMap.EncryptionConfiguration,
		AWS_AppRunner_Service__PropertiesMap.HealthCheckConfiguration,
		AWS_AppRunner_Service__PropertiesMap.InstanceConfiguration,
		AWS_AppRunner_Service__PropertiesMap.NetworkConfiguration,
		AWS_AppRunner_Service__PropertiesMap.ObservabilityConfiguration,
		AWS_AppRunner_Service__PropertiesMap.ServiceName,
		AWS_AppRunner_Service__PropertiesMap.SourceConfiguration,
		AWS_AppRunner_Service__PropertiesMap.Tags,
	}
)

// AWS_AppRunner_Service is a binding for AWS::AppRunner::Service.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html
type AWS_AppRunner_Service struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AutoScalingConfigurationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-autoscalingconfigurationarn
	AutoScalingConfigurationArn cfz.Expression[string] `json:"AutoScalingConfigurationArn,omitempty"`

	// EncryptionConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-encryptionconfiguration
	EncryptionConfiguration cfz.Expression[AWS_AppRunner_Service_EncryptionConfiguration] `json:"EncryptionConfiguration,omitempty"`

	// HealthCheckConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-healthcheckconfiguration
	HealthCheckConfiguration cfz.Expression[AWS_AppRunner_Service_HealthCheckConfiguration] `json:"HealthCheckConfiguration,omitempty"`

	// InstanceConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-instanceconfiguration
	InstanceConfiguration cfz.Expression[AWS_AppRunner_Service_InstanceConfiguration] `json:"InstanceConfiguration,omitempty"`

	// NetworkConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-networkconfiguration
	NetworkConfiguration cfz.Expression[AWS_AppRunner_Service_NetworkConfiguration] `json:"NetworkConfiguration,omitempty"`

	// ObservabilityConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-observabilityconfiguration
	ObservabilityConfiguration cfz.Expression[AWS_AppRunner_Service_ServiceObservabilityConfiguration] `json:"ObservabilityConfiguration,omitempty"`

	// ServiceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-servicename
	ServiceName cfz.Expression[string] `json:"ServiceName,omitempty"`

	// SourceConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-sourceconfiguration
	SourceConfiguration cfz.Expression[AWS_AppRunner_Service_SourceConfiguration] `json:"SourceConfiguration,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-service.html#cfn-apprunner-service-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_AppRunner_Service initializes a new *AWS_AppRunner_Service.
func New__AWS_AppRunner_Service(logicalName string) *AWS_AppRunner_Service {
	return &AWS_AppRunner_Service{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppRunner_Service) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppRunner_Service) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppRunner_Service) GetType() string {
	return AWS_AppRunner_Service__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppRunner_Service) Set__LogicalName(v string) *AWS_AppRunner_Service {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppRunner_Service) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppRunner_Service {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppRunner_Service) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppRunner_Service {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppRunner_Service) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppRunner_Service {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppRunner_Service) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppRunner_Service {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppRunner_Service) Set__RequestedOutputs(v []cfz.Output) *AWS_AppRunner_Service {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppRunner_Service) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppRunner_Service {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AutoScalingConfigurationArn updates property "AutoScalingConfigurationArn".
func (t *AWS_AppRunner_Service) Set__AutoScalingConfigurationArn(v cfz.Expression[string]) *AWS_AppRunner_Service {
	t.AutoScalingConfigurationArn = v
	return t
}

// SetV__AutoScalingConfigurationArn updates property "AutoScalingConfigurationArn".
func (t *AWS_AppRunner_Service) SetV__AutoScalingConfigurationArn(v string) *AWS_AppRunner_Service {
	t.AutoScalingConfigurationArn = cfz.V(v)
	return t
}

// Set__EncryptionConfiguration updates property "EncryptionConfiguration".
func (t *AWS_AppRunner_Service) Set__EncryptionConfiguration(v cfz.Expression[AWS_AppRunner_Service_EncryptionConfiguration]) *AWS_AppRunner_Service {
	t.EncryptionConfiguration = v
	return t
}

// SetV__EncryptionConfiguration updates property "EncryptionConfiguration".
func (t *AWS_AppRunner_Service) SetV__EncryptionConfiguration(v AWS_AppRunner_Service_EncryptionConfiguration) *AWS_AppRunner_Service {
	t.EncryptionConfiguration = cfz.V(v)
	return t
}

// Set__HealthCheckConfiguration updates property "HealthCheckConfiguration".
func (t *AWS_AppRunner_Service) Set__HealthCheckConfiguration(v cfz.Expression[AWS_AppRunner_Service_HealthCheckConfiguration]) *AWS_AppRunner_Service {
	t.HealthCheckConfiguration = v
	return t
}

// SetV__HealthCheckConfiguration updates property "HealthCheckConfiguration".
func (t *AWS_AppRunner_Service) SetV__HealthCheckConfiguration(v AWS_AppRunner_Service_HealthCheckConfiguration) *AWS_AppRunner_Service {
	t.HealthCheckConfiguration = cfz.V(v)
	return t
}

// Set__InstanceConfiguration updates property "InstanceConfiguration".
func (t *AWS_AppRunner_Service) Set__InstanceConfiguration(v cfz.Expression[AWS_AppRunner_Service_InstanceConfiguration]) *AWS_AppRunner_Service {
	t.InstanceConfiguration = v
	return t
}

// SetV__InstanceConfiguration updates property "InstanceConfiguration".
func (t *AWS_AppRunner_Service) SetV__InstanceConfiguration(v AWS_AppRunner_Service_InstanceConfiguration) *AWS_AppRunner_Service {
	t.InstanceConfiguration = cfz.V(v)
	return t
}

// Set__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_AppRunner_Service) Set__NetworkConfiguration(v cfz.Expression[AWS_AppRunner_Service_NetworkConfiguration]) *AWS_AppRunner_Service {
	t.NetworkConfiguration = v
	return t
}

// SetV__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_AppRunner_Service) SetV__NetworkConfiguration(v AWS_AppRunner_Service_NetworkConfiguration) *AWS_AppRunner_Service {
	t.NetworkConfiguration = cfz.V(v)
	return t
}

// Set__ObservabilityConfiguration updates property "ObservabilityConfiguration".
func (t *AWS_AppRunner_Service) Set__ObservabilityConfiguration(v cfz.Expression[AWS_AppRunner_Service_ServiceObservabilityConfiguration]) *AWS_AppRunner_Service {
	t.ObservabilityConfiguration = v
	return t
}

// SetV__ObservabilityConfiguration updates property "ObservabilityConfiguration".
func (t *AWS_AppRunner_Service) SetV__ObservabilityConfiguration(v AWS_AppRunner_Service_ServiceObservabilityConfiguration) *AWS_AppRunner_Service {
	t.ObservabilityConfiguration = cfz.V(v)
	return t
}

// Set__ServiceName updates property "ServiceName".
func (t *AWS_AppRunner_Service) Set__ServiceName(v cfz.Expression[string]) *AWS_AppRunner_Service {
	t.ServiceName = v
	return t
}

// SetV__ServiceName updates property "ServiceName".
func (t *AWS_AppRunner_Service) SetV__ServiceName(v string) *AWS_AppRunner_Service {
	t.ServiceName = cfz.V(v)
	return t
}

// Set__SourceConfiguration updates property "SourceConfiguration".
func (t *AWS_AppRunner_Service) Set__SourceConfiguration(v cfz.Expression[AWS_AppRunner_Service_SourceConfiguration]) *AWS_AppRunner_Service {
	t.SourceConfiguration = v
	return t
}

// SetV__SourceConfiguration updates property "SourceConfiguration".
func (t *AWS_AppRunner_Service) SetV__SourceConfiguration(v AWS_AppRunner_Service_SourceConfiguration) *AWS_AppRunner_Service {
	t.SourceConfiguration = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppRunner_Service) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_AppRunner_Service {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppRunner_Service) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_AppRunner_Service {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppRunner_Service) SetSV__Tags(v ...cfz.Tag) *AWS_AppRunner_Service {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppRunner_Service) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ServiceArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ServiceArn
func (t *AWS_AppRunner_Service) GetAtt__ServiceArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppRunner_Service__AttributesMap.ServiceArn))
}

// GetAtt__ServiceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ServiceId
func (t *AWS_AppRunner_Service) GetAtt__ServiceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppRunner_Service__AttributesMap.ServiceId))
}

// GetAtt__ServiceUrl returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ServiceUrl
func (t *AWS_AppRunner_Service) GetAtt__ServiceUrl() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppRunner_Service__AttributesMap.ServiceUrl))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_AppRunner_Service) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppRunner_Service__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppRunner_Service) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ServiceArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ServiceArn
func (t *AWS_AppRunner_Service) GetConventionalOutputAtt__ServiceArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttServiceArn", t.GetAtt__ServiceArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ServiceId returns a conventionally configured output for an attribute of this resource.
// Attribute: ServiceId
func (t *AWS_AppRunner_Service) GetConventionalOutputAtt__ServiceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttServiceId", t.GetAtt__ServiceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ServiceUrl returns a conventionally configured output for an attribute of this resource.
// Attribute: ServiceUrl
func (t *AWS_AppRunner_Service) GetConventionalOutputAtt__ServiceUrl(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttServiceUrl", t.GetAtt__ServiceUrl())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_AppRunner_Service) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppRunner_Service) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppRunner_Service

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppRunner_Service) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
