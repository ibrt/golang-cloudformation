// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_apprunner

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppRunner_ObservabilityConfiguration)(nil)
	_ cfz.Resource                   = (*AWS_AppRunner_ObservabilityConfiguration)(nil)
)

const (
	// AWS_AppRunner_ObservabilityConfiguration__Type is the CloudFormation type for AWS::AppRunner::ObservabilityConfiguration.
	AWS_AppRunner_ObservabilityConfiguration__Type = "AWS::AppRunner::ObservabilityConfiguration"
)

var (
	// AWS_AppRunner_ObservabilityConfiguration__AttributesMap reports all the CloudFormation attributes for AWS::AppRunner::ObservabilityConfiguration.
	AWS_AppRunner_ObservabilityConfiguration__AttributesMap = struct {
		Latest                             string
		ObservabilityConfigurationArn      string
		ObservabilityConfigurationRevision string
	}{
		Latest:                             "Latest",
		ObservabilityConfigurationArn:      "ObservabilityConfigurationArn",
		ObservabilityConfigurationRevision: "ObservabilityConfigurationRevision",
	}

	// AWS_AppRunner_ObservabilityConfiguration__AttributesSlice reports all the CloudFormation attributes for AWS::AppRunner::ObservabilityConfiguration.
	AWS_AppRunner_ObservabilityConfiguration__AttributesSlice = []string{
		AWS_AppRunner_ObservabilityConfiguration__AttributesMap.Latest,
		AWS_AppRunner_ObservabilityConfiguration__AttributesMap.ObservabilityConfigurationArn,
		AWS_AppRunner_ObservabilityConfiguration__AttributesMap.ObservabilityConfigurationRevision,
	}
)

var (
	// AWS_AppRunner_ObservabilityConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::AppRunner::ObservabilityConfiguration.
	AWS_AppRunner_ObservabilityConfiguration__PropertiesMap = struct {
		ObservabilityConfigurationName string
		Tags                           string
		TraceConfiguration             string
	}{
		ObservabilityConfigurationName: "ObservabilityConfigurationName",
		Tags:                           "Tags",
		TraceConfiguration:             "TraceConfiguration",
	}

	// AWS_AppRunner_ObservabilityConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::AppRunner::ObservabilityConfiguration.
	AWS_AppRunner_ObservabilityConfiguration__PropertiesSlice = []string{
		AWS_AppRunner_ObservabilityConfiguration__PropertiesMap.ObservabilityConfigurationName,
		AWS_AppRunner_ObservabilityConfiguration__PropertiesMap.Tags,
		AWS_AppRunner_ObservabilityConfiguration__PropertiesMap.TraceConfiguration,
	}
)

// AWS_AppRunner_ObservabilityConfiguration is a binding for AWS::AppRunner::ObservabilityConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html
type AWS_AppRunner_ObservabilityConfiguration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ObservabilityConfigurationName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html#cfn-apprunner-observabilityconfiguration-observabilityconfigurationname
	ObservabilityConfigurationName cfz.Expression[string] `json:"ObservabilityConfigurationName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html#cfn-apprunner-observabilityconfiguration-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TraceConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apprunner-observabilityconfiguration.html#cfn-apprunner-observabilityconfiguration-traceconfiguration
	TraceConfiguration cfz.Expression[AWS_AppRunner_ObservabilityConfiguration_TraceConfiguration] `json:"TraceConfiguration,omitempty"`
}

// New__AWS_AppRunner_ObservabilityConfiguration initializes a new *AWS_AppRunner_ObservabilityConfiguration.
func New__AWS_AppRunner_ObservabilityConfiguration(logicalName string) *AWS_AppRunner_ObservabilityConfiguration {
	return &AWS_AppRunner_ObservabilityConfiguration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppRunner_ObservabilityConfiguration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppRunner_ObservabilityConfiguration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppRunner_ObservabilityConfiguration) GetType() string {
	return AWS_AppRunner_ObservabilityConfiguration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppRunner_ObservabilityConfiguration) Set__LogicalName(v string) *AWS_AppRunner_ObservabilityConfiguration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppRunner_ObservabilityConfiguration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppRunner_ObservabilityConfiguration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppRunner_ObservabilityConfiguration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppRunner_ObservabilityConfiguration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppRunner_ObservabilityConfiguration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppRunner_ObservabilityConfiguration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppRunner_ObservabilityConfiguration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppRunner_ObservabilityConfiguration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppRunner_ObservabilityConfiguration) Set__RequestedOutputs(v []cfz.Output) *AWS_AppRunner_ObservabilityConfiguration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppRunner_ObservabilityConfiguration) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppRunner_ObservabilityConfiguration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ObservabilityConfigurationName updates property "ObservabilityConfigurationName".
func (t *AWS_AppRunner_ObservabilityConfiguration) Set__ObservabilityConfigurationName(v cfz.Expression[string]) *AWS_AppRunner_ObservabilityConfiguration {
	t.ObservabilityConfigurationName = v
	return t
}

// SetV__ObservabilityConfigurationName updates property "ObservabilityConfigurationName".
func (t *AWS_AppRunner_ObservabilityConfiguration) SetV__ObservabilityConfigurationName(v string) *AWS_AppRunner_ObservabilityConfiguration {
	t.ObservabilityConfigurationName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppRunner_ObservabilityConfiguration) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_AppRunner_ObservabilityConfiguration {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppRunner_ObservabilityConfiguration) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_AppRunner_ObservabilityConfiguration {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppRunner_ObservabilityConfiguration) SetSV__Tags(v ...cfz.Tag) *AWS_AppRunner_ObservabilityConfiguration {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TraceConfiguration updates property "TraceConfiguration".
func (t *AWS_AppRunner_ObservabilityConfiguration) Set__TraceConfiguration(v cfz.Expression[AWS_AppRunner_ObservabilityConfiguration_TraceConfiguration]) *AWS_AppRunner_ObservabilityConfiguration {
	t.TraceConfiguration = v
	return t
}

// SetV__TraceConfiguration updates property "TraceConfiguration".
func (t *AWS_AppRunner_ObservabilityConfiguration) SetV__TraceConfiguration(v AWS_AppRunner_ObservabilityConfiguration_TraceConfiguration) *AWS_AppRunner_ObservabilityConfiguration {
	t.TraceConfiguration = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppRunner_ObservabilityConfiguration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Latest returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Latest
func (t *AWS_AppRunner_ObservabilityConfiguration) GetAtt__Latest() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppRunner_ObservabilityConfiguration__AttributesMap.Latest))
}

// GetAtt__ObservabilityConfigurationArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ObservabilityConfigurationArn
func (t *AWS_AppRunner_ObservabilityConfiguration) GetAtt__ObservabilityConfigurationArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppRunner_ObservabilityConfiguration__AttributesMap.ObservabilityConfigurationArn))
}

// GetAtt__ObservabilityConfigurationRevision returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ObservabilityConfigurationRevision
func (t *AWS_AppRunner_ObservabilityConfiguration) GetAtt__ObservabilityConfigurationRevision() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppRunner_ObservabilityConfiguration__AttributesMap.ObservabilityConfigurationRevision))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppRunner_ObservabilityConfiguration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Latest returns a conventionally configured output for an attribute of this resource.
// Attribute: Latest
func (t *AWS_AppRunner_ObservabilityConfiguration) GetConventionalOutputAtt__Latest(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLatest", t.GetAtt__Latest())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ObservabilityConfigurationArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ObservabilityConfigurationArn
func (t *AWS_AppRunner_ObservabilityConfiguration) GetConventionalOutputAtt__ObservabilityConfigurationArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttObservabilityConfigurationArn", t.GetAtt__ObservabilityConfigurationArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ObservabilityConfigurationRevision returns a conventionally configured output for an attribute of this resource.
// Attribute: ObservabilityConfigurationRevision
func (t *AWS_AppRunner_ObservabilityConfiguration) GetConventionalOutputAtt__ObservabilityConfigurationRevision(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttObservabilityConfigurationRevision", t.GetAtt__ObservabilityConfigurationRevision())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppRunner_ObservabilityConfiguration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppRunner_ObservabilityConfiguration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppRunner_ObservabilityConfiguration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
