// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_codestarnotifications

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CodeStarNotifications_NotificationRule)(nil)
	_ cfz.Resource                   = (*AWS_CodeStarNotifications_NotificationRule)(nil)
)

const (
	// AWS_CodeStarNotifications_NotificationRule__Type is the CloudFormation type for AWS::CodeStarNotifications::NotificationRule.
	AWS_CodeStarNotifications_NotificationRule__Type = "AWS::CodeStarNotifications::NotificationRule"
)

var (
	// AWS_CodeStarNotifications_NotificationRule__AttributesMap reports all the CloudFormation attributes for AWS::CodeStarNotifications::NotificationRule.
	AWS_CodeStarNotifications_NotificationRule__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_CodeStarNotifications_NotificationRule__AttributesSlice reports all the CloudFormation attributes for AWS::CodeStarNotifications::NotificationRule.
	AWS_CodeStarNotifications_NotificationRule__AttributesSlice = []string{
		AWS_CodeStarNotifications_NotificationRule__AttributesMap.Arn,
	}
)

var (
	// AWS_CodeStarNotifications_NotificationRule__PropertiesMap reports all the CloudFormation properties for AWS::CodeStarNotifications::NotificationRule.
	AWS_CodeStarNotifications_NotificationRule__PropertiesMap = struct {
		CreatedBy     string
		DetailType    string
		EventTypeId   string
		EventTypeIds  string
		Name          string
		Resource      string
		Status        string
		Tags          string
		TargetAddress string
		Targets       string
	}{
		CreatedBy:     "CreatedBy",
		DetailType:    "DetailType",
		EventTypeId:   "EventTypeId",
		EventTypeIds:  "EventTypeIds",
		Name:          "Name",
		Resource:      "Resource",
		Status:        "Status",
		Tags:          "Tags",
		TargetAddress: "TargetAddress",
		Targets:       "Targets",
	}

	// AWS_CodeStarNotifications_NotificationRule__PropertiesSlice reports all the CloudFormation properties for AWS::CodeStarNotifications::NotificationRule.
	AWS_CodeStarNotifications_NotificationRule__PropertiesSlice = []string{
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.CreatedBy,
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.DetailType,
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.EventTypeId,
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.EventTypeIds,
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.Name,
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.Resource,
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.Status,
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.Tags,
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.TargetAddress,
		AWS_CodeStarNotifications_NotificationRule__PropertiesMap.Targets,
	}
)

// AWS_CodeStarNotifications_NotificationRule is a binding for AWS::CodeStarNotifications::NotificationRule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html
type AWS_CodeStarNotifications_NotificationRule struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CreatedBy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-createdby
	CreatedBy cfz.Expression[string] `json:"CreatedBy,omitempty"`

	// DetailType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-detailtype
	DetailType cfz.Expression[string] `json:"DetailType,omitempty"`

	// EventTypeId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-eventtypeid
	EventTypeId cfz.Expression[string] `json:"EventTypeId,omitempty"`

	// EventTypeIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-eventtypeids
	EventTypeIds cfz.ExpressionSlice[string] `json:"EventTypeIds,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Resource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-resource
	Resource cfz.Expression[string] `json:"Resource,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-status
	Status cfz.Expression[string] `json:"Status,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// TargetAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-targetaddress
	TargetAddress cfz.Expression[string] `json:"TargetAddress,omitempty"`

	// Targets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarnotifications-notificationrule.html#cfn-codestarnotifications-notificationrule-targets
	Targets cfz.ExpressionSlice[AWS_CodeStarNotifications_NotificationRule_Target] `json:"Targets,omitempty"`
}

// New__AWS_CodeStarNotifications_NotificationRule initializes a new *AWS_CodeStarNotifications_NotificationRule.
func New__AWS_CodeStarNotifications_NotificationRule(logicalName string) *AWS_CodeStarNotifications_NotificationRule {
	return &AWS_CodeStarNotifications_NotificationRule{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CodeStarNotifications_NotificationRule) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CodeStarNotifications_NotificationRule) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CodeStarNotifications_NotificationRule) GetType() string {
	return AWS_CodeStarNotifications_NotificationRule__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__LogicalName(v string) *AWS_CodeStarNotifications_NotificationRule {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CodeStarNotifications_NotificationRule {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CodeStarNotifications_NotificationRule) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CodeStarNotifications_NotificationRule {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CodeStarNotifications_NotificationRule {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CodeStarNotifications_NotificationRule {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__RequestedOutputs(v []cfz.Output) *AWS_CodeStarNotifications_NotificationRule {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CodeStarNotifications_NotificationRule) Add__RequestedOutputs(v ...cfz.Output) *AWS_CodeStarNotifications_NotificationRule {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CreatedBy updates property "CreatedBy".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__CreatedBy(v cfz.Expression[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.CreatedBy = v
	return t
}

// SetV__CreatedBy updates property "CreatedBy".
func (t *AWS_CodeStarNotifications_NotificationRule) SetV__CreatedBy(v string) *AWS_CodeStarNotifications_NotificationRule {
	t.CreatedBy = cfz.V(v)
	return t
}

// Set__DetailType updates property "DetailType".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__DetailType(v cfz.Expression[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.DetailType = v
	return t
}

// SetV__DetailType updates property "DetailType".
func (t *AWS_CodeStarNotifications_NotificationRule) SetV__DetailType(v string) *AWS_CodeStarNotifications_NotificationRule {
	t.DetailType = cfz.V(v)
	return t
}

// Set__EventTypeId updates property "EventTypeId".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__EventTypeId(v cfz.Expression[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.EventTypeId = v
	return t
}

// SetV__EventTypeId updates property "EventTypeId".
func (t *AWS_CodeStarNotifications_NotificationRule) SetV__EventTypeId(v string) *AWS_CodeStarNotifications_NotificationRule {
	t.EventTypeId = cfz.V(v)
	return t
}

// Set__EventTypeIds updates property "EventTypeIds".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__EventTypeIds(v cfz.ExpressionSlice[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.EventTypeIds = v
	return t
}

// SetS__EventTypeIds updates property "EventTypeIds".
func (t *AWS_CodeStarNotifications_NotificationRule) SetS__EventTypeIds(v ...cfz.Expression[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.EventTypeIds = cfz.S(v...)
	return t
}

// SetSV__EventTypeIds updates property "EventTypeIds".
func (t *AWS_CodeStarNotifications_NotificationRule) SetSV__EventTypeIds(v ...string) *AWS_CodeStarNotifications_NotificationRule {
	t.EventTypeIds = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__Name(v cfz.Expression[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_CodeStarNotifications_NotificationRule) SetV__Name(v string) *AWS_CodeStarNotifications_NotificationRule {
	t.Name = cfz.V(v)
	return t
}

// Set__Resource updates property "Resource".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__Resource(v cfz.Expression[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.Resource = v
	return t
}

// SetV__Resource updates property "Resource".
func (t *AWS_CodeStarNotifications_NotificationRule) SetV__Resource(v string) *AWS_CodeStarNotifications_NotificationRule {
	t.Resource = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__Status(v cfz.Expression[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t *AWS_CodeStarNotifications_NotificationRule) SetV__Status(v string) *AWS_CodeStarNotifications_NotificationRule {
	t.Status = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__Tags(v cfz.ExpressionMap[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_CodeStarNotifications_NotificationRule) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_CodeStarNotifications_NotificationRule) SetMV__Tags(v ...map[string]string) *AWS_CodeStarNotifications_NotificationRule {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__TargetAddress updates property "TargetAddress".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__TargetAddress(v cfz.Expression[string]) *AWS_CodeStarNotifications_NotificationRule {
	t.TargetAddress = v
	return t
}

// SetV__TargetAddress updates property "TargetAddress".
func (t *AWS_CodeStarNotifications_NotificationRule) SetV__TargetAddress(v string) *AWS_CodeStarNotifications_NotificationRule {
	t.TargetAddress = cfz.V(v)
	return t
}

// Set__Targets updates property "Targets".
func (t *AWS_CodeStarNotifications_NotificationRule) Set__Targets(v cfz.ExpressionSlice[AWS_CodeStarNotifications_NotificationRule_Target]) *AWS_CodeStarNotifications_NotificationRule {
	t.Targets = v
	return t
}

// SetS__Targets updates property "Targets".
func (t *AWS_CodeStarNotifications_NotificationRule) SetS__Targets(v ...cfz.Expression[AWS_CodeStarNotifications_NotificationRule_Target]) *AWS_CodeStarNotifications_NotificationRule {
	t.Targets = cfz.S(v...)
	return t
}

// SetSV__Targets updates property "Targets".
func (t *AWS_CodeStarNotifications_NotificationRule) SetSV__Targets(v ...AWS_CodeStarNotifications_NotificationRule_Target) *AWS_CodeStarNotifications_NotificationRule {
	t.Targets = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CodeStarNotifications_NotificationRule) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_CodeStarNotifications_NotificationRule) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeStarNotifications_NotificationRule__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CodeStarNotifications_NotificationRule) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_CodeStarNotifications_NotificationRule) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CodeStarNotifications_NotificationRule) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CodeStarNotifications_NotificationRule

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CodeStarNotifications_NotificationRule) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
