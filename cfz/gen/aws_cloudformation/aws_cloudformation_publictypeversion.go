// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudformation

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudFormation_PublicTypeVersion)(nil)
	_ cfz.Resource                   = (*AWS_CloudFormation_PublicTypeVersion)(nil)
)

const (
	// AWS_CloudFormation_PublicTypeVersion__Type is the CloudFormation type for AWS::CloudFormation::PublicTypeVersion.
	AWS_CloudFormation_PublicTypeVersion__Type = "AWS::CloudFormation::PublicTypeVersion"
)

var (
	// AWS_CloudFormation_PublicTypeVersion__AttributesMap reports all the CloudFormation attributes for AWS::CloudFormation::PublicTypeVersion.
	AWS_CloudFormation_PublicTypeVersion__AttributesMap = struct {
		PublicTypeArn  string
		PublisherId    string
		TypeVersionArn string
	}{
		PublicTypeArn:  "PublicTypeArn",
		PublisherId:    "PublisherId",
		TypeVersionArn: "TypeVersionArn",
	}

	// AWS_CloudFormation_PublicTypeVersion__AttributesSlice reports all the CloudFormation attributes for AWS::CloudFormation::PublicTypeVersion.
	AWS_CloudFormation_PublicTypeVersion__AttributesSlice = []string{
		AWS_CloudFormation_PublicTypeVersion__AttributesMap.PublicTypeArn,
		AWS_CloudFormation_PublicTypeVersion__AttributesMap.PublisherId,
		AWS_CloudFormation_PublicTypeVersion__AttributesMap.TypeVersionArn,
	}
)

var (
	// AWS_CloudFormation_PublicTypeVersion__PropertiesMap reports all the CloudFormation properties for AWS::CloudFormation::PublicTypeVersion.
	AWS_CloudFormation_PublicTypeVersion__PropertiesMap = struct {
		Arn                 string
		LogDeliveryBucket   string
		PublicVersionNumber string
		Type                string
		TypeName            string
	}{
		Arn:                 "Arn",
		LogDeliveryBucket:   "LogDeliveryBucket",
		PublicVersionNumber: "PublicVersionNumber",
		Type:                "Type",
		TypeName:            "TypeName",
	}

	// AWS_CloudFormation_PublicTypeVersion__PropertiesSlice reports all the CloudFormation properties for AWS::CloudFormation::PublicTypeVersion.
	AWS_CloudFormation_PublicTypeVersion__PropertiesSlice = []string{
		AWS_CloudFormation_PublicTypeVersion__PropertiesMap.Arn,
		AWS_CloudFormation_PublicTypeVersion__PropertiesMap.LogDeliveryBucket,
		AWS_CloudFormation_PublicTypeVersion__PropertiesMap.PublicVersionNumber,
		AWS_CloudFormation_PublicTypeVersion__PropertiesMap.Type,
		AWS_CloudFormation_PublicTypeVersion__PropertiesMap.TypeName,
	}
)

// AWS_CloudFormation_PublicTypeVersion is a binding for AWS::CloudFormation::PublicTypeVersion.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html
type AWS_CloudFormation_PublicTypeVersion struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Arn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-arn
	Arn cfz.Expression[string] `json:"Arn,omitempty"`

	// LogDeliveryBucket is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-logdeliverybucket
	LogDeliveryBucket cfz.Expression[string] `json:"LogDeliveryBucket,omitempty"`

	// PublicVersionNumber is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-publicversionnumber
	PublicVersionNumber cfz.Expression[string] `json:"PublicVersionNumber,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// TypeName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-publictypeversion.html#cfn-cloudformation-publictypeversion-typename
	TypeName cfz.Expression[string] `json:"TypeName,omitempty"`
}

// New__AWS_CloudFormation_PublicTypeVersion initializes a new *AWS_CloudFormation_PublicTypeVersion.
func New__AWS_CloudFormation_PublicTypeVersion(logicalName string) *AWS_CloudFormation_PublicTypeVersion {
	return &AWS_CloudFormation_PublicTypeVersion{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudFormation_PublicTypeVersion) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudFormation_PublicTypeVersion) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudFormation_PublicTypeVersion) GetType() string {
	return AWS_CloudFormation_PublicTypeVersion__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__LogicalName(v string) *AWS_CloudFormation_PublicTypeVersion {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudFormation_PublicTypeVersion {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudFormation_PublicTypeVersion) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudFormation_PublicTypeVersion {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudFormation_PublicTypeVersion {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudFormation_PublicTypeVersion {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudFormation_PublicTypeVersion {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudFormation_PublicTypeVersion) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudFormation_PublicTypeVersion {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Arn updates property "Arn".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__Arn(v cfz.Expression[string]) *AWS_CloudFormation_PublicTypeVersion {
	t.Arn = v
	return t
}

// SetV__Arn updates property "Arn".
func (t *AWS_CloudFormation_PublicTypeVersion) SetV__Arn(v string) *AWS_CloudFormation_PublicTypeVersion {
	t.Arn = cfz.V(v)
	return t
}

// Set__LogDeliveryBucket updates property "LogDeliveryBucket".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__LogDeliveryBucket(v cfz.Expression[string]) *AWS_CloudFormation_PublicTypeVersion {
	t.LogDeliveryBucket = v
	return t
}

// SetV__LogDeliveryBucket updates property "LogDeliveryBucket".
func (t *AWS_CloudFormation_PublicTypeVersion) SetV__LogDeliveryBucket(v string) *AWS_CloudFormation_PublicTypeVersion {
	t.LogDeliveryBucket = cfz.V(v)
	return t
}

// Set__PublicVersionNumber updates property "PublicVersionNumber".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__PublicVersionNumber(v cfz.Expression[string]) *AWS_CloudFormation_PublicTypeVersion {
	t.PublicVersionNumber = v
	return t
}

// SetV__PublicVersionNumber updates property "PublicVersionNumber".
func (t *AWS_CloudFormation_PublicTypeVersion) SetV__PublicVersionNumber(v string) *AWS_CloudFormation_PublicTypeVersion {
	t.PublicVersionNumber = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__Type(v cfz.Expression[string]) *AWS_CloudFormation_PublicTypeVersion {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_CloudFormation_PublicTypeVersion) SetV__Type(v string) *AWS_CloudFormation_PublicTypeVersion {
	t.Type = cfz.V(v)
	return t
}

// Set__TypeName updates property "TypeName".
func (t *AWS_CloudFormation_PublicTypeVersion) Set__TypeName(v cfz.Expression[string]) *AWS_CloudFormation_PublicTypeVersion {
	t.TypeName = v
	return t
}

// SetV__TypeName updates property "TypeName".
func (t *AWS_CloudFormation_PublicTypeVersion) SetV__TypeName(v string) *AWS_CloudFormation_PublicTypeVersion {
	t.TypeName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudFormation_PublicTypeVersion) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__PublicTypeArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublicTypeArn
func (t *AWS_CloudFormation_PublicTypeVersion) GetAtt__PublicTypeArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudFormation_PublicTypeVersion__AttributesMap.PublicTypeArn))
}

// GetAtt__PublisherId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublisherId
func (t *AWS_CloudFormation_PublicTypeVersion) GetAtt__PublisherId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudFormation_PublicTypeVersion__AttributesMap.PublisherId))
}

// GetAtt__TypeVersionArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: TypeVersionArn
func (t *AWS_CloudFormation_PublicTypeVersion) GetAtt__TypeVersionArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudFormation_PublicTypeVersion__AttributesMap.TypeVersionArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudFormation_PublicTypeVersion) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublicTypeArn returns a conventionally configured output for an attribute of this resource.
// Attribute: PublicTypeArn
func (t *AWS_CloudFormation_PublicTypeVersion) GetConventionalOutputAtt__PublicTypeArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublicTypeArn", t.GetAtt__PublicTypeArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublisherId returns a conventionally configured output for an attribute of this resource.
// Attribute: PublisherId
func (t *AWS_CloudFormation_PublicTypeVersion) GetConventionalOutputAtt__PublisherId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublisherId", t.GetAtt__PublisherId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__TypeVersionArn returns a conventionally configured output for an attribute of this resource.
// Attribute: TypeVersionArn
func (t *AWS_CloudFormation_PublicTypeVersion) GetConventionalOutputAtt__TypeVersionArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTypeVersionArn", t.GetAtt__TypeVersionArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudFormation_PublicTypeVersion) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudFormation_PublicTypeVersion

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudFormation_PublicTypeVersion) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
