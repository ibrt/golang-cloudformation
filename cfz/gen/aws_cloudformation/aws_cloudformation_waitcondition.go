// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudformation

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudFormation_WaitCondition)(nil)
	_ cfz.Resource                   = (*AWS_CloudFormation_WaitCondition)(nil)
)

const (
	// AWS_CloudFormation_WaitCondition__Type is the CloudFormation type for AWS::CloudFormation::WaitCondition.
	AWS_CloudFormation_WaitCondition__Type = "AWS::CloudFormation::WaitCondition"
)

var (
	// AWS_CloudFormation_WaitCondition__PropertiesMap reports all the CloudFormation properties for AWS::CloudFormation::WaitCondition.
	AWS_CloudFormation_WaitCondition__PropertiesMap = struct {
		Count   string
		Handle  string
		Timeout string
	}{
		Count:   "Count",
		Handle:  "Handle",
		Timeout: "Timeout",
	}

	// AWS_CloudFormation_WaitCondition__PropertiesSlice reports all the CloudFormation properties for AWS::CloudFormation::WaitCondition.
	AWS_CloudFormation_WaitCondition__PropertiesSlice = []string{
		AWS_CloudFormation_WaitCondition__PropertiesMap.Count,
		AWS_CloudFormation_WaitCondition__PropertiesMap.Handle,
		AWS_CloudFormation_WaitCondition__PropertiesMap.Timeout,
	}
)

// AWS_CloudFormation_WaitCondition is a binding for AWS::CloudFormation::WaitCondition.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html
type AWS_CloudFormation_WaitCondition struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Count is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-count
	Count cfz.Expression[int32] `json:"Count,omitempty"`

	// Handle is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-handle
	Handle cfz.Expression[string] `json:"Handle,omitempty"`

	// Timeout is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html#cfn-waitcondition-timeout
	Timeout cfz.Expression[string] `json:"Timeout,omitempty"`
}

// New__AWS_CloudFormation_WaitCondition initializes a new *AWS_CloudFormation_WaitCondition.
func New__AWS_CloudFormation_WaitCondition(logicalName string) *AWS_CloudFormation_WaitCondition {
	return &AWS_CloudFormation_WaitCondition{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudFormation_WaitCondition) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudFormation_WaitCondition) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudFormation_WaitCondition) GetType() string {
	return AWS_CloudFormation_WaitCondition__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudFormation_WaitCondition) Set__LogicalName(v string) *AWS_CloudFormation_WaitCondition {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudFormation_WaitCondition) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudFormation_WaitCondition {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudFormation_WaitCondition) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudFormation_WaitCondition {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudFormation_WaitCondition) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudFormation_WaitCondition {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudFormation_WaitCondition) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudFormation_WaitCondition {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudFormation_WaitCondition) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudFormation_WaitCondition {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudFormation_WaitCondition) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudFormation_WaitCondition {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Count updates property "Count".
func (t *AWS_CloudFormation_WaitCondition) Set__Count(v cfz.Expression[int32]) *AWS_CloudFormation_WaitCondition {
	t.Count = v
	return t
}

// SetV__Count updates property "Count".
func (t *AWS_CloudFormation_WaitCondition) SetV__Count(v int32) *AWS_CloudFormation_WaitCondition {
	t.Count = cfz.V(v)
	return t
}

// Set__Handle updates property "Handle".
func (t *AWS_CloudFormation_WaitCondition) Set__Handle(v cfz.Expression[string]) *AWS_CloudFormation_WaitCondition {
	t.Handle = v
	return t
}

// SetV__Handle updates property "Handle".
func (t *AWS_CloudFormation_WaitCondition) SetV__Handle(v string) *AWS_CloudFormation_WaitCondition {
	t.Handle = cfz.V(v)
	return t
}

// Set__Timeout updates property "Timeout".
func (t *AWS_CloudFormation_WaitCondition) Set__Timeout(v cfz.Expression[string]) *AWS_CloudFormation_WaitCondition {
	t.Timeout = v
	return t
}

// SetV__Timeout updates property "Timeout".
func (t *AWS_CloudFormation_WaitCondition) SetV__Timeout(v string) *AWS_CloudFormation_WaitCondition {
	t.Timeout = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudFormation_WaitCondition) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudFormation_WaitCondition) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudFormation_WaitCondition) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudFormation_WaitCondition

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudFormation_WaitCondition) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
