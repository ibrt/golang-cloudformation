// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudformation

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudFormation_StackSet)(nil)
	_ cfz.Resource                   = (*AWS_CloudFormation_StackSet)(nil)
)

const (
	// AWS_CloudFormation_StackSet__Type is the CloudFormation type for AWS::CloudFormation::StackSet.
	AWS_CloudFormation_StackSet__Type = "AWS::CloudFormation::StackSet"
)

var (
	// AWS_CloudFormation_StackSet__AttributesMap reports all the CloudFormation attributes for AWS::CloudFormation::StackSet.
	AWS_CloudFormation_StackSet__AttributesMap = struct {
		StackSetId string
	}{
		StackSetId: "StackSetId",
	}

	// AWS_CloudFormation_StackSet__AttributesSlice reports all the CloudFormation attributes for AWS::CloudFormation::StackSet.
	AWS_CloudFormation_StackSet__AttributesSlice = []string{
		AWS_CloudFormation_StackSet__AttributesMap.StackSetId,
	}
)

var (
	// AWS_CloudFormation_StackSet__PropertiesMap reports all the CloudFormation properties for AWS::CloudFormation::StackSet.
	AWS_CloudFormation_StackSet__PropertiesMap = struct {
		AdministrationRoleARN string
		AutoDeployment        string
		CallAs                string
		Capabilities          string
		Description           string
		ExecutionRoleName     string
		ManagedExecution      string
		OperationPreferences  string
		Parameters            string
		PermissionModel       string
		StackInstancesGroup   string
		StackSetName          string
		Tags                  string
		TemplateBody          string
		TemplateURL           string
	}{
		AdministrationRoleARN: "AdministrationRoleARN",
		AutoDeployment:        "AutoDeployment",
		CallAs:                "CallAs",
		Capabilities:          "Capabilities",
		Description:           "Description",
		ExecutionRoleName:     "ExecutionRoleName",
		ManagedExecution:      "ManagedExecution",
		OperationPreferences:  "OperationPreferences",
		Parameters:            "Parameters",
		PermissionModel:       "PermissionModel",
		StackInstancesGroup:   "StackInstancesGroup",
		StackSetName:          "StackSetName",
		Tags:                  "Tags",
		TemplateBody:          "TemplateBody",
		TemplateURL:           "TemplateURL",
	}

	// AWS_CloudFormation_StackSet__PropertiesSlice reports all the CloudFormation properties for AWS::CloudFormation::StackSet.
	AWS_CloudFormation_StackSet__PropertiesSlice = []string{
		AWS_CloudFormation_StackSet__PropertiesMap.AdministrationRoleARN,
		AWS_CloudFormation_StackSet__PropertiesMap.AutoDeployment,
		AWS_CloudFormation_StackSet__PropertiesMap.CallAs,
		AWS_CloudFormation_StackSet__PropertiesMap.Capabilities,
		AWS_CloudFormation_StackSet__PropertiesMap.Description,
		AWS_CloudFormation_StackSet__PropertiesMap.ExecutionRoleName,
		AWS_CloudFormation_StackSet__PropertiesMap.ManagedExecution,
		AWS_CloudFormation_StackSet__PropertiesMap.OperationPreferences,
		AWS_CloudFormation_StackSet__PropertiesMap.Parameters,
		AWS_CloudFormation_StackSet__PropertiesMap.PermissionModel,
		AWS_CloudFormation_StackSet__PropertiesMap.StackInstancesGroup,
		AWS_CloudFormation_StackSet__PropertiesMap.StackSetName,
		AWS_CloudFormation_StackSet__PropertiesMap.Tags,
		AWS_CloudFormation_StackSet__PropertiesMap.TemplateBody,
		AWS_CloudFormation_StackSet__PropertiesMap.TemplateURL,
	}
)

// AWS_CloudFormation_StackSet is a binding for AWS::CloudFormation::StackSet.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html
type AWS_CloudFormation_StackSet struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AdministrationRoleARN is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-administrationrolearn
	AdministrationRoleARN cfz.Expression[string] `json:"AdministrationRoleARN,omitempty"`

	// AutoDeployment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-autodeployment
	AutoDeployment cfz.Expression[AWS_CloudFormation_StackSet_AutoDeployment] `json:"AutoDeployment,omitempty"`

	// CallAs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-callas
	CallAs cfz.Expression[string] `json:"CallAs,omitempty"`

	// Capabilities is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-capabilities
	Capabilities cfz.ExpressionSlice[string] `json:"Capabilities,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// ExecutionRoleName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-executionrolename
	ExecutionRoleName cfz.Expression[string] `json:"ExecutionRoleName,omitempty"`

	// ManagedExecution is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-managedexecution
	ManagedExecution cfz.Expression[AWS_CloudFormation_StackSet_ManagedExecution] `json:"ManagedExecution,omitempty"`

	// OperationPreferences is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-operationpreferences
	OperationPreferences cfz.Expression[AWS_CloudFormation_StackSet_OperationPreferences] `json:"OperationPreferences,omitempty"`

	// Parameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-parameters
	Parameters cfz.ExpressionSlice[AWS_CloudFormation_StackSet_Parameter] `json:"Parameters,omitempty"`

	// PermissionModel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-permissionmodel
	PermissionModel cfz.Expression[string] `json:"PermissionModel,omitempty"`

	// StackInstancesGroup is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-stackinstancesgroup
	StackInstancesGroup cfz.ExpressionSlice[AWS_CloudFormation_StackSet_StackInstances] `json:"StackInstancesGroup,omitempty"`

	// StackSetName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-stacksetname
	StackSetName cfz.Expression[string] `json:"StackSetName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TemplateBody is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-templatebody
	TemplateBody cfz.Expression[string] `json:"TemplateBody,omitempty"`

	// TemplateURL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-stackset.html#cfn-cloudformation-stackset-templateurl
	TemplateURL cfz.Expression[string] `json:"TemplateURL,omitempty"`
}

// New__AWS_CloudFormation_StackSet initializes a new *AWS_CloudFormation_StackSet.
func New__AWS_CloudFormation_StackSet(logicalName string) *AWS_CloudFormation_StackSet {
	return &AWS_CloudFormation_StackSet{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudFormation_StackSet) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudFormation_StackSet) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudFormation_StackSet) GetType() string {
	return AWS_CloudFormation_StackSet__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudFormation_StackSet) Set__LogicalName(v string) *AWS_CloudFormation_StackSet {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudFormation_StackSet) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudFormation_StackSet {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudFormation_StackSet) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudFormation_StackSet {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudFormation_StackSet) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudFormation_StackSet {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudFormation_StackSet) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudFormation_StackSet {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudFormation_StackSet) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudFormation_StackSet {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudFormation_StackSet) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudFormation_StackSet {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AdministrationRoleARN updates property "AdministrationRoleARN".
func (t *AWS_CloudFormation_StackSet) Set__AdministrationRoleARN(v cfz.Expression[string]) *AWS_CloudFormation_StackSet {
	t.AdministrationRoleARN = v
	return t
}

// SetV__AdministrationRoleARN updates property "AdministrationRoleARN".
func (t *AWS_CloudFormation_StackSet) SetV__AdministrationRoleARN(v string) *AWS_CloudFormation_StackSet {
	t.AdministrationRoleARN = cfz.V(v)
	return t
}

// Set__AutoDeployment updates property "AutoDeployment".
func (t *AWS_CloudFormation_StackSet) Set__AutoDeployment(v cfz.Expression[AWS_CloudFormation_StackSet_AutoDeployment]) *AWS_CloudFormation_StackSet {
	t.AutoDeployment = v
	return t
}

// SetV__AutoDeployment updates property "AutoDeployment".
func (t *AWS_CloudFormation_StackSet) SetV__AutoDeployment(v AWS_CloudFormation_StackSet_AutoDeployment) *AWS_CloudFormation_StackSet {
	t.AutoDeployment = cfz.V(v)
	return t
}

// Set__CallAs updates property "CallAs".
func (t *AWS_CloudFormation_StackSet) Set__CallAs(v cfz.Expression[string]) *AWS_CloudFormation_StackSet {
	t.CallAs = v
	return t
}

// SetV__CallAs updates property "CallAs".
func (t *AWS_CloudFormation_StackSet) SetV__CallAs(v string) *AWS_CloudFormation_StackSet {
	t.CallAs = cfz.V(v)
	return t
}

// Set__Capabilities updates property "Capabilities".
func (t *AWS_CloudFormation_StackSet) Set__Capabilities(v cfz.ExpressionSlice[string]) *AWS_CloudFormation_StackSet {
	t.Capabilities = v
	return t
}

// SetS__Capabilities updates property "Capabilities".
func (t *AWS_CloudFormation_StackSet) SetS__Capabilities(v ...cfz.Expression[string]) *AWS_CloudFormation_StackSet {
	t.Capabilities = cfz.S(v...)
	return t
}

// SetSV__Capabilities updates property "Capabilities".
func (t *AWS_CloudFormation_StackSet) SetSV__Capabilities(v ...string) *AWS_CloudFormation_StackSet {
	t.Capabilities = cfz.SV(v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_CloudFormation_StackSet) Set__Description(v cfz.Expression[string]) *AWS_CloudFormation_StackSet {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_CloudFormation_StackSet) SetV__Description(v string) *AWS_CloudFormation_StackSet {
	t.Description = cfz.V(v)
	return t
}

// Set__ExecutionRoleName updates property "ExecutionRoleName".
func (t *AWS_CloudFormation_StackSet) Set__ExecutionRoleName(v cfz.Expression[string]) *AWS_CloudFormation_StackSet {
	t.ExecutionRoleName = v
	return t
}

// SetV__ExecutionRoleName updates property "ExecutionRoleName".
func (t *AWS_CloudFormation_StackSet) SetV__ExecutionRoleName(v string) *AWS_CloudFormation_StackSet {
	t.ExecutionRoleName = cfz.V(v)
	return t
}

// Set__ManagedExecution updates property "ManagedExecution".
func (t *AWS_CloudFormation_StackSet) Set__ManagedExecution(v cfz.Expression[AWS_CloudFormation_StackSet_ManagedExecution]) *AWS_CloudFormation_StackSet {
	t.ManagedExecution = v
	return t
}

// SetV__ManagedExecution updates property "ManagedExecution".
func (t *AWS_CloudFormation_StackSet) SetV__ManagedExecution(v AWS_CloudFormation_StackSet_ManagedExecution) *AWS_CloudFormation_StackSet {
	t.ManagedExecution = cfz.V(v)
	return t
}

// Set__OperationPreferences updates property "OperationPreferences".
func (t *AWS_CloudFormation_StackSet) Set__OperationPreferences(v cfz.Expression[AWS_CloudFormation_StackSet_OperationPreferences]) *AWS_CloudFormation_StackSet {
	t.OperationPreferences = v
	return t
}

// SetV__OperationPreferences updates property "OperationPreferences".
func (t *AWS_CloudFormation_StackSet) SetV__OperationPreferences(v AWS_CloudFormation_StackSet_OperationPreferences) *AWS_CloudFormation_StackSet {
	t.OperationPreferences = cfz.V(v)
	return t
}

// Set__Parameters updates property "Parameters".
func (t *AWS_CloudFormation_StackSet) Set__Parameters(v cfz.ExpressionSlice[AWS_CloudFormation_StackSet_Parameter]) *AWS_CloudFormation_StackSet {
	t.Parameters = v
	return t
}

// SetS__Parameters updates property "Parameters".
func (t *AWS_CloudFormation_StackSet) SetS__Parameters(v ...cfz.Expression[AWS_CloudFormation_StackSet_Parameter]) *AWS_CloudFormation_StackSet {
	t.Parameters = cfz.S(v...)
	return t
}

// SetSV__Parameters updates property "Parameters".
func (t *AWS_CloudFormation_StackSet) SetSV__Parameters(v ...AWS_CloudFormation_StackSet_Parameter) *AWS_CloudFormation_StackSet {
	t.Parameters = cfz.SV(v...)
	return t
}

// Set__PermissionModel updates property "PermissionModel".
func (t *AWS_CloudFormation_StackSet) Set__PermissionModel(v cfz.Expression[string]) *AWS_CloudFormation_StackSet {
	t.PermissionModel = v
	return t
}

// SetV__PermissionModel updates property "PermissionModel".
func (t *AWS_CloudFormation_StackSet) SetV__PermissionModel(v string) *AWS_CloudFormation_StackSet {
	t.PermissionModel = cfz.V(v)
	return t
}

// Set__StackInstancesGroup updates property "StackInstancesGroup".
func (t *AWS_CloudFormation_StackSet) Set__StackInstancesGroup(v cfz.ExpressionSlice[AWS_CloudFormation_StackSet_StackInstances]) *AWS_CloudFormation_StackSet {
	t.StackInstancesGroup = v
	return t
}

// SetS__StackInstancesGroup updates property "StackInstancesGroup".
func (t *AWS_CloudFormation_StackSet) SetS__StackInstancesGroup(v ...cfz.Expression[AWS_CloudFormation_StackSet_StackInstances]) *AWS_CloudFormation_StackSet {
	t.StackInstancesGroup = cfz.S(v...)
	return t
}

// SetSV__StackInstancesGroup updates property "StackInstancesGroup".
func (t *AWS_CloudFormation_StackSet) SetSV__StackInstancesGroup(v ...AWS_CloudFormation_StackSet_StackInstances) *AWS_CloudFormation_StackSet {
	t.StackInstancesGroup = cfz.SV(v...)
	return t
}

// Set__StackSetName updates property "StackSetName".
func (t *AWS_CloudFormation_StackSet) Set__StackSetName(v cfz.Expression[string]) *AWS_CloudFormation_StackSet {
	t.StackSetName = v
	return t
}

// SetV__StackSetName updates property "StackSetName".
func (t *AWS_CloudFormation_StackSet) SetV__StackSetName(v string) *AWS_CloudFormation_StackSet {
	t.StackSetName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CloudFormation_StackSet) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CloudFormation_StackSet {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CloudFormation_StackSet) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CloudFormation_StackSet {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CloudFormation_StackSet) SetSV__Tags(v ...cfz.Tag) *AWS_CloudFormation_StackSet {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TemplateBody updates property "TemplateBody".
func (t *AWS_CloudFormation_StackSet) Set__TemplateBody(v cfz.Expression[string]) *AWS_CloudFormation_StackSet {
	t.TemplateBody = v
	return t
}

// SetV__TemplateBody updates property "TemplateBody".
func (t *AWS_CloudFormation_StackSet) SetV__TemplateBody(v string) *AWS_CloudFormation_StackSet {
	t.TemplateBody = cfz.V(v)
	return t
}

// Set__TemplateURL updates property "TemplateURL".
func (t *AWS_CloudFormation_StackSet) Set__TemplateURL(v cfz.Expression[string]) *AWS_CloudFormation_StackSet {
	t.TemplateURL = v
	return t
}

// SetV__TemplateURL updates property "TemplateURL".
func (t *AWS_CloudFormation_StackSet) SetV__TemplateURL(v string) *AWS_CloudFormation_StackSet {
	t.TemplateURL = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudFormation_StackSet) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__StackSetId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StackSetId
func (t *AWS_CloudFormation_StackSet) GetAtt__StackSetId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudFormation_StackSet__AttributesMap.StackSetId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudFormation_StackSet) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StackSetId returns a conventionally configured output for an attribute of this resource.
// Attribute: StackSetId
func (t *AWS_CloudFormation_StackSet) GetConventionalOutputAtt__StackSetId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStackSetId", t.GetAtt__StackSetId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudFormation_StackSet) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudFormation_StackSet

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudFormation_StackSet) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
