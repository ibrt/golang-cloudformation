// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudformation

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudFormation_TypeActivation)(nil)
	_ cfz.Resource                   = (*AWS_CloudFormation_TypeActivation)(nil)
)

const (
	// AWS_CloudFormation_TypeActivation__Type is the CloudFormation type for AWS::CloudFormation::TypeActivation.
	AWS_CloudFormation_TypeActivation__Type = "AWS::CloudFormation::TypeActivation"
)

var (
	// AWS_CloudFormation_TypeActivation__AttributesMap reports all the CloudFormation attributes for AWS::CloudFormation::TypeActivation.
	AWS_CloudFormation_TypeActivation__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_CloudFormation_TypeActivation__AttributesSlice reports all the CloudFormation attributes for AWS::CloudFormation::TypeActivation.
	AWS_CloudFormation_TypeActivation__AttributesSlice = []string{
		AWS_CloudFormation_TypeActivation__AttributesMap.Arn,
	}
)

var (
	// AWS_CloudFormation_TypeActivation__PropertiesMap reports all the CloudFormation properties for AWS::CloudFormation::TypeActivation.
	AWS_CloudFormation_TypeActivation__PropertiesMap = struct {
		AutoUpdate       string
		ExecutionRoleArn string
		LoggingConfig    string
		MajorVersion     string
		PublicTypeArn    string
		PublisherId      string
		Type             string
		TypeName         string
		TypeNameAlias    string
		VersionBump      string
	}{
		AutoUpdate:       "AutoUpdate",
		ExecutionRoleArn: "ExecutionRoleArn",
		LoggingConfig:    "LoggingConfig",
		MajorVersion:     "MajorVersion",
		PublicTypeArn:    "PublicTypeArn",
		PublisherId:      "PublisherId",
		Type:             "Type",
		TypeName:         "TypeName",
		TypeNameAlias:    "TypeNameAlias",
		VersionBump:      "VersionBump",
	}

	// AWS_CloudFormation_TypeActivation__PropertiesSlice reports all the CloudFormation properties for AWS::CloudFormation::TypeActivation.
	AWS_CloudFormation_TypeActivation__PropertiesSlice = []string{
		AWS_CloudFormation_TypeActivation__PropertiesMap.AutoUpdate,
		AWS_CloudFormation_TypeActivation__PropertiesMap.ExecutionRoleArn,
		AWS_CloudFormation_TypeActivation__PropertiesMap.LoggingConfig,
		AWS_CloudFormation_TypeActivation__PropertiesMap.MajorVersion,
		AWS_CloudFormation_TypeActivation__PropertiesMap.PublicTypeArn,
		AWS_CloudFormation_TypeActivation__PropertiesMap.PublisherId,
		AWS_CloudFormation_TypeActivation__PropertiesMap.Type,
		AWS_CloudFormation_TypeActivation__PropertiesMap.TypeName,
		AWS_CloudFormation_TypeActivation__PropertiesMap.TypeNameAlias,
		AWS_CloudFormation_TypeActivation__PropertiesMap.VersionBump,
	}
)

// AWS_CloudFormation_TypeActivation is a binding for AWS::CloudFormation::TypeActivation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html
type AWS_CloudFormation_TypeActivation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AutoUpdate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-autoupdate
	AutoUpdate cfz.Expression[bool] `json:"AutoUpdate,omitempty"`

	// ExecutionRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-executionrolearn
	ExecutionRoleArn cfz.Expression[string] `json:"ExecutionRoleArn,omitempty"`

	// LoggingConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-loggingconfig
	LoggingConfig cfz.Expression[AWS_CloudFormation_TypeActivation_LoggingConfig] `json:"LoggingConfig,omitempty"`

	// MajorVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-majorversion
	MajorVersion cfz.Expression[string] `json:"MajorVersion,omitempty"`

	// PublicTypeArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-publictypearn
	PublicTypeArn cfz.Expression[string] `json:"PublicTypeArn,omitempty"`

	// PublisherId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-publisherid
	PublisherId cfz.Expression[string] `json:"PublisherId,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// TypeName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-typename
	TypeName cfz.Expression[string] `json:"TypeName,omitempty"`

	// TypeNameAlias is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-typenamealias
	TypeNameAlias cfz.Expression[string] `json:"TypeNameAlias,omitempty"`

	// VersionBump is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudformation-typeactivation.html#cfn-cloudformation-typeactivation-versionbump
	VersionBump cfz.Expression[string] `json:"VersionBump,omitempty"`
}

// New__AWS_CloudFormation_TypeActivation initializes a new *AWS_CloudFormation_TypeActivation.
func New__AWS_CloudFormation_TypeActivation(logicalName string) *AWS_CloudFormation_TypeActivation {
	return &AWS_CloudFormation_TypeActivation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudFormation_TypeActivation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudFormation_TypeActivation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudFormation_TypeActivation) GetType() string {
	return AWS_CloudFormation_TypeActivation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudFormation_TypeActivation) Set__LogicalName(v string) *AWS_CloudFormation_TypeActivation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudFormation_TypeActivation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudFormation_TypeActivation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudFormation_TypeActivation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudFormation_TypeActivation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudFormation_TypeActivation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudFormation_TypeActivation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudFormation_TypeActivation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudFormation_TypeActivation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudFormation_TypeActivation) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudFormation_TypeActivation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudFormation_TypeActivation) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudFormation_TypeActivation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AutoUpdate updates property "AutoUpdate".
func (t *AWS_CloudFormation_TypeActivation) Set__AutoUpdate(v cfz.Expression[bool]) *AWS_CloudFormation_TypeActivation {
	t.AutoUpdate = v
	return t
}

// SetV__AutoUpdate updates property "AutoUpdate".
func (t *AWS_CloudFormation_TypeActivation) SetV__AutoUpdate(v bool) *AWS_CloudFormation_TypeActivation {
	t.AutoUpdate = cfz.V(v)
	return t
}

// Set__ExecutionRoleArn updates property "ExecutionRoleArn".
func (t *AWS_CloudFormation_TypeActivation) Set__ExecutionRoleArn(v cfz.Expression[string]) *AWS_CloudFormation_TypeActivation {
	t.ExecutionRoleArn = v
	return t
}

// SetV__ExecutionRoleArn updates property "ExecutionRoleArn".
func (t *AWS_CloudFormation_TypeActivation) SetV__ExecutionRoleArn(v string) *AWS_CloudFormation_TypeActivation {
	t.ExecutionRoleArn = cfz.V(v)
	return t
}

// Set__LoggingConfig updates property "LoggingConfig".
func (t *AWS_CloudFormation_TypeActivation) Set__LoggingConfig(v cfz.Expression[AWS_CloudFormation_TypeActivation_LoggingConfig]) *AWS_CloudFormation_TypeActivation {
	t.LoggingConfig = v
	return t
}

// SetV__LoggingConfig updates property "LoggingConfig".
func (t *AWS_CloudFormation_TypeActivation) SetV__LoggingConfig(v AWS_CloudFormation_TypeActivation_LoggingConfig) *AWS_CloudFormation_TypeActivation {
	t.LoggingConfig = cfz.V(v)
	return t
}

// Set__MajorVersion updates property "MajorVersion".
func (t *AWS_CloudFormation_TypeActivation) Set__MajorVersion(v cfz.Expression[string]) *AWS_CloudFormation_TypeActivation {
	t.MajorVersion = v
	return t
}

// SetV__MajorVersion updates property "MajorVersion".
func (t *AWS_CloudFormation_TypeActivation) SetV__MajorVersion(v string) *AWS_CloudFormation_TypeActivation {
	t.MajorVersion = cfz.V(v)
	return t
}

// Set__PublicTypeArn updates property "PublicTypeArn".
func (t *AWS_CloudFormation_TypeActivation) Set__PublicTypeArn(v cfz.Expression[string]) *AWS_CloudFormation_TypeActivation {
	t.PublicTypeArn = v
	return t
}

// SetV__PublicTypeArn updates property "PublicTypeArn".
func (t *AWS_CloudFormation_TypeActivation) SetV__PublicTypeArn(v string) *AWS_CloudFormation_TypeActivation {
	t.PublicTypeArn = cfz.V(v)
	return t
}

// Set__PublisherId updates property "PublisherId".
func (t *AWS_CloudFormation_TypeActivation) Set__PublisherId(v cfz.Expression[string]) *AWS_CloudFormation_TypeActivation {
	t.PublisherId = v
	return t
}

// SetV__PublisherId updates property "PublisherId".
func (t *AWS_CloudFormation_TypeActivation) SetV__PublisherId(v string) *AWS_CloudFormation_TypeActivation {
	t.PublisherId = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_CloudFormation_TypeActivation) Set__Type(v cfz.Expression[string]) *AWS_CloudFormation_TypeActivation {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_CloudFormation_TypeActivation) SetV__Type(v string) *AWS_CloudFormation_TypeActivation {
	t.Type = cfz.V(v)
	return t
}

// Set__TypeName updates property "TypeName".
func (t *AWS_CloudFormation_TypeActivation) Set__TypeName(v cfz.Expression[string]) *AWS_CloudFormation_TypeActivation {
	t.TypeName = v
	return t
}

// SetV__TypeName updates property "TypeName".
func (t *AWS_CloudFormation_TypeActivation) SetV__TypeName(v string) *AWS_CloudFormation_TypeActivation {
	t.TypeName = cfz.V(v)
	return t
}

// Set__TypeNameAlias updates property "TypeNameAlias".
func (t *AWS_CloudFormation_TypeActivation) Set__TypeNameAlias(v cfz.Expression[string]) *AWS_CloudFormation_TypeActivation {
	t.TypeNameAlias = v
	return t
}

// SetV__TypeNameAlias updates property "TypeNameAlias".
func (t *AWS_CloudFormation_TypeActivation) SetV__TypeNameAlias(v string) *AWS_CloudFormation_TypeActivation {
	t.TypeNameAlias = cfz.V(v)
	return t
}

// Set__VersionBump updates property "VersionBump".
func (t *AWS_CloudFormation_TypeActivation) Set__VersionBump(v cfz.Expression[string]) *AWS_CloudFormation_TypeActivation {
	t.VersionBump = v
	return t
}

// SetV__VersionBump updates property "VersionBump".
func (t *AWS_CloudFormation_TypeActivation) SetV__VersionBump(v string) *AWS_CloudFormation_TypeActivation {
	t.VersionBump = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudFormation_TypeActivation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_CloudFormation_TypeActivation) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudFormation_TypeActivation__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudFormation_TypeActivation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_CloudFormation_TypeActivation) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudFormation_TypeActivation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudFormation_TypeActivation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudFormation_TypeActivation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
