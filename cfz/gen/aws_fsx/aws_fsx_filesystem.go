// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_fsx

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_FSx_FileSystem)(nil)
	_ cfz.Resource                   = (*AWS_FSx_FileSystem)(nil)
)

const (
	// AWS_FSx_FileSystem__Type is the CloudFormation type for AWS::FSx::FileSystem.
	AWS_FSx_FileSystem__Type = "AWS::FSx::FileSystem"
)

var (
	// AWS_FSx_FileSystem__AttributesMap reports all the CloudFormation attributes for AWS::FSx::FileSystem.
	AWS_FSx_FileSystem__AttributesMap = struct {
		DNSName         string
		LustreMountName string
		ResourceARN     string
		RootVolumeId    string
	}{
		DNSName:         "DNSName",
		LustreMountName: "LustreMountName",
		ResourceARN:     "ResourceARN",
		RootVolumeId:    "RootVolumeId",
	}

	// AWS_FSx_FileSystem__AttributesSlice reports all the CloudFormation attributes for AWS::FSx::FileSystem.
	AWS_FSx_FileSystem__AttributesSlice = []string{
		AWS_FSx_FileSystem__AttributesMap.DNSName,
		AWS_FSx_FileSystem__AttributesMap.LustreMountName,
		AWS_FSx_FileSystem__AttributesMap.ResourceARN,
		AWS_FSx_FileSystem__AttributesMap.RootVolumeId,
	}
)

var (
	// AWS_FSx_FileSystem__PropertiesMap reports all the CloudFormation properties for AWS::FSx::FileSystem.
	AWS_FSx_FileSystem__PropertiesMap = struct {
		BackupId              string
		FileSystemType        string
		FileSystemTypeVersion string
		KmsKeyId              string
		LustreConfiguration   string
		OntapConfiguration    string
		OpenZFSConfiguration  string
		SecurityGroupIds      string
		StorageCapacity       string
		StorageType           string
		SubnetIds             string
		Tags                  string
		WindowsConfiguration  string
	}{
		BackupId:              "BackupId",
		FileSystemType:        "FileSystemType",
		FileSystemTypeVersion: "FileSystemTypeVersion",
		KmsKeyId:              "KmsKeyId",
		LustreConfiguration:   "LustreConfiguration",
		OntapConfiguration:    "OntapConfiguration",
		OpenZFSConfiguration:  "OpenZFSConfiguration",
		SecurityGroupIds:      "SecurityGroupIds",
		StorageCapacity:       "StorageCapacity",
		StorageType:           "StorageType",
		SubnetIds:             "SubnetIds",
		Tags:                  "Tags",
		WindowsConfiguration:  "WindowsConfiguration",
	}

	// AWS_FSx_FileSystem__PropertiesSlice reports all the CloudFormation properties for AWS::FSx::FileSystem.
	AWS_FSx_FileSystem__PropertiesSlice = []string{
		AWS_FSx_FileSystem__PropertiesMap.BackupId,
		AWS_FSx_FileSystem__PropertiesMap.FileSystemType,
		AWS_FSx_FileSystem__PropertiesMap.FileSystemTypeVersion,
		AWS_FSx_FileSystem__PropertiesMap.KmsKeyId,
		AWS_FSx_FileSystem__PropertiesMap.LustreConfiguration,
		AWS_FSx_FileSystem__PropertiesMap.OntapConfiguration,
		AWS_FSx_FileSystem__PropertiesMap.OpenZFSConfiguration,
		AWS_FSx_FileSystem__PropertiesMap.SecurityGroupIds,
		AWS_FSx_FileSystem__PropertiesMap.StorageCapacity,
		AWS_FSx_FileSystem__PropertiesMap.StorageType,
		AWS_FSx_FileSystem__PropertiesMap.SubnetIds,
		AWS_FSx_FileSystem__PropertiesMap.Tags,
		AWS_FSx_FileSystem__PropertiesMap.WindowsConfiguration,
	}
)

// AWS_FSx_FileSystem is a binding for AWS::FSx::FileSystem.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html
type AWS_FSx_FileSystem struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// BackupId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-backupid
	BackupId cfz.Expression[string] `json:"BackupId,omitempty"`

	// FileSystemType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-filesystemtype
	FileSystemType cfz.Expression[string] `json:"FileSystemType,omitempty"`

	// FileSystemTypeVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-filesystemtypeversion
	FileSystemTypeVersion cfz.Expression[string] `json:"FileSystemTypeVersion,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// LustreConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-lustreconfiguration
	LustreConfiguration cfz.Expression[AWS_FSx_FileSystem_LustreConfiguration] `json:"LustreConfiguration,omitempty"`

	// OntapConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-ontapconfiguration
	OntapConfiguration cfz.Expression[AWS_FSx_FileSystem_OntapConfiguration] `json:"OntapConfiguration,omitempty"`

	// OpenZFSConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-openzfsconfiguration
	OpenZFSConfiguration cfz.Expression[AWS_FSx_FileSystem_OpenZFSConfiguration] `json:"OpenZFSConfiguration,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// StorageCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-storagecapacity
	StorageCapacity cfz.Expression[int32] `json:"StorageCapacity,omitempty"`

	// StorageType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-storagetype
	StorageType cfz.Expression[string] `json:"StorageType,omitempty"`

	// SubnetIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-subnetids
	SubnetIds cfz.ExpressionSlice[string] `json:"SubnetIds,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// WindowsConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-filesystem.html#cfn-fsx-filesystem-windowsconfiguration
	WindowsConfiguration cfz.Expression[AWS_FSx_FileSystem_WindowsConfiguration] `json:"WindowsConfiguration,omitempty"`
}

// New__AWS_FSx_FileSystem initializes a new *AWS_FSx_FileSystem.
func New__AWS_FSx_FileSystem(logicalName string) *AWS_FSx_FileSystem {
	return &AWS_FSx_FileSystem{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_FSx_FileSystem) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_FSx_FileSystem) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_FSx_FileSystem) GetType() string {
	return AWS_FSx_FileSystem__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_FSx_FileSystem) Set__LogicalName(v string) *AWS_FSx_FileSystem {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_FSx_FileSystem) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_FSx_FileSystem {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_FSx_FileSystem) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_FSx_FileSystem {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_FSx_FileSystem) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_FSx_FileSystem {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_FSx_FileSystem) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_FSx_FileSystem {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_FSx_FileSystem) Set__RequestedOutputs(v []cfz.Output) *AWS_FSx_FileSystem {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_FSx_FileSystem) Add__RequestedOutputs(v ...cfz.Output) *AWS_FSx_FileSystem {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__BackupId updates property "BackupId".
func (t *AWS_FSx_FileSystem) Set__BackupId(v cfz.Expression[string]) *AWS_FSx_FileSystem {
	t.BackupId = v
	return t
}

// SetV__BackupId updates property "BackupId".
func (t *AWS_FSx_FileSystem) SetV__BackupId(v string) *AWS_FSx_FileSystem {
	t.BackupId = cfz.V(v)
	return t
}

// Set__FileSystemType updates property "FileSystemType".
func (t *AWS_FSx_FileSystem) Set__FileSystemType(v cfz.Expression[string]) *AWS_FSx_FileSystem {
	t.FileSystemType = v
	return t
}

// SetV__FileSystemType updates property "FileSystemType".
func (t *AWS_FSx_FileSystem) SetV__FileSystemType(v string) *AWS_FSx_FileSystem {
	t.FileSystemType = cfz.V(v)
	return t
}

// Set__FileSystemTypeVersion updates property "FileSystemTypeVersion".
func (t *AWS_FSx_FileSystem) Set__FileSystemTypeVersion(v cfz.Expression[string]) *AWS_FSx_FileSystem {
	t.FileSystemTypeVersion = v
	return t
}

// SetV__FileSystemTypeVersion updates property "FileSystemTypeVersion".
func (t *AWS_FSx_FileSystem) SetV__FileSystemTypeVersion(v string) *AWS_FSx_FileSystem {
	t.FileSystemTypeVersion = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_FSx_FileSystem) Set__KmsKeyId(v cfz.Expression[string]) *AWS_FSx_FileSystem {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_FSx_FileSystem) SetV__KmsKeyId(v string) *AWS_FSx_FileSystem {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__LustreConfiguration updates property "LustreConfiguration".
func (t *AWS_FSx_FileSystem) Set__LustreConfiguration(v cfz.Expression[AWS_FSx_FileSystem_LustreConfiguration]) *AWS_FSx_FileSystem {
	t.LustreConfiguration = v
	return t
}

// SetV__LustreConfiguration updates property "LustreConfiguration".
func (t *AWS_FSx_FileSystem) SetV__LustreConfiguration(v AWS_FSx_FileSystem_LustreConfiguration) *AWS_FSx_FileSystem {
	t.LustreConfiguration = cfz.V(v)
	return t
}

// Set__OntapConfiguration updates property "OntapConfiguration".
func (t *AWS_FSx_FileSystem) Set__OntapConfiguration(v cfz.Expression[AWS_FSx_FileSystem_OntapConfiguration]) *AWS_FSx_FileSystem {
	t.OntapConfiguration = v
	return t
}

// SetV__OntapConfiguration updates property "OntapConfiguration".
func (t *AWS_FSx_FileSystem) SetV__OntapConfiguration(v AWS_FSx_FileSystem_OntapConfiguration) *AWS_FSx_FileSystem {
	t.OntapConfiguration = cfz.V(v)
	return t
}

// Set__OpenZFSConfiguration updates property "OpenZFSConfiguration".
func (t *AWS_FSx_FileSystem) Set__OpenZFSConfiguration(v cfz.Expression[AWS_FSx_FileSystem_OpenZFSConfiguration]) *AWS_FSx_FileSystem {
	t.OpenZFSConfiguration = v
	return t
}

// SetV__OpenZFSConfiguration updates property "OpenZFSConfiguration".
func (t *AWS_FSx_FileSystem) SetV__OpenZFSConfiguration(v AWS_FSx_FileSystem_OpenZFSConfiguration) *AWS_FSx_FileSystem {
	t.OpenZFSConfiguration = cfz.V(v)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_FSx_FileSystem) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_FSx_FileSystem {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_FSx_FileSystem) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_FSx_FileSystem {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_FSx_FileSystem) SetSV__SecurityGroupIds(v ...string) *AWS_FSx_FileSystem {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__StorageCapacity updates property "StorageCapacity".
func (t *AWS_FSx_FileSystem) Set__StorageCapacity(v cfz.Expression[int32]) *AWS_FSx_FileSystem {
	t.StorageCapacity = v
	return t
}

// SetV__StorageCapacity updates property "StorageCapacity".
func (t *AWS_FSx_FileSystem) SetV__StorageCapacity(v int32) *AWS_FSx_FileSystem {
	t.StorageCapacity = cfz.V(v)
	return t
}

// Set__StorageType updates property "StorageType".
func (t *AWS_FSx_FileSystem) Set__StorageType(v cfz.Expression[string]) *AWS_FSx_FileSystem {
	t.StorageType = v
	return t
}

// SetV__StorageType updates property "StorageType".
func (t *AWS_FSx_FileSystem) SetV__StorageType(v string) *AWS_FSx_FileSystem {
	t.StorageType = cfz.V(v)
	return t
}

// Set__SubnetIds updates property "SubnetIds".
func (t *AWS_FSx_FileSystem) Set__SubnetIds(v cfz.ExpressionSlice[string]) *AWS_FSx_FileSystem {
	t.SubnetIds = v
	return t
}

// SetS__SubnetIds updates property "SubnetIds".
func (t *AWS_FSx_FileSystem) SetS__SubnetIds(v ...cfz.Expression[string]) *AWS_FSx_FileSystem {
	t.SubnetIds = cfz.S(v...)
	return t
}

// SetSV__SubnetIds updates property "SubnetIds".
func (t *AWS_FSx_FileSystem) SetSV__SubnetIds(v ...string) *AWS_FSx_FileSystem {
	t.SubnetIds = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_FSx_FileSystem) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_FSx_FileSystem {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_FSx_FileSystem) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_FSx_FileSystem {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_FSx_FileSystem) SetSV__Tags(v ...cfz.Tag) *AWS_FSx_FileSystem {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__WindowsConfiguration updates property "WindowsConfiguration".
func (t *AWS_FSx_FileSystem) Set__WindowsConfiguration(v cfz.Expression[AWS_FSx_FileSystem_WindowsConfiguration]) *AWS_FSx_FileSystem {
	t.WindowsConfiguration = v
	return t
}

// SetV__WindowsConfiguration updates property "WindowsConfiguration".
func (t *AWS_FSx_FileSystem) SetV__WindowsConfiguration(v AWS_FSx_FileSystem_WindowsConfiguration) *AWS_FSx_FileSystem {
	t.WindowsConfiguration = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_FSx_FileSystem) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DNSName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DNSName
func (t *AWS_FSx_FileSystem) GetAtt__DNSName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_FSx_FileSystem__AttributesMap.DNSName))
}

// GetAtt__LustreMountName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LustreMountName
func (t *AWS_FSx_FileSystem) GetAtt__LustreMountName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_FSx_FileSystem__AttributesMap.LustreMountName))
}

// GetAtt__ResourceARN returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceARN
func (t *AWS_FSx_FileSystem) GetAtt__ResourceARN() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_FSx_FileSystem__AttributesMap.ResourceARN))
}

// GetAtt__RootVolumeId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RootVolumeId
func (t *AWS_FSx_FileSystem) GetAtt__RootVolumeId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_FSx_FileSystem__AttributesMap.RootVolumeId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_FSx_FileSystem) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DNSName returns a conventionally configured output for an attribute of this resource.
// Attribute: DNSName
func (t *AWS_FSx_FileSystem) GetConventionalOutputAtt__DNSName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDNSName", t.GetAtt__DNSName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LustreMountName returns a conventionally configured output for an attribute of this resource.
// Attribute: LustreMountName
func (t *AWS_FSx_FileSystem) GetConventionalOutputAtt__LustreMountName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLustreMountName", t.GetAtt__LustreMountName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceARN returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceARN
func (t *AWS_FSx_FileSystem) GetConventionalOutputAtt__ResourceARN(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceARN", t.GetAtt__ResourceARN())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RootVolumeId returns a conventionally configured output for an attribute of this resource.
// Attribute: RootVolumeId
func (t *AWS_FSx_FileSystem) GetConventionalOutputAtt__RootVolumeId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRootVolumeId", t.GetAtt__RootVolumeId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_FSx_FileSystem) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_FSx_FileSystem

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_FSx_FileSystem) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
