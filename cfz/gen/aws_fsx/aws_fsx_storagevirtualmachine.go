// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_fsx

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_FSx_StorageVirtualMachine)(nil)
	_ cfz.Resource                   = (*AWS_FSx_StorageVirtualMachine)(nil)
)

const (
	// AWS_FSx_StorageVirtualMachine__Type is the CloudFormation type for AWS::FSx::StorageVirtualMachine.
	AWS_FSx_StorageVirtualMachine__Type = "AWS::FSx::StorageVirtualMachine"
)

var (
	// AWS_FSx_StorageVirtualMachine__AttributesMap reports all the CloudFormation attributes for AWS::FSx::StorageVirtualMachine.
	AWS_FSx_StorageVirtualMachine__AttributesMap = struct {
		ResourceARN             string
		StorageVirtualMachineId string
		UUID                    string
	}{
		ResourceARN:             "ResourceARN",
		StorageVirtualMachineId: "StorageVirtualMachineId",
		UUID:                    "UUID",
	}

	// AWS_FSx_StorageVirtualMachine__AttributesSlice reports all the CloudFormation attributes for AWS::FSx::StorageVirtualMachine.
	AWS_FSx_StorageVirtualMachine__AttributesSlice = []string{
		AWS_FSx_StorageVirtualMachine__AttributesMap.ResourceARN,
		AWS_FSx_StorageVirtualMachine__AttributesMap.StorageVirtualMachineId,
		AWS_FSx_StorageVirtualMachine__AttributesMap.UUID,
	}
)

var (
	// AWS_FSx_StorageVirtualMachine__PropertiesMap reports all the CloudFormation properties for AWS::FSx::StorageVirtualMachine.
	AWS_FSx_StorageVirtualMachine__PropertiesMap = struct {
		ActiveDirectoryConfiguration string
		FileSystemId                 string
		Name                         string
		RootVolumeSecurityStyle      string
		SvmAdminPassword             string
		Tags                         string
	}{
		ActiveDirectoryConfiguration: "ActiveDirectoryConfiguration",
		FileSystemId:                 "FileSystemId",
		Name:                         "Name",
		RootVolumeSecurityStyle:      "RootVolumeSecurityStyle",
		SvmAdminPassword:             "SvmAdminPassword",
		Tags:                         "Tags",
	}

	// AWS_FSx_StorageVirtualMachine__PropertiesSlice reports all the CloudFormation properties for AWS::FSx::StorageVirtualMachine.
	AWS_FSx_StorageVirtualMachine__PropertiesSlice = []string{
		AWS_FSx_StorageVirtualMachine__PropertiesMap.ActiveDirectoryConfiguration,
		AWS_FSx_StorageVirtualMachine__PropertiesMap.FileSystemId,
		AWS_FSx_StorageVirtualMachine__PropertiesMap.Name,
		AWS_FSx_StorageVirtualMachine__PropertiesMap.RootVolumeSecurityStyle,
		AWS_FSx_StorageVirtualMachine__PropertiesMap.SvmAdminPassword,
		AWS_FSx_StorageVirtualMachine__PropertiesMap.Tags,
	}
)

// AWS_FSx_StorageVirtualMachine is a binding for AWS::FSx::StorageVirtualMachine.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html
type AWS_FSx_StorageVirtualMachine struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ActiveDirectoryConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-activedirectoryconfiguration
	ActiveDirectoryConfiguration cfz.Expression[AWS_FSx_StorageVirtualMachine_ActiveDirectoryConfiguration] `json:"ActiveDirectoryConfiguration,omitempty"`

	// FileSystemId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-filesystemid
	FileSystemId cfz.Expression[string] `json:"FileSystemId,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RootVolumeSecurityStyle is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-rootvolumesecuritystyle
	RootVolumeSecurityStyle cfz.Expression[string] `json:"RootVolumeSecurityStyle,omitempty"`

	// SvmAdminPassword is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-svmadminpassword
	SvmAdminPassword cfz.Expression[string] `json:"SvmAdminPassword,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fsx-storagevirtualmachine.html#cfn-fsx-storagevirtualmachine-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_FSx_StorageVirtualMachine initializes a new *AWS_FSx_StorageVirtualMachine.
func New__AWS_FSx_StorageVirtualMachine(logicalName string) *AWS_FSx_StorageVirtualMachine {
	return &AWS_FSx_StorageVirtualMachine{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_FSx_StorageVirtualMachine) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_FSx_StorageVirtualMachine) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_FSx_StorageVirtualMachine) GetType() string {
	return AWS_FSx_StorageVirtualMachine__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_FSx_StorageVirtualMachine) Set__LogicalName(v string) *AWS_FSx_StorageVirtualMachine {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_FSx_StorageVirtualMachine) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_FSx_StorageVirtualMachine {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_FSx_StorageVirtualMachine) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_FSx_StorageVirtualMachine {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_FSx_StorageVirtualMachine) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_FSx_StorageVirtualMachine {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_FSx_StorageVirtualMachine) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_FSx_StorageVirtualMachine {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_FSx_StorageVirtualMachine) Set__RequestedOutputs(v []cfz.Output) *AWS_FSx_StorageVirtualMachine {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_FSx_StorageVirtualMachine) Add__RequestedOutputs(v ...cfz.Output) *AWS_FSx_StorageVirtualMachine {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ActiveDirectoryConfiguration updates property "ActiveDirectoryConfiguration".
func (t *AWS_FSx_StorageVirtualMachine) Set__ActiveDirectoryConfiguration(v cfz.Expression[AWS_FSx_StorageVirtualMachine_ActiveDirectoryConfiguration]) *AWS_FSx_StorageVirtualMachine {
	t.ActiveDirectoryConfiguration = v
	return t
}

// SetV__ActiveDirectoryConfiguration updates property "ActiveDirectoryConfiguration".
func (t *AWS_FSx_StorageVirtualMachine) SetV__ActiveDirectoryConfiguration(v AWS_FSx_StorageVirtualMachine_ActiveDirectoryConfiguration) *AWS_FSx_StorageVirtualMachine {
	t.ActiveDirectoryConfiguration = cfz.V(v)
	return t
}

// Set__FileSystemId updates property "FileSystemId".
func (t *AWS_FSx_StorageVirtualMachine) Set__FileSystemId(v cfz.Expression[string]) *AWS_FSx_StorageVirtualMachine {
	t.FileSystemId = v
	return t
}

// SetV__FileSystemId updates property "FileSystemId".
func (t *AWS_FSx_StorageVirtualMachine) SetV__FileSystemId(v string) *AWS_FSx_StorageVirtualMachine {
	t.FileSystemId = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_FSx_StorageVirtualMachine) Set__Name(v cfz.Expression[string]) *AWS_FSx_StorageVirtualMachine {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_FSx_StorageVirtualMachine) SetV__Name(v string) *AWS_FSx_StorageVirtualMachine {
	t.Name = cfz.V(v)
	return t
}

// Set__RootVolumeSecurityStyle updates property "RootVolumeSecurityStyle".
func (t *AWS_FSx_StorageVirtualMachine) Set__RootVolumeSecurityStyle(v cfz.Expression[string]) *AWS_FSx_StorageVirtualMachine {
	t.RootVolumeSecurityStyle = v
	return t
}

// SetV__RootVolumeSecurityStyle updates property "RootVolumeSecurityStyle".
func (t *AWS_FSx_StorageVirtualMachine) SetV__RootVolumeSecurityStyle(v string) *AWS_FSx_StorageVirtualMachine {
	t.RootVolumeSecurityStyle = cfz.V(v)
	return t
}

// Set__SvmAdminPassword updates property "SvmAdminPassword".
func (t *AWS_FSx_StorageVirtualMachine) Set__SvmAdminPassword(v cfz.Expression[string]) *AWS_FSx_StorageVirtualMachine {
	t.SvmAdminPassword = v
	return t
}

// SetV__SvmAdminPassword updates property "SvmAdminPassword".
func (t *AWS_FSx_StorageVirtualMachine) SetV__SvmAdminPassword(v string) *AWS_FSx_StorageVirtualMachine {
	t.SvmAdminPassword = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_FSx_StorageVirtualMachine) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_FSx_StorageVirtualMachine {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_FSx_StorageVirtualMachine) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_FSx_StorageVirtualMachine {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_FSx_StorageVirtualMachine) SetSV__Tags(v ...cfz.Tag) *AWS_FSx_StorageVirtualMachine {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_FSx_StorageVirtualMachine) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ResourceARN returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceARN
func (t *AWS_FSx_StorageVirtualMachine) GetAtt__ResourceARN() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_FSx_StorageVirtualMachine__AttributesMap.ResourceARN))
}

// GetAtt__StorageVirtualMachineId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StorageVirtualMachineId
func (t *AWS_FSx_StorageVirtualMachine) GetAtt__StorageVirtualMachineId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_FSx_StorageVirtualMachine__AttributesMap.StorageVirtualMachineId))
}

// GetAtt__UUID returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UUID
func (t *AWS_FSx_StorageVirtualMachine) GetAtt__UUID() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_FSx_StorageVirtualMachine__AttributesMap.UUID))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_FSx_StorageVirtualMachine) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceARN returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceARN
func (t *AWS_FSx_StorageVirtualMachine) GetConventionalOutputAtt__ResourceARN(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceARN", t.GetAtt__ResourceARN())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StorageVirtualMachineId returns a conventionally configured output for an attribute of this resource.
// Attribute: StorageVirtualMachineId
func (t *AWS_FSx_StorageVirtualMachine) GetConventionalOutputAtt__StorageVirtualMachineId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStorageVirtualMachineId", t.GetAtt__StorageVirtualMachineId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UUID returns a conventionally configured output for an attribute of this resource.
// Attribute: UUID
func (t *AWS_FSx_StorageVirtualMachine) GetConventionalOutputAtt__UUID(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUUID", t.GetAtt__UUID())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_FSx_StorageVirtualMachine) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_FSx_StorageVirtualMachine

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_FSx_StorageVirtualMachine) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
