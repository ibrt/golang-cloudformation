// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediapackage

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaPackage_PackagingConfiguration_DashManifest__Type is the CloudFormation type for AWS::MediaPackage::PackagingConfiguration.DashManifest.
	AWS_MediaPackage_PackagingConfiguration_DashManifest__Type = "AWS::MediaPackage::PackagingConfiguration.DashManifest"
)

var (
	// AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesMap reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.DashManifest.
	AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesMap = struct {
		ManifestLayout       string
		ManifestName         string
		MinBufferTimeSeconds string
		Profile              string
		ScteMarkersSource    string
		StreamSelection      string
	}{
		ManifestLayout:       "ManifestLayout",
		ManifestName:         "ManifestName",
		MinBufferTimeSeconds: "MinBufferTimeSeconds",
		Profile:              "Profile",
		ScteMarkersSource:    "ScteMarkersSource",
		StreamSelection:      "StreamSelection",
	}

	// AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesSlice reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.DashManifest.
	AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesSlice = []string{
		AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesMap.ManifestLayout,
		AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesMap.ManifestName,
		AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesMap.MinBufferTimeSeconds,
		AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesMap.Profile,
		AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesMap.ScteMarkersSource,
		AWS_MediaPackage_PackagingConfiguration_DashManifest__PropertiesMap.StreamSelection,
	}
)

// AWS_MediaPackage_PackagingConfiguration_DashManifest is a binding for AWS::MediaPackage::PackagingConfiguration.DashManifest.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashmanifest.html
type AWS_MediaPackage_PackagingConfiguration_DashManifest struct {
	// ManifestLayout is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashmanifest.html#cfn-mediapackage-packagingconfiguration-dashmanifest-manifestlayout
	ManifestLayout cfz.Expression[string] `json:"ManifestLayout,omitempty"`

	// ManifestName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashmanifest.html#cfn-mediapackage-packagingconfiguration-dashmanifest-manifestname
	ManifestName cfz.Expression[string] `json:"ManifestName,omitempty"`

	// MinBufferTimeSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashmanifest.html#cfn-mediapackage-packagingconfiguration-dashmanifest-minbuffertimeseconds
	MinBufferTimeSeconds cfz.Expression[int32] `json:"MinBufferTimeSeconds,omitempty"`

	// Profile is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashmanifest.html#cfn-mediapackage-packagingconfiguration-dashmanifest-profile
	Profile cfz.Expression[string] `json:"Profile,omitempty"`

	// ScteMarkersSource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashmanifest.html#cfn-mediapackage-packagingconfiguration-dashmanifest-sctemarkerssource
	ScteMarkersSource cfz.Expression[string] `json:"ScteMarkersSource,omitempty"`

	// StreamSelection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashmanifest.html#cfn-mediapackage-packagingconfiguration-dashmanifest-streamselection
	StreamSelection cfz.Expression[AWS_MediaPackage_PackagingConfiguration_StreamSelection] `json:"StreamSelection,omitempty"`
}

// New__AWS_MediaPackage_PackagingConfiguration_DashManifest initializes a new AWS_MediaPackage_PackagingConfiguration_DashManifest.
func New__AWS_MediaPackage_PackagingConfiguration_DashManifest() AWS_MediaPackage_PackagingConfiguration_DashManifest {
	return AWS_MediaPackage_PackagingConfiguration_DashManifest{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaPackage_PackagingConfiguration_DashManifest) GetType() string {
	return AWS_MediaPackage_PackagingConfiguration_DashManifest__Type
}

// Set__ManifestLayout updates property "ManifestLayout".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) Set__ManifestLayout(v cfz.Expression[string]) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.ManifestLayout = v
	return t
}

// SetV__ManifestLayout updates property "ManifestLayout".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) SetV__ManifestLayout(v string) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.ManifestLayout = cfz.V(v)
	return t
}

// Set__ManifestName updates property "ManifestName".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) Set__ManifestName(v cfz.Expression[string]) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.ManifestName = v
	return t
}

// SetV__ManifestName updates property "ManifestName".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) SetV__ManifestName(v string) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.ManifestName = cfz.V(v)
	return t
}

// Set__MinBufferTimeSeconds updates property "MinBufferTimeSeconds".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) Set__MinBufferTimeSeconds(v cfz.Expression[int32]) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.MinBufferTimeSeconds = v
	return t
}

// SetV__MinBufferTimeSeconds updates property "MinBufferTimeSeconds".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) SetV__MinBufferTimeSeconds(v int32) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.MinBufferTimeSeconds = cfz.V(v)
	return t
}

// Set__Profile updates property "Profile".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) Set__Profile(v cfz.Expression[string]) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.Profile = v
	return t
}

// SetV__Profile updates property "Profile".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) SetV__Profile(v string) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.Profile = cfz.V(v)
	return t
}

// Set__ScteMarkersSource updates property "ScteMarkersSource".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) Set__ScteMarkersSource(v cfz.Expression[string]) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.ScteMarkersSource = v
	return t
}

// SetV__ScteMarkersSource updates property "ScteMarkersSource".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) SetV__ScteMarkersSource(v string) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.ScteMarkersSource = cfz.V(v)
	return t
}

// Set__StreamSelection updates property "StreamSelection".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) Set__StreamSelection(v cfz.Expression[AWS_MediaPackage_PackagingConfiguration_StreamSelection]) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.StreamSelection = v
	return t
}

// SetV__StreamSelection updates property "StreamSelection".
func (t AWS_MediaPackage_PackagingConfiguration_DashManifest) SetV__StreamSelection(v AWS_MediaPackage_PackagingConfiguration_StreamSelection) AWS_MediaPackage_PackagingConfiguration_DashManifest {
	t.StreamSelection = cfz.V(v)
	return t
}
