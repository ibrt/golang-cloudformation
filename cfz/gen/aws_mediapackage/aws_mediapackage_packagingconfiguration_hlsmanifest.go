// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediapackage

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaPackage_PackagingConfiguration_HlsManifest__Type is the CloudFormation type for AWS::MediaPackage::PackagingConfiguration.HlsManifest.
	AWS_MediaPackage_PackagingConfiguration_HlsManifest__Type = "AWS::MediaPackage::PackagingConfiguration.HlsManifest"
)

var (
	// AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesMap reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.HlsManifest.
	AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesMap = struct {
		AdMarkers                      string
		IncludeIframeOnlyStream        string
		ManifestName                   string
		ProgramDateTimeIntervalSeconds string
		RepeatExtXKey                  string
		StreamSelection                string
	}{
		AdMarkers:                      "AdMarkers",
		IncludeIframeOnlyStream:        "IncludeIframeOnlyStream",
		ManifestName:                   "ManifestName",
		ProgramDateTimeIntervalSeconds: "ProgramDateTimeIntervalSeconds",
		RepeatExtXKey:                  "RepeatExtXKey",
		StreamSelection:                "StreamSelection",
	}

	// AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesSlice reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.HlsManifest.
	AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesSlice = []string{
		AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesMap.AdMarkers,
		AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesMap.IncludeIframeOnlyStream,
		AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesMap.ManifestName,
		AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesMap.ProgramDateTimeIntervalSeconds,
		AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesMap.RepeatExtXKey,
		AWS_MediaPackage_PackagingConfiguration_HlsManifest__PropertiesMap.StreamSelection,
	}
)

// AWS_MediaPackage_PackagingConfiguration_HlsManifest is a binding for AWS::MediaPackage::PackagingConfiguration.HlsManifest.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-hlsmanifest.html
type AWS_MediaPackage_PackagingConfiguration_HlsManifest struct {
	// AdMarkers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-hlsmanifest.html#cfn-mediapackage-packagingconfiguration-hlsmanifest-admarkers
	AdMarkers cfz.Expression[string] `json:"AdMarkers,omitempty"`

	// IncludeIframeOnlyStream is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-hlsmanifest.html#cfn-mediapackage-packagingconfiguration-hlsmanifest-includeiframeonlystream
	IncludeIframeOnlyStream cfz.Expression[bool] `json:"IncludeIframeOnlyStream,omitempty"`

	// ManifestName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-hlsmanifest.html#cfn-mediapackage-packagingconfiguration-hlsmanifest-manifestname
	ManifestName cfz.Expression[string] `json:"ManifestName,omitempty"`

	// ProgramDateTimeIntervalSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-hlsmanifest.html#cfn-mediapackage-packagingconfiguration-hlsmanifest-programdatetimeintervalseconds
	ProgramDateTimeIntervalSeconds cfz.Expression[int32] `json:"ProgramDateTimeIntervalSeconds,omitempty"`

	// RepeatExtXKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-hlsmanifest.html#cfn-mediapackage-packagingconfiguration-hlsmanifest-repeatextxkey
	RepeatExtXKey cfz.Expression[bool] `json:"RepeatExtXKey,omitempty"`

	// StreamSelection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-hlsmanifest.html#cfn-mediapackage-packagingconfiguration-hlsmanifest-streamselection
	StreamSelection cfz.Expression[AWS_MediaPackage_PackagingConfiguration_StreamSelection] `json:"StreamSelection,omitempty"`
}

// New__AWS_MediaPackage_PackagingConfiguration_HlsManifest initializes a new AWS_MediaPackage_PackagingConfiguration_HlsManifest.
func New__AWS_MediaPackage_PackagingConfiguration_HlsManifest() AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	return AWS_MediaPackage_PackagingConfiguration_HlsManifest{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaPackage_PackagingConfiguration_HlsManifest) GetType() string {
	return AWS_MediaPackage_PackagingConfiguration_HlsManifest__Type
}

// Set__AdMarkers updates property "AdMarkers".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) Set__AdMarkers(v cfz.Expression[string]) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.AdMarkers = v
	return t
}

// SetV__AdMarkers updates property "AdMarkers".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) SetV__AdMarkers(v string) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.AdMarkers = cfz.V(v)
	return t
}

// Set__IncludeIframeOnlyStream updates property "IncludeIframeOnlyStream".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) Set__IncludeIframeOnlyStream(v cfz.Expression[bool]) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.IncludeIframeOnlyStream = v
	return t
}

// SetV__IncludeIframeOnlyStream updates property "IncludeIframeOnlyStream".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) SetV__IncludeIframeOnlyStream(v bool) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.IncludeIframeOnlyStream = cfz.V(v)
	return t
}

// Set__ManifestName updates property "ManifestName".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) Set__ManifestName(v cfz.Expression[string]) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.ManifestName = v
	return t
}

// SetV__ManifestName updates property "ManifestName".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) SetV__ManifestName(v string) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.ManifestName = cfz.V(v)
	return t
}

// Set__ProgramDateTimeIntervalSeconds updates property "ProgramDateTimeIntervalSeconds".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) Set__ProgramDateTimeIntervalSeconds(v cfz.Expression[int32]) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.ProgramDateTimeIntervalSeconds = v
	return t
}

// SetV__ProgramDateTimeIntervalSeconds updates property "ProgramDateTimeIntervalSeconds".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) SetV__ProgramDateTimeIntervalSeconds(v int32) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.ProgramDateTimeIntervalSeconds = cfz.V(v)
	return t
}

// Set__RepeatExtXKey updates property "RepeatExtXKey".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) Set__RepeatExtXKey(v cfz.Expression[bool]) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.RepeatExtXKey = v
	return t
}

// SetV__RepeatExtXKey updates property "RepeatExtXKey".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) SetV__RepeatExtXKey(v bool) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.RepeatExtXKey = cfz.V(v)
	return t
}

// Set__StreamSelection updates property "StreamSelection".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) Set__StreamSelection(v cfz.Expression[AWS_MediaPackage_PackagingConfiguration_StreamSelection]) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.StreamSelection = v
	return t
}

// SetV__StreamSelection updates property "StreamSelection".
func (t AWS_MediaPackage_PackagingConfiguration_HlsManifest) SetV__StreamSelection(v AWS_MediaPackage_PackagingConfiguration_StreamSelection) AWS_MediaPackage_PackagingConfiguration_HlsManifest {
	t.StreamSelection = cfz.V(v)
	return t
}
