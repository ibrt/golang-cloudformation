// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediapackage

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaPackage_PackagingConfiguration_DashPackage__Type is the CloudFormation type for AWS::MediaPackage::PackagingConfiguration.DashPackage.
	AWS_MediaPackage_PackagingConfiguration_DashPackage__Type = "AWS::MediaPackage::PackagingConfiguration.DashPackage"
)

var (
	// AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesMap reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.DashPackage.
	AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesMap = struct {
		DashManifests                         string
		Encryption                            string
		IncludeEncoderConfigurationInSegments string
		IncludeIframeOnlyStream               string
		PeriodTriggers                        string
		SegmentDurationSeconds                string
		SegmentTemplateFormat                 string
	}{
		DashManifests:                         "DashManifests",
		Encryption:                            "Encryption",
		IncludeEncoderConfigurationInSegments: "IncludeEncoderConfigurationInSegments",
		IncludeIframeOnlyStream:               "IncludeIframeOnlyStream",
		PeriodTriggers:                        "PeriodTriggers",
		SegmentDurationSeconds:                "SegmentDurationSeconds",
		SegmentTemplateFormat:                 "SegmentTemplateFormat",
	}

	// AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesSlice reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.DashPackage.
	AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesSlice = []string{
		AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesMap.DashManifests,
		AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesMap.Encryption,
		AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesMap.IncludeEncoderConfigurationInSegments,
		AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesMap.IncludeIframeOnlyStream,
		AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesMap.PeriodTriggers,
		AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesMap.SegmentDurationSeconds,
		AWS_MediaPackage_PackagingConfiguration_DashPackage__PropertiesMap.SegmentTemplateFormat,
	}
)

// AWS_MediaPackage_PackagingConfiguration_DashPackage is a binding for AWS::MediaPackage::PackagingConfiguration.DashPackage.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashpackage.html
type AWS_MediaPackage_PackagingConfiguration_DashPackage struct {
	// DashManifests is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashpackage.html#cfn-mediapackage-packagingconfiguration-dashpackage-dashmanifests
	DashManifests cfz.ExpressionSlice[AWS_MediaPackage_PackagingConfiguration_DashManifest] `json:"DashManifests,omitempty"`

	// Encryption is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashpackage.html#cfn-mediapackage-packagingconfiguration-dashpackage-encryption
	Encryption cfz.Expression[AWS_MediaPackage_PackagingConfiguration_DashEncryption] `json:"Encryption,omitempty"`

	// IncludeEncoderConfigurationInSegments is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashpackage.html#cfn-mediapackage-packagingconfiguration-dashpackage-includeencoderconfigurationinsegments
	IncludeEncoderConfigurationInSegments cfz.Expression[bool] `json:"IncludeEncoderConfigurationInSegments,omitempty"`

	// IncludeIframeOnlyStream is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashpackage.html#cfn-mediapackage-packagingconfiguration-dashpackage-includeiframeonlystream
	IncludeIframeOnlyStream cfz.Expression[bool] `json:"IncludeIframeOnlyStream,omitempty"`

	// PeriodTriggers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashpackage.html#cfn-mediapackage-packagingconfiguration-dashpackage-periodtriggers
	PeriodTriggers cfz.ExpressionSlice[string] `json:"PeriodTriggers,omitempty"`

	// SegmentDurationSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashpackage.html#cfn-mediapackage-packagingconfiguration-dashpackage-segmentdurationseconds
	SegmentDurationSeconds cfz.Expression[int32] `json:"SegmentDurationSeconds,omitempty"`

	// SegmentTemplateFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-dashpackage.html#cfn-mediapackage-packagingconfiguration-dashpackage-segmenttemplateformat
	SegmentTemplateFormat cfz.Expression[string] `json:"SegmentTemplateFormat,omitempty"`
}

// New__AWS_MediaPackage_PackagingConfiguration_DashPackage initializes a new AWS_MediaPackage_PackagingConfiguration_DashPackage.
func New__AWS_MediaPackage_PackagingConfiguration_DashPackage() AWS_MediaPackage_PackagingConfiguration_DashPackage {
	return AWS_MediaPackage_PackagingConfiguration_DashPackage{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaPackage_PackagingConfiguration_DashPackage) GetType() string {
	return AWS_MediaPackage_PackagingConfiguration_DashPackage__Type
}

// Set__DashManifests updates property "DashManifests".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) Set__DashManifests(v cfz.ExpressionSlice[AWS_MediaPackage_PackagingConfiguration_DashManifest]) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.DashManifests = v
	return t
}

// SetS__DashManifests updates property "DashManifests".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) SetS__DashManifests(v ...cfz.Expression[AWS_MediaPackage_PackagingConfiguration_DashManifest]) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.DashManifests = cfz.S(v...)
	return t
}

// SetSV__DashManifests updates property "DashManifests".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) SetSV__DashManifests(v ...AWS_MediaPackage_PackagingConfiguration_DashManifest) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.DashManifests = cfz.SV(v...)
	return t
}

// Set__Encryption updates property "Encryption".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) Set__Encryption(v cfz.Expression[AWS_MediaPackage_PackagingConfiguration_DashEncryption]) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.Encryption = v
	return t
}

// SetV__Encryption updates property "Encryption".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) SetV__Encryption(v AWS_MediaPackage_PackagingConfiguration_DashEncryption) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.Encryption = cfz.V(v)
	return t
}

// Set__IncludeEncoderConfigurationInSegments updates property "IncludeEncoderConfigurationInSegments".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) Set__IncludeEncoderConfigurationInSegments(v cfz.Expression[bool]) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.IncludeEncoderConfigurationInSegments = v
	return t
}

// SetV__IncludeEncoderConfigurationInSegments updates property "IncludeEncoderConfigurationInSegments".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) SetV__IncludeEncoderConfigurationInSegments(v bool) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.IncludeEncoderConfigurationInSegments = cfz.V(v)
	return t
}

// Set__IncludeIframeOnlyStream updates property "IncludeIframeOnlyStream".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) Set__IncludeIframeOnlyStream(v cfz.Expression[bool]) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.IncludeIframeOnlyStream = v
	return t
}

// SetV__IncludeIframeOnlyStream updates property "IncludeIframeOnlyStream".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) SetV__IncludeIframeOnlyStream(v bool) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.IncludeIframeOnlyStream = cfz.V(v)
	return t
}

// Set__PeriodTriggers updates property "PeriodTriggers".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) Set__PeriodTriggers(v cfz.ExpressionSlice[string]) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.PeriodTriggers = v
	return t
}

// SetS__PeriodTriggers updates property "PeriodTriggers".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) SetS__PeriodTriggers(v ...cfz.Expression[string]) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.PeriodTriggers = cfz.S(v...)
	return t
}

// SetSV__PeriodTriggers updates property "PeriodTriggers".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) SetSV__PeriodTriggers(v ...string) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.PeriodTriggers = cfz.SV(v...)
	return t
}

// Set__SegmentDurationSeconds updates property "SegmentDurationSeconds".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) Set__SegmentDurationSeconds(v cfz.Expression[int32]) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.SegmentDurationSeconds = v
	return t
}

// SetV__SegmentDurationSeconds updates property "SegmentDurationSeconds".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) SetV__SegmentDurationSeconds(v int32) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.SegmentDurationSeconds = cfz.V(v)
	return t
}

// Set__SegmentTemplateFormat updates property "SegmentTemplateFormat".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) Set__SegmentTemplateFormat(v cfz.Expression[string]) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.SegmentTemplateFormat = v
	return t
}

// SetV__SegmentTemplateFormat updates property "SegmentTemplateFormat".
func (t AWS_MediaPackage_PackagingConfiguration_DashPackage) SetV__SegmentTemplateFormat(v string) AWS_MediaPackage_PackagingConfiguration_DashPackage {
	t.SegmentTemplateFormat = cfz.V(v)
	return t
}
