// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediapackage

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaPackage_PackagingConfiguration_MssManifest__Type is the CloudFormation type for AWS::MediaPackage::PackagingConfiguration.MssManifest.
	AWS_MediaPackage_PackagingConfiguration_MssManifest__Type = "AWS::MediaPackage::PackagingConfiguration.MssManifest"
)

var (
	// AWS_MediaPackage_PackagingConfiguration_MssManifest__PropertiesMap reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.MssManifest.
	AWS_MediaPackage_PackagingConfiguration_MssManifest__PropertiesMap = struct {
		ManifestName    string
		StreamSelection string
	}{
		ManifestName:    "ManifestName",
		StreamSelection: "StreamSelection",
	}

	// AWS_MediaPackage_PackagingConfiguration_MssManifest__PropertiesSlice reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.MssManifest.
	AWS_MediaPackage_PackagingConfiguration_MssManifest__PropertiesSlice = []string{
		AWS_MediaPackage_PackagingConfiguration_MssManifest__PropertiesMap.ManifestName,
		AWS_MediaPackage_PackagingConfiguration_MssManifest__PropertiesMap.StreamSelection,
	}
)

// AWS_MediaPackage_PackagingConfiguration_MssManifest is a binding for AWS::MediaPackage::PackagingConfiguration.MssManifest.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-mssmanifest.html
type AWS_MediaPackage_PackagingConfiguration_MssManifest struct {
	// ManifestName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-mssmanifest.html#cfn-mediapackage-packagingconfiguration-mssmanifest-manifestname
	ManifestName cfz.Expression[string] `json:"ManifestName,omitempty"`

	// StreamSelection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-packagingconfiguration-mssmanifest.html#cfn-mediapackage-packagingconfiguration-mssmanifest-streamselection
	StreamSelection cfz.Expression[AWS_MediaPackage_PackagingConfiguration_StreamSelection] `json:"StreamSelection,omitempty"`
}

// New__AWS_MediaPackage_PackagingConfiguration_MssManifest initializes a new AWS_MediaPackage_PackagingConfiguration_MssManifest.
func New__AWS_MediaPackage_PackagingConfiguration_MssManifest() AWS_MediaPackage_PackagingConfiguration_MssManifest {
	return AWS_MediaPackage_PackagingConfiguration_MssManifest{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaPackage_PackagingConfiguration_MssManifest) GetType() string {
	return AWS_MediaPackage_PackagingConfiguration_MssManifest__Type
}

// Set__ManifestName updates property "ManifestName".
func (t AWS_MediaPackage_PackagingConfiguration_MssManifest) Set__ManifestName(v cfz.Expression[string]) AWS_MediaPackage_PackagingConfiguration_MssManifest {
	t.ManifestName = v
	return t
}

// SetV__ManifestName updates property "ManifestName".
func (t AWS_MediaPackage_PackagingConfiguration_MssManifest) SetV__ManifestName(v string) AWS_MediaPackage_PackagingConfiguration_MssManifest {
	t.ManifestName = cfz.V(v)
	return t
}

// Set__StreamSelection updates property "StreamSelection".
func (t AWS_MediaPackage_PackagingConfiguration_MssManifest) Set__StreamSelection(v cfz.Expression[AWS_MediaPackage_PackagingConfiguration_StreamSelection]) AWS_MediaPackage_PackagingConfiguration_MssManifest {
	t.StreamSelection = v
	return t
}

// SetV__StreamSelection updates property "StreamSelection".
func (t AWS_MediaPackage_PackagingConfiguration_MssManifest) SetV__StreamSelection(v AWS_MediaPackage_PackagingConfiguration_StreamSelection) AWS_MediaPackage_PackagingConfiguration_MssManifest {
	t.StreamSelection = cfz.V(v)
	return t
}
