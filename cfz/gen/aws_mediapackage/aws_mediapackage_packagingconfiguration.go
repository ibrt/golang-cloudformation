// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediapackage

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_MediaPackage_PackagingConfiguration)(nil)
	_ cfz.Resource                   = (*AWS_MediaPackage_PackagingConfiguration)(nil)
)

const (
	// AWS_MediaPackage_PackagingConfiguration__Type is the CloudFormation type for AWS::MediaPackage::PackagingConfiguration.
	AWS_MediaPackage_PackagingConfiguration__Type = "AWS::MediaPackage::PackagingConfiguration"
)

var (
	// AWS_MediaPackage_PackagingConfiguration__AttributesMap reports all the CloudFormation attributes for AWS::MediaPackage::PackagingConfiguration.
	AWS_MediaPackage_PackagingConfiguration__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_MediaPackage_PackagingConfiguration__AttributesSlice reports all the CloudFormation attributes for AWS::MediaPackage::PackagingConfiguration.
	AWS_MediaPackage_PackagingConfiguration__AttributesSlice = []string{
		AWS_MediaPackage_PackagingConfiguration__AttributesMap.Arn,
	}
)

var (
	// AWS_MediaPackage_PackagingConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.
	AWS_MediaPackage_PackagingConfiguration__PropertiesMap = struct {
		CmafPackage      string
		DashPackage      string
		HlsPackage       string
		Id               string
		MssPackage       string
		PackagingGroupId string
		Tags             string
	}{
		CmafPackage:      "CmafPackage",
		DashPackage:      "DashPackage",
		HlsPackage:       "HlsPackage",
		Id:               "Id",
		MssPackage:       "MssPackage",
		PackagingGroupId: "PackagingGroupId",
		Tags:             "Tags",
	}

	// AWS_MediaPackage_PackagingConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::MediaPackage::PackagingConfiguration.
	AWS_MediaPackage_PackagingConfiguration__PropertiesSlice = []string{
		AWS_MediaPackage_PackagingConfiguration__PropertiesMap.CmafPackage,
		AWS_MediaPackage_PackagingConfiguration__PropertiesMap.DashPackage,
		AWS_MediaPackage_PackagingConfiguration__PropertiesMap.HlsPackage,
		AWS_MediaPackage_PackagingConfiguration__PropertiesMap.Id,
		AWS_MediaPackage_PackagingConfiguration__PropertiesMap.MssPackage,
		AWS_MediaPackage_PackagingConfiguration__PropertiesMap.PackagingGroupId,
		AWS_MediaPackage_PackagingConfiguration__PropertiesMap.Tags,
	}
)

// AWS_MediaPackage_PackagingConfiguration is a binding for AWS::MediaPackage::PackagingConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html
type AWS_MediaPackage_PackagingConfiguration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CmafPackage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-cmafpackage
	CmafPackage cfz.Expression[AWS_MediaPackage_PackagingConfiguration_CmafPackage] `json:"CmafPackage,omitempty"`

	// DashPackage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-dashpackage
	DashPackage cfz.Expression[AWS_MediaPackage_PackagingConfiguration_DashPackage] `json:"DashPackage,omitempty"`

	// HlsPackage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-hlspackage
	HlsPackage cfz.Expression[AWS_MediaPackage_PackagingConfiguration_HlsPackage] `json:"HlsPackage,omitempty"`

	// Id is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-id
	Id cfz.Expression[string] `json:"Id,omitempty"`

	// MssPackage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-msspackage
	MssPackage cfz.Expression[AWS_MediaPackage_PackagingConfiguration_MssPackage] `json:"MssPackage,omitempty"`

	// PackagingGroupId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-packaginggroupid
	PackagingGroupId cfz.Expression[string] `json:"PackagingGroupId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediapackage-packagingconfiguration.html#cfn-mediapackage-packagingconfiguration-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_MediaPackage_PackagingConfiguration initializes a new *AWS_MediaPackage_PackagingConfiguration.
func New__AWS_MediaPackage_PackagingConfiguration(logicalName string) *AWS_MediaPackage_PackagingConfiguration {
	return &AWS_MediaPackage_PackagingConfiguration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_MediaPackage_PackagingConfiguration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_MediaPackage_PackagingConfiguration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_MediaPackage_PackagingConfiguration) GetType() string {
	return AWS_MediaPackage_PackagingConfiguration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__LogicalName(v string) *AWS_MediaPackage_PackagingConfiguration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_MediaPackage_PackagingConfiguration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_MediaPackage_PackagingConfiguration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_MediaPackage_PackagingConfiguration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_MediaPackage_PackagingConfiguration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_MediaPackage_PackagingConfiguration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__RequestedOutputs(v []cfz.Output) *AWS_MediaPackage_PackagingConfiguration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_MediaPackage_PackagingConfiguration) Add__RequestedOutputs(v ...cfz.Output) *AWS_MediaPackage_PackagingConfiguration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CmafPackage updates property "CmafPackage".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__CmafPackage(v cfz.Expression[AWS_MediaPackage_PackagingConfiguration_CmafPackage]) *AWS_MediaPackage_PackagingConfiguration {
	t.CmafPackage = v
	return t
}

// SetV__CmafPackage updates property "CmafPackage".
func (t *AWS_MediaPackage_PackagingConfiguration) SetV__CmafPackage(v AWS_MediaPackage_PackagingConfiguration_CmafPackage) *AWS_MediaPackage_PackagingConfiguration {
	t.CmafPackage = cfz.V(v)
	return t
}

// Set__DashPackage updates property "DashPackage".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__DashPackage(v cfz.Expression[AWS_MediaPackage_PackagingConfiguration_DashPackage]) *AWS_MediaPackage_PackagingConfiguration {
	t.DashPackage = v
	return t
}

// SetV__DashPackage updates property "DashPackage".
func (t *AWS_MediaPackage_PackagingConfiguration) SetV__DashPackage(v AWS_MediaPackage_PackagingConfiguration_DashPackage) *AWS_MediaPackage_PackagingConfiguration {
	t.DashPackage = cfz.V(v)
	return t
}

// Set__HlsPackage updates property "HlsPackage".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__HlsPackage(v cfz.Expression[AWS_MediaPackage_PackagingConfiguration_HlsPackage]) *AWS_MediaPackage_PackagingConfiguration {
	t.HlsPackage = v
	return t
}

// SetV__HlsPackage updates property "HlsPackage".
func (t *AWS_MediaPackage_PackagingConfiguration) SetV__HlsPackage(v AWS_MediaPackage_PackagingConfiguration_HlsPackage) *AWS_MediaPackage_PackagingConfiguration {
	t.HlsPackage = cfz.V(v)
	return t
}

// Set__Id updates property "Id".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__Id(v cfz.Expression[string]) *AWS_MediaPackage_PackagingConfiguration {
	t.Id = v
	return t
}

// SetV__Id updates property "Id".
func (t *AWS_MediaPackage_PackagingConfiguration) SetV__Id(v string) *AWS_MediaPackage_PackagingConfiguration {
	t.Id = cfz.V(v)
	return t
}

// Set__MssPackage updates property "MssPackage".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__MssPackage(v cfz.Expression[AWS_MediaPackage_PackagingConfiguration_MssPackage]) *AWS_MediaPackage_PackagingConfiguration {
	t.MssPackage = v
	return t
}

// SetV__MssPackage updates property "MssPackage".
func (t *AWS_MediaPackage_PackagingConfiguration) SetV__MssPackage(v AWS_MediaPackage_PackagingConfiguration_MssPackage) *AWS_MediaPackage_PackagingConfiguration {
	t.MssPackage = cfz.V(v)
	return t
}

// Set__PackagingGroupId updates property "PackagingGroupId".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__PackagingGroupId(v cfz.Expression[string]) *AWS_MediaPackage_PackagingConfiguration {
	t.PackagingGroupId = v
	return t
}

// SetV__PackagingGroupId updates property "PackagingGroupId".
func (t *AWS_MediaPackage_PackagingConfiguration) SetV__PackagingGroupId(v string) *AWS_MediaPackage_PackagingConfiguration {
	t.PackagingGroupId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_MediaPackage_PackagingConfiguration) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_MediaPackage_PackagingConfiguration {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_MediaPackage_PackagingConfiguration) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_MediaPackage_PackagingConfiguration {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_MediaPackage_PackagingConfiguration) SetSV__Tags(v ...cfz.Tag) *AWS_MediaPackage_PackagingConfiguration {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_MediaPackage_PackagingConfiguration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_MediaPackage_PackagingConfiguration) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaPackage_PackagingConfiguration__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_MediaPackage_PackagingConfiguration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_MediaPackage_PackagingConfiguration) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_MediaPackage_PackagingConfiguration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_MediaPackage_PackagingConfiguration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_MediaPackage_PackagingConfiguration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
