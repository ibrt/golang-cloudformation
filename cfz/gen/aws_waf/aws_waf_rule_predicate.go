// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_waf

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_WAF_Rule_Predicate__Type is the CloudFormation type for AWS::WAF::Rule.Predicate.
	AWS_WAF_Rule_Predicate__Type = "AWS::WAF::Rule.Predicate"
)

var (
	// AWS_WAF_Rule_Predicate__PropertiesMap reports all the CloudFormation properties for AWS::WAF::Rule.Predicate.
	AWS_WAF_Rule_Predicate__PropertiesMap = struct {
		DataId  string
		Negated string
		Type    string
	}{
		DataId:  "DataId",
		Negated: "Negated",
		Type:    "Type",
	}

	// AWS_WAF_Rule_Predicate__PropertiesSlice reports all the CloudFormation properties for AWS::WAF::Rule.Predicate.
	AWS_WAF_Rule_Predicate__PropertiesSlice = []string{
		AWS_WAF_Rule_Predicate__PropertiesMap.DataId,
		AWS_WAF_Rule_Predicate__PropertiesMap.Negated,
		AWS_WAF_Rule_Predicate__PropertiesMap.Type,
	}
)

// AWS_WAF_Rule_Predicate is a binding for AWS::WAF::Rule.Predicate.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-rule-predicates.html
type AWS_WAF_Rule_Predicate struct {
	// DataId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-rule-predicates.html#cfn-waf-rule-predicates-dataid
	DataId cfz.Expression[string] `json:"DataId,omitempty"`

	// Negated is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-rule-predicates.html#cfn-waf-rule-predicates-negated
	Negated cfz.Expression[bool] `json:"Negated,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waf-rule-predicates.html#cfn-waf-rule-predicates-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_WAF_Rule_Predicate initializes a new AWS_WAF_Rule_Predicate.
func New__AWS_WAF_Rule_Predicate() AWS_WAF_Rule_Predicate {
	return AWS_WAF_Rule_Predicate{}
}

// GetType returns the CloudFormation type.
func (AWS_WAF_Rule_Predicate) GetType() string {
	return AWS_WAF_Rule_Predicate__Type
}

// Set__DataId updates property "DataId".
func (t AWS_WAF_Rule_Predicate) Set__DataId(v cfz.Expression[string]) AWS_WAF_Rule_Predicate {
	t.DataId = v
	return t
}

// SetV__DataId updates property "DataId".
func (t AWS_WAF_Rule_Predicate) SetV__DataId(v string) AWS_WAF_Rule_Predicate {
	t.DataId = cfz.V(v)
	return t
}

// Set__Negated updates property "Negated".
func (t AWS_WAF_Rule_Predicate) Set__Negated(v cfz.Expression[bool]) AWS_WAF_Rule_Predicate {
	t.Negated = v
	return t
}

// SetV__Negated updates property "Negated".
func (t AWS_WAF_Rule_Predicate) SetV__Negated(v bool) AWS_WAF_Rule_Predicate {
	t.Negated = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t AWS_WAF_Rule_Predicate) Set__Type(v cfz.Expression[string]) AWS_WAF_Rule_Predicate {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t AWS_WAF_Rule_Predicate) SetV__Type(v string) AWS_WAF_Rule_Predicate {
	t.Type = cfz.V(v)
	return t
}
