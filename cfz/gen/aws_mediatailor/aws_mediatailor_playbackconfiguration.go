// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediatailor

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_MediaTailor_PlaybackConfiguration)(nil)
	_ cfz.Resource                   = (*AWS_MediaTailor_PlaybackConfiguration)(nil)
)

const (
	// AWS_MediaTailor_PlaybackConfiguration__Type is the CloudFormation type for AWS::MediaTailor::PlaybackConfiguration.
	AWS_MediaTailor_PlaybackConfiguration__Type = "AWS::MediaTailor::PlaybackConfiguration"
)

var (
	// AWS_MediaTailor_PlaybackConfiguration__AttributesMap reports all the CloudFormation attributes for AWS::MediaTailor::PlaybackConfiguration.
	AWS_MediaTailor_PlaybackConfiguration__AttributesMap = struct {
		DashConfiguration_ManifestEndpointPrefix string
		HlsConfiguration_ManifestEndpointPrefix  string
		PlaybackConfigurationArn                 string
		PlaybackEndpointPrefix                   string
		SessionInitializationEndpointPrefix      string
	}{
		DashConfiguration_ManifestEndpointPrefix: "DashConfiguration.ManifestEndpointPrefix",
		HlsConfiguration_ManifestEndpointPrefix:  "HlsConfiguration.ManifestEndpointPrefix",
		PlaybackConfigurationArn:                 "PlaybackConfigurationArn",
		PlaybackEndpointPrefix:                   "PlaybackEndpointPrefix",
		SessionInitializationEndpointPrefix:      "SessionInitializationEndpointPrefix",
	}

	// AWS_MediaTailor_PlaybackConfiguration__AttributesSlice reports all the CloudFormation attributes for AWS::MediaTailor::PlaybackConfiguration.
	AWS_MediaTailor_PlaybackConfiguration__AttributesSlice = []string{
		AWS_MediaTailor_PlaybackConfiguration__AttributesMap.DashConfiguration_ManifestEndpointPrefix,
		AWS_MediaTailor_PlaybackConfiguration__AttributesMap.HlsConfiguration_ManifestEndpointPrefix,
		AWS_MediaTailor_PlaybackConfiguration__AttributesMap.PlaybackConfigurationArn,
		AWS_MediaTailor_PlaybackConfiguration__AttributesMap.PlaybackEndpointPrefix,
		AWS_MediaTailor_PlaybackConfiguration__AttributesMap.SessionInitializationEndpointPrefix,
	}
)

var (
	// AWS_MediaTailor_PlaybackConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::MediaTailor::PlaybackConfiguration.
	AWS_MediaTailor_PlaybackConfiguration__PropertiesMap = struct {
		AdDecisionServerUrl             string
		AvailSuppression                string
		Bumper                          string
		CdnConfiguration                string
		ConfigurationAliases            string
		DashConfiguration               string
		HlsConfiguration                string
		LivePreRollConfiguration        string
		ManifestProcessingRules         string
		Name                            string
		PersonalizationThresholdSeconds string
		SlateAdUrl                      string
		Tags                            string
		TranscodeProfileName            string
		VideoContentSourceUrl           string
	}{
		AdDecisionServerUrl:             "AdDecisionServerUrl",
		AvailSuppression:                "AvailSuppression",
		Bumper:                          "Bumper",
		CdnConfiguration:                "CdnConfiguration",
		ConfigurationAliases:            "ConfigurationAliases",
		DashConfiguration:               "DashConfiguration",
		HlsConfiguration:                "HlsConfiguration",
		LivePreRollConfiguration:        "LivePreRollConfiguration",
		ManifestProcessingRules:         "ManifestProcessingRules",
		Name:                            "Name",
		PersonalizationThresholdSeconds: "PersonalizationThresholdSeconds",
		SlateAdUrl:                      "SlateAdUrl",
		Tags:                            "Tags",
		TranscodeProfileName:            "TranscodeProfileName",
		VideoContentSourceUrl:           "VideoContentSourceUrl",
	}

	// AWS_MediaTailor_PlaybackConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::MediaTailor::PlaybackConfiguration.
	AWS_MediaTailor_PlaybackConfiguration__PropertiesSlice = []string{
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.AdDecisionServerUrl,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.AvailSuppression,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.Bumper,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.CdnConfiguration,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.ConfigurationAliases,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.DashConfiguration,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.HlsConfiguration,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.LivePreRollConfiguration,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.ManifestProcessingRules,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.Name,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.PersonalizationThresholdSeconds,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.SlateAdUrl,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.Tags,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.TranscodeProfileName,
		AWS_MediaTailor_PlaybackConfiguration__PropertiesMap.VideoContentSourceUrl,
	}
)

// AWS_MediaTailor_PlaybackConfiguration is a binding for AWS::MediaTailor::PlaybackConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html
type AWS_MediaTailor_PlaybackConfiguration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AdDecisionServerUrl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-addecisionserverurl
	AdDecisionServerUrl cfz.Expression[string] `json:"AdDecisionServerUrl,omitempty"`

	// AvailSuppression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-availsuppression
	AvailSuppression cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_AvailSuppression] `json:"AvailSuppression,omitempty"`

	// Bumper is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-bumper
	Bumper cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_Bumper] `json:"Bumper,omitempty"`

	// CdnConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-cdnconfiguration
	CdnConfiguration cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_CdnConfiguration] `json:"CdnConfiguration,omitempty"`

	// ConfigurationAliases is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-configurationaliases
	ConfigurationAliases cfz.ExpressionMap[json.RawMessage] `json:"ConfigurationAliases,omitempty"`

	// DashConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-dashconfiguration
	DashConfiguration cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_DashConfiguration] `json:"DashConfiguration,omitempty"`

	// HlsConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-hlsconfiguration
	HlsConfiguration cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_HlsConfiguration] `json:"HlsConfiguration,omitempty"`

	// LivePreRollConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-liveprerollconfiguration
	LivePreRollConfiguration cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_LivePreRollConfiguration] `json:"LivePreRollConfiguration,omitempty"`

	// ManifestProcessingRules is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-manifestprocessingrules
	ManifestProcessingRules cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_ManifestProcessingRules] `json:"ManifestProcessingRules,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// PersonalizationThresholdSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-personalizationthresholdseconds
	PersonalizationThresholdSeconds cfz.Expression[int32] `json:"PersonalizationThresholdSeconds,omitempty"`

	// SlateAdUrl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-slateadurl
	SlateAdUrl cfz.Expression[string] `json:"SlateAdUrl,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TranscodeProfileName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-transcodeprofilename
	TranscodeProfileName cfz.Expression[string] `json:"TranscodeProfileName,omitempty"`

	// VideoContentSourceUrl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediatailor-playbackconfiguration.html#cfn-mediatailor-playbackconfiguration-videocontentsourceurl
	VideoContentSourceUrl cfz.Expression[string] `json:"VideoContentSourceUrl,omitempty"`
}

// New__AWS_MediaTailor_PlaybackConfiguration initializes a new *AWS_MediaTailor_PlaybackConfiguration.
func New__AWS_MediaTailor_PlaybackConfiguration(logicalName string) *AWS_MediaTailor_PlaybackConfiguration {
	return &AWS_MediaTailor_PlaybackConfiguration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_MediaTailor_PlaybackConfiguration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_MediaTailor_PlaybackConfiguration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_MediaTailor_PlaybackConfiguration) GetType() string {
	return AWS_MediaTailor_PlaybackConfiguration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__LogicalName(v string) *AWS_MediaTailor_PlaybackConfiguration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_MediaTailor_PlaybackConfiguration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_MediaTailor_PlaybackConfiguration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_MediaTailor_PlaybackConfiguration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_MediaTailor_PlaybackConfiguration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_MediaTailor_PlaybackConfiguration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__RequestedOutputs(v []cfz.Output) *AWS_MediaTailor_PlaybackConfiguration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_MediaTailor_PlaybackConfiguration) Add__RequestedOutputs(v ...cfz.Output) *AWS_MediaTailor_PlaybackConfiguration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AdDecisionServerUrl updates property "AdDecisionServerUrl".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__AdDecisionServerUrl(v cfz.Expression[string]) *AWS_MediaTailor_PlaybackConfiguration {
	t.AdDecisionServerUrl = v
	return t
}

// SetV__AdDecisionServerUrl updates property "AdDecisionServerUrl".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__AdDecisionServerUrl(v string) *AWS_MediaTailor_PlaybackConfiguration {
	t.AdDecisionServerUrl = cfz.V(v)
	return t
}

// Set__AvailSuppression updates property "AvailSuppression".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__AvailSuppression(v cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_AvailSuppression]) *AWS_MediaTailor_PlaybackConfiguration {
	t.AvailSuppression = v
	return t
}

// SetV__AvailSuppression updates property "AvailSuppression".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__AvailSuppression(v AWS_MediaTailor_PlaybackConfiguration_AvailSuppression) *AWS_MediaTailor_PlaybackConfiguration {
	t.AvailSuppression = cfz.V(v)
	return t
}

// Set__Bumper updates property "Bumper".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__Bumper(v cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_Bumper]) *AWS_MediaTailor_PlaybackConfiguration {
	t.Bumper = v
	return t
}

// SetV__Bumper updates property "Bumper".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__Bumper(v AWS_MediaTailor_PlaybackConfiguration_Bumper) *AWS_MediaTailor_PlaybackConfiguration {
	t.Bumper = cfz.V(v)
	return t
}

// Set__CdnConfiguration updates property "CdnConfiguration".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__CdnConfiguration(v cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_CdnConfiguration]) *AWS_MediaTailor_PlaybackConfiguration {
	t.CdnConfiguration = v
	return t
}

// SetV__CdnConfiguration updates property "CdnConfiguration".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__CdnConfiguration(v AWS_MediaTailor_PlaybackConfiguration_CdnConfiguration) *AWS_MediaTailor_PlaybackConfiguration {
	t.CdnConfiguration = cfz.V(v)
	return t
}

// Set__ConfigurationAliases updates property "ConfigurationAliases".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__ConfigurationAliases(v cfz.ExpressionMap[json.RawMessage]) *AWS_MediaTailor_PlaybackConfiguration {
	t.ConfigurationAliases = v
	return t
}

// SetM__ConfigurationAliases updates property "ConfigurationAliases".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetM__ConfigurationAliases(v ...map[string]cfz.Expression[json.RawMessage]) *AWS_MediaTailor_PlaybackConfiguration {
	t.ConfigurationAliases = cfz.M(v...)
	return t
}

// SetMV__ConfigurationAliases updates property "ConfigurationAliases".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetMV__ConfigurationAliases(v ...map[string]json.RawMessage) *AWS_MediaTailor_PlaybackConfiguration {
	t.ConfigurationAliases = cfz.MV(v...)
	return t
}

// Set__DashConfiguration updates property "DashConfiguration".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__DashConfiguration(v cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_DashConfiguration]) *AWS_MediaTailor_PlaybackConfiguration {
	t.DashConfiguration = v
	return t
}

// SetV__DashConfiguration updates property "DashConfiguration".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__DashConfiguration(v AWS_MediaTailor_PlaybackConfiguration_DashConfiguration) *AWS_MediaTailor_PlaybackConfiguration {
	t.DashConfiguration = cfz.V(v)
	return t
}

// Set__HlsConfiguration updates property "HlsConfiguration".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__HlsConfiguration(v cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_HlsConfiguration]) *AWS_MediaTailor_PlaybackConfiguration {
	t.HlsConfiguration = v
	return t
}

// SetV__HlsConfiguration updates property "HlsConfiguration".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__HlsConfiguration(v AWS_MediaTailor_PlaybackConfiguration_HlsConfiguration) *AWS_MediaTailor_PlaybackConfiguration {
	t.HlsConfiguration = cfz.V(v)
	return t
}

// Set__LivePreRollConfiguration updates property "LivePreRollConfiguration".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__LivePreRollConfiguration(v cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_LivePreRollConfiguration]) *AWS_MediaTailor_PlaybackConfiguration {
	t.LivePreRollConfiguration = v
	return t
}

// SetV__LivePreRollConfiguration updates property "LivePreRollConfiguration".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__LivePreRollConfiguration(v AWS_MediaTailor_PlaybackConfiguration_LivePreRollConfiguration) *AWS_MediaTailor_PlaybackConfiguration {
	t.LivePreRollConfiguration = cfz.V(v)
	return t
}

// Set__ManifestProcessingRules updates property "ManifestProcessingRules".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__ManifestProcessingRules(v cfz.Expression[AWS_MediaTailor_PlaybackConfiguration_ManifestProcessingRules]) *AWS_MediaTailor_PlaybackConfiguration {
	t.ManifestProcessingRules = v
	return t
}

// SetV__ManifestProcessingRules updates property "ManifestProcessingRules".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__ManifestProcessingRules(v AWS_MediaTailor_PlaybackConfiguration_ManifestProcessingRules) *AWS_MediaTailor_PlaybackConfiguration {
	t.ManifestProcessingRules = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__Name(v cfz.Expression[string]) *AWS_MediaTailor_PlaybackConfiguration {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__Name(v string) *AWS_MediaTailor_PlaybackConfiguration {
	t.Name = cfz.V(v)
	return t
}

// Set__PersonalizationThresholdSeconds updates property "PersonalizationThresholdSeconds".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__PersonalizationThresholdSeconds(v cfz.Expression[int32]) *AWS_MediaTailor_PlaybackConfiguration {
	t.PersonalizationThresholdSeconds = v
	return t
}

// SetV__PersonalizationThresholdSeconds updates property "PersonalizationThresholdSeconds".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__PersonalizationThresholdSeconds(v int32) *AWS_MediaTailor_PlaybackConfiguration {
	t.PersonalizationThresholdSeconds = cfz.V(v)
	return t
}

// Set__SlateAdUrl updates property "SlateAdUrl".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__SlateAdUrl(v cfz.Expression[string]) *AWS_MediaTailor_PlaybackConfiguration {
	t.SlateAdUrl = v
	return t
}

// SetV__SlateAdUrl updates property "SlateAdUrl".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__SlateAdUrl(v string) *AWS_MediaTailor_PlaybackConfiguration {
	t.SlateAdUrl = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_MediaTailor_PlaybackConfiguration {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_MediaTailor_PlaybackConfiguration {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetSV__Tags(v ...cfz.Tag) *AWS_MediaTailor_PlaybackConfiguration {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TranscodeProfileName updates property "TranscodeProfileName".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__TranscodeProfileName(v cfz.Expression[string]) *AWS_MediaTailor_PlaybackConfiguration {
	t.TranscodeProfileName = v
	return t
}

// SetV__TranscodeProfileName updates property "TranscodeProfileName".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__TranscodeProfileName(v string) *AWS_MediaTailor_PlaybackConfiguration {
	t.TranscodeProfileName = cfz.V(v)
	return t
}

// Set__VideoContentSourceUrl updates property "VideoContentSourceUrl".
func (t *AWS_MediaTailor_PlaybackConfiguration) Set__VideoContentSourceUrl(v cfz.Expression[string]) *AWS_MediaTailor_PlaybackConfiguration {
	t.VideoContentSourceUrl = v
	return t
}

// SetV__VideoContentSourceUrl updates property "VideoContentSourceUrl".
func (t *AWS_MediaTailor_PlaybackConfiguration) SetV__VideoContentSourceUrl(v string) *AWS_MediaTailor_PlaybackConfiguration {
	t.VideoContentSourceUrl = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_MediaTailor_PlaybackConfiguration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DashConfiguration_ManifestEndpointPrefix returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DashConfiguration.ManifestEndpointPrefix
func (t *AWS_MediaTailor_PlaybackConfiguration) GetAtt__DashConfiguration_ManifestEndpointPrefix() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaTailor_PlaybackConfiguration__AttributesMap.DashConfiguration_ManifestEndpointPrefix))
}

// GetAtt__HlsConfiguration_ManifestEndpointPrefix returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: HlsConfiguration.ManifestEndpointPrefix
func (t *AWS_MediaTailor_PlaybackConfiguration) GetAtt__HlsConfiguration_ManifestEndpointPrefix() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaTailor_PlaybackConfiguration__AttributesMap.HlsConfiguration_ManifestEndpointPrefix))
}

// GetAtt__PlaybackConfigurationArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PlaybackConfigurationArn
func (t *AWS_MediaTailor_PlaybackConfiguration) GetAtt__PlaybackConfigurationArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaTailor_PlaybackConfiguration__AttributesMap.PlaybackConfigurationArn))
}

// GetAtt__PlaybackEndpointPrefix returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PlaybackEndpointPrefix
func (t *AWS_MediaTailor_PlaybackConfiguration) GetAtt__PlaybackEndpointPrefix() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaTailor_PlaybackConfiguration__AttributesMap.PlaybackEndpointPrefix))
}

// GetAtt__SessionInitializationEndpointPrefix returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SessionInitializationEndpointPrefix
func (t *AWS_MediaTailor_PlaybackConfiguration) GetAtt__SessionInitializationEndpointPrefix() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaTailor_PlaybackConfiguration__AttributesMap.SessionInitializationEndpointPrefix))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_MediaTailor_PlaybackConfiguration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DashConfiguration_ManifestEndpointPrefix returns a conventionally configured output for an attribute of this resource.
// Attribute: DashConfiguration.ManifestEndpointPrefix
func (t *AWS_MediaTailor_PlaybackConfiguration) GetConventionalOutputAtt__DashConfiguration_ManifestEndpointPrefix(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDashConfigurationManifestEndpointPrefix", t.GetAtt__DashConfiguration_ManifestEndpointPrefix())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__HlsConfiguration_ManifestEndpointPrefix returns a conventionally configured output for an attribute of this resource.
// Attribute: HlsConfiguration.ManifestEndpointPrefix
func (t *AWS_MediaTailor_PlaybackConfiguration) GetConventionalOutputAtt__HlsConfiguration_ManifestEndpointPrefix(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttHlsConfigurationManifestEndpointPrefix", t.GetAtt__HlsConfiguration_ManifestEndpointPrefix())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PlaybackConfigurationArn returns a conventionally configured output for an attribute of this resource.
// Attribute: PlaybackConfigurationArn
func (t *AWS_MediaTailor_PlaybackConfiguration) GetConventionalOutputAtt__PlaybackConfigurationArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPlaybackConfigurationArn", t.GetAtt__PlaybackConfigurationArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PlaybackEndpointPrefix returns a conventionally configured output for an attribute of this resource.
// Attribute: PlaybackEndpointPrefix
func (t *AWS_MediaTailor_PlaybackConfiguration) GetConventionalOutputAtt__PlaybackEndpointPrefix(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPlaybackEndpointPrefix", t.GetAtt__PlaybackEndpointPrefix())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SessionInitializationEndpointPrefix returns a conventionally configured output for an attribute of this resource.
// Attribute: SessionInitializationEndpointPrefix
func (t *AWS_MediaTailor_PlaybackConfiguration) GetConventionalOutputAtt__SessionInitializationEndpointPrefix(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSessionInitializationEndpointPrefix", t.GetAtt__SessionInitializationEndpointPrefix())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_MediaTailor_PlaybackConfiguration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_MediaTailor_PlaybackConfiguration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_MediaTailor_PlaybackConfiguration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
