// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_elasticache

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ElastiCache_GlobalReplicationGroup)(nil)
	_ cfz.Resource                   = (*AWS_ElastiCache_GlobalReplicationGroup)(nil)
)

const (
	// AWS_ElastiCache_GlobalReplicationGroup__Type is the CloudFormation type for AWS::ElastiCache::GlobalReplicationGroup.
	AWS_ElastiCache_GlobalReplicationGroup__Type = "AWS::ElastiCache::GlobalReplicationGroup"
)

var (
	// AWS_ElastiCache_GlobalReplicationGroup__AttributesMap reports all the CloudFormation attributes for AWS::ElastiCache::GlobalReplicationGroup.
	AWS_ElastiCache_GlobalReplicationGroup__AttributesMap = struct {
		GlobalReplicationGroupId string
		Status                   string
	}{
		GlobalReplicationGroupId: "GlobalReplicationGroupId",
		Status:                   "Status",
	}

	// AWS_ElastiCache_GlobalReplicationGroup__AttributesSlice reports all the CloudFormation attributes for AWS::ElastiCache::GlobalReplicationGroup.
	AWS_ElastiCache_GlobalReplicationGroup__AttributesSlice = []string{
		AWS_ElastiCache_GlobalReplicationGroup__AttributesMap.GlobalReplicationGroupId,
		AWS_ElastiCache_GlobalReplicationGroup__AttributesMap.Status,
	}
)

var (
	// AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap reports all the CloudFormation properties for AWS::ElastiCache::GlobalReplicationGroup.
	AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap = struct {
		AutomaticFailoverEnabled          string
		CacheNodeType                     string
		CacheParameterGroupName           string
		Engine                            string
		EngineVersion                     string
		GlobalNodeGroupCount              string
		GlobalReplicationGroupDescription string
		GlobalReplicationGroupIdSuffix    string
		Members                           string
		RegionalConfigurations            string
	}{
		AutomaticFailoverEnabled:          "AutomaticFailoverEnabled",
		CacheNodeType:                     "CacheNodeType",
		CacheParameterGroupName:           "CacheParameterGroupName",
		Engine:                            "Engine",
		EngineVersion:                     "EngineVersion",
		GlobalNodeGroupCount:              "GlobalNodeGroupCount",
		GlobalReplicationGroupDescription: "GlobalReplicationGroupDescription",
		GlobalReplicationGroupIdSuffix:    "GlobalReplicationGroupIdSuffix",
		Members:                           "Members",
		RegionalConfigurations:            "RegionalConfigurations",
	}

	// AWS_ElastiCache_GlobalReplicationGroup__PropertiesSlice reports all the CloudFormation properties for AWS::ElastiCache::GlobalReplicationGroup.
	AWS_ElastiCache_GlobalReplicationGroup__PropertiesSlice = []string{
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.AutomaticFailoverEnabled,
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.CacheNodeType,
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.CacheParameterGroupName,
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.Engine,
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.EngineVersion,
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.GlobalNodeGroupCount,
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.GlobalReplicationGroupDescription,
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.GlobalReplicationGroupIdSuffix,
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.Members,
		AWS_ElastiCache_GlobalReplicationGroup__PropertiesMap.RegionalConfigurations,
	}
)

// AWS_ElastiCache_GlobalReplicationGroup is a binding for AWS::ElastiCache::GlobalReplicationGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html
type AWS_ElastiCache_GlobalReplicationGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AutomaticFailoverEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-automaticfailoverenabled
	AutomaticFailoverEnabled cfz.Expression[bool] `json:"AutomaticFailoverEnabled,omitempty"`

	// CacheNodeType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-cachenodetype
	CacheNodeType cfz.Expression[string] `json:"CacheNodeType,omitempty"`

	// CacheParameterGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-cacheparametergroupname
	CacheParameterGroupName cfz.Expression[string] `json:"CacheParameterGroupName,omitempty"`

	// Engine is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-engine
	Engine cfz.Expression[string] `json:"Engine,omitempty"`

	// EngineVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-engineversion
	EngineVersion cfz.Expression[string] `json:"EngineVersion,omitempty"`

	// GlobalNodeGroupCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-globalnodegroupcount
	GlobalNodeGroupCount cfz.Expression[int32] `json:"GlobalNodeGroupCount,omitempty"`

	// GlobalReplicationGroupDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-globalreplicationgroupdescription
	GlobalReplicationGroupDescription cfz.Expression[string] `json:"GlobalReplicationGroupDescription,omitempty"`

	// GlobalReplicationGroupIdSuffix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-globalreplicationgroupidsuffix
	GlobalReplicationGroupIdSuffix cfz.Expression[string] `json:"GlobalReplicationGroupIdSuffix,omitempty"`

	// Members is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-members
	Members cfz.ExpressionSlice[AWS_ElastiCache_GlobalReplicationGroup_GlobalReplicationGroupMember] `json:"Members,omitempty"`

	// RegionalConfigurations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-globalreplicationgroup.html#cfn-elasticache-globalreplicationgroup-regionalconfigurations
	RegionalConfigurations cfz.ExpressionSlice[AWS_ElastiCache_GlobalReplicationGroup_RegionalConfiguration] `json:"RegionalConfigurations,omitempty"`
}

// New__AWS_ElastiCache_GlobalReplicationGroup initializes a new *AWS_ElastiCache_GlobalReplicationGroup.
func New__AWS_ElastiCache_GlobalReplicationGroup(logicalName string) *AWS_ElastiCache_GlobalReplicationGroup {
	return &AWS_ElastiCache_GlobalReplicationGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ElastiCache_GlobalReplicationGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ElastiCache_GlobalReplicationGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ElastiCache_GlobalReplicationGroup) GetType() string {
	return AWS_ElastiCache_GlobalReplicationGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__LogicalName(v string) *AWS_ElastiCache_GlobalReplicationGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ElastiCache_GlobalReplicationGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ElastiCache_GlobalReplicationGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ElastiCache_GlobalReplicationGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ElastiCache_GlobalReplicationGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_ElastiCache_GlobalReplicationGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_ElastiCache_GlobalReplicationGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AutomaticFailoverEnabled updates property "AutomaticFailoverEnabled".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__AutomaticFailoverEnabled(v cfz.Expression[bool]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.AutomaticFailoverEnabled = v
	return t
}

// SetV__AutomaticFailoverEnabled updates property "AutomaticFailoverEnabled".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetV__AutomaticFailoverEnabled(v bool) *AWS_ElastiCache_GlobalReplicationGroup {
	t.AutomaticFailoverEnabled = cfz.V(v)
	return t
}

// Set__CacheNodeType updates property "CacheNodeType".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__CacheNodeType(v cfz.Expression[string]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.CacheNodeType = v
	return t
}

// SetV__CacheNodeType updates property "CacheNodeType".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetV__CacheNodeType(v string) *AWS_ElastiCache_GlobalReplicationGroup {
	t.CacheNodeType = cfz.V(v)
	return t
}

// Set__CacheParameterGroupName updates property "CacheParameterGroupName".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__CacheParameterGroupName(v cfz.Expression[string]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.CacheParameterGroupName = v
	return t
}

// SetV__CacheParameterGroupName updates property "CacheParameterGroupName".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetV__CacheParameterGroupName(v string) *AWS_ElastiCache_GlobalReplicationGroup {
	t.CacheParameterGroupName = cfz.V(v)
	return t
}

// Set__Engine updates property "Engine".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__Engine(v cfz.Expression[string]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.Engine = v
	return t
}

// SetV__Engine updates property "Engine".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetV__Engine(v string) *AWS_ElastiCache_GlobalReplicationGroup {
	t.Engine = cfz.V(v)
	return t
}

// Set__EngineVersion updates property "EngineVersion".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__EngineVersion(v cfz.Expression[string]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.EngineVersion = v
	return t
}

// SetV__EngineVersion updates property "EngineVersion".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetV__EngineVersion(v string) *AWS_ElastiCache_GlobalReplicationGroup {
	t.EngineVersion = cfz.V(v)
	return t
}

// Set__GlobalNodeGroupCount updates property "GlobalNodeGroupCount".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__GlobalNodeGroupCount(v cfz.Expression[int32]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.GlobalNodeGroupCount = v
	return t
}

// SetV__GlobalNodeGroupCount updates property "GlobalNodeGroupCount".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetV__GlobalNodeGroupCount(v int32) *AWS_ElastiCache_GlobalReplicationGroup {
	t.GlobalNodeGroupCount = cfz.V(v)
	return t
}

// Set__GlobalReplicationGroupDescription updates property "GlobalReplicationGroupDescription".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__GlobalReplicationGroupDescription(v cfz.Expression[string]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.GlobalReplicationGroupDescription = v
	return t
}

// SetV__GlobalReplicationGroupDescription updates property "GlobalReplicationGroupDescription".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetV__GlobalReplicationGroupDescription(v string) *AWS_ElastiCache_GlobalReplicationGroup {
	t.GlobalReplicationGroupDescription = cfz.V(v)
	return t
}

// Set__GlobalReplicationGroupIdSuffix updates property "GlobalReplicationGroupIdSuffix".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__GlobalReplicationGroupIdSuffix(v cfz.Expression[string]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.GlobalReplicationGroupIdSuffix = v
	return t
}

// SetV__GlobalReplicationGroupIdSuffix updates property "GlobalReplicationGroupIdSuffix".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetV__GlobalReplicationGroupIdSuffix(v string) *AWS_ElastiCache_GlobalReplicationGroup {
	t.GlobalReplicationGroupIdSuffix = cfz.V(v)
	return t
}

// Set__Members updates property "Members".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__Members(v cfz.ExpressionSlice[AWS_ElastiCache_GlobalReplicationGroup_GlobalReplicationGroupMember]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.Members = v
	return t
}

// SetS__Members updates property "Members".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetS__Members(v ...cfz.Expression[AWS_ElastiCache_GlobalReplicationGroup_GlobalReplicationGroupMember]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.Members = cfz.S(v...)
	return t
}

// SetSV__Members updates property "Members".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetSV__Members(v ...AWS_ElastiCache_GlobalReplicationGroup_GlobalReplicationGroupMember) *AWS_ElastiCache_GlobalReplicationGroup {
	t.Members = cfz.SV(v...)
	return t
}

// Set__RegionalConfigurations updates property "RegionalConfigurations".
func (t *AWS_ElastiCache_GlobalReplicationGroup) Set__RegionalConfigurations(v cfz.ExpressionSlice[AWS_ElastiCache_GlobalReplicationGroup_RegionalConfiguration]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.RegionalConfigurations = v
	return t
}

// SetS__RegionalConfigurations updates property "RegionalConfigurations".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetS__RegionalConfigurations(v ...cfz.Expression[AWS_ElastiCache_GlobalReplicationGroup_RegionalConfiguration]) *AWS_ElastiCache_GlobalReplicationGroup {
	t.RegionalConfigurations = cfz.S(v...)
	return t
}

// SetSV__RegionalConfigurations updates property "RegionalConfigurations".
func (t *AWS_ElastiCache_GlobalReplicationGroup) SetSV__RegionalConfigurations(v ...AWS_ElastiCache_GlobalReplicationGroup_RegionalConfiguration) *AWS_ElastiCache_GlobalReplicationGroup {
	t.RegionalConfigurations = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ElastiCache_GlobalReplicationGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__GlobalReplicationGroupId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: GlobalReplicationGroupId
func (t *AWS_ElastiCache_GlobalReplicationGroup) GetAtt__GlobalReplicationGroupId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElastiCache_GlobalReplicationGroup__AttributesMap.GlobalReplicationGroupId))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_ElastiCache_GlobalReplicationGroup) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElastiCache_GlobalReplicationGroup__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ElastiCache_GlobalReplicationGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__GlobalReplicationGroupId returns a conventionally configured output for an attribute of this resource.
// Attribute: GlobalReplicationGroupId
func (t *AWS_ElastiCache_GlobalReplicationGroup) GetConventionalOutputAtt__GlobalReplicationGroupId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGlobalReplicationGroupId", t.GetAtt__GlobalReplicationGroupId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_ElastiCache_GlobalReplicationGroup) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ElastiCache_GlobalReplicationGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ElastiCache_GlobalReplicationGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ElastiCache_GlobalReplicationGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
