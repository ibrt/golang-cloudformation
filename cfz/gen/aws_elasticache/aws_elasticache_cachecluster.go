// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_elasticache

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ElastiCache_CacheCluster)(nil)
	_ cfz.Resource                   = (*AWS_ElastiCache_CacheCluster)(nil)
)

const (
	// AWS_ElastiCache_CacheCluster__Type is the CloudFormation type for AWS::ElastiCache::CacheCluster.
	AWS_ElastiCache_CacheCluster__Type = "AWS::ElastiCache::CacheCluster"
)

var (
	// AWS_ElastiCache_CacheCluster__AttributesMap reports all the CloudFormation attributes for AWS::ElastiCache::CacheCluster.
	AWS_ElastiCache_CacheCluster__AttributesMap = struct {
		ConfigurationEndpoint_Address string
		ConfigurationEndpoint_Port    string
		RedisEndpoint_Address         string
		RedisEndpoint_Port            string
	}{
		ConfigurationEndpoint_Address: "ConfigurationEndpoint.Address",
		ConfigurationEndpoint_Port:    "ConfigurationEndpoint.Port",
		RedisEndpoint_Address:         "RedisEndpoint.Address",
		RedisEndpoint_Port:            "RedisEndpoint.Port",
	}

	// AWS_ElastiCache_CacheCluster__AttributesSlice reports all the CloudFormation attributes for AWS::ElastiCache::CacheCluster.
	AWS_ElastiCache_CacheCluster__AttributesSlice = []string{
		AWS_ElastiCache_CacheCluster__AttributesMap.ConfigurationEndpoint_Address,
		AWS_ElastiCache_CacheCluster__AttributesMap.ConfigurationEndpoint_Port,
		AWS_ElastiCache_CacheCluster__AttributesMap.RedisEndpoint_Address,
		AWS_ElastiCache_CacheCluster__AttributesMap.RedisEndpoint_Port,
	}
)

var (
	// AWS_ElastiCache_CacheCluster__PropertiesMap reports all the CloudFormation properties for AWS::ElastiCache::CacheCluster.
	AWS_ElastiCache_CacheCluster__PropertiesMap = struct {
		AZMode                     string
		AutoMinorVersionUpgrade    string
		CacheNodeType              string
		CacheParameterGroupName    string
		CacheSecurityGroupNames    string
		CacheSubnetGroupName       string
		ClusterName                string
		Engine                     string
		EngineVersion              string
		IpDiscovery                string
		LogDeliveryConfigurations  string
		NetworkType                string
		NotificationTopicArn       string
		NumCacheNodes              string
		Port                       string
		PreferredAvailabilityZone  string
		PreferredAvailabilityZones string
		PreferredMaintenanceWindow string
		SnapshotArns               string
		SnapshotName               string
		SnapshotRetentionLimit     string
		SnapshotWindow             string
		Tags                       string
		TransitEncryptionEnabled   string
		VpcSecurityGroupIds        string
	}{
		AZMode:                     "AZMode",
		AutoMinorVersionUpgrade:    "AutoMinorVersionUpgrade",
		CacheNodeType:              "CacheNodeType",
		CacheParameterGroupName:    "CacheParameterGroupName",
		CacheSecurityGroupNames:    "CacheSecurityGroupNames",
		CacheSubnetGroupName:       "CacheSubnetGroupName",
		ClusterName:                "ClusterName",
		Engine:                     "Engine",
		EngineVersion:              "EngineVersion",
		IpDiscovery:                "IpDiscovery",
		LogDeliveryConfigurations:  "LogDeliveryConfigurations",
		NetworkType:                "NetworkType",
		NotificationTopicArn:       "NotificationTopicArn",
		NumCacheNodes:              "NumCacheNodes",
		Port:                       "Port",
		PreferredAvailabilityZone:  "PreferredAvailabilityZone",
		PreferredAvailabilityZones: "PreferredAvailabilityZones",
		PreferredMaintenanceWindow: "PreferredMaintenanceWindow",
		SnapshotArns:               "SnapshotArns",
		SnapshotName:               "SnapshotName",
		SnapshotRetentionLimit:     "SnapshotRetentionLimit",
		SnapshotWindow:             "SnapshotWindow",
		Tags:                       "Tags",
		TransitEncryptionEnabled:   "TransitEncryptionEnabled",
		VpcSecurityGroupIds:        "VpcSecurityGroupIds",
	}

	// AWS_ElastiCache_CacheCluster__PropertiesSlice reports all the CloudFormation properties for AWS::ElastiCache::CacheCluster.
	AWS_ElastiCache_CacheCluster__PropertiesSlice = []string{
		AWS_ElastiCache_CacheCluster__PropertiesMap.AZMode,
		AWS_ElastiCache_CacheCluster__PropertiesMap.AutoMinorVersionUpgrade,
		AWS_ElastiCache_CacheCluster__PropertiesMap.CacheNodeType,
		AWS_ElastiCache_CacheCluster__PropertiesMap.CacheParameterGroupName,
		AWS_ElastiCache_CacheCluster__PropertiesMap.CacheSecurityGroupNames,
		AWS_ElastiCache_CacheCluster__PropertiesMap.CacheSubnetGroupName,
		AWS_ElastiCache_CacheCluster__PropertiesMap.ClusterName,
		AWS_ElastiCache_CacheCluster__PropertiesMap.Engine,
		AWS_ElastiCache_CacheCluster__PropertiesMap.EngineVersion,
		AWS_ElastiCache_CacheCluster__PropertiesMap.IpDiscovery,
		AWS_ElastiCache_CacheCluster__PropertiesMap.LogDeliveryConfigurations,
		AWS_ElastiCache_CacheCluster__PropertiesMap.NetworkType,
		AWS_ElastiCache_CacheCluster__PropertiesMap.NotificationTopicArn,
		AWS_ElastiCache_CacheCluster__PropertiesMap.NumCacheNodes,
		AWS_ElastiCache_CacheCluster__PropertiesMap.Port,
		AWS_ElastiCache_CacheCluster__PropertiesMap.PreferredAvailabilityZone,
		AWS_ElastiCache_CacheCluster__PropertiesMap.PreferredAvailabilityZones,
		AWS_ElastiCache_CacheCluster__PropertiesMap.PreferredMaintenanceWindow,
		AWS_ElastiCache_CacheCluster__PropertiesMap.SnapshotArns,
		AWS_ElastiCache_CacheCluster__PropertiesMap.SnapshotName,
		AWS_ElastiCache_CacheCluster__PropertiesMap.SnapshotRetentionLimit,
		AWS_ElastiCache_CacheCluster__PropertiesMap.SnapshotWindow,
		AWS_ElastiCache_CacheCluster__PropertiesMap.Tags,
		AWS_ElastiCache_CacheCluster__PropertiesMap.TransitEncryptionEnabled,
		AWS_ElastiCache_CacheCluster__PropertiesMap.VpcSecurityGroupIds,
	}
)

// AWS_ElastiCache_CacheCluster is a binding for AWS::ElastiCache::CacheCluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html
type AWS_ElastiCache_CacheCluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AZMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-azmode
	AZMode cfz.Expression[string] `json:"AZMode,omitempty"`

	// AutoMinorVersionUpgrade is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-autominorversionupgrade
	AutoMinorVersionUpgrade cfz.Expression[bool] `json:"AutoMinorVersionUpgrade,omitempty"`

	// CacheNodeType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachenodetype
	CacheNodeType cfz.Expression[string] `json:"CacheNodeType,omitempty"`

	// CacheParameterGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cacheparametergroupname
	CacheParameterGroupName cfz.Expression[string] `json:"CacheParameterGroupName,omitempty"`

	// CacheSecurityGroupNames is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachesecuritygroupnames
	CacheSecurityGroupNames cfz.ExpressionSlice[string] `json:"CacheSecurityGroupNames,omitempty"`

	// CacheSubnetGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachesubnetgroupname
	CacheSubnetGroupName cfz.Expression[string] `json:"CacheSubnetGroupName,omitempty"`

	// ClusterName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-clustername
	ClusterName cfz.Expression[string] `json:"ClusterName,omitempty"`

	// Engine is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-engine
	Engine cfz.Expression[string] `json:"Engine,omitempty"`

	// EngineVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-engineversion
	EngineVersion cfz.Expression[string] `json:"EngineVersion,omitempty"`

	// IpDiscovery is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-ipdiscovery
	IpDiscovery cfz.Expression[string] `json:"IpDiscovery,omitempty"`

	// LogDeliveryConfigurations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-logdeliveryconfigurations
	LogDeliveryConfigurations cfz.ExpressionSlice[AWS_ElastiCache_CacheCluster_LogDeliveryConfigurationRequest] `json:"LogDeliveryConfigurations,omitempty"`

	// NetworkType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-networktype
	NetworkType cfz.Expression[string] `json:"NetworkType,omitempty"`

	// NotificationTopicArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-notificationtopicarn
	NotificationTopicArn cfz.Expression[string] `json:"NotificationTopicArn,omitempty"`

	// NumCacheNodes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-numcachenodes
	NumCacheNodes cfz.Expression[int32] `json:"NumCacheNodes,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-port
	Port cfz.Expression[int32] `json:"Port,omitempty"`

	// PreferredAvailabilityZone is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredavailabilityzone
	PreferredAvailabilityZone cfz.Expression[string] `json:"PreferredAvailabilityZone,omitempty"`

	// PreferredAvailabilityZones is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredavailabilityzones
	PreferredAvailabilityZones cfz.ExpressionSlice[string] `json:"PreferredAvailabilityZones,omitempty"`

	// PreferredMaintenanceWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredmaintenancewindow
	PreferredMaintenanceWindow cfz.Expression[string] `json:"PreferredMaintenanceWindow,omitempty"`

	// SnapshotArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotarns
	SnapshotArns cfz.ExpressionSlice[string] `json:"SnapshotArns,omitempty"`

	// SnapshotName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotname
	SnapshotName cfz.Expression[string] `json:"SnapshotName,omitempty"`

	// SnapshotRetentionLimit is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotretentionlimit
	SnapshotRetentionLimit cfz.Expression[int32] `json:"SnapshotRetentionLimit,omitempty"`

	// SnapshotWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotwindow
	SnapshotWindow cfz.Expression[string] `json:"SnapshotWindow,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TransitEncryptionEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-transitencryptionenabled
	TransitEncryptionEnabled cfz.Expression[bool] `json:"TransitEncryptionEnabled,omitempty"`

	// VpcSecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-vpcsecuritygroupids
	VpcSecurityGroupIds cfz.ExpressionSlice[string] `json:"VpcSecurityGroupIds,omitempty"`
}

// New__AWS_ElastiCache_CacheCluster initializes a new *AWS_ElastiCache_CacheCluster.
func New__AWS_ElastiCache_CacheCluster(logicalName string) *AWS_ElastiCache_CacheCluster {
	return &AWS_ElastiCache_CacheCluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ElastiCache_CacheCluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ElastiCache_CacheCluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ElastiCache_CacheCluster) GetType() string {
	return AWS_ElastiCache_CacheCluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ElastiCache_CacheCluster) Set__LogicalName(v string) *AWS_ElastiCache_CacheCluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ElastiCache_CacheCluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ElastiCache_CacheCluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ElastiCache_CacheCluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ElastiCache_CacheCluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ElastiCache_CacheCluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ElastiCache_CacheCluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ElastiCache_CacheCluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ElastiCache_CacheCluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ElastiCache_CacheCluster) Set__RequestedOutputs(v []cfz.Output) *AWS_ElastiCache_CacheCluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ElastiCache_CacheCluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_ElastiCache_CacheCluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AZMode updates property "AZMode".
func (t *AWS_ElastiCache_CacheCluster) Set__AZMode(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.AZMode = v
	return t
}

// SetV__AZMode updates property "AZMode".
func (t *AWS_ElastiCache_CacheCluster) SetV__AZMode(v string) *AWS_ElastiCache_CacheCluster {
	t.AZMode = cfz.V(v)
	return t
}

// Set__AutoMinorVersionUpgrade updates property "AutoMinorVersionUpgrade".
func (t *AWS_ElastiCache_CacheCluster) Set__AutoMinorVersionUpgrade(v cfz.Expression[bool]) *AWS_ElastiCache_CacheCluster {
	t.AutoMinorVersionUpgrade = v
	return t
}

// SetV__AutoMinorVersionUpgrade updates property "AutoMinorVersionUpgrade".
func (t *AWS_ElastiCache_CacheCluster) SetV__AutoMinorVersionUpgrade(v bool) *AWS_ElastiCache_CacheCluster {
	t.AutoMinorVersionUpgrade = cfz.V(v)
	return t
}

// Set__CacheNodeType updates property "CacheNodeType".
func (t *AWS_ElastiCache_CacheCluster) Set__CacheNodeType(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.CacheNodeType = v
	return t
}

// SetV__CacheNodeType updates property "CacheNodeType".
func (t *AWS_ElastiCache_CacheCluster) SetV__CacheNodeType(v string) *AWS_ElastiCache_CacheCluster {
	t.CacheNodeType = cfz.V(v)
	return t
}

// Set__CacheParameterGroupName updates property "CacheParameterGroupName".
func (t *AWS_ElastiCache_CacheCluster) Set__CacheParameterGroupName(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.CacheParameterGroupName = v
	return t
}

// SetV__CacheParameterGroupName updates property "CacheParameterGroupName".
func (t *AWS_ElastiCache_CacheCluster) SetV__CacheParameterGroupName(v string) *AWS_ElastiCache_CacheCluster {
	t.CacheParameterGroupName = cfz.V(v)
	return t
}

// Set__CacheSecurityGroupNames updates property "CacheSecurityGroupNames".
func (t *AWS_ElastiCache_CacheCluster) Set__CacheSecurityGroupNames(v cfz.ExpressionSlice[string]) *AWS_ElastiCache_CacheCluster {
	t.CacheSecurityGroupNames = v
	return t
}

// SetS__CacheSecurityGroupNames updates property "CacheSecurityGroupNames".
func (t *AWS_ElastiCache_CacheCluster) SetS__CacheSecurityGroupNames(v ...cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.CacheSecurityGroupNames = cfz.S(v...)
	return t
}

// SetSV__CacheSecurityGroupNames updates property "CacheSecurityGroupNames".
func (t *AWS_ElastiCache_CacheCluster) SetSV__CacheSecurityGroupNames(v ...string) *AWS_ElastiCache_CacheCluster {
	t.CacheSecurityGroupNames = cfz.SV(v...)
	return t
}

// Set__CacheSubnetGroupName updates property "CacheSubnetGroupName".
func (t *AWS_ElastiCache_CacheCluster) Set__CacheSubnetGroupName(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.CacheSubnetGroupName = v
	return t
}

// SetV__CacheSubnetGroupName updates property "CacheSubnetGroupName".
func (t *AWS_ElastiCache_CacheCluster) SetV__CacheSubnetGroupName(v string) *AWS_ElastiCache_CacheCluster {
	t.CacheSubnetGroupName = cfz.V(v)
	return t
}

// Set__ClusterName updates property "ClusterName".
func (t *AWS_ElastiCache_CacheCluster) Set__ClusterName(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.ClusterName = v
	return t
}

// SetV__ClusterName updates property "ClusterName".
func (t *AWS_ElastiCache_CacheCluster) SetV__ClusterName(v string) *AWS_ElastiCache_CacheCluster {
	t.ClusterName = cfz.V(v)
	return t
}

// Set__Engine updates property "Engine".
func (t *AWS_ElastiCache_CacheCluster) Set__Engine(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.Engine = v
	return t
}

// SetV__Engine updates property "Engine".
func (t *AWS_ElastiCache_CacheCluster) SetV__Engine(v string) *AWS_ElastiCache_CacheCluster {
	t.Engine = cfz.V(v)
	return t
}

// Set__EngineVersion updates property "EngineVersion".
func (t *AWS_ElastiCache_CacheCluster) Set__EngineVersion(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.EngineVersion = v
	return t
}

// SetV__EngineVersion updates property "EngineVersion".
func (t *AWS_ElastiCache_CacheCluster) SetV__EngineVersion(v string) *AWS_ElastiCache_CacheCluster {
	t.EngineVersion = cfz.V(v)
	return t
}

// Set__IpDiscovery updates property "IpDiscovery".
func (t *AWS_ElastiCache_CacheCluster) Set__IpDiscovery(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.IpDiscovery = v
	return t
}

// SetV__IpDiscovery updates property "IpDiscovery".
func (t *AWS_ElastiCache_CacheCluster) SetV__IpDiscovery(v string) *AWS_ElastiCache_CacheCluster {
	t.IpDiscovery = cfz.V(v)
	return t
}

// Set__LogDeliveryConfigurations updates property "LogDeliveryConfigurations".
func (t *AWS_ElastiCache_CacheCluster) Set__LogDeliveryConfigurations(v cfz.ExpressionSlice[AWS_ElastiCache_CacheCluster_LogDeliveryConfigurationRequest]) *AWS_ElastiCache_CacheCluster {
	t.LogDeliveryConfigurations = v
	return t
}

// SetS__LogDeliveryConfigurations updates property "LogDeliveryConfigurations".
func (t *AWS_ElastiCache_CacheCluster) SetS__LogDeliveryConfigurations(v ...cfz.Expression[AWS_ElastiCache_CacheCluster_LogDeliveryConfigurationRequest]) *AWS_ElastiCache_CacheCluster {
	t.LogDeliveryConfigurations = cfz.S(v...)
	return t
}

// SetSV__LogDeliveryConfigurations updates property "LogDeliveryConfigurations".
func (t *AWS_ElastiCache_CacheCluster) SetSV__LogDeliveryConfigurations(v ...AWS_ElastiCache_CacheCluster_LogDeliveryConfigurationRequest) *AWS_ElastiCache_CacheCluster {
	t.LogDeliveryConfigurations = cfz.SV(v...)
	return t
}

// Set__NetworkType updates property "NetworkType".
func (t *AWS_ElastiCache_CacheCluster) Set__NetworkType(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.NetworkType = v
	return t
}

// SetV__NetworkType updates property "NetworkType".
func (t *AWS_ElastiCache_CacheCluster) SetV__NetworkType(v string) *AWS_ElastiCache_CacheCluster {
	t.NetworkType = cfz.V(v)
	return t
}

// Set__NotificationTopicArn updates property "NotificationTopicArn".
func (t *AWS_ElastiCache_CacheCluster) Set__NotificationTopicArn(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.NotificationTopicArn = v
	return t
}

// SetV__NotificationTopicArn updates property "NotificationTopicArn".
func (t *AWS_ElastiCache_CacheCluster) SetV__NotificationTopicArn(v string) *AWS_ElastiCache_CacheCluster {
	t.NotificationTopicArn = cfz.V(v)
	return t
}

// Set__NumCacheNodes updates property "NumCacheNodes".
func (t *AWS_ElastiCache_CacheCluster) Set__NumCacheNodes(v cfz.Expression[int32]) *AWS_ElastiCache_CacheCluster {
	t.NumCacheNodes = v
	return t
}

// SetV__NumCacheNodes updates property "NumCacheNodes".
func (t *AWS_ElastiCache_CacheCluster) SetV__NumCacheNodes(v int32) *AWS_ElastiCache_CacheCluster {
	t.NumCacheNodes = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t *AWS_ElastiCache_CacheCluster) Set__Port(v cfz.Expression[int32]) *AWS_ElastiCache_CacheCluster {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t *AWS_ElastiCache_CacheCluster) SetV__Port(v int32) *AWS_ElastiCache_CacheCluster {
	t.Port = cfz.V(v)
	return t
}

// Set__PreferredAvailabilityZone updates property "PreferredAvailabilityZone".
func (t *AWS_ElastiCache_CacheCluster) Set__PreferredAvailabilityZone(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.PreferredAvailabilityZone = v
	return t
}

// SetV__PreferredAvailabilityZone updates property "PreferredAvailabilityZone".
func (t *AWS_ElastiCache_CacheCluster) SetV__PreferredAvailabilityZone(v string) *AWS_ElastiCache_CacheCluster {
	t.PreferredAvailabilityZone = cfz.V(v)
	return t
}

// Set__PreferredAvailabilityZones updates property "PreferredAvailabilityZones".
func (t *AWS_ElastiCache_CacheCluster) Set__PreferredAvailabilityZones(v cfz.ExpressionSlice[string]) *AWS_ElastiCache_CacheCluster {
	t.PreferredAvailabilityZones = v
	return t
}

// SetS__PreferredAvailabilityZones updates property "PreferredAvailabilityZones".
func (t *AWS_ElastiCache_CacheCluster) SetS__PreferredAvailabilityZones(v ...cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.PreferredAvailabilityZones = cfz.S(v...)
	return t
}

// SetSV__PreferredAvailabilityZones updates property "PreferredAvailabilityZones".
func (t *AWS_ElastiCache_CacheCluster) SetSV__PreferredAvailabilityZones(v ...string) *AWS_ElastiCache_CacheCluster {
	t.PreferredAvailabilityZones = cfz.SV(v...)
	return t
}

// Set__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_ElastiCache_CacheCluster) Set__PreferredMaintenanceWindow(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.PreferredMaintenanceWindow = v
	return t
}

// SetV__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_ElastiCache_CacheCluster) SetV__PreferredMaintenanceWindow(v string) *AWS_ElastiCache_CacheCluster {
	t.PreferredMaintenanceWindow = cfz.V(v)
	return t
}

// Set__SnapshotArns updates property "SnapshotArns".
func (t *AWS_ElastiCache_CacheCluster) Set__SnapshotArns(v cfz.ExpressionSlice[string]) *AWS_ElastiCache_CacheCluster {
	t.SnapshotArns = v
	return t
}

// SetS__SnapshotArns updates property "SnapshotArns".
func (t *AWS_ElastiCache_CacheCluster) SetS__SnapshotArns(v ...cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.SnapshotArns = cfz.S(v...)
	return t
}

// SetSV__SnapshotArns updates property "SnapshotArns".
func (t *AWS_ElastiCache_CacheCluster) SetSV__SnapshotArns(v ...string) *AWS_ElastiCache_CacheCluster {
	t.SnapshotArns = cfz.SV(v...)
	return t
}

// Set__SnapshotName updates property "SnapshotName".
func (t *AWS_ElastiCache_CacheCluster) Set__SnapshotName(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.SnapshotName = v
	return t
}

// SetV__SnapshotName updates property "SnapshotName".
func (t *AWS_ElastiCache_CacheCluster) SetV__SnapshotName(v string) *AWS_ElastiCache_CacheCluster {
	t.SnapshotName = cfz.V(v)
	return t
}

// Set__SnapshotRetentionLimit updates property "SnapshotRetentionLimit".
func (t *AWS_ElastiCache_CacheCluster) Set__SnapshotRetentionLimit(v cfz.Expression[int32]) *AWS_ElastiCache_CacheCluster {
	t.SnapshotRetentionLimit = v
	return t
}

// SetV__SnapshotRetentionLimit updates property "SnapshotRetentionLimit".
func (t *AWS_ElastiCache_CacheCluster) SetV__SnapshotRetentionLimit(v int32) *AWS_ElastiCache_CacheCluster {
	t.SnapshotRetentionLimit = cfz.V(v)
	return t
}

// Set__SnapshotWindow updates property "SnapshotWindow".
func (t *AWS_ElastiCache_CacheCluster) Set__SnapshotWindow(v cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.SnapshotWindow = v
	return t
}

// SetV__SnapshotWindow updates property "SnapshotWindow".
func (t *AWS_ElastiCache_CacheCluster) SetV__SnapshotWindow(v string) *AWS_ElastiCache_CacheCluster {
	t.SnapshotWindow = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ElastiCache_CacheCluster) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ElastiCache_CacheCluster {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ElastiCache_CacheCluster) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ElastiCache_CacheCluster {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ElastiCache_CacheCluster) SetSV__Tags(v ...cfz.Tag) *AWS_ElastiCache_CacheCluster {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TransitEncryptionEnabled updates property "TransitEncryptionEnabled".
func (t *AWS_ElastiCache_CacheCluster) Set__TransitEncryptionEnabled(v cfz.Expression[bool]) *AWS_ElastiCache_CacheCluster {
	t.TransitEncryptionEnabled = v
	return t
}

// SetV__TransitEncryptionEnabled updates property "TransitEncryptionEnabled".
func (t *AWS_ElastiCache_CacheCluster) SetV__TransitEncryptionEnabled(v bool) *AWS_ElastiCache_CacheCluster {
	t.TransitEncryptionEnabled = cfz.V(v)
	return t
}

// Set__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_ElastiCache_CacheCluster) Set__VpcSecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_ElastiCache_CacheCluster {
	t.VpcSecurityGroupIds = v
	return t
}

// SetS__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_ElastiCache_CacheCluster) SetS__VpcSecurityGroupIds(v ...cfz.Expression[string]) *AWS_ElastiCache_CacheCluster {
	t.VpcSecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_ElastiCache_CacheCluster) SetSV__VpcSecurityGroupIds(v ...string) *AWS_ElastiCache_CacheCluster {
	t.VpcSecurityGroupIds = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ElastiCache_CacheCluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ConfigurationEndpoint_Address returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConfigurationEndpoint.Address
func (t *AWS_ElastiCache_CacheCluster) GetAtt__ConfigurationEndpoint_Address() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElastiCache_CacheCluster__AttributesMap.ConfigurationEndpoint_Address))
}

// GetAtt__ConfigurationEndpoint_Port returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConfigurationEndpoint.Port
func (t *AWS_ElastiCache_CacheCluster) GetAtt__ConfigurationEndpoint_Port() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElastiCache_CacheCluster__AttributesMap.ConfigurationEndpoint_Port))
}

// GetAtt__RedisEndpoint_Address returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RedisEndpoint.Address
func (t *AWS_ElastiCache_CacheCluster) GetAtt__RedisEndpoint_Address() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElastiCache_CacheCluster__AttributesMap.RedisEndpoint_Address))
}

// GetAtt__RedisEndpoint_Port returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RedisEndpoint.Port
func (t *AWS_ElastiCache_CacheCluster) GetAtt__RedisEndpoint_Port() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElastiCache_CacheCluster__AttributesMap.RedisEndpoint_Port))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ElastiCache_CacheCluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConfigurationEndpoint_Address returns a conventionally configured output for an attribute of this resource.
// Attribute: ConfigurationEndpoint.Address
func (t *AWS_ElastiCache_CacheCluster) GetConventionalOutputAtt__ConfigurationEndpoint_Address(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConfigurationEndpointAddress", t.GetAtt__ConfigurationEndpoint_Address())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConfigurationEndpoint_Port returns a conventionally configured output for an attribute of this resource.
// Attribute: ConfigurationEndpoint.Port
func (t *AWS_ElastiCache_CacheCluster) GetConventionalOutputAtt__ConfigurationEndpoint_Port(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConfigurationEndpointPort", t.GetAtt__ConfigurationEndpoint_Port())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RedisEndpoint_Address returns a conventionally configured output for an attribute of this resource.
// Attribute: RedisEndpoint.Address
func (t *AWS_ElastiCache_CacheCluster) GetConventionalOutputAtt__RedisEndpoint_Address(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRedisEndpointAddress", t.GetAtt__RedisEndpoint_Address())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RedisEndpoint_Port returns a conventionally configured output for an attribute of this resource.
// Attribute: RedisEndpoint.Port
func (t *AWS_ElastiCache_CacheCluster) GetConventionalOutputAtt__RedisEndpoint_Port(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRedisEndpointPort", t.GetAtt__RedisEndpoint_Port())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ElastiCache_CacheCluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ElastiCache_CacheCluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ElastiCache_CacheCluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
