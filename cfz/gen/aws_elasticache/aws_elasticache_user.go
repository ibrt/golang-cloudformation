// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_elasticache

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ElastiCache_User)(nil)
	_ cfz.Resource                   = (*AWS_ElastiCache_User)(nil)
)

const (
	// AWS_ElastiCache_User__Type is the CloudFormation type for AWS::ElastiCache::User.
	AWS_ElastiCache_User__Type = "AWS::ElastiCache::User"
)

var (
	// AWS_ElastiCache_User__AttributesMap reports all the CloudFormation attributes for AWS::ElastiCache::User.
	AWS_ElastiCache_User__AttributesMap = struct {
		Arn    string
		Status string
	}{
		Arn:    "Arn",
		Status: "Status",
	}

	// AWS_ElastiCache_User__AttributesSlice reports all the CloudFormation attributes for AWS::ElastiCache::User.
	AWS_ElastiCache_User__AttributesSlice = []string{
		AWS_ElastiCache_User__AttributesMap.Arn,
		AWS_ElastiCache_User__AttributesMap.Status,
	}
)

var (
	// AWS_ElastiCache_User__PropertiesMap reports all the CloudFormation properties for AWS::ElastiCache::User.
	AWS_ElastiCache_User__PropertiesMap = struct {
		AccessString       string
		AuthenticationMode string
		Engine             string
		NoPasswordRequired string
		Passwords          string
		Tags               string
		UserId             string
		UserName           string
	}{
		AccessString:       "AccessString",
		AuthenticationMode: "AuthenticationMode",
		Engine:             "Engine",
		NoPasswordRequired: "NoPasswordRequired",
		Passwords:          "Passwords",
		Tags:               "Tags",
		UserId:             "UserId",
		UserName:           "UserName",
	}

	// AWS_ElastiCache_User__PropertiesSlice reports all the CloudFormation properties for AWS::ElastiCache::User.
	AWS_ElastiCache_User__PropertiesSlice = []string{
		AWS_ElastiCache_User__PropertiesMap.AccessString,
		AWS_ElastiCache_User__PropertiesMap.AuthenticationMode,
		AWS_ElastiCache_User__PropertiesMap.Engine,
		AWS_ElastiCache_User__PropertiesMap.NoPasswordRequired,
		AWS_ElastiCache_User__PropertiesMap.Passwords,
		AWS_ElastiCache_User__PropertiesMap.Tags,
		AWS_ElastiCache_User__PropertiesMap.UserId,
		AWS_ElastiCache_User__PropertiesMap.UserName,
	}
)

// AWS_ElastiCache_User is a binding for AWS::ElastiCache::User.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html
type AWS_ElastiCache_User struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessString is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-accessstring
	AccessString cfz.Expression[string] `json:"AccessString,omitempty"`

	// AuthenticationMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-authenticationmode
	AuthenticationMode cfz.Expression[AWS_ElastiCache_User_AuthenticationMode] `json:"AuthenticationMode,omitempty"`

	// Engine is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-engine
	Engine cfz.Expression[string] `json:"Engine,omitempty"`

	// NoPasswordRequired is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-nopasswordrequired
	NoPasswordRequired cfz.Expression[bool] `json:"NoPasswordRequired,omitempty"`

	// Passwords is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-passwords
	Passwords cfz.ExpressionSlice[string] `json:"Passwords,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UserId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-userid
	UserId cfz.Expression[string] `json:"UserId,omitempty"`

	// UserName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-username
	UserName cfz.Expression[string] `json:"UserName,omitempty"`
}

// New__AWS_ElastiCache_User initializes a new *AWS_ElastiCache_User.
func New__AWS_ElastiCache_User(logicalName string) *AWS_ElastiCache_User {
	return &AWS_ElastiCache_User{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ElastiCache_User) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ElastiCache_User) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ElastiCache_User) GetType() string {
	return AWS_ElastiCache_User__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ElastiCache_User) Set__LogicalName(v string) *AWS_ElastiCache_User {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ElastiCache_User) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ElastiCache_User {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ElastiCache_User) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ElastiCache_User {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ElastiCache_User) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ElastiCache_User {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ElastiCache_User) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ElastiCache_User {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ElastiCache_User) Set__RequestedOutputs(v []cfz.Output) *AWS_ElastiCache_User {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ElastiCache_User) Add__RequestedOutputs(v ...cfz.Output) *AWS_ElastiCache_User {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessString updates property "AccessString".
func (t *AWS_ElastiCache_User) Set__AccessString(v cfz.Expression[string]) *AWS_ElastiCache_User {
	t.AccessString = v
	return t
}

// SetV__AccessString updates property "AccessString".
func (t *AWS_ElastiCache_User) SetV__AccessString(v string) *AWS_ElastiCache_User {
	t.AccessString = cfz.V(v)
	return t
}

// Set__AuthenticationMode updates property "AuthenticationMode".
func (t *AWS_ElastiCache_User) Set__AuthenticationMode(v cfz.Expression[AWS_ElastiCache_User_AuthenticationMode]) *AWS_ElastiCache_User {
	t.AuthenticationMode = v
	return t
}

// SetV__AuthenticationMode updates property "AuthenticationMode".
func (t *AWS_ElastiCache_User) SetV__AuthenticationMode(v AWS_ElastiCache_User_AuthenticationMode) *AWS_ElastiCache_User {
	t.AuthenticationMode = cfz.V(v)
	return t
}

// Set__Engine updates property "Engine".
func (t *AWS_ElastiCache_User) Set__Engine(v cfz.Expression[string]) *AWS_ElastiCache_User {
	t.Engine = v
	return t
}

// SetV__Engine updates property "Engine".
func (t *AWS_ElastiCache_User) SetV__Engine(v string) *AWS_ElastiCache_User {
	t.Engine = cfz.V(v)
	return t
}

// Set__NoPasswordRequired updates property "NoPasswordRequired".
func (t *AWS_ElastiCache_User) Set__NoPasswordRequired(v cfz.Expression[bool]) *AWS_ElastiCache_User {
	t.NoPasswordRequired = v
	return t
}

// SetV__NoPasswordRequired updates property "NoPasswordRequired".
func (t *AWS_ElastiCache_User) SetV__NoPasswordRequired(v bool) *AWS_ElastiCache_User {
	t.NoPasswordRequired = cfz.V(v)
	return t
}

// Set__Passwords updates property "Passwords".
func (t *AWS_ElastiCache_User) Set__Passwords(v cfz.ExpressionSlice[string]) *AWS_ElastiCache_User {
	t.Passwords = v
	return t
}

// SetS__Passwords updates property "Passwords".
func (t *AWS_ElastiCache_User) SetS__Passwords(v ...cfz.Expression[string]) *AWS_ElastiCache_User {
	t.Passwords = cfz.S(v...)
	return t
}

// SetSV__Passwords updates property "Passwords".
func (t *AWS_ElastiCache_User) SetSV__Passwords(v ...string) *AWS_ElastiCache_User {
	t.Passwords = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ElastiCache_User) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ElastiCache_User {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ElastiCache_User) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ElastiCache_User {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ElastiCache_User) SetSV__Tags(v ...cfz.Tag) *AWS_ElastiCache_User {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UserId updates property "UserId".
func (t *AWS_ElastiCache_User) Set__UserId(v cfz.Expression[string]) *AWS_ElastiCache_User {
	t.UserId = v
	return t
}

// SetV__UserId updates property "UserId".
func (t *AWS_ElastiCache_User) SetV__UserId(v string) *AWS_ElastiCache_User {
	t.UserId = cfz.V(v)
	return t
}

// Set__UserName updates property "UserName".
func (t *AWS_ElastiCache_User) Set__UserName(v cfz.Expression[string]) *AWS_ElastiCache_User {
	t.UserName = v
	return t
}

// SetV__UserName updates property "UserName".
func (t *AWS_ElastiCache_User) SetV__UserName(v string) *AWS_ElastiCache_User {
	t.UserName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ElastiCache_User) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_ElastiCache_User) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElastiCache_User__AttributesMap.Arn))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_ElastiCache_User) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElastiCache_User__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ElastiCache_User) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_ElastiCache_User) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_ElastiCache_User) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ElastiCache_User) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ElastiCache_User

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ElastiCache_User) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
