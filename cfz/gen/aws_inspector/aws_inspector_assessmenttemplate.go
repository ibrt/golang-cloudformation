// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_inspector

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Inspector_AssessmentTemplate)(nil)
	_ cfz.Resource                   = (*AWS_Inspector_AssessmentTemplate)(nil)
)

const (
	// AWS_Inspector_AssessmentTemplate__Type is the CloudFormation type for AWS::Inspector::AssessmentTemplate.
	AWS_Inspector_AssessmentTemplate__Type = "AWS::Inspector::AssessmentTemplate"
)

var (
	// AWS_Inspector_AssessmentTemplate__AttributesMap reports all the CloudFormation attributes for AWS::Inspector::AssessmentTemplate.
	AWS_Inspector_AssessmentTemplate__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_Inspector_AssessmentTemplate__AttributesSlice reports all the CloudFormation attributes for AWS::Inspector::AssessmentTemplate.
	AWS_Inspector_AssessmentTemplate__AttributesSlice = []string{
		AWS_Inspector_AssessmentTemplate__AttributesMap.Arn,
	}
)

var (
	// AWS_Inspector_AssessmentTemplate__PropertiesMap reports all the CloudFormation properties for AWS::Inspector::AssessmentTemplate.
	AWS_Inspector_AssessmentTemplate__PropertiesMap = struct {
		AssessmentTargetArn       string
		AssessmentTemplateName    string
		DurationInSeconds         string
		RulesPackageArns          string
		UserAttributesForFindings string
	}{
		AssessmentTargetArn:       "AssessmentTargetArn",
		AssessmentTemplateName:    "AssessmentTemplateName",
		DurationInSeconds:         "DurationInSeconds",
		RulesPackageArns:          "RulesPackageArns",
		UserAttributesForFindings: "UserAttributesForFindings",
	}

	// AWS_Inspector_AssessmentTemplate__PropertiesSlice reports all the CloudFormation properties for AWS::Inspector::AssessmentTemplate.
	AWS_Inspector_AssessmentTemplate__PropertiesSlice = []string{
		AWS_Inspector_AssessmentTemplate__PropertiesMap.AssessmentTargetArn,
		AWS_Inspector_AssessmentTemplate__PropertiesMap.AssessmentTemplateName,
		AWS_Inspector_AssessmentTemplate__PropertiesMap.DurationInSeconds,
		AWS_Inspector_AssessmentTemplate__PropertiesMap.RulesPackageArns,
		AWS_Inspector_AssessmentTemplate__PropertiesMap.UserAttributesForFindings,
	}
)

// AWS_Inspector_AssessmentTemplate is a binding for AWS::Inspector::AssessmentTemplate.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html
type AWS_Inspector_AssessmentTemplate struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AssessmentTargetArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-assessmenttargetarn
	AssessmentTargetArn cfz.Expression[string] `json:"AssessmentTargetArn,omitempty"`

	// AssessmentTemplateName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-assessmenttemplatename
	AssessmentTemplateName cfz.Expression[string] `json:"AssessmentTemplateName,omitempty"`

	// DurationInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-durationinseconds
	DurationInSeconds cfz.Expression[int32] `json:"DurationInSeconds,omitempty"`

	// RulesPackageArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-rulespackagearns
	RulesPackageArns cfz.ExpressionSlice[string] `json:"RulesPackageArns,omitempty"`

	// UserAttributesForFindings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-inspector-assessmenttemplate.html#cfn-inspector-assessmenttemplate-userattributesforfindings
	UserAttributesForFindings cfz.ExpressionSlice[cfz.Tag] `json:"UserAttributesForFindings,omitempty"`
}

// New__AWS_Inspector_AssessmentTemplate initializes a new *AWS_Inspector_AssessmentTemplate.
func New__AWS_Inspector_AssessmentTemplate(logicalName string) *AWS_Inspector_AssessmentTemplate {
	return &AWS_Inspector_AssessmentTemplate{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Inspector_AssessmentTemplate) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Inspector_AssessmentTemplate) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Inspector_AssessmentTemplate) GetType() string {
	return AWS_Inspector_AssessmentTemplate__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Inspector_AssessmentTemplate) Set__LogicalName(v string) *AWS_Inspector_AssessmentTemplate {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Inspector_AssessmentTemplate) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Inspector_AssessmentTemplate {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Inspector_AssessmentTemplate) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Inspector_AssessmentTemplate {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Inspector_AssessmentTemplate) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Inspector_AssessmentTemplate {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Inspector_AssessmentTemplate) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Inspector_AssessmentTemplate {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Inspector_AssessmentTemplate) Set__RequestedOutputs(v []cfz.Output) *AWS_Inspector_AssessmentTemplate {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Inspector_AssessmentTemplate) Add__RequestedOutputs(v ...cfz.Output) *AWS_Inspector_AssessmentTemplate {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AssessmentTargetArn updates property "AssessmentTargetArn".
func (t *AWS_Inspector_AssessmentTemplate) Set__AssessmentTargetArn(v cfz.Expression[string]) *AWS_Inspector_AssessmentTemplate {
	t.AssessmentTargetArn = v
	return t
}

// SetV__AssessmentTargetArn updates property "AssessmentTargetArn".
func (t *AWS_Inspector_AssessmentTemplate) SetV__AssessmentTargetArn(v string) *AWS_Inspector_AssessmentTemplate {
	t.AssessmentTargetArn = cfz.V(v)
	return t
}

// Set__AssessmentTemplateName updates property "AssessmentTemplateName".
func (t *AWS_Inspector_AssessmentTemplate) Set__AssessmentTemplateName(v cfz.Expression[string]) *AWS_Inspector_AssessmentTemplate {
	t.AssessmentTemplateName = v
	return t
}

// SetV__AssessmentTemplateName updates property "AssessmentTemplateName".
func (t *AWS_Inspector_AssessmentTemplate) SetV__AssessmentTemplateName(v string) *AWS_Inspector_AssessmentTemplate {
	t.AssessmentTemplateName = cfz.V(v)
	return t
}

// Set__DurationInSeconds updates property "DurationInSeconds".
func (t *AWS_Inspector_AssessmentTemplate) Set__DurationInSeconds(v cfz.Expression[int32]) *AWS_Inspector_AssessmentTemplate {
	t.DurationInSeconds = v
	return t
}

// SetV__DurationInSeconds updates property "DurationInSeconds".
func (t *AWS_Inspector_AssessmentTemplate) SetV__DurationInSeconds(v int32) *AWS_Inspector_AssessmentTemplate {
	t.DurationInSeconds = cfz.V(v)
	return t
}

// Set__RulesPackageArns updates property "RulesPackageArns".
func (t *AWS_Inspector_AssessmentTemplate) Set__RulesPackageArns(v cfz.ExpressionSlice[string]) *AWS_Inspector_AssessmentTemplate {
	t.RulesPackageArns = v
	return t
}

// SetS__RulesPackageArns updates property "RulesPackageArns".
func (t *AWS_Inspector_AssessmentTemplate) SetS__RulesPackageArns(v ...cfz.Expression[string]) *AWS_Inspector_AssessmentTemplate {
	t.RulesPackageArns = cfz.S(v...)
	return t
}

// SetSV__RulesPackageArns updates property "RulesPackageArns".
func (t *AWS_Inspector_AssessmentTemplate) SetSV__RulesPackageArns(v ...string) *AWS_Inspector_AssessmentTemplate {
	t.RulesPackageArns = cfz.SV(v...)
	return t
}

// Set__UserAttributesForFindings updates property "UserAttributesForFindings".
func (t *AWS_Inspector_AssessmentTemplate) Set__UserAttributesForFindings(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Inspector_AssessmentTemplate {
	t.UserAttributesForFindings = v
	return t
}

// SetS__UserAttributesForFindings updates property "UserAttributesForFindings".
func (t *AWS_Inspector_AssessmentTemplate) SetS__UserAttributesForFindings(v ...cfz.Expression[cfz.Tag]) *AWS_Inspector_AssessmentTemplate {
	t.UserAttributesForFindings = cfz.S(v...)
	return t
}

// SetSV__UserAttributesForFindings updates property "UserAttributesForFindings".
func (t *AWS_Inspector_AssessmentTemplate) SetSV__UserAttributesForFindings(v ...cfz.Tag) *AWS_Inspector_AssessmentTemplate {
	t.UserAttributesForFindings = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Inspector_AssessmentTemplate) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Inspector_AssessmentTemplate) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Inspector_AssessmentTemplate__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Inspector_AssessmentTemplate) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Inspector_AssessmentTemplate) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Inspector_AssessmentTemplate) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Inspector_AssessmentTemplate

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Inspector_AssessmentTemplate) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
