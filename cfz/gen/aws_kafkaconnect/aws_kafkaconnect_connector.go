// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_kafkaconnect

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_KafkaConnect_Connector)(nil)
	_ cfz.Resource                   = (*AWS_KafkaConnect_Connector)(nil)
)

const (
	// AWS_KafkaConnect_Connector__Type is the CloudFormation type for AWS::KafkaConnect::Connector.
	AWS_KafkaConnect_Connector__Type = "AWS::KafkaConnect::Connector"
)

var (
	// AWS_KafkaConnect_Connector__AttributesMap reports all the CloudFormation attributes for AWS::KafkaConnect::Connector.
	AWS_KafkaConnect_Connector__AttributesMap = struct {
		ConnectorArn string
	}{
		ConnectorArn: "ConnectorArn",
	}

	// AWS_KafkaConnect_Connector__AttributesSlice reports all the CloudFormation attributes for AWS::KafkaConnect::Connector.
	AWS_KafkaConnect_Connector__AttributesSlice = []string{
		AWS_KafkaConnect_Connector__AttributesMap.ConnectorArn,
	}
)

var (
	// AWS_KafkaConnect_Connector__PropertiesMap reports all the CloudFormation properties for AWS::KafkaConnect::Connector.
	AWS_KafkaConnect_Connector__PropertiesMap = struct {
		Capacity                         string
		ConnectorConfiguration           string
		ConnectorDescription             string
		ConnectorName                    string
		KafkaCluster                     string
		KafkaClusterClientAuthentication string
		KafkaClusterEncryptionInTransit  string
		KafkaConnectVersion              string
		LogDelivery                      string
		Plugins                          string
		ServiceExecutionRoleArn          string
		Tags                             string
		WorkerConfiguration              string
	}{
		Capacity:                         "Capacity",
		ConnectorConfiguration:           "ConnectorConfiguration",
		ConnectorDescription:             "ConnectorDescription",
		ConnectorName:                    "ConnectorName",
		KafkaCluster:                     "KafkaCluster",
		KafkaClusterClientAuthentication: "KafkaClusterClientAuthentication",
		KafkaClusterEncryptionInTransit:  "KafkaClusterEncryptionInTransit",
		KafkaConnectVersion:              "KafkaConnectVersion",
		LogDelivery:                      "LogDelivery",
		Plugins:                          "Plugins",
		ServiceExecutionRoleArn:          "ServiceExecutionRoleArn",
		Tags:                             "Tags",
		WorkerConfiguration:              "WorkerConfiguration",
	}

	// AWS_KafkaConnect_Connector__PropertiesSlice reports all the CloudFormation properties for AWS::KafkaConnect::Connector.
	AWS_KafkaConnect_Connector__PropertiesSlice = []string{
		AWS_KafkaConnect_Connector__PropertiesMap.Capacity,
		AWS_KafkaConnect_Connector__PropertiesMap.ConnectorConfiguration,
		AWS_KafkaConnect_Connector__PropertiesMap.ConnectorDescription,
		AWS_KafkaConnect_Connector__PropertiesMap.ConnectorName,
		AWS_KafkaConnect_Connector__PropertiesMap.KafkaCluster,
		AWS_KafkaConnect_Connector__PropertiesMap.KafkaClusterClientAuthentication,
		AWS_KafkaConnect_Connector__PropertiesMap.KafkaClusterEncryptionInTransit,
		AWS_KafkaConnect_Connector__PropertiesMap.KafkaConnectVersion,
		AWS_KafkaConnect_Connector__PropertiesMap.LogDelivery,
		AWS_KafkaConnect_Connector__PropertiesMap.Plugins,
		AWS_KafkaConnect_Connector__PropertiesMap.ServiceExecutionRoleArn,
		AWS_KafkaConnect_Connector__PropertiesMap.Tags,
		AWS_KafkaConnect_Connector__PropertiesMap.WorkerConfiguration,
	}
)

// AWS_KafkaConnect_Connector is a binding for AWS::KafkaConnect::Connector.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html
type AWS_KafkaConnect_Connector struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Capacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-capacity
	Capacity cfz.Expression[AWS_KafkaConnect_Connector_Capacity] `json:"Capacity,omitempty"`

	// ConnectorConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorconfiguration
	ConnectorConfiguration cfz.ExpressionMap[string] `json:"ConnectorConfiguration,omitempty"`

	// ConnectorDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectordescription
	ConnectorDescription cfz.Expression[string] `json:"ConnectorDescription,omitempty"`

	// ConnectorName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorname
	ConnectorName cfz.Expression[string] `json:"ConnectorName,omitempty"`

	// KafkaCluster is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkacluster
	KafkaCluster cfz.Expression[AWS_KafkaConnect_Connector_KafkaCluster] `json:"KafkaCluster,omitempty"`

	// KafkaClusterClientAuthentication is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterclientauthentication
	KafkaClusterClientAuthentication cfz.Expression[AWS_KafkaConnect_Connector_KafkaClusterClientAuthentication] `json:"KafkaClusterClientAuthentication,omitempty"`

	// KafkaClusterEncryptionInTransit is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterencryptionintransit
	KafkaClusterEncryptionInTransit cfz.Expression[AWS_KafkaConnect_Connector_KafkaClusterEncryptionInTransit] `json:"KafkaClusterEncryptionInTransit,omitempty"`

	// KafkaConnectVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaconnectversion
	KafkaConnectVersion cfz.Expression[string] `json:"KafkaConnectVersion,omitempty"`

	// LogDelivery is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-logdelivery
	LogDelivery cfz.Expression[AWS_KafkaConnect_Connector_LogDelivery] `json:"LogDelivery,omitempty"`

	// Plugins is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-plugins
	Plugins cfz.ExpressionSlice[AWS_KafkaConnect_Connector_Plugin] `json:"Plugins,omitempty"`

	// ServiceExecutionRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-serviceexecutionrolearn
	ServiceExecutionRoleArn cfz.Expression[string] `json:"ServiceExecutionRoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// WorkerConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-workerconfiguration
	WorkerConfiguration cfz.Expression[AWS_KafkaConnect_Connector_WorkerConfiguration] `json:"WorkerConfiguration,omitempty"`
}

// New__AWS_KafkaConnect_Connector initializes a new *AWS_KafkaConnect_Connector.
func New__AWS_KafkaConnect_Connector(logicalName string) *AWS_KafkaConnect_Connector {
	return &AWS_KafkaConnect_Connector{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_KafkaConnect_Connector) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_KafkaConnect_Connector) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_KafkaConnect_Connector) GetType() string {
	return AWS_KafkaConnect_Connector__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_KafkaConnect_Connector) Set__LogicalName(v string) *AWS_KafkaConnect_Connector {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_KafkaConnect_Connector) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_KafkaConnect_Connector {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_KafkaConnect_Connector) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_KafkaConnect_Connector {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_KafkaConnect_Connector) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_KafkaConnect_Connector {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_KafkaConnect_Connector) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_KafkaConnect_Connector {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_KafkaConnect_Connector) Set__RequestedOutputs(v []cfz.Output) *AWS_KafkaConnect_Connector {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_KafkaConnect_Connector) Add__RequestedOutputs(v ...cfz.Output) *AWS_KafkaConnect_Connector {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Capacity updates property "Capacity".
func (t *AWS_KafkaConnect_Connector) Set__Capacity(v cfz.Expression[AWS_KafkaConnect_Connector_Capacity]) *AWS_KafkaConnect_Connector {
	t.Capacity = v
	return t
}

// SetV__Capacity updates property "Capacity".
func (t *AWS_KafkaConnect_Connector) SetV__Capacity(v AWS_KafkaConnect_Connector_Capacity) *AWS_KafkaConnect_Connector {
	t.Capacity = cfz.V(v)
	return t
}

// Set__ConnectorConfiguration updates property "ConnectorConfiguration".
func (t *AWS_KafkaConnect_Connector) Set__ConnectorConfiguration(v cfz.ExpressionMap[string]) *AWS_KafkaConnect_Connector {
	t.ConnectorConfiguration = v
	return t
}

// SetM__ConnectorConfiguration updates property "ConnectorConfiguration".
func (t *AWS_KafkaConnect_Connector) SetM__ConnectorConfiguration(v ...map[string]cfz.Expression[string]) *AWS_KafkaConnect_Connector {
	t.ConnectorConfiguration = cfz.M(v...)
	return t
}

// SetMV__ConnectorConfiguration updates property "ConnectorConfiguration".
func (t *AWS_KafkaConnect_Connector) SetMV__ConnectorConfiguration(v ...map[string]string) *AWS_KafkaConnect_Connector {
	t.ConnectorConfiguration = cfz.MV(v...)
	return t
}

// Set__ConnectorDescription updates property "ConnectorDescription".
func (t *AWS_KafkaConnect_Connector) Set__ConnectorDescription(v cfz.Expression[string]) *AWS_KafkaConnect_Connector {
	t.ConnectorDescription = v
	return t
}

// SetV__ConnectorDescription updates property "ConnectorDescription".
func (t *AWS_KafkaConnect_Connector) SetV__ConnectorDescription(v string) *AWS_KafkaConnect_Connector {
	t.ConnectorDescription = cfz.V(v)
	return t
}

// Set__ConnectorName updates property "ConnectorName".
func (t *AWS_KafkaConnect_Connector) Set__ConnectorName(v cfz.Expression[string]) *AWS_KafkaConnect_Connector {
	t.ConnectorName = v
	return t
}

// SetV__ConnectorName updates property "ConnectorName".
func (t *AWS_KafkaConnect_Connector) SetV__ConnectorName(v string) *AWS_KafkaConnect_Connector {
	t.ConnectorName = cfz.V(v)
	return t
}

// Set__KafkaCluster updates property "KafkaCluster".
func (t *AWS_KafkaConnect_Connector) Set__KafkaCluster(v cfz.Expression[AWS_KafkaConnect_Connector_KafkaCluster]) *AWS_KafkaConnect_Connector {
	t.KafkaCluster = v
	return t
}

// SetV__KafkaCluster updates property "KafkaCluster".
func (t *AWS_KafkaConnect_Connector) SetV__KafkaCluster(v AWS_KafkaConnect_Connector_KafkaCluster) *AWS_KafkaConnect_Connector {
	t.KafkaCluster = cfz.V(v)
	return t
}

// Set__KafkaClusterClientAuthentication updates property "KafkaClusterClientAuthentication".
func (t *AWS_KafkaConnect_Connector) Set__KafkaClusterClientAuthentication(v cfz.Expression[AWS_KafkaConnect_Connector_KafkaClusterClientAuthentication]) *AWS_KafkaConnect_Connector {
	t.KafkaClusterClientAuthentication = v
	return t
}

// SetV__KafkaClusterClientAuthentication updates property "KafkaClusterClientAuthentication".
func (t *AWS_KafkaConnect_Connector) SetV__KafkaClusterClientAuthentication(v AWS_KafkaConnect_Connector_KafkaClusterClientAuthentication) *AWS_KafkaConnect_Connector {
	t.KafkaClusterClientAuthentication = cfz.V(v)
	return t
}

// Set__KafkaClusterEncryptionInTransit updates property "KafkaClusterEncryptionInTransit".
func (t *AWS_KafkaConnect_Connector) Set__KafkaClusterEncryptionInTransit(v cfz.Expression[AWS_KafkaConnect_Connector_KafkaClusterEncryptionInTransit]) *AWS_KafkaConnect_Connector {
	t.KafkaClusterEncryptionInTransit = v
	return t
}

// SetV__KafkaClusterEncryptionInTransit updates property "KafkaClusterEncryptionInTransit".
func (t *AWS_KafkaConnect_Connector) SetV__KafkaClusterEncryptionInTransit(v AWS_KafkaConnect_Connector_KafkaClusterEncryptionInTransit) *AWS_KafkaConnect_Connector {
	t.KafkaClusterEncryptionInTransit = cfz.V(v)
	return t
}

// Set__KafkaConnectVersion updates property "KafkaConnectVersion".
func (t *AWS_KafkaConnect_Connector) Set__KafkaConnectVersion(v cfz.Expression[string]) *AWS_KafkaConnect_Connector {
	t.KafkaConnectVersion = v
	return t
}

// SetV__KafkaConnectVersion updates property "KafkaConnectVersion".
func (t *AWS_KafkaConnect_Connector) SetV__KafkaConnectVersion(v string) *AWS_KafkaConnect_Connector {
	t.KafkaConnectVersion = cfz.V(v)
	return t
}

// Set__LogDelivery updates property "LogDelivery".
func (t *AWS_KafkaConnect_Connector) Set__LogDelivery(v cfz.Expression[AWS_KafkaConnect_Connector_LogDelivery]) *AWS_KafkaConnect_Connector {
	t.LogDelivery = v
	return t
}

// SetV__LogDelivery updates property "LogDelivery".
func (t *AWS_KafkaConnect_Connector) SetV__LogDelivery(v AWS_KafkaConnect_Connector_LogDelivery) *AWS_KafkaConnect_Connector {
	t.LogDelivery = cfz.V(v)
	return t
}

// Set__Plugins updates property "Plugins".
func (t *AWS_KafkaConnect_Connector) Set__Plugins(v cfz.ExpressionSlice[AWS_KafkaConnect_Connector_Plugin]) *AWS_KafkaConnect_Connector {
	t.Plugins = v
	return t
}

// SetS__Plugins updates property "Plugins".
func (t *AWS_KafkaConnect_Connector) SetS__Plugins(v ...cfz.Expression[AWS_KafkaConnect_Connector_Plugin]) *AWS_KafkaConnect_Connector {
	t.Plugins = cfz.S(v...)
	return t
}

// SetSV__Plugins updates property "Plugins".
func (t *AWS_KafkaConnect_Connector) SetSV__Plugins(v ...AWS_KafkaConnect_Connector_Plugin) *AWS_KafkaConnect_Connector {
	t.Plugins = cfz.SV(v...)
	return t
}

// Set__ServiceExecutionRoleArn updates property "ServiceExecutionRoleArn".
func (t *AWS_KafkaConnect_Connector) Set__ServiceExecutionRoleArn(v cfz.Expression[string]) *AWS_KafkaConnect_Connector {
	t.ServiceExecutionRoleArn = v
	return t
}

// SetV__ServiceExecutionRoleArn updates property "ServiceExecutionRoleArn".
func (t *AWS_KafkaConnect_Connector) SetV__ServiceExecutionRoleArn(v string) *AWS_KafkaConnect_Connector {
	t.ServiceExecutionRoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_KafkaConnect_Connector) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_KafkaConnect_Connector {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_KafkaConnect_Connector) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_KafkaConnect_Connector {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_KafkaConnect_Connector) SetSV__Tags(v ...cfz.Tag) *AWS_KafkaConnect_Connector {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__WorkerConfiguration updates property "WorkerConfiguration".
func (t *AWS_KafkaConnect_Connector) Set__WorkerConfiguration(v cfz.Expression[AWS_KafkaConnect_Connector_WorkerConfiguration]) *AWS_KafkaConnect_Connector {
	t.WorkerConfiguration = v
	return t
}

// SetV__WorkerConfiguration updates property "WorkerConfiguration".
func (t *AWS_KafkaConnect_Connector) SetV__WorkerConfiguration(v AWS_KafkaConnect_Connector_WorkerConfiguration) *AWS_KafkaConnect_Connector {
	t.WorkerConfiguration = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_KafkaConnect_Connector) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ConnectorArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConnectorArn
func (t *AWS_KafkaConnect_Connector) GetAtt__ConnectorArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_KafkaConnect_Connector__AttributesMap.ConnectorArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_KafkaConnect_Connector) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConnectorArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ConnectorArn
func (t *AWS_KafkaConnect_Connector) GetConventionalOutputAtt__ConnectorArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConnectorArn", t.GetAtt__ConnectorArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_KafkaConnect_Connector) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_KafkaConnect_Connector

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_KafkaConnect_Connector) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
