// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_athena

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Athena_NamedQuery)(nil)
	_ cfz.Resource                   = (*AWS_Athena_NamedQuery)(nil)
)

const (
	// AWS_Athena_NamedQuery__Type is the CloudFormation type for AWS::Athena::NamedQuery.
	AWS_Athena_NamedQuery__Type = "AWS::Athena::NamedQuery"
)

var (
	// AWS_Athena_NamedQuery__AttributesMap reports all the CloudFormation attributes for AWS::Athena::NamedQuery.
	AWS_Athena_NamedQuery__AttributesMap = struct {
		NamedQueryId string
	}{
		NamedQueryId: "NamedQueryId",
	}

	// AWS_Athena_NamedQuery__AttributesSlice reports all the CloudFormation attributes for AWS::Athena::NamedQuery.
	AWS_Athena_NamedQuery__AttributesSlice = []string{
		AWS_Athena_NamedQuery__AttributesMap.NamedQueryId,
	}
)

var (
	// AWS_Athena_NamedQuery__PropertiesMap reports all the CloudFormation properties for AWS::Athena::NamedQuery.
	AWS_Athena_NamedQuery__PropertiesMap = struct {
		Database    string
		Description string
		Name        string
		QueryString string
		WorkGroup   string
	}{
		Database:    "Database",
		Description: "Description",
		Name:        "Name",
		QueryString: "QueryString",
		WorkGroup:   "WorkGroup",
	}

	// AWS_Athena_NamedQuery__PropertiesSlice reports all the CloudFormation properties for AWS::Athena::NamedQuery.
	AWS_Athena_NamedQuery__PropertiesSlice = []string{
		AWS_Athena_NamedQuery__PropertiesMap.Database,
		AWS_Athena_NamedQuery__PropertiesMap.Description,
		AWS_Athena_NamedQuery__PropertiesMap.Name,
		AWS_Athena_NamedQuery__PropertiesMap.QueryString,
		AWS_Athena_NamedQuery__PropertiesMap.WorkGroup,
	}
)

// AWS_Athena_NamedQuery is a binding for AWS::Athena::NamedQuery.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html
type AWS_Athena_NamedQuery struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Database is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-database
	Database cfz.Expression[string] `json:"Database,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// QueryString is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-querystring
	QueryString cfz.Expression[string] `json:"QueryString,omitempty"`

	// WorkGroup is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-athena-namedquery.html#cfn-athena-namedquery-workgroup
	WorkGroup cfz.Expression[string] `json:"WorkGroup,omitempty"`
}

// New__AWS_Athena_NamedQuery initializes a new *AWS_Athena_NamedQuery.
func New__AWS_Athena_NamedQuery(logicalName string) *AWS_Athena_NamedQuery {
	return &AWS_Athena_NamedQuery{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Athena_NamedQuery) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Athena_NamedQuery) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Athena_NamedQuery) GetType() string {
	return AWS_Athena_NamedQuery__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Athena_NamedQuery) Set__LogicalName(v string) *AWS_Athena_NamedQuery {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Athena_NamedQuery) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Athena_NamedQuery {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Athena_NamedQuery) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Athena_NamedQuery {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Athena_NamedQuery) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Athena_NamedQuery {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Athena_NamedQuery) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Athena_NamedQuery {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Athena_NamedQuery) Set__RequestedOutputs(v []cfz.Output) *AWS_Athena_NamedQuery {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Athena_NamedQuery) Add__RequestedOutputs(v ...cfz.Output) *AWS_Athena_NamedQuery {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Database updates property "Database".
func (t *AWS_Athena_NamedQuery) Set__Database(v cfz.Expression[string]) *AWS_Athena_NamedQuery {
	t.Database = v
	return t
}

// SetV__Database updates property "Database".
func (t *AWS_Athena_NamedQuery) SetV__Database(v string) *AWS_Athena_NamedQuery {
	t.Database = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Athena_NamedQuery) Set__Description(v cfz.Expression[string]) *AWS_Athena_NamedQuery {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Athena_NamedQuery) SetV__Description(v string) *AWS_Athena_NamedQuery {
	t.Description = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Athena_NamedQuery) Set__Name(v cfz.Expression[string]) *AWS_Athena_NamedQuery {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Athena_NamedQuery) SetV__Name(v string) *AWS_Athena_NamedQuery {
	t.Name = cfz.V(v)
	return t
}

// Set__QueryString updates property "QueryString".
func (t *AWS_Athena_NamedQuery) Set__QueryString(v cfz.Expression[string]) *AWS_Athena_NamedQuery {
	t.QueryString = v
	return t
}

// SetV__QueryString updates property "QueryString".
func (t *AWS_Athena_NamedQuery) SetV__QueryString(v string) *AWS_Athena_NamedQuery {
	t.QueryString = cfz.V(v)
	return t
}

// Set__WorkGroup updates property "WorkGroup".
func (t *AWS_Athena_NamedQuery) Set__WorkGroup(v cfz.Expression[string]) *AWS_Athena_NamedQuery {
	t.WorkGroup = v
	return t
}

// SetV__WorkGroup updates property "WorkGroup".
func (t *AWS_Athena_NamedQuery) SetV__WorkGroup(v string) *AWS_Athena_NamedQuery {
	t.WorkGroup = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Athena_NamedQuery) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__NamedQueryId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NamedQueryId
func (t *AWS_Athena_NamedQuery) GetAtt__NamedQueryId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Athena_NamedQuery__AttributesMap.NamedQueryId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Athena_NamedQuery) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NamedQueryId returns a conventionally configured output for an attribute of this resource.
// Attribute: NamedQueryId
func (t *AWS_Athena_NamedQuery) GetConventionalOutputAtt__NamedQueryId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNamedQueryId", t.GetAtt__NamedQueryId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Athena_NamedQuery) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Athena_NamedQuery

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Athena_NamedQuery) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
