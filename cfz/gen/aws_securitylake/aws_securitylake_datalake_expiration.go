// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_securitylake

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_SecurityLake_DataLake_Expiration__Type is the CloudFormation type for AWS::SecurityLake::DataLake.Expiration.
	AWS_SecurityLake_DataLake_Expiration__Type = "AWS::SecurityLake::DataLake.Expiration"
)

var (
	// AWS_SecurityLake_DataLake_Expiration__PropertiesMap reports all the CloudFormation properties for AWS::SecurityLake::DataLake.Expiration.
	AWS_SecurityLake_DataLake_Expiration__PropertiesMap = struct {
		Days string
	}{
		Days: "Days",
	}

	// AWS_SecurityLake_DataLake_Expiration__PropertiesSlice reports all the CloudFormation properties for AWS::SecurityLake::DataLake.Expiration.
	AWS_SecurityLake_DataLake_Expiration__PropertiesSlice = []string{
		AWS_SecurityLake_DataLake_Expiration__PropertiesMap.Days,
	}
)

// AWS_SecurityLake_DataLake_Expiration is a binding for AWS::SecurityLake::DataLake.Expiration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-securitylake-datalake-expiration.html
type AWS_SecurityLake_DataLake_Expiration struct {
	// Days is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-securitylake-datalake-expiration.html#cfn-securitylake-datalake-expiration-days
	Days cfz.Expression[int32] `json:"Days,omitempty"`
}

// New__AWS_SecurityLake_DataLake_Expiration initializes a new AWS_SecurityLake_DataLake_Expiration.
func New__AWS_SecurityLake_DataLake_Expiration() AWS_SecurityLake_DataLake_Expiration {
	return AWS_SecurityLake_DataLake_Expiration{}
}

// GetType returns the CloudFormation type.
func (AWS_SecurityLake_DataLake_Expiration) GetType() string {
	return AWS_SecurityLake_DataLake_Expiration__Type
}

// Set__Days updates property "Days".
func (t AWS_SecurityLake_DataLake_Expiration) Set__Days(v cfz.Expression[int32]) AWS_SecurityLake_DataLake_Expiration {
	t.Days = v
	return t
}

// SetV__Days updates property "Days".
func (t AWS_SecurityLake_DataLake_Expiration) SetV__Days(v int32) AWS_SecurityLake_DataLake_Expiration {
	t.Days = cfz.V(v)
	return t
}
