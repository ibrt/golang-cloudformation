// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_securitylake

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SecurityLake_AwsLogSource)(nil)
	_ cfz.Resource                   = (*AWS_SecurityLake_AwsLogSource)(nil)
)

const (
	// AWS_SecurityLake_AwsLogSource__Type is the CloudFormation type for AWS::SecurityLake::AwsLogSource.
	AWS_SecurityLake_AwsLogSource__Type = "AWS::SecurityLake::AwsLogSource"
)

var (
	// AWS_SecurityLake_AwsLogSource__PropertiesMap reports all the CloudFormation properties for AWS::SecurityLake::AwsLogSource.
	AWS_SecurityLake_AwsLogSource__PropertiesMap = struct {
		Accounts      string
		DataLakeArn   string
		SourceName    string
		SourceVersion string
	}{
		Accounts:      "Accounts",
		DataLakeArn:   "DataLakeArn",
		SourceName:    "SourceName",
		SourceVersion: "SourceVersion",
	}

	// AWS_SecurityLake_AwsLogSource__PropertiesSlice reports all the CloudFormation properties for AWS::SecurityLake::AwsLogSource.
	AWS_SecurityLake_AwsLogSource__PropertiesSlice = []string{
		AWS_SecurityLake_AwsLogSource__PropertiesMap.Accounts,
		AWS_SecurityLake_AwsLogSource__PropertiesMap.DataLakeArn,
		AWS_SecurityLake_AwsLogSource__PropertiesMap.SourceName,
		AWS_SecurityLake_AwsLogSource__PropertiesMap.SourceVersion,
	}
)

// AWS_SecurityLake_AwsLogSource is a binding for AWS::SecurityLake::AwsLogSource.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html
type AWS_SecurityLake_AwsLogSource struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Accounts is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html#cfn-securitylake-awslogsource-accounts
	Accounts cfz.ExpressionSlice[string] `json:"Accounts,omitempty"`

	// DataLakeArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html#cfn-securitylake-awslogsource-datalakearn
	DataLakeArn cfz.Expression[string] `json:"DataLakeArn,omitempty"`

	// SourceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html#cfn-securitylake-awslogsource-sourcename
	SourceName cfz.Expression[string] `json:"SourceName,omitempty"`

	// SourceVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-securitylake-awslogsource.html#cfn-securitylake-awslogsource-sourceversion
	SourceVersion cfz.Expression[string] `json:"SourceVersion,omitempty"`
}

// New__AWS_SecurityLake_AwsLogSource initializes a new *AWS_SecurityLake_AwsLogSource.
func New__AWS_SecurityLake_AwsLogSource(logicalName string) *AWS_SecurityLake_AwsLogSource {
	return &AWS_SecurityLake_AwsLogSource{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SecurityLake_AwsLogSource) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SecurityLake_AwsLogSource) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SecurityLake_AwsLogSource) GetType() string {
	return AWS_SecurityLake_AwsLogSource__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SecurityLake_AwsLogSource) Set__LogicalName(v string) *AWS_SecurityLake_AwsLogSource {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SecurityLake_AwsLogSource) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SecurityLake_AwsLogSource {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SecurityLake_AwsLogSource) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SecurityLake_AwsLogSource {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SecurityLake_AwsLogSource) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SecurityLake_AwsLogSource {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SecurityLake_AwsLogSource) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SecurityLake_AwsLogSource {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SecurityLake_AwsLogSource) Set__RequestedOutputs(v []cfz.Output) *AWS_SecurityLake_AwsLogSource {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SecurityLake_AwsLogSource) Add__RequestedOutputs(v ...cfz.Output) *AWS_SecurityLake_AwsLogSource {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Accounts updates property "Accounts".
func (t *AWS_SecurityLake_AwsLogSource) Set__Accounts(v cfz.ExpressionSlice[string]) *AWS_SecurityLake_AwsLogSource {
	t.Accounts = v
	return t
}

// SetS__Accounts updates property "Accounts".
func (t *AWS_SecurityLake_AwsLogSource) SetS__Accounts(v ...cfz.Expression[string]) *AWS_SecurityLake_AwsLogSource {
	t.Accounts = cfz.S(v...)
	return t
}

// SetSV__Accounts updates property "Accounts".
func (t *AWS_SecurityLake_AwsLogSource) SetSV__Accounts(v ...string) *AWS_SecurityLake_AwsLogSource {
	t.Accounts = cfz.SV(v...)
	return t
}

// Set__DataLakeArn updates property "DataLakeArn".
func (t *AWS_SecurityLake_AwsLogSource) Set__DataLakeArn(v cfz.Expression[string]) *AWS_SecurityLake_AwsLogSource {
	t.DataLakeArn = v
	return t
}

// SetV__DataLakeArn updates property "DataLakeArn".
func (t *AWS_SecurityLake_AwsLogSource) SetV__DataLakeArn(v string) *AWS_SecurityLake_AwsLogSource {
	t.DataLakeArn = cfz.V(v)
	return t
}

// Set__SourceName updates property "SourceName".
func (t *AWS_SecurityLake_AwsLogSource) Set__SourceName(v cfz.Expression[string]) *AWS_SecurityLake_AwsLogSource {
	t.SourceName = v
	return t
}

// SetV__SourceName updates property "SourceName".
func (t *AWS_SecurityLake_AwsLogSource) SetV__SourceName(v string) *AWS_SecurityLake_AwsLogSource {
	t.SourceName = cfz.V(v)
	return t
}

// Set__SourceVersion updates property "SourceVersion".
func (t *AWS_SecurityLake_AwsLogSource) Set__SourceVersion(v cfz.Expression[string]) *AWS_SecurityLake_AwsLogSource {
	t.SourceVersion = v
	return t
}

// SetV__SourceVersion updates property "SourceVersion".
func (t *AWS_SecurityLake_AwsLogSource) SetV__SourceVersion(v string) *AWS_SecurityLake_AwsLogSource {
	t.SourceVersion = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SecurityLake_AwsLogSource) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SecurityLake_AwsLogSource) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SecurityLake_AwsLogSource) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SecurityLake_AwsLogSource

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SecurityLake_AwsLogSource) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
