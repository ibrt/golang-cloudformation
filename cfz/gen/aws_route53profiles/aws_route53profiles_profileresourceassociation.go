// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_route53profiles

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Route53Profiles_ProfileResourceAssociation)(nil)
	_ cfz.Resource                   = (*AWS_Route53Profiles_ProfileResourceAssociation)(nil)
)

const (
	// AWS_Route53Profiles_ProfileResourceAssociation__Type is the CloudFormation type for AWS::Route53Profiles::ProfileResourceAssociation.
	AWS_Route53Profiles_ProfileResourceAssociation__Type = "AWS::Route53Profiles::ProfileResourceAssociation"
)

var (
	// AWS_Route53Profiles_ProfileResourceAssociation__AttributesMap reports all the CloudFormation attributes for AWS::Route53Profiles::ProfileResourceAssociation.
	AWS_Route53Profiles_ProfileResourceAssociation__AttributesMap = struct {
		Id           string
		ResourceType string
	}{
		Id:           "Id",
		ResourceType: "ResourceType",
	}

	// AWS_Route53Profiles_ProfileResourceAssociation__AttributesSlice reports all the CloudFormation attributes for AWS::Route53Profiles::ProfileResourceAssociation.
	AWS_Route53Profiles_ProfileResourceAssociation__AttributesSlice = []string{
		AWS_Route53Profiles_ProfileResourceAssociation__AttributesMap.Id,
		AWS_Route53Profiles_ProfileResourceAssociation__AttributesMap.ResourceType,
	}
)

var (
	// AWS_Route53Profiles_ProfileResourceAssociation__PropertiesMap reports all the CloudFormation properties for AWS::Route53Profiles::ProfileResourceAssociation.
	AWS_Route53Profiles_ProfileResourceAssociation__PropertiesMap = struct {
		Name               string
		ProfileId          string
		ResourceArn        string
		ResourceProperties string
	}{
		Name:               "Name",
		ProfileId:          "ProfileId",
		ResourceArn:        "ResourceArn",
		ResourceProperties: "ResourceProperties",
	}

	// AWS_Route53Profiles_ProfileResourceAssociation__PropertiesSlice reports all the CloudFormation properties for AWS::Route53Profiles::ProfileResourceAssociation.
	AWS_Route53Profiles_ProfileResourceAssociation__PropertiesSlice = []string{
		AWS_Route53Profiles_ProfileResourceAssociation__PropertiesMap.Name,
		AWS_Route53Profiles_ProfileResourceAssociation__PropertiesMap.ProfileId,
		AWS_Route53Profiles_ProfileResourceAssociation__PropertiesMap.ResourceArn,
		AWS_Route53Profiles_ProfileResourceAssociation__PropertiesMap.ResourceProperties,
	}
)

// AWS_Route53Profiles_ProfileResourceAssociation is a binding for AWS::Route53Profiles::ProfileResourceAssociation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html
type AWS_Route53Profiles_ProfileResourceAssociation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html#cfn-route53profiles-profileresourceassociation-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// ProfileId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html#cfn-route53profiles-profileresourceassociation-profileid
	ProfileId cfz.Expression[string] `json:"ProfileId,omitempty"`

	// ResourceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html#cfn-route53profiles-profileresourceassociation-resourcearn
	ResourceArn cfz.Expression[string] `json:"ResourceArn,omitempty"`

	// ResourceProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53profiles-profileresourceassociation.html#cfn-route53profiles-profileresourceassociation-resourceproperties
	ResourceProperties cfz.Expression[string] `json:"ResourceProperties,omitempty"`
}

// New__AWS_Route53Profiles_ProfileResourceAssociation initializes a new *AWS_Route53Profiles_ProfileResourceAssociation.
func New__AWS_Route53Profiles_ProfileResourceAssociation(logicalName string) *AWS_Route53Profiles_ProfileResourceAssociation {
	return &AWS_Route53Profiles_ProfileResourceAssociation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Route53Profiles_ProfileResourceAssociation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Route53Profiles_ProfileResourceAssociation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Route53Profiles_ProfileResourceAssociation) GetType() string {
	return AWS_Route53Profiles_ProfileResourceAssociation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Set__LogicalName(v string) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Set__RequestedOutputs(v []cfz.Output) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Add__RequestedOutputs(v ...cfz.Output) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Set__Name(v cfz.Expression[string]) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) SetV__Name(v string) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.Name = cfz.V(v)
	return t
}

// Set__ProfileId updates property "ProfileId".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Set__ProfileId(v cfz.Expression[string]) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.ProfileId = v
	return t
}

// SetV__ProfileId updates property "ProfileId".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) SetV__ProfileId(v string) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.ProfileId = cfz.V(v)
	return t
}

// Set__ResourceArn updates property "ResourceArn".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Set__ResourceArn(v cfz.Expression[string]) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.ResourceArn = v
	return t
}

// SetV__ResourceArn updates property "ResourceArn".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) SetV__ResourceArn(v string) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.ResourceArn = cfz.V(v)
	return t
}

// Set__ResourceProperties updates property "ResourceProperties".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Set__ResourceProperties(v cfz.Expression[string]) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.ResourceProperties = v
	return t
}

// SetV__ResourceProperties updates property "ResourceProperties".
func (t *AWS_Route53Profiles_ProfileResourceAssociation) SetV__ResourceProperties(v string) *AWS_Route53Profiles_ProfileResourceAssociation {
	t.ResourceProperties = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Route53Profiles_ProfileResourceAssociation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Route53Profiles_ProfileResourceAssociation) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Profiles_ProfileResourceAssociation__AttributesMap.Id))
}

// GetAtt__ResourceType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceType
func (t *AWS_Route53Profiles_ProfileResourceAssociation) GetAtt__ResourceType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Profiles_ProfileResourceAssociation__AttributesMap.ResourceType))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Route53Profiles_ProfileResourceAssociation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Route53Profiles_ProfileResourceAssociation) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceType returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceType
func (t *AWS_Route53Profiles_ProfileResourceAssociation) GetConventionalOutputAtt__ResourceType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceType", t.GetAtt__ResourceType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Route53Profiles_ProfileResourceAssociation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Route53Profiles_ProfileResourceAssociation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Route53Profiles_ProfileResourceAssociation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
