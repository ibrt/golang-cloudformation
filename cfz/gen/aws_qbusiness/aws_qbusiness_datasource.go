// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_qbusiness

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_QBusiness_DataSource)(nil)
	_ cfz.Resource                   = (*AWS_QBusiness_DataSource)(nil)
)

const (
	// AWS_QBusiness_DataSource__Type is the CloudFormation type for AWS::QBusiness::DataSource.
	AWS_QBusiness_DataSource__Type = "AWS::QBusiness::DataSource"
)

var (
	// AWS_QBusiness_DataSource__AttributesMap reports all the CloudFormation attributes for AWS::QBusiness::DataSource.
	AWS_QBusiness_DataSource__AttributesMap = struct {
		CreatedAt     string
		DataSourceArn string
		DataSourceId  string
		Status        string
		Type          string
		UpdatedAt     string
	}{
		CreatedAt:     "CreatedAt",
		DataSourceArn: "DataSourceArn",
		DataSourceId:  "DataSourceId",
		Status:        "Status",
		Type:          "Type",
		UpdatedAt:     "UpdatedAt",
	}

	// AWS_QBusiness_DataSource__AttributesSlice reports all the CloudFormation attributes for AWS::QBusiness::DataSource.
	AWS_QBusiness_DataSource__AttributesSlice = []string{
		AWS_QBusiness_DataSource__AttributesMap.CreatedAt,
		AWS_QBusiness_DataSource__AttributesMap.DataSourceArn,
		AWS_QBusiness_DataSource__AttributesMap.DataSourceId,
		AWS_QBusiness_DataSource__AttributesMap.Status,
		AWS_QBusiness_DataSource__AttributesMap.Type,
		AWS_QBusiness_DataSource__AttributesMap.UpdatedAt,
	}
)

var (
	// AWS_QBusiness_DataSource__PropertiesMap reports all the CloudFormation properties for AWS::QBusiness::DataSource.
	AWS_QBusiness_DataSource__PropertiesMap = struct {
		ApplicationId                   string
		Configuration                   string
		Description                     string
		DisplayName                     string
		DocumentEnrichmentConfiguration string
		IndexId                         string
		RoleArn                         string
		SyncSchedule                    string
		Tags                            string
		VpcConfiguration                string
	}{
		ApplicationId:                   "ApplicationId",
		Configuration:                   "Configuration",
		Description:                     "Description",
		DisplayName:                     "DisplayName",
		DocumentEnrichmentConfiguration: "DocumentEnrichmentConfiguration",
		IndexId:                         "IndexId",
		RoleArn:                         "RoleArn",
		SyncSchedule:                    "SyncSchedule",
		Tags:                            "Tags",
		VpcConfiguration:                "VpcConfiguration",
	}

	// AWS_QBusiness_DataSource__PropertiesSlice reports all the CloudFormation properties for AWS::QBusiness::DataSource.
	AWS_QBusiness_DataSource__PropertiesSlice = []string{
		AWS_QBusiness_DataSource__PropertiesMap.ApplicationId,
		AWS_QBusiness_DataSource__PropertiesMap.Configuration,
		AWS_QBusiness_DataSource__PropertiesMap.Description,
		AWS_QBusiness_DataSource__PropertiesMap.DisplayName,
		AWS_QBusiness_DataSource__PropertiesMap.DocumentEnrichmentConfiguration,
		AWS_QBusiness_DataSource__PropertiesMap.IndexId,
		AWS_QBusiness_DataSource__PropertiesMap.RoleArn,
		AWS_QBusiness_DataSource__PropertiesMap.SyncSchedule,
		AWS_QBusiness_DataSource__PropertiesMap.Tags,
		AWS_QBusiness_DataSource__PropertiesMap.VpcConfiguration,
	}
)

// AWS_QBusiness_DataSource is a binding for AWS::QBusiness::DataSource.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html
type AWS_QBusiness_DataSource struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-applicationid
	ApplicationId cfz.Expression[string] `json:"ApplicationId,omitempty"`

	// Configuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-configuration
	Configuration cfz.Expression[json.RawMessage] `json:"Configuration,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DisplayName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-displayname
	DisplayName cfz.Expression[string] `json:"DisplayName,omitempty"`

	// DocumentEnrichmentConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-documentenrichmentconfiguration
	DocumentEnrichmentConfiguration cfz.Expression[AWS_QBusiness_DataSource_DocumentEnrichmentConfiguration] `json:"DocumentEnrichmentConfiguration,omitempty"`

	// IndexId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-indexid
	IndexId cfz.Expression[string] `json:"IndexId,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// SyncSchedule is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-syncschedule
	SyncSchedule cfz.Expression[string] `json:"SyncSchedule,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-qbusiness-datasource.html#cfn-qbusiness-datasource-vpcconfiguration
	VpcConfiguration cfz.Expression[AWS_QBusiness_DataSource_DataSourceVpcConfiguration] `json:"VpcConfiguration,omitempty"`
}

// New__AWS_QBusiness_DataSource initializes a new *AWS_QBusiness_DataSource.
func New__AWS_QBusiness_DataSource(logicalName string) *AWS_QBusiness_DataSource {
	return &AWS_QBusiness_DataSource{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_QBusiness_DataSource) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_QBusiness_DataSource) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_QBusiness_DataSource) GetType() string {
	return AWS_QBusiness_DataSource__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_QBusiness_DataSource) Set__LogicalName(v string) *AWS_QBusiness_DataSource {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_QBusiness_DataSource) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_QBusiness_DataSource {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_QBusiness_DataSource) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_QBusiness_DataSource {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_QBusiness_DataSource) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_QBusiness_DataSource {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_QBusiness_DataSource) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_QBusiness_DataSource {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_QBusiness_DataSource) Set__RequestedOutputs(v []cfz.Output) *AWS_QBusiness_DataSource {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_QBusiness_DataSource) Add__RequestedOutputs(v ...cfz.Output) *AWS_QBusiness_DataSource {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationId updates property "ApplicationId".
func (t *AWS_QBusiness_DataSource) Set__ApplicationId(v cfz.Expression[string]) *AWS_QBusiness_DataSource {
	t.ApplicationId = v
	return t
}

// SetV__ApplicationId updates property "ApplicationId".
func (t *AWS_QBusiness_DataSource) SetV__ApplicationId(v string) *AWS_QBusiness_DataSource {
	t.ApplicationId = cfz.V(v)
	return t
}

// Set__Configuration updates property "Configuration".
func (t *AWS_QBusiness_DataSource) Set__Configuration(v cfz.Expression[json.RawMessage]) *AWS_QBusiness_DataSource {
	t.Configuration = v
	return t
}

// SetV__Configuration updates property "Configuration".
func (t *AWS_QBusiness_DataSource) SetV__Configuration(v json.RawMessage) *AWS_QBusiness_DataSource {
	t.Configuration = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_QBusiness_DataSource) Set__Description(v cfz.Expression[string]) *AWS_QBusiness_DataSource {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_QBusiness_DataSource) SetV__Description(v string) *AWS_QBusiness_DataSource {
	t.Description = cfz.V(v)
	return t
}

// Set__DisplayName updates property "DisplayName".
func (t *AWS_QBusiness_DataSource) Set__DisplayName(v cfz.Expression[string]) *AWS_QBusiness_DataSource {
	t.DisplayName = v
	return t
}

// SetV__DisplayName updates property "DisplayName".
func (t *AWS_QBusiness_DataSource) SetV__DisplayName(v string) *AWS_QBusiness_DataSource {
	t.DisplayName = cfz.V(v)
	return t
}

// Set__DocumentEnrichmentConfiguration updates property "DocumentEnrichmentConfiguration".
func (t *AWS_QBusiness_DataSource) Set__DocumentEnrichmentConfiguration(v cfz.Expression[AWS_QBusiness_DataSource_DocumentEnrichmentConfiguration]) *AWS_QBusiness_DataSource {
	t.DocumentEnrichmentConfiguration = v
	return t
}

// SetV__DocumentEnrichmentConfiguration updates property "DocumentEnrichmentConfiguration".
func (t *AWS_QBusiness_DataSource) SetV__DocumentEnrichmentConfiguration(v AWS_QBusiness_DataSource_DocumentEnrichmentConfiguration) *AWS_QBusiness_DataSource {
	t.DocumentEnrichmentConfiguration = cfz.V(v)
	return t
}

// Set__IndexId updates property "IndexId".
func (t *AWS_QBusiness_DataSource) Set__IndexId(v cfz.Expression[string]) *AWS_QBusiness_DataSource {
	t.IndexId = v
	return t
}

// SetV__IndexId updates property "IndexId".
func (t *AWS_QBusiness_DataSource) SetV__IndexId(v string) *AWS_QBusiness_DataSource {
	t.IndexId = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_QBusiness_DataSource) Set__RoleArn(v cfz.Expression[string]) *AWS_QBusiness_DataSource {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_QBusiness_DataSource) SetV__RoleArn(v string) *AWS_QBusiness_DataSource {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__SyncSchedule updates property "SyncSchedule".
func (t *AWS_QBusiness_DataSource) Set__SyncSchedule(v cfz.Expression[string]) *AWS_QBusiness_DataSource {
	t.SyncSchedule = v
	return t
}

// SetV__SyncSchedule updates property "SyncSchedule".
func (t *AWS_QBusiness_DataSource) SetV__SyncSchedule(v string) *AWS_QBusiness_DataSource {
	t.SyncSchedule = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_QBusiness_DataSource) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_QBusiness_DataSource {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_QBusiness_DataSource) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_QBusiness_DataSource {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_QBusiness_DataSource) SetSV__Tags(v ...cfz.Tag) *AWS_QBusiness_DataSource {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcConfiguration updates property "VpcConfiguration".
func (t *AWS_QBusiness_DataSource) Set__VpcConfiguration(v cfz.Expression[AWS_QBusiness_DataSource_DataSourceVpcConfiguration]) *AWS_QBusiness_DataSource {
	t.VpcConfiguration = v
	return t
}

// SetV__VpcConfiguration updates property "VpcConfiguration".
func (t *AWS_QBusiness_DataSource) SetV__VpcConfiguration(v AWS_QBusiness_DataSource_DataSourceVpcConfiguration) *AWS_QBusiness_DataSource {
	t.VpcConfiguration = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_QBusiness_DataSource) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_QBusiness_DataSource) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QBusiness_DataSource__AttributesMap.CreatedAt))
}

// GetAtt__DataSourceArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DataSourceArn
func (t *AWS_QBusiness_DataSource) GetAtt__DataSourceArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QBusiness_DataSource__AttributesMap.DataSourceArn))
}

// GetAtt__DataSourceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DataSourceId
func (t *AWS_QBusiness_DataSource) GetAtt__DataSourceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QBusiness_DataSource__AttributesMap.DataSourceId))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_QBusiness_DataSource) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QBusiness_DataSource__AttributesMap.Status))
}

// GetAtt__Type returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Type
func (t *AWS_QBusiness_DataSource) GetAtt__Type() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QBusiness_DataSource__AttributesMap.Type))
}

// GetAtt__UpdatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedAt
func (t *AWS_QBusiness_DataSource) GetAtt__UpdatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QBusiness_DataSource__AttributesMap.UpdatedAt))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_QBusiness_DataSource) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_QBusiness_DataSource) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DataSourceArn returns a conventionally configured output for an attribute of this resource.
// Attribute: DataSourceArn
func (t *AWS_QBusiness_DataSource) GetConventionalOutputAtt__DataSourceArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDataSourceArn", t.GetAtt__DataSourceArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DataSourceId returns a conventionally configured output for an attribute of this resource.
// Attribute: DataSourceId
func (t *AWS_QBusiness_DataSource) GetConventionalOutputAtt__DataSourceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDataSourceId", t.GetAtt__DataSourceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_QBusiness_DataSource) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Type returns a conventionally configured output for an attribute of this resource.
// Attribute: Type
func (t *AWS_QBusiness_DataSource) GetConventionalOutputAtt__Type(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttType", t.GetAtt__Type())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedAt
func (t *AWS_QBusiness_DataSource) GetConventionalOutputAtt__UpdatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedAt", t.GetAtt__UpdatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_QBusiness_DataSource) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_QBusiness_DataSource

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_QBusiness_DataSource) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
