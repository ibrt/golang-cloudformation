// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_entityresolution

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EntityResolution_IdNamespace)(nil)
	_ cfz.Resource                   = (*AWS_EntityResolution_IdNamespace)(nil)
)

const (
	// AWS_EntityResolution_IdNamespace__Type is the CloudFormation type for AWS::EntityResolution::IdNamespace.
	AWS_EntityResolution_IdNamespace__Type = "AWS::EntityResolution::IdNamespace"
)

var (
	// AWS_EntityResolution_IdNamespace__AttributesMap reports all the CloudFormation attributes for AWS::EntityResolution::IdNamespace.
	AWS_EntityResolution_IdNamespace__AttributesMap = struct {
		CreatedAt      string
		IdNamespaceArn string
		UpdatedAt      string
	}{
		CreatedAt:      "CreatedAt",
		IdNamespaceArn: "IdNamespaceArn",
		UpdatedAt:      "UpdatedAt",
	}

	// AWS_EntityResolution_IdNamespace__AttributesSlice reports all the CloudFormation attributes for AWS::EntityResolution::IdNamespace.
	AWS_EntityResolution_IdNamespace__AttributesSlice = []string{
		AWS_EntityResolution_IdNamespace__AttributesMap.CreatedAt,
		AWS_EntityResolution_IdNamespace__AttributesMap.IdNamespaceArn,
		AWS_EntityResolution_IdNamespace__AttributesMap.UpdatedAt,
	}
)

var (
	// AWS_EntityResolution_IdNamespace__PropertiesMap reports all the CloudFormation properties for AWS::EntityResolution::IdNamespace.
	AWS_EntityResolution_IdNamespace__PropertiesMap = struct {
		Description                 string
		IdMappingWorkflowProperties string
		IdNamespaceName             string
		InputSourceConfig           string
		RoleArn                     string
		Tags                        string
		Type                        string
	}{
		Description:                 "Description",
		IdMappingWorkflowProperties: "IdMappingWorkflowProperties",
		IdNamespaceName:             "IdNamespaceName",
		InputSourceConfig:           "InputSourceConfig",
		RoleArn:                     "RoleArn",
		Tags:                        "Tags",
		Type:                        "Type",
	}

	// AWS_EntityResolution_IdNamespace__PropertiesSlice reports all the CloudFormation properties for AWS::EntityResolution::IdNamespace.
	AWS_EntityResolution_IdNamespace__PropertiesSlice = []string{
		AWS_EntityResolution_IdNamespace__PropertiesMap.Description,
		AWS_EntityResolution_IdNamespace__PropertiesMap.IdMappingWorkflowProperties,
		AWS_EntityResolution_IdNamespace__PropertiesMap.IdNamespaceName,
		AWS_EntityResolution_IdNamespace__PropertiesMap.InputSourceConfig,
		AWS_EntityResolution_IdNamespace__PropertiesMap.RoleArn,
		AWS_EntityResolution_IdNamespace__PropertiesMap.Tags,
		AWS_EntityResolution_IdNamespace__PropertiesMap.Type,
	}
)

// AWS_EntityResolution_IdNamespace is a binding for AWS::EntityResolution::IdNamespace.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html
type AWS_EntityResolution_IdNamespace struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// IdMappingWorkflowProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-idmappingworkflowproperties
	IdMappingWorkflowProperties cfz.ExpressionSlice[AWS_EntityResolution_IdNamespace_IdNamespaceIdMappingWorkflowProperties] `json:"IdMappingWorkflowProperties,omitempty"`

	// IdNamespaceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-idnamespacename
	IdNamespaceName cfz.Expression[string] `json:"IdNamespaceName,omitempty"`

	// InputSourceConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-inputsourceconfig
	InputSourceConfig cfz.ExpressionSlice[AWS_EntityResolution_IdNamespace_IdNamespaceInputSource] `json:"InputSourceConfig,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idnamespace.html#cfn-entityresolution-idnamespace-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_EntityResolution_IdNamespace initializes a new *AWS_EntityResolution_IdNamespace.
func New__AWS_EntityResolution_IdNamespace(logicalName string) *AWS_EntityResolution_IdNamespace {
	return &AWS_EntityResolution_IdNamespace{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EntityResolution_IdNamespace) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EntityResolution_IdNamespace) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EntityResolution_IdNamespace) GetType() string {
	return AWS_EntityResolution_IdNamespace__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EntityResolution_IdNamespace) Set__LogicalName(v string) *AWS_EntityResolution_IdNamespace {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EntityResolution_IdNamespace) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EntityResolution_IdNamespace {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EntityResolution_IdNamespace) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EntityResolution_IdNamespace {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EntityResolution_IdNamespace) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EntityResolution_IdNamespace {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EntityResolution_IdNamespace) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EntityResolution_IdNamespace {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EntityResolution_IdNamespace) Set__RequestedOutputs(v []cfz.Output) *AWS_EntityResolution_IdNamespace {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EntityResolution_IdNamespace) Add__RequestedOutputs(v ...cfz.Output) *AWS_EntityResolution_IdNamespace {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EntityResolution_IdNamespace) Set__Description(v cfz.Expression[string]) *AWS_EntityResolution_IdNamespace {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EntityResolution_IdNamespace) SetV__Description(v string) *AWS_EntityResolution_IdNamespace {
	t.Description = cfz.V(v)
	return t
}

// Set__IdMappingWorkflowProperties updates property "IdMappingWorkflowProperties".
func (t *AWS_EntityResolution_IdNamespace) Set__IdMappingWorkflowProperties(v cfz.ExpressionSlice[AWS_EntityResolution_IdNamespace_IdNamespaceIdMappingWorkflowProperties]) *AWS_EntityResolution_IdNamespace {
	t.IdMappingWorkflowProperties = v
	return t
}

// SetS__IdMappingWorkflowProperties updates property "IdMappingWorkflowProperties".
func (t *AWS_EntityResolution_IdNamespace) SetS__IdMappingWorkflowProperties(v ...cfz.Expression[AWS_EntityResolution_IdNamespace_IdNamespaceIdMappingWorkflowProperties]) *AWS_EntityResolution_IdNamespace {
	t.IdMappingWorkflowProperties = cfz.S(v...)
	return t
}

// SetSV__IdMappingWorkflowProperties updates property "IdMappingWorkflowProperties".
func (t *AWS_EntityResolution_IdNamespace) SetSV__IdMappingWorkflowProperties(v ...AWS_EntityResolution_IdNamespace_IdNamespaceIdMappingWorkflowProperties) *AWS_EntityResolution_IdNamespace {
	t.IdMappingWorkflowProperties = cfz.SV(v...)
	return t
}

// Set__IdNamespaceName updates property "IdNamespaceName".
func (t *AWS_EntityResolution_IdNamespace) Set__IdNamespaceName(v cfz.Expression[string]) *AWS_EntityResolution_IdNamespace {
	t.IdNamespaceName = v
	return t
}

// SetV__IdNamespaceName updates property "IdNamespaceName".
func (t *AWS_EntityResolution_IdNamespace) SetV__IdNamespaceName(v string) *AWS_EntityResolution_IdNamespace {
	t.IdNamespaceName = cfz.V(v)
	return t
}

// Set__InputSourceConfig updates property "InputSourceConfig".
func (t *AWS_EntityResolution_IdNamespace) Set__InputSourceConfig(v cfz.ExpressionSlice[AWS_EntityResolution_IdNamespace_IdNamespaceInputSource]) *AWS_EntityResolution_IdNamespace {
	t.InputSourceConfig = v
	return t
}

// SetS__InputSourceConfig updates property "InputSourceConfig".
func (t *AWS_EntityResolution_IdNamespace) SetS__InputSourceConfig(v ...cfz.Expression[AWS_EntityResolution_IdNamespace_IdNamespaceInputSource]) *AWS_EntityResolution_IdNamespace {
	t.InputSourceConfig = cfz.S(v...)
	return t
}

// SetSV__InputSourceConfig updates property "InputSourceConfig".
func (t *AWS_EntityResolution_IdNamespace) SetSV__InputSourceConfig(v ...AWS_EntityResolution_IdNamespace_IdNamespaceInputSource) *AWS_EntityResolution_IdNamespace {
	t.InputSourceConfig = cfz.SV(v...)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_EntityResolution_IdNamespace) Set__RoleArn(v cfz.Expression[string]) *AWS_EntityResolution_IdNamespace {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_EntityResolution_IdNamespace) SetV__RoleArn(v string) *AWS_EntityResolution_IdNamespace {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EntityResolution_IdNamespace) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EntityResolution_IdNamespace {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EntityResolution_IdNamespace) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EntityResolution_IdNamespace {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EntityResolution_IdNamespace) SetSV__Tags(v ...cfz.Tag) *AWS_EntityResolution_IdNamespace {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_EntityResolution_IdNamespace) Set__Type(v cfz.Expression[string]) *AWS_EntityResolution_IdNamespace {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_EntityResolution_IdNamespace) SetV__Type(v string) *AWS_EntityResolution_IdNamespace {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EntityResolution_IdNamespace) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_EntityResolution_IdNamespace) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EntityResolution_IdNamespace__AttributesMap.CreatedAt))
}

// GetAtt__IdNamespaceArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IdNamespaceArn
func (t *AWS_EntityResolution_IdNamespace) GetAtt__IdNamespaceArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EntityResolution_IdNamespace__AttributesMap.IdNamespaceArn))
}

// GetAtt__UpdatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedAt
func (t *AWS_EntityResolution_IdNamespace) GetAtt__UpdatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EntityResolution_IdNamespace__AttributesMap.UpdatedAt))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EntityResolution_IdNamespace) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_EntityResolution_IdNamespace) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IdNamespaceArn returns a conventionally configured output for an attribute of this resource.
// Attribute: IdNamespaceArn
func (t *AWS_EntityResolution_IdNamespace) GetConventionalOutputAtt__IdNamespaceArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIdNamespaceArn", t.GetAtt__IdNamespaceArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedAt
func (t *AWS_EntityResolution_IdNamespace) GetConventionalOutputAtt__UpdatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedAt", t.GetAtt__UpdatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EntityResolution_IdNamespace) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EntityResolution_IdNamespace

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EntityResolution_IdNamespace) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
