// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_entityresolution

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EntityResolution_IdMappingWorkflow)(nil)
	_ cfz.Resource                   = (*AWS_EntityResolution_IdMappingWorkflow)(nil)
)

const (
	// AWS_EntityResolution_IdMappingWorkflow__Type is the CloudFormation type for AWS::EntityResolution::IdMappingWorkflow.
	AWS_EntityResolution_IdMappingWorkflow__Type = "AWS::EntityResolution::IdMappingWorkflow"
)

var (
	// AWS_EntityResolution_IdMappingWorkflow__AttributesMap reports all the CloudFormation attributes for AWS::EntityResolution::IdMappingWorkflow.
	AWS_EntityResolution_IdMappingWorkflow__AttributesMap = struct {
		CreatedAt   string
		UpdatedAt   string
		WorkflowArn string
	}{
		CreatedAt:   "CreatedAt",
		UpdatedAt:   "UpdatedAt",
		WorkflowArn: "WorkflowArn",
	}

	// AWS_EntityResolution_IdMappingWorkflow__AttributesSlice reports all the CloudFormation attributes for AWS::EntityResolution::IdMappingWorkflow.
	AWS_EntityResolution_IdMappingWorkflow__AttributesSlice = []string{
		AWS_EntityResolution_IdMappingWorkflow__AttributesMap.CreatedAt,
		AWS_EntityResolution_IdMappingWorkflow__AttributesMap.UpdatedAt,
		AWS_EntityResolution_IdMappingWorkflow__AttributesMap.WorkflowArn,
	}
)

var (
	// AWS_EntityResolution_IdMappingWorkflow__PropertiesMap reports all the CloudFormation properties for AWS::EntityResolution::IdMappingWorkflow.
	AWS_EntityResolution_IdMappingWorkflow__PropertiesMap = struct {
		Description         string
		IdMappingTechniques string
		InputSourceConfig   string
		OutputSourceConfig  string
		RoleArn             string
		Tags                string
		WorkflowName        string
	}{
		Description:         "Description",
		IdMappingTechniques: "IdMappingTechniques",
		InputSourceConfig:   "InputSourceConfig",
		OutputSourceConfig:  "OutputSourceConfig",
		RoleArn:             "RoleArn",
		Tags:                "Tags",
		WorkflowName:        "WorkflowName",
	}

	// AWS_EntityResolution_IdMappingWorkflow__PropertiesSlice reports all the CloudFormation properties for AWS::EntityResolution::IdMappingWorkflow.
	AWS_EntityResolution_IdMappingWorkflow__PropertiesSlice = []string{
		AWS_EntityResolution_IdMappingWorkflow__PropertiesMap.Description,
		AWS_EntityResolution_IdMappingWorkflow__PropertiesMap.IdMappingTechniques,
		AWS_EntityResolution_IdMappingWorkflow__PropertiesMap.InputSourceConfig,
		AWS_EntityResolution_IdMappingWorkflow__PropertiesMap.OutputSourceConfig,
		AWS_EntityResolution_IdMappingWorkflow__PropertiesMap.RoleArn,
		AWS_EntityResolution_IdMappingWorkflow__PropertiesMap.Tags,
		AWS_EntityResolution_IdMappingWorkflow__PropertiesMap.WorkflowName,
	}
)

// AWS_EntityResolution_IdMappingWorkflow is a binding for AWS::EntityResolution::IdMappingWorkflow.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html
type AWS_EntityResolution_IdMappingWorkflow struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// IdMappingTechniques is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-idmappingtechniques
	IdMappingTechniques cfz.Expression[AWS_EntityResolution_IdMappingWorkflow_IdMappingTechniques] `json:"IdMappingTechniques,omitempty"`

	// InputSourceConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-inputsourceconfig
	InputSourceConfig cfz.ExpressionSlice[AWS_EntityResolution_IdMappingWorkflow_IdMappingWorkflowInputSource] `json:"InputSourceConfig,omitempty"`

	// OutputSourceConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-outputsourceconfig
	OutputSourceConfig cfz.ExpressionSlice[AWS_EntityResolution_IdMappingWorkflow_IdMappingWorkflowOutputSource] `json:"OutputSourceConfig,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// WorkflowName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-entityresolution-idmappingworkflow.html#cfn-entityresolution-idmappingworkflow-workflowname
	WorkflowName cfz.Expression[string] `json:"WorkflowName,omitempty"`
}

// New__AWS_EntityResolution_IdMappingWorkflow initializes a new *AWS_EntityResolution_IdMappingWorkflow.
func New__AWS_EntityResolution_IdMappingWorkflow(logicalName string) *AWS_EntityResolution_IdMappingWorkflow {
	return &AWS_EntityResolution_IdMappingWorkflow{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EntityResolution_IdMappingWorkflow) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EntityResolution_IdMappingWorkflow) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EntityResolution_IdMappingWorkflow) GetType() string {
	return AWS_EntityResolution_IdMappingWorkflow__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__LogicalName(v string) *AWS_EntityResolution_IdMappingWorkflow {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EntityResolution_IdMappingWorkflow {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EntityResolution_IdMappingWorkflow) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EntityResolution_IdMappingWorkflow {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EntityResolution_IdMappingWorkflow {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EntityResolution_IdMappingWorkflow {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__RequestedOutputs(v []cfz.Output) *AWS_EntityResolution_IdMappingWorkflow {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EntityResolution_IdMappingWorkflow) Add__RequestedOutputs(v ...cfz.Output) *AWS_EntityResolution_IdMappingWorkflow {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__Description(v cfz.Expression[string]) *AWS_EntityResolution_IdMappingWorkflow {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetV__Description(v string) *AWS_EntityResolution_IdMappingWorkflow {
	t.Description = cfz.V(v)
	return t
}

// Set__IdMappingTechniques updates property "IdMappingTechniques".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__IdMappingTechniques(v cfz.Expression[AWS_EntityResolution_IdMappingWorkflow_IdMappingTechniques]) *AWS_EntityResolution_IdMappingWorkflow {
	t.IdMappingTechniques = v
	return t
}

// SetV__IdMappingTechniques updates property "IdMappingTechniques".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetV__IdMappingTechniques(v AWS_EntityResolution_IdMappingWorkflow_IdMappingTechniques) *AWS_EntityResolution_IdMappingWorkflow {
	t.IdMappingTechniques = cfz.V(v)
	return t
}

// Set__InputSourceConfig updates property "InputSourceConfig".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__InputSourceConfig(v cfz.ExpressionSlice[AWS_EntityResolution_IdMappingWorkflow_IdMappingWorkflowInputSource]) *AWS_EntityResolution_IdMappingWorkflow {
	t.InputSourceConfig = v
	return t
}

// SetS__InputSourceConfig updates property "InputSourceConfig".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetS__InputSourceConfig(v ...cfz.Expression[AWS_EntityResolution_IdMappingWorkflow_IdMappingWorkflowInputSource]) *AWS_EntityResolution_IdMappingWorkflow {
	t.InputSourceConfig = cfz.S(v...)
	return t
}

// SetSV__InputSourceConfig updates property "InputSourceConfig".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetSV__InputSourceConfig(v ...AWS_EntityResolution_IdMappingWorkflow_IdMappingWorkflowInputSource) *AWS_EntityResolution_IdMappingWorkflow {
	t.InputSourceConfig = cfz.SV(v...)
	return t
}

// Set__OutputSourceConfig updates property "OutputSourceConfig".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__OutputSourceConfig(v cfz.ExpressionSlice[AWS_EntityResolution_IdMappingWorkflow_IdMappingWorkflowOutputSource]) *AWS_EntityResolution_IdMappingWorkflow {
	t.OutputSourceConfig = v
	return t
}

// SetS__OutputSourceConfig updates property "OutputSourceConfig".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetS__OutputSourceConfig(v ...cfz.Expression[AWS_EntityResolution_IdMappingWorkflow_IdMappingWorkflowOutputSource]) *AWS_EntityResolution_IdMappingWorkflow {
	t.OutputSourceConfig = cfz.S(v...)
	return t
}

// SetSV__OutputSourceConfig updates property "OutputSourceConfig".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetSV__OutputSourceConfig(v ...AWS_EntityResolution_IdMappingWorkflow_IdMappingWorkflowOutputSource) *AWS_EntityResolution_IdMappingWorkflow {
	t.OutputSourceConfig = cfz.SV(v...)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__RoleArn(v cfz.Expression[string]) *AWS_EntityResolution_IdMappingWorkflow {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetV__RoleArn(v string) *AWS_EntityResolution_IdMappingWorkflow {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EntityResolution_IdMappingWorkflow {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EntityResolution_IdMappingWorkflow {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetSV__Tags(v ...cfz.Tag) *AWS_EntityResolution_IdMappingWorkflow {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__WorkflowName updates property "WorkflowName".
func (t *AWS_EntityResolution_IdMappingWorkflow) Set__WorkflowName(v cfz.Expression[string]) *AWS_EntityResolution_IdMappingWorkflow {
	t.WorkflowName = v
	return t
}

// SetV__WorkflowName updates property "WorkflowName".
func (t *AWS_EntityResolution_IdMappingWorkflow) SetV__WorkflowName(v string) *AWS_EntityResolution_IdMappingWorkflow {
	t.WorkflowName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EntityResolution_IdMappingWorkflow) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_EntityResolution_IdMappingWorkflow) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EntityResolution_IdMappingWorkflow__AttributesMap.CreatedAt))
}

// GetAtt__UpdatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedAt
func (t *AWS_EntityResolution_IdMappingWorkflow) GetAtt__UpdatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EntityResolution_IdMappingWorkflow__AttributesMap.UpdatedAt))
}

// GetAtt__WorkflowArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: WorkflowArn
func (t *AWS_EntityResolution_IdMappingWorkflow) GetAtt__WorkflowArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EntityResolution_IdMappingWorkflow__AttributesMap.WorkflowArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EntityResolution_IdMappingWorkflow) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_EntityResolution_IdMappingWorkflow) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedAt
func (t *AWS_EntityResolution_IdMappingWorkflow) GetConventionalOutputAtt__UpdatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedAt", t.GetAtt__UpdatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__WorkflowArn returns a conventionally configured output for an attribute of this resource.
// Attribute: WorkflowArn
func (t *AWS_EntityResolution_IdMappingWorkflow) GetConventionalOutputAtt__WorkflowArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttWorkflowArn", t.GetAtt__WorkflowArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EntityResolution_IdMappingWorkflow) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EntityResolution_IdMappingWorkflow

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EntityResolution_IdMappingWorkflow) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
