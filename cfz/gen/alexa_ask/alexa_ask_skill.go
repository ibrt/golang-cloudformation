// Code generated by "golang-cloudformation". DO NOT EDIT.

package alexa_ask

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*Alexa_ASK_Skill)(nil)
	_ cfz.Resource                   = (*Alexa_ASK_Skill)(nil)
)

const (
	// Alexa_ASK_Skill__Type is the CloudFormation type for Alexa::ASK::Skill.
	Alexa_ASK_Skill__Type = "Alexa::ASK::Skill"
)

var (
	// Alexa_ASK_Skill__PropertiesMap reports all the CloudFormation properties for Alexa::ASK::Skill.
	Alexa_ASK_Skill__PropertiesMap = struct {
		AuthenticationConfiguration string
		SkillPackage                string
		VendorId                    string
	}{
		AuthenticationConfiguration: "AuthenticationConfiguration",
		SkillPackage:                "SkillPackage",
		VendorId:                    "VendorId",
	}

	// Alexa_ASK_Skill__PropertiesSlice reports all the CloudFormation properties for Alexa::ASK::Skill.
	Alexa_ASK_Skill__PropertiesSlice = []string{
		Alexa_ASK_Skill__PropertiesMap.AuthenticationConfiguration,
		Alexa_ASK_Skill__PropertiesMap.SkillPackage,
		Alexa_ASK_Skill__PropertiesMap.VendorId,
	}
)

// Alexa_ASK_Skill is a binding for Alexa::ASK::Skill.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html
type Alexa_ASK_Skill struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AuthenticationConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-authenticationconfiguration
	AuthenticationConfiguration cfz.Expression[Alexa_ASK_Skill_AuthenticationConfiguration] `json:"AuthenticationConfiguration,omitempty"`

	// SkillPackage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-skillpackage
	SkillPackage cfz.Expression[Alexa_ASK_Skill_SkillPackage] `json:"SkillPackage,omitempty"`

	// VendorId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ask-skill.html#cfn-ask-skill-vendorid
	VendorId cfz.Expression[string] `json:"VendorId,omitempty"`
}

// New__Alexa_ASK_Skill initializes a new *Alexa_ASK_Skill.
func New__Alexa_ASK_Skill(logicalName string) *Alexa_ASK_Skill {
	return &Alexa_ASK_Skill{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *Alexa_ASK_Skill) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *Alexa_ASK_Skill) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*Alexa_ASK_Skill) GetType() string {
	return Alexa_ASK_Skill__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *Alexa_ASK_Skill) Set__LogicalName(v string) *Alexa_ASK_Skill {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *Alexa_ASK_Skill) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *Alexa_ASK_Skill {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *Alexa_ASK_Skill) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *Alexa_ASK_Skill {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *Alexa_ASK_Skill) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *Alexa_ASK_Skill {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *Alexa_ASK_Skill) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *Alexa_ASK_Skill {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *Alexa_ASK_Skill) Set__RequestedOutputs(v []cfz.Output) *Alexa_ASK_Skill {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *Alexa_ASK_Skill) Add__RequestedOutputs(v ...cfz.Output) *Alexa_ASK_Skill {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AuthenticationConfiguration updates property "AuthenticationConfiguration".
func (t *Alexa_ASK_Skill) Set__AuthenticationConfiguration(v cfz.Expression[Alexa_ASK_Skill_AuthenticationConfiguration]) *Alexa_ASK_Skill {
	t.AuthenticationConfiguration = v
	return t
}

// SetV__AuthenticationConfiguration updates property "AuthenticationConfiguration".
func (t *Alexa_ASK_Skill) SetV__AuthenticationConfiguration(v Alexa_ASK_Skill_AuthenticationConfiguration) *Alexa_ASK_Skill {
	t.AuthenticationConfiguration = cfz.V(v)
	return t
}

// Set__SkillPackage updates property "SkillPackage".
func (t *Alexa_ASK_Skill) Set__SkillPackage(v cfz.Expression[Alexa_ASK_Skill_SkillPackage]) *Alexa_ASK_Skill {
	t.SkillPackage = v
	return t
}

// SetV__SkillPackage updates property "SkillPackage".
func (t *Alexa_ASK_Skill) SetV__SkillPackage(v Alexa_ASK_Skill_SkillPackage) *Alexa_ASK_Skill {
	t.SkillPackage = cfz.V(v)
	return t
}

// Set__VendorId updates property "VendorId".
func (t *Alexa_ASK_Skill) Set__VendorId(v cfz.Expression[string]) *Alexa_ASK_Skill {
	t.VendorId = v
	return t
}

// SetV__VendorId updates property "VendorId".
func (t *Alexa_ASK_Skill) SetV__VendorId(v string) *Alexa_ASK_Skill {
	t.VendorId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *Alexa_ASK_Skill) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *Alexa_ASK_Skill) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *Alexa_ASK_Skill) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties Alexa_ASK_Skill

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *Alexa_ASK_Skill) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
