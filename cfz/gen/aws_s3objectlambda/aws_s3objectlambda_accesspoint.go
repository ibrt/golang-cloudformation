// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3objectlambda

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_S3ObjectLambda_AccessPoint)(nil)
	_ cfz.Resource                   = (*AWS_S3ObjectLambda_AccessPoint)(nil)
)

const (
	// AWS_S3ObjectLambda_AccessPoint__Type is the CloudFormation type for AWS::S3ObjectLambda::AccessPoint.
	AWS_S3ObjectLambda_AccessPoint__Type = "AWS::S3ObjectLambda::AccessPoint"
)

var (
	// AWS_S3ObjectLambda_AccessPoint__AttributesMap reports all the CloudFormation attributes for AWS::S3ObjectLambda::AccessPoint.
	AWS_S3ObjectLambda_AccessPoint__AttributesMap = struct {
		Alias                                                string
		Alias_Status                                         string
		Alias_Value                                          string
		Arn                                                  string
		CreationDate                                         string
		PublicAccessBlockConfiguration                       string
		PublicAccessBlockConfiguration_BlockPublicAcls       string
		PublicAccessBlockConfiguration_BlockPublicPolicy     string
		PublicAccessBlockConfiguration_IgnorePublicAcls      string
		PublicAccessBlockConfiguration_RestrictPublicBuckets string
	}{
		Alias:                          "Alias",
		Alias_Status:                   "Alias.Status",
		Alias_Value:                    "Alias.Value",
		Arn:                            "Arn",
		CreationDate:                   "CreationDate",
		PublicAccessBlockConfiguration: "PublicAccessBlockConfiguration",
		PublicAccessBlockConfiguration_BlockPublicAcls:       "PublicAccessBlockConfiguration.BlockPublicAcls",
		PublicAccessBlockConfiguration_BlockPublicPolicy:     "PublicAccessBlockConfiguration.BlockPublicPolicy",
		PublicAccessBlockConfiguration_IgnorePublicAcls:      "PublicAccessBlockConfiguration.IgnorePublicAcls",
		PublicAccessBlockConfiguration_RestrictPublicBuckets: "PublicAccessBlockConfiguration.RestrictPublicBuckets",
	}

	// AWS_S3ObjectLambda_AccessPoint__AttributesSlice reports all the CloudFormation attributes for AWS::S3ObjectLambda::AccessPoint.
	AWS_S3ObjectLambda_AccessPoint__AttributesSlice = []string{
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.Alias,
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.Alias_Status,
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.Alias_Value,
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.Arn,
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.CreationDate,
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration,
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration_BlockPublicAcls,
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration_BlockPublicPolicy,
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration_IgnorePublicAcls,
		AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration_RestrictPublicBuckets,
	}
)

var (
	// AWS_S3ObjectLambda_AccessPoint__PropertiesMap reports all the CloudFormation properties for AWS::S3ObjectLambda::AccessPoint.
	AWS_S3ObjectLambda_AccessPoint__PropertiesMap = struct {
		Name                      string
		ObjectLambdaConfiguration string
	}{
		Name:                      "Name",
		ObjectLambdaConfiguration: "ObjectLambdaConfiguration",
	}

	// AWS_S3ObjectLambda_AccessPoint__PropertiesSlice reports all the CloudFormation properties for AWS::S3ObjectLambda::AccessPoint.
	AWS_S3ObjectLambda_AccessPoint__PropertiesSlice = []string{
		AWS_S3ObjectLambda_AccessPoint__PropertiesMap.Name,
		AWS_S3ObjectLambda_AccessPoint__PropertiesMap.ObjectLambdaConfiguration,
	}
)

// AWS_S3ObjectLambda_AccessPoint is a binding for AWS::S3ObjectLambda::AccessPoint.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html
type AWS_S3ObjectLambda_AccessPoint struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html#cfn-s3objectlambda-accesspoint-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// ObjectLambdaConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspoint.html#cfn-s3objectlambda-accesspoint-objectlambdaconfiguration
	ObjectLambdaConfiguration cfz.Expression[AWS_S3ObjectLambda_AccessPoint_ObjectLambdaConfiguration] `json:"ObjectLambdaConfiguration,omitempty"`
}

// New__AWS_S3ObjectLambda_AccessPoint initializes a new *AWS_S3ObjectLambda_AccessPoint.
func New__AWS_S3ObjectLambda_AccessPoint(logicalName string) *AWS_S3ObjectLambda_AccessPoint {
	return &AWS_S3ObjectLambda_AccessPoint{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_S3ObjectLambda_AccessPoint) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_S3ObjectLambda_AccessPoint) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_S3ObjectLambda_AccessPoint) GetType() string {
	return AWS_S3ObjectLambda_AccessPoint__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_S3ObjectLambda_AccessPoint) Set__LogicalName(v string) *AWS_S3ObjectLambda_AccessPoint {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_S3ObjectLambda_AccessPoint) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_S3ObjectLambda_AccessPoint {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_S3ObjectLambda_AccessPoint) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_S3ObjectLambda_AccessPoint {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_S3ObjectLambda_AccessPoint) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_S3ObjectLambda_AccessPoint {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_S3ObjectLambda_AccessPoint) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_S3ObjectLambda_AccessPoint {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_S3ObjectLambda_AccessPoint) Set__RequestedOutputs(v []cfz.Output) *AWS_S3ObjectLambda_AccessPoint {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_S3ObjectLambda_AccessPoint) Add__RequestedOutputs(v ...cfz.Output) *AWS_S3ObjectLambda_AccessPoint {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_S3ObjectLambda_AccessPoint) Set__Name(v cfz.Expression[string]) *AWS_S3ObjectLambda_AccessPoint {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_S3ObjectLambda_AccessPoint) SetV__Name(v string) *AWS_S3ObjectLambda_AccessPoint {
	t.Name = cfz.V(v)
	return t
}

// Set__ObjectLambdaConfiguration updates property "ObjectLambdaConfiguration".
func (t *AWS_S3ObjectLambda_AccessPoint) Set__ObjectLambdaConfiguration(v cfz.Expression[AWS_S3ObjectLambda_AccessPoint_ObjectLambdaConfiguration]) *AWS_S3ObjectLambda_AccessPoint {
	t.ObjectLambdaConfiguration = v
	return t
}

// SetV__ObjectLambdaConfiguration updates property "ObjectLambdaConfiguration".
func (t *AWS_S3ObjectLambda_AccessPoint) SetV__ObjectLambdaConfiguration(v AWS_S3ObjectLambda_AccessPoint_ObjectLambdaConfiguration) *AWS_S3ObjectLambda_AccessPoint {
	t.ObjectLambdaConfiguration = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_S3ObjectLambda_AccessPoint) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Alias returns a $cfz.Expression[AWS_S3ObjectLambda_AccessPoint_Alias] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Alias
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__Alias() cfz.Expression[AWS_S3ObjectLambda_AccessPoint_Alias] {
	return cfz.GetAtt[AWS_S3ObjectLambda_AccessPoint_Alias](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.Alias))
}

// GetAtt__Alias_Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Alias.Status
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__Alias_Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.Alias_Status))
}

// GetAtt__Alias_Value returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Alias.Value
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__Alias_Value() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.Alias_Value))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.Arn))
}

// GetAtt__CreationDate returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationDate
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__CreationDate() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.CreationDate))
}

// GetAtt__PublicAccessBlockConfiguration returns a $cfz.Expression[AWS_S3ObjectLambda_AccessPoint_PublicAccessBlockConfiguration] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublicAccessBlockConfiguration
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__PublicAccessBlockConfiguration() cfz.Expression[AWS_S3ObjectLambda_AccessPoint_PublicAccessBlockConfiguration] {
	return cfz.GetAtt[AWS_S3ObjectLambda_AccessPoint_PublicAccessBlockConfiguration](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration))
}

// GetAtt__PublicAccessBlockConfiguration_BlockPublicAcls returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublicAccessBlockConfiguration.BlockPublicAcls
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__PublicAccessBlockConfiguration_BlockPublicAcls() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration_BlockPublicAcls))
}

// GetAtt__PublicAccessBlockConfiguration_BlockPublicPolicy returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublicAccessBlockConfiguration.BlockPublicPolicy
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__PublicAccessBlockConfiguration_BlockPublicPolicy() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration_BlockPublicPolicy))
}

// GetAtt__PublicAccessBlockConfiguration_IgnorePublicAcls returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublicAccessBlockConfiguration.IgnorePublicAcls
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__PublicAccessBlockConfiguration_IgnorePublicAcls() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration_IgnorePublicAcls))
}

// GetAtt__PublicAccessBlockConfiguration_RestrictPublicBuckets returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublicAccessBlockConfiguration.RestrictPublicBuckets
func (t *AWS_S3ObjectLambda_AccessPoint) GetAtt__PublicAccessBlockConfiguration_RestrictPublicBuckets() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3ObjectLambda_AccessPoint__AttributesMap.PublicAccessBlockConfiguration_RestrictPublicBuckets))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Alias returns a conventionally configured output for an attribute of this resource.
// Attribute: Alias
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__Alias(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAlias", t.GetAtt__Alias())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Alias_Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Alias.Status
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__Alias_Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAliasStatus", t.GetAtt__Alias_Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Alias_Value returns a conventionally configured output for an attribute of this resource.
// Attribute: Alias.Value
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__Alias_Value(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAliasValue", t.GetAtt__Alias_Value())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationDate returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationDate
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__CreationDate(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationDate", t.GetAtt__CreationDate())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublicAccessBlockConfiguration returns a conventionally configured output for an attribute of this resource.
// Attribute: PublicAccessBlockConfiguration
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__PublicAccessBlockConfiguration(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublicAccessBlockConfiguration", t.GetAtt__PublicAccessBlockConfiguration())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublicAccessBlockConfiguration_BlockPublicAcls returns a conventionally configured output for an attribute of this resource.
// Attribute: PublicAccessBlockConfiguration.BlockPublicAcls
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__PublicAccessBlockConfiguration_BlockPublicAcls(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublicAccessBlockConfigurationBlockPublicAcls", t.GetAtt__PublicAccessBlockConfiguration_BlockPublicAcls())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublicAccessBlockConfiguration_BlockPublicPolicy returns a conventionally configured output for an attribute of this resource.
// Attribute: PublicAccessBlockConfiguration.BlockPublicPolicy
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__PublicAccessBlockConfiguration_BlockPublicPolicy(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublicAccessBlockConfigurationBlockPublicPolicy", t.GetAtt__PublicAccessBlockConfiguration_BlockPublicPolicy())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublicAccessBlockConfiguration_IgnorePublicAcls returns a conventionally configured output for an attribute of this resource.
// Attribute: PublicAccessBlockConfiguration.IgnorePublicAcls
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__PublicAccessBlockConfiguration_IgnorePublicAcls(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublicAccessBlockConfigurationIgnorePublicAcls", t.GetAtt__PublicAccessBlockConfiguration_IgnorePublicAcls())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublicAccessBlockConfiguration_RestrictPublicBuckets returns a conventionally configured output for an attribute of this resource.
// Attribute: PublicAccessBlockConfiguration.RestrictPublicBuckets
func (t *AWS_S3ObjectLambda_AccessPoint) GetConventionalOutputAtt__PublicAccessBlockConfiguration_RestrictPublicBuckets(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublicAccessBlockConfigurationRestrictPublicBuckets", t.GetAtt__PublicAccessBlockConfiguration_RestrictPublicBuckets())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_S3ObjectLambda_AccessPoint) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_S3ObjectLambda_AccessPoint

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_S3ObjectLambda_AccessPoint) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
