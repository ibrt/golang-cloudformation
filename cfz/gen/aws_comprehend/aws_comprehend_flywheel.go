// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_comprehend

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Comprehend_Flywheel)(nil)
	_ cfz.Resource                   = (*AWS_Comprehend_Flywheel)(nil)
)

const (
	// AWS_Comprehend_Flywheel__Type is the CloudFormation type for AWS::Comprehend::Flywheel.
	AWS_Comprehend_Flywheel__Type = "AWS::Comprehend::Flywheel"
)

var (
	// AWS_Comprehend_Flywheel__AttributesMap reports all the CloudFormation attributes for AWS::Comprehend::Flywheel.
	AWS_Comprehend_Flywheel__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_Comprehend_Flywheel__AttributesSlice reports all the CloudFormation attributes for AWS::Comprehend::Flywheel.
	AWS_Comprehend_Flywheel__AttributesSlice = []string{
		AWS_Comprehend_Flywheel__AttributesMap.Arn,
	}
)

var (
	// AWS_Comprehend_Flywheel__PropertiesMap reports all the CloudFormation properties for AWS::Comprehend::Flywheel.
	AWS_Comprehend_Flywheel__PropertiesMap = struct {
		ActiveModelArn     string
		DataAccessRoleArn  string
		DataLakeS3Uri      string
		DataSecurityConfig string
		FlywheelName       string
		ModelType          string
		Tags               string
		TaskConfig         string
	}{
		ActiveModelArn:     "ActiveModelArn",
		DataAccessRoleArn:  "DataAccessRoleArn",
		DataLakeS3Uri:      "DataLakeS3Uri",
		DataSecurityConfig: "DataSecurityConfig",
		FlywheelName:       "FlywheelName",
		ModelType:          "ModelType",
		Tags:               "Tags",
		TaskConfig:         "TaskConfig",
	}

	// AWS_Comprehend_Flywheel__PropertiesSlice reports all the CloudFormation properties for AWS::Comprehend::Flywheel.
	AWS_Comprehend_Flywheel__PropertiesSlice = []string{
		AWS_Comprehend_Flywheel__PropertiesMap.ActiveModelArn,
		AWS_Comprehend_Flywheel__PropertiesMap.DataAccessRoleArn,
		AWS_Comprehend_Flywheel__PropertiesMap.DataLakeS3Uri,
		AWS_Comprehend_Flywheel__PropertiesMap.DataSecurityConfig,
		AWS_Comprehend_Flywheel__PropertiesMap.FlywheelName,
		AWS_Comprehend_Flywheel__PropertiesMap.ModelType,
		AWS_Comprehend_Flywheel__PropertiesMap.Tags,
		AWS_Comprehend_Flywheel__PropertiesMap.TaskConfig,
	}
)

// AWS_Comprehend_Flywheel is a binding for AWS::Comprehend::Flywheel.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html
type AWS_Comprehend_Flywheel struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ActiveModelArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-activemodelarn
	ActiveModelArn cfz.Expression[string] `json:"ActiveModelArn,omitempty"`

	// DataAccessRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-dataaccessrolearn
	DataAccessRoleArn cfz.Expression[string] `json:"DataAccessRoleArn,omitempty"`

	// DataLakeS3Uri is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-datalakes3uri
	DataLakeS3Uri cfz.Expression[string] `json:"DataLakeS3Uri,omitempty"`

	// DataSecurityConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-datasecurityconfig
	DataSecurityConfig cfz.Expression[AWS_Comprehend_Flywheel_DataSecurityConfig] `json:"DataSecurityConfig,omitempty"`

	// FlywheelName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-flywheelname
	FlywheelName cfz.Expression[string] `json:"FlywheelName,omitempty"`

	// ModelType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-modeltype
	ModelType cfz.Expression[string] `json:"ModelType,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TaskConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-comprehend-flywheel.html#cfn-comprehend-flywheel-taskconfig
	TaskConfig cfz.Expression[AWS_Comprehend_Flywheel_TaskConfig] `json:"TaskConfig,omitempty"`
}

// New__AWS_Comprehend_Flywheel initializes a new *AWS_Comprehend_Flywheel.
func New__AWS_Comprehend_Flywheel(logicalName string) *AWS_Comprehend_Flywheel {
	return &AWS_Comprehend_Flywheel{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Comprehend_Flywheel) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Comprehend_Flywheel) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Comprehend_Flywheel) GetType() string {
	return AWS_Comprehend_Flywheel__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Comprehend_Flywheel) Set__LogicalName(v string) *AWS_Comprehend_Flywheel {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Comprehend_Flywheel) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Comprehend_Flywheel {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Comprehend_Flywheel) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Comprehend_Flywheel {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Comprehend_Flywheel) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Comprehend_Flywheel {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Comprehend_Flywheel) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Comprehend_Flywheel {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Comprehend_Flywheel) Set__RequestedOutputs(v []cfz.Output) *AWS_Comprehend_Flywheel {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Comprehend_Flywheel) Add__RequestedOutputs(v ...cfz.Output) *AWS_Comprehend_Flywheel {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ActiveModelArn updates property "ActiveModelArn".
func (t *AWS_Comprehend_Flywheel) Set__ActiveModelArn(v cfz.Expression[string]) *AWS_Comprehend_Flywheel {
	t.ActiveModelArn = v
	return t
}

// SetV__ActiveModelArn updates property "ActiveModelArn".
func (t *AWS_Comprehend_Flywheel) SetV__ActiveModelArn(v string) *AWS_Comprehend_Flywheel {
	t.ActiveModelArn = cfz.V(v)
	return t
}

// Set__DataAccessRoleArn updates property "DataAccessRoleArn".
func (t *AWS_Comprehend_Flywheel) Set__DataAccessRoleArn(v cfz.Expression[string]) *AWS_Comprehend_Flywheel {
	t.DataAccessRoleArn = v
	return t
}

// SetV__DataAccessRoleArn updates property "DataAccessRoleArn".
func (t *AWS_Comprehend_Flywheel) SetV__DataAccessRoleArn(v string) *AWS_Comprehend_Flywheel {
	t.DataAccessRoleArn = cfz.V(v)
	return t
}

// Set__DataLakeS3Uri updates property "DataLakeS3Uri".
func (t *AWS_Comprehend_Flywheel) Set__DataLakeS3Uri(v cfz.Expression[string]) *AWS_Comprehend_Flywheel {
	t.DataLakeS3Uri = v
	return t
}

// SetV__DataLakeS3Uri updates property "DataLakeS3Uri".
func (t *AWS_Comprehend_Flywheel) SetV__DataLakeS3Uri(v string) *AWS_Comprehend_Flywheel {
	t.DataLakeS3Uri = cfz.V(v)
	return t
}

// Set__DataSecurityConfig updates property "DataSecurityConfig".
func (t *AWS_Comprehend_Flywheel) Set__DataSecurityConfig(v cfz.Expression[AWS_Comprehend_Flywheel_DataSecurityConfig]) *AWS_Comprehend_Flywheel {
	t.DataSecurityConfig = v
	return t
}

// SetV__DataSecurityConfig updates property "DataSecurityConfig".
func (t *AWS_Comprehend_Flywheel) SetV__DataSecurityConfig(v AWS_Comprehend_Flywheel_DataSecurityConfig) *AWS_Comprehend_Flywheel {
	t.DataSecurityConfig = cfz.V(v)
	return t
}

// Set__FlywheelName updates property "FlywheelName".
func (t *AWS_Comprehend_Flywheel) Set__FlywheelName(v cfz.Expression[string]) *AWS_Comprehend_Flywheel {
	t.FlywheelName = v
	return t
}

// SetV__FlywheelName updates property "FlywheelName".
func (t *AWS_Comprehend_Flywheel) SetV__FlywheelName(v string) *AWS_Comprehend_Flywheel {
	t.FlywheelName = cfz.V(v)
	return t
}

// Set__ModelType updates property "ModelType".
func (t *AWS_Comprehend_Flywheel) Set__ModelType(v cfz.Expression[string]) *AWS_Comprehend_Flywheel {
	t.ModelType = v
	return t
}

// SetV__ModelType updates property "ModelType".
func (t *AWS_Comprehend_Flywheel) SetV__ModelType(v string) *AWS_Comprehend_Flywheel {
	t.ModelType = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Comprehend_Flywheel) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Comprehend_Flywheel {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Comprehend_Flywheel) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Comprehend_Flywheel {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Comprehend_Flywheel) SetSV__Tags(v ...cfz.Tag) *AWS_Comprehend_Flywheel {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TaskConfig updates property "TaskConfig".
func (t *AWS_Comprehend_Flywheel) Set__TaskConfig(v cfz.Expression[AWS_Comprehend_Flywheel_TaskConfig]) *AWS_Comprehend_Flywheel {
	t.TaskConfig = v
	return t
}

// SetV__TaskConfig updates property "TaskConfig".
func (t *AWS_Comprehend_Flywheel) SetV__TaskConfig(v AWS_Comprehend_Flywheel_TaskConfig) *AWS_Comprehend_Flywheel {
	t.TaskConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Comprehend_Flywheel) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Comprehend_Flywheel) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Comprehend_Flywheel__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Comprehend_Flywheel) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Comprehend_Flywheel) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Comprehend_Flywheel) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Comprehend_Flywheel

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Comprehend_Flywheel) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
