// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_greengrass

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Greengrass_Group)(nil)
	_ cfz.Resource                   = (*AWS_Greengrass_Group)(nil)
)

const (
	// AWS_Greengrass_Group__Type is the CloudFormation type for AWS::Greengrass::Group.
	AWS_Greengrass_Group__Type = "AWS::Greengrass::Group"
)

var (
	// AWS_Greengrass_Group__AttributesMap reports all the CloudFormation attributes for AWS::Greengrass::Group.
	AWS_Greengrass_Group__AttributesMap = struct {
		Arn              string
		Id               string
		LatestVersionArn string
		Name             string
		RoleArn          string
		RoleAttachedAt   string
	}{
		Arn:              "Arn",
		Id:               "Id",
		LatestVersionArn: "LatestVersionArn",
		Name:             "Name",
		RoleArn:          "RoleArn",
		RoleAttachedAt:   "RoleAttachedAt",
	}

	// AWS_Greengrass_Group__AttributesSlice reports all the CloudFormation attributes for AWS::Greengrass::Group.
	AWS_Greengrass_Group__AttributesSlice = []string{
		AWS_Greengrass_Group__AttributesMap.Arn,
		AWS_Greengrass_Group__AttributesMap.Id,
		AWS_Greengrass_Group__AttributesMap.LatestVersionArn,
		AWS_Greengrass_Group__AttributesMap.Name,
		AWS_Greengrass_Group__AttributesMap.RoleArn,
		AWS_Greengrass_Group__AttributesMap.RoleAttachedAt,
	}
)

var (
	// AWS_Greengrass_Group__PropertiesMap reports all the CloudFormation properties for AWS::Greengrass::Group.
	AWS_Greengrass_Group__PropertiesMap = struct {
		InitialVersion string
		Name           string
		RoleArn        string
		Tags           string
	}{
		InitialVersion: "InitialVersion",
		Name:           "Name",
		RoleArn:        "RoleArn",
		Tags:           "Tags",
	}

	// AWS_Greengrass_Group__PropertiesSlice reports all the CloudFormation properties for AWS::Greengrass::Group.
	AWS_Greengrass_Group__PropertiesSlice = []string{
		AWS_Greengrass_Group__PropertiesMap.InitialVersion,
		AWS_Greengrass_Group__PropertiesMap.Name,
		AWS_Greengrass_Group__PropertiesMap.RoleArn,
		AWS_Greengrass_Group__PropertiesMap.Tags,
	}
)

// AWS_Greengrass_Group is a binding for AWS::Greengrass::Group.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html
type AWS_Greengrass_Group struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// InitialVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html#cfn-greengrass-group-initialversion
	InitialVersion cfz.Expression[AWS_Greengrass_Group_GroupVersion] `json:"InitialVersion,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html#cfn-greengrass-group-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html#cfn-greengrass-group-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-group.html#cfn-greengrass-group-tags
	Tags cfz.Expression[json.RawMessage] `json:"Tags,omitempty"`
}

// New__AWS_Greengrass_Group initializes a new *AWS_Greengrass_Group.
func New__AWS_Greengrass_Group(logicalName string) *AWS_Greengrass_Group {
	return &AWS_Greengrass_Group{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Greengrass_Group) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Greengrass_Group) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Greengrass_Group) GetType() string {
	return AWS_Greengrass_Group__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Greengrass_Group) Set__LogicalName(v string) *AWS_Greengrass_Group {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Greengrass_Group) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Greengrass_Group {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Greengrass_Group) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Greengrass_Group {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Greengrass_Group) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Greengrass_Group {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Greengrass_Group) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Greengrass_Group {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Greengrass_Group) Set__RequestedOutputs(v []cfz.Output) *AWS_Greengrass_Group {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Greengrass_Group) Add__RequestedOutputs(v ...cfz.Output) *AWS_Greengrass_Group {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__InitialVersion updates property "InitialVersion".
func (t *AWS_Greengrass_Group) Set__InitialVersion(v cfz.Expression[AWS_Greengrass_Group_GroupVersion]) *AWS_Greengrass_Group {
	t.InitialVersion = v
	return t
}

// SetV__InitialVersion updates property "InitialVersion".
func (t *AWS_Greengrass_Group) SetV__InitialVersion(v AWS_Greengrass_Group_GroupVersion) *AWS_Greengrass_Group {
	t.InitialVersion = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Greengrass_Group) Set__Name(v cfz.Expression[string]) *AWS_Greengrass_Group {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Greengrass_Group) SetV__Name(v string) *AWS_Greengrass_Group {
	t.Name = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_Greengrass_Group) Set__RoleArn(v cfz.Expression[string]) *AWS_Greengrass_Group {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_Greengrass_Group) SetV__RoleArn(v string) *AWS_Greengrass_Group {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Greengrass_Group) Set__Tags(v cfz.Expression[json.RawMessage]) *AWS_Greengrass_Group {
	t.Tags = v
	return t
}

// SetV__Tags updates property "Tags".
func (t *AWS_Greengrass_Group) SetV__Tags(v json.RawMessage) *AWS_Greengrass_Group {
	t.Tags = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Greengrass_Group) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Greengrass_Group) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Greengrass_Group__AttributesMap.Arn))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Greengrass_Group) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Greengrass_Group__AttributesMap.Id))
}

// GetAtt__LatestVersionArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LatestVersionArn
func (t *AWS_Greengrass_Group) GetAtt__LatestVersionArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Greengrass_Group__AttributesMap.LatestVersionArn))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_Greengrass_Group) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Greengrass_Group__AttributesMap.Name))
}

// GetAtt__RoleArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RoleArn
func (t *AWS_Greengrass_Group) GetAtt__RoleArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Greengrass_Group__AttributesMap.RoleArn))
}

// GetAtt__RoleAttachedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RoleAttachedAt
func (t *AWS_Greengrass_Group) GetAtt__RoleAttachedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Greengrass_Group__AttributesMap.RoleAttachedAt))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Greengrass_Group) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Greengrass_Group) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Greengrass_Group) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LatestVersionArn returns a conventionally configured output for an attribute of this resource.
// Attribute: LatestVersionArn
func (t *AWS_Greengrass_Group) GetConventionalOutputAtt__LatestVersionArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLatestVersionArn", t.GetAtt__LatestVersionArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_Greengrass_Group) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RoleArn returns a conventionally configured output for an attribute of this resource.
// Attribute: RoleArn
func (t *AWS_Greengrass_Group) GetConventionalOutputAtt__RoleArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRoleArn", t.GetAtt__RoleArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RoleAttachedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: RoleAttachedAt
func (t *AWS_Greengrass_Group) GetConventionalOutputAtt__RoleAttachedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRoleAttachedAt", t.GetAtt__RoleAttachedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Greengrass_Group) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Greengrass_Group

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Greengrass_Group) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
