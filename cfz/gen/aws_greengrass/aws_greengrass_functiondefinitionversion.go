// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_greengrass

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Greengrass_FunctionDefinitionVersion)(nil)
	_ cfz.Resource                   = (*AWS_Greengrass_FunctionDefinitionVersion)(nil)
)

const (
	// AWS_Greengrass_FunctionDefinitionVersion__Type is the CloudFormation type for AWS::Greengrass::FunctionDefinitionVersion.
	AWS_Greengrass_FunctionDefinitionVersion__Type = "AWS::Greengrass::FunctionDefinitionVersion"
)

var (
	// AWS_Greengrass_FunctionDefinitionVersion__PropertiesMap reports all the CloudFormation properties for AWS::Greengrass::FunctionDefinitionVersion.
	AWS_Greengrass_FunctionDefinitionVersion__PropertiesMap = struct {
		DefaultConfig        string
		FunctionDefinitionId string
		Functions            string
	}{
		DefaultConfig:        "DefaultConfig",
		FunctionDefinitionId: "FunctionDefinitionId",
		Functions:            "Functions",
	}

	// AWS_Greengrass_FunctionDefinitionVersion__PropertiesSlice reports all the CloudFormation properties for AWS::Greengrass::FunctionDefinitionVersion.
	AWS_Greengrass_FunctionDefinitionVersion__PropertiesSlice = []string{
		AWS_Greengrass_FunctionDefinitionVersion__PropertiesMap.DefaultConfig,
		AWS_Greengrass_FunctionDefinitionVersion__PropertiesMap.FunctionDefinitionId,
		AWS_Greengrass_FunctionDefinitionVersion__PropertiesMap.Functions,
	}
)

// AWS_Greengrass_FunctionDefinitionVersion is a binding for AWS::Greengrass::FunctionDefinitionVersion.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html
type AWS_Greengrass_FunctionDefinitionVersion struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DefaultConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html#cfn-greengrass-functiondefinitionversion-defaultconfig
	DefaultConfig cfz.Expression[AWS_Greengrass_FunctionDefinitionVersion_DefaultConfig] `json:"DefaultConfig,omitempty"`

	// FunctionDefinitionId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html#cfn-greengrass-functiondefinitionversion-functiondefinitionid
	FunctionDefinitionId cfz.Expression[string] `json:"FunctionDefinitionId,omitempty"`

	// Functions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-functiondefinitionversion.html#cfn-greengrass-functiondefinitionversion-functions
	Functions cfz.ExpressionSlice[AWS_Greengrass_FunctionDefinitionVersion_Function] `json:"Functions,omitempty"`
}

// New__AWS_Greengrass_FunctionDefinitionVersion initializes a new *AWS_Greengrass_FunctionDefinitionVersion.
func New__AWS_Greengrass_FunctionDefinitionVersion(logicalName string) *AWS_Greengrass_FunctionDefinitionVersion {
	return &AWS_Greengrass_FunctionDefinitionVersion{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Greengrass_FunctionDefinitionVersion) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Greengrass_FunctionDefinitionVersion) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Greengrass_FunctionDefinitionVersion) GetType() string {
	return AWS_Greengrass_FunctionDefinitionVersion__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Set__LogicalName(v string) *AWS_Greengrass_FunctionDefinitionVersion {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Greengrass_FunctionDefinitionVersion {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Greengrass_FunctionDefinitionVersion {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Greengrass_FunctionDefinitionVersion {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Greengrass_FunctionDefinitionVersion {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Set__RequestedOutputs(v []cfz.Output) *AWS_Greengrass_FunctionDefinitionVersion {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Add__RequestedOutputs(v ...cfz.Output) *AWS_Greengrass_FunctionDefinitionVersion {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DefaultConfig updates property "DefaultConfig".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Set__DefaultConfig(v cfz.Expression[AWS_Greengrass_FunctionDefinitionVersion_DefaultConfig]) *AWS_Greengrass_FunctionDefinitionVersion {
	t.DefaultConfig = v
	return t
}

// SetV__DefaultConfig updates property "DefaultConfig".
func (t *AWS_Greengrass_FunctionDefinitionVersion) SetV__DefaultConfig(v AWS_Greengrass_FunctionDefinitionVersion_DefaultConfig) *AWS_Greengrass_FunctionDefinitionVersion {
	t.DefaultConfig = cfz.V(v)
	return t
}

// Set__FunctionDefinitionId updates property "FunctionDefinitionId".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Set__FunctionDefinitionId(v cfz.Expression[string]) *AWS_Greengrass_FunctionDefinitionVersion {
	t.FunctionDefinitionId = v
	return t
}

// SetV__FunctionDefinitionId updates property "FunctionDefinitionId".
func (t *AWS_Greengrass_FunctionDefinitionVersion) SetV__FunctionDefinitionId(v string) *AWS_Greengrass_FunctionDefinitionVersion {
	t.FunctionDefinitionId = cfz.V(v)
	return t
}

// Set__Functions updates property "Functions".
func (t *AWS_Greengrass_FunctionDefinitionVersion) Set__Functions(v cfz.ExpressionSlice[AWS_Greengrass_FunctionDefinitionVersion_Function]) *AWS_Greengrass_FunctionDefinitionVersion {
	t.Functions = v
	return t
}

// SetS__Functions updates property "Functions".
func (t *AWS_Greengrass_FunctionDefinitionVersion) SetS__Functions(v ...cfz.Expression[AWS_Greengrass_FunctionDefinitionVersion_Function]) *AWS_Greengrass_FunctionDefinitionVersion {
	t.Functions = cfz.S(v...)
	return t
}

// SetSV__Functions updates property "Functions".
func (t *AWS_Greengrass_FunctionDefinitionVersion) SetSV__Functions(v ...AWS_Greengrass_FunctionDefinitionVersion_Function) *AWS_Greengrass_FunctionDefinitionVersion {
	t.Functions = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Greengrass_FunctionDefinitionVersion) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Greengrass_FunctionDefinitionVersion) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Greengrass_FunctionDefinitionVersion) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Greengrass_FunctionDefinitionVersion

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Greengrass_FunctionDefinitionVersion) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
