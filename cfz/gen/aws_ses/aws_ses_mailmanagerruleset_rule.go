// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ses

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_SES_MailManagerRuleSet_Rule__Type is the CloudFormation type for AWS::SES::MailManagerRuleSet.Rule.
	AWS_SES_MailManagerRuleSet_Rule__Type = "AWS::SES::MailManagerRuleSet.Rule"
)

var (
	// AWS_SES_MailManagerRuleSet_Rule__PropertiesMap reports all the CloudFormation properties for AWS::SES::MailManagerRuleSet.Rule.
	AWS_SES_MailManagerRuleSet_Rule__PropertiesMap = struct {
		Actions    string
		Conditions string
		Name       string
		Unless     string
	}{
		Actions:    "Actions",
		Conditions: "Conditions",
		Name:       "Name",
		Unless:     "Unless",
	}

	// AWS_SES_MailManagerRuleSet_Rule__PropertiesSlice reports all the CloudFormation properties for AWS::SES::MailManagerRuleSet.Rule.
	AWS_SES_MailManagerRuleSet_Rule__PropertiesSlice = []string{
		AWS_SES_MailManagerRuleSet_Rule__PropertiesMap.Actions,
		AWS_SES_MailManagerRuleSet_Rule__PropertiesMap.Conditions,
		AWS_SES_MailManagerRuleSet_Rule__PropertiesMap.Name,
		AWS_SES_MailManagerRuleSet_Rule__PropertiesMap.Unless,
	}
)

// AWS_SES_MailManagerRuleSet_Rule is a binding for AWS::SES::MailManagerRuleSet.Rule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ses-mailmanagerruleset-rule.html
type AWS_SES_MailManagerRuleSet_Rule struct {
	// Actions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ses-mailmanagerruleset-rule.html#cfn-ses-mailmanagerruleset-rule-actions
	Actions cfz.ExpressionSlice[AWS_SES_MailManagerRuleSet_RuleAction] `json:"Actions,omitempty"`

	// Conditions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ses-mailmanagerruleset-rule.html#cfn-ses-mailmanagerruleset-rule-conditions
	Conditions cfz.ExpressionSlice[AWS_SES_MailManagerRuleSet_RuleCondition] `json:"Conditions,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ses-mailmanagerruleset-rule.html#cfn-ses-mailmanagerruleset-rule-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Unless is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ses-mailmanagerruleset-rule.html#cfn-ses-mailmanagerruleset-rule-unless
	Unless cfz.ExpressionSlice[AWS_SES_MailManagerRuleSet_RuleCondition] `json:"Unless,omitempty"`
}

// New__AWS_SES_MailManagerRuleSet_Rule initializes a new AWS_SES_MailManagerRuleSet_Rule.
func New__AWS_SES_MailManagerRuleSet_Rule() AWS_SES_MailManagerRuleSet_Rule {
	return AWS_SES_MailManagerRuleSet_Rule{}
}

// GetType returns the CloudFormation type.
func (AWS_SES_MailManagerRuleSet_Rule) GetType() string {
	return AWS_SES_MailManagerRuleSet_Rule__Type
}

// Set__Actions updates property "Actions".
func (t AWS_SES_MailManagerRuleSet_Rule) Set__Actions(v cfz.ExpressionSlice[AWS_SES_MailManagerRuleSet_RuleAction]) AWS_SES_MailManagerRuleSet_Rule {
	t.Actions = v
	return t
}

// SetS__Actions updates property "Actions".
func (t AWS_SES_MailManagerRuleSet_Rule) SetS__Actions(v ...cfz.Expression[AWS_SES_MailManagerRuleSet_RuleAction]) AWS_SES_MailManagerRuleSet_Rule {
	t.Actions = cfz.S(v...)
	return t
}

// SetSV__Actions updates property "Actions".
func (t AWS_SES_MailManagerRuleSet_Rule) SetSV__Actions(v ...AWS_SES_MailManagerRuleSet_RuleAction) AWS_SES_MailManagerRuleSet_Rule {
	t.Actions = cfz.SV(v...)
	return t
}

// Set__Conditions updates property "Conditions".
func (t AWS_SES_MailManagerRuleSet_Rule) Set__Conditions(v cfz.ExpressionSlice[AWS_SES_MailManagerRuleSet_RuleCondition]) AWS_SES_MailManagerRuleSet_Rule {
	t.Conditions = v
	return t
}

// SetS__Conditions updates property "Conditions".
func (t AWS_SES_MailManagerRuleSet_Rule) SetS__Conditions(v ...cfz.Expression[AWS_SES_MailManagerRuleSet_RuleCondition]) AWS_SES_MailManagerRuleSet_Rule {
	t.Conditions = cfz.S(v...)
	return t
}

// SetSV__Conditions updates property "Conditions".
func (t AWS_SES_MailManagerRuleSet_Rule) SetSV__Conditions(v ...AWS_SES_MailManagerRuleSet_RuleCondition) AWS_SES_MailManagerRuleSet_Rule {
	t.Conditions = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t AWS_SES_MailManagerRuleSet_Rule) Set__Name(v cfz.Expression[string]) AWS_SES_MailManagerRuleSet_Rule {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t AWS_SES_MailManagerRuleSet_Rule) SetV__Name(v string) AWS_SES_MailManagerRuleSet_Rule {
	t.Name = cfz.V(v)
	return t
}

// Set__Unless updates property "Unless".
func (t AWS_SES_MailManagerRuleSet_Rule) Set__Unless(v cfz.ExpressionSlice[AWS_SES_MailManagerRuleSet_RuleCondition]) AWS_SES_MailManagerRuleSet_Rule {
	t.Unless = v
	return t
}

// SetS__Unless updates property "Unless".
func (t AWS_SES_MailManagerRuleSet_Rule) SetS__Unless(v ...cfz.Expression[AWS_SES_MailManagerRuleSet_RuleCondition]) AWS_SES_MailManagerRuleSet_Rule {
	t.Unless = cfz.S(v...)
	return t
}

// SetSV__Unless updates property "Unless".
func (t AWS_SES_MailManagerRuleSet_Rule) SetSV__Unless(v ...AWS_SES_MailManagerRuleSet_RuleCondition) AWS_SES_MailManagerRuleSet_Rule {
	t.Unless = cfz.SV(v...)
	return t
}
