// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_StorageLens_SSEKMS__Type is the CloudFormation type for AWS::S3::StorageLens.SSEKMS.
	AWS_S3_StorageLens_SSEKMS__Type = "AWS::S3::StorageLens.SSEKMS"
)

var (
	// AWS_S3_StorageLens_SSEKMS__PropertiesMap reports all the CloudFormation properties for AWS::S3::StorageLens.SSEKMS.
	AWS_S3_StorageLens_SSEKMS__PropertiesMap = struct {
		KeyId string
	}{
		KeyId: "KeyId",
	}

	// AWS_S3_StorageLens_SSEKMS__PropertiesSlice reports all the CloudFormation properties for AWS::S3::StorageLens.SSEKMS.
	AWS_S3_StorageLens_SSEKMS__PropertiesSlice = []string{
		AWS_S3_StorageLens_SSEKMS__PropertiesMap.KeyId,
	}
)

// AWS_S3_StorageLens_SSEKMS is a binding for AWS::S3::StorageLens.SSEKMS.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-ssekms.html
type AWS_S3_StorageLens_SSEKMS struct {
	// KeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-ssekms.html#cfn-s3-storagelens-ssekms-keyid
	KeyId cfz.Expression[string] `json:"KeyId,omitempty"`
}

// New__AWS_S3_StorageLens_SSEKMS initializes a new AWS_S3_StorageLens_SSEKMS.
func New__AWS_S3_StorageLens_SSEKMS() AWS_S3_StorageLens_SSEKMS {
	return AWS_S3_StorageLens_SSEKMS{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_StorageLens_SSEKMS) GetType() string {
	return AWS_S3_StorageLens_SSEKMS__Type
}

// Set__KeyId updates property "KeyId".
func (t AWS_S3_StorageLens_SSEKMS) Set__KeyId(v cfz.Expression[string]) AWS_S3_StorageLens_SSEKMS {
	t.KeyId = v
	return t
}

// SetV__KeyId updates property "KeyId".
func (t AWS_S3_StorageLens_SSEKMS) SetV__KeyId(v string) AWS_S3_StorageLens_SSEKMS {
	t.KeyId = cfz.V(v)
	return t
}
