// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_Bucket_NoncurrentVersionExpiration__Type is the CloudFormation type for AWS::S3::Bucket.NoncurrentVersionExpiration.
	AWS_S3_Bucket_NoncurrentVersionExpiration__Type = "AWS::S3::Bucket.NoncurrentVersionExpiration"
)

var (
	// AWS_S3_Bucket_NoncurrentVersionExpiration__PropertiesMap reports all the CloudFormation properties for AWS::S3::Bucket.NoncurrentVersionExpiration.
	AWS_S3_Bucket_NoncurrentVersionExpiration__PropertiesMap = struct {
		NewerNoncurrentVersions string
		NoncurrentDays          string
	}{
		NewerNoncurrentVersions: "NewerNoncurrentVersions",
		NoncurrentDays:          "NoncurrentDays",
	}

	// AWS_S3_Bucket_NoncurrentVersionExpiration__PropertiesSlice reports all the CloudFormation properties for AWS::S3::Bucket.NoncurrentVersionExpiration.
	AWS_S3_Bucket_NoncurrentVersionExpiration__PropertiesSlice = []string{
		AWS_S3_Bucket_NoncurrentVersionExpiration__PropertiesMap.NewerNoncurrentVersions,
		AWS_S3_Bucket_NoncurrentVersionExpiration__PropertiesMap.NoncurrentDays,
	}
)

// AWS_S3_Bucket_NoncurrentVersionExpiration is a binding for AWS::S3::Bucket.NoncurrentVersionExpiration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-noncurrentversionexpiration.html
type AWS_S3_Bucket_NoncurrentVersionExpiration struct {
	// NewerNoncurrentVersions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-noncurrentversionexpiration.html#cfn-s3-bucket-noncurrentversionexpiration-newernoncurrentversions
	NewerNoncurrentVersions cfz.Expression[int32] `json:"NewerNoncurrentVersions,omitempty"`

	// NoncurrentDays is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-noncurrentversionexpiration.html#cfn-s3-bucket-noncurrentversionexpiration-noncurrentdays
	NoncurrentDays cfz.Expression[int32] `json:"NoncurrentDays,omitempty"`
}

// New__AWS_S3_Bucket_NoncurrentVersionExpiration initializes a new AWS_S3_Bucket_NoncurrentVersionExpiration.
func New__AWS_S3_Bucket_NoncurrentVersionExpiration() AWS_S3_Bucket_NoncurrentVersionExpiration {
	return AWS_S3_Bucket_NoncurrentVersionExpiration{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_Bucket_NoncurrentVersionExpiration) GetType() string {
	return AWS_S3_Bucket_NoncurrentVersionExpiration__Type
}

// Set__NewerNoncurrentVersions updates property "NewerNoncurrentVersions".
func (t AWS_S3_Bucket_NoncurrentVersionExpiration) Set__NewerNoncurrentVersions(v cfz.Expression[int32]) AWS_S3_Bucket_NoncurrentVersionExpiration {
	t.NewerNoncurrentVersions = v
	return t
}

// SetV__NewerNoncurrentVersions updates property "NewerNoncurrentVersions".
func (t AWS_S3_Bucket_NoncurrentVersionExpiration) SetV__NewerNoncurrentVersions(v int32) AWS_S3_Bucket_NoncurrentVersionExpiration {
	t.NewerNoncurrentVersions = cfz.V(v)
	return t
}

// Set__NoncurrentDays updates property "NoncurrentDays".
func (t AWS_S3_Bucket_NoncurrentVersionExpiration) Set__NoncurrentDays(v cfz.Expression[int32]) AWS_S3_Bucket_NoncurrentVersionExpiration {
	t.NoncurrentDays = v
	return t
}

// SetV__NoncurrentDays updates property "NoncurrentDays".
func (t AWS_S3_Bucket_NoncurrentVersionExpiration) SetV__NoncurrentDays(v int32) AWS_S3_Bucket_NoncurrentVersionExpiration {
	t.NoncurrentDays = cfz.V(v)
	return t
}
