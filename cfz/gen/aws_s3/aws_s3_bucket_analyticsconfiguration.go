// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_Bucket_AnalyticsConfiguration__Type is the CloudFormation type for AWS::S3::Bucket.AnalyticsConfiguration.
	AWS_S3_Bucket_AnalyticsConfiguration__Type = "AWS::S3::Bucket.AnalyticsConfiguration"
)

var (
	// AWS_S3_Bucket_AnalyticsConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::S3::Bucket.AnalyticsConfiguration.
	AWS_S3_Bucket_AnalyticsConfiguration__PropertiesMap = struct {
		Id                   string
		Prefix               string
		StorageClassAnalysis string
		TagFilters           string
	}{
		Id:                   "Id",
		Prefix:               "Prefix",
		StorageClassAnalysis: "StorageClassAnalysis",
		TagFilters:           "TagFilters",
	}

	// AWS_S3_Bucket_AnalyticsConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::S3::Bucket.AnalyticsConfiguration.
	AWS_S3_Bucket_AnalyticsConfiguration__PropertiesSlice = []string{
		AWS_S3_Bucket_AnalyticsConfiguration__PropertiesMap.Id,
		AWS_S3_Bucket_AnalyticsConfiguration__PropertiesMap.Prefix,
		AWS_S3_Bucket_AnalyticsConfiguration__PropertiesMap.StorageClassAnalysis,
		AWS_S3_Bucket_AnalyticsConfiguration__PropertiesMap.TagFilters,
	}
)

// AWS_S3_Bucket_AnalyticsConfiguration is a binding for AWS::S3::Bucket.AnalyticsConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html
type AWS_S3_Bucket_AnalyticsConfiguration struct {
	// Id is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-id
	Id cfz.Expression[string] `json:"Id,omitempty"`

	// Prefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-prefix
	Prefix cfz.Expression[string] `json:"Prefix,omitempty"`

	// StorageClassAnalysis is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-storageclassanalysis
	StorageClassAnalysis cfz.Expression[AWS_S3_Bucket_StorageClassAnalysis] `json:"StorageClassAnalysis,omitempty"`

	// TagFilters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-analyticsconfiguration.html#cfn-s3-bucket-analyticsconfiguration-tagfilters
	TagFilters cfz.ExpressionSlice[AWS_S3_Bucket_TagFilter] `json:"TagFilters,omitempty"`
}

// New__AWS_S3_Bucket_AnalyticsConfiguration initializes a new AWS_S3_Bucket_AnalyticsConfiguration.
func New__AWS_S3_Bucket_AnalyticsConfiguration() AWS_S3_Bucket_AnalyticsConfiguration {
	return AWS_S3_Bucket_AnalyticsConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_Bucket_AnalyticsConfiguration) GetType() string {
	return AWS_S3_Bucket_AnalyticsConfiguration__Type
}

// Set__Id updates property "Id".
func (t AWS_S3_Bucket_AnalyticsConfiguration) Set__Id(v cfz.Expression[string]) AWS_S3_Bucket_AnalyticsConfiguration {
	t.Id = v
	return t
}

// SetV__Id updates property "Id".
func (t AWS_S3_Bucket_AnalyticsConfiguration) SetV__Id(v string) AWS_S3_Bucket_AnalyticsConfiguration {
	t.Id = cfz.V(v)
	return t
}

// Set__Prefix updates property "Prefix".
func (t AWS_S3_Bucket_AnalyticsConfiguration) Set__Prefix(v cfz.Expression[string]) AWS_S3_Bucket_AnalyticsConfiguration {
	t.Prefix = v
	return t
}

// SetV__Prefix updates property "Prefix".
func (t AWS_S3_Bucket_AnalyticsConfiguration) SetV__Prefix(v string) AWS_S3_Bucket_AnalyticsConfiguration {
	t.Prefix = cfz.V(v)
	return t
}

// Set__StorageClassAnalysis updates property "StorageClassAnalysis".
func (t AWS_S3_Bucket_AnalyticsConfiguration) Set__StorageClassAnalysis(v cfz.Expression[AWS_S3_Bucket_StorageClassAnalysis]) AWS_S3_Bucket_AnalyticsConfiguration {
	t.StorageClassAnalysis = v
	return t
}

// SetV__StorageClassAnalysis updates property "StorageClassAnalysis".
func (t AWS_S3_Bucket_AnalyticsConfiguration) SetV__StorageClassAnalysis(v AWS_S3_Bucket_StorageClassAnalysis) AWS_S3_Bucket_AnalyticsConfiguration {
	t.StorageClassAnalysis = cfz.V(v)
	return t
}

// Set__TagFilters updates property "TagFilters".
func (t AWS_S3_Bucket_AnalyticsConfiguration) Set__TagFilters(v cfz.ExpressionSlice[AWS_S3_Bucket_TagFilter]) AWS_S3_Bucket_AnalyticsConfiguration {
	t.TagFilters = v
	return t
}

// SetS__TagFilters updates property "TagFilters".
func (t AWS_S3_Bucket_AnalyticsConfiguration) SetS__TagFilters(v ...cfz.Expression[AWS_S3_Bucket_TagFilter]) AWS_S3_Bucket_AnalyticsConfiguration {
	t.TagFilters = cfz.S(v...)
	return t
}

// SetSV__TagFilters updates property "TagFilters".
func (t AWS_S3_Bucket_AnalyticsConfiguration) SetSV__TagFilters(v ...AWS_S3_Bucket_TagFilter) AWS_S3_Bucket_AnalyticsConfiguration {
	t.TagFilters = cfz.SV(v...)
	return t
}
