// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_S3_AccessGrantsInstance)(nil)
	_ cfz.Resource                   = (*AWS_S3_AccessGrantsInstance)(nil)
)

const (
	// AWS_S3_AccessGrantsInstance__Type is the CloudFormation type for AWS::S3::AccessGrantsInstance.
	AWS_S3_AccessGrantsInstance__Type = "AWS::S3::AccessGrantsInstance"
)

var (
	// AWS_S3_AccessGrantsInstance__AttributesMap reports all the CloudFormation attributes for AWS::S3::AccessGrantsInstance.
	AWS_S3_AccessGrantsInstance__AttributesMap = struct {
		AccessGrantsInstanceArn string
		AccessGrantsInstanceId  string
	}{
		AccessGrantsInstanceArn: "AccessGrantsInstanceArn",
		AccessGrantsInstanceId:  "AccessGrantsInstanceId",
	}

	// AWS_S3_AccessGrantsInstance__AttributesSlice reports all the CloudFormation attributes for AWS::S3::AccessGrantsInstance.
	AWS_S3_AccessGrantsInstance__AttributesSlice = []string{
		AWS_S3_AccessGrantsInstance__AttributesMap.AccessGrantsInstanceArn,
		AWS_S3_AccessGrantsInstance__AttributesMap.AccessGrantsInstanceId,
	}
)

var (
	// AWS_S3_AccessGrantsInstance__PropertiesMap reports all the CloudFormation properties for AWS::S3::AccessGrantsInstance.
	AWS_S3_AccessGrantsInstance__PropertiesMap = struct {
		IdentityCenterArn string
		Tags              string
	}{
		IdentityCenterArn: "IdentityCenterArn",
		Tags:              "Tags",
	}

	// AWS_S3_AccessGrantsInstance__PropertiesSlice reports all the CloudFormation properties for AWS::S3::AccessGrantsInstance.
	AWS_S3_AccessGrantsInstance__PropertiesSlice = []string{
		AWS_S3_AccessGrantsInstance__PropertiesMap.IdentityCenterArn,
		AWS_S3_AccessGrantsInstance__PropertiesMap.Tags,
	}
)

// AWS_S3_AccessGrantsInstance is a binding for AWS::S3::AccessGrantsInstance.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantsinstance.html
type AWS_S3_AccessGrantsInstance struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// IdentityCenterArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantsinstance.html#cfn-s3-accessgrantsinstance-identitycenterarn
	IdentityCenterArn cfz.Expression[string] `json:"IdentityCenterArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrantsinstance.html#cfn-s3-accessgrantsinstance-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_S3_AccessGrantsInstance initializes a new *AWS_S3_AccessGrantsInstance.
func New__AWS_S3_AccessGrantsInstance(logicalName string) *AWS_S3_AccessGrantsInstance {
	return &AWS_S3_AccessGrantsInstance{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_S3_AccessGrantsInstance) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_S3_AccessGrantsInstance) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_S3_AccessGrantsInstance) GetType() string {
	return AWS_S3_AccessGrantsInstance__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_S3_AccessGrantsInstance) Set__LogicalName(v string) *AWS_S3_AccessGrantsInstance {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_S3_AccessGrantsInstance) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_S3_AccessGrantsInstance {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_S3_AccessGrantsInstance) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_S3_AccessGrantsInstance {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_S3_AccessGrantsInstance) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_S3_AccessGrantsInstance {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_S3_AccessGrantsInstance) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_S3_AccessGrantsInstance {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_S3_AccessGrantsInstance) Set__RequestedOutputs(v []cfz.Output) *AWS_S3_AccessGrantsInstance {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_S3_AccessGrantsInstance) Add__RequestedOutputs(v ...cfz.Output) *AWS_S3_AccessGrantsInstance {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__IdentityCenterArn updates property "IdentityCenterArn".
func (t *AWS_S3_AccessGrantsInstance) Set__IdentityCenterArn(v cfz.Expression[string]) *AWS_S3_AccessGrantsInstance {
	t.IdentityCenterArn = v
	return t
}

// SetV__IdentityCenterArn updates property "IdentityCenterArn".
func (t *AWS_S3_AccessGrantsInstance) SetV__IdentityCenterArn(v string) *AWS_S3_AccessGrantsInstance {
	t.IdentityCenterArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_S3_AccessGrantsInstance) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_S3_AccessGrantsInstance {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_S3_AccessGrantsInstance) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_S3_AccessGrantsInstance {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_S3_AccessGrantsInstance) SetSV__Tags(v ...cfz.Tag) *AWS_S3_AccessGrantsInstance {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_S3_AccessGrantsInstance) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AccessGrantsInstanceArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AccessGrantsInstanceArn
func (t *AWS_S3_AccessGrantsInstance) GetAtt__AccessGrantsInstanceArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3_AccessGrantsInstance__AttributesMap.AccessGrantsInstanceArn))
}

// GetAtt__AccessGrantsInstanceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AccessGrantsInstanceId
func (t *AWS_S3_AccessGrantsInstance) GetAtt__AccessGrantsInstanceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3_AccessGrantsInstance__AttributesMap.AccessGrantsInstanceId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_S3_AccessGrantsInstance) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AccessGrantsInstanceArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AccessGrantsInstanceArn
func (t *AWS_S3_AccessGrantsInstance) GetConventionalOutputAtt__AccessGrantsInstanceArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAccessGrantsInstanceArn", t.GetAtt__AccessGrantsInstanceArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AccessGrantsInstanceId returns a conventionally configured output for an attribute of this resource.
// Attribute: AccessGrantsInstanceId
func (t *AWS_S3_AccessGrantsInstance) GetConventionalOutputAtt__AccessGrantsInstanceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAccessGrantsInstanceId", t.GetAtt__AccessGrantsInstanceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_S3_AccessGrantsInstance) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_S3_AccessGrantsInstance

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_S3_AccessGrantsInstance) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
