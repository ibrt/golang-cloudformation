// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_S3_AccessGrant)(nil)
	_ cfz.Resource                   = (*AWS_S3_AccessGrant)(nil)
)

const (
	// AWS_S3_AccessGrant__Type is the CloudFormation type for AWS::S3::AccessGrant.
	AWS_S3_AccessGrant__Type = "AWS::S3::AccessGrant"
)

var (
	// AWS_S3_AccessGrant__AttributesMap reports all the CloudFormation attributes for AWS::S3::AccessGrant.
	AWS_S3_AccessGrant__AttributesMap = struct {
		AccessGrantArn string
		AccessGrantId  string
		GrantScope     string
	}{
		AccessGrantArn: "AccessGrantArn",
		AccessGrantId:  "AccessGrantId",
		GrantScope:     "GrantScope",
	}

	// AWS_S3_AccessGrant__AttributesSlice reports all the CloudFormation attributes for AWS::S3::AccessGrant.
	AWS_S3_AccessGrant__AttributesSlice = []string{
		AWS_S3_AccessGrant__AttributesMap.AccessGrantArn,
		AWS_S3_AccessGrant__AttributesMap.AccessGrantId,
		AWS_S3_AccessGrant__AttributesMap.GrantScope,
	}
)

var (
	// AWS_S3_AccessGrant__PropertiesMap reports all the CloudFormation properties for AWS::S3::AccessGrant.
	AWS_S3_AccessGrant__PropertiesMap = struct {
		AccessGrantsLocationConfiguration string
		AccessGrantsLocationId            string
		ApplicationArn                    string
		Grantee                           string
		Permission                        string
		S3PrefixType                      string
		Tags                              string
	}{
		AccessGrantsLocationConfiguration: "AccessGrantsLocationConfiguration",
		AccessGrantsLocationId:            "AccessGrantsLocationId",
		ApplicationArn:                    "ApplicationArn",
		Grantee:                           "Grantee",
		Permission:                        "Permission",
		S3PrefixType:                      "S3PrefixType",
		Tags:                              "Tags",
	}

	// AWS_S3_AccessGrant__PropertiesSlice reports all the CloudFormation properties for AWS::S3::AccessGrant.
	AWS_S3_AccessGrant__PropertiesSlice = []string{
		AWS_S3_AccessGrant__PropertiesMap.AccessGrantsLocationConfiguration,
		AWS_S3_AccessGrant__PropertiesMap.AccessGrantsLocationId,
		AWS_S3_AccessGrant__PropertiesMap.ApplicationArn,
		AWS_S3_AccessGrant__PropertiesMap.Grantee,
		AWS_S3_AccessGrant__PropertiesMap.Permission,
		AWS_S3_AccessGrant__PropertiesMap.S3PrefixType,
		AWS_S3_AccessGrant__PropertiesMap.Tags,
	}
)

// AWS_S3_AccessGrant is a binding for AWS::S3::AccessGrant.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html
type AWS_S3_AccessGrant struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessGrantsLocationConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-accessgrantslocationconfiguration
	AccessGrantsLocationConfiguration cfz.Expression[AWS_S3_AccessGrant_AccessGrantsLocationConfiguration] `json:"AccessGrantsLocationConfiguration,omitempty"`

	// AccessGrantsLocationId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-accessgrantslocationid
	AccessGrantsLocationId cfz.Expression[string] `json:"AccessGrantsLocationId,omitempty"`

	// ApplicationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-applicationarn
	ApplicationArn cfz.Expression[string] `json:"ApplicationArn,omitempty"`

	// Grantee is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-grantee
	Grantee cfz.Expression[AWS_S3_AccessGrant_Grantee] `json:"Grantee,omitempty"`

	// Permission is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-permission
	Permission cfz.Expression[string] `json:"Permission,omitempty"`

	// S3PrefixType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-s3prefixtype
	S3PrefixType cfz.Expression[string] `json:"S3PrefixType,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accessgrant.html#cfn-s3-accessgrant-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_S3_AccessGrant initializes a new *AWS_S3_AccessGrant.
func New__AWS_S3_AccessGrant(logicalName string) *AWS_S3_AccessGrant {
	return &AWS_S3_AccessGrant{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_S3_AccessGrant) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_S3_AccessGrant) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_S3_AccessGrant) GetType() string {
	return AWS_S3_AccessGrant__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_S3_AccessGrant) Set__LogicalName(v string) *AWS_S3_AccessGrant {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_S3_AccessGrant) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_S3_AccessGrant {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_S3_AccessGrant) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_S3_AccessGrant {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_S3_AccessGrant) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_S3_AccessGrant {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_S3_AccessGrant) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_S3_AccessGrant {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_S3_AccessGrant) Set__RequestedOutputs(v []cfz.Output) *AWS_S3_AccessGrant {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_S3_AccessGrant) Add__RequestedOutputs(v ...cfz.Output) *AWS_S3_AccessGrant {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessGrantsLocationConfiguration updates property "AccessGrantsLocationConfiguration".
func (t *AWS_S3_AccessGrant) Set__AccessGrantsLocationConfiguration(v cfz.Expression[AWS_S3_AccessGrant_AccessGrantsLocationConfiguration]) *AWS_S3_AccessGrant {
	t.AccessGrantsLocationConfiguration = v
	return t
}

// SetV__AccessGrantsLocationConfiguration updates property "AccessGrantsLocationConfiguration".
func (t *AWS_S3_AccessGrant) SetV__AccessGrantsLocationConfiguration(v AWS_S3_AccessGrant_AccessGrantsLocationConfiguration) *AWS_S3_AccessGrant {
	t.AccessGrantsLocationConfiguration = cfz.V(v)
	return t
}

// Set__AccessGrantsLocationId updates property "AccessGrantsLocationId".
func (t *AWS_S3_AccessGrant) Set__AccessGrantsLocationId(v cfz.Expression[string]) *AWS_S3_AccessGrant {
	t.AccessGrantsLocationId = v
	return t
}

// SetV__AccessGrantsLocationId updates property "AccessGrantsLocationId".
func (t *AWS_S3_AccessGrant) SetV__AccessGrantsLocationId(v string) *AWS_S3_AccessGrant {
	t.AccessGrantsLocationId = cfz.V(v)
	return t
}

// Set__ApplicationArn updates property "ApplicationArn".
func (t *AWS_S3_AccessGrant) Set__ApplicationArn(v cfz.Expression[string]) *AWS_S3_AccessGrant {
	t.ApplicationArn = v
	return t
}

// SetV__ApplicationArn updates property "ApplicationArn".
func (t *AWS_S3_AccessGrant) SetV__ApplicationArn(v string) *AWS_S3_AccessGrant {
	t.ApplicationArn = cfz.V(v)
	return t
}

// Set__Grantee updates property "Grantee".
func (t *AWS_S3_AccessGrant) Set__Grantee(v cfz.Expression[AWS_S3_AccessGrant_Grantee]) *AWS_S3_AccessGrant {
	t.Grantee = v
	return t
}

// SetV__Grantee updates property "Grantee".
func (t *AWS_S3_AccessGrant) SetV__Grantee(v AWS_S3_AccessGrant_Grantee) *AWS_S3_AccessGrant {
	t.Grantee = cfz.V(v)
	return t
}

// Set__Permission updates property "Permission".
func (t *AWS_S3_AccessGrant) Set__Permission(v cfz.Expression[string]) *AWS_S3_AccessGrant {
	t.Permission = v
	return t
}

// SetV__Permission updates property "Permission".
func (t *AWS_S3_AccessGrant) SetV__Permission(v string) *AWS_S3_AccessGrant {
	t.Permission = cfz.V(v)
	return t
}

// Set__S3PrefixType updates property "S3PrefixType".
func (t *AWS_S3_AccessGrant) Set__S3PrefixType(v cfz.Expression[string]) *AWS_S3_AccessGrant {
	t.S3PrefixType = v
	return t
}

// SetV__S3PrefixType updates property "S3PrefixType".
func (t *AWS_S3_AccessGrant) SetV__S3PrefixType(v string) *AWS_S3_AccessGrant {
	t.S3PrefixType = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_S3_AccessGrant) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_S3_AccessGrant {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_S3_AccessGrant) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_S3_AccessGrant {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_S3_AccessGrant) SetSV__Tags(v ...cfz.Tag) *AWS_S3_AccessGrant {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_S3_AccessGrant) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AccessGrantArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AccessGrantArn
func (t *AWS_S3_AccessGrant) GetAtt__AccessGrantArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3_AccessGrant__AttributesMap.AccessGrantArn))
}

// GetAtt__AccessGrantId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AccessGrantId
func (t *AWS_S3_AccessGrant) GetAtt__AccessGrantId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3_AccessGrant__AttributesMap.AccessGrantId))
}

// GetAtt__GrantScope returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: GrantScope
func (t *AWS_S3_AccessGrant) GetAtt__GrantScope() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_S3_AccessGrant__AttributesMap.GrantScope))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_S3_AccessGrant) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AccessGrantArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AccessGrantArn
func (t *AWS_S3_AccessGrant) GetConventionalOutputAtt__AccessGrantArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAccessGrantArn", t.GetAtt__AccessGrantArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AccessGrantId returns a conventionally configured output for an attribute of this resource.
// Attribute: AccessGrantId
func (t *AWS_S3_AccessGrant) GetConventionalOutputAtt__AccessGrantId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAccessGrantId", t.GetAtt__AccessGrantId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__GrantScope returns a conventionally configured output for an attribute of this resource.
// Attribute: GrantScope
func (t *AWS_S3_AccessGrant) GetConventionalOutputAtt__GrantScope(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGrantScope", t.GetAtt__GrantScope())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_S3_AccessGrant) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_S3_AccessGrant

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_S3_AccessGrant) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
