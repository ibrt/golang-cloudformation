// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_StorageLens_StorageLensConfiguration__Type is the CloudFormation type for AWS::S3::StorageLens.StorageLensConfiguration.
	AWS_S3_StorageLens_StorageLensConfiguration__Type = "AWS::S3::StorageLens.StorageLensConfiguration"
)

var (
	// AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::S3::StorageLens.StorageLensConfiguration.
	AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap = struct {
		AccountLevel   string
		AwsOrg         string
		DataExport     string
		Exclude        string
		Id             string
		Include        string
		IsEnabled      string
		StorageLensArn string
	}{
		AccountLevel:   "AccountLevel",
		AwsOrg:         "AwsOrg",
		DataExport:     "DataExport",
		Exclude:        "Exclude",
		Id:             "Id",
		Include:        "Include",
		IsEnabled:      "IsEnabled",
		StorageLensArn: "StorageLensArn",
	}

	// AWS_S3_StorageLens_StorageLensConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::S3::StorageLens.StorageLensConfiguration.
	AWS_S3_StorageLens_StorageLensConfiguration__PropertiesSlice = []string{
		AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap.AccountLevel,
		AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap.AwsOrg,
		AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap.DataExport,
		AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap.Exclude,
		AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap.Id,
		AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap.Include,
		AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap.IsEnabled,
		AWS_S3_StorageLens_StorageLensConfiguration__PropertiesMap.StorageLensArn,
	}
)

// AWS_S3_StorageLens_StorageLensConfiguration is a binding for AWS::S3::StorageLens.StorageLensConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html
type AWS_S3_StorageLens_StorageLensConfiguration struct {
	// AccountLevel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-accountlevel
	AccountLevel cfz.Expression[AWS_S3_StorageLens_AccountLevel] `json:"AccountLevel,omitempty"`

	// AwsOrg is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-awsorg
	AwsOrg cfz.Expression[AWS_S3_StorageLens_AwsOrg] `json:"AwsOrg,omitempty"`

	// DataExport is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-dataexport
	DataExport cfz.Expression[AWS_S3_StorageLens_DataExport] `json:"DataExport,omitempty"`

	// Exclude is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-exclude
	Exclude cfz.Expression[AWS_S3_StorageLens_BucketsAndRegions] `json:"Exclude,omitempty"`

	// Id is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-id
	Id cfz.Expression[string] `json:"Id,omitempty"`

	// Include is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-include
	Include cfz.Expression[AWS_S3_StorageLens_BucketsAndRegions] `json:"Include,omitempty"`

	// IsEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-isenabled
	IsEnabled cfz.Expression[bool] `json:"IsEnabled,omitempty"`

	// StorageLensArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-storagelensconfiguration.html#cfn-s3-storagelens-storagelensconfiguration-storagelensarn
	StorageLensArn cfz.Expression[string] `json:"StorageLensArn,omitempty"`
}

// New__AWS_S3_StorageLens_StorageLensConfiguration initializes a new AWS_S3_StorageLens_StorageLensConfiguration.
func New__AWS_S3_StorageLens_StorageLensConfiguration() AWS_S3_StorageLens_StorageLensConfiguration {
	return AWS_S3_StorageLens_StorageLensConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_StorageLens_StorageLensConfiguration) GetType() string {
	return AWS_S3_StorageLens_StorageLensConfiguration__Type
}

// Set__AccountLevel updates property "AccountLevel".
func (t AWS_S3_StorageLens_StorageLensConfiguration) Set__AccountLevel(v cfz.Expression[AWS_S3_StorageLens_AccountLevel]) AWS_S3_StorageLens_StorageLensConfiguration {
	t.AccountLevel = v
	return t
}

// SetV__AccountLevel updates property "AccountLevel".
func (t AWS_S3_StorageLens_StorageLensConfiguration) SetV__AccountLevel(v AWS_S3_StorageLens_AccountLevel) AWS_S3_StorageLens_StorageLensConfiguration {
	t.AccountLevel = cfz.V(v)
	return t
}

// Set__AwsOrg updates property "AwsOrg".
func (t AWS_S3_StorageLens_StorageLensConfiguration) Set__AwsOrg(v cfz.Expression[AWS_S3_StorageLens_AwsOrg]) AWS_S3_StorageLens_StorageLensConfiguration {
	t.AwsOrg = v
	return t
}

// SetV__AwsOrg updates property "AwsOrg".
func (t AWS_S3_StorageLens_StorageLensConfiguration) SetV__AwsOrg(v AWS_S3_StorageLens_AwsOrg) AWS_S3_StorageLens_StorageLensConfiguration {
	t.AwsOrg = cfz.V(v)
	return t
}

// Set__DataExport updates property "DataExport".
func (t AWS_S3_StorageLens_StorageLensConfiguration) Set__DataExport(v cfz.Expression[AWS_S3_StorageLens_DataExport]) AWS_S3_StorageLens_StorageLensConfiguration {
	t.DataExport = v
	return t
}

// SetV__DataExport updates property "DataExport".
func (t AWS_S3_StorageLens_StorageLensConfiguration) SetV__DataExport(v AWS_S3_StorageLens_DataExport) AWS_S3_StorageLens_StorageLensConfiguration {
	t.DataExport = cfz.V(v)
	return t
}

// Set__Exclude updates property "Exclude".
func (t AWS_S3_StorageLens_StorageLensConfiguration) Set__Exclude(v cfz.Expression[AWS_S3_StorageLens_BucketsAndRegions]) AWS_S3_StorageLens_StorageLensConfiguration {
	t.Exclude = v
	return t
}

// SetV__Exclude updates property "Exclude".
func (t AWS_S3_StorageLens_StorageLensConfiguration) SetV__Exclude(v AWS_S3_StorageLens_BucketsAndRegions) AWS_S3_StorageLens_StorageLensConfiguration {
	t.Exclude = cfz.V(v)
	return t
}

// Set__Id updates property "Id".
func (t AWS_S3_StorageLens_StorageLensConfiguration) Set__Id(v cfz.Expression[string]) AWS_S3_StorageLens_StorageLensConfiguration {
	t.Id = v
	return t
}

// SetV__Id updates property "Id".
func (t AWS_S3_StorageLens_StorageLensConfiguration) SetV__Id(v string) AWS_S3_StorageLens_StorageLensConfiguration {
	t.Id = cfz.V(v)
	return t
}

// Set__Include updates property "Include".
func (t AWS_S3_StorageLens_StorageLensConfiguration) Set__Include(v cfz.Expression[AWS_S3_StorageLens_BucketsAndRegions]) AWS_S3_StorageLens_StorageLensConfiguration {
	t.Include = v
	return t
}

// SetV__Include updates property "Include".
func (t AWS_S3_StorageLens_StorageLensConfiguration) SetV__Include(v AWS_S3_StorageLens_BucketsAndRegions) AWS_S3_StorageLens_StorageLensConfiguration {
	t.Include = cfz.V(v)
	return t
}

// Set__IsEnabled updates property "IsEnabled".
func (t AWS_S3_StorageLens_StorageLensConfiguration) Set__IsEnabled(v cfz.Expression[bool]) AWS_S3_StorageLens_StorageLensConfiguration {
	t.IsEnabled = v
	return t
}

// SetV__IsEnabled updates property "IsEnabled".
func (t AWS_S3_StorageLens_StorageLensConfiguration) SetV__IsEnabled(v bool) AWS_S3_StorageLens_StorageLensConfiguration {
	t.IsEnabled = cfz.V(v)
	return t
}

// Set__StorageLensArn updates property "StorageLensArn".
func (t AWS_S3_StorageLens_StorageLensConfiguration) Set__StorageLensArn(v cfz.Expression[string]) AWS_S3_StorageLens_StorageLensConfiguration {
	t.StorageLensArn = v
	return t
}

// SetV__StorageLensArn updates property "StorageLensArn".
func (t AWS_S3_StorageLens_StorageLensConfiguration) SetV__StorageLensArn(v string) AWS_S3_StorageLens_StorageLensConfiguration {
	t.StorageLensArn = cfz.V(v)
	return t
}
