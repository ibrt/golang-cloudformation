// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_Bucket_RoutingRuleCondition__Type is the CloudFormation type for AWS::S3::Bucket.RoutingRuleCondition.
	AWS_S3_Bucket_RoutingRuleCondition__Type = "AWS::S3::Bucket.RoutingRuleCondition"
)

var (
	// AWS_S3_Bucket_RoutingRuleCondition__PropertiesMap reports all the CloudFormation properties for AWS::S3::Bucket.RoutingRuleCondition.
	AWS_S3_Bucket_RoutingRuleCondition__PropertiesMap = struct {
		HttpErrorCodeReturnedEquals string
		KeyPrefixEquals             string
	}{
		HttpErrorCodeReturnedEquals: "HttpErrorCodeReturnedEquals",
		KeyPrefixEquals:             "KeyPrefixEquals",
	}

	// AWS_S3_Bucket_RoutingRuleCondition__PropertiesSlice reports all the CloudFormation properties for AWS::S3::Bucket.RoutingRuleCondition.
	AWS_S3_Bucket_RoutingRuleCondition__PropertiesSlice = []string{
		AWS_S3_Bucket_RoutingRuleCondition__PropertiesMap.HttpErrorCodeReturnedEquals,
		AWS_S3_Bucket_RoutingRuleCondition__PropertiesMap.KeyPrefixEquals,
	}
)

// AWS_S3_Bucket_RoutingRuleCondition is a binding for AWS::S3::Bucket.RoutingRuleCondition.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-routingrulecondition.html
type AWS_S3_Bucket_RoutingRuleCondition struct {
	// HttpErrorCodeReturnedEquals is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-routingrulecondition.html#cfn-s3-bucket-routingrulecondition-httperrorcodereturnedequals
	HttpErrorCodeReturnedEquals cfz.Expression[string] `json:"HttpErrorCodeReturnedEquals,omitempty"`

	// KeyPrefixEquals is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-routingrulecondition.html#cfn-s3-bucket-routingrulecondition-keyprefixequals
	KeyPrefixEquals cfz.Expression[string] `json:"KeyPrefixEquals,omitempty"`
}

// New__AWS_S3_Bucket_RoutingRuleCondition initializes a new AWS_S3_Bucket_RoutingRuleCondition.
func New__AWS_S3_Bucket_RoutingRuleCondition() AWS_S3_Bucket_RoutingRuleCondition {
	return AWS_S3_Bucket_RoutingRuleCondition{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_Bucket_RoutingRuleCondition) GetType() string {
	return AWS_S3_Bucket_RoutingRuleCondition__Type
}

// Set__HttpErrorCodeReturnedEquals updates property "HttpErrorCodeReturnedEquals".
func (t AWS_S3_Bucket_RoutingRuleCondition) Set__HttpErrorCodeReturnedEquals(v cfz.Expression[string]) AWS_S3_Bucket_RoutingRuleCondition {
	t.HttpErrorCodeReturnedEquals = v
	return t
}

// SetV__HttpErrorCodeReturnedEquals updates property "HttpErrorCodeReturnedEquals".
func (t AWS_S3_Bucket_RoutingRuleCondition) SetV__HttpErrorCodeReturnedEquals(v string) AWS_S3_Bucket_RoutingRuleCondition {
	t.HttpErrorCodeReturnedEquals = cfz.V(v)
	return t
}

// Set__KeyPrefixEquals updates property "KeyPrefixEquals".
func (t AWS_S3_Bucket_RoutingRuleCondition) Set__KeyPrefixEquals(v cfz.Expression[string]) AWS_S3_Bucket_RoutingRuleCondition {
	t.KeyPrefixEquals = v
	return t
}

// SetV__KeyPrefixEquals updates property "KeyPrefixEquals".
func (t AWS_S3_Bucket_RoutingRuleCondition) SetV__KeyPrefixEquals(v string) AWS_S3_Bucket_RoutingRuleCondition {
	t.KeyPrefixEquals = cfz.V(v)
	return t
}
