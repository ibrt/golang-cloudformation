// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_Bucket_LambdaConfiguration__Type is the CloudFormation type for AWS::S3::Bucket.LambdaConfiguration.
	AWS_S3_Bucket_LambdaConfiguration__Type = "AWS::S3::Bucket.LambdaConfiguration"
)

var (
	// AWS_S3_Bucket_LambdaConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::S3::Bucket.LambdaConfiguration.
	AWS_S3_Bucket_LambdaConfiguration__PropertiesMap = struct {
		Event    string
		Filter   string
		Function string
	}{
		Event:    "Event",
		Filter:   "Filter",
		Function: "Function",
	}

	// AWS_S3_Bucket_LambdaConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::S3::Bucket.LambdaConfiguration.
	AWS_S3_Bucket_LambdaConfiguration__PropertiesSlice = []string{
		AWS_S3_Bucket_LambdaConfiguration__PropertiesMap.Event,
		AWS_S3_Bucket_LambdaConfiguration__PropertiesMap.Filter,
		AWS_S3_Bucket_LambdaConfiguration__PropertiesMap.Function,
	}
)

// AWS_S3_Bucket_LambdaConfiguration is a binding for AWS::S3::Bucket.LambdaConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lambdaconfiguration.html
type AWS_S3_Bucket_LambdaConfiguration struct {
	// Event is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lambdaconfiguration.html#cfn-s3-bucket-lambdaconfiguration-event
	Event cfz.Expression[string] `json:"Event,omitempty"`

	// Filter is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lambdaconfiguration.html#cfn-s3-bucket-lambdaconfiguration-filter
	Filter cfz.Expression[AWS_S3_Bucket_NotificationFilter] `json:"Filter,omitempty"`

	// Function is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lambdaconfiguration.html#cfn-s3-bucket-lambdaconfiguration-function
	Function cfz.Expression[string] `json:"Function,omitempty"`
}

// New__AWS_S3_Bucket_LambdaConfiguration initializes a new AWS_S3_Bucket_LambdaConfiguration.
func New__AWS_S3_Bucket_LambdaConfiguration() AWS_S3_Bucket_LambdaConfiguration {
	return AWS_S3_Bucket_LambdaConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_Bucket_LambdaConfiguration) GetType() string {
	return AWS_S3_Bucket_LambdaConfiguration__Type
}

// Set__Event updates property "Event".
func (t AWS_S3_Bucket_LambdaConfiguration) Set__Event(v cfz.Expression[string]) AWS_S3_Bucket_LambdaConfiguration {
	t.Event = v
	return t
}

// SetV__Event updates property "Event".
func (t AWS_S3_Bucket_LambdaConfiguration) SetV__Event(v string) AWS_S3_Bucket_LambdaConfiguration {
	t.Event = cfz.V(v)
	return t
}

// Set__Filter updates property "Filter".
func (t AWS_S3_Bucket_LambdaConfiguration) Set__Filter(v cfz.Expression[AWS_S3_Bucket_NotificationFilter]) AWS_S3_Bucket_LambdaConfiguration {
	t.Filter = v
	return t
}

// SetV__Filter updates property "Filter".
func (t AWS_S3_Bucket_LambdaConfiguration) SetV__Filter(v AWS_S3_Bucket_NotificationFilter) AWS_S3_Bucket_LambdaConfiguration {
	t.Filter = cfz.V(v)
	return t
}

// Set__Function updates property "Function".
func (t AWS_S3_Bucket_LambdaConfiguration) Set__Function(v cfz.Expression[string]) AWS_S3_Bucket_LambdaConfiguration {
	t.Function = v
	return t
}

// SetV__Function updates property "Function".
func (t AWS_S3_Bucket_LambdaConfiguration) SetV__Function(v string) AWS_S3_Bucket_LambdaConfiguration {
	t.Function = cfz.V(v)
	return t
}
