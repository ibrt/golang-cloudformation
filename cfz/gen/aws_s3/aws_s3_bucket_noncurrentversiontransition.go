// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_Bucket_NoncurrentVersionTransition__Type is the CloudFormation type for AWS::S3::Bucket.NoncurrentVersionTransition.
	AWS_S3_Bucket_NoncurrentVersionTransition__Type = "AWS::S3::Bucket.NoncurrentVersionTransition"
)

var (
	// AWS_S3_Bucket_NoncurrentVersionTransition__PropertiesMap reports all the CloudFormation properties for AWS::S3::Bucket.NoncurrentVersionTransition.
	AWS_S3_Bucket_NoncurrentVersionTransition__PropertiesMap = struct {
		NewerNoncurrentVersions string
		StorageClass            string
		TransitionInDays        string
	}{
		NewerNoncurrentVersions: "NewerNoncurrentVersions",
		StorageClass:            "StorageClass",
		TransitionInDays:        "TransitionInDays",
	}

	// AWS_S3_Bucket_NoncurrentVersionTransition__PropertiesSlice reports all the CloudFormation properties for AWS::S3::Bucket.NoncurrentVersionTransition.
	AWS_S3_Bucket_NoncurrentVersionTransition__PropertiesSlice = []string{
		AWS_S3_Bucket_NoncurrentVersionTransition__PropertiesMap.NewerNoncurrentVersions,
		AWS_S3_Bucket_NoncurrentVersionTransition__PropertiesMap.StorageClass,
		AWS_S3_Bucket_NoncurrentVersionTransition__PropertiesMap.TransitionInDays,
	}
)

// AWS_S3_Bucket_NoncurrentVersionTransition is a binding for AWS::S3::Bucket.NoncurrentVersionTransition.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-noncurrentversiontransition.html
type AWS_S3_Bucket_NoncurrentVersionTransition struct {
	// NewerNoncurrentVersions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-noncurrentversiontransition.html#cfn-s3-bucket-noncurrentversiontransition-newernoncurrentversions
	NewerNoncurrentVersions cfz.Expression[int32] `json:"NewerNoncurrentVersions,omitempty"`

	// StorageClass is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-noncurrentversiontransition.html#cfn-s3-bucket-noncurrentversiontransition-storageclass
	StorageClass cfz.Expression[string] `json:"StorageClass,omitempty"`

	// TransitionInDays is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-noncurrentversiontransition.html#cfn-s3-bucket-noncurrentversiontransition-transitionindays
	TransitionInDays cfz.Expression[int32] `json:"TransitionInDays,omitempty"`
}

// New__AWS_S3_Bucket_NoncurrentVersionTransition initializes a new AWS_S3_Bucket_NoncurrentVersionTransition.
func New__AWS_S3_Bucket_NoncurrentVersionTransition() AWS_S3_Bucket_NoncurrentVersionTransition {
	return AWS_S3_Bucket_NoncurrentVersionTransition{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_Bucket_NoncurrentVersionTransition) GetType() string {
	return AWS_S3_Bucket_NoncurrentVersionTransition__Type
}

// Set__NewerNoncurrentVersions updates property "NewerNoncurrentVersions".
func (t AWS_S3_Bucket_NoncurrentVersionTransition) Set__NewerNoncurrentVersions(v cfz.Expression[int32]) AWS_S3_Bucket_NoncurrentVersionTransition {
	t.NewerNoncurrentVersions = v
	return t
}

// SetV__NewerNoncurrentVersions updates property "NewerNoncurrentVersions".
func (t AWS_S3_Bucket_NoncurrentVersionTransition) SetV__NewerNoncurrentVersions(v int32) AWS_S3_Bucket_NoncurrentVersionTransition {
	t.NewerNoncurrentVersions = cfz.V(v)
	return t
}

// Set__StorageClass updates property "StorageClass".
func (t AWS_S3_Bucket_NoncurrentVersionTransition) Set__StorageClass(v cfz.Expression[string]) AWS_S3_Bucket_NoncurrentVersionTransition {
	t.StorageClass = v
	return t
}

// SetV__StorageClass updates property "StorageClass".
func (t AWS_S3_Bucket_NoncurrentVersionTransition) SetV__StorageClass(v string) AWS_S3_Bucket_NoncurrentVersionTransition {
	t.StorageClass = cfz.V(v)
	return t
}

// Set__TransitionInDays updates property "TransitionInDays".
func (t AWS_S3_Bucket_NoncurrentVersionTransition) Set__TransitionInDays(v cfz.Expression[int32]) AWS_S3_Bucket_NoncurrentVersionTransition {
	t.TransitionInDays = v
	return t
}

// SetV__TransitionInDays updates property "TransitionInDays".
func (t AWS_S3_Bucket_NoncurrentVersionTransition) SetV__TransitionInDays(v int32) AWS_S3_Bucket_NoncurrentVersionTransition {
	t.TransitionInDays = cfz.V(v)
	return t
}
