// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_Bucket_CorsConfiguration__Type is the CloudFormation type for AWS::S3::Bucket.CorsConfiguration.
	AWS_S3_Bucket_CorsConfiguration__Type = "AWS::S3::Bucket.CorsConfiguration"
)

var (
	// AWS_S3_Bucket_CorsConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::S3::Bucket.CorsConfiguration.
	AWS_S3_Bucket_CorsConfiguration__PropertiesMap = struct {
		CorsRules string
	}{
		CorsRules: "CorsRules",
	}

	// AWS_S3_Bucket_CorsConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::S3::Bucket.CorsConfiguration.
	AWS_S3_Bucket_CorsConfiguration__PropertiesSlice = []string{
		AWS_S3_Bucket_CorsConfiguration__PropertiesMap.CorsRules,
	}
)

// AWS_S3_Bucket_CorsConfiguration is a binding for AWS::S3::Bucket.CorsConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html
type AWS_S3_Bucket_CorsConfiguration struct {
	// CorsRules is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-corsconfiguration.html#cfn-s3-bucket-corsconfiguration-corsrules
	CorsRules cfz.ExpressionSlice[AWS_S3_Bucket_CorsRule] `json:"CorsRules,omitempty"`
}

// New__AWS_S3_Bucket_CorsConfiguration initializes a new AWS_S3_Bucket_CorsConfiguration.
func New__AWS_S3_Bucket_CorsConfiguration() AWS_S3_Bucket_CorsConfiguration {
	return AWS_S3_Bucket_CorsConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_Bucket_CorsConfiguration) GetType() string {
	return AWS_S3_Bucket_CorsConfiguration__Type
}

// Set__CorsRules updates property "CorsRules".
func (t AWS_S3_Bucket_CorsConfiguration) Set__CorsRules(v cfz.ExpressionSlice[AWS_S3_Bucket_CorsRule]) AWS_S3_Bucket_CorsConfiguration {
	t.CorsRules = v
	return t
}

// SetS__CorsRules updates property "CorsRules".
func (t AWS_S3_Bucket_CorsConfiguration) SetS__CorsRules(v ...cfz.Expression[AWS_S3_Bucket_CorsRule]) AWS_S3_Bucket_CorsConfiguration {
	t.CorsRules = cfz.S(v...)
	return t
}

// SetSV__CorsRules updates property "CorsRules".
func (t AWS_S3_Bucket_CorsConfiguration) SetSV__CorsRules(v ...AWS_S3_Bucket_CorsRule) AWS_S3_Bucket_CorsConfiguration {
	t.CorsRules = cfz.SV(v...)
	return t
}
