// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_StorageLensGroup_Filter__Type is the CloudFormation type for AWS::S3::StorageLensGroup.Filter.
	AWS_S3_StorageLensGroup_Filter__Type = "AWS::S3::StorageLensGroup.Filter"
)

var (
	// AWS_S3_StorageLensGroup_Filter__PropertiesMap reports all the CloudFormation properties for AWS::S3::StorageLensGroup.Filter.
	AWS_S3_StorageLensGroup_Filter__PropertiesMap = struct {
		And             string
		MatchAnyPrefix  string
		MatchAnySuffix  string
		MatchAnyTag     string
		MatchObjectAge  string
		MatchObjectSize string
		Or              string
	}{
		And:             "And",
		MatchAnyPrefix:  "MatchAnyPrefix",
		MatchAnySuffix:  "MatchAnySuffix",
		MatchAnyTag:     "MatchAnyTag",
		MatchObjectAge:  "MatchObjectAge",
		MatchObjectSize: "MatchObjectSize",
		Or:              "Or",
	}

	// AWS_S3_StorageLensGroup_Filter__PropertiesSlice reports all the CloudFormation properties for AWS::S3::StorageLensGroup.Filter.
	AWS_S3_StorageLensGroup_Filter__PropertiesSlice = []string{
		AWS_S3_StorageLensGroup_Filter__PropertiesMap.And,
		AWS_S3_StorageLensGroup_Filter__PropertiesMap.MatchAnyPrefix,
		AWS_S3_StorageLensGroup_Filter__PropertiesMap.MatchAnySuffix,
		AWS_S3_StorageLensGroup_Filter__PropertiesMap.MatchAnyTag,
		AWS_S3_StorageLensGroup_Filter__PropertiesMap.MatchObjectAge,
		AWS_S3_StorageLensGroup_Filter__PropertiesMap.MatchObjectSize,
		AWS_S3_StorageLensGroup_Filter__PropertiesMap.Or,
	}
)

// AWS_S3_StorageLensGroup_Filter is a binding for AWS::S3::StorageLensGroup.Filter.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelensgroup-filter.html
type AWS_S3_StorageLensGroup_Filter struct {
	// And is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelensgroup-filter.html#cfn-s3-storagelensgroup-filter-and
	And cfz.Expression[AWS_S3_StorageLensGroup_And] `json:"And,omitempty"`

	// MatchAnyPrefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelensgroup-filter.html#cfn-s3-storagelensgroup-filter-matchanyprefix
	MatchAnyPrefix cfz.ExpressionSlice[string] `json:"MatchAnyPrefix,omitempty"`

	// MatchAnySuffix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelensgroup-filter.html#cfn-s3-storagelensgroup-filter-matchanysuffix
	MatchAnySuffix cfz.ExpressionSlice[string] `json:"MatchAnySuffix,omitempty"`

	// MatchAnyTag is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelensgroup-filter.html#cfn-s3-storagelensgroup-filter-matchanytag
	MatchAnyTag cfz.ExpressionSlice[cfz.Tag] `json:"MatchAnyTag,omitempty"`

	// MatchObjectAge is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelensgroup-filter.html#cfn-s3-storagelensgroup-filter-matchobjectage
	MatchObjectAge cfz.Expression[AWS_S3_StorageLensGroup_MatchObjectAge] `json:"MatchObjectAge,omitempty"`

	// MatchObjectSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelensgroup-filter.html#cfn-s3-storagelensgroup-filter-matchobjectsize
	MatchObjectSize cfz.Expression[AWS_S3_StorageLensGroup_MatchObjectSize] `json:"MatchObjectSize,omitempty"`

	// Or is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelensgroup-filter.html#cfn-s3-storagelensgroup-filter-or
	Or cfz.Expression[AWS_S3_StorageLensGroup_Or] `json:"Or,omitempty"`
}

// New__AWS_S3_StorageLensGroup_Filter initializes a new AWS_S3_StorageLensGroup_Filter.
func New__AWS_S3_StorageLensGroup_Filter() AWS_S3_StorageLensGroup_Filter {
	return AWS_S3_StorageLensGroup_Filter{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_StorageLensGroup_Filter) GetType() string {
	return AWS_S3_StorageLensGroup_Filter__Type
}

// Set__And updates property "And".
func (t AWS_S3_StorageLensGroup_Filter) Set__And(v cfz.Expression[AWS_S3_StorageLensGroup_And]) AWS_S3_StorageLensGroup_Filter {
	t.And = v
	return t
}

// SetV__And updates property "And".
func (t AWS_S3_StorageLensGroup_Filter) SetV__And(v AWS_S3_StorageLensGroup_And) AWS_S3_StorageLensGroup_Filter {
	t.And = cfz.V(v)
	return t
}

// Set__MatchAnyPrefix updates property "MatchAnyPrefix".
func (t AWS_S3_StorageLensGroup_Filter) Set__MatchAnyPrefix(v cfz.ExpressionSlice[string]) AWS_S3_StorageLensGroup_Filter {
	t.MatchAnyPrefix = v
	return t
}

// SetS__MatchAnyPrefix updates property "MatchAnyPrefix".
func (t AWS_S3_StorageLensGroup_Filter) SetS__MatchAnyPrefix(v ...cfz.Expression[string]) AWS_S3_StorageLensGroup_Filter {
	t.MatchAnyPrefix = cfz.S(v...)
	return t
}

// SetSV__MatchAnyPrefix updates property "MatchAnyPrefix".
func (t AWS_S3_StorageLensGroup_Filter) SetSV__MatchAnyPrefix(v ...string) AWS_S3_StorageLensGroup_Filter {
	t.MatchAnyPrefix = cfz.SV(v...)
	return t
}

// Set__MatchAnySuffix updates property "MatchAnySuffix".
func (t AWS_S3_StorageLensGroup_Filter) Set__MatchAnySuffix(v cfz.ExpressionSlice[string]) AWS_S3_StorageLensGroup_Filter {
	t.MatchAnySuffix = v
	return t
}

// SetS__MatchAnySuffix updates property "MatchAnySuffix".
func (t AWS_S3_StorageLensGroup_Filter) SetS__MatchAnySuffix(v ...cfz.Expression[string]) AWS_S3_StorageLensGroup_Filter {
	t.MatchAnySuffix = cfz.S(v...)
	return t
}

// SetSV__MatchAnySuffix updates property "MatchAnySuffix".
func (t AWS_S3_StorageLensGroup_Filter) SetSV__MatchAnySuffix(v ...string) AWS_S3_StorageLensGroup_Filter {
	t.MatchAnySuffix = cfz.SV(v...)
	return t
}

// Set__MatchAnyTag updates property "MatchAnyTag".
func (t AWS_S3_StorageLensGroup_Filter) Set__MatchAnyTag(v cfz.ExpressionSlice[cfz.Tag]) AWS_S3_StorageLensGroup_Filter {
	t.MatchAnyTag = v
	return t
}

// SetS__MatchAnyTag updates property "MatchAnyTag".
func (t AWS_S3_StorageLensGroup_Filter) SetS__MatchAnyTag(v ...cfz.Expression[cfz.Tag]) AWS_S3_StorageLensGroup_Filter {
	t.MatchAnyTag = cfz.S(v...)
	return t
}

// SetSV__MatchAnyTag updates property "MatchAnyTag".
func (t AWS_S3_StorageLensGroup_Filter) SetSV__MatchAnyTag(v ...cfz.Tag) AWS_S3_StorageLensGroup_Filter {
	t.MatchAnyTag = cfz.SV(v...)
	return t
}

// Set__MatchObjectAge updates property "MatchObjectAge".
func (t AWS_S3_StorageLensGroup_Filter) Set__MatchObjectAge(v cfz.Expression[AWS_S3_StorageLensGroup_MatchObjectAge]) AWS_S3_StorageLensGroup_Filter {
	t.MatchObjectAge = v
	return t
}

// SetV__MatchObjectAge updates property "MatchObjectAge".
func (t AWS_S3_StorageLensGroup_Filter) SetV__MatchObjectAge(v AWS_S3_StorageLensGroup_MatchObjectAge) AWS_S3_StorageLensGroup_Filter {
	t.MatchObjectAge = cfz.V(v)
	return t
}

// Set__MatchObjectSize updates property "MatchObjectSize".
func (t AWS_S3_StorageLensGroup_Filter) Set__MatchObjectSize(v cfz.Expression[AWS_S3_StorageLensGroup_MatchObjectSize]) AWS_S3_StorageLensGroup_Filter {
	t.MatchObjectSize = v
	return t
}

// SetV__MatchObjectSize updates property "MatchObjectSize".
func (t AWS_S3_StorageLensGroup_Filter) SetV__MatchObjectSize(v AWS_S3_StorageLensGroup_MatchObjectSize) AWS_S3_StorageLensGroup_Filter {
	t.MatchObjectSize = cfz.V(v)
	return t
}

// Set__Or updates property "Or".
func (t AWS_S3_StorageLensGroup_Filter) Set__Or(v cfz.Expression[AWS_S3_StorageLensGroup_Or]) AWS_S3_StorageLensGroup_Filter {
	t.Or = v
	return t
}

// SetV__Or updates property "Or".
func (t AWS_S3_StorageLensGroup_Filter) SetV__Or(v AWS_S3_StorageLensGroup_Or) AWS_S3_StorageLensGroup_Filter {
	t.Or = cfz.V(v)
	return t
}
