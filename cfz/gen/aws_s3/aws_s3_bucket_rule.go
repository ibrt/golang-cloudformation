// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_Bucket_Rule__Type is the CloudFormation type for AWS::S3::Bucket.Rule.
	AWS_S3_Bucket_Rule__Type = "AWS::S3::Bucket.Rule"
)

var (
	// AWS_S3_Bucket_Rule__PropertiesMap reports all the CloudFormation properties for AWS::S3::Bucket.Rule.
	AWS_S3_Bucket_Rule__PropertiesMap = struct {
		AbortIncompleteMultipartUpload    string
		ExpirationDate                    string
		ExpirationInDays                  string
		ExpiredObjectDeleteMarker         string
		Id                                string
		NoncurrentVersionExpiration       string
		NoncurrentVersionExpirationInDays string
		NoncurrentVersionTransition       string
		NoncurrentVersionTransitions      string
		ObjectSizeGreaterThan             string
		ObjectSizeLessThan                string
		Prefix                            string
		Status                            string
		TagFilters                        string
		Transition                        string
		Transitions                       string
	}{
		AbortIncompleteMultipartUpload:    "AbortIncompleteMultipartUpload",
		ExpirationDate:                    "ExpirationDate",
		ExpirationInDays:                  "ExpirationInDays",
		ExpiredObjectDeleteMarker:         "ExpiredObjectDeleteMarker",
		Id:                                "Id",
		NoncurrentVersionExpiration:       "NoncurrentVersionExpiration",
		NoncurrentVersionExpirationInDays: "NoncurrentVersionExpirationInDays",
		NoncurrentVersionTransition:       "NoncurrentVersionTransition",
		NoncurrentVersionTransitions:      "NoncurrentVersionTransitions",
		ObjectSizeGreaterThan:             "ObjectSizeGreaterThan",
		ObjectSizeLessThan:                "ObjectSizeLessThan",
		Prefix:                            "Prefix",
		Status:                            "Status",
		TagFilters:                        "TagFilters",
		Transition:                        "Transition",
		Transitions:                       "Transitions",
	}

	// AWS_S3_Bucket_Rule__PropertiesSlice reports all the CloudFormation properties for AWS::S3::Bucket.Rule.
	AWS_S3_Bucket_Rule__PropertiesSlice = []string{
		AWS_S3_Bucket_Rule__PropertiesMap.AbortIncompleteMultipartUpload,
		AWS_S3_Bucket_Rule__PropertiesMap.ExpirationDate,
		AWS_S3_Bucket_Rule__PropertiesMap.ExpirationInDays,
		AWS_S3_Bucket_Rule__PropertiesMap.ExpiredObjectDeleteMarker,
		AWS_S3_Bucket_Rule__PropertiesMap.Id,
		AWS_S3_Bucket_Rule__PropertiesMap.NoncurrentVersionExpiration,
		AWS_S3_Bucket_Rule__PropertiesMap.NoncurrentVersionExpirationInDays,
		AWS_S3_Bucket_Rule__PropertiesMap.NoncurrentVersionTransition,
		AWS_S3_Bucket_Rule__PropertiesMap.NoncurrentVersionTransitions,
		AWS_S3_Bucket_Rule__PropertiesMap.ObjectSizeGreaterThan,
		AWS_S3_Bucket_Rule__PropertiesMap.ObjectSizeLessThan,
		AWS_S3_Bucket_Rule__PropertiesMap.Prefix,
		AWS_S3_Bucket_Rule__PropertiesMap.Status,
		AWS_S3_Bucket_Rule__PropertiesMap.TagFilters,
		AWS_S3_Bucket_Rule__PropertiesMap.Transition,
		AWS_S3_Bucket_Rule__PropertiesMap.Transitions,
	}
)

// AWS_S3_Bucket_Rule is a binding for AWS::S3::Bucket.Rule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html
type AWS_S3_Bucket_Rule struct {
	// AbortIncompleteMultipartUpload is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-abortincompletemultipartupload
	AbortIncompleteMultipartUpload cfz.Expression[AWS_S3_Bucket_AbortIncompleteMultipartUpload] `json:"AbortIncompleteMultipartUpload,omitempty"`

	// ExpirationDate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-expirationdate
	ExpirationDate cfz.Expression[string] `json:"ExpirationDate,omitempty"`

	// ExpirationInDays is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-expirationindays
	ExpirationInDays cfz.Expression[int32] `json:"ExpirationInDays,omitempty"`

	// ExpiredObjectDeleteMarker is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-expiredobjectdeletemarker
	ExpiredObjectDeleteMarker cfz.Expression[bool] `json:"ExpiredObjectDeleteMarker,omitempty"`

	// Id is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-id
	Id cfz.Expression[string] `json:"Id,omitempty"`

	// NoncurrentVersionExpiration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-noncurrentversionexpiration
	NoncurrentVersionExpiration cfz.Expression[AWS_S3_Bucket_NoncurrentVersionExpiration] `json:"NoncurrentVersionExpiration,omitempty"`

	// NoncurrentVersionExpirationInDays is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-noncurrentversionexpirationindays
	NoncurrentVersionExpirationInDays cfz.Expression[int32] `json:"NoncurrentVersionExpirationInDays,omitempty"`

	// NoncurrentVersionTransition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-noncurrentversiontransition
	NoncurrentVersionTransition cfz.Expression[AWS_S3_Bucket_NoncurrentVersionTransition] `json:"NoncurrentVersionTransition,omitempty"`

	// NoncurrentVersionTransitions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-noncurrentversiontransitions
	NoncurrentVersionTransitions cfz.ExpressionSlice[AWS_S3_Bucket_NoncurrentVersionTransition] `json:"NoncurrentVersionTransitions,omitempty"`

	// ObjectSizeGreaterThan is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-objectsizegreaterthan
	ObjectSizeGreaterThan cfz.Expression[string] `json:"ObjectSizeGreaterThan,omitempty"`

	// ObjectSizeLessThan is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-objectsizelessthan
	ObjectSizeLessThan cfz.Expression[string] `json:"ObjectSizeLessThan,omitempty"`

	// Prefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-prefix
	Prefix cfz.Expression[string] `json:"Prefix,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-status
	Status cfz.Expression[string] `json:"Status,omitempty"`

	// TagFilters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-tagfilters
	TagFilters cfz.ExpressionSlice[AWS_S3_Bucket_TagFilter] `json:"TagFilters,omitempty"`

	// Transition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-transition
	Transition cfz.Expression[AWS_S3_Bucket_Transition] `json:"Transition,omitempty"`

	// Transitions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-rule.html#cfn-s3-bucket-rule-transitions
	Transitions cfz.ExpressionSlice[AWS_S3_Bucket_Transition] `json:"Transitions,omitempty"`
}

// New__AWS_S3_Bucket_Rule initializes a new AWS_S3_Bucket_Rule.
func New__AWS_S3_Bucket_Rule() AWS_S3_Bucket_Rule {
	return AWS_S3_Bucket_Rule{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_Bucket_Rule) GetType() string {
	return AWS_S3_Bucket_Rule__Type
}

// Set__AbortIncompleteMultipartUpload updates property "AbortIncompleteMultipartUpload".
func (t AWS_S3_Bucket_Rule) Set__AbortIncompleteMultipartUpload(v cfz.Expression[AWS_S3_Bucket_AbortIncompleteMultipartUpload]) AWS_S3_Bucket_Rule {
	t.AbortIncompleteMultipartUpload = v
	return t
}

// SetV__AbortIncompleteMultipartUpload updates property "AbortIncompleteMultipartUpload".
func (t AWS_S3_Bucket_Rule) SetV__AbortIncompleteMultipartUpload(v AWS_S3_Bucket_AbortIncompleteMultipartUpload) AWS_S3_Bucket_Rule {
	t.AbortIncompleteMultipartUpload = cfz.V(v)
	return t
}

// Set__ExpirationDate updates property "ExpirationDate".
func (t AWS_S3_Bucket_Rule) Set__ExpirationDate(v cfz.Expression[string]) AWS_S3_Bucket_Rule {
	t.ExpirationDate = v
	return t
}

// SetV__ExpirationDate updates property "ExpirationDate".
func (t AWS_S3_Bucket_Rule) SetV__ExpirationDate(v string) AWS_S3_Bucket_Rule {
	t.ExpirationDate = cfz.V(v)
	return t
}

// Set__ExpirationInDays updates property "ExpirationInDays".
func (t AWS_S3_Bucket_Rule) Set__ExpirationInDays(v cfz.Expression[int32]) AWS_S3_Bucket_Rule {
	t.ExpirationInDays = v
	return t
}

// SetV__ExpirationInDays updates property "ExpirationInDays".
func (t AWS_S3_Bucket_Rule) SetV__ExpirationInDays(v int32) AWS_S3_Bucket_Rule {
	t.ExpirationInDays = cfz.V(v)
	return t
}

// Set__ExpiredObjectDeleteMarker updates property "ExpiredObjectDeleteMarker".
func (t AWS_S3_Bucket_Rule) Set__ExpiredObjectDeleteMarker(v cfz.Expression[bool]) AWS_S3_Bucket_Rule {
	t.ExpiredObjectDeleteMarker = v
	return t
}

// SetV__ExpiredObjectDeleteMarker updates property "ExpiredObjectDeleteMarker".
func (t AWS_S3_Bucket_Rule) SetV__ExpiredObjectDeleteMarker(v bool) AWS_S3_Bucket_Rule {
	t.ExpiredObjectDeleteMarker = cfz.V(v)
	return t
}

// Set__Id updates property "Id".
func (t AWS_S3_Bucket_Rule) Set__Id(v cfz.Expression[string]) AWS_S3_Bucket_Rule {
	t.Id = v
	return t
}

// SetV__Id updates property "Id".
func (t AWS_S3_Bucket_Rule) SetV__Id(v string) AWS_S3_Bucket_Rule {
	t.Id = cfz.V(v)
	return t
}

// Set__NoncurrentVersionExpiration updates property "NoncurrentVersionExpiration".
func (t AWS_S3_Bucket_Rule) Set__NoncurrentVersionExpiration(v cfz.Expression[AWS_S3_Bucket_NoncurrentVersionExpiration]) AWS_S3_Bucket_Rule {
	t.NoncurrentVersionExpiration = v
	return t
}

// SetV__NoncurrentVersionExpiration updates property "NoncurrentVersionExpiration".
func (t AWS_S3_Bucket_Rule) SetV__NoncurrentVersionExpiration(v AWS_S3_Bucket_NoncurrentVersionExpiration) AWS_S3_Bucket_Rule {
	t.NoncurrentVersionExpiration = cfz.V(v)
	return t
}

// Set__NoncurrentVersionExpirationInDays updates property "NoncurrentVersionExpirationInDays".
func (t AWS_S3_Bucket_Rule) Set__NoncurrentVersionExpirationInDays(v cfz.Expression[int32]) AWS_S3_Bucket_Rule {
	t.NoncurrentVersionExpirationInDays = v
	return t
}

// SetV__NoncurrentVersionExpirationInDays updates property "NoncurrentVersionExpirationInDays".
func (t AWS_S3_Bucket_Rule) SetV__NoncurrentVersionExpirationInDays(v int32) AWS_S3_Bucket_Rule {
	t.NoncurrentVersionExpirationInDays = cfz.V(v)
	return t
}

// Set__NoncurrentVersionTransition updates property "NoncurrentVersionTransition".
func (t AWS_S3_Bucket_Rule) Set__NoncurrentVersionTransition(v cfz.Expression[AWS_S3_Bucket_NoncurrentVersionTransition]) AWS_S3_Bucket_Rule {
	t.NoncurrentVersionTransition = v
	return t
}

// SetV__NoncurrentVersionTransition updates property "NoncurrentVersionTransition".
func (t AWS_S3_Bucket_Rule) SetV__NoncurrentVersionTransition(v AWS_S3_Bucket_NoncurrentVersionTransition) AWS_S3_Bucket_Rule {
	t.NoncurrentVersionTransition = cfz.V(v)
	return t
}

// Set__NoncurrentVersionTransitions updates property "NoncurrentVersionTransitions".
func (t AWS_S3_Bucket_Rule) Set__NoncurrentVersionTransitions(v cfz.ExpressionSlice[AWS_S3_Bucket_NoncurrentVersionTransition]) AWS_S3_Bucket_Rule {
	t.NoncurrentVersionTransitions = v
	return t
}

// SetS__NoncurrentVersionTransitions updates property "NoncurrentVersionTransitions".
func (t AWS_S3_Bucket_Rule) SetS__NoncurrentVersionTransitions(v ...cfz.Expression[AWS_S3_Bucket_NoncurrentVersionTransition]) AWS_S3_Bucket_Rule {
	t.NoncurrentVersionTransitions = cfz.S(v...)
	return t
}

// SetSV__NoncurrentVersionTransitions updates property "NoncurrentVersionTransitions".
func (t AWS_S3_Bucket_Rule) SetSV__NoncurrentVersionTransitions(v ...AWS_S3_Bucket_NoncurrentVersionTransition) AWS_S3_Bucket_Rule {
	t.NoncurrentVersionTransitions = cfz.SV(v...)
	return t
}

// Set__ObjectSizeGreaterThan updates property "ObjectSizeGreaterThan".
func (t AWS_S3_Bucket_Rule) Set__ObjectSizeGreaterThan(v cfz.Expression[string]) AWS_S3_Bucket_Rule {
	t.ObjectSizeGreaterThan = v
	return t
}

// SetV__ObjectSizeGreaterThan updates property "ObjectSizeGreaterThan".
func (t AWS_S3_Bucket_Rule) SetV__ObjectSizeGreaterThan(v string) AWS_S3_Bucket_Rule {
	t.ObjectSizeGreaterThan = cfz.V(v)
	return t
}

// Set__ObjectSizeLessThan updates property "ObjectSizeLessThan".
func (t AWS_S3_Bucket_Rule) Set__ObjectSizeLessThan(v cfz.Expression[string]) AWS_S3_Bucket_Rule {
	t.ObjectSizeLessThan = v
	return t
}

// SetV__ObjectSizeLessThan updates property "ObjectSizeLessThan".
func (t AWS_S3_Bucket_Rule) SetV__ObjectSizeLessThan(v string) AWS_S3_Bucket_Rule {
	t.ObjectSizeLessThan = cfz.V(v)
	return t
}

// Set__Prefix updates property "Prefix".
func (t AWS_S3_Bucket_Rule) Set__Prefix(v cfz.Expression[string]) AWS_S3_Bucket_Rule {
	t.Prefix = v
	return t
}

// SetV__Prefix updates property "Prefix".
func (t AWS_S3_Bucket_Rule) SetV__Prefix(v string) AWS_S3_Bucket_Rule {
	t.Prefix = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t AWS_S3_Bucket_Rule) Set__Status(v cfz.Expression[string]) AWS_S3_Bucket_Rule {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t AWS_S3_Bucket_Rule) SetV__Status(v string) AWS_S3_Bucket_Rule {
	t.Status = cfz.V(v)
	return t
}

// Set__TagFilters updates property "TagFilters".
func (t AWS_S3_Bucket_Rule) Set__TagFilters(v cfz.ExpressionSlice[AWS_S3_Bucket_TagFilter]) AWS_S3_Bucket_Rule {
	t.TagFilters = v
	return t
}

// SetS__TagFilters updates property "TagFilters".
func (t AWS_S3_Bucket_Rule) SetS__TagFilters(v ...cfz.Expression[AWS_S3_Bucket_TagFilter]) AWS_S3_Bucket_Rule {
	t.TagFilters = cfz.S(v...)
	return t
}

// SetSV__TagFilters updates property "TagFilters".
func (t AWS_S3_Bucket_Rule) SetSV__TagFilters(v ...AWS_S3_Bucket_TagFilter) AWS_S3_Bucket_Rule {
	t.TagFilters = cfz.SV(v...)
	return t
}

// Set__Transition updates property "Transition".
func (t AWS_S3_Bucket_Rule) Set__Transition(v cfz.Expression[AWS_S3_Bucket_Transition]) AWS_S3_Bucket_Rule {
	t.Transition = v
	return t
}

// SetV__Transition updates property "Transition".
func (t AWS_S3_Bucket_Rule) SetV__Transition(v AWS_S3_Bucket_Transition) AWS_S3_Bucket_Rule {
	t.Transition = cfz.V(v)
	return t
}

// Set__Transitions updates property "Transitions".
func (t AWS_S3_Bucket_Rule) Set__Transitions(v cfz.ExpressionSlice[AWS_S3_Bucket_Transition]) AWS_S3_Bucket_Rule {
	t.Transitions = v
	return t
}

// SetS__Transitions updates property "Transitions".
func (t AWS_S3_Bucket_Rule) SetS__Transitions(v ...cfz.Expression[AWS_S3_Bucket_Transition]) AWS_S3_Bucket_Rule {
	t.Transitions = cfz.S(v...)
	return t
}

// SetSV__Transitions updates property "Transitions".
func (t AWS_S3_Bucket_Rule) SetSV__Transitions(v ...AWS_S3_Bucket_Transition) AWS_S3_Bucket_Rule {
	t.Transitions = cfz.SV(v...)
	return t
}
