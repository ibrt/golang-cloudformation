// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_Bucket_Transition__Type is the CloudFormation type for AWS::S3::Bucket.Transition.
	AWS_S3_Bucket_Transition__Type = "AWS::S3::Bucket.Transition"
)

var (
	// AWS_S3_Bucket_Transition__PropertiesMap reports all the CloudFormation properties for AWS::S3::Bucket.Transition.
	AWS_S3_Bucket_Transition__PropertiesMap = struct {
		StorageClass     string
		TransitionDate   string
		TransitionInDays string
	}{
		StorageClass:     "StorageClass",
		TransitionDate:   "TransitionDate",
		TransitionInDays: "TransitionInDays",
	}

	// AWS_S3_Bucket_Transition__PropertiesSlice reports all the CloudFormation properties for AWS::S3::Bucket.Transition.
	AWS_S3_Bucket_Transition__PropertiesSlice = []string{
		AWS_S3_Bucket_Transition__PropertiesMap.StorageClass,
		AWS_S3_Bucket_Transition__PropertiesMap.TransitionDate,
		AWS_S3_Bucket_Transition__PropertiesMap.TransitionInDays,
	}
)

// AWS_S3_Bucket_Transition is a binding for AWS::S3::Bucket.Transition.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-transition.html
type AWS_S3_Bucket_Transition struct {
	// StorageClass is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-transition.html#cfn-s3-bucket-transition-storageclass
	StorageClass cfz.Expression[string] `json:"StorageClass,omitempty"`

	// TransitionDate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-transition.html#cfn-s3-bucket-transition-transitiondate
	TransitionDate cfz.Expression[string] `json:"TransitionDate,omitempty"`

	// TransitionInDays is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-transition.html#cfn-s3-bucket-transition-transitionindays
	TransitionInDays cfz.Expression[int32] `json:"TransitionInDays,omitempty"`
}

// New__AWS_S3_Bucket_Transition initializes a new AWS_S3_Bucket_Transition.
func New__AWS_S3_Bucket_Transition() AWS_S3_Bucket_Transition {
	return AWS_S3_Bucket_Transition{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_Bucket_Transition) GetType() string {
	return AWS_S3_Bucket_Transition__Type
}

// Set__StorageClass updates property "StorageClass".
func (t AWS_S3_Bucket_Transition) Set__StorageClass(v cfz.Expression[string]) AWS_S3_Bucket_Transition {
	t.StorageClass = v
	return t
}

// SetV__StorageClass updates property "StorageClass".
func (t AWS_S3_Bucket_Transition) SetV__StorageClass(v string) AWS_S3_Bucket_Transition {
	t.StorageClass = cfz.V(v)
	return t
}

// Set__TransitionDate updates property "TransitionDate".
func (t AWS_S3_Bucket_Transition) Set__TransitionDate(v cfz.Expression[string]) AWS_S3_Bucket_Transition {
	t.TransitionDate = v
	return t
}

// SetV__TransitionDate updates property "TransitionDate".
func (t AWS_S3_Bucket_Transition) SetV__TransitionDate(v string) AWS_S3_Bucket_Transition {
	t.TransitionDate = cfz.V(v)
	return t
}

// Set__TransitionInDays updates property "TransitionInDays".
func (t AWS_S3_Bucket_Transition) Set__TransitionInDays(v cfz.Expression[int32]) AWS_S3_Bucket_Transition {
	t.TransitionInDays = v
	return t
}

// SetV__TransitionInDays updates property "TransitionInDays".
func (t AWS_S3_Bucket_Transition) SetV__TransitionInDays(v int32) AWS_S3_Bucket_Transition {
	t.TransitionInDays = cfz.V(v)
	return t
}
