// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_s3

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_S3_StorageLens_BucketsAndRegions__Type is the CloudFormation type for AWS::S3::StorageLens.BucketsAndRegions.
	AWS_S3_StorageLens_BucketsAndRegions__Type = "AWS::S3::StorageLens.BucketsAndRegions"
)

var (
	// AWS_S3_StorageLens_BucketsAndRegions__PropertiesMap reports all the CloudFormation properties for AWS::S3::StorageLens.BucketsAndRegions.
	AWS_S3_StorageLens_BucketsAndRegions__PropertiesMap = struct {
		Buckets string
		Regions string
	}{
		Buckets: "Buckets",
		Regions: "Regions",
	}

	// AWS_S3_StorageLens_BucketsAndRegions__PropertiesSlice reports all the CloudFormation properties for AWS::S3::StorageLens.BucketsAndRegions.
	AWS_S3_StorageLens_BucketsAndRegions__PropertiesSlice = []string{
		AWS_S3_StorageLens_BucketsAndRegions__PropertiesMap.Buckets,
		AWS_S3_StorageLens_BucketsAndRegions__PropertiesMap.Regions,
	}
)

// AWS_S3_StorageLens_BucketsAndRegions is a binding for AWS::S3::StorageLens.BucketsAndRegions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-bucketsandregions.html
type AWS_S3_StorageLens_BucketsAndRegions struct {
	// Buckets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-bucketsandregions.html#cfn-s3-storagelens-bucketsandregions-buckets
	Buckets cfz.ExpressionSlice[string] `json:"Buckets,omitempty"`

	// Regions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-storagelens-bucketsandregions.html#cfn-s3-storagelens-bucketsandregions-regions
	Regions cfz.ExpressionSlice[string] `json:"Regions,omitempty"`
}

// New__AWS_S3_StorageLens_BucketsAndRegions initializes a new AWS_S3_StorageLens_BucketsAndRegions.
func New__AWS_S3_StorageLens_BucketsAndRegions() AWS_S3_StorageLens_BucketsAndRegions {
	return AWS_S3_StorageLens_BucketsAndRegions{}
}

// GetType returns the CloudFormation type.
func (AWS_S3_StorageLens_BucketsAndRegions) GetType() string {
	return AWS_S3_StorageLens_BucketsAndRegions__Type
}

// Set__Buckets updates property "Buckets".
func (t AWS_S3_StorageLens_BucketsAndRegions) Set__Buckets(v cfz.ExpressionSlice[string]) AWS_S3_StorageLens_BucketsAndRegions {
	t.Buckets = v
	return t
}

// SetS__Buckets updates property "Buckets".
func (t AWS_S3_StorageLens_BucketsAndRegions) SetS__Buckets(v ...cfz.Expression[string]) AWS_S3_StorageLens_BucketsAndRegions {
	t.Buckets = cfz.S(v...)
	return t
}

// SetSV__Buckets updates property "Buckets".
func (t AWS_S3_StorageLens_BucketsAndRegions) SetSV__Buckets(v ...string) AWS_S3_StorageLens_BucketsAndRegions {
	t.Buckets = cfz.SV(v...)
	return t
}

// Set__Regions updates property "Regions".
func (t AWS_S3_StorageLens_BucketsAndRegions) Set__Regions(v cfz.ExpressionSlice[string]) AWS_S3_StorageLens_BucketsAndRegions {
	t.Regions = v
	return t
}

// SetS__Regions updates property "Regions".
func (t AWS_S3_StorageLens_BucketsAndRegions) SetS__Regions(v ...cfz.Expression[string]) AWS_S3_StorageLens_BucketsAndRegions {
	t.Regions = cfz.S(v...)
	return t
}

// SetSV__Regions updates property "Regions".
func (t AWS_S3_StorageLens_BucketsAndRegions) SetSV__Regions(v ...string) AWS_S3_StorageLens_BucketsAndRegions {
	t.Regions = cfz.SV(v...)
	return t
}
