// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_aps

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_APS_Scraper_Destination__Type is the CloudFormation type for AWS::APS::Scraper.Destination.
	AWS_APS_Scraper_Destination__Type = "AWS::APS::Scraper.Destination"
)

var (
	// AWS_APS_Scraper_Destination__PropertiesMap reports all the CloudFormation properties for AWS::APS::Scraper.Destination.
	AWS_APS_Scraper_Destination__PropertiesMap = struct {
		AmpConfiguration string
	}{
		AmpConfiguration: "AmpConfiguration",
	}

	// AWS_APS_Scraper_Destination__PropertiesSlice reports all the CloudFormation properties for AWS::APS::Scraper.Destination.
	AWS_APS_Scraper_Destination__PropertiesSlice = []string{
		AWS_APS_Scraper_Destination__PropertiesMap.AmpConfiguration,
	}
)

// AWS_APS_Scraper_Destination is a binding for AWS::APS::Scraper.Destination.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-aps-scraper-destination.html
type AWS_APS_Scraper_Destination struct {
	// AmpConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-aps-scraper-destination.html#cfn-aps-scraper-destination-ampconfiguration
	AmpConfiguration cfz.Expression[AWS_APS_Scraper_AmpConfiguration] `json:"AmpConfiguration,omitempty"`
}

// New__AWS_APS_Scraper_Destination initializes a new AWS_APS_Scraper_Destination.
func New__AWS_APS_Scraper_Destination() AWS_APS_Scraper_Destination {
	return AWS_APS_Scraper_Destination{}
}

// GetType returns the CloudFormation type.
func (AWS_APS_Scraper_Destination) GetType() string {
	return AWS_APS_Scraper_Destination__Type
}

// Set__AmpConfiguration updates property "AmpConfiguration".
func (t AWS_APS_Scraper_Destination) Set__AmpConfiguration(v cfz.Expression[AWS_APS_Scraper_AmpConfiguration]) AWS_APS_Scraper_Destination {
	t.AmpConfiguration = v
	return t
}

// SetV__AmpConfiguration updates property "AmpConfiguration".
func (t AWS_APS_Scraper_Destination) SetV__AmpConfiguration(v AWS_APS_Scraper_AmpConfiguration) AWS_APS_Scraper_Destination {
	t.AmpConfiguration = cfz.V(v)
	return t
}
