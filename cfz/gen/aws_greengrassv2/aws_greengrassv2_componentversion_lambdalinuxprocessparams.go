// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_greengrassv2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams__Type is the CloudFormation type for AWS::GreengrassV2::ComponentVersion.LambdaLinuxProcessParams.
	AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams__Type = "AWS::GreengrassV2::ComponentVersion.LambdaLinuxProcessParams"
)

var (
	// AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams__PropertiesMap reports all the CloudFormation properties for AWS::GreengrassV2::ComponentVersion.LambdaLinuxProcessParams.
	AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams__PropertiesMap = struct {
		ContainerParams string
		IsolationMode   string
	}{
		ContainerParams: "ContainerParams",
		IsolationMode:   "IsolationMode",
	}

	// AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams__PropertiesSlice reports all the CloudFormation properties for AWS::GreengrassV2::ComponentVersion.LambdaLinuxProcessParams.
	AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams__PropertiesSlice = []string{
		AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams__PropertiesMap.ContainerParams,
		AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams__PropertiesMap.IsolationMode,
	}
)

// AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams is a binding for AWS::GreengrassV2::ComponentVersion.LambdaLinuxProcessParams.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrassv2-componentversion-lambdalinuxprocessparams.html
type AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams struct {
	// ContainerParams is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrassv2-componentversion-lambdalinuxprocessparams.html#cfn-greengrassv2-componentversion-lambdalinuxprocessparams-containerparams
	ContainerParams cfz.Expression[AWS_GreengrassV2_ComponentVersion_LambdaContainerParams] `json:"ContainerParams,omitempty"`

	// IsolationMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrassv2-componentversion-lambdalinuxprocessparams.html#cfn-greengrassv2-componentversion-lambdalinuxprocessparams-isolationmode
	IsolationMode cfz.Expression[string] `json:"IsolationMode,omitempty"`
}

// New__AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams initializes a new AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams.
func New__AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams() AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams {
	return AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams{}
}

// GetType returns the CloudFormation type.
func (AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams) GetType() string {
	return AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams__Type
}

// Set__ContainerParams updates property "ContainerParams".
func (t AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams) Set__ContainerParams(v cfz.Expression[AWS_GreengrassV2_ComponentVersion_LambdaContainerParams]) AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams {
	t.ContainerParams = v
	return t
}

// SetV__ContainerParams updates property "ContainerParams".
func (t AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams) SetV__ContainerParams(v AWS_GreengrassV2_ComponentVersion_LambdaContainerParams) AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams {
	t.ContainerParams = cfz.V(v)
	return t
}

// Set__IsolationMode updates property "IsolationMode".
func (t AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams) Set__IsolationMode(v cfz.Expression[string]) AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams {
	t.IsolationMode = v
	return t
}

// SetV__IsolationMode updates property "IsolationMode".
func (t AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams) SetV__IsolationMode(v string) AWS_GreengrassV2_ComponentVersion_LambdaLinuxProcessParams {
	t.IsolationMode = cfz.V(v)
	return t
}
