// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_greengrassv2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_GreengrassV2_Deployment)(nil)
	_ cfz.Resource                   = (*AWS_GreengrassV2_Deployment)(nil)
)

const (
	// AWS_GreengrassV2_Deployment__Type is the CloudFormation type for AWS::GreengrassV2::Deployment.
	AWS_GreengrassV2_Deployment__Type = "AWS::GreengrassV2::Deployment"
)

var (
	// AWS_GreengrassV2_Deployment__AttributesMap reports all the CloudFormation attributes for AWS::GreengrassV2::Deployment.
	AWS_GreengrassV2_Deployment__AttributesMap = struct {
		DeploymentId string
	}{
		DeploymentId: "DeploymentId",
	}

	// AWS_GreengrassV2_Deployment__AttributesSlice reports all the CloudFormation attributes for AWS::GreengrassV2::Deployment.
	AWS_GreengrassV2_Deployment__AttributesSlice = []string{
		AWS_GreengrassV2_Deployment__AttributesMap.DeploymentId,
	}
)

var (
	// AWS_GreengrassV2_Deployment__PropertiesMap reports all the CloudFormation properties for AWS::GreengrassV2::Deployment.
	AWS_GreengrassV2_Deployment__PropertiesMap = struct {
		Components          string
		DeploymentName      string
		DeploymentPolicies  string
		IotJobConfiguration string
		ParentTargetArn     string
		Tags                string
		TargetArn           string
	}{
		Components:          "Components",
		DeploymentName:      "DeploymentName",
		DeploymentPolicies:  "DeploymentPolicies",
		IotJobConfiguration: "IotJobConfiguration",
		ParentTargetArn:     "ParentTargetArn",
		Tags:                "Tags",
		TargetArn:           "TargetArn",
	}

	// AWS_GreengrassV2_Deployment__PropertiesSlice reports all the CloudFormation properties for AWS::GreengrassV2::Deployment.
	AWS_GreengrassV2_Deployment__PropertiesSlice = []string{
		AWS_GreengrassV2_Deployment__PropertiesMap.Components,
		AWS_GreengrassV2_Deployment__PropertiesMap.DeploymentName,
		AWS_GreengrassV2_Deployment__PropertiesMap.DeploymentPolicies,
		AWS_GreengrassV2_Deployment__PropertiesMap.IotJobConfiguration,
		AWS_GreengrassV2_Deployment__PropertiesMap.ParentTargetArn,
		AWS_GreengrassV2_Deployment__PropertiesMap.Tags,
		AWS_GreengrassV2_Deployment__PropertiesMap.TargetArn,
	}
)

// AWS_GreengrassV2_Deployment is a binding for AWS::GreengrassV2::Deployment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html
type AWS_GreengrassV2_Deployment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Components is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-components
	Components cfz.ExpressionMap[AWS_GreengrassV2_Deployment_ComponentDeploymentSpecification] `json:"Components,omitempty"`

	// DeploymentName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-deploymentname
	DeploymentName cfz.Expression[string] `json:"DeploymentName,omitempty"`

	// DeploymentPolicies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-deploymentpolicies
	DeploymentPolicies cfz.Expression[AWS_GreengrassV2_Deployment_DeploymentPolicies] `json:"DeploymentPolicies,omitempty"`

	// IotJobConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-iotjobconfiguration
	IotJobConfiguration cfz.Expression[AWS_GreengrassV2_Deployment_DeploymentIoTJobConfiguration] `json:"IotJobConfiguration,omitempty"`

	// ParentTargetArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-parenttargetarn
	ParentTargetArn cfz.Expression[string] `json:"ParentTargetArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// TargetArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrassv2-deployment.html#cfn-greengrassv2-deployment-targetarn
	TargetArn cfz.Expression[string] `json:"TargetArn,omitempty"`
}

// New__AWS_GreengrassV2_Deployment initializes a new *AWS_GreengrassV2_Deployment.
func New__AWS_GreengrassV2_Deployment(logicalName string) *AWS_GreengrassV2_Deployment {
	return &AWS_GreengrassV2_Deployment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_GreengrassV2_Deployment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_GreengrassV2_Deployment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_GreengrassV2_Deployment) GetType() string {
	return AWS_GreengrassV2_Deployment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_GreengrassV2_Deployment) Set__LogicalName(v string) *AWS_GreengrassV2_Deployment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_GreengrassV2_Deployment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_GreengrassV2_Deployment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_GreengrassV2_Deployment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_GreengrassV2_Deployment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_GreengrassV2_Deployment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_GreengrassV2_Deployment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_GreengrassV2_Deployment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_GreengrassV2_Deployment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_GreengrassV2_Deployment) Set__RequestedOutputs(v []cfz.Output) *AWS_GreengrassV2_Deployment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_GreengrassV2_Deployment) Add__RequestedOutputs(v ...cfz.Output) *AWS_GreengrassV2_Deployment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Components updates property "Components".
func (t *AWS_GreengrassV2_Deployment) Set__Components(v cfz.ExpressionMap[AWS_GreengrassV2_Deployment_ComponentDeploymentSpecification]) *AWS_GreengrassV2_Deployment {
	t.Components = v
	return t
}

// SetM__Components updates property "Components".
func (t *AWS_GreengrassV2_Deployment) SetM__Components(v ...map[string]cfz.Expression[AWS_GreengrassV2_Deployment_ComponentDeploymentSpecification]) *AWS_GreengrassV2_Deployment {
	t.Components = cfz.M(v...)
	return t
}

// SetMV__Components updates property "Components".
func (t *AWS_GreengrassV2_Deployment) SetMV__Components(v ...map[string]AWS_GreengrassV2_Deployment_ComponentDeploymentSpecification) *AWS_GreengrassV2_Deployment {
	t.Components = cfz.MV(v...)
	return t
}

// Set__DeploymentName updates property "DeploymentName".
func (t *AWS_GreengrassV2_Deployment) Set__DeploymentName(v cfz.Expression[string]) *AWS_GreengrassV2_Deployment {
	t.DeploymentName = v
	return t
}

// SetV__DeploymentName updates property "DeploymentName".
func (t *AWS_GreengrassV2_Deployment) SetV__DeploymentName(v string) *AWS_GreengrassV2_Deployment {
	t.DeploymentName = cfz.V(v)
	return t
}

// Set__DeploymentPolicies updates property "DeploymentPolicies".
func (t *AWS_GreengrassV2_Deployment) Set__DeploymentPolicies(v cfz.Expression[AWS_GreengrassV2_Deployment_DeploymentPolicies]) *AWS_GreengrassV2_Deployment {
	t.DeploymentPolicies = v
	return t
}

// SetV__DeploymentPolicies updates property "DeploymentPolicies".
func (t *AWS_GreengrassV2_Deployment) SetV__DeploymentPolicies(v AWS_GreengrassV2_Deployment_DeploymentPolicies) *AWS_GreengrassV2_Deployment {
	t.DeploymentPolicies = cfz.V(v)
	return t
}

// Set__IotJobConfiguration updates property "IotJobConfiguration".
func (t *AWS_GreengrassV2_Deployment) Set__IotJobConfiguration(v cfz.Expression[AWS_GreengrassV2_Deployment_DeploymentIoTJobConfiguration]) *AWS_GreengrassV2_Deployment {
	t.IotJobConfiguration = v
	return t
}

// SetV__IotJobConfiguration updates property "IotJobConfiguration".
func (t *AWS_GreengrassV2_Deployment) SetV__IotJobConfiguration(v AWS_GreengrassV2_Deployment_DeploymentIoTJobConfiguration) *AWS_GreengrassV2_Deployment {
	t.IotJobConfiguration = cfz.V(v)
	return t
}

// Set__ParentTargetArn updates property "ParentTargetArn".
func (t *AWS_GreengrassV2_Deployment) Set__ParentTargetArn(v cfz.Expression[string]) *AWS_GreengrassV2_Deployment {
	t.ParentTargetArn = v
	return t
}

// SetV__ParentTargetArn updates property "ParentTargetArn".
func (t *AWS_GreengrassV2_Deployment) SetV__ParentTargetArn(v string) *AWS_GreengrassV2_Deployment {
	t.ParentTargetArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_GreengrassV2_Deployment) Set__Tags(v cfz.ExpressionMap[string]) *AWS_GreengrassV2_Deployment {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_GreengrassV2_Deployment) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_GreengrassV2_Deployment {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_GreengrassV2_Deployment) SetMV__Tags(v ...map[string]string) *AWS_GreengrassV2_Deployment {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__TargetArn updates property "TargetArn".
func (t *AWS_GreengrassV2_Deployment) Set__TargetArn(v cfz.Expression[string]) *AWS_GreengrassV2_Deployment {
	t.TargetArn = v
	return t
}

// SetV__TargetArn updates property "TargetArn".
func (t *AWS_GreengrassV2_Deployment) SetV__TargetArn(v string) *AWS_GreengrassV2_Deployment {
	t.TargetArn = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_GreengrassV2_Deployment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DeploymentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DeploymentId
func (t *AWS_GreengrassV2_Deployment) GetAtt__DeploymentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_GreengrassV2_Deployment__AttributesMap.DeploymentId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_GreengrassV2_Deployment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DeploymentId returns a conventionally configured output for an attribute of this resource.
// Attribute: DeploymentId
func (t *AWS_GreengrassV2_Deployment) GetConventionalOutputAtt__DeploymentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDeploymentId", t.GetAtt__DeploymentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_GreengrassV2_Deployment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_GreengrassV2_Deployment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_GreengrassV2_Deployment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
