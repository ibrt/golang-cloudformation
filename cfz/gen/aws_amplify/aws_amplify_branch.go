// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_amplify

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Amplify_Branch)(nil)
	_ cfz.Resource                   = (*AWS_Amplify_Branch)(nil)
)

const (
	// AWS_Amplify_Branch__Type is the CloudFormation type for AWS::Amplify::Branch.
	AWS_Amplify_Branch__Type = "AWS::Amplify::Branch"
)

var (
	// AWS_Amplify_Branch__AttributesMap reports all the CloudFormation attributes for AWS::Amplify::Branch.
	AWS_Amplify_Branch__AttributesMap = struct {
		Arn        string
		BranchName string
	}{
		Arn:        "Arn",
		BranchName: "BranchName",
	}

	// AWS_Amplify_Branch__AttributesSlice reports all the CloudFormation attributes for AWS::Amplify::Branch.
	AWS_Amplify_Branch__AttributesSlice = []string{
		AWS_Amplify_Branch__AttributesMap.Arn,
		AWS_Amplify_Branch__AttributesMap.BranchName,
	}
)

var (
	// AWS_Amplify_Branch__PropertiesMap reports all the CloudFormation properties for AWS::Amplify::Branch.
	AWS_Amplify_Branch__PropertiesMap = struct {
		AppId                      string
		Backend                    string
		BasicAuthConfig            string
		BranchName                 string
		BuildSpec                  string
		Description                string
		EnableAutoBuild            string
		EnablePerformanceMode      string
		EnablePullRequestPreview   string
		EnvironmentVariables       string
		Framework                  string
		PullRequestEnvironmentName string
		Stage                      string
		Tags                       string
	}{
		AppId:                      "AppId",
		Backend:                    "Backend",
		BasicAuthConfig:            "BasicAuthConfig",
		BranchName:                 "BranchName",
		BuildSpec:                  "BuildSpec",
		Description:                "Description",
		EnableAutoBuild:            "EnableAutoBuild",
		EnablePerformanceMode:      "EnablePerformanceMode",
		EnablePullRequestPreview:   "EnablePullRequestPreview",
		EnvironmentVariables:       "EnvironmentVariables",
		Framework:                  "Framework",
		PullRequestEnvironmentName: "PullRequestEnvironmentName",
		Stage:                      "Stage",
		Tags:                       "Tags",
	}

	// AWS_Amplify_Branch__PropertiesSlice reports all the CloudFormation properties for AWS::Amplify::Branch.
	AWS_Amplify_Branch__PropertiesSlice = []string{
		AWS_Amplify_Branch__PropertiesMap.AppId,
		AWS_Amplify_Branch__PropertiesMap.Backend,
		AWS_Amplify_Branch__PropertiesMap.BasicAuthConfig,
		AWS_Amplify_Branch__PropertiesMap.BranchName,
		AWS_Amplify_Branch__PropertiesMap.BuildSpec,
		AWS_Amplify_Branch__PropertiesMap.Description,
		AWS_Amplify_Branch__PropertiesMap.EnableAutoBuild,
		AWS_Amplify_Branch__PropertiesMap.EnablePerformanceMode,
		AWS_Amplify_Branch__PropertiesMap.EnablePullRequestPreview,
		AWS_Amplify_Branch__PropertiesMap.EnvironmentVariables,
		AWS_Amplify_Branch__PropertiesMap.Framework,
		AWS_Amplify_Branch__PropertiesMap.PullRequestEnvironmentName,
		AWS_Amplify_Branch__PropertiesMap.Stage,
		AWS_Amplify_Branch__PropertiesMap.Tags,
	}
)

// AWS_Amplify_Branch is a binding for AWS::Amplify::Branch.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html
type AWS_Amplify_Branch struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AppId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-appid
	AppId cfz.Expression[string] `json:"AppId,omitempty"`

	// Backend is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-backend
	Backend cfz.Expression[AWS_Amplify_Branch_Backend] `json:"Backend,omitempty"`

	// BasicAuthConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-basicauthconfig
	BasicAuthConfig cfz.Expression[AWS_Amplify_Branch_BasicAuthConfig] `json:"BasicAuthConfig,omitempty"`

	// BranchName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-branchname
	BranchName cfz.Expression[string] `json:"BranchName,omitempty"`

	// BuildSpec is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-buildspec
	BuildSpec cfz.Expression[string] `json:"BuildSpec,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// EnableAutoBuild is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-enableautobuild
	EnableAutoBuild cfz.Expression[bool] `json:"EnableAutoBuild,omitempty"`

	// EnablePerformanceMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-enableperformancemode
	EnablePerformanceMode cfz.Expression[bool] `json:"EnablePerformanceMode,omitempty"`

	// EnablePullRequestPreview is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-enablepullrequestpreview
	EnablePullRequestPreview cfz.Expression[bool] `json:"EnablePullRequestPreview,omitempty"`

	// EnvironmentVariables is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-environmentvariables
	EnvironmentVariables cfz.ExpressionSlice[AWS_Amplify_Branch_EnvironmentVariable] `json:"EnvironmentVariables,omitempty"`

	// Framework is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-framework
	Framework cfz.Expression[string] `json:"Framework,omitempty"`

	// PullRequestEnvironmentName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-pullrequestenvironmentname
	PullRequestEnvironmentName cfz.Expression[string] `json:"PullRequestEnvironmentName,omitempty"`

	// Stage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-stage
	Stage cfz.Expression[string] `json:"Stage,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amplify-branch.html#cfn-amplify-branch-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Amplify_Branch initializes a new *AWS_Amplify_Branch.
func New__AWS_Amplify_Branch(logicalName string) *AWS_Amplify_Branch {
	return &AWS_Amplify_Branch{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Amplify_Branch) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Amplify_Branch) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Amplify_Branch) GetType() string {
	return AWS_Amplify_Branch__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Amplify_Branch) Set__LogicalName(v string) *AWS_Amplify_Branch {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Amplify_Branch) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Amplify_Branch {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Amplify_Branch) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Amplify_Branch {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Amplify_Branch) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Amplify_Branch {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Amplify_Branch) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Amplify_Branch {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Amplify_Branch) Set__RequestedOutputs(v []cfz.Output) *AWS_Amplify_Branch {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Amplify_Branch) Add__RequestedOutputs(v ...cfz.Output) *AWS_Amplify_Branch {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AppId updates property "AppId".
func (t *AWS_Amplify_Branch) Set__AppId(v cfz.Expression[string]) *AWS_Amplify_Branch {
	t.AppId = v
	return t
}

// SetV__AppId updates property "AppId".
func (t *AWS_Amplify_Branch) SetV__AppId(v string) *AWS_Amplify_Branch {
	t.AppId = cfz.V(v)
	return t
}

// Set__Backend updates property "Backend".
func (t *AWS_Amplify_Branch) Set__Backend(v cfz.Expression[AWS_Amplify_Branch_Backend]) *AWS_Amplify_Branch {
	t.Backend = v
	return t
}

// SetV__Backend updates property "Backend".
func (t *AWS_Amplify_Branch) SetV__Backend(v AWS_Amplify_Branch_Backend) *AWS_Amplify_Branch {
	t.Backend = cfz.V(v)
	return t
}

// Set__BasicAuthConfig updates property "BasicAuthConfig".
func (t *AWS_Amplify_Branch) Set__BasicAuthConfig(v cfz.Expression[AWS_Amplify_Branch_BasicAuthConfig]) *AWS_Amplify_Branch {
	t.BasicAuthConfig = v
	return t
}

// SetV__BasicAuthConfig updates property "BasicAuthConfig".
func (t *AWS_Amplify_Branch) SetV__BasicAuthConfig(v AWS_Amplify_Branch_BasicAuthConfig) *AWS_Amplify_Branch {
	t.BasicAuthConfig = cfz.V(v)
	return t
}

// Set__BranchName updates property "BranchName".
func (t *AWS_Amplify_Branch) Set__BranchName(v cfz.Expression[string]) *AWS_Amplify_Branch {
	t.BranchName = v
	return t
}

// SetV__BranchName updates property "BranchName".
func (t *AWS_Amplify_Branch) SetV__BranchName(v string) *AWS_Amplify_Branch {
	t.BranchName = cfz.V(v)
	return t
}

// Set__BuildSpec updates property "BuildSpec".
func (t *AWS_Amplify_Branch) Set__BuildSpec(v cfz.Expression[string]) *AWS_Amplify_Branch {
	t.BuildSpec = v
	return t
}

// SetV__BuildSpec updates property "BuildSpec".
func (t *AWS_Amplify_Branch) SetV__BuildSpec(v string) *AWS_Amplify_Branch {
	t.BuildSpec = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Amplify_Branch) Set__Description(v cfz.Expression[string]) *AWS_Amplify_Branch {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Amplify_Branch) SetV__Description(v string) *AWS_Amplify_Branch {
	t.Description = cfz.V(v)
	return t
}

// Set__EnableAutoBuild updates property "EnableAutoBuild".
func (t *AWS_Amplify_Branch) Set__EnableAutoBuild(v cfz.Expression[bool]) *AWS_Amplify_Branch {
	t.EnableAutoBuild = v
	return t
}

// SetV__EnableAutoBuild updates property "EnableAutoBuild".
func (t *AWS_Amplify_Branch) SetV__EnableAutoBuild(v bool) *AWS_Amplify_Branch {
	t.EnableAutoBuild = cfz.V(v)
	return t
}

// Set__EnablePerformanceMode updates property "EnablePerformanceMode".
func (t *AWS_Amplify_Branch) Set__EnablePerformanceMode(v cfz.Expression[bool]) *AWS_Amplify_Branch {
	t.EnablePerformanceMode = v
	return t
}

// SetV__EnablePerformanceMode updates property "EnablePerformanceMode".
func (t *AWS_Amplify_Branch) SetV__EnablePerformanceMode(v bool) *AWS_Amplify_Branch {
	t.EnablePerformanceMode = cfz.V(v)
	return t
}

// Set__EnablePullRequestPreview updates property "EnablePullRequestPreview".
func (t *AWS_Amplify_Branch) Set__EnablePullRequestPreview(v cfz.Expression[bool]) *AWS_Amplify_Branch {
	t.EnablePullRequestPreview = v
	return t
}

// SetV__EnablePullRequestPreview updates property "EnablePullRequestPreview".
func (t *AWS_Amplify_Branch) SetV__EnablePullRequestPreview(v bool) *AWS_Amplify_Branch {
	t.EnablePullRequestPreview = cfz.V(v)
	return t
}

// Set__EnvironmentVariables updates property "EnvironmentVariables".
func (t *AWS_Amplify_Branch) Set__EnvironmentVariables(v cfz.ExpressionSlice[AWS_Amplify_Branch_EnvironmentVariable]) *AWS_Amplify_Branch {
	t.EnvironmentVariables = v
	return t
}

// SetS__EnvironmentVariables updates property "EnvironmentVariables".
func (t *AWS_Amplify_Branch) SetS__EnvironmentVariables(v ...cfz.Expression[AWS_Amplify_Branch_EnvironmentVariable]) *AWS_Amplify_Branch {
	t.EnvironmentVariables = cfz.S(v...)
	return t
}

// SetSV__EnvironmentVariables updates property "EnvironmentVariables".
func (t *AWS_Amplify_Branch) SetSV__EnvironmentVariables(v ...AWS_Amplify_Branch_EnvironmentVariable) *AWS_Amplify_Branch {
	t.EnvironmentVariables = cfz.SV(v...)
	return t
}

// Set__Framework updates property "Framework".
func (t *AWS_Amplify_Branch) Set__Framework(v cfz.Expression[string]) *AWS_Amplify_Branch {
	t.Framework = v
	return t
}

// SetV__Framework updates property "Framework".
func (t *AWS_Amplify_Branch) SetV__Framework(v string) *AWS_Amplify_Branch {
	t.Framework = cfz.V(v)
	return t
}

// Set__PullRequestEnvironmentName updates property "PullRequestEnvironmentName".
func (t *AWS_Amplify_Branch) Set__PullRequestEnvironmentName(v cfz.Expression[string]) *AWS_Amplify_Branch {
	t.PullRequestEnvironmentName = v
	return t
}

// SetV__PullRequestEnvironmentName updates property "PullRequestEnvironmentName".
func (t *AWS_Amplify_Branch) SetV__PullRequestEnvironmentName(v string) *AWS_Amplify_Branch {
	t.PullRequestEnvironmentName = cfz.V(v)
	return t
}

// Set__Stage updates property "Stage".
func (t *AWS_Amplify_Branch) Set__Stage(v cfz.Expression[string]) *AWS_Amplify_Branch {
	t.Stage = v
	return t
}

// SetV__Stage updates property "Stage".
func (t *AWS_Amplify_Branch) SetV__Stage(v string) *AWS_Amplify_Branch {
	t.Stage = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Amplify_Branch) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Amplify_Branch {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Amplify_Branch) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Amplify_Branch {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Amplify_Branch) SetSV__Tags(v ...cfz.Tag) *AWS_Amplify_Branch {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Amplify_Branch) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Amplify_Branch) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Amplify_Branch__AttributesMap.Arn))
}

// GetAtt__BranchName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BranchName
func (t *AWS_Amplify_Branch) GetAtt__BranchName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Amplify_Branch__AttributesMap.BranchName))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Amplify_Branch) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Amplify_Branch) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BranchName returns a conventionally configured output for an attribute of this resource.
// Attribute: BranchName
func (t *AWS_Amplify_Branch) GetConventionalOutputAtt__BranchName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBranchName", t.GetAtt__BranchName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Amplify_Branch) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Amplify_Branch

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Amplify_Branch) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
