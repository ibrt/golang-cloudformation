// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_servicecatalog

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ServiceCatalog_StackSetConstraint)(nil)
	_ cfz.Resource                   = (*AWS_ServiceCatalog_StackSetConstraint)(nil)
)

const (
	// AWS_ServiceCatalog_StackSetConstraint__Type is the CloudFormation type for AWS::ServiceCatalog::StackSetConstraint.
	AWS_ServiceCatalog_StackSetConstraint__Type = "AWS::ServiceCatalog::StackSetConstraint"
)

var (
	// AWS_ServiceCatalog_StackSetConstraint__PropertiesMap reports all the CloudFormation properties for AWS::ServiceCatalog::StackSetConstraint.
	AWS_ServiceCatalog_StackSetConstraint__PropertiesMap = struct {
		AcceptLanguage       string
		AccountList          string
		AdminRole            string
		Description          string
		ExecutionRole        string
		PortfolioId          string
		ProductId            string
		RegionList           string
		StackInstanceControl string
	}{
		AcceptLanguage:       "AcceptLanguage",
		AccountList:          "AccountList",
		AdminRole:            "AdminRole",
		Description:          "Description",
		ExecutionRole:        "ExecutionRole",
		PortfolioId:          "PortfolioId",
		ProductId:            "ProductId",
		RegionList:           "RegionList",
		StackInstanceControl: "StackInstanceControl",
	}

	// AWS_ServiceCatalog_StackSetConstraint__PropertiesSlice reports all the CloudFormation properties for AWS::ServiceCatalog::StackSetConstraint.
	AWS_ServiceCatalog_StackSetConstraint__PropertiesSlice = []string{
		AWS_ServiceCatalog_StackSetConstraint__PropertiesMap.AcceptLanguage,
		AWS_ServiceCatalog_StackSetConstraint__PropertiesMap.AccountList,
		AWS_ServiceCatalog_StackSetConstraint__PropertiesMap.AdminRole,
		AWS_ServiceCatalog_StackSetConstraint__PropertiesMap.Description,
		AWS_ServiceCatalog_StackSetConstraint__PropertiesMap.ExecutionRole,
		AWS_ServiceCatalog_StackSetConstraint__PropertiesMap.PortfolioId,
		AWS_ServiceCatalog_StackSetConstraint__PropertiesMap.ProductId,
		AWS_ServiceCatalog_StackSetConstraint__PropertiesMap.RegionList,
		AWS_ServiceCatalog_StackSetConstraint__PropertiesMap.StackInstanceControl,
	}
)

// AWS_ServiceCatalog_StackSetConstraint is a binding for AWS::ServiceCatalog::StackSetConstraint.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html
type AWS_ServiceCatalog_StackSetConstraint struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AcceptLanguage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-acceptlanguage
	AcceptLanguage cfz.Expression[string] `json:"AcceptLanguage,omitempty"`

	// AccountList is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-accountlist
	AccountList cfz.ExpressionSlice[string] `json:"AccountList,omitempty"`

	// AdminRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-adminrole
	AdminRole cfz.Expression[string] `json:"AdminRole,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// ExecutionRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-executionrole
	ExecutionRole cfz.Expression[string] `json:"ExecutionRole,omitempty"`

	// PortfolioId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-portfolioid
	PortfolioId cfz.Expression[string] `json:"PortfolioId,omitempty"`

	// ProductId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-productid
	ProductId cfz.Expression[string] `json:"ProductId,omitempty"`

	// RegionList is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-regionlist
	RegionList cfz.ExpressionSlice[string] `json:"RegionList,omitempty"`

	// StackInstanceControl is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-servicecatalog-stacksetconstraint.html#cfn-servicecatalog-stacksetconstraint-stackinstancecontrol
	StackInstanceControl cfz.Expression[string] `json:"StackInstanceControl,omitempty"`
}

// New__AWS_ServiceCatalog_StackSetConstraint initializes a new *AWS_ServiceCatalog_StackSetConstraint.
func New__AWS_ServiceCatalog_StackSetConstraint(logicalName string) *AWS_ServiceCatalog_StackSetConstraint {
	return &AWS_ServiceCatalog_StackSetConstraint{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ServiceCatalog_StackSetConstraint) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ServiceCatalog_StackSetConstraint) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ServiceCatalog_StackSetConstraint) GetType() string {
	return AWS_ServiceCatalog_StackSetConstraint__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__LogicalName(v string) *AWS_ServiceCatalog_StackSetConstraint {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ServiceCatalog_StackSetConstraint {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ServiceCatalog_StackSetConstraint) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ServiceCatalog_StackSetConstraint {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ServiceCatalog_StackSetConstraint {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ServiceCatalog_StackSetConstraint {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__RequestedOutputs(v []cfz.Output) *AWS_ServiceCatalog_StackSetConstraint {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ServiceCatalog_StackSetConstraint) Add__RequestedOutputs(v ...cfz.Output) *AWS_ServiceCatalog_StackSetConstraint {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AcceptLanguage updates property "AcceptLanguage".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__AcceptLanguage(v cfz.Expression[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.AcceptLanguage = v
	return t
}

// SetV__AcceptLanguage updates property "AcceptLanguage".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetV__AcceptLanguage(v string) *AWS_ServiceCatalog_StackSetConstraint {
	t.AcceptLanguage = cfz.V(v)
	return t
}

// Set__AccountList updates property "AccountList".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__AccountList(v cfz.ExpressionSlice[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.AccountList = v
	return t
}

// SetS__AccountList updates property "AccountList".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetS__AccountList(v ...cfz.Expression[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.AccountList = cfz.S(v...)
	return t
}

// SetSV__AccountList updates property "AccountList".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetSV__AccountList(v ...string) *AWS_ServiceCatalog_StackSetConstraint {
	t.AccountList = cfz.SV(v...)
	return t
}

// Set__AdminRole updates property "AdminRole".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__AdminRole(v cfz.Expression[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.AdminRole = v
	return t
}

// SetV__AdminRole updates property "AdminRole".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetV__AdminRole(v string) *AWS_ServiceCatalog_StackSetConstraint {
	t.AdminRole = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__Description(v cfz.Expression[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetV__Description(v string) *AWS_ServiceCatalog_StackSetConstraint {
	t.Description = cfz.V(v)
	return t
}

// Set__ExecutionRole updates property "ExecutionRole".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__ExecutionRole(v cfz.Expression[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.ExecutionRole = v
	return t
}

// SetV__ExecutionRole updates property "ExecutionRole".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetV__ExecutionRole(v string) *AWS_ServiceCatalog_StackSetConstraint {
	t.ExecutionRole = cfz.V(v)
	return t
}

// Set__PortfolioId updates property "PortfolioId".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__PortfolioId(v cfz.Expression[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.PortfolioId = v
	return t
}

// SetV__PortfolioId updates property "PortfolioId".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetV__PortfolioId(v string) *AWS_ServiceCatalog_StackSetConstraint {
	t.PortfolioId = cfz.V(v)
	return t
}

// Set__ProductId updates property "ProductId".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__ProductId(v cfz.Expression[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.ProductId = v
	return t
}

// SetV__ProductId updates property "ProductId".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetV__ProductId(v string) *AWS_ServiceCatalog_StackSetConstraint {
	t.ProductId = cfz.V(v)
	return t
}

// Set__RegionList updates property "RegionList".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__RegionList(v cfz.ExpressionSlice[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.RegionList = v
	return t
}

// SetS__RegionList updates property "RegionList".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetS__RegionList(v ...cfz.Expression[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.RegionList = cfz.S(v...)
	return t
}

// SetSV__RegionList updates property "RegionList".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetSV__RegionList(v ...string) *AWS_ServiceCatalog_StackSetConstraint {
	t.RegionList = cfz.SV(v...)
	return t
}

// Set__StackInstanceControl updates property "StackInstanceControl".
func (t *AWS_ServiceCatalog_StackSetConstraint) Set__StackInstanceControl(v cfz.Expression[string]) *AWS_ServiceCatalog_StackSetConstraint {
	t.StackInstanceControl = v
	return t
}

// SetV__StackInstanceControl updates property "StackInstanceControl".
func (t *AWS_ServiceCatalog_StackSetConstraint) SetV__StackInstanceControl(v string) *AWS_ServiceCatalog_StackSetConstraint {
	t.StackInstanceControl = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ServiceCatalog_StackSetConstraint) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ServiceCatalog_StackSetConstraint) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ServiceCatalog_StackSetConstraint) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ServiceCatalog_StackSetConstraint

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ServiceCatalog_StackSetConstraint) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
