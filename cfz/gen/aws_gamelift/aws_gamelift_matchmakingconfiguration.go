// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_gamelift

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_GameLift_MatchmakingConfiguration)(nil)
	_ cfz.Resource                   = (*AWS_GameLift_MatchmakingConfiguration)(nil)
)

const (
	// AWS_GameLift_MatchmakingConfiguration__Type is the CloudFormation type for AWS::GameLift::MatchmakingConfiguration.
	AWS_GameLift_MatchmakingConfiguration__Type = "AWS::GameLift::MatchmakingConfiguration"
)

var (
	// AWS_GameLift_MatchmakingConfiguration__AttributesMap reports all the CloudFormation attributes for AWS::GameLift::MatchmakingConfiguration.
	AWS_GameLift_MatchmakingConfiguration__AttributesMap = struct {
		Arn  string
		Name string
	}{
		Arn:  "Arn",
		Name: "Name",
	}

	// AWS_GameLift_MatchmakingConfiguration__AttributesSlice reports all the CloudFormation attributes for AWS::GameLift::MatchmakingConfiguration.
	AWS_GameLift_MatchmakingConfiguration__AttributesSlice = []string{
		AWS_GameLift_MatchmakingConfiguration__AttributesMap.Arn,
		AWS_GameLift_MatchmakingConfiguration__AttributesMap.Name,
	}
)

var (
	// AWS_GameLift_MatchmakingConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::GameLift::MatchmakingConfiguration.
	AWS_GameLift_MatchmakingConfiguration__PropertiesMap = struct {
		AcceptanceRequired       string
		AcceptanceTimeoutSeconds string
		AdditionalPlayerCount    string
		BackfillMode             string
		CreationTime             string
		CustomEventData          string
		Description              string
		FlexMatchMode            string
		GameProperties           string
		GameSessionData          string
		GameSessionQueueArns     string
		Name                     string
		NotificationTarget       string
		RequestTimeoutSeconds    string
		RuleSetArn               string
		RuleSetName              string
		Tags                     string
	}{
		AcceptanceRequired:       "AcceptanceRequired",
		AcceptanceTimeoutSeconds: "AcceptanceTimeoutSeconds",
		AdditionalPlayerCount:    "AdditionalPlayerCount",
		BackfillMode:             "BackfillMode",
		CreationTime:             "CreationTime",
		CustomEventData:          "CustomEventData",
		Description:              "Description",
		FlexMatchMode:            "FlexMatchMode",
		GameProperties:           "GameProperties",
		GameSessionData:          "GameSessionData",
		GameSessionQueueArns:     "GameSessionQueueArns",
		Name:                     "Name",
		NotificationTarget:       "NotificationTarget",
		RequestTimeoutSeconds:    "RequestTimeoutSeconds",
		RuleSetArn:               "RuleSetArn",
		RuleSetName:              "RuleSetName",
		Tags:                     "Tags",
	}

	// AWS_GameLift_MatchmakingConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::GameLift::MatchmakingConfiguration.
	AWS_GameLift_MatchmakingConfiguration__PropertiesSlice = []string{
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.AcceptanceRequired,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.AcceptanceTimeoutSeconds,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.AdditionalPlayerCount,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.BackfillMode,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.CreationTime,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.CustomEventData,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.Description,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.FlexMatchMode,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.GameProperties,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.GameSessionData,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.GameSessionQueueArns,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.Name,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.NotificationTarget,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.RequestTimeoutSeconds,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.RuleSetArn,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.RuleSetName,
		AWS_GameLift_MatchmakingConfiguration__PropertiesMap.Tags,
	}
)

// AWS_GameLift_MatchmakingConfiguration is a binding for AWS::GameLift::MatchmakingConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html
type AWS_GameLift_MatchmakingConfiguration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AcceptanceRequired is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-acceptancerequired
	AcceptanceRequired cfz.Expression[bool] `json:"AcceptanceRequired,omitempty"`

	// AcceptanceTimeoutSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-acceptancetimeoutseconds
	AcceptanceTimeoutSeconds cfz.Expression[int32] `json:"AcceptanceTimeoutSeconds,omitempty"`

	// AdditionalPlayerCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-additionalplayercount
	AdditionalPlayerCount cfz.Expression[int32] `json:"AdditionalPlayerCount,omitempty"`

	// BackfillMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-backfillmode
	BackfillMode cfz.Expression[string] `json:"BackfillMode,omitempty"`

	// CreationTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-creationtime
	CreationTime cfz.Expression[string] `json:"CreationTime,omitempty"`

	// CustomEventData is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-customeventdata
	CustomEventData cfz.Expression[string] `json:"CustomEventData,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// FlexMatchMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-flexmatchmode
	FlexMatchMode cfz.Expression[string] `json:"FlexMatchMode,omitempty"`

	// GameProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-gameproperties
	GameProperties cfz.ExpressionSlice[AWS_GameLift_MatchmakingConfiguration_GameProperty] `json:"GameProperties,omitempty"`

	// GameSessionData is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-gamesessiondata
	GameSessionData cfz.Expression[string] `json:"GameSessionData,omitempty"`

	// GameSessionQueueArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-gamesessionqueuearns
	GameSessionQueueArns cfz.ExpressionSlice[string] `json:"GameSessionQueueArns,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// NotificationTarget is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-notificationtarget
	NotificationTarget cfz.Expression[string] `json:"NotificationTarget,omitempty"`

	// RequestTimeoutSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-requesttimeoutseconds
	RequestTimeoutSeconds cfz.Expression[int32] `json:"RequestTimeoutSeconds,omitempty"`

	// RuleSetArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-rulesetarn
	RuleSetArn cfz.Expression[string] `json:"RuleSetArn,omitempty"`

	// RuleSetName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-rulesetname
	RuleSetName cfz.Expression[string] `json:"RuleSetName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-matchmakingconfiguration.html#cfn-gamelift-matchmakingconfiguration-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_GameLift_MatchmakingConfiguration initializes a new *AWS_GameLift_MatchmakingConfiguration.
func New__AWS_GameLift_MatchmakingConfiguration(logicalName string) *AWS_GameLift_MatchmakingConfiguration {
	return &AWS_GameLift_MatchmakingConfiguration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_GameLift_MatchmakingConfiguration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_GameLift_MatchmakingConfiguration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_GameLift_MatchmakingConfiguration) GetType() string {
	return AWS_GameLift_MatchmakingConfiguration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__LogicalName(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_GameLift_MatchmakingConfiguration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_GameLift_MatchmakingConfiguration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_GameLift_MatchmakingConfiguration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_GameLift_MatchmakingConfiguration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_GameLift_MatchmakingConfiguration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__RequestedOutputs(v []cfz.Output) *AWS_GameLift_MatchmakingConfiguration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_GameLift_MatchmakingConfiguration) Add__RequestedOutputs(v ...cfz.Output) *AWS_GameLift_MatchmakingConfiguration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AcceptanceRequired updates property "AcceptanceRequired".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__AcceptanceRequired(v cfz.Expression[bool]) *AWS_GameLift_MatchmakingConfiguration {
	t.AcceptanceRequired = v
	return t
}

// SetV__AcceptanceRequired updates property "AcceptanceRequired".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__AcceptanceRequired(v bool) *AWS_GameLift_MatchmakingConfiguration {
	t.AcceptanceRequired = cfz.V(v)
	return t
}

// Set__AcceptanceTimeoutSeconds updates property "AcceptanceTimeoutSeconds".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__AcceptanceTimeoutSeconds(v cfz.Expression[int32]) *AWS_GameLift_MatchmakingConfiguration {
	t.AcceptanceTimeoutSeconds = v
	return t
}

// SetV__AcceptanceTimeoutSeconds updates property "AcceptanceTimeoutSeconds".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__AcceptanceTimeoutSeconds(v int32) *AWS_GameLift_MatchmakingConfiguration {
	t.AcceptanceTimeoutSeconds = cfz.V(v)
	return t
}

// Set__AdditionalPlayerCount updates property "AdditionalPlayerCount".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__AdditionalPlayerCount(v cfz.Expression[int32]) *AWS_GameLift_MatchmakingConfiguration {
	t.AdditionalPlayerCount = v
	return t
}

// SetV__AdditionalPlayerCount updates property "AdditionalPlayerCount".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__AdditionalPlayerCount(v int32) *AWS_GameLift_MatchmakingConfiguration {
	t.AdditionalPlayerCount = cfz.V(v)
	return t
}

// Set__BackfillMode updates property "BackfillMode".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__BackfillMode(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.BackfillMode = v
	return t
}

// SetV__BackfillMode updates property "BackfillMode".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__BackfillMode(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.BackfillMode = cfz.V(v)
	return t
}

// Set__CreationTime updates property "CreationTime".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__CreationTime(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.CreationTime = v
	return t
}

// SetV__CreationTime updates property "CreationTime".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__CreationTime(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.CreationTime = cfz.V(v)
	return t
}

// Set__CustomEventData updates property "CustomEventData".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__CustomEventData(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.CustomEventData = v
	return t
}

// SetV__CustomEventData updates property "CustomEventData".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__CustomEventData(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.CustomEventData = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__Description(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__Description(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.Description = cfz.V(v)
	return t
}

// Set__FlexMatchMode updates property "FlexMatchMode".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__FlexMatchMode(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.FlexMatchMode = v
	return t
}

// SetV__FlexMatchMode updates property "FlexMatchMode".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__FlexMatchMode(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.FlexMatchMode = cfz.V(v)
	return t
}

// Set__GameProperties updates property "GameProperties".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__GameProperties(v cfz.ExpressionSlice[AWS_GameLift_MatchmakingConfiguration_GameProperty]) *AWS_GameLift_MatchmakingConfiguration {
	t.GameProperties = v
	return t
}

// SetS__GameProperties updates property "GameProperties".
func (t *AWS_GameLift_MatchmakingConfiguration) SetS__GameProperties(v ...cfz.Expression[AWS_GameLift_MatchmakingConfiguration_GameProperty]) *AWS_GameLift_MatchmakingConfiguration {
	t.GameProperties = cfz.S(v...)
	return t
}

// SetSV__GameProperties updates property "GameProperties".
func (t *AWS_GameLift_MatchmakingConfiguration) SetSV__GameProperties(v ...AWS_GameLift_MatchmakingConfiguration_GameProperty) *AWS_GameLift_MatchmakingConfiguration {
	t.GameProperties = cfz.SV(v...)
	return t
}

// Set__GameSessionData updates property "GameSessionData".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__GameSessionData(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.GameSessionData = v
	return t
}

// SetV__GameSessionData updates property "GameSessionData".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__GameSessionData(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.GameSessionData = cfz.V(v)
	return t
}

// Set__GameSessionQueueArns updates property "GameSessionQueueArns".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__GameSessionQueueArns(v cfz.ExpressionSlice[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.GameSessionQueueArns = v
	return t
}

// SetS__GameSessionQueueArns updates property "GameSessionQueueArns".
func (t *AWS_GameLift_MatchmakingConfiguration) SetS__GameSessionQueueArns(v ...cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.GameSessionQueueArns = cfz.S(v...)
	return t
}

// SetSV__GameSessionQueueArns updates property "GameSessionQueueArns".
func (t *AWS_GameLift_MatchmakingConfiguration) SetSV__GameSessionQueueArns(v ...string) *AWS_GameLift_MatchmakingConfiguration {
	t.GameSessionQueueArns = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__Name(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__Name(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.Name = cfz.V(v)
	return t
}

// Set__NotificationTarget updates property "NotificationTarget".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__NotificationTarget(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.NotificationTarget = v
	return t
}

// SetV__NotificationTarget updates property "NotificationTarget".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__NotificationTarget(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.NotificationTarget = cfz.V(v)
	return t
}

// Set__RequestTimeoutSeconds updates property "RequestTimeoutSeconds".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__RequestTimeoutSeconds(v cfz.Expression[int32]) *AWS_GameLift_MatchmakingConfiguration {
	t.RequestTimeoutSeconds = v
	return t
}

// SetV__RequestTimeoutSeconds updates property "RequestTimeoutSeconds".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__RequestTimeoutSeconds(v int32) *AWS_GameLift_MatchmakingConfiguration {
	t.RequestTimeoutSeconds = cfz.V(v)
	return t
}

// Set__RuleSetArn updates property "RuleSetArn".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__RuleSetArn(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.RuleSetArn = v
	return t
}

// SetV__RuleSetArn updates property "RuleSetArn".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__RuleSetArn(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.RuleSetArn = cfz.V(v)
	return t
}

// Set__RuleSetName updates property "RuleSetName".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__RuleSetName(v cfz.Expression[string]) *AWS_GameLift_MatchmakingConfiguration {
	t.RuleSetName = v
	return t
}

// SetV__RuleSetName updates property "RuleSetName".
func (t *AWS_GameLift_MatchmakingConfiguration) SetV__RuleSetName(v string) *AWS_GameLift_MatchmakingConfiguration {
	t.RuleSetName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_GameLift_MatchmakingConfiguration) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_GameLift_MatchmakingConfiguration {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_GameLift_MatchmakingConfiguration) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_GameLift_MatchmakingConfiguration {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_GameLift_MatchmakingConfiguration) SetSV__Tags(v ...cfz.Tag) *AWS_GameLift_MatchmakingConfiguration {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_GameLift_MatchmakingConfiguration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_GameLift_MatchmakingConfiguration) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_GameLift_MatchmakingConfiguration__AttributesMap.Arn))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_GameLift_MatchmakingConfiguration) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_GameLift_MatchmakingConfiguration__AttributesMap.Name))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_GameLift_MatchmakingConfiguration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_GameLift_MatchmakingConfiguration) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_GameLift_MatchmakingConfiguration) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_GameLift_MatchmakingConfiguration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_GameLift_MatchmakingConfiguration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_GameLift_MatchmakingConfiguration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
