// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_gamelift

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_GameLift_GameServerGroup)(nil)
	_ cfz.Resource                   = (*AWS_GameLift_GameServerGroup)(nil)
)

const (
	// AWS_GameLift_GameServerGroup__Type is the CloudFormation type for AWS::GameLift::GameServerGroup.
	AWS_GameLift_GameServerGroup__Type = "AWS::GameLift::GameServerGroup"
)

var (
	// AWS_GameLift_GameServerGroup__AttributesMap reports all the CloudFormation attributes for AWS::GameLift::GameServerGroup.
	AWS_GameLift_GameServerGroup__AttributesMap = struct {
		AutoScalingGroupArn string
		GameServerGroupArn  string
	}{
		AutoScalingGroupArn: "AutoScalingGroupArn",
		GameServerGroupArn:  "GameServerGroupArn",
	}

	// AWS_GameLift_GameServerGroup__AttributesSlice reports all the CloudFormation attributes for AWS::GameLift::GameServerGroup.
	AWS_GameLift_GameServerGroup__AttributesSlice = []string{
		AWS_GameLift_GameServerGroup__AttributesMap.AutoScalingGroupArn,
		AWS_GameLift_GameServerGroup__AttributesMap.GameServerGroupArn,
	}
)

var (
	// AWS_GameLift_GameServerGroup__PropertiesMap reports all the CloudFormation properties for AWS::GameLift::GameServerGroup.
	AWS_GameLift_GameServerGroup__PropertiesMap = struct {
		AutoScalingPolicy          string
		BalancingStrategy          string
		DeleteOption               string
		GameServerGroupName        string
		GameServerProtectionPolicy string
		InstanceDefinitions        string
		LaunchTemplate             string
		MaxSize                    string
		MinSize                    string
		RoleArn                    string
		Tags                       string
		VpcSubnets                 string
	}{
		AutoScalingPolicy:          "AutoScalingPolicy",
		BalancingStrategy:          "BalancingStrategy",
		DeleteOption:               "DeleteOption",
		GameServerGroupName:        "GameServerGroupName",
		GameServerProtectionPolicy: "GameServerProtectionPolicy",
		InstanceDefinitions:        "InstanceDefinitions",
		LaunchTemplate:             "LaunchTemplate",
		MaxSize:                    "MaxSize",
		MinSize:                    "MinSize",
		RoleArn:                    "RoleArn",
		Tags:                       "Tags",
		VpcSubnets:                 "VpcSubnets",
	}

	// AWS_GameLift_GameServerGroup__PropertiesSlice reports all the CloudFormation properties for AWS::GameLift::GameServerGroup.
	AWS_GameLift_GameServerGroup__PropertiesSlice = []string{
		AWS_GameLift_GameServerGroup__PropertiesMap.AutoScalingPolicy,
		AWS_GameLift_GameServerGroup__PropertiesMap.BalancingStrategy,
		AWS_GameLift_GameServerGroup__PropertiesMap.DeleteOption,
		AWS_GameLift_GameServerGroup__PropertiesMap.GameServerGroupName,
		AWS_GameLift_GameServerGroup__PropertiesMap.GameServerProtectionPolicy,
		AWS_GameLift_GameServerGroup__PropertiesMap.InstanceDefinitions,
		AWS_GameLift_GameServerGroup__PropertiesMap.LaunchTemplate,
		AWS_GameLift_GameServerGroup__PropertiesMap.MaxSize,
		AWS_GameLift_GameServerGroup__PropertiesMap.MinSize,
		AWS_GameLift_GameServerGroup__PropertiesMap.RoleArn,
		AWS_GameLift_GameServerGroup__PropertiesMap.Tags,
		AWS_GameLift_GameServerGroup__PropertiesMap.VpcSubnets,
	}
)

// AWS_GameLift_GameServerGroup is a binding for AWS::GameLift::GameServerGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html
type AWS_GameLift_GameServerGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AutoScalingPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-autoscalingpolicy
	AutoScalingPolicy cfz.Expression[AWS_GameLift_GameServerGroup_AutoScalingPolicy] `json:"AutoScalingPolicy,omitempty"`

	// BalancingStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-balancingstrategy
	BalancingStrategy cfz.Expression[string] `json:"BalancingStrategy,omitempty"`

	// DeleteOption is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-deleteoption
	DeleteOption cfz.Expression[string] `json:"DeleteOption,omitempty"`

	// GameServerGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-gameservergroupname
	GameServerGroupName cfz.Expression[string] `json:"GameServerGroupName,omitempty"`

	// GameServerProtectionPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-gameserverprotectionpolicy
	GameServerProtectionPolicy cfz.Expression[string] `json:"GameServerProtectionPolicy,omitempty"`

	// InstanceDefinitions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-instancedefinitions
	InstanceDefinitions cfz.ExpressionSlice[AWS_GameLift_GameServerGroup_InstanceDefinition] `json:"InstanceDefinitions,omitempty"`

	// LaunchTemplate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-launchtemplate
	LaunchTemplate cfz.Expression[AWS_GameLift_GameServerGroup_LaunchTemplate] `json:"LaunchTemplate,omitempty"`

	// MaxSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-maxsize
	MaxSize cfz.Expression[float64] `json:"MaxSize,omitempty"`

	// MinSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-minsize
	MinSize cfz.Expression[float64] `json:"MinSize,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcSubnets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-gameservergroup.html#cfn-gamelift-gameservergroup-vpcsubnets
	VpcSubnets cfz.ExpressionSlice[string] `json:"VpcSubnets,omitempty"`
}

// New__AWS_GameLift_GameServerGroup initializes a new *AWS_GameLift_GameServerGroup.
func New__AWS_GameLift_GameServerGroup(logicalName string) *AWS_GameLift_GameServerGroup {
	return &AWS_GameLift_GameServerGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_GameLift_GameServerGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_GameLift_GameServerGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_GameLift_GameServerGroup) GetType() string {
	return AWS_GameLift_GameServerGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_GameLift_GameServerGroup) Set__LogicalName(v string) *AWS_GameLift_GameServerGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_GameLift_GameServerGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_GameLift_GameServerGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_GameLift_GameServerGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_GameLift_GameServerGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_GameLift_GameServerGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_GameLift_GameServerGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_GameLift_GameServerGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_GameLift_GameServerGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_GameLift_GameServerGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_GameLift_GameServerGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_GameLift_GameServerGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_GameLift_GameServerGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AutoScalingPolicy updates property "AutoScalingPolicy".
func (t *AWS_GameLift_GameServerGroup) Set__AutoScalingPolicy(v cfz.Expression[AWS_GameLift_GameServerGroup_AutoScalingPolicy]) *AWS_GameLift_GameServerGroup {
	t.AutoScalingPolicy = v
	return t
}

// SetV__AutoScalingPolicy updates property "AutoScalingPolicy".
func (t *AWS_GameLift_GameServerGroup) SetV__AutoScalingPolicy(v AWS_GameLift_GameServerGroup_AutoScalingPolicy) *AWS_GameLift_GameServerGroup {
	t.AutoScalingPolicy = cfz.V(v)
	return t
}

// Set__BalancingStrategy updates property "BalancingStrategy".
func (t *AWS_GameLift_GameServerGroup) Set__BalancingStrategy(v cfz.Expression[string]) *AWS_GameLift_GameServerGroup {
	t.BalancingStrategy = v
	return t
}

// SetV__BalancingStrategy updates property "BalancingStrategy".
func (t *AWS_GameLift_GameServerGroup) SetV__BalancingStrategy(v string) *AWS_GameLift_GameServerGroup {
	t.BalancingStrategy = cfz.V(v)
	return t
}

// Set__DeleteOption updates property "DeleteOption".
func (t *AWS_GameLift_GameServerGroup) Set__DeleteOption(v cfz.Expression[string]) *AWS_GameLift_GameServerGroup {
	t.DeleteOption = v
	return t
}

// SetV__DeleteOption updates property "DeleteOption".
func (t *AWS_GameLift_GameServerGroup) SetV__DeleteOption(v string) *AWS_GameLift_GameServerGroup {
	t.DeleteOption = cfz.V(v)
	return t
}

// Set__GameServerGroupName updates property "GameServerGroupName".
func (t *AWS_GameLift_GameServerGroup) Set__GameServerGroupName(v cfz.Expression[string]) *AWS_GameLift_GameServerGroup {
	t.GameServerGroupName = v
	return t
}

// SetV__GameServerGroupName updates property "GameServerGroupName".
func (t *AWS_GameLift_GameServerGroup) SetV__GameServerGroupName(v string) *AWS_GameLift_GameServerGroup {
	t.GameServerGroupName = cfz.V(v)
	return t
}

// Set__GameServerProtectionPolicy updates property "GameServerProtectionPolicy".
func (t *AWS_GameLift_GameServerGroup) Set__GameServerProtectionPolicy(v cfz.Expression[string]) *AWS_GameLift_GameServerGroup {
	t.GameServerProtectionPolicy = v
	return t
}

// SetV__GameServerProtectionPolicy updates property "GameServerProtectionPolicy".
func (t *AWS_GameLift_GameServerGroup) SetV__GameServerProtectionPolicy(v string) *AWS_GameLift_GameServerGroup {
	t.GameServerProtectionPolicy = cfz.V(v)
	return t
}

// Set__InstanceDefinitions updates property "InstanceDefinitions".
func (t *AWS_GameLift_GameServerGroup) Set__InstanceDefinitions(v cfz.ExpressionSlice[AWS_GameLift_GameServerGroup_InstanceDefinition]) *AWS_GameLift_GameServerGroup {
	t.InstanceDefinitions = v
	return t
}

// SetS__InstanceDefinitions updates property "InstanceDefinitions".
func (t *AWS_GameLift_GameServerGroup) SetS__InstanceDefinitions(v ...cfz.Expression[AWS_GameLift_GameServerGroup_InstanceDefinition]) *AWS_GameLift_GameServerGroup {
	t.InstanceDefinitions = cfz.S(v...)
	return t
}

// SetSV__InstanceDefinitions updates property "InstanceDefinitions".
func (t *AWS_GameLift_GameServerGroup) SetSV__InstanceDefinitions(v ...AWS_GameLift_GameServerGroup_InstanceDefinition) *AWS_GameLift_GameServerGroup {
	t.InstanceDefinitions = cfz.SV(v...)
	return t
}

// Set__LaunchTemplate updates property "LaunchTemplate".
func (t *AWS_GameLift_GameServerGroup) Set__LaunchTemplate(v cfz.Expression[AWS_GameLift_GameServerGroup_LaunchTemplate]) *AWS_GameLift_GameServerGroup {
	t.LaunchTemplate = v
	return t
}

// SetV__LaunchTemplate updates property "LaunchTemplate".
func (t *AWS_GameLift_GameServerGroup) SetV__LaunchTemplate(v AWS_GameLift_GameServerGroup_LaunchTemplate) *AWS_GameLift_GameServerGroup {
	t.LaunchTemplate = cfz.V(v)
	return t
}

// Set__MaxSize updates property "MaxSize".
func (t *AWS_GameLift_GameServerGroup) Set__MaxSize(v cfz.Expression[float64]) *AWS_GameLift_GameServerGroup {
	t.MaxSize = v
	return t
}

// SetV__MaxSize updates property "MaxSize".
func (t *AWS_GameLift_GameServerGroup) SetV__MaxSize(v float64) *AWS_GameLift_GameServerGroup {
	t.MaxSize = cfz.V(v)
	return t
}

// Set__MinSize updates property "MinSize".
func (t *AWS_GameLift_GameServerGroup) Set__MinSize(v cfz.Expression[float64]) *AWS_GameLift_GameServerGroup {
	t.MinSize = v
	return t
}

// SetV__MinSize updates property "MinSize".
func (t *AWS_GameLift_GameServerGroup) SetV__MinSize(v float64) *AWS_GameLift_GameServerGroup {
	t.MinSize = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_GameLift_GameServerGroup) Set__RoleArn(v cfz.Expression[string]) *AWS_GameLift_GameServerGroup {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_GameLift_GameServerGroup) SetV__RoleArn(v string) *AWS_GameLift_GameServerGroup {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_GameLift_GameServerGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_GameLift_GameServerGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_GameLift_GameServerGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_GameLift_GameServerGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_GameLift_GameServerGroup) SetSV__Tags(v ...cfz.Tag) *AWS_GameLift_GameServerGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcSubnets updates property "VpcSubnets".
func (t *AWS_GameLift_GameServerGroup) Set__VpcSubnets(v cfz.ExpressionSlice[string]) *AWS_GameLift_GameServerGroup {
	t.VpcSubnets = v
	return t
}

// SetS__VpcSubnets updates property "VpcSubnets".
func (t *AWS_GameLift_GameServerGroup) SetS__VpcSubnets(v ...cfz.Expression[string]) *AWS_GameLift_GameServerGroup {
	t.VpcSubnets = cfz.S(v...)
	return t
}

// SetSV__VpcSubnets updates property "VpcSubnets".
func (t *AWS_GameLift_GameServerGroup) SetSV__VpcSubnets(v ...string) *AWS_GameLift_GameServerGroup {
	t.VpcSubnets = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_GameLift_GameServerGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AutoScalingGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AutoScalingGroupArn
func (t *AWS_GameLift_GameServerGroup) GetAtt__AutoScalingGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_GameLift_GameServerGroup__AttributesMap.AutoScalingGroupArn))
}

// GetAtt__GameServerGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: GameServerGroupArn
func (t *AWS_GameLift_GameServerGroup) GetAtt__GameServerGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_GameLift_GameServerGroup__AttributesMap.GameServerGroupArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_GameLift_GameServerGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AutoScalingGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AutoScalingGroupArn
func (t *AWS_GameLift_GameServerGroup) GetConventionalOutputAtt__AutoScalingGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAutoScalingGroupArn", t.GetAtt__AutoScalingGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__GameServerGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: GameServerGroupArn
func (t *AWS_GameLift_GameServerGroup) GetConventionalOutputAtt__GameServerGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGameServerGroupArn", t.GetAtt__GameServerGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_GameLift_GameServerGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_GameLift_GameServerGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_GameLift_GameServerGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
