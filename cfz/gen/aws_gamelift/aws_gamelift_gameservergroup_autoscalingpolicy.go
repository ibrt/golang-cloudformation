// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_gamelift

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_GameLift_GameServerGroup_AutoScalingPolicy__Type is the CloudFormation type for AWS::GameLift::GameServerGroup.AutoScalingPolicy.
	AWS_GameLift_GameServerGroup_AutoScalingPolicy__Type = "AWS::GameLift::GameServerGroup.AutoScalingPolicy"
)

var (
	// AWS_GameLift_GameServerGroup_AutoScalingPolicy__PropertiesMap reports all the CloudFormation properties for AWS::GameLift::GameServerGroup.AutoScalingPolicy.
	AWS_GameLift_GameServerGroup_AutoScalingPolicy__PropertiesMap = struct {
		EstimatedInstanceWarmup     string
		TargetTrackingConfiguration string
	}{
		EstimatedInstanceWarmup:     "EstimatedInstanceWarmup",
		TargetTrackingConfiguration: "TargetTrackingConfiguration",
	}

	// AWS_GameLift_GameServerGroup_AutoScalingPolicy__PropertiesSlice reports all the CloudFormation properties for AWS::GameLift::GameServerGroup.AutoScalingPolicy.
	AWS_GameLift_GameServerGroup_AutoScalingPolicy__PropertiesSlice = []string{
		AWS_GameLift_GameServerGroup_AutoScalingPolicy__PropertiesMap.EstimatedInstanceWarmup,
		AWS_GameLift_GameServerGroup_AutoScalingPolicy__PropertiesMap.TargetTrackingConfiguration,
	}
)

// AWS_GameLift_GameServerGroup_AutoScalingPolicy is a binding for AWS::GameLift::GameServerGroup.AutoScalingPolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-gameservergroup-autoscalingpolicy.html
type AWS_GameLift_GameServerGroup_AutoScalingPolicy struct {
	// EstimatedInstanceWarmup is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-gameservergroup-autoscalingpolicy.html#cfn-gamelift-gameservergroup-autoscalingpolicy-estimatedinstancewarmup
	EstimatedInstanceWarmup cfz.Expression[float64] `json:"EstimatedInstanceWarmup,omitempty"`

	// TargetTrackingConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-gameservergroup-autoscalingpolicy.html#cfn-gamelift-gameservergroup-autoscalingpolicy-targettrackingconfiguration
	TargetTrackingConfiguration cfz.Expression[AWS_GameLift_GameServerGroup_TargetTrackingConfiguration] `json:"TargetTrackingConfiguration,omitempty"`
}

// New__AWS_GameLift_GameServerGroup_AutoScalingPolicy initializes a new AWS_GameLift_GameServerGroup_AutoScalingPolicy.
func New__AWS_GameLift_GameServerGroup_AutoScalingPolicy() AWS_GameLift_GameServerGroup_AutoScalingPolicy {
	return AWS_GameLift_GameServerGroup_AutoScalingPolicy{}
}

// GetType returns the CloudFormation type.
func (AWS_GameLift_GameServerGroup_AutoScalingPolicy) GetType() string {
	return AWS_GameLift_GameServerGroup_AutoScalingPolicy__Type
}

// Set__EstimatedInstanceWarmup updates property "EstimatedInstanceWarmup".
func (t AWS_GameLift_GameServerGroup_AutoScalingPolicy) Set__EstimatedInstanceWarmup(v cfz.Expression[float64]) AWS_GameLift_GameServerGroup_AutoScalingPolicy {
	t.EstimatedInstanceWarmup = v
	return t
}

// SetV__EstimatedInstanceWarmup updates property "EstimatedInstanceWarmup".
func (t AWS_GameLift_GameServerGroup_AutoScalingPolicy) SetV__EstimatedInstanceWarmup(v float64) AWS_GameLift_GameServerGroup_AutoScalingPolicy {
	t.EstimatedInstanceWarmup = cfz.V(v)
	return t
}

// Set__TargetTrackingConfiguration updates property "TargetTrackingConfiguration".
func (t AWS_GameLift_GameServerGroup_AutoScalingPolicy) Set__TargetTrackingConfiguration(v cfz.Expression[AWS_GameLift_GameServerGroup_TargetTrackingConfiguration]) AWS_GameLift_GameServerGroup_AutoScalingPolicy {
	t.TargetTrackingConfiguration = v
	return t
}

// SetV__TargetTrackingConfiguration updates property "TargetTrackingConfiguration".
func (t AWS_GameLift_GameServerGroup_AutoScalingPolicy) SetV__TargetTrackingConfiguration(v AWS_GameLift_GameServerGroup_TargetTrackingConfiguration) AWS_GameLift_GameServerGroup_AutoScalingPolicy {
	t.TargetTrackingConfiguration = cfz.V(v)
	return t
}
