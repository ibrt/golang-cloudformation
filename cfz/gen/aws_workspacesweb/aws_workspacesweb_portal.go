// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_workspacesweb

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_WorkSpacesWeb_Portal)(nil)
	_ cfz.Resource                   = (*AWS_WorkSpacesWeb_Portal)(nil)
)

const (
	// AWS_WorkSpacesWeb_Portal__Type is the CloudFormation type for AWS::WorkSpacesWeb::Portal.
	AWS_WorkSpacesWeb_Portal__Type = "AWS::WorkSpacesWeb::Portal"
)

var (
	// AWS_WorkSpacesWeb_Portal__AttributesMap reports all the CloudFormation attributes for AWS::WorkSpacesWeb::Portal.
	AWS_WorkSpacesWeb_Portal__AttributesMap = struct {
		BrowserType                 string
		CreationDate                string
		PortalArn                   string
		PortalEndpoint              string
		PortalStatus                string
		RendererType                string
		ServiceProviderSamlMetadata string
		StatusReason                string
	}{
		BrowserType:                 "BrowserType",
		CreationDate:                "CreationDate",
		PortalArn:                   "PortalArn",
		PortalEndpoint:              "PortalEndpoint",
		PortalStatus:                "PortalStatus",
		RendererType:                "RendererType",
		ServiceProviderSamlMetadata: "ServiceProviderSamlMetadata",
		StatusReason:                "StatusReason",
	}

	// AWS_WorkSpacesWeb_Portal__AttributesSlice reports all the CloudFormation attributes for AWS::WorkSpacesWeb::Portal.
	AWS_WorkSpacesWeb_Portal__AttributesSlice = []string{
		AWS_WorkSpacesWeb_Portal__AttributesMap.BrowserType,
		AWS_WorkSpacesWeb_Portal__AttributesMap.CreationDate,
		AWS_WorkSpacesWeb_Portal__AttributesMap.PortalArn,
		AWS_WorkSpacesWeb_Portal__AttributesMap.PortalEndpoint,
		AWS_WorkSpacesWeb_Portal__AttributesMap.PortalStatus,
		AWS_WorkSpacesWeb_Portal__AttributesMap.RendererType,
		AWS_WorkSpacesWeb_Portal__AttributesMap.ServiceProviderSamlMetadata,
		AWS_WorkSpacesWeb_Portal__AttributesMap.StatusReason,
	}
)

var (
	// AWS_WorkSpacesWeb_Portal__PropertiesMap reports all the CloudFormation properties for AWS::WorkSpacesWeb::Portal.
	AWS_WorkSpacesWeb_Portal__PropertiesMap = struct {
		AdditionalEncryptionContext  string
		AuthenticationType           string
		BrowserSettingsArn           string
		CustomerManagedKey           string
		DataProtectionSettingsArn    string
		DisplayName                  string
		InstanceType                 string
		IpAccessSettingsArn          string
		MaxConcurrentSessions        string
		NetworkSettingsArn           string
		Tags                         string
		TrustStoreArn                string
		UserAccessLoggingSettingsArn string
		UserSettingsArn              string
	}{
		AdditionalEncryptionContext:  "AdditionalEncryptionContext",
		AuthenticationType:           "AuthenticationType",
		BrowserSettingsArn:           "BrowserSettingsArn",
		CustomerManagedKey:           "CustomerManagedKey",
		DataProtectionSettingsArn:    "DataProtectionSettingsArn",
		DisplayName:                  "DisplayName",
		InstanceType:                 "InstanceType",
		IpAccessSettingsArn:          "IpAccessSettingsArn",
		MaxConcurrentSessions:        "MaxConcurrentSessions",
		NetworkSettingsArn:           "NetworkSettingsArn",
		Tags:                         "Tags",
		TrustStoreArn:                "TrustStoreArn",
		UserAccessLoggingSettingsArn: "UserAccessLoggingSettingsArn",
		UserSettingsArn:              "UserSettingsArn",
	}

	// AWS_WorkSpacesWeb_Portal__PropertiesSlice reports all the CloudFormation properties for AWS::WorkSpacesWeb::Portal.
	AWS_WorkSpacesWeb_Portal__PropertiesSlice = []string{
		AWS_WorkSpacesWeb_Portal__PropertiesMap.AdditionalEncryptionContext,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.AuthenticationType,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.BrowserSettingsArn,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.CustomerManagedKey,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.DataProtectionSettingsArn,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.DisplayName,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.InstanceType,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.IpAccessSettingsArn,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.MaxConcurrentSessions,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.NetworkSettingsArn,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.Tags,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.TrustStoreArn,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.UserAccessLoggingSettingsArn,
		AWS_WorkSpacesWeb_Portal__PropertiesMap.UserSettingsArn,
	}
)

// AWS_WorkSpacesWeb_Portal is a binding for AWS::WorkSpacesWeb::Portal.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html
type AWS_WorkSpacesWeb_Portal struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AdditionalEncryptionContext is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-additionalencryptioncontext
	AdditionalEncryptionContext cfz.ExpressionMap[string] `json:"AdditionalEncryptionContext,omitempty"`

	// AuthenticationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-authenticationtype
	AuthenticationType cfz.Expression[string] `json:"AuthenticationType,omitempty"`

	// BrowserSettingsArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-browsersettingsarn
	BrowserSettingsArn cfz.Expression[string] `json:"BrowserSettingsArn,omitempty"`

	// CustomerManagedKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-customermanagedkey
	CustomerManagedKey cfz.Expression[string] `json:"CustomerManagedKey,omitempty"`

	// DataProtectionSettingsArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-dataprotectionsettingsarn
	DataProtectionSettingsArn cfz.Expression[string] `json:"DataProtectionSettingsArn,omitempty"`

	// DisplayName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-displayname
	DisplayName cfz.Expression[string] `json:"DisplayName,omitempty"`

	// InstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-instancetype
	InstanceType cfz.Expression[string] `json:"InstanceType,omitempty"`

	// IpAccessSettingsArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-ipaccesssettingsarn
	IpAccessSettingsArn cfz.Expression[string] `json:"IpAccessSettingsArn,omitempty"`

	// MaxConcurrentSessions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-maxconcurrentsessions
	MaxConcurrentSessions cfz.Expression[float64] `json:"MaxConcurrentSessions,omitempty"`

	// NetworkSettingsArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-networksettingsarn
	NetworkSettingsArn cfz.Expression[string] `json:"NetworkSettingsArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TrustStoreArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-truststorearn
	TrustStoreArn cfz.Expression[string] `json:"TrustStoreArn,omitempty"`

	// UserAccessLoggingSettingsArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-useraccessloggingsettingsarn
	UserAccessLoggingSettingsArn cfz.Expression[string] `json:"UserAccessLoggingSettingsArn,omitempty"`

	// UserSettingsArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-portal.html#cfn-workspacesweb-portal-usersettingsarn
	UserSettingsArn cfz.Expression[string] `json:"UserSettingsArn,omitempty"`
}

// New__AWS_WorkSpacesWeb_Portal initializes a new *AWS_WorkSpacesWeb_Portal.
func New__AWS_WorkSpacesWeb_Portal(logicalName string) *AWS_WorkSpacesWeb_Portal {
	return &AWS_WorkSpacesWeb_Portal{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_WorkSpacesWeb_Portal) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_WorkSpacesWeb_Portal) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_WorkSpacesWeb_Portal) GetType() string {
	return AWS_WorkSpacesWeb_Portal__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_WorkSpacesWeb_Portal) Set__LogicalName(v string) *AWS_WorkSpacesWeb_Portal {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_WorkSpacesWeb_Portal) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_WorkSpacesWeb_Portal {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_WorkSpacesWeb_Portal) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_WorkSpacesWeb_Portal {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_WorkSpacesWeb_Portal) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_WorkSpacesWeb_Portal {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_WorkSpacesWeb_Portal) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_WorkSpacesWeb_Portal {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_WorkSpacesWeb_Portal) Set__RequestedOutputs(v []cfz.Output) *AWS_WorkSpacesWeb_Portal {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_WorkSpacesWeb_Portal) Add__RequestedOutputs(v ...cfz.Output) *AWS_WorkSpacesWeb_Portal {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AdditionalEncryptionContext updates property "AdditionalEncryptionContext".
func (t *AWS_WorkSpacesWeb_Portal) Set__AdditionalEncryptionContext(v cfz.ExpressionMap[string]) *AWS_WorkSpacesWeb_Portal {
	t.AdditionalEncryptionContext = v
	return t
}

// SetM__AdditionalEncryptionContext updates property "AdditionalEncryptionContext".
func (t *AWS_WorkSpacesWeb_Portal) SetM__AdditionalEncryptionContext(v ...map[string]cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.AdditionalEncryptionContext = cfz.M(v...)
	return t
}

// SetMV__AdditionalEncryptionContext updates property "AdditionalEncryptionContext".
func (t *AWS_WorkSpacesWeb_Portal) SetMV__AdditionalEncryptionContext(v ...map[string]string) *AWS_WorkSpacesWeb_Portal {
	t.AdditionalEncryptionContext = cfz.MV(v...)
	return t
}

// Set__AuthenticationType updates property "AuthenticationType".
func (t *AWS_WorkSpacesWeb_Portal) Set__AuthenticationType(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.AuthenticationType = v
	return t
}

// SetV__AuthenticationType updates property "AuthenticationType".
func (t *AWS_WorkSpacesWeb_Portal) SetV__AuthenticationType(v string) *AWS_WorkSpacesWeb_Portal {
	t.AuthenticationType = cfz.V(v)
	return t
}

// Set__BrowserSettingsArn updates property "BrowserSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) Set__BrowserSettingsArn(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.BrowserSettingsArn = v
	return t
}

// SetV__BrowserSettingsArn updates property "BrowserSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) SetV__BrowserSettingsArn(v string) *AWS_WorkSpacesWeb_Portal {
	t.BrowserSettingsArn = cfz.V(v)
	return t
}

// Set__CustomerManagedKey updates property "CustomerManagedKey".
func (t *AWS_WorkSpacesWeb_Portal) Set__CustomerManagedKey(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.CustomerManagedKey = v
	return t
}

// SetV__CustomerManagedKey updates property "CustomerManagedKey".
func (t *AWS_WorkSpacesWeb_Portal) SetV__CustomerManagedKey(v string) *AWS_WorkSpacesWeb_Portal {
	t.CustomerManagedKey = cfz.V(v)
	return t
}

// Set__DataProtectionSettingsArn updates property "DataProtectionSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) Set__DataProtectionSettingsArn(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.DataProtectionSettingsArn = v
	return t
}

// SetV__DataProtectionSettingsArn updates property "DataProtectionSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) SetV__DataProtectionSettingsArn(v string) *AWS_WorkSpacesWeb_Portal {
	t.DataProtectionSettingsArn = cfz.V(v)
	return t
}

// Set__DisplayName updates property "DisplayName".
func (t *AWS_WorkSpacesWeb_Portal) Set__DisplayName(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.DisplayName = v
	return t
}

// SetV__DisplayName updates property "DisplayName".
func (t *AWS_WorkSpacesWeb_Portal) SetV__DisplayName(v string) *AWS_WorkSpacesWeb_Portal {
	t.DisplayName = cfz.V(v)
	return t
}

// Set__InstanceType updates property "InstanceType".
func (t *AWS_WorkSpacesWeb_Portal) Set__InstanceType(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.InstanceType = v
	return t
}

// SetV__InstanceType updates property "InstanceType".
func (t *AWS_WorkSpacesWeb_Portal) SetV__InstanceType(v string) *AWS_WorkSpacesWeb_Portal {
	t.InstanceType = cfz.V(v)
	return t
}

// Set__IpAccessSettingsArn updates property "IpAccessSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) Set__IpAccessSettingsArn(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.IpAccessSettingsArn = v
	return t
}

// SetV__IpAccessSettingsArn updates property "IpAccessSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) SetV__IpAccessSettingsArn(v string) *AWS_WorkSpacesWeb_Portal {
	t.IpAccessSettingsArn = cfz.V(v)
	return t
}

// Set__MaxConcurrentSessions updates property "MaxConcurrentSessions".
func (t *AWS_WorkSpacesWeb_Portal) Set__MaxConcurrentSessions(v cfz.Expression[float64]) *AWS_WorkSpacesWeb_Portal {
	t.MaxConcurrentSessions = v
	return t
}

// SetV__MaxConcurrentSessions updates property "MaxConcurrentSessions".
func (t *AWS_WorkSpacesWeb_Portal) SetV__MaxConcurrentSessions(v float64) *AWS_WorkSpacesWeb_Portal {
	t.MaxConcurrentSessions = cfz.V(v)
	return t
}

// Set__NetworkSettingsArn updates property "NetworkSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) Set__NetworkSettingsArn(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.NetworkSettingsArn = v
	return t
}

// SetV__NetworkSettingsArn updates property "NetworkSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) SetV__NetworkSettingsArn(v string) *AWS_WorkSpacesWeb_Portal {
	t.NetworkSettingsArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_WorkSpacesWeb_Portal) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_WorkSpacesWeb_Portal {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_WorkSpacesWeb_Portal) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_WorkSpacesWeb_Portal {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_WorkSpacesWeb_Portal) SetSV__Tags(v ...cfz.Tag) *AWS_WorkSpacesWeb_Portal {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TrustStoreArn updates property "TrustStoreArn".
func (t *AWS_WorkSpacesWeb_Portal) Set__TrustStoreArn(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.TrustStoreArn = v
	return t
}

// SetV__TrustStoreArn updates property "TrustStoreArn".
func (t *AWS_WorkSpacesWeb_Portal) SetV__TrustStoreArn(v string) *AWS_WorkSpacesWeb_Portal {
	t.TrustStoreArn = cfz.V(v)
	return t
}

// Set__UserAccessLoggingSettingsArn updates property "UserAccessLoggingSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) Set__UserAccessLoggingSettingsArn(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.UserAccessLoggingSettingsArn = v
	return t
}

// SetV__UserAccessLoggingSettingsArn updates property "UserAccessLoggingSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) SetV__UserAccessLoggingSettingsArn(v string) *AWS_WorkSpacesWeb_Portal {
	t.UserAccessLoggingSettingsArn = cfz.V(v)
	return t
}

// Set__UserSettingsArn updates property "UserSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) Set__UserSettingsArn(v cfz.Expression[string]) *AWS_WorkSpacesWeb_Portal {
	t.UserSettingsArn = v
	return t
}

// SetV__UserSettingsArn updates property "UserSettingsArn".
func (t *AWS_WorkSpacesWeb_Portal) SetV__UserSettingsArn(v string) *AWS_WorkSpacesWeb_Portal {
	t.UserSettingsArn = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_WorkSpacesWeb_Portal) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__BrowserType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BrowserType
func (t *AWS_WorkSpacesWeb_Portal) GetAtt__BrowserType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_Portal__AttributesMap.BrowserType))
}

// GetAtt__CreationDate returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationDate
func (t *AWS_WorkSpacesWeb_Portal) GetAtt__CreationDate() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_Portal__AttributesMap.CreationDate))
}

// GetAtt__PortalArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PortalArn
func (t *AWS_WorkSpacesWeb_Portal) GetAtt__PortalArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_Portal__AttributesMap.PortalArn))
}

// GetAtt__PortalEndpoint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PortalEndpoint
func (t *AWS_WorkSpacesWeb_Portal) GetAtt__PortalEndpoint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_Portal__AttributesMap.PortalEndpoint))
}

// GetAtt__PortalStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PortalStatus
func (t *AWS_WorkSpacesWeb_Portal) GetAtt__PortalStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_Portal__AttributesMap.PortalStatus))
}

// GetAtt__RendererType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RendererType
func (t *AWS_WorkSpacesWeb_Portal) GetAtt__RendererType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_Portal__AttributesMap.RendererType))
}

// GetAtt__ServiceProviderSamlMetadata returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ServiceProviderSamlMetadata
func (t *AWS_WorkSpacesWeb_Portal) GetAtt__ServiceProviderSamlMetadata() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_Portal__AttributesMap.ServiceProviderSamlMetadata))
}

// GetAtt__StatusReason returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StatusReason
func (t *AWS_WorkSpacesWeb_Portal) GetAtt__StatusReason() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_Portal__AttributesMap.StatusReason))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_WorkSpacesWeb_Portal) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BrowserType returns a conventionally configured output for an attribute of this resource.
// Attribute: BrowserType
func (t *AWS_WorkSpacesWeb_Portal) GetConventionalOutputAtt__BrowserType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBrowserType", t.GetAtt__BrowserType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationDate returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationDate
func (t *AWS_WorkSpacesWeb_Portal) GetConventionalOutputAtt__CreationDate(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationDate", t.GetAtt__CreationDate())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PortalArn returns a conventionally configured output for an attribute of this resource.
// Attribute: PortalArn
func (t *AWS_WorkSpacesWeb_Portal) GetConventionalOutputAtt__PortalArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPortalArn", t.GetAtt__PortalArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PortalEndpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: PortalEndpoint
func (t *AWS_WorkSpacesWeb_Portal) GetConventionalOutputAtt__PortalEndpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPortalEndpoint", t.GetAtt__PortalEndpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PortalStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: PortalStatus
func (t *AWS_WorkSpacesWeb_Portal) GetConventionalOutputAtt__PortalStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPortalStatus", t.GetAtt__PortalStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RendererType returns a conventionally configured output for an attribute of this resource.
// Attribute: RendererType
func (t *AWS_WorkSpacesWeb_Portal) GetConventionalOutputAtt__RendererType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRendererType", t.GetAtt__RendererType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ServiceProviderSamlMetadata returns a conventionally configured output for an attribute of this resource.
// Attribute: ServiceProviderSamlMetadata
func (t *AWS_WorkSpacesWeb_Portal) GetConventionalOutputAtt__ServiceProviderSamlMetadata(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttServiceProviderSamlMetadata", t.GetAtt__ServiceProviderSamlMetadata())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StatusReason returns a conventionally configured output for an attribute of this resource.
// Attribute: StatusReason
func (t *AWS_WorkSpacesWeb_Portal) GetConventionalOutputAtt__StatusReason(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatusReason", t.GetAtt__StatusReason())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_WorkSpacesWeb_Portal) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_WorkSpacesWeb_Portal

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_WorkSpacesWeb_Portal) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
