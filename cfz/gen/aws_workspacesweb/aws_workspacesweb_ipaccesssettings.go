// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_workspacesweb

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_WorkSpacesWeb_IpAccessSettings)(nil)
	_ cfz.Resource                   = (*AWS_WorkSpacesWeb_IpAccessSettings)(nil)
)

const (
	// AWS_WorkSpacesWeb_IpAccessSettings__Type is the CloudFormation type for AWS::WorkSpacesWeb::IpAccessSettings.
	AWS_WorkSpacesWeb_IpAccessSettings__Type = "AWS::WorkSpacesWeb::IpAccessSettings"
)

var (
	// AWS_WorkSpacesWeb_IpAccessSettings__AttributesMap reports all the CloudFormation attributes for AWS::WorkSpacesWeb::IpAccessSettings.
	AWS_WorkSpacesWeb_IpAccessSettings__AttributesMap = struct {
		AssociatedPortalArns string
		CreationDate         string
		IpAccessSettingsArn  string
	}{
		AssociatedPortalArns: "AssociatedPortalArns",
		CreationDate:         "CreationDate",
		IpAccessSettingsArn:  "IpAccessSettingsArn",
	}

	// AWS_WorkSpacesWeb_IpAccessSettings__AttributesSlice reports all the CloudFormation attributes for AWS::WorkSpacesWeb::IpAccessSettings.
	AWS_WorkSpacesWeb_IpAccessSettings__AttributesSlice = []string{
		AWS_WorkSpacesWeb_IpAccessSettings__AttributesMap.AssociatedPortalArns,
		AWS_WorkSpacesWeb_IpAccessSettings__AttributesMap.CreationDate,
		AWS_WorkSpacesWeb_IpAccessSettings__AttributesMap.IpAccessSettingsArn,
	}
)

var (
	// AWS_WorkSpacesWeb_IpAccessSettings__PropertiesMap reports all the CloudFormation properties for AWS::WorkSpacesWeb::IpAccessSettings.
	AWS_WorkSpacesWeb_IpAccessSettings__PropertiesMap = struct {
		AdditionalEncryptionContext string
		CustomerManagedKey          string
		Description                 string
		DisplayName                 string
		IpRules                     string
		Tags                        string
	}{
		AdditionalEncryptionContext: "AdditionalEncryptionContext",
		CustomerManagedKey:          "CustomerManagedKey",
		Description:                 "Description",
		DisplayName:                 "DisplayName",
		IpRules:                     "IpRules",
		Tags:                        "Tags",
	}

	// AWS_WorkSpacesWeb_IpAccessSettings__PropertiesSlice reports all the CloudFormation properties for AWS::WorkSpacesWeb::IpAccessSettings.
	AWS_WorkSpacesWeb_IpAccessSettings__PropertiesSlice = []string{
		AWS_WorkSpacesWeb_IpAccessSettings__PropertiesMap.AdditionalEncryptionContext,
		AWS_WorkSpacesWeb_IpAccessSettings__PropertiesMap.CustomerManagedKey,
		AWS_WorkSpacesWeb_IpAccessSettings__PropertiesMap.Description,
		AWS_WorkSpacesWeb_IpAccessSettings__PropertiesMap.DisplayName,
		AWS_WorkSpacesWeb_IpAccessSettings__PropertiesMap.IpRules,
		AWS_WorkSpacesWeb_IpAccessSettings__PropertiesMap.Tags,
	}
)

// AWS_WorkSpacesWeb_IpAccessSettings is a binding for AWS::WorkSpacesWeb::IpAccessSettings.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html
type AWS_WorkSpacesWeb_IpAccessSettings struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AdditionalEncryptionContext is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-additionalencryptioncontext
	AdditionalEncryptionContext cfz.ExpressionMap[string] `json:"AdditionalEncryptionContext,omitempty"`

	// CustomerManagedKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-customermanagedkey
	CustomerManagedKey cfz.Expression[string] `json:"CustomerManagedKey,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DisplayName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-displayname
	DisplayName cfz.Expression[string] `json:"DisplayName,omitempty"`

	// IpRules is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-iprules
	IpRules cfz.ExpressionSlice[AWS_WorkSpacesWeb_IpAccessSettings_IpRule] `json:"IpRules,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-ipaccesssettings.html#cfn-workspacesweb-ipaccesssettings-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_WorkSpacesWeb_IpAccessSettings initializes a new *AWS_WorkSpacesWeb_IpAccessSettings.
func New__AWS_WorkSpacesWeb_IpAccessSettings(logicalName string) *AWS_WorkSpacesWeb_IpAccessSettings {
	return &AWS_WorkSpacesWeb_IpAccessSettings{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_WorkSpacesWeb_IpAccessSettings) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_WorkSpacesWeb_IpAccessSettings) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_WorkSpacesWeb_IpAccessSettings) GetType() string {
	return AWS_WorkSpacesWeb_IpAccessSettings__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__LogicalName(v string) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__RequestedOutputs(v []cfz.Output) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Add__RequestedOutputs(v ...cfz.Output) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AdditionalEncryptionContext updates property "AdditionalEncryptionContext".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__AdditionalEncryptionContext(v cfz.ExpressionMap[string]) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.AdditionalEncryptionContext = v
	return t
}

// SetM__AdditionalEncryptionContext updates property "AdditionalEncryptionContext".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) SetM__AdditionalEncryptionContext(v ...map[string]cfz.Expression[string]) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.AdditionalEncryptionContext = cfz.M(v...)
	return t
}

// SetMV__AdditionalEncryptionContext updates property "AdditionalEncryptionContext".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) SetMV__AdditionalEncryptionContext(v ...map[string]string) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.AdditionalEncryptionContext = cfz.MV(v...)
	return t
}

// Set__CustomerManagedKey updates property "CustomerManagedKey".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__CustomerManagedKey(v cfz.Expression[string]) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.CustomerManagedKey = v
	return t
}

// SetV__CustomerManagedKey updates property "CustomerManagedKey".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) SetV__CustomerManagedKey(v string) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.CustomerManagedKey = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__Description(v cfz.Expression[string]) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) SetV__Description(v string) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.Description = cfz.V(v)
	return t
}

// Set__DisplayName updates property "DisplayName".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__DisplayName(v cfz.Expression[string]) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.DisplayName = v
	return t
}

// SetV__DisplayName updates property "DisplayName".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) SetV__DisplayName(v string) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.DisplayName = cfz.V(v)
	return t
}

// Set__IpRules updates property "IpRules".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__IpRules(v cfz.ExpressionSlice[AWS_WorkSpacesWeb_IpAccessSettings_IpRule]) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.IpRules = v
	return t
}

// SetS__IpRules updates property "IpRules".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) SetS__IpRules(v ...cfz.Expression[AWS_WorkSpacesWeb_IpAccessSettings_IpRule]) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.IpRules = cfz.S(v...)
	return t
}

// SetSV__IpRules updates property "IpRules".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) SetSV__IpRules(v ...AWS_WorkSpacesWeb_IpAccessSettings_IpRule) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.IpRules = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_WorkSpacesWeb_IpAccessSettings) SetSV__Tags(v ...cfz.Tag) *AWS_WorkSpacesWeb_IpAccessSettings {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_WorkSpacesWeb_IpAccessSettings) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAttSlice__AssociatedPortalArns returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AssociatedPortalArns
func (t *AWS_WorkSpacesWeb_IpAccessSettings) GetAttSlice__AssociatedPortalArns() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_IpAccessSettings__AttributesMap.AssociatedPortalArns))
}

// GetAtt__CreationDate returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationDate
func (t *AWS_WorkSpacesWeb_IpAccessSettings) GetAtt__CreationDate() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_IpAccessSettings__AttributesMap.CreationDate))
}

// GetAtt__IpAccessSettingsArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpAccessSettingsArn
func (t *AWS_WorkSpacesWeb_IpAccessSettings) GetAtt__IpAccessSettingsArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_IpAccessSettings__AttributesMap.IpAccessSettingsArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_WorkSpacesWeb_IpAccessSettings) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AssociatedPortalArns returns a conventionally configured output for an attribute of this resource.
// Attribute: AssociatedPortalArns
func (t *AWS_WorkSpacesWeb_IpAccessSettings) GetConventionalOutputAtt__AssociatedPortalArns(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssociatedPortalArns", t.GetAttSlice__AssociatedPortalArns())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationDate returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationDate
func (t *AWS_WorkSpacesWeb_IpAccessSettings) GetConventionalOutputAtt__CreationDate(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationDate", t.GetAtt__CreationDate())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpAccessSettingsArn returns a conventionally configured output for an attribute of this resource.
// Attribute: IpAccessSettingsArn
func (t *AWS_WorkSpacesWeb_IpAccessSettings) GetConventionalOutputAtt__IpAccessSettingsArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpAccessSettingsArn", t.GetAtt__IpAccessSettingsArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_WorkSpacesWeb_IpAccessSettings) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_WorkSpacesWeb_IpAccessSettings

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_WorkSpacesWeb_IpAccessSettings) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
