// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_workspacesweb

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_WorkSpacesWeb_IdentityProvider)(nil)
	_ cfz.Resource                   = (*AWS_WorkSpacesWeb_IdentityProvider)(nil)
)

const (
	// AWS_WorkSpacesWeb_IdentityProvider__Type is the CloudFormation type for AWS::WorkSpacesWeb::IdentityProvider.
	AWS_WorkSpacesWeb_IdentityProvider__Type = "AWS::WorkSpacesWeb::IdentityProvider"
)

var (
	// AWS_WorkSpacesWeb_IdentityProvider__AttributesMap reports all the CloudFormation attributes for AWS::WorkSpacesWeb::IdentityProvider.
	AWS_WorkSpacesWeb_IdentityProvider__AttributesMap = struct {
		IdentityProviderArn string
	}{
		IdentityProviderArn: "IdentityProviderArn",
	}

	// AWS_WorkSpacesWeb_IdentityProvider__AttributesSlice reports all the CloudFormation attributes for AWS::WorkSpacesWeb::IdentityProvider.
	AWS_WorkSpacesWeb_IdentityProvider__AttributesSlice = []string{
		AWS_WorkSpacesWeb_IdentityProvider__AttributesMap.IdentityProviderArn,
	}
)

var (
	// AWS_WorkSpacesWeb_IdentityProvider__PropertiesMap reports all the CloudFormation properties for AWS::WorkSpacesWeb::IdentityProvider.
	AWS_WorkSpacesWeb_IdentityProvider__PropertiesMap = struct {
		IdentityProviderDetails string
		IdentityProviderName    string
		IdentityProviderType    string
		PortalArn               string
		Tags                    string
	}{
		IdentityProviderDetails: "IdentityProviderDetails",
		IdentityProviderName:    "IdentityProviderName",
		IdentityProviderType:    "IdentityProviderType",
		PortalArn:               "PortalArn",
		Tags:                    "Tags",
	}

	// AWS_WorkSpacesWeb_IdentityProvider__PropertiesSlice reports all the CloudFormation properties for AWS::WorkSpacesWeb::IdentityProvider.
	AWS_WorkSpacesWeb_IdentityProvider__PropertiesSlice = []string{
		AWS_WorkSpacesWeb_IdentityProvider__PropertiesMap.IdentityProviderDetails,
		AWS_WorkSpacesWeb_IdentityProvider__PropertiesMap.IdentityProviderName,
		AWS_WorkSpacesWeb_IdentityProvider__PropertiesMap.IdentityProviderType,
		AWS_WorkSpacesWeb_IdentityProvider__PropertiesMap.PortalArn,
		AWS_WorkSpacesWeb_IdentityProvider__PropertiesMap.Tags,
	}
)

// AWS_WorkSpacesWeb_IdentityProvider is a binding for AWS::WorkSpacesWeb::IdentityProvider.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html
type AWS_WorkSpacesWeb_IdentityProvider struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// IdentityProviderDetails is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-identityproviderdetails
	IdentityProviderDetails cfz.ExpressionMap[string] `json:"IdentityProviderDetails,omitempty"`

	// IdentityProviderName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-identityprovidername
	IdentityProviderName cfz.Expression[string] `json:"IdentityProviderName,omitempty"`

	// IdentityProviderType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-identityprovidertype
	IdentityProviderType cfz.Expression[string] `json:"IdentityProviderType,omitempty"`

	// PortalArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-portalarn
	PortalArn cfz.Expression[string] `json:"PortalArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspacesweb-identityprovider.html#cfn-workspacesweb-identityprovider-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_WorkSpacesWeb_IdentityProvider initializes a new *AWS_WorkSpacesWeb_IdentityProvider.
func New__AWS_WorkSpacesWeb_IdentityProvider(logicalName string) *AWS_WorkSpacesWeb_IdentityProvider {
	return &AWS_WorkSpacesWeb_IdentityProvider{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_WorkSpacesWeb_IdentityProvider) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_WorkSpacesWeb_IdentityProvider) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_WorkSpacesWeb_IdentityProvider) GetType() string {
	return AWS_WorkSpacesWeb_IdentityProvider__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__LogicalName(v string) *AWS_WorkSpacesWeb_IdentityProvider {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_WorkSpacesWeb_IdentityProvider {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_WorkSpacesWeb_IdentityProvider {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_WorkSpacesWeb_IdentityProvider {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_WorkSpacesWeb_IdentityProvider {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__RequestedOutputs(v []cfz.Output) *AWS_WorkSpacesWeb_IdentityProvider {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Add__RequestedOutputs(v ...cfz.Output) *AWS_WorkSpacesWeb_IdentityProvider {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__IdentityProviderDetails updates property "IdentityProviderDetails".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__IdentityProviderDetails(v cfz.ExpressionMap[string]) *AWS_WorkSpacesWeb_IdentityProvider {
	t.IdentityProviderDetails = v
	return t
}

// SetM__IdentityProviderDetails updates property "IdentityProviderDetails".
func (t *AWS_WorkSpacesWeb_IdentityProvider) SetM__IdentityProviderDetails(v ...map[string]cfz.Expression[string]) *AWS_WorkSpacesWeb_IdentityProvider {
	t.IdentityProviderDetails = cfz.M(v...)
	return t
}

// SetMV__IdentityProviderDetails updates property "IdentityProviderDetails".
func (t *AWS_WorkSpacesWeb_IdentityProvider) SetMV__IdentityProviderDetails(v ...map[string]string) *AWS_WorkSpacesWeb_IdentityProvider {
	t.IdentityProviderDetails = cfz.MV(v...)
	return t
}

// Set__IdentityProviderName updates property "IdentityProviderName".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__IdentityProviderName(v cfz.Expression[string]) *AWS_WorkSpacesWeb_IdentityProvider {
	t.IdentityProviderName = v
	return t
}

// SetV__IdentityProviderName updates property "IdentityProviderName".
func (t *AWS_WorkSpacesWeb_IdentityProvider) SetV__IdentityProviderName(v string) *AWS_WorkSpacesWeb_IdentityProvider {
	t.IdentityProviderName = cfz.V(v)
	return t
}

// Set__IdentityProviderType updates property "IdentityProviderType".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__IdentityProviderType(v cfz.Expression[string]) *AWS_WorkSpacesWeb_IdentityProvider {
	t.IdentityProviderType = v
	return t
}

// SetV__IdentityProviderType updates property "IdentityProviderType".
func (t *AWS_WorkSpacesWeb_IdentityProvider) SetV__IdentityProviderType(v string) *AWS_WorkSpacesWeb_IdentityProvider {
	t.IdentityProviderType = cfz.V(v)
	return t
}

// Set__PortalArn updates property "PortalArn".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__PortalArn(v cfz.Expression[string]) *AWS_WorkSpacesWeb_IdentityProvider {
	t.PortalArn = v
	return t
}

// SetV__PortalArn updates property "PortalArn".
func (t *AWS_WorkSpacesWeb_IdentityProvider) SetV__PortalArn(v string) *AWS_WorkSpacesWeb_IdentityProvider {
	t.PortalArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_WorkSpacesWeb_IdentityProvider) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_WorkSpacesWeb_IdentityProvider {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_WorkSpacesWeb_IdentityProvider) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_WorkSpacesWeb_IdentityProvider {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_WorkSpacesWeb_IdentityProvider) SetSV__Tags(v ...cfz.Tag) *AWS_WorkSpacesWeb_IdentityProvider {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_WorkSpacesWeb_IdentityProvider) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__IdentityProviderArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IdentityProviderArn
func (t *AWS_WorkSpacesWeb_IdentityProvider) GetAtt__IdentityProviderArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpacesWeb_IdentityProvider__AttributesMap.IdentityProviderArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_WorkSpacesWeb_IdentityProvider) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IdentityProviderArn returns a conventionally configured output for an attribute of this resource.
// Attribute: IdentityProviderArn
func (t *AWS_WorkSpacesWeb_IdentityProvider) GetConventionalOutputAtt__IdentityProviderArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIdentityProviderArn", t.GetAtt__IdentityProviderArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_WorkSpacesWeb_IdentityProvider) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_WorkSpacesWeb_IdentityProvider

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_WorkSpacesWeb_IdentityProvider) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
