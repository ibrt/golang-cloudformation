// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_connect

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Connect_Instance)(nil)
	_ cfz.Resource                   = (*AWS_Connect_Instance)(nil)
)

const (
	// AWS_Connect_Instance__Type is the CloudFormation type for AWS::Connect::Instance.
	AWS_Connect_Instance__Type = "AWS::Connect::Instance"
)

var (
	// AWS_Connect_Instance__AttributesMap reports all the CloudFormation attributes for AWS::Connect::Instance.
	AWS_Connect_Instance__AttributesMap = struct {
		Arn            string
		CreatedTime    string
		Id             string
		InstanceStatus string
		ServiceRole    string
	}{
		Arn:            "Arn",
		CreatedTime:    "CreatedTime",
		Id:             "Id",
		InstanceStatus: "InstanceStatus",
		ServiceRole:    "ServiceRole",
	}

	// AWS_Connect_Instance__AttributesSlice reports all the CloudFormation attributes for AWS::Connect::Instance.
	AWS_Connect_Instance__AttributesSlice = []string{
		AWS_Connect_Instance__AttributesMap.Arn,
		AWS_Connect_Instance__AttributesMap.CreatedTime,
		AWS_Connect_Instance__AttributesMap.Id,
		AWS_Connect_Instance__AttributesMap.InstanceStatus,
		AWS_Connect_Instance__AttributesMap.ServiceRole,
	}
)

var (
	// AWS_Connect_Instance__PropertiesMap reports all the CloudFormation properties for AWS::Connect::Instance.
	AWS_Connect_Instance__PropertiesMap = struct {
		Attributes             string
		DirectoryId            string
		IdentityManagementType string
		InstanceAlias          string
		Tags                   string
	}{
		Attributes:             "Attributes",
		DirectoryId:            "DirectoryId",
		IdentityManagementType: "IdentityManagementType",
		InstanceAlias:          "InstanceAlias",
		Tags:                   "Tags",
	}

	// AWS_Connect_Instance__PropertiesSlice reports all the CloudFormation properties for AWS::Connect::Instance.
	AWS_Connect_Instance__PropertiesSlice = []string{
		AWS_Connect_Instance__PropertiesMap.Attributes,
		AWS_Connect_Instance__PropertiesMap.DirectoryId,
		AWS_Connect_Instance__PropertiesMap.IdentityManagementType,
		AWS_Connect_Instance__PropertiesMap.InstanceAlias,
		AWS_Connect_Instance__PropertiesMap.Tags,
	}
)

// AWS_Connect_Instance is a binding for AWS::Connect::Instance.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html
type AWS_Connect_Instance struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Attributes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-attributes
	Attributes cfz.Expression[AWS_Connect_Instance_Attributes] `json:"Attributes,omitempty"`

	// DirectoryId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-directoryid
	DirectoryId cfz.Expression[string] `json:"DirectoryId,omitempty"`

	// IdentityManagementType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-identitymanagementtype
	IdentityManagementType cfz.Expression[string] `json:"IdentityManagementType,omitempty"`

	// InstanceAlias is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-instancealias
	InstanceAlias cfz.Expression[string] `json:"InstanceAlias,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-instance.html#cfn-connect-instance-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Connect_Instance initializes a new *AWS_Connect_Instance.
func New__AWS_Connect_Instance(logicalName string) *AWS_Connect_Instance {
	return &AWS_Connect_Instance{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Connect_Instance) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Connect_Instance) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Connect_Instance) GetType() string {
	return AWS_Connect_Instance__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Connect_Instance) Set__LogicalName(v string) *AWS_Connect_Instance {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Connect_Instance) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Connect_Instance {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Connect_Instance) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Connect_Instance {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Connect_Instance) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Connect_Instance {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Connect_Instance) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Connect_Instance {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Connect_Instance) Set__RequestedOutputs(v []cfz.Output) *AWS_Connect_Instance {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Connect_Instance) Add__RequestedOutputs(v ...cfz.Output) *AWS_Connect_Instance {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Attributes updates property "Attributes".
func (t *AWS_Connect_Instance) Set__Attributes(v cfz.Expression[AWS_Connect_Instance_Attributes]) *AWS_Connect_Instance {
	t.Attributes = v
	return t
}

// SetV__Attributes updates property "Attributes".
func (t *AWS_Connect_Instance) SetV__Attributes(v AWS_Connect_Instance_Attributes) *AWS_Connect_Instance {
	t.Attributes = cfz.V(v)
	return t
}

// Set__DirectoryId updates property "DirectoryId".
func (t *AWS_Connect_Instance) Set__DirectoryId(v cfz.Expression[string]) *AWS_Connect_Instance {
	t.DirectoryId = v
	return t
}

// SetV__DirectoryId updates property "DirectoryId".
func (t *AWS_Connect_Instance) SetV__DirectoryId(v string) *AWS_Connect_Instance {
	t.DirectoryId = cfz.V(v)
	return t
}

// Set__IdentityManagementType updates property "IdentityManagementType".
func (t *AWS_Connect_Instance) Set__IdentityManagementType(v cfz.Expression[string]) *AWS_Connect_Instance {
	t.IdentityManagementType = v
	return t
}

// SetV__IdentityManagementType updates property "IdentityManagementType".
func (t *AWS_Connect_Instance) SetV__IdentityManagementType(v string) *AWS_Connect_Instance {
	t.IdentityManagementType = cfz.V(v)
	return t
}

// Set__InstanceAlias updates property "InstanceAlias".
func (t *AWS_Connect_Instance) Set__InstanceAlias(v cfz.Expression[string]) *AWS_Connect_Instance {
	t.InstanceAlias = v
	return t
}

// SetV__InstanceAlias updates property "InstanceAlias".
func (t *AWS_Connect_Instance) SetV__InstanceAlias(v string) *AWS_Connect_Instance {
	t.InstanceAlias = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Connect_Instance) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Connect_Instance {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Connect_Instance) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Connect_Instance {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Connect_Instance) SetSV__Tags(v ...cfz.Tag) *AWS_Connect_Instance {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Connect_Instance) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Connect_Instance) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_Instance__AttributesMap.Arn))
}

// GetAtt__CreatedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedTime
func (t *AWS_Connect_Instance) GetAtt__CreatedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_Instance__AttributesMap.CreatedTime))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Connect_Instance) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_Instance__AttributesMap.Id))
}

// GetAtt__InstanceStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: InstanceStatus
func (t *AWS_Connect_Instance) GetAtt__InstanceStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_Instance__AttributesMap.InstanceStatus))
}

// GetAtt__ServiceRole returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ServiceRole
func (t *AWS_Connect_Instance) GetAtt__ServiceRole() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_Instance__AttributesMap.ServiceRole))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Connect_Instance) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Connect_Instance) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedTime
func (t *AWS_Connect_Instance) GetConventionalOutputAtt__CreatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedTime", t.GetAtt__CreatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Connect_Instance) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__InstanceStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: InstanceStatus
func (t *AWS_Connect_Instance) GetConventionalOutputAtt__InstanceStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttInstanceStatus", t.GetAtt__InstanceStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ServiceRole returns a conventionally configured output for an attribute of this resource.
// Attribute: ServiceRole
func (t *AWS_Connect_Instance) GetConventionalOutputAtt__ServiceRole(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttServiceRole", t.GetAtt__ServiceRole())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Connect_Instance) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Connect_Instance

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Connect_Instance) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
