// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_connect

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Connect_Rule_SendNotificationAction__Type is the CloudFormation type for AWS::Connect::Rule.SendNotificationAction.
	AWS_Connect_Rule_SendNotificationAction__Type = "AWS::Connect::Rule.SendNotificationAction"
)

var (
	// AWS_Connect_Rule_SendNotificationAction__PropertiesMap reports all the CloudFormation properties for AWS::Connect::Rule.SendNotificationAction.
	AWS_Connect_Rule_SendNotificationAction__PropertiesMap = struct {
		Content        string
		ContentType    string
		DeliveryMethod string
		Recipient      string
		Subject        string
	}{
		Content:        "Content",
		ContentType:    "ContentType",
		DeliveryMethod: "DeliveryMethod",
		Recipient:      "Recipient",
		Subject:        "Subject",
	}

	// AWS_Connect_Rule_SendNotificationAction__PropertiesSlice reports all the CloudFormation properties for AWS::Connect::Rule.SendNotificationAction.
	AWS_Connect_Rule_SendNotificationAction__PropertiesSlice = []string{
		AWS_Connect_Rule_SendNotificationAction__PropertiesMap.Content,
		AWS_Connect_Rule_SendNotificationAction__PropertiesMap.ContentType,
		AWS_Connect_Rule_SendNotificationAction__PropertiesMap.DeliveryMethod,
		AWS_Connect_Rule_SendNotificationAction__PropertiesMap.Recipient,
		AWS_Connect_Rule_SendNotificationAction__PropertiesMap.Subject,
	}
)

// AWS_Connect_Rule_SendNotificationAction is a binding for AWS::Connect::Rule.SendNotificationAction.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-rule-sendnotificationaction.html
type AWS_Connect_Rule_SendNotificationAction struct {
	// Content is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-rule-sendnotificationaction.html#cfn-connect-rule-sendnotificationaction-content
	Content cfz.Expression[string] `json:"Content,omitempty"`

	// ContentType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-rule-sendnotificationaction.html#cfn-connect-rule-sendnotificationaction-contenttype
	ContentType cfz.Expression[string] `json:"ContentType,omitempty"`

	// DeliveryMethod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-rule-sendnotificationaction.html#cfn-connect-rule-sendnotificationaction-deliverymethod
	DeliveryMethod cfz.Expression[string] `json:"DeliveryMethod,omitempty"`

	// Recipient is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-rule-sendnotificationaction.html#cfn-connect-rule-sendnotificationaction-recipient
	Recipient cfz.Expression[AWS_Connect_Rule_NotificationRecipientType] `json:"Recipient,omitempty"`

	// Subject is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-rule-sendnotificationaction.html#cfn-connect-rule-sendnotificationaction-subject
	Subject cfz.Expression[string] `json:"Subject,omitempty"`
}

// New__AWS_Connect_Rule_SendNotificationAction initializes a new AWS_Connect_Rule_SendNotificationAction.
func New__AWS_Connect_Rule_SendNotificationAction() AWS_Connect_Rule_SendNotificationAction {
	return AWS_Connect_Rule_SendNotificationAction{}
}

// GetType returns the CloudFormation type.
func (AWS_Connect_Rule_SendNotificationAction) GetType() string {
	return AWS_Connect_Rule_SendNotificationAction__Type
}

// Set__Content updates property "Content".
func (t AWS_Connect_Rule_SendNotificationAction) Set__Content(v cfz.Expression[string]) AWS_Connect_Rule_SendNotificationAction {
	t.Content = v
	return t
}

// SetV__Content updates property "Content".
func (t AWS_Connect_Rule_SendNotificationAction) SetV__Content(v string) AWS_Connect_Rule_SendNotificationAction {
	t.Content = cfz.V(v)
	return t
}

// Set__ContentType updates property "ContentType".
func (t AWS_Connect_Rule_SendNotificationAction) Set__ContentType(v cfz.Expression[string]) AWS_Connect_Rule_SendNotificationAction {
	t.ContentType = v
	return t
}

// SetV__ContentType updates property "ContentType".
func (t AWS_Connect_Rule_SendNotificationAction) SetV__ContentType(v string) AWS_Connect_Rule_SendNotificationAction {
	t.ContentType = cfz.V(v)
	return t
}

// Set__DeliveryMethod updates property "DeliveryMethod".
func (t AWS_Connect_Rule_SendNotificationAction) Set__DeliveryMethod(v cfz.Expression[string]) AWS_Connect_Rule_SendNotificationAction {
	t.DeliveryMethod = v
	return t
}

// SetV__DeliveryMethod updates property "DeliveryMethod".
func (t AWS_Connect_Rule_SendNotificationAction) SetV__DeliveryMethod(v string) AWS_Connect_Rule_SendNotificationAction {
	t.DeliveryMethod = cfz.V(v)
	return t
}

// Set__Recipient updates property "Recipient".
func (t AWS_Connect_Rule_SendNotificationAction) Set__Recipient(v cfz.Expression[AWS_Connect_Rule_NotificationRecipientType]) AWS_Connect_Rule_SendNotificationAction {
	t.Recipient = v
	return t
}

// SetV__Recipient updates property "Recipient".
func (t AWS_Connect_Rule_SendNotificationAction) SetV__Recipient(v AWS_Connect_Rule_NotificationRecipientType) AWS_Connect_Rule_SendNotificationAction {
	t.Recipient = cfz.V(v)
	return t
}

// Set__Subject updates property "Subject".
func (t AWS_Connect_Rule_SendNotificationAction) Set__Subject(v cfz.Expression[string]) AWS_Connect_Rule_SendNotificationAction {
	t.Subject = v
	return t
}

// SetV__Subject updates property "Subject".
func (t AWS_Connect_Rule_SendNotificationAction) SetV__Subject(v string) AWS_Connect_Rule_SendNotificationAction {
	t.Subject = cfz.V(v)
	return t
}
