// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_connect

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Connect_QuickConnect)(nil)
	_ cfz.Resource                   = (*AWS_Connect_QuickConnect)(nil)
)

const (
	// AWS_Connect_QuickConnect__Type is the CloudFormation type for AWS::Connect::QuickConnect.
	AWS_Connect_QuickConnect__Type = "AWS::Connect::QuickConnect"
)

var (
	// AWS_Connect_QuickConnect__AttributesMap reports all the CloudFormation attributes for AWS::Connect::QuickConnect.
	AWS_Connect_QuickConnect__AttributesMap = struct {
		QuickConnectArn  string
		QuickConnectType string
	}{
		QuickConnectArn:  "QuickConnectArn",
		QuickConnectType: "QuickConnectType",
	}

	// AWS_Connect_QuickConnect__AttributesSlice reports all the CloudFormation attributes for AWS::Connect::QuickConnect.
	AWS_Connect_QuickConnect__AttributesSlice = []string{
		AWS_Connect_QuickConnect__AttributesMap.QuickConnectArn,
		AWS_Connect_QuickConnect__AttributesMap.QuickConnectType,
	}
)

var (
	// AWS_Connect_QuickConnect__PropertiesMap reports all the CloudFormation properties for AWS::Connect::QuickConnect.
	AWS_Connect_QuickConnect__PropertiesMap = struct {
		Description        string
		InstanceArn        string
		Name               string
		QuickConnectConfig string
		Tags               string
	}{
		Description:        "Description",
		InstanceArn:        "InstanceArn",
		Name:               "Name",
		QuickConnectConfig: "QuickConnectConfig",
		Tags:               "Tags",
	}

	// AWS_Connect_QuickConnect__PropertiesSlice reports all the CloudFormation properties for AWS::Connect::QuickConnect.
	AWS_Connect_QuickConnect__PropertiesSlice = []string{
		AWS_Connect_QuickConnect__PropertiesMap.Description,
		AWS_Connect_QuickConnect__PropertiesMap.InstanceArn,
		AWS_Connect_QuickConnect__PropertiesMap.Name,
		AWS_Connect_QuickConnect__PropertiesMap.QuickConnectConfig,
		AWS_Connect_QuickConnect__PropertiesMap.Tags,
	}
)

// AWS_Connect_QuickConnect is a binding for AWS::Connect::QuickConnect.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html
type AWS_Connect_QuickConnect struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// InstanceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-instancearn
	InstanceArn cfz.Expression[string] `json:"InstanceArn,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// QuickConnectConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-quickconnectconfig
	QuickConnectConfig cfz.Expression[AWS_Connect_QuickConnect_QuickConnectConfig] `json:"QuickConnectConfig,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-quickconnect.html#cfn-connect-quickconnect-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Connect_QuickConnect initializes a new *AWS_Connect_QuickConnect.
func New__AWS_Connect_QuickConnect(logicalName string) *AWS_Connect_QuickConnect {
	return &AWS_Connect_QuickConnect{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Connect_QuickConnect) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Connect_QuickConnect) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Connect_QuickConnect) GetType() string {
	return AWS_Connect_QuickConnect__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Connect_QuickConnect) Set__LogicalName(v string) *AWS_Connect_QuickConnect {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Connect_QuickConnect) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Connect_QuickConnect {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Connect_QuickConnect) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Connect_QuickConnect {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Connect_QuickConnect) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Connect_QuickConnect {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Connect_QuickConnect) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Connect_QuickConnect {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Connect_QuickConnect) Set__RequestedOutputs(v []cfz.Output) *AWS_Connect_QuickConnect {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Connect_QuickConnect) Add__RequestedOutputs(v ...cfz.Output) *AWS_Connect_QuickConnect {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Connect_QuickConnect) Set__Description(v cfz.Expression[string]) *AWS_Connect_QuickConnect {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Connect_QuickConnect) SetV__Description(v string) *AWS_Connect_QuickConnect {
	t.Description = cfz.V(v)
	return t
}

// Set__InstanceArn updates property "InstanceArn".
func (t *AWS_Connect_QuickConnect) Set__InstanceArn(v cfz.Expression[string]) *AWS_Connect_QuickConnect {
	t.InstanceArn = v
	return t
}

// SetV__InstanceArn updates property "InstanceArn".
func (t *AWS_Connect_QuickConnect) SetV__InstanceArn(v string) *AWS_Connect_QuickConnect {
	t.InstanceArn = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Connect_QuickConnect) Set__Name(v cfz.Expression[string]) *AWS_Connect_QuickConnect {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Connect_QuickConnect) SetV__Name(v string) *AWS_Connect_QuickConnect {
	t.Name = cfz.V(v)
	return t
}

// Set__QuickConnectConfig updates property "QuickConnectConfig".
func (t *AWS_Connect_QuickConnect) Set__QuickConnectConfig(v cfz.Expression[AWS_Connect_QuickConnect_QuickConnectConfig]) *AWS_Connect_QuickConnect {
	t.QuickConnectConfig = v
	return t
}

// SetV__QuickConnectConfig updates property "QuickConnectConfig".
func (t *AWS_Connect_QuickConnect) SetV__QuickConnectConfig(v AWS_Connect_QuickConnect_QuickConnectConfig) *AWS_Connect_QuickConnect {
	t.QuickConnectConfig = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Connect_QuickConnect) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Connect_QuickConnect {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Connect_QuickConnect) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Connect_QuickConnect {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Connect_QuickConnect) SetSV__Tags(v ...cfz.Tag) *AWS_Connect_QuickConnect {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Connect_QuickConnect) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__QuickConnectArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: QuickConnectArn
func (t *AWS_Connect_QuickConnect) GetAtt__QuickConnectArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_QuickConnect__AttributesMap.QuickConnectArn))
}

// GetAtt__QuickConnectType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: QuickConnectType
func (t *AWS_Connect_QuickConnect) GetAtt__QuickConnectType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_QuickConnect__AttributesMap.QuickConnectType))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Connect_QuickConnect) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__QuickConnectArn returns a conventionally configured output for an attribute of this resource.
// Attribute: QuickConnectArn
func (t *AWS_Connect_QuickConnect) GetConventionalOutputAtt__QuickConnectArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttQuickConnectArn", t.GetAtt__QuickConnectArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__QuickConnectType returns a conventionally configured output for an attribute of this resource.
// Attribute: QuickConnectType
func (t *AWS_Connect_QuickConnect) GetConventionalOutputAtt__QuickConnectType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttQuickConnectType", t.GetAtt__QuickConnectType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Connect_QuickConnect) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Connect_QuickConnect

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Connect_QuickConnect) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
