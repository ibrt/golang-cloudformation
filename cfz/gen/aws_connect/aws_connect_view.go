// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_connect

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Connect_View)(nil)
	_ cfz.Resource                   = (*AWS_Connect_View)(nil)
)

const (
	// AWS_Connect_View__Type is the CloudFormation type for AWS::Connect::View.
	AWS_Connect_View__Type = "AWS::Connect::View"
)

var (
	// AWS_Connect_View__AttributesMap reports all the CloudFormation attributes for AWS::Connect::View.
	AWS_Connect_View__AttributesMap = struct {
		ViewArn           string
		ViewContentSha256 string
		ViewId            string
	}{
		ViewArn:           "ViewArn",
		ViewContentSha256: "ViewContentSha256",
		ViewId:            "ViewId",
	}

	// AWS_Connect_View__AttributesSlice reports all the CloudFormation attributes for AWS::Connect::View.
	AWS_Connect_View__AttributesSlice = []string{
		AWS_Connect_View__AttributesMap.ViewArn,
		AWS_Connect_View__AttributesMap.ViewContentSha256,
		AWS_Connect_View__AttributesMap.ViewId,
	}
)

var (
	// AWS_Connect_View__PropertiesMap reports all the CloudFormation properties for AWS::Connect::View.
	AWS_Connect_View__PropertiesMap = struct {
		Actions     string
		Description string
		InstanceArn string
		Name        string
		Tags        string
		Template    string
	}{
		Actions:     "Actions",
		Description: "Description",
		InstanceArn: "InstanceArn",
		Name:        "Name",
		Tags:        "Tags",
		Template:    "Template",
	}

	// AWS_Connect_View__PropertiesSlice reports all the CloudFormation properties for AWS::Connect::View.
	AWS_Connect_View__PropertiesSlice = []string{
		AWS_Connect_View__PropertiesMap.Actions,
		AWS_Connect_View__PropertiesMap.Description,
		AWS_Connect_View__PropertiesMap.InstanceArn,
		AWS_Connect_View__PropertiesMap.Name,
		AWS_Connect_View__PropertiesMap.Tags,
		AWS_Connect_View__PropertiesMap.Template,
	}
)

// AWS_Connect_View is a binding for AWS::Connect::View.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html
type AWS_Connect_View struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Actions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-actions
	Actions cfz.ExpressionSlice[string] `json:"Actions,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// InstanceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-instancearn
	InstanceArn cfz.Expression[string] `json:"InstanceArn,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Template is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-view.html#cfn-connect-view-template
	Template cfz.Expression[json.RawMessage] `json:"Template,omitempty"`
}

// New__AWS_Connect_View initializes a new *AWS_Connect_View.
func New__AWS_Connect_View(logicalName string) *AWS_Connect_View {
	return &AWS_Connect_View{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Connect_View) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Connect_View) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Connect_View) GetType() string {
	return AWS_Connect_View__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Connect_View) Set__LogicalName(v string) *AWS_Connect_View {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Connect_View) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Connect_View {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Connect_View) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Connect_View {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Connect_View) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Connect_View {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Connect_View) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Connect_View {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Connect_View) Set__RequestedOutputs(v []cfz.Output) *AWS_Connect_View {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Connect_View) Add__RequestedOutputs(v ...cfz.Output) *AWS_Connect_View {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Actions updates property "Actions".
func (t *AWS_Connect_View) Set__Actions(v cfz.ExpressionSlice[string]) *AWS_Connect_View {
	t.Actions = v
	return t
}

// SetS__Actions updates property "Actions".
func (t *AWS_Connect_View) SetS__Actions(v ...cfz.Expression[string]) *AWS_Connect_View {
	t.Actions = cfz.S(v...)
	return t
}

// SetSV__Actions updates property "Actions".
func (t *AWS_Connect_View) SetSV__Actions(v ...string) *AWS_Connect_View {
	t.Actions = cfz.SV(v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Connect_View) Set__Description(v cfz.Expression[string]) *AWS_Connect_View {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Connect_View) SetV__Description(v string) *AWS_Connect_View {
	t.Description = cfz.V(v)
	return t
}

// Set__InstanceArn updates property "InstanceArn".
func (t *AWS_Connect_View) Set__InstanceArn(v cfz.Expression[string]) *AWS_Connect_View {
	t.InstanceArn = v
	return t
}

// SetV__InstanceArn updates property "InstanceArn".
func (t *AWS_Connect_View) SetV__InstanceArn(v string) *AWS_Connect_View {
	t.InstanceArn = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Connect_View) Set__Name(v cfz.Expression[string]) *AWS_Connect_View {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Connect_View) SetV__Name(v string) *AWS_Connect_View {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Connect_View) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Connect_View {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Connect_View) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Connect_View {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Connect_View) SetSV__Tags(v ...cfz.Tag) *AWS_Connect_View {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Template updates property "Template".
func (t *AWS_Connect_View) Set__Template(v cfz.Expression[json.RawMessage]) *AWS_Connect_View {
	t.Template = v
	return t
}

// SetV__Template updates property "Template".
func (t *AWS_Connect_View) SetV__Template(v json.RawMessage) *AWS_Connect_View {
	t.Template = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Connect_View) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ViewArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ViewArn
func (t *AWS_Connect_View) GetAtt__ViewArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_View__AttributesMap.ViewArn))
}

// GetAtt__ViewContentSha256 returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ViewContentSha256
func (t *AWS_Connect_View) GetAtt__ViewContentSha256() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_View__AttributesMap.ViewContentSha256))
}

// GetAtt__ViewId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ViewId
func (t *AWS_Connect_View) GetAtt__ViewId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_View__AttributesMap.ViewId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Connect_View) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ViewArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ViewArn
func (t *AWS_Connect_View) GetConventionalOutputAtt__ViewArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttViewArn", t.GetAtt__ViewArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ViewContentSha256 returns a conventionally configured output for an attribute of this resource.
// Attribute: ViewContentSha256
func (t *AWS_Connect_View) GetConventionalOutputAtt__ViewContentSha256(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttViewContentSha256", t.GetAtt__ViewContentSha256())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ViewId returns a conventionally configured output for an attribute of this resource.
// Attribute: ViewId
func (t *AWS_Connect_View) GetConventionalOutputAtt__ViewId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttViewId", t.GetAtt__ViewId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Connect_View) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Connect_View

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Connect_View) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
