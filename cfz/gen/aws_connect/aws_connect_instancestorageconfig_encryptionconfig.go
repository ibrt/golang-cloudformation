// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_connect

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Connect_InstanceStorageConfig_EncryptionConfig__Type is the CloudFormation type for AWS::Connect::InstanceStorageConfig.EncryptionConfig.
	AWS_Connect_InstanceStorageConfig_EncryptionConfig__Type = "AWS::Connect::InstanceStorageConfig.EncryptionConfig"
)

var (
	// AWS_Connect_InstanceStorageConfig_EncryptionConfig__PropertiesMap reports all the CloudFormation properties for AWS::Connect::InstanceStorageConfig.EncryptionConfig.
	AWS_Connect_InstanceStorageConfig_EncryptionConfig__PropertiesMap = struct {
		EncryptionType string
		KeyId          string
	}{
		EncryptionType: "EncryptionType",
		KeyId:          "KeyId",
	}

	// AWS_Connect_InstanceStorageConfig_EncryptionConfig__PropertiesSlice reports all the CloudFormation properties for AWS::Connect::InstanceStorageConfig.EncryptionConfig.
	AWS_Connect_InstanceStorageConfig_EncryptionConfig__PropertiesSlice = []string{
		AWS_Connect_InstanceStorageConfig_EncryptionConfig__PropertiesMap.EncryptionType,
		AWS_Connect_InstanceStorageConfig_EncryptionConfig__PropertiesMap.KeyId,
	}
)

// AWS_Connect_InstanceStorageConfig_EncryptionConfig is a binding for AWS::Connect::InstanceStorageConfig.EncryptionConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-instancestorageconfig-encryptionconfig.html
type AWS_Connect_InstanceStorageConfig_EncryptionConfig struct {
	// EncryptionType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-instancestorageconfig-encryptionconfig.html#cfn-connect-instancestorageconfig-encryptionconfig-encryptiontype
	EncryptionType cfz.Expression[string] `json:"EncryptionType,omitempty"`

	// KeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-connect-instancestorageconfig-encryptionconfig.html#cfn-connect-instancestorageconfig-encryptionconfig-keyid
	KeyId cfz.Expression[string] `json:"KeyId,omitempty"`
}

// New__AWS_Connect_InstanceStorageConfig_EncryptionConfig initializes a new AWS_Connect_InstanceStorageConfig_EncryptionConfig.
func New__AWS_Connect_InstanceStorageConfig_EncryptionConfig() AWS_Connect_InstanceStorageConfig_EncryptionConfig {
	return AWS_Connect_InstanceStorageConfig_EncryptionConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_Connect_InstanceStorageConfig_EncryptionConfig) GetType() string {
	return AWS_Connect_InstanceStorageConfig_EncryptionConfig__Type
}

// Set__EncryptionType updates property "EncryptionType".
func (t AWS_Connect_InstanceStorageConfig_EncryptionConfig) Set__EncryptionType(v cfz.Expression[string]) AWS_Connect_InstanceStorageConfig_EncryptionConfig {
	t.EncryptionType = v
	return t
}

// SetV__EncryptionType updates property "EncryptionType".
func (t AWS_Connect_InstanceStorageConfig_EncryptionConfig) SetV__EncryptionType(v string) AWS_Connect_InstanceStorageConfig_EncryptionConfig {
	t.EncryptionType = cfz.V(v)
	return t
}

// Set__KeyId updates property "KeyId".
func (t AWS_Connect_InstanceStorageConfig_EncryptionConfig) Set__KeyId(v cfz.Expression[string]) AWS_Connect_InstanceStorageConfig_EncryptionConfig {
	t.KeyId = v
	return t
}

// SetV__KeyId updates property "KeyId".
func (t AWS_Connect_InstanceStorageConfig_EncryptionConfig) SetV__KeyId(v string) AWS_Connect_InstanceStorageConfig_EncryptionConfig {
	t.KeyId = cfz.V(v)
	return t
}
