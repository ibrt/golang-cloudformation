// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_connect

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Connect_User)(nil)
	_ cfz.Resource                   = (*AWS_Connect_User)(nil)
)

const (
	// AWS_Connect_User__Type is the CloudFormation type for AWS::Connect::User.
	AWS_Connect_User__Type = "AWS::Connect::User"
)

var (
	// AWS_Connect_User__AttributesMap reports all the CloudFormation attributes for AWS::Connect::User.
	AWS_Connect_User__AttributesMap = struct {
		UserArn string
	}{
		UserArn: "UserArn",
	}

	// AWS_Connect_User__AttributesSlice reports all the CloudFormation attributes for AWS::Connect::User.
	AWS_Connect_User__AttributesSlice = []string{
		AWS_Connect_User__AttributesMap.UserArn,
	}
)

var (
	// AWS_Connect_User__PropertiesMap reports all the CloudFormation properties for AWS::Connect::User.
	AWS_Connect_User__PropertiesMap = struct {
		DirectoryUserId     string
		HierarchyGroupArn   string
		IdentityInfo        string
		InstanceArn         string
		Password            string
		PhoneConfig         string
		RoutingProfileArn   string
		SecurityProfileArns string
		Tags                string
		UserProficiencies   string
		Username            string
	}{
		DirectoryUserId:     "DirectoryUserId",
		HierarchyGroupArn:   "HierarchyGroupArn",
		IdentityInfo:        "IdentityInfo",
		InstanceArn:         "InstanceArn",
		Password:            "Password",
		PhoneConfig:         "PhoneConfig",
		RoutingProfileArn:   "RoutingProfileArn",
		SecurityProfileArns: "SecurityProfileArns",
		Tags:                "Tags",
		UserProficiencies:   "UserProficiencies",
		Username:            "Username",
	}

	// AWS_Connect_User__PropertiesSlice reports all the CloudFormation properties for AWS::Connect::User.
	AWS_Connect_User__PropertiesSlice = []string{
		AWS_Connect_User__PropertiesMap.DirectoryUserId,
		AWS_Connect_User__PropertiesMap.HierarchyGroupArn,
		AWS_Connect_User__PropertiesMap.IdentityInfo,
		AWS_Connect_User__PropertiesMap.InstanceArn,
		AWS_Connect_User__PropertiesMap.Password,
		AWS_Connect_User__PropertiesMap.PhoneConfig,
		AWS_Connect_User__PropertiesMap.RoutingProfileArn,
		AWS_Connect_User__PropertiesMap.SecurityProfileArns,
		AWS_Connect_User__PropertiesMap.Tags,
		AWS_Connect_User__PropertiesMap.UserProficiencies,
		AWS_Connect_User__PropertiesMap.Username,
	}
)

// AWS_Connect_User is a binding for AWS::Connect::User.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html
type AWS_Connect_User struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DirectoryUserId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-directoryuserid
	DirectoryUserId cfz.Expression[string] `json:"DirectoryUserId,omitempty"`

	// HierarchyGroupArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-hierarchygrouparn
	HierarchyGroupArn cfz.Expression[string] `json:"HierarchyGroupArn,omitempty"`

	// IdentityInfo is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-identityinfo
	IdentityInfo cfz.Expression[AWS_Connect_User_UserIdentityInfo] `json:"IdentityInfo,omitempty"`

	// InstanceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-instancearn
	InstanceArn cfz.Expression[string] `json:"InstanceArn,omitempty"`

	// Password is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-password
	Password cfz.Expression[string] `json:"Password,omitempty"`

	// PhoneConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-phoneconfig
	PhoneConfig cfz.Expression[AWS_Connect_User_UserPhoneConfig] `json:"PhoneConfig,omitempty"`

	// RoutingProfileArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-routingprofilearn
	RoutingProfileArn cfz.Expression[string] `json:"RoutingProfileArn,omitempty"`

	// SecurityProfileArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-securityprofilearns
	SecurityProfileArns cfz.ExpressionSlice[string] `json:"SecurityProfileArns,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UserProficiencies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-userproficiencies
	UserProficiencies cfz.ExpressionSlice[AWS_Connect_User_UserProficiency] `json:"UserProficiencies,omitempty"`

	// Username is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connect-user.html#cfn-connect-user-username
	Username cfz.Expression[string] `json:"Username,omitempty"`
}

// New__AWS_Connect_User initializes a new *AWS_Connect_User.
func New__AWS_Connect_User(logicalName string) *AWS_Connect_User {
	return &AWS_Connect_User{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Connect_User) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Connect_User) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Connect_User) GetType() string {
	return AWS_Connect_User__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Connect_User) Set__LogicalName(v string) *AWS_Connect_User {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Connect_User) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Connect_User {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Connect_User) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Connect_User {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Connect_User) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Connect_User {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Connect_User) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Connect_User {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Connect_User) Set__RequestedOutputs(v []cfz.Output) *AWS_Connect_User {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Connect_User) Add__RequestedOutputs(v ...cfz.Output) *AWS_Connect_User {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DirectoryUserId updates property "DirectoryUserId".
func (t *AWS_Connect_User) Set__DirectoryUserId(v cfz.Expression[string]) *AWS_Connect_User {
	t.DirectoryUserId = v
	return t
}

// SetV__DirectoryUserId updates property "DirectoryUserId".
func (t *AWS_Connect_User) SetV__DirectoryUserId(v string) *AWS_Connect_User {
	t.DirectoryUserId = cfz.V(v)
	return t
}

// Set__HierarchyGroupArn updates property "HierarchyGroupArn".
func (t *AWS_Connect_User) Set__HierarchyGroupArn(v cfz.Expression[string]) *AWS_Connect_User {
	t.HierarchyGroupArn = v
	return t
}

// SetV__HierarchyGroupArn updates property "HierarchyGroupArn".
func (t *AWS_Connect_User) SetV__HierarchyGroupArn(v string) *AWS_Connect_User {
	t.HierarchyGroupArn = cfz.V(v)
	return t
}

// Set__IdentityInfo updates property "IdentityInfo".
func (t *AWS_Connect_User) Set__IdentityInfo(v cfz.Expression[AWS_Connect_User_UserIdentityInfo]) *AWS_Connect_User {
	t.IdentityInfo = v
	return t
}

// SetV__IdentityInfo updates property "IdentityInfo".
func (t *AWS_Connect_User) SetV__IdentityInfo(v AWS_Connect_User_UserIdentityInfo) *AWS_Connect_User {
	t.IdentityInfo = cfz.V(v)
	return t
}

// Set__InstanceArn updates property "InstanceArn".
func (t *AWS_Connect_User) Set__InstanceArn(v cfz.Expression[string]) *AWS_Connect_User {
	t.InstanceArn = v
	return t
}

// SetV__InstanceArn updates property "InstanceArn".
func (t *AWS_Connect_User) SetV__InstanceArn(v string) *AWS_Connect_User {
	t.InstanceArn = cfz.V(v)
	return t
}

// Set__Password updates property "Password".
func (t *AWS_Connect_User) Set__Password(v cfz.Expression[string]) *AWS_Connect_User {
	t.Password = v
	return t
}

// SetV__Password updates property "Password".
func (t *AWS_Connect_User) SetV__Password(v string) *AWS_Connect_User {
	t.Password = cfz.V(v)
	return t
}

// Set__PhoneConfig updates property "PhoneConfig".
func (t *AWS_Connect_User) Set__PhoneConfig(v cfz.Expression[AWS_Connect_User_UserPhoneConfig]) *AWS_Connect_User {
	t.PhoneConfig = v
	return t
}

// SetV__PhoneConfig updates property "PhoneConfig".
func (t *AWS_Connect_User) SetV__PhoneConfig(v AWS_Connect_User_UserPhoneConfig) *AWS_Connect_User {
	t.PhoneConfig = cfz.V(v)
	return t
}

// Set__RoutingProfileArn updates property "RoutingProfileArn".
func (t *AWS_Connect_User) Set__RoutingProfileArn(v cfz.Expression[string]) *AWS_Connect_User {
	t.RoutingProfileArn = v
	return t
}

// SetV__RoutingProfileArn updates property "RoutingProfileArn".
func (t *AWS_Connect_User) SetV__RoutingProfileArn(v string) *AWS_Connect_User {
	t.RoutingProfileArn = cfz.V(v)
	return t
}

// Set__SecurityProfileArns updates property "SecurityProfileArns".
func (t *AWS_Connect_User) Set__SecurityProfileArns(v cfz.ExpressionSlice[string]) *AWS_Connect_User {
	t.SecurityProfileArns = v
	return t
}

// SetS__SecurityProfileArns updates property "SecurityProfileArns".
func (t *AWS_Connect_User) SetS__SecurityProfileArns(v ...cfz.Expression[string]) *AWS_Connect_User {
	t.SecurityProfileArns = cfz.S(v...)
	return t
}

// SetSV__SecurityProfileArns updates property "SecurityProfileArns".
func (t *AWS_Connect_User) SetSV__SecurityProfileArns(v ...string) *AWS_Connect_User {
	t.SecurityProfileArns = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Connect_User) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Connect_User {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Connect_User) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Connect_User {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Connect_User) SetSV__Tags(v ...cfz.Tag) *AWS_Connect_User {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UserProficiencies updates property "UserProficiencies".
func (t *AWS_Connect_User) Set__UserProficiencies(v cfz.ExpressionSlice[AWS_Connect_User_UserProficiency]) *AWS_Connect_User {
	t.UserProficiencies = v
	return t
}

// SetS__UserProficiencies updates property "UserProficiencies".
func (t *AWS_Connect_User) SetS__UserProficiencies(v ...cfz.Expression[AWS_Connect_User_UserProficiency]) *AWS_Connect_User {
	t.UserProficiencies = cfz.S(v...)
	return t
}

// SetSV__UserProficiencies updates property "UserProficiencies".
func (t *AWS_Connect_User) SetSV__UserProficiencies(v ...AWS_Connect_User_UserProficiency) *AWS_Connect_User {
	t.UserProficiencies = cfz.SV(v...)
	return t
}

// Set__Username updates property "Username".
func (t *AWS_Connect_User) Set__Username(v cfz.Expression[string]) *AWS_Connect_User {
	t.Username = v
	return t
}

// SetV__Username updates property "Username".
func (t *AWS_Connect_User) SetV__Username(v string) *AWS_Connect_User {
	t.Username = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Connect_User) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__UserArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UserArn
func (t *AWS_Connect_User) GetAtt__UserArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Connect_User__AttributesMap.UserArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Connect_User) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UserArn returns a conventionally configured output for an attribute of this resource.
// Attribute: UserArn
func (t *AWS_Connect_User) GetConventionalOutputAtt__UserArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUserArn", t.GetAtt__UserArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Connect_User) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Connect_User

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Connect_User) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
