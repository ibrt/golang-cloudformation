// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_memorydb

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_MemoryDB_MultiRegionCluster)(nil)
	_ cfz.Resource                   = (*AWS_MemoryDB_MultiRegionCluster)(nil)
)

const (
	// AWS_MemoryDB_MultiRegionCluster__Type is the CloudFormation type for AWS::MemoryDB::MultiRegionCluster.
	AWS_MemoryDB_MultiRegionCluster__Type = "AWS::MemoryDB::MultiRegionCluster"
)

var (
	// AWS_MemoryDB_MultiRegionCluster__AttributesMap reports all the CloudFormation attributes for AWS::MemoryDB::MultiRegionCluster.
	AWS_MemoryDB_MultiRegionCluster__AttributesMap = struct {
		ARN                    string
		MultiRegionClusterName string
		Status                 string
	}{
		ARN:                    "ARN",
		MultiRegionClusterName: "MultiRegionClusterName",
		Status:                 "Status",
	}

	// AWS_MemoryDB_MultiRegionCluster__AttributesSlice reports all the CloudFormation attributes for AWS::MemoryDB::MultiRegionCluster.
	AWS_MemoryDB_MultiRegionCluster__AttributesSlice = []string{
		AWS_MemoryDB_MultiRegionCluster__AttributesMap.ARN,
		AWS_MemoryDB_MultiRegionCluster__AttributesMap.MultiRegionClusterName,
		AWS_MemoryDB_MultiRegionCluster__AttributesMap.Status,
	}
)

var (
	// AWS_MemoryDB_MultiRegionCluster__PropertiesMap reports all the CloudFormation properties for AWS::MemoryDB::MultiRegionCluster.
	AWS_MemoryDB_MultiRegionCluster__PropertiesMap = struct {
		Description                   string
		Engine                        string
		EngineVersion                 string
		MultiRegionClusterNameSuffix  string
		MultiRegionParameterGroupName string
		NodeType                      string
		NumShards                     string
		TLSEnabled                    string
		Tags                          string
		UpdateStrategy                string
	}{
		Description:                   "Description",
		Engine:                        "Engine",
		EngineVersion:                 "EngineVersion",
		MultiRegionClusterNameSuffix:  "MultiRegionClusterNameSuffix",
		MultiRegionParameterGroupName: "MultiRegionParameterGroupName",
		NodeType:                      "NodeType",
		NumShards:                     "NumShards",
		TLSEnabled:                    "TLSEnabled",
		Tags:                          "Tags",
		UpdateStrategy:                "UpdateStrategy",
	}

	// AWS_MemoryDB_MultiRegionCluster__PropertiesSlice reports all the CloudFormation properties for AWS::MemoryDB::MultiRegionCluster.
	AWS_MemoryDB_MultiRegionCluster__PropertiesSlice = []string{
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.Description,
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.Engine,
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.EngineVersion,
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.MultiRegionClusterNameSuffix,
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.MultiRegionParameterGroupName,
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.NodeType,
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.NumShards,
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.TLSEnabled,
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.Tags,
		AWS_MemoryDB_MultiRegionCluster__PropertiesMap.UpdateStrategy,
	}
)

// AWS_MemoryDB_MultiRegionCluster is a binding for AWS::MemoryDB::MultiRegionCluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html
type AWS_MemoryDB_MultiRegionCluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Engine is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-engine
	Engine cfz.Expression[string] `json:"Engine,omitempty"`

	// EngineVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-engineversion
	EngineVersion cfz.Expression[string] `json:"EngineVersion,omitempty"`

	// MultiRegionClusterNameSuffix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-multiregionclusternamesuffix
	MultiRegionClusterNameSuffix cfz.Expression[string] `json:"MultiRegionClusterNameSuffix,omitempty"`

	// MultiRegionParameterGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-multiregionparametergroupname
	MultiRegionParameterGroupName cfz.Expression[string] `json:"MultiRegionParameterGroupName,omitempty"`

	// NodeType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-nodetype
	NodeType cfz.Expression[string] `json:"NodeType,omitempty"`

	// NumShards is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-numshards
	NumShards cfz.Expression[int32] `json:"NumShards,omitempty"`

	// TLSEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-tlsenabled
	TLSEnabled cfz.Expression[bool] `json:"TLSEnabled,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UpdateStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-memorydb-multiregioncluster.html#cfn-memorydb-multiregioncluster-updatestrategy
	UpdateStrategy cfz.Expression[string] `json:"UpdateStrategy,omitempty"`
}

// New__AWS_MemoryDB_MultiRegionCluster initializes a new *AWS_MemoryDB_MultiRegionCluster.
func New__AWS_MemoryDB_MultiRegionCluster(logicalName string) *AWS_MemoryDB_MultiRegionCluster {
	return &AWS_MemoryDB_MultiRegionCluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_MemoryDB_MultiRegionCluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_MemoryDB_MultiRegionCluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_MemoryDB_MultiRegionCluster) GetType() string {
	return AWS_MemoryDB_MultiRegionCluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__LogicalName(v string) *AWS_MemoryDB_MultiRegionCluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_MemoryDB_MultiRegionCluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_MemoryDB_MultiRegionCluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_MemoryDB_MultiRegionCluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_MemoryDB_MultiRegionCluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_MemoryDB_MultiRegionCluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__RequestedOutputs(v []cfz.Output) *AWS_MemoryDB_MultiRegionCluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_MemoryDB_MultiRegionCluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_MemoryDB_MultiRegionCluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__Description(v cfz.Expression[string]) *AWS_MemoryDB_MultiRegionCluster {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_MemoryDB_MultiRegionCluster) SetV__Description(v string) *AWS_MemoryDB_MultiRegionCluster {
	t.Description = cfz.V(v)
	return t
}

// Set__Engine updates property "Engine".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__Engine(v cfz.Expression[string]) *AWS_MemoryDB_MultiRegionCluster {
	t.Engine = v
	return t
}

// SetV__Engine updates property "Engine".
func (t *AWS_MemoryDB_MultiRegionCluster) SetV__Engine(v string) *AWS_MemoryDB_MultiRegionCluster {
	t.Engine = cfz.V(v)
	return t
}

// Set__EngineVersion updates property "EngineVersion".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__EngineVersion(v cfz.Expression[string]) *AWS_MemoryDB_MultiRegionCluster {
	t.EngineVersion = v
	return t
}

// SetV__EngineVersion updates property "EngineVersion".
func (t *AWS_MemoryDB_MultiRegionCluster) SetV__EngineVersion(v string) *AWS_MemoryDB_MultiRegionCluster {
	t.EngineVersion = cfz.V(v)
	return t
}

// Set__MultiRegionClusterNameSuffix updates property "MultiRegionClusterNameSuffix".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__MultiRegionClusterNameSuffix(v cfz.Expression[string]) *AWS_MemoryDB_MultiRegionCluster {
	t.MultiRegionClusterNameSuffix = v
	return t
}

// SetV__MultiRegionClusterNameSuffix updates property "MultiRegionClusterNameSuffix".
func (t *AWS_MemoryDB_MultiRegionCluster) SetV__MultiRegionClusterNameSuffix(v string) *AWS_MemoryDB_MultiRegionCluster {
	t.MultiRegionClusterNameSuffix = cfz.V(v)
	return t
}

// Set__MultiRegionParameterGroupName updates property "MultiRegionParameterGroupName".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__MultiRegionParameterGroupName(v cfz.Expression[string]) *AWS_MemoryDB_MultiRegionCluster {
	t.MultiRegionParameterGroupName = v
	return t
}

// SetV__MultiRegionParameterGroupName updates property "MultiRegionParameterGroupName".
func (t *AWS_MemoryDB_MultiRegionCluster) SetV__MultiRegionParameterGroupName(v string) *AWS_MemoryDB_MultiRegionCluster {
	t.MultiRegionParameterGroupName = cfz.V(v)
	return t
}

// Set__NodeType updates property "NodeType".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__NodeType(v cfz.Expression[string]) *AWS_MemoryDB_MultiRegionCluster {
	t.NodeType = v
	return t
}

// SetV__NodeType updates property "NodeType".
func (t *AWS_MemoryDB_MultiRegionCluster) SetV__NodeType(v string) *AWS_MemoryDB_MultiRegionCluster {
	t.NodeType = cfz.V(v)
	return t
}

// Set__NumShards updates property "NumShards".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__NumShards(v cfz.Expression[int32]) *AWS_MemoryDB_MultiRegionCluster {
	t.NumShards = v
	return t
}

// SetV__NumShards updates property "NumShards".
func (t *AWS_MemoryDB_MultiRegionCluster) SetV__NumShards(v int32) *AWS_MemoryDB_MultiRegionCluster {
	t.NumShards = cfz.V(v)
	return t
}

// Set__TLSEnabled updates property "TLSEnabled".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__TLSEnabled(v cfz.Expression[bool]) *AWS_MemoryDB_MultiRegionCluster {
	t.TLSEnabled = v
	return t
}

// SetV__TLSEnabled updates property "TLSEnabled".
func (t *AWS_MemoryDB_MultiRegionCluster) SetV__TLSEnabled(v bool) *AWS_MemoryDB_MultiRegionCluster {
	t.TLSEnabled = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_MemoryDB_MultiRegionCluster {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_MemoryDB_MultiRegionCluster) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_MemoryDB_MultiRegionCluster {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_MemoryDB_MultiRegionCluster) SetSV__Tags(v ...cfz.Tag) *AWS_MemoryDB_MultiRegionCluster {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UpdateStrategy updates property "UpdateStrategy".
func (t *AWS_MemoryDB_MultiRegionCluster) Set__UpdateStrategy(v cfz.Expression[string]) *AWS_MemoryDB_MultiRegionCluster {
	t.UpdateStrategy = v
	return t
}

// SetV__UpdateStrategy updates property "UpdateStrategy".
func (t *AWS_MemoryDB_MultiRegionCluster) SetV__UpdateStrategy(v string) *AWS_MemoryDB_MultiRegionCluster {
	t.UpdateStrategy = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_MemoryDB_MultiRegionCluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ARN returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ARN
func (t *AWS_MemoryDB_MultiRegionCluster) GetAtt__ARN() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MemoryDB_MultiRegionCluster__AttributesMap.ARN))
}

// GetAtt__MultiRegionClusterName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MultiRegionClusterName
func (t *AWS_MemoryDB_MultiRegionCluster) GetAtt__MultiRegionClusterName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MemoryDB_MultiRegionCluster__AttributesMap.MultiRegionClusterName))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_MemoryDB_MultiRegionCluster) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MemoryDB_MultiRegionCluster__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_MemoryDB_MultiRegionCluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ARN returns a conventionally configured output for an attribute of this resource.
// Attribute: ARN
func (t *AWS_MemoryDB_MultiRegionCluster) GetConventionalOutputAtt__ARN(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttARN", t.GetAtt__ARN())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MultiRegionClusterName returns a conventionally configured output for an attribute of this resource.
// Attribute: MultiRegionClusterName
func (t *AWS_MemoryDB_MultiRegionCluster) GetConventionalOutputAtt__MultiRegionClusterName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMultiRegionClusterName", t.GetAtt__MultiRegionClusterName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_MemoryDB_MultiRegionCluster) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_MemoryDB_MultiRegionCluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_MemoryDB_MultiRegionCluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_MemoryDB_MultiRegionCluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
