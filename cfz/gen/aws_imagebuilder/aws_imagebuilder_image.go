// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_imagebuilder

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ImageBuilder_Image)(nil)
	_ cfz.Resource                   = (*AWS_ImageBuilder_Image)(nil)
)

const (
	// AWS_ImageBuilder_Image__Type is the CloudFormation type for AWS::ImageBuilder::Image.
	AWS_ImageBuilder_Image__Type = "AWS::ImageBuilder::Image"
)

var (
	// AWS_ImageBuilder_Image__AttributesMap reports all the CloudFormation attributes for AWS::ImageBuilder::Image.
	AWS_ImageBuilder_Image__AttributesMap = struct {
		Arn      string
		ImageId  string
		ImageUri string
		Name     string
	}{
		Arn:      "Arn",
		ImageId:  "ImageId",
		ImageUri: "ImageUri",
		Name:     "Name",
	}

	// AWS_ImageBuilder_Image__AttributesSlice reports all the CloudFormation attributes for AWS::ImageBuilder::Image.
	AWS_ImageBuilder_Image__AttributesSlice = []string{
		AWS_ImageBuilder_Image__AttributesMap.Arn,
		AWS_ImageBuilder_Image__AttributesMap.ImageId,
		AWS_ImageBuilder_Image__AttributesMap.ImageUri,
		AWS_ImageBuilder_Image__AttributesMap.Name,
	}
)

var (
	// AWS_ImageBuilder_Image__PropertiesMap reports all the CloudFormation properties for AWS::ImageBuilder::Image.
	AWS_ImageBuilder_Image__PropertiesMap = struct {
		ContainerRecipeArn             string
		DistributionConfigurationArn   string
		EnhancedImageMetadataEnabled   string
		ExecutionRole                  string
		ImageRecipeArn                 string
		ImageScanningConfiguration     string
		ImageTestsConfiguration        string
		InfrastructureConfigurationArn string
		Tags                           string
		Workflows                      string
	}{
		ContainerRecipeArn:             "ContainerRecipeArn",
		DistributionConfigurationArn:   "DistributionConfigurationArn",
		EnhancedImageMetadataEnabled:   "EnhancedImageMetadataEnabled",
		ExecutionRole:                  "ExecutionRole",
		ImageRecipeArn:                 "ImageRecipeArn",
		ImageScanningConfiguration:     "ImageScanningConfiguration",
		ImageTestsConfiguration:        "ImageTestsConfiguration",
		InfrastructureConfigurationArn: "InfrastructureConfigurationArn",
		Tags:                           "Tags",
		Workflows:                      "Workflows",
	}

	// AWS_ImageBuilder_Image__PropertiesSlice reports all the CloudFormation properties for AWS::ImageBuilder::Image.
	AWS_ImageBuilder_Image__PropertiesSlice = []string{
		AWS_ImageBuilder_Image__PropertiesMap.ContainerRecipeArn,
		AWS_ImageBuilder_Image__PropertiesMap.DistributionConfigurationArn,
		AWS_ImageBuilder_Image__PropertiesMap.EnhancedImageMetadataEnabled,
		AWS_ImageBuilder_Image__PropertiesMap.ExecutionRole,
		AWS_ImageBuilder_Image__PropertiesMap.ImageRecipeArn,
		AWS_ImageBuilder_Image__PropertiesMap.ImageScanningConfiguration,
		AWS_ImageBuilder_Image__PropertiesMap.ImageTestsConfiguration,
		AWS_ImageBuilder_Image__PropertiesMap.InfrastructureConfigurationArn,
		AWS_ImageBuilder_Image__PropertiesMap.Tags,
		AWS_ImageBuilder_Image__PropertiesMap.Workflows,
	}
)

// AWS_ImageBuilder_Image is a binding for AWS::ImageBuilder::Image.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html
type AWS_ImageBuilder_Image struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ContainerRecipeArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-containerrecipearn
	ContainerRecipeArn cfz.Expression[string] `json:"ContainerRecipeArn,omitempty"`

	// DistributionConfigurationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-distributionconfigurationarn
	DistributionConfigurationArn cfz.Expression[string] `json:"DistributionConfigurationArn,omitempty"`

	// EnhancedImageMetadataEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-enhancedimagemetadataenabled
	EnhancedImageMetadataEnabled cfz.Expression[bool] `json:"EnhancedImageMetadataEnabled,omitempty"`

	// ExecutionRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-executionrole
	ExecutionRole cfz.Expression[string] `json:"ExecutionRole,omitempty"`

	// ImageRecipeArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-imagerecipearn
	ImageRecipeArn cfz.Expression[string] `json:"ImageRecipeArn,omitempty"`

	// ImageScanningConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-imagescanningconfiguration
	ImageScanningConfiguration cfz.Expression[AWS_ImageBuilder_Image_ImageScanningConfiguration] `json:"ImageScanningConfiguration,omitempty"`

	// ImageTestsConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-imagetestsconfiguration
	ImageTestsConfiguration cfz.Expression[AWS_ImageBuilder_Image_ImageTestsConfiguration] `json:"ImageTestsConfiguration,omitempty"`

	// InfrastructureConfigurationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-infrastructureconfigurationarn
	InfrastructureConfigurationArn cfz.Expression[string] `json:"InfrastructureConfigurationArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// Workflows is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-image.html#cfn-imagebuilder-image-workflows
	Workflows cfz.ExpressionSlice[AWS_ImageBuilder_Image_WorkflowConfiguration] `json:"Workflows,omitempty"`
}

// New__AWS_ImageBuilder_Image initializes a new *AWS_ImageBuilder_Image.
func New__AWS_ImageBuilder_Image(logicalName string) *AWS_ImageBuilder_Image {
	return &AWS_ImageBuilder_Image{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ImageBuilder_Image) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ImageBuilder_Image) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ImageBuilder_Image) GetType() string {
	return AWS_ImageBuilder_Image__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ImageBuilder_Image) Set__LogicalName(v string) *AWS_ImageBuilder_Image {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ImageBuilder_Image) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ImageBuilder_Image {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ImageBuilder_Image) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ImageBuilder_Image {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ImageBuilder_Image) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ImageBuilder_Image {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ImageBuilder_Image) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ImageBuilder_Image {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ImageBuilder_Image) Set__RequestedOutputs(v []cfz.Output) *AWS_ImageBuilder_Image {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ImageBuilder_Image) Add__RequestedOutputs(v ...cfz.Output) *AWS_ImageBuilder_Image {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ContainerRecipeArn updates property "ContainerRecipeArn".
func (t *AWS_ImageBuilder_Image) Set__ContainerRecipeArn(v cfz.Expression[string]) *AWS_ImageBuilder_Image {
	t.ContainerRecipeArn = v
	return t
}

// SetV__ContainerRecipeArn updates property "ContainerRecipeArn".
func (t *AWS_ImageBuilder_Image) SetV__ContainerRecipeArn(v string) *AWS_ImageBuilder_Image {
	t.ContainerRecipeArn = cfz.V(v)
	return t
}

// Set__DistributionConfigurationArn updates property "DistributionConfigurationArn".
func (t *AWS_ImageBuilder_Image) Set__DistributionConfigurationArn(v cfz.Expression[string]) *AWS_ImageBuilder_Image {
	t.DistributionConfigurationArn = v
	return t
}

// SetV__DistributionConfigurationArn updates property "DistributionConfigurationArn".
func (t *AWS_ImageBuilder_Image) SetV__DistributionConfigurationArn(v string) *AWS_ImageBuilder_Image {
	t.DistributionConfigurationArn = cfz.V(v)
	return t
}

// Set__EnhancedImageMetadataEnabled updates property "EnhancedImageMetadataEnabled".
func (t *AWS_ImageBuilder_Image) Set__EnhancedImageMetadataEnabled(v cfz.Expression[bool]) *AWS_ImageBuilder_Image {
	t.EnhancedImageMetadataEnabled = v
	return t
}

// SetV__EnhancedImageMetadataEnabled updates property "EnhancedImageMetadataEnabled".
func (t *AWS_ImageBuilder_Image) SetV__EnhancedImageMetadataEnabled(v bool) *AWS_ImageBuilder_Image {
	t.EnhancedImageMetadataEnabled = cfz.V(v)
	return t
}

// Set__ExecutionRole updates property "ExecutionRole".
func (t *AWS_ImageBuilder_Image) Set__ExecutionRole(v cfz.Expression[string]) *AWS_ImageBuilder_Image {
	t.ExecutionRole = v
	return t
}

// SetV__ExecutionRole updates property "ExecutionRole".
func (t *AWS_ImageBuilder_Image) SetV__ExecutionRole(v string) *AWS_ImageBuilder_Image {
	t.ExecutionRole = cfz.V(v)
	return t
}

// Set__ImageRecipeArn updates property "ImageRecipeArn".
func (t *AWS_ImageBuilder_Image) Set__ImageRecipeArn(v cfz.Expression[string]) *AWS_ImageBuilder_Image {
	t.ImageRecipeArn = v
	return t
}

// SetV__ImageRecipeArn updates property "ImageRecipeArn".
func (t *AWS_ImageBuilder_Image) SetV__ImageRecipeArn(v string) *AWS_ImageBuilder_Image {
	t.ImageRecipeArn = cfz.V(v)
	return t
}

// Set__ImageScanningConfiguration updates property "ImageScanningConfiguration".
func (t *AWS_ImageBuilder_Image) Set__ImageScanningConfiguration(v cfz.Expression[AWS_ImageBuilder_Image_ImageScanningConfiguration]) *AWS_ImageBuilder_Image {
	t.ImageScanningConfiguration = v
	return t
}

// SetV__ImageScanningConfiguration updates property "ImageScanningConfiguration".
func (t *AWS_ImageBuilder_Image) SetV__ImageScanningConfiguration(v AWS_ImageBuilder_Image_ImageScanningConfiguration) *AWS_ImageBuilder_Image {
	t.ImageScanningConfiguration = cfz.V(v)
	return t
}

// Set__ImageTestsConfiguration updates property "ImageTestsConfiguration".
func (t *AWS_ImageBuilder_Image) Set__ImageTestsConfiguration(v cfz.Expression[AWS_ImageBuilder_Image_ImageTestsConfiguration]) *AWS_ImageBuilder_Image {
	t.ImageTestsConfiguration = v
	return t
}

// SetV__ImageTestsConfiguration updates property "ImageTestsConfiguration".
func (t *AWS_ImageBuilder_Image) SetV__ImageTestsConfiguration(v AWS_ImageBuilder_Image_ImageTestsConfiguration) *AWS_ImageBuilder_Image {
	t.ImageTestsConfiguration = cfz.V(v)
	return t
}

// Set__InfrastructureConfigurationArn updates property "InfrastructureConfigurationArn".
func (t *AWS_ImageBuilder_Image) Set__InfrastructureConfigurationArn(v cfz.Expression[string]) *AWS_ImageBuilder_Image {
	t.InfrastructureConfigurationArn = v
	return t
}

// SetV__InfrastructureConfigurationArn updates property "InfrastructureConfigurationArn".
func (t *AWS_ImageBuilder_Image) SetV__InfrastructureConfigurationArn(v string) *AWS_ImageBuilder_Image {
	t.InfrastructureConfigurationArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ImageBuilder_Image) Set__Tags(v cfz.ExpressionMap[string]) *AWS_ImageBuilder_Image {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_ImageBuilder_Image) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_ImageBuilder_Image {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_ImageBuilder_Image) SetMV__Tags(v ...map[string]string) *AWS_ImageBuilder_Image {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__Workflows updates property "Workflows".
func (t *AWS_ImageBuilder_Image) Set__Workflows(v cfz.ExpressionSlice[AWS_ImageBuilder_Image_WorkflowConfiguration]) *AWS_ImageBuilder_Image {
	t.Workflows = v
	return t
}

// SetS__Workflows updates property "Workflows".
func (t *AWS_ImageBuilder_Image) SetS__Workflows(v ...cfz.Expression[AWS_ImageBuilder_Image_WorkflowConfiguration]) *AWS_ImageBuilder_Image {
	t.Workflows = cfz.S(v...)
	return t
}

// SetSV__Workflows updates property "Workflows".
func (t *AWS_ImageBuilder_Image) SetSV__Workflows(v ...AWS_ImageBuilder_Image_WorkflowConfiguration) *AWS_ImageBuilder_Image {
	t.Workflows = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ImageBuilder_Image) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_ImageBuilder_Image) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ImageBuilder_Image__AttributesMap.Arn))
}

// GetAtt__ImageId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ImageId
func (t *AWS_ImageBuilder_Image) GetAtt__ImageId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ImageBuilder_Image__AttributesMap.ImageId))
}

// GetAtt__ImageUri returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ImageUri
func (t *AWS_ImageBuilder_Image) GetAtt__ImageUri() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ImageBuilder_Image__AttributesMap.ImageUri))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_ImageBuilder_Image) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ImageBuilder_Image__AttributesMap.Name))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ImageBuilder_Image) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_ImageBuilder_Image) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ImageId returns a conventionally configured output for an attribute of this resource.
// Attribute: ImageId
func (t *AWS_ImageBuilder_Image) GetConventionalOutputAtt__ImageId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttImageId", t.GetAtt__ImageId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ImageUri returns a conventionally configured output for an attribute of this resource.
// Attribute: ImageUri
func (t *AWS_ImageBuilder_Image) GetConventionalOutputAtt__ImageUri(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttImageUri", t.GetAtt__ImageUri())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_ImageBuilder_Image) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ImageBuilder_Image) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ImageBuilder_Image

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ImageBuilder_Image) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
