// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_imagebuilder

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ImageBuilder_ImagePipeline)(nil)
	_ cfz.Resource                   = (*AWS_ImageBuilder_ImagePipeline)(nil)
)

const (
	// AWS_ImageBuilder_ImagePipeline__Type is the CloudFormation type for AWS::ImageBuilder::ImagePipeline.
	AWS_ImageBuilder_ImagePipeline__Type = "AWS::ImageBuilder::ImagePipeline"
)

var (
	// AWS_ImageBuilder_ImagePipeline__AttributesMap reports all the CloudFormation attributes for AWS::ImageBuilder::ImagePipeline.
	AWS_ImageBuilder_ImagePipeline__AttributesMap = struct {
		Arn  string
		Name string
	}{
		Arn:  "Arn",
		Name: "Name",
	}

	// AWS_ImageBuilder_ImagePipeline__AttributesSlice reports all the CloudFormation attributes for AWS::ImageBuilder::ImagePipeline.
	AWS_ImageBuilder_ImagePipeline__AttributesSlice = []string{
		AWS_ImageBuilder_ImagePipeline__AttributesMap.Arn,
		AWS_ImageBuilder_ImagePipeline__AttributesMap.Name,
	}
)

var (
	// AWS_ImageBuilder_ImagePipeline__PropertiesMap reports all the CloudFormation properties for AWS::ImageBuilder::ImagePipeline.
	AWS_ImageBuilder_ImagePipeline__PropertiesMap = struct {
		ContainerRecipeArn             string
		Description                    string
		DistributionConfigurationArn   string
		EnhancedImageMetadataEnabled   string
		ExecutionRole                  string
		ImageRecipeArn                 string
		ImageScanningConfiguration     string
		ImageTestsConfiguration        string
		InfrastructureConfigurationArn string
		Name                           string
		Schedule                       string
		Status                         string
		Tags                           string
		Workflows                      string
	}{
		ContainerRecipeArn:             "ContainerRecipeArn",
		Description:                    "Description",
		DistributionConfigurationArn:   "DistributionConfigurationArn",
		EnhancedImageMetadataEnabled:   "EnhancedImageMetadataEnabled",
		ExecutionRole:                  "ExecutionRole",
		ImageRecipeArn:                 "ImageRecipeArn",
		ImageScanningConfiguration:     "ImageScanningConfiguration",
		ImageTestsConfiguration:        "ImageTestsConfiguration",
		InfrastructureConfigurationArn: "InfrastructureConfigurationArn",
		Name:                           "Name",
		Schedule:                       "Schedule",
		Status:                         "Status",
		Tags:                           "Tags",
		Workflows:                      "Workflows",
	}

	// AWS_ImageBuilder_ImagePipeline__PropertiesSlice reports all the CloudFormation properties for AWS::ImageBuilder::ImagePipeline.
	AWS_ImageBuilder_ImagePipeline__PropertiesSlice = []string{
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.ContainerRecipeArn,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.Description,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.DistributionConfigurationArn,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.EnhancedImageMetadataEnabled,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.ExecutionRole,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.ImageRecipeArn,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.ImageScanningConfiguration,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.ImageTestsConfiguration,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.InfrastructureConfigurationArn,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.Name,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.Schedule,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.Status,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.Tags,
		AWS_ImageBuilder_ImagePipeline__PropertiesMap.Workflows,
	}
)

// AWS_ImageBuilder_ImagePipeline is a binding for AWS::ImageBuilder::ImagePipeline.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html
type AWS_ImageBuilder_ImagePipeline struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ContainerRecipeArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-containerrecipearn
	ContainerRecipeArn cfz.Expression[string] `json:"ContainerRecipeArn,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DistributionConfigurationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-distributionconfigurationarn
	DistributionConfigurationArn cfz.Expression[string] `json:"DistributionConfigurationArn,omitempty"`

	// EnhancedImageMetadataEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-enhancedimagemetadataenabled
	EnhancedImageMetadataEnabled cfz.Expression[bool] `json:"EnhancedImageMetadataEnabled,omitempty"`

	// ExecutionRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-executionrole
	ExecutionRole cfz.Expression[string] `json:"ExecutionRole,omitempty"`

	// ImageRecipeArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-imagerecipearn
	ImageRecipeArn cfz.Expression[string] `json:"ImageRecipeArn,omitempty"`

	// ImageScanningConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-imagescanningconfiguration
	ImageScanningConfiguration cfz.Expression[AWS_ImageBuilder_ImagePipeline_ImageScanningConfiguration] `json:"ImageScanningConfiguration,omitempty"`

	// ImageTestsConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-imagetestsconfiguration
	ImageTestsConfiguration cfz.Expression[AWS_ImageBuilder_ImagePipeline_ImageTestsConfiguration] `json:"ImageTestsConfiguration,omitempty"`

	// InfrastructureConfigurationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-infrastructureconfigurationarn
	InfrastructureConfigurationArn cfz.Expression[string] `json:"InfrastructureConfigurationArn,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Schedule is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-schedule
	Schedule cfz.Expression[AWS_ImageBuilder_ImagePipeline_Schedule] `json:"Schedule,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-status
	Status cfz.Expression[string] `json:"Status,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// Workflows is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-imagepipeline.html#cfn-imagebuilder-imagepipeline-workflows
	Workflows cfz.ExpressionSlice[AWS_ImageBuilder_ImagePipeline_WorkflowConfiguration] `json:"Workflows,omitempty"`
}

// New__AWS_ImageBuilder_ImagePipeline initializes a new *AWS_ImageBuilder_ImagePipeline.
func New__AWS_ImageBuilder_ImagePipeline(logicalName string) *AWS_ImageBuilder_ImagePipeline {
	return &AWS_ImageBuilder_ImagePipeline{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ImageBuilder_ImagePipeline) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ImageBuilder_ImagePipeline) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ImageBuilder_ImagePipeline) GetType() string {
	return AWS_ImageBuilder_ImagePipeline__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ImageBuilder_ImagePipeline) Set__LogicalName(v string) *AWS_ImageBuilder_ImagePipeline {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ImageBuilder_ImagePipeline) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ImageBuilder_ImagePipeline {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ImageBuilder_ImagePipeline) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ImageBuilder_ImagePipeline {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ImageBuilder_ImagePipeline) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ImageBuilder_ImagePipeline {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ImageBuilder_ImagePipeline) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ImageBuilder_ImagePipeline {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ImageBuilder_ImagePipeline) Set__RequestedOutputs(v []cfz.Output) *AWS_ImageBuilder_ImagePipeline {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ImageBuilder_ImagePipeline) Add__RequestedOutputs(v ...cfz.Output) *AWS_ImageBuilder_ImagePipeline {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ContainerRecipeArn updates property "ContainerRecipeArn".
func (t *AWS_ImageBuilder_ImagePipeline) Set__ContainerRecipeArn(v cfz.Expression[string]) *AWS_ImageBuilder_ImagePipeline {
	t.ContainerRecipeArn = v
	return t
}

// SetV__ContainerRecipeArn updates property "ContainerRecipeArn".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__ContainerRecipeArn(v string) *AWS_ImageBuilder_ImagePipeline {
	t.ContainerRecipeArn = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_ImageBuilder_ImagePipeline) Set__Description(v cfz.Expression[string]) *AWS_ImageBuilder_ImagePipeline {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__Description(v string) *AWS_ImageBuilder_ImagePipeline {
	t.Description = cfz.V(v)
	return t
}

// Set__DistributionConfigurationArn updates property "DistributionConfigurationArn".
func (t *AWS_ImageBuilder_ImagePipeline) Set__DistributionConfigurationArn(v cfz.Expression[string]) *AWS_ImageBuilder_ImagePipeline {
	t.DistributionConfigurationArn = v
	return t
}

// SetV__DistributionConfigurationArn updates property "DistributionConfigurationArn".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__DistributionConfigurationArn(v string) *AWS_ImageBuilder_ImagePipeline {
	t.DistributionConfigurationArn = cfz.V(v)
	return t
}

// Set__EnhancedImageMetadataEnabled updates property "EnhancedImageMetadataEnabled".
func (t *AWS_ImageBuilder_ImagePipeline) Set__EnhancedImageMetadataEnabled(v cfz.Expression[bool]) *AWS_ImageBuilder_ImagePipeline {
	t.EnhancedImageMetadataEnabled = v
	return t
}

// SetV__EnhancedImageMetadataEnabled updates property "EnhancedImageMetadataEnabled".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__EnhancedImageMetadataEnabled(v bool) *AWS_ImageBuilder_ImagePipeline {
	t.EnhancedImageMetadataEnabled = cfz.V(v)
	return t
}

// Set__ExecutionRole updates property "ExecutionRole".
func (t *AWS_ImageBuilder_ImagePipeline) Set__ExecutionRole(v cfz.Expression[string]) *AWS_ImageBuilder_ImagePipeline {
	t.ExecutionRole = v
	return t
}

// SetV__ExecutionRole updates property "ExecutionRole".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__ExecutionRole(v string) *AWS_ImageBuilder_ImagePipeline {
	t.ExecutionRole = cfz.V(v)
	return t
}

// Set__ImageRecipeArn updates property "ImageRecipeArn".
func (t *AWS_ImageBuilder_ImagePipeline) Set__ImageRecipeArn(v cfz.Expression[string]) *AWS_ImageBuilder_ImagePipeline {
	t.ImageRecipeArn = v
	return t
}

// SetV__ImageRecipeArn updates property "ImageRecipeArn".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__ImageRecipeArn(v string) *AWS_ImageBuilder_ImagePipeline {
	t.ImageRecipeArn = cfz.V(v)
	return t
}

// Set__ImageScanningConfiguration updates property "ImageScanningConfiguration".
func (t *AWS_ImageBuilder_ImagePipeline) Set__ImageScanningConfiguration(v cfz.Expression[AWS_ImageBuilder_ImagePipeline_ImageScanningConfiguration]) *AWS_ImageBuilder_ImagePipeline {
	t.ImageScanningConfiguration = v
	return t
}

// SetV__ImageScanningConfiguration updates property "ImageScanningConfiguration".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__ImageScanningConfiguration(v AWS_ImageBuilder_ImagePipeline_ImageScanningConfiguration) *AWS_ImageBuilder_ImagePipeline {
	t.ImageScanningConfiguration = cfz.V(v)
	return t
}

// Set__ImageTestsConfiguration updates property "ImageTestsConfiguration".
func (t *AWS_ImageBuilder_ImagePipeline) Set__ImageTestsConfiguration(v cfz.Expression[AWS_ImageBuilder_ImagePipeline_ImageTestsConfiguration]) *AWS_ImageBuilder_ImagePipeline {
	t.ImageTestsConfiguration = v
	return t
}

// SetV__ImageTestsConfiguration updates property "ImageTestsConfiguration".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__ImageTestsConfiguration(v AWS_ImageBuilder_ImagePipeline_ImageTestsConfiguration) *AWS_ImageBuilder_ImagePipeline {
	t.ImageTestsConfiguration = cfz.V(v)
	return t
}

// Set__InfrastructureConfigurationArn updates property "InfrastructureConfigurationArn".
func (t *AWS_ImageBuilder_ImagePipeline) Set__InfrastructureConfigurationArn(v cfz.Expression[string]) *AWS_ImageBuilder_ImagePipeline {
	t.InfrastructureConfigurationArn = v
	return t
}

// SetV__InfrastructureConfigurationArn updates property "InfrastructureConfigurationArn".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__InfrastructureConfigurationArn(v string) *AWS_ImageBuilder_ImagePipeline {
	t.InfrastructureConfigurationArn = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_ImageBuilder_ImagePipeline) Set__Name(v cfz.Expression[string]) *AWS_ImageBuilder_ImagePipeline {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__Name(v string) *AWS_ImageBuilder_ImagePipeline {
	t.Name = cfz.V(v)
	return t
}

// Set__Schedule updates property "Schedule".
func (t *AWS_ImageBuilder_ImagePipeline) Set__Schedule(v cfz.Expression[AWS_ImageBuilder_ImagePipeline_Schedule]) *AWS_ImageBuilder_ImagePipeline {
	t.Schedule = v
	return t
}

// SetV__Schedule updates property "Schedule".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__Schedule(v AWS_ImageBuilder_ImagePipeline_Schedule) *AWS_ImageBuilder_ImagePipeline {
	t.Schedule = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t *AWS_ImageBuilder_ImagePipeline) Set__Status(v cfz.Expression[string]) *AWS_ImageBuilder_ImagePipeline {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t *AWS_ImageBuilder_ImagePipeline) SetV__Status(v string) *AWS_ImageBuilder_ImagePipeline {
	t.Status = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ImageBuilder_ImagePipeline) Set__Tags(v cfz.ExpressionMap[string]) *AWS_ImageBuilder_ImagePipeline {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_ImageBuilder_ImagePipeline) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_ImageBuilder_ImagePipeline {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_ImageBuilder_ImagePipeline) SetMV__Tags(v ...map[string]string) *AWS_ImageBuilder_ImagePipeline {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__Workflows updates property "Workflows".
func (t *AWS_ImageBuilder_ImagePipeline) Set__Workflows(v cfz.ExpressionSlice[AWS_ImageBuilder_ImagePipeline_WorkflowConfiguration]) *AWS_ImageBuilder_ImagePipeline {
	t.Workflows = v
	return t
}

// SetS__Workflows updates property "Workflows".
func (t *AWS_ImageBuilder_ImagePipeline) SetS__Workflows(v ...cfz.Expression[AWS_ImageBuilder_ImagePipeline_WorkflowConfiguration]) *AWS_ImageBuilder_ImagePipeline {
	t.Workflows = cfz.S(v...)
	return t
}

// SetSV__Workflows updates property "Workflows".
func (t *AWS_ImageBuilder_ImagePipeline) SetSV__Workflows(v ...AWS_ImageBuilder_ImagePipeline_WorkflowConfiguration) *AWS_ImageBuilder_ImagePipeline {
	t.Workflows = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ImageBuilder_ImagePipeline) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_ImageBuilder_ImagePipeline) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ImageBuilder_ImagePipeline__AttributesMap.Arn))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_ImageBuilder_ImagePipeline) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ImageBuilder_ImagePipeline__AttributesMap.Name))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ImageBuilder_ImagePipeline) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_ImageBuilder_ImagePipeline) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_ImageBuilder_ImagePipeline) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ImageBuilder_ImagePipeline) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ImageBuilder_ImagePipeline

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ImageBuilder_ImagePipeline) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
