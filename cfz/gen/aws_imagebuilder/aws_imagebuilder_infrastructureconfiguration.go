// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_imagebuilder

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ImageBuilder_InfrastructureConfiguration)(nil)
	_ cfz.Resource                   = (*AWS_ImageBuilder_InfrastructureConfiguration)(nil)
)

const (
	// AWS_ImageBuilder_InfrastructureConfiguration__Type is the CloudFormation type for AWS::ImageBuilder::InfrastructureConfiguration.
	AWS_ImageBuilder_InfrastructureConfiguration__Type = "AWS::ImageBuilder::InfrastructureConfiguration"
)

var (
	// AWS_ImageBuilder_InfrastructureConfiguration__AttributesMap reports all the CloudFormation attributes for AWS::ImageBuilder::InfrastructureConfiguration.
	AWS_ImageBuilder_InfrastructureConfiguration__AttributesMap = struct {
		Arn  string
		Name string
	}{
		Arn:  "Arn",
		Name: "Name",
	}

	// AWS_ImageBuilder_InfrastructureConfiguration__AttributesSlice reports all the CloudFormation attributes for AWS::ImageBuilder::InfrastructureConfiguration.
	AWS_ImageBuilder_InfrastructureConfiguration__AttributesSlice = []string{
		AWS_ImageBuilder_InfrastructureConfiguration__AttributesMap.Arn,
		AWS_ImageBuilder_InfrastructureConfiguration__AttributesMap.Name,
	}
)

var (
	// AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::ImageBuilder::InfrastructureConfiguration.
	AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap = struct {
		Description                string
		InstanceMetadataOptions    string
		InstanceProfileName        string
		InstanceTypes              string
		KeyPair                    string
		Logging                    string
		Name                       string
		Placement                  string
		ResourceTags               string
		SecurityGroupIds           string
		SnsTopicArn                string
		SubnetId                   string
		Tags                       string
		TerminateInstanceOnFailure string
	}{
		Description:                "Description",
		InstanceMetadataOptions:    "InstanceMetadataOptions",
		InstanceProfileName:        "InstanceProfileName",
		InstanceTypes:              "InstanceTypes",
		KeyPair:                    "KeyPair",
		Logging:                    "Logging",
		Name:                       "Name",
		Placement:                  "Placement",
		ResourceTags:               "ResourceTags",
		SecurityGroupIds:           "SecurityGroupIds",
		SnsTopicArn:                "SnsTopicArn",
		SubnetId:                   "SubnetId",
		Tags:                       "Tags",
		TerminateInstanceOnFailure: "TerminateInstanceOnFailure",
	}

	// AWS_ImageBuilder_InfrastructureConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::ImageBuilder::InfrastructureConfiguration.
	AWS_ImageBuilder_InfrastructureConfiguration__PropertiesSlice = []string{
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.Description,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.InstanceMetadataOptions,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.InstanceProfileName,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.InstanceTypes,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.KeyPair,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.Logging,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.Name,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.Placement,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.ResourceTags,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.SecurityGroupIds,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.SnsTopicArn,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.SubnetId,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.Tags,
		AWS_ImageBuilder_InfrastructureConfiguration__PropertiesMap.TerminateInstanceOnFailure,
	}
)

// AWS_ImageBuilder_InfrastructureConfiguration is a binding for AWS::ImageBuilder::InfrastructureConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html
type AWS_ImageBuilder_InfrastructureConfiguration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// InstanceMetadataOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-instancemetadataoptions
	InstanceMetadataOptions cfz.Expression[AWS_ImageBuilder_InfrastructureConfiguration_InstanceMetadataOptions] `json:"InstanceMetadataOptions,omitempty"`

	// InstanceProfileName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-instanceprofilename
	InstanceProfileName cfz.Expression[string] `json:"InstanceProfileName,omitempty"`

	// InstanceTypes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-instancetypes
	InstanceTypes cfz.ExpressionSlice[string] `json:"InstanceTypes,omitempty"`

	// KeyPair is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-keypair
	KeyPair cfz.Expression[string] `json:"KeyPair,omitempty"`

	// Logging is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-logging
	Logging cfz.Expression[AWS_ImageBuilder_InfrastructureConfiguration_Logging] `json:"Logging,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Placement is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-placement
	Placement cfz.Expression[AWS_ImageBuilder_InfrastructureConfiguration_Placement] `json:"Placement,omitempty"`

	// ResourceTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-resourcetags
	ResourceTags cfz.ExpressionMap[string] `json:"ResourceTags,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// SnsTopicArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-snstopicarn
	SnsTopicArn cfz.Expression[string] `json:"SnsTopicArn,omitempty"`

	// SubnetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-subnetid
	SubnetId cfz.Expression[string] `json:"SubnetId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// TerminateInstanceOnFailure is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-terminateinstanceonfailure
	TerminateInstanceOnFailure cfz.Expression[bool] `json:"TerminateInstanceOnFailure,omitempty"`
}

// New__AWS_ImageBuilder_InfrastructureConfiguration initializes a new *AWS_ImageBuilder_InfrastructureConfiguration.
func New__AWS_ImageBuilder_InfrastructureConfiguration(logicalName string) *AWS_ImageBuilder_InfrastructureConfiguration {
	return &AWS_ImageBuilder_InfrastructureConfiguration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ImageBuilder_InfrastructureConfiguration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ImageBuilder_InfrastructureConfiguration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ImageBuilder_InfrastructureConfiguration) GetType() string {
	return AWS_ImageBuilder_InfrastructureConfiguration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__LogicalName(v string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__RequestedOutputs(v []cfz.Output) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Add__RequestedOutputs(v ...cfz.Output) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__Description(v cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__Description(v string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Description = cfz.V(v)
	return t
}

// Set__InstanceMetadataOptions updates property "InstanceMetadataOptions".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__InstanceMetadataOptions(v cfz.Expression[AWS_ImageBuilder_InfrastructureConfiguration_InstanceMetadataOptions]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.InstanceMetadataOptions = v
	return t
}

// SetV__InstanceMetadataOptions updates property "InstanceMetadataOptions".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__InstanceMetadataOptions(v AWS_ImageBuilder_InfrastructureConfiguration_InstanceMetadataOptions) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.InstanceMetadataOptions = cfz.V(v)
	return t
}

// Set__InstanceProfileName updates property "InstanceProfileName".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__InstanceProfileName(v cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.InstanceProfileName = v
	return t
}

// SetV__InstanceProfileName updates property "InstanceProfileName".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__InstanceProfileName(v string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.InstanceProfileName = cfz.V(v)
	return t
}

// Set__InstanceTypes updates property "InstanceTypes".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__InstanceTypes(v cfz.ExpressionSlice[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.InstanceTypes = v
	return t
}

// SetS__InstanceTypes updates property "InstanceTypes".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetS__InstanceTypes(v ...cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.InstanceTypes = cfz.S(v...)
	return t
}

// SetSV__InstanceTypes updates property "InstanceTypes".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetSV__InstanceTypes(v ...string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.InstanceTypes = cfz.SV(v...)
	return t
}

// Set__KeyPair updates property "KeyPair".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__KeyPair(v cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.KeyPair = v
	return t
}

// SetV__KeyPair updates property "KeyPair".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__KeyPair(v string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.KeyPair = cfz.V(v)
	return t
}

// Set__Logging updates property "Logging".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__Logging(v cfz.Expression[AWS_ImageBuilder_InfrastructureConfiguration_Logging]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Logging = v
	return t
}

// SetV__Logging updates property "Logging".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__Logging(v AWS_ImageBuilder_InfrastructureConfiguration_Logging) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Logging = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__Name(v cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__Name(v string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Name = cfz.V(v)
	return t
}

// Set__Placement updates property "Placement".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__Placement(v cfz.Expression[AWS_ImageBuilder_InfrastructureConfiguration_Placement]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Placement = v
	return t
}

// SetV__Placement updates property "Placement".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__Placement(v AWS_ImageBuilder_InfrastructureConfiguration_Placement) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Placement = cfz.V(v)
	return t
}

// Set__ResourceTags updates property "ResourceTags".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__ResourceTags(v cfz.ExpressionMap[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.ResourceTags = v
	return t
}

// SetM__ResourceTags updates property "ResourceTags".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetM__ResourceTags(v ...map[string]cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.ResourceTags = cfz.M(v...)
	return t
}

// SetMV__ResourceTags updates property "ResourceTags".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetMV__ResourceTags(v ...map[string]string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.ResourceTags = cfz.MV(v...)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetSV__SecurityGroupIds(v ...string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__SnsTopicArn updates property "SnsTopicArn".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__SnsTopicArn(v cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.SnsTopicArn = v
	return t
}

// SetV__SnsTopicArn updates property "SnsTopicArn".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__SnsTopicArn(v string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.SnsTopicArn = cfz.V(v)
	return t
}

// Set__SubnetId updates property "SubnetId".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__SubnetId(v cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.SubnetId = v
	return t
}

// SetV__SubnetId updates property "SubnetId".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__SubnetId(v string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.SubnetId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__Tags(v cfz.ExpressionMap[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetMV__Tags(v ...map[string]string) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__TerminateInstanceOnFailure updates property "TerminateInstanceOnFailure".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Set__TerminateInstanceOnFailure(v cfz.Expression[bool]) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.TerminateInstanceOnFailure = v
	return t
}

// SetV__TerminateInstanceOnFailure updates property "TerminateInstanceOnFailure".
func (t *AWS_ImageBuilder_InfrastructureConfiguration) SetV__TerminateInstanceOnFailure(v bool) *AWS_ImageBuilder_InfrastructureConfiguration {
	t.TerminateInstanceOnFailure = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ImageBuilder_InfrastructureConfiguration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_ImageBuilder_InfrastructureConfiguration) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ImageBuilder_InfrastructureConfiguration__AttributesMap.Arn))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_ImageBuilder_InfrastructureConfiguration) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ImageBuilder_InfrastructureConfiguration__AttributesMap.Name))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ImageBuilder_InfrastructureConfiguration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_ImageBuilder_InfrastructureConfiguration) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_ImageBuilder_InfrastructureConfiguration) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ImageBuilder_InfrastructureConfiguration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ImageBuilder_InfrastructureConfiguration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ImageBuilder_InfrastructureConfiguration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
