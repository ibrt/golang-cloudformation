// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_imagebuilder

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository__Type is the CloudFormation type for AWS::ImageBuilder::ContainerRecipe.TargetContainerRepository.
	AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository__Type = "AWS::ImageBuilder::ContainerRecipe.TargetContainerRepository"
)

var (
	// AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository__PropertiesMap reports all the CloudFormation properties for AWS::ImageBuilder::ContainerRecipe.TargetContainerRepository.
	AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository__PropertiesMap = struct {
		RepositoryName string
		Service        string
	}{
		RepositoryName: "RepositoryName",
		Service:        "Service",
	}

	// AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository__PropertiesSlice reports all the CloudFormation properties for AWS::ImageBuilder::ContainerRecipe.TargetContainerRepository.
	AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository__PropertiesSlice = []string{
		AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository__PropertiesMap.RepositoryName,
		AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository__PropertiesMap.Service,
	}
)

// AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository is a binding for AWS::ImageBuilder::ContainerRecipe.TargetContainerRepository.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-imagebuilder-containerrecipe-targetcontainerrepository.html
type AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository struct {
	// RepositoryName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-imagebuilder-containerrecipe-targetcontainerrepository.html#cfn-imagebuilder-containerrecipe-targetcontainerrepository-repositoryname
	RepositoryName cfz.Expression[string] `json:"RepositoryName,omitempty"`

	// Service is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-imagebuilder-containerrecipe-targetcontainerrepository.html#cfn-imagebuilder-containerrecipe-targetcontainerrepository-service
	Service cfz.Expression[string] `json:"Service,omitempty"`
}

// New__AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository initializes a new AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository.
func New__AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository() AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository {
	return AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository{}
}

// GetType returns the CloudFormation type.
func (AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository) GetType() string {
	return AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository__Type
}

// Set__RepositoryName updates property "RepositoryName".
func (t AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository) Set__RepositoryName(v cfz.Expression[string]) AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository {
	t.RepositoryName = v
	return t
}

// SetV__RepositoryName updates property "RepositoryName".
func (t AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository) SetV__RepositoryName(v string) AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository {
	t.RepositoryName = cfz.V(v)
	return t
}

// Set__Service updates property "Service".
func (t AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository) Set__Service(v cfz.Expression[string]) AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository {
	t.Service = v
	return t
}

// SetV__Service updates property "Service".
func (t AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository) SetV__Service(v string) AWS_ImageBuilder_ContainerRecipe_TargetContainerRepository {
	t.Service = cfz.V(v)
	return t
}
