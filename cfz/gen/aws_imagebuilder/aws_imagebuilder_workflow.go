// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_imagebuilder

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ImageBuilder_Workflow)(nil)
	_ cfz.Resource                   = (*AWS_ImageBuilder_Workflow)(nil)
)

const (
	// AWS_ImageBuilder_Workflow__Type is the CloudFormation type for AWS::ImageBuilder::Workflow.
	AWS_ImageBuilder_Workflow__Type = "AWS::ImageBuilder::Workflow"
)

var (
	// AWS_ImageBuilder_Workflow__AttributesMap reports all the CloudFormation attributes for AWS::ImageBuilder::Workflow.
	AWS_ImageBuilder_Workflow__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_ImageBuilder_Workflow__AttributesSlice reports all the CloudFormation attributes for AWS::ImageBuilder::Workflow.
	AWS_ImageBuilder_Workflow__AttributesSlice = []string{
		AWS_ImageBuilder_Workflow__AttributesMap.Arn,
	}
)

var (
	// AWS_ImageBuilder_Workflow__PropertiesMap reports all the CloudFormation properties for AWS::ImageBuilder::Workflow.
	AWS_ImageBuilder_Workflow__PropertiesMap = struct {
		ChangeDescription string
		Data              string
		Description       string
		KmsKeyId          string
		Name              string
		Tags              string
		Type              string
		Uri               string
		Version           string
	}{
		ChangeDescription: "ChangeDescription",
		Data:              "Data",
		Description:       "Description",
		KmsKeyId:          "KmsKeyId",
		Name:              "Name",
		Tags:              "Tags",
		Type:              "Type",
		Uri:               "Uri",
		Version:           "Version",
	}

	// AWS_ImageBuilder_Workflow__PropertiesSlice reports all the CloudFormation properties for AWS::ImageBuilder::Workflow.
	AWS_ImageBuilder_Workflow__PropertiesSlice = []string{
		AWS_ImageBuilder_Workflow__PropertiesMap.ChangeDescription,
		AWS_ImageBuilder_Workflow__PropertiesMap.Data,
		AWS_ImageBuilder_Workflow__PropertiesMap.Description,
		AWS_ImageBuilder_Workflow__PropertiesMap.KmsKeyId,
		AWS_ImageBuilder_Workflow__PropertiesMap.Name,
		AWS_ImageBuilder_Workflow__PropertiesMap.Tags,
		AWS_ImageBuilder_Workflow__PropertiesMap.Type,
		AWS_ImageBuilder_Workflow__PropertiesMap.Uri,
		AWS_ImageBuilder_Workflow__PropertiesMap.Version,
	}
)

// AWS_ImageBuilder_Workflow is a binding for AWS::ImageBuilder::Workflow.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html
type AWS_ImageBuilder_Workflow struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ChangeDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-changedescription
	ChangeDescription cfz.Expression[string] `json:"ChangeDescription,omitempty"`

	// Data is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-data
	Data cfz.Expression[string] `json:"Data,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// Uri is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-uri
	Uri cfz.Expression[string] `json:"Uri,omitempty"`

	// Version is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-workflow.html#cfn-imagebuilder-workflow-version
	Version cfz.Expression[string] `json:"Version,omitempty"`
}

// New__AWS_ImageBuilder_Workflow initializes a new *AWS_ImageBuilder_Workflow.
func New__AWS_ImageBuilder_Workflow(logicalName string) *AWS_ImageBuilder_Workflow {
	return &AWS_ImageBuilder_Workflow{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ImageBuilder_Workflow) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ImageBuilder_Workflow) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ImageBuilder_Workflow) GetType() string {
	return AWS_ImageBuilder_Workflow__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ImageBuilder_Workflow) Set__LogicalName(v string) *AWS_ImageBuilder_Workflow {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ImageBuilder_Workflow) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ImageBuilder_Workflow {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ImageBuilder_Workflow) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ImageBuilder_Workflow {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ImageBuilder_Workflow) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ImageBuilder_Workflow {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ImageBuilder_Workflow) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ImageBuilder_Workflow {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ImageBuilder_Workflow) Set__RequestedOutputs(v []cfz.Output) *AWS_ImageBuilder_Workflow {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ImageBuilder_Workflow) Add__RequestedOutputs(v ...cfz.Output) *AWS_ImageBuilder_Workflow {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ChangeDescription updates property "ChangeDescription".
func (t *AWS_ImageBuilder_Workflow) Set__ChangeDescription(v cfz.Expression[string]) *AWS_ImageBuilder_Workflow {
	t.ChangeDescription = v
	return t
}

// SetV__ChangeDescription updates property "ChangeDescription".
func (t *AWS_ImageBuilder_Workflow) SetV__ChangeDescription(v string) *AWS_ImageBuilder_Workflow {
	t.ChangeDescription = cfz.V(v)
	return t
}

// Set__Data updates property "Data".
func (t *AWS_ImageBuilder_Workflow) Set__Data(v cfz.Expression[string]) *AWS_ImageBuilder_Workflow {
	t.Data = v
	return t
}

// SetV__Data updates property "Data".
func (t *AWS_ImageBuilder_Workflow) SetV__Data(v string) *AWS_ImageBuilder_Workflow {
	t.Data = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_ImageBuilder_Workflow) Set__Description(v cfz.Expression[string]) *AWS_ImageBuilder_Workflow {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_ImageBuilder_Workflow) SetV__Description(v string) *AWS_ImageBuilder_Workflow {
	t.Description = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_ImageBuilder_Workflow) Set__KmsKeyId(v cfz.Expression[string]) *AWS_ImageBuilder_Workflow {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_ImageBuilder_Workflow) SetV__KmsKeyId(v string) *AWS_ImageBuilder_Workflow {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_ImageBuilder_Workflow) Set__Name(v cfz.Expression[string]) *AWS_ImageBuilder_Workflow {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_ImageBuilder_Workflow) SetV__Name(v string) *AWS_ImageBuilder_Workflow {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ImageBuilder_Workflow) Set__Tags(v cfz.ExpressionMap[string]) *AWS_ImageBuilder_Workflow {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_ImageBuilder_Workflow) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_ImageBuilder_Workflow {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_ImageBuilder_Workflow) SetMV__Tags(v ...map[string]string) *AWS_ImageBuilder_Workflow {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_ImageBuilder_Workflow) Set__Type(v cfz.Expression[string]) *AWS_ImageBuilder_Workflow {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_ImageBuilder_Workflow) SetV__Type(v string) *AWS_ImageBuilder_Workflow {
	t.Type = cfz.V(v)
	return t
}

// Set__Uri updates property "Uri".
func (t *AWS_ImageBuilder_Workflow) Set__Uri(v cfz.Expression[string]) *AWS_ImageBuilder_Workflow {
	t.Uri = v
	return t
}

// SetV__Uri updates property "Uri".
func (t *AWS_ImageBuilder_Workflow) SetV__Uri(v string) *AWS_ImageBuilder_Workflow {
	t.Uri = cfz.V(v)
	return t
}

// Set__Version updates property "Version".
func (t *AWS_ImageBuilder_Workflow) Set__Version(v cfz.Expression[string]) *AWS_ImageBuilder_Workflow {
	t.Version = v
	return t
}

// SetV__Version updates property "Version".
func (t *AWS_ImageBuilder_Workflow) SetV__Version(v string) *AWS_ImageBuilder_Workflow {
	t.Version = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ImageBuilder_Workflow) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_ImageBuilder_Workflow) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ImageBuilder_Workflow__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ImageBuilder_Workflow) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_ImageBuilder_Workflow) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ImageBuilder_Workflow) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ImageBuilder_Workflow

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ImageBuilder_Workflow) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
