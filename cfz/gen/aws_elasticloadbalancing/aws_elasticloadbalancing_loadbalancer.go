// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_elasticloadbalancing

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ElasticLoadBalancing_LoadBalancer)(nil)
	_ cfz.Resource                   = (*AWS_ElasticLoadBalancing_LoadBalancer)(nil)
)

const (
	// AWS_ElasticLoadBalancing_LoadBalancer__Type is the CloudFormation type for AWS::ElasticLoadBalancing::LoadBalancer.
	AWS_ElasticLoadBalancing_LoadBalancer__Type = "AWS::ElasticLoadBalancing::LoadBalancer"
)

var (
	// AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap reports all the CloudFormation attributes for AWS::ElasticLoadBalancing::LoadBalancer.
	AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap = struct {
		CanonicalHostedZoneName        string
		CanonicalHostedZoneNameID      string
		DNSName                        string
		SourceSecurityGroup_GroupName  string
		SourceSecurityGroup_OwnerAlias string
	}{
		CanonicalHostedZoneName:        "CanonicalHostedZoneName",
		CanonicalHostedZoneNameID:      "CanonicalHostedZoneNameID",
		DNSName:                        "DNSName",
		SourceSecurityGroup_GroupName:  "SourceSecurityGroup.GroupName",
		SourceSecurityGroup_OwnerAlias: "SourceSecurityGroup.OwnerAlias",
	}

	// AWS_ElasticLoadBalancing_LoadBalancer__AttributesSlice reports all the CloudFormation attributes for AWS::ElasticLoadBalancing::LoadBalancer.
	AWS_ElasticLoadBalancing_LoadBalancer__AttributesSlice = []string{
		AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.CanonicalHostedZoneName,
		AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.CanonicalHostedZoneNameID,
		AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.DNSName,
		AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.SourceSecurityGroup_GroupName,
		AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.SourceSecurityGroup_OwnerAlias,
	}
)

var (
	// AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap reports all the CloudFormation properties for AWS::ElasticLoadBalancing::LoadBalancer.
	AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap = struct {
		AccessLoggingPolicy       string
		AppCookieStickinessPolicy string
		AvailabilityZones         string
		ConnectionDrainingPolicy  string
		ConnectionSettings        string
		CrossZone                 string
		HealthCheck               string
		Instances                 string
		LBCookieStickinessPolicy  string
		Listeners                 string
		LoadBalancerName          string
		Policies                  string
		Scheme                    string
		SecurityGroups            string
		Subnets                   string
		Tags                      string
	}{
		AccessLoggingPolicy:       "AccessLoggingPolicy",
		AppCookieStickinessPolicy: "AppCookieStickinessPolicy",
		AvailabilityZones:         "AvailabilityZones",
		ConnectionDrainingPolicy:  "ConnectionDrainingPolicy",
		ConnectionSettings:        "ConnectionSettings",
		CrossZone:                 "CrossZone",
		HealthCheck:               "HealthCheck",
		Instances:                 "Instances",
		LBCookieStickinessPolicy:  "LBCookieStickinessPolicy",
		Listeners:                 "Listeners",
		LoadBalancerName:          "LoadBalancerName",
		Policies:                  "Policies",
		Scheme:                    "Scheme",
		SecurityGroups:            "SecurityGroups",
		Subnets:                   "Subnets",
		Tags:                      "Tags",
	}

	// AWS_ElasticLoadBalancing_LoadBalancer__PropertiesSlice reports all the CloudFormation properties for AWS::ElasticLoadBalancing::LoadBalancer.
	AWS_ElasticLoadBalancing_LoadBalancer__PropertiesSlice = []string{
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.AccessLoggingPolicy,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.AppCookieStickinessPolicy,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.AvailabilityZones,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.ConnectionDrainingPolicy,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.ConnectionSettings,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.CrossZone,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.HealthCheck,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.Instances,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.LBCookieStickinessPolicy,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.Listeners,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.LoadBalancerName,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.Policies,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.Scheme,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.SecurityGroups,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.Subnets,
		AWS_ElasticLoadBalancing_LoadBalancer__PropertiesMap.Tags,
	}
)

// AWS_ElasticLoadBalancing_LoadBalancer is a binding for AWS::ElasticLoadBalancing::LoadBalancer.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html
type AWS_ElasticLoadBalancing_LoadBalancer struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessLoggingPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-accessloggingpolicy
	AccessLoggingPolicy cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_AccessLoggingPolicy] `json:"AccessLoggingPolicy,omitempty"`

	// AppCookieStickinessPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-appcookiestickinesspolicy
	AppCookieStickinessPolicy cfz.ExpressionSlice[AWS_ElasticLoadBalancing_LoadBalancer_AppCookieStickinessPolicy] `json:"AppCookieStickinessPolicy,omitempty"`

	// AvailabilityZones is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-availabilityzones
	AvailabilityZones cfz.ExpressionSlice[string] `json:"AvailabilityZones,omitempty"`

	// ConnectionDrainingPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-connectiondrainingpolicy
	ConnectionDrainingPolicy cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_ConnectionDrainingPolicy] `json:"ConnectionDrainingPolicy,omitempty"`

	// ConnectionSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-connectionsettings
	ConnectionSettings cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_ConnectionSettings] `json:"ConnectionSettings,omitempty"`

	// CrossZone is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-crosszone
	CrossZone cfz.Expression[bool] `json:"CrossZone,omitempty"`

	// HealthCheck is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-healthcheck
	HealthCheck cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_HealthCheck] `json:"HealthCheck,omitempty"`

	// Instances is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-instances
	Instances cfz.ExpressionSlice[string] `json:"Instances,omitempty"`

	// LBCookieStickinessPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-lbcookiestickinesspolicy
	LBCookieStickinessPolicy cfz.ExpressionSlice[AWS_ElasticLoadBalancing_LoadBalancer_LBCookieStickinessPolicy] `json:"LBCookieStickinessPolicy,omitempty"`

	// Listeners is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-listeners
	Listeners cfz.ExpressionSlice[AWS_ElasticLoadBalancing_LoadBalancer_Listeners] `json:"Listeners,omitempty"`

	// LoadBalancerName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-elbname
	LoadBalancerName cfz.Expression[string] `json:"LoadBalancerName,omitempty"`

	// Policies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-policies
	Policies cfz.ExpressionSlice[AWS_ElasticLoadBalancing_LoadBalancer_Policies] `json:"Policies,omitempty"`

	// Scheme is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-scheme
	Scheme cfz.Expression[string] `json:"Scheme,omitempty"`

	// SecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-securitygroups
	SecurityGroups cfz.ExpressionSlice[string] `json:"SecurityGroups,omitempty"`

	// Subnets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-subnets
	Subnets cfz.ExpressionSlice[string] `json:"Subnets,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-elasticloadbalancing-loadbalancer-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_ElasticLoadBalancing_LoadBalancer initializes a new *AWS_ElasticLoadBalancing_LoadBalancer.
func New__AWS_ElasticLoadBalancing_LoadBalancer(logicalName string) *AWS_ElasticLoadBalancing_LoadBalancer {
	return &AWS_ElasticLoadBalancing_LoadBalancer{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ElasticLoadBalancing_LoadBalancer) GetType() string {
	return AWS_ElasticLoadBalancing_LoadBalancer__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__LogicalName(v string) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__RequestedOutputs(v []cfz.Output) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Add__RequestedOutputs(v ...cfz.Output) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessLoggingPolicy updates property "AccessLoggingPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__AccessLoggingPolicy(v cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_AccessLoggingPolicy]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.AccessLoggingPolicy = v
	return t
}

// SetV__AccessLoggingPolicy updates property "AccessLoggingPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetV__AccessLoggingPolicy(v AWS_ElasticLoadBalancing_LoadBalancer_AccessLoggingPolicy) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.AccessLoggingPolicy = cfz.V(v)
	return t
}

// Set__AppCookieStickinessPolicy updates property "AppCookieStickinessPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__AppCookieStickinessPolicy(v cfz.ExpressionSlice[AWS_ElasticLoadBalancing_LoadBalancer_AppCookieStickinessPolicy]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.AppCookieStickinessPolicy = v
	return t
}

// SetS__AppCookieStickinessPolicy updates property "AppCookieStickinessPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetS__AppCookieStickinessPolicy(v ...cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_AppCookieStickinessPolicy]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.AppCookieStickinessPolicy = cfz.S(v...)
	return t
}

// SetSV__AppCookieStickinessPolicy updates property "AppCookieStickinessPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetSV__AppCookieStickinessPolicy(v ...AWS_ElasticLoadBalancing_LoadBalancer_AppCookieStickinessPolicy) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.AppCookieStickinessPolicy = cfz.SV(v...)
	return t
}

// Set__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__AvailabilityZones(v cfz.ExpressionSlice[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.AvailabilityZones = v
	return t
}

// SetS__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetS__AvailabilityZones(v ...cfz.Expression[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.AvailabilityZones = cfz.S(v...)
	return t
}

// SetSV__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetSV__AvailabilityZones(v ...string) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.AvailabilityZones = cfz.SV(v...)
	return t
}

// Set__ConnectionDrainingPolicy updates property "ConnectionDrainingPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__ConnectionDrainingPolicy(v cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_ConnectionDrainingPolicy]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.ConnectionDrainingPolicy = v
	return t
}

// SetV__ConnectionDrainingPolicy updates property "ConnectionDrainingPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetV__ConnectionDrainingPolicy(v AWS_ElasticLoadBalancing_LoadBalancer_ConnectionDrainingPolicy) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.ConnectionDrainingPolicy = cfz.V(v)
	return t
}

// Set__ConnectionSettings updates property "ConnectionSettings".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__ConnectionSettings(v cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_ConnectionSettings]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.ConnectionSettings = v
	return t
}

// SetV__ConnectionSettings updates property "ConnectionSettings".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetV__ConnectionSettings(v AWS_ElasticLoadBalancing_LoadBalancer_ConnectionSettings) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.ConnectionSettings = cfz.V(v)
	return t
}

// Set__CrossZone updates property "CrossZone".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__CrossZone(v cfz.Expression[bool]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.CrossZone = v
	return t
}

// SetV__CrossZone updates property "CrossZone".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetV__CrossZone(v bool) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.CrossZone = cfz.V(v)
	return t
}

// Set__HealthCheck updates property "HealthCheck".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__HealthCheck(v cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_HealthCheck]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.HealthCheck = v
	return t
}

// SetV__HealthCheck updates property "HealthCheck".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetV__HealthCheck(v AWS_ElasticLoadBalancing_LoadBalancer_HealthCheck) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.HealthCheck = cfz.V(v)
	return t
}

// Set__Instances updates property "Instances".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__Instances(v cfz.ExpressionSlice[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Instances = v
	return t
}

// SetS__Instances updates property "Instances".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetS__Instances(v ...cfz.Expression[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Instances = cfz.S(v...)
	return t
}

// SetSV__Instances updates property "Instances".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetSV__Instances(v ...string) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Instances = cfz.SV(v...)
	return t
}

// Set__LBCookieStickinessPolicy updates property "LBCookieStickinessPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__LBCookieStickinessPolicy(v cfz.ExpressionSlice[AWS_ElasticLoadBalancing_LoadBalancer_LBCookieStickinessPolicy]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.LBCookieStickinessPolicy = v
	return t
}

// SetS__LBCookieStickinessPolicy updates property "LBCookieStickinessPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetS__LBCookieStickinessPolicy(v ...cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_LBCookieStickinessPolicy]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.LBCookieStickinessPolicy = cfz.S(v...)
	return t
}

// SetSV__LBCookieStickinessPolicy updates property "LBCookieStickinessPolicy".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetSV__LBCookieStickinessPolicy(v ...AWS_ElasticLoadBalancing_LoadBalancer_LBCookieStickinessPolicy) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.LBCookieStickinessPolicy = cfz.SV(v...)
	return t
}

// Set__Listeners updates property "Listeners".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__Listeners(v cfz.ExpressionSlice[AWS_ElasticLoadBalancing_LoadBalancer_Listeners]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Listeners = v
	return t
}

// SetS__Listeners updates property "Listeners".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetS__Listeners(v ...cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_Listeners]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Listeners = cfz.S(v...)
	return t
}

// SetSV__Listeners updates property "Listeners".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetSV__Listeners(v ...AWS_ElasticLoadBalancing_LoadBalancer_Listeners) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Listeners = cfz.SV(v...)
	return t
}

// Set__LoadBalancerName updates property "LoadBalancerName".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__LoadBalancerName(v cfz.Expression[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.LoadBalancerName = v
	return t
}

// SetV__LoadBalancerName updates property "LoadBalancerName".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetV__LoadBalancerName(v string) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.LoadBalancerName = cfz.V(v)
	return t
}

// Set__Policies updates property "Policies".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__Policies(v cfz.ExpressionSlice[AWS_ElasticLoadBalancing_LoadBalancer_Policies]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Policies = v
	return t
}

// SetS__Policies updates property "Policies".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetS__Policies(v ...cfz.Expression[AWS_ElasticLoadBalancing_LoadBalancer_Policies]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Policies = cfz.S(v...)
	return t
}

// SetSV__Policies updates property "Policies".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetSV__Policies(v ...AWS_ElasticLoadBalancing_LoadBalancer_Policies) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Policies = cfz.SV(v...)
	return t
}

// Set__Scheme updates property "Scheme".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__Scheme(v cfz.Expression[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Scheme = v
	return t
}

// SetV__Scheme updates property "Scheme".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetV__Scheme(v string) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Scheme = cfz.V(v)
	return t
}

// Set__SecurityGroups updates property "SecurityGroups".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__SecurityGroups(v cfz.ExpressionSlice[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.SecurityGroups = v
	return t
}

// SetS__SecurityGroups updates property "SecurityGroups".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetS__SecurityGroups(v ...cfz.Expression[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.SecurityGroups = cfz.S(v...)
	return t
}

// SetSV__SecurityGroups updates property "SecurityGroups".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetSV__SecurityGroups(v ...string) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.SecurityGroups = cfz.SV(v...)
	return t
}

// Set__Subnets updates property "Subnets".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__Subnets(v cfz.ExpressionSlice[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Subnets = v
	return t
}

// SetS__Subnets updates property "Subnets".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetS__Subnets(v ...cfz.Expression[string]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Subnets = cfz.S(v...)
	return t
}

// SetSV__Subnets updates property "Subnets".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetSV__Subnets(v ...string) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Subnets = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ElasticLoadBalancing_LoadBalancer) SetSV__Tags(v ...cfz.Tag) *AWS_ElasticLoadBalancing_LoadBalancer {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ElasticLoadBalancing_LoadBalancer) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CanonicalHostedZoneName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CanonicalHostedZoneName
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetAtt__CanonicalHostedZoneName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.CanonicalHostedZoneName))
}

// GetAtt__CanonicalHostedZoneNameID returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CanonicalHostedZoneNameID
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetAtt__CanonicalHostedZoneNameID() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.CanonicalHostedZoneNameID))
}

// GetAtt__DNSName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DNSName
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetAtt__DNSName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.DNSName))
}

// GetAtt__SourceSecurityGroup_GroupName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SourceSecurityGroup.GroupName
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetAtt__SourceSecurityGroup_GroupName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.SourceSecurityGroup_GroupName))
}

// GetAtt__SourceSecurityGroup_OwnerAlias returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SourceSecurityGroup.OwnerAlias
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetAtt__SourceSecurityGroup_OwnerAlias() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancing_LoadBalancer__AttributesMap.SourceSecurityGroup_OwnerAlias))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CanonicalHostedZoneName returns a conventionally configured output for an attribute of this resource.
// Attribute: CanonicalHostedZoneName
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetConventionalOutputAtt__CanonicalHostedZoneName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCanonicalHostedZoneName", t.GetAtt__CanonicalHostedZoneName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CanonicalHostedZoneNameID returns a conventionally configured output for an attribute of this resource.
// Attribute: CanonicalHostedZoneNameID
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetConventionalOutputAtt__CanonicalHostedZoneNameID(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCanonicalHostedZoneNameID", t.GetAtt__CanonicalHostedZoneNameID())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DNSName returns a conventionally configured output for an attribute of this resource.
// Attribute: DNSName
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetConventionalOutputAtt__DNSName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDNSName", t.GetAtt__DNSName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SourceSecurityGroup_GroupName returns a conventionally configured output for an attribute of this resource.
// Attribute: SourceSecurityGroup.GroupName
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetConventionalOutputAtt__SourceSecurityGroup_GroupName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSourceSecurityGroupGroupName", t.GetAtt__SourceSecurityGroup_GroupName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SourceSecurityGroup_OwnerAlias returns a conventionally configured output for an attribute of this resource.
// Attribute: SourceSecurityGroup.OwnerAlias
func (t *AWS_ElasticLoadBalancing_LoadBalancer) GetConventionalOutputAtt__SourceSecurityGroup_OwnerAlias(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSourceSecurityGroupOwnerAlias", t.GetAtt__SourceSecurityGroup_OwnerAlias())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ElasticLoadBalancing_LoadBalancer) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ElasticLoadBalancing_LoadBalancer

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ElasticLoadBalancing_LoadBalancer) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
