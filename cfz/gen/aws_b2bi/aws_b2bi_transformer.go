// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_b2bi

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_B2BI_Transformer)(nil)
	_ cfz.Resource                   = (*AWS_B2BI_Transformer)(nil)
)

const (
	// AWS_B2BI_Transformer__Type is the CloudFormation type for AWS::B2BI::Transformer.
	AWS_B2BI_Transformer__Type = "AWS::B2BI::Transformer"
)

var (
	// AWS_B2BI_Transformer__AttributesMap reports all the CloudFormation attributes for AWS::B2BI::Transformer.
	AWS_B2BI_Transformer__AttributesMap = struct {
		CreatedAt      string
		ModifiedAt     string
		TransformerArn string
		TransformerId  string
	}{
		CreatedAt:      "CreatedAt",
		ModifiedAt:     "ModifiedAt",
		TransformerArn: "TransformerArn",
		TransformerId:  "TransformerId",
	}

	// AWS_B2BI_Transformer__AttributesSlice reports all the CloudFormation attributes for AWS::B2BI::Transformer.
	AWS_B2BI_Transformer__AttributesSlice = []string{
		AWS_B2BI_Transformer__AttributesMap.CreatedAt,
		AWS_B2BI_Transformer__AttributesMap.ModifiedAt,
		AWS_B2BI_Transformer__AttributesMap.TransformerArn,
		AWS_B2BI_Transformer__AttributesMap.TransformerId,
	}
)

var (
	// AWS_B2BI_Transformer__PropertiesMap reports all the CloudFormation properties for AWS::B2BI::Transformer.
	AWS_B2BI_Transformer__PropertiesMap = struct {
		InputConversion  string
		Mapping          string
		Name             string
		OutputConversion string
		SampleDocuments  string
		Status           string
		Tags             string
	}{
		InputConversion:  "InputConversion",
		Mapping:          "Mapping",
		Name:             "Name",
		OutputConversion: "OutputConversion",
		SampleDocuments:  "SampleDocuments",
		Status:           "Status",
		Tags:             "Tags",
	}

	// AWS_B2BI_Transformer__PropertiesSlice reports all the CloudFormation properties for AWS::B2BI::Transformer.
	AWS_B2BI_Transformer__PropertiesSlice = []string{
		AWS_B2BI_Transformer__PropertiesMap.InputConversion,
		AWS_B2BI_Transformer__PropertiesMap.Mapping,
		AWS_B2BI_Transformer__PropertiesMap.Name,
		AWS_B2BI_Transformer__PropertiesMap.OutputConversion,
		AWS_B2BI_Transformer__PropertiesMap.SampleDocuments,
		AWS_B2BI_Transformer__PropertiesMap.Status,
		AWS_B2BI_Transformer__PropertiesMap.Tags,
	}
)

// AWS_B2BI_Transformer is a binding for AWS::B2BI::Transformer.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html
type AWS_B2BI_Transformer struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// InputConversion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-inputconversion
	InputConversion cfz.Expression[AWS_B2BI_Transformer_InputConversion] `json:"InputConversion,omitempty"`

	// Mapping is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-mapping
	Mapping cfz.Expression[AWS_B2BI_Transformer_Mapping] `json:"Mapping,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// OutputConversion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-outputconversion
	OutputConversion cfz.Expression[AWS_B2BI_Transformer_OutputConversion] `json:"OutputConversion,omitempty"`

	// SampleDocuments is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-sampledocuments
	SampleDocuments cfz.Expression[AWS_B2BI_Transformer_SampleDocuments] `json:"SampleDocuments,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-status
	Status cfz.Expression[string] `json:"Status,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-b2bi-transformer.html#cfn-b2bi-transformer-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_B2BI_Transformer initializes a new *AWS_B2BI_Transformer.
func New__AWS_B2BI_Transformer(logicalName string) *AWS_B2BI_Transformer {
	return &AWS_B2BI_Transformer{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_B2BI_Transformer) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_B2BI_Transformer) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_B2BI_Transformer) GetType() string {
	return AWS_B2BI_Transformer__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_B2BI_Transformer) Set__LogicalName(v string) *AWS_B2BI_Transformer {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_B2BI_Transformer) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_B2BI_Transformer {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_B2BI_Transformer) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_B2BI_Transformer {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_B2BI_Transformer) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_B2BI_Transformer {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_B2BI_Transformer) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_B2BI_Transformer {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_B2BI_Transformer) Set__RequestedOutputs(v []cfz.Output) *AWS_B2BI_Transformer {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_B2BI_Transformer) Add__RequestedOutputs(v ...cfz.Output) *AWS_B2BI_Transformer {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__InputConversion updates property "InputConversion".
func (t *AWS_B2BI_Transformer) Set__InputConversion(v cfz.Expression[AWS_B2BI_Transformer_InputConversion]) *AWS_B2BI_Transformer {
	t.InputConversion = v
	return t
}

// SetV__InputConversion updates property "InputConversion".
func (t *AWS_B2BI_Transformer) SetV__InputConversion(v AWS_B2BI_Transformer_InputConversion) *AWS_B2BI_Transformer {
	t.InputConversion = cfz.V(v)
	return t
}

// Set__Mapping updates property "Mapping".
func (t *AWS_B2BI_Transformer) Set__Mapping(v cfz.Expression[AWS_B2BI_Transformer_Mapping]) *AWS_B2BI_Transformer {
	t.Mapping = v
	return t
}

// SetV__Mapping updates property "Mapping".
func (t *AWS_B2BI_Transformer) SetV__Mapping(v AWS_B2BI_Transformer_Mapping) *AWS_B2BI_Transformer {
	t.Mapping = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_B2BI_Transformer) Set__Name(v cfz.Expression[string]) *AWS_B2BI_Transformer {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_B2BI_Transformer) SetV__Name(v string) *AWS_B2BI_Transformer {
	t.Name = cfz.V(v)
	return t
}

// Set__OutputConversion updates property "OutputConversion".
func (t *AWS_B2BI_Transformer) Set__OutputConversion(v cfz.Expression[AWS_B2BI_Transformer_OutputConversion]) *AWS_B2BI_Transformer {
	t.OutputConversion = v
	return t
}

// SetV__OutputConversion updates property "OutputConversion".
func (t *AWS_B2BI_Transformer) SetV__OutputConversion(v AWS_B2BI_Transformer_OutputConversion) *AWS_B2BI_Transformer {
	t.OutputConversion = cfz.V(v)
	return t
}

// Set__SampleDocuments updates property "SampleDocuments".
func (t *AWS_B2BI_Transformer) Set__SampleDocuments(v cfz.Expression[AWS_B2BI_Transformer_SampleDocuments]) *AWS_B2BI_Transformer {
	t.SampleDocuments = v
	return t
}

// SetV__SampleDocuments updates property "SampleDocuments".
func (t *AWS_B2BI_Transformer) SetV__SampleDocuments(v AWS_B2BI_Transformer_SampleDocuments) *AWS_B2BI_Transformer {
	t.SampleDocuments = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t *AWS_B2BI_Transformer) Set__Status(v cfz.Expression[string]) *AWS_B2BI_Transformer {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t *AWS_B2BI_Transformer) SetV__Status(v string) *AWS_B2BI_Transformer {
	t.Status = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_B2BI_Transformer) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_B2BI_Transformer {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_B2BI_Transformer) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_B2BI_Transformer {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_B2BI_Transformer) SetSV__Tags(v ...cfz.Tag) *AWS_B2BI_Transformer {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_B2BI_Transformer) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_B2BI_Transformer) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_B2BI_Transformer__AttributesMap.CreatedAt))
}

// GetAtt__ModifiedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ModifiedAt
func (t *AWS_B2BI_Transformer) GetAtt__ModifiedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_B2BI_Transformer__AttributesMap.ModifiedAt))
}

// GetAtt__TransformerArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: TransformerArn
func (t *AWS_B2BI_Transformer) GetAtt__TransformerArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_B2BI_Transformer__AttributesMap.TransformerArn))
}

// GetAtt__TransformerId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: TransformerId
func (t *AWS_B2BI_Transformer) GetAtt__TransformerId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_B2BI_Transformer__AttributesMap.TransformerId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_B2BI_Transformer) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_B2BI_Transformer) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ModifiedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: ModifiedAt
func (t *AWS_B2BI_Transformer) GetConventionalOutputAtt__ModifiedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttModifiedAt", t.GetAtt__ModifiedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__TransformerArn returns a conventionally configured output for an attribute of this resource.
// Attribute: TransformerArn
func (t *AWS_B2BI_Transformer) GetConventionalOutputAtt__TransformerArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTransformerArn", t.GetAtt__TransformerArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__TransformerId returns a conventionally configured output for an attribute of this resource.
// Attribute: TransformerId
func (t *AWS_B2BI_Transformer) GetConventionalOutputAtt__TransformerId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTransformerId", t.GetAtt__TransformerId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_B2BI_Transformer) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_B2BI_Transformer

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_B2BI_Transformer) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
