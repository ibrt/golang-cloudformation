// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_b2bi

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_B2BI_Partnership_X12Delimiters__Type is the CloudFormation type for AWS::B2BI::Partnership.X12Delimiters.
	AWS_B2BI_Partnership_X12Delimiters__Type = "AWS::B2BI::Partnership.X12Delimiters"
)

var (
	// AWS_B2BI_Partnership_X12Delimiters__PropertiesMap reports all the CloudFormation properties for AWS::B2BI::Partnership.X12Delimiters.
	AWS_B2BI_Partnership_X12Delimiters__PropertiesMap = struct {
		ComponentSeparator   string
		DataElementSeparator string
		SegmentTerminator    string
	}{
		ComponentSeparator:   "ComponentSeparator",
		DataElementSeparator: "DataElementSeparator",
		SegmentTerminator:    "SegmentTerminator",
	}

	// AWS_B2BI_Partnership_X12Delimiters__PropertiesSlice reports all the CloudFormation properties for AWS::B2BI::Partnership.X12Delimiters.
	AWS_B2BI_Partnership_X12Delimiters__PropertiesSlice = []string{
		AWS_B2BI_Partnership_X12Delimiters__PropertiesMap.ComponentSeparator,
		AWS_B2BI_Partnership_X12Delimiters__PropertiesMap.DataElementSeparator,
		AWS_B2BI_Partnership_X12Delimiters__PropertiesMap.SegmentTerminator,
	}
)

// AWS_B2BI_Partnership_X12Delimiters is a binding for AWS::B2BI::Partnership.X12Delimiters.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-b2bi-partnership-x12delimiters.html
type AWS_B2BI_Partnership_X12Delimiters struct {
	// ComponentSeparator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-b2bi-partnership-x12delimiters.html#cfn-b2bi-partnership-x12delimiters-componentseparator
	ComponentSeparator cfz.Expression[string] `json:"ComponentSeparator,omitempty"`

	// DataElementSeparator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-b2bi-partnership-x12delimiters.html#cfn-b2bi-partnership-x12delimiters-dataelementseparator
	DataElementSeparator cfz.Expression[string] `json:"DataElementSeparator,omitempty"`

	// SegmentTerminator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-b2bi-partnership-x12delimiters.html#cfn-b2bi-partnership-x12delimiters-segmentterminator
	SegmentTerminator cfz.Expression[string] `json:"SegmentTerminator,omitempty"`
}

// New__AWS_B2BI_Partnership_X12Delimiters initializes a new AWS_B2BI_Partnership_X12Delimiters.
func New__AWS_B2BI_Partnership_X12Delimiters() AWS_B2BI_Partnership_X12Delimiters {
	return AWS_B2BI_Partnership_X12Delimiters{}
}

// GetType returns the CloudFormation type.
func (AWS_B2BI_Partnership_X12Delimiters) GetType() string {
	return AWS_B2BI_Partnership_X12Delimiters__Type
}

// Set__ComponentSeparator updates property "ComponentSeparator".
func (t AWS_B2BI_Partnership_X12Delimiters) Set__ComponentSeparator(v cfz.Expression[string]) AWS_B2BI_Partnership_X12Delimiters {
	t.ComponentSeparator = v
	return t
}

// SetV__ComponentSeparator updates property "ComponentSeparator".
func (t AWS_B2BI_Partnership_X12Delimiters) SetV__ComponentSeparator(v string) AWS_B2BI_Partnership_X12Delimiters {
	t.ComponentSeparator = cfz.V(v)
	return t
}

// Set__DataElementSeparator updates property "DataElementSeparator".
func (t AWS_B2BI_Partnership_X12Delimiters) Set__DataElementSeparator(v cfz.Expression[string]) AWS_B2BI_Partnership_X12Delimiters {
	t.DataElementSeparator = v
	return t
}

// SetV__DataElementSeparator updates property "DataElementSeparator".
func (t AWS_B2BI_Partnership_X12Delimiters) SetV__DataElementSeparator(v string) AWS_B2BI_Partnership_X12Delimiters {
	t.DataElementSeparator = cfz.V(v)
	return t
}

// Set__SegmentTerminator updates property "SegmentTerminator".
func (t AWS_B2BI_Partnership_X12Delimiters) Set__SegmentTerminator(v cfz.Expression[string]) AWS_B2BI_Partnership_X12Delimiters {
	t.SegmentTerminator = v
	return t
}

// SetV__SegmentTerminator updates property "SegmentTerminator".
func (t AWS_B2BI_Partnership_X12Delimiters) SetV__SegmentTerminator(v string) AWS_B2BI_Partnership_X12Delimiters {
	t.SegmentTerminator = cfz.V(v)
	return t
}
