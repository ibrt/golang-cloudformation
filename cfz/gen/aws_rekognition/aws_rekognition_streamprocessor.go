// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_rekognition

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Rekognition_StreamProcessor)(nil)
	_ cfz.Resource                   = (*AWS_Rekognition_StreamProcessor)(nil)
)

const (
	// AWS_Rekognition_StreamProcessor__Type is the CloudFormation type for AWS::Rekognition::StreamProcessor.
	AWS_Rekognition_StreamProcessor__Type = "AWS::Rekognition::StreamProcessor"
)

var (
	// AWS_Rekognition_StreamProcessor__AttributesMap reports all the CloudFormation attributes for AWS::Rekognition::StreamProcessor.
	AWS_Rekognition_StreamProcessor__AttributesMap = struct {
		Arn           string
		Status        string
		StatusMessage string
	}{
		Arn:           "Arn",
		Status:        "Status",
		StatusMessage: "StatusMessage",
	}

	// AWS_Rekognition_StreamProcessor__AttributesSlice reports all the CloudFormation attributes for AWS::Rekognition::StreamProcessor.
	AWS_Rekognition_StreamProcessor__AttributesSlice = []string{
		AWS_Rekognition_StreamProcessor__AttributesMap.Arn,
		AWS_Rekognition_StreamProcessor__AttributesMap.Status,
		AWS_Rekognition_StreamProcessor__AttributesMap.StatusMessage,
	}
)

var (
	// AWS_Rekognition_StreamProcessor__PropertiesMap reports all the CloudFormation properties for AWS::Rekognition::StreamProcessor.
	AWS_Rekognition_StreamProcessor__PropertiesMap = struct {
		BoundingBoxRegionsOfInterest string
		ConnectedHomeSettings        string
		DataSharingPreference        string
		FaceSearchSettings           string
		KinesisDataStream            string
		KinesisVideoStream           string
		KmsKeyId                     string
		Name                         string
		NotificationChannel          string
		PolygonRegionsOfInterest     string
		RoleArn                      string
		S3Destination                string
		Tags                         string
	}{
		BoundingBoxRegionsOfInterest: "BoundingBoxRegionsOfInterest",
		ConnectedHomeSettings:        "ConnectedHomeSettings",
		DataSharingPreference:        "DataSharingPreference",
		FaceSearchSettings:           "FaceSearchSettings",
		KinesisDataStream:            "KinesisDataStream",
		KinesisVideoStream:           "KinesisVideoStream",
		KmsKeyId:                     "KmsKeyId",
		Name:                         "Name",
		NotificationChannel:          "NotificationChannel",
		PolygonRegionsOfInterest:     "PolygonRegionsOfInterest",
		RoleArn:                      "RoleArn",
		S3Destination:                "S3Destination",
		Tags:                         "Tags",
	}

	// AWS_Rekognition_StreamProcessor__PropertiesSlice reports all the CloudFormation properties for AWS::Rekognition::StreamProcessor.
	AWS_Rekognition_StreamProcessor__PropertiesSlice = []string{
		AWS_Rekognition_StreamProcessor__PropertiesMap.BoundingBoxRegionsOfInterest,
		AWS_Rekognition_StreamProcessor__PropertiesMap.ConnectedHomeSettings,
		AWS_Rekognition_StreamProcessor__PropertiesMap.DataSharingPreference,
		AWS_Rekognition_StreamProcessor__PropertiesMap.FaceSearchSettings,
		AWS_Rekognition_StreamProcessor__PropertiesMap.KinesisDataStream,
		AWS_Rekognition_StreamProcessor__PropertiesMap.KinesisVideoStream,
		AWS_Rekognition_StreamProcessor__PropertiesMap.KmsKeyId,
		AWS_Rekognition_StreamProcessor__PropertiesMap.Name,
		AWS_Rekognition_StreamProcessor__PropertiesMap.NotificationChannel,
		AWS_Rekognition_StreamProcessor__PropertiesMap.PolygonRegionsOfInterest,
		AWS_Rekognition_StreamProcessor__PropertiesMap.RoleArn,
		AWS_Rekognition_StreamProcessor__PropertiesMap.S3Destination,
		AWS_Rekognition_StreamProcessor__PropertiesMap.Tags,
	}
)

// AWS_Rekognition_StreamProcessor is a binding for AWS::Rekognition::StreamProcessor.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html
type AWS_Rekognition_StreamProcessor struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// BoundingBoxRegionsOfInterest is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-boundingboxregionsofinterest
	BoundingBoxRegionsOfInterest cfz.ExpressionSlice[AWS_Rekognition_StreamProcessor_BoundingBox] `json:"BoundingBoxRegionsOfInterest,omitempty"`

	// ConnectedHomeSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-connectedhomesettings
	ConnectedHomeSettings cfz.Expression[AWS_Rekognition_StreamProcessor_ConnectedHomeSettings] `json:"ConnectedHomeSettings,omitempty"`

	// DataSharingPreference is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-datasharingpreference
	DataSharingPreference cfz.Expression[AWS_Rekognition_StreamProcessor_DataSharingPreference] `json:"DataSharingPreference,omitempty"`

	// FaceSearchSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-facesearchsettings
	FaceSearchSettings cfz.Expression[AWS_Rekognition_StreamProcessor_FaceSearchSettings] `json:"FaceSearchSettings,omitempty"`

	// KinesisDataStream is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-kinesisdatastream
	KinesisDataStream cfz.Expression[AWS_Rekognition_StreamProcessor_KinesisDataStream] `json:"KinesisDataStream,omitempty"`

	// KinesisVideoStream is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-kinesisvideostream
	KinesisVideoStream cfz.Expression[AWS_Rekognition_StreamProcessor_KinesisVideoStream] `json:"KinesisVideoStream,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// NotificationChannel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-notificationchannel
	NotificationChannel cfz.Expression[AWS_Rekognition_StreamProcessor_NotificationChannel] `json:"NotificationChannel,omitempty"`

	// PolygonRegionsOfInterest is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-polygonregionsofinterest
	PolygonRegionsOfInterest cfz.Expression[json.RawMessage] `json:"PolygonRegionsOfInterest,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// S3Destination is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-s3destination
	S3Destination cfz.Expression[AWS_Rekognition_StreamProcessor_S3Destination] `json:"S3Destination,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rekognition-streamprocessor.html#cfn-rekognition-streamprocessor-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Rekognition_StreamProcessor initializes a new *AWS_Rekognition_StreamProcessor.
func New__AWS_Rekognition_StreamProcessor(logicalName string) *AWS_Rekognition_StreamProcessor {
	return &AWS_Rekognition_StreamProcessor{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Rekognition_StreamProcessor) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Rekognition_StreamProcessor) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Rekognition_StreamProcessor) GetType() string {
	return AWS_Rekognition_StreamProcessor__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Rekognition_StreamProcessor) Set__LogicalName(v string) *AWS_Rekognition_StreamProcessor {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Rekognition_StreamProcessor) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Rekognition_StreamProcessor {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Rekognition_StreamProcessor) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Rekognition_StreamProcessor {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Rekognition_StreamProcessor) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Rekognition_StreamProcessor {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Rekognition_StreamProcessor) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Rekognition_StreamProcessor {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Rekognition_StreamProcessor) Set__RequestedOutputs(v []cfz.Output) *AWS_Rekognition_StreamProcessor {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Rekognition_StreamProcessor) Add__RequestedOutputs(v ...cfz.Output) *AWS_Rekognition_StreamProcessor {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__BoundingBoxRegionsOfInterest updates property "BoundingBoxRegionsOfInterest".
func (t *AWS_Rekognition_StreamProcessor) Set__BoundingBoxRegionsOfInterest(v cfz.ExpressionSlice[AWS_Rekognition_StreamProcessor_BoundingBox]) *AWS_Rekognition_StreamProcessor {
	t.BoundingBoxRegionsOfInterest = v
	return t
}

// SetS__BoundingBoxRegionsOfInterest updates property "BoundingBoxRegionsOfInterest".
func (t *AWS_Rekognition_StreamProcessor) SetS__BoundingBoxRegionsOfInterest(v ...cfz.Expression[AWS_Rekognition_StreamProcessor_BoundingBox]) *AWS_Rekognition_StreamProcessor {
	t.BoundingBoxRegionsOfInterest = cfz.S(v...)
	return t
}

// SetSV__BoundingBoxRegionsOfInterest updates property "BoundingBoxRegionsOfInterest".
func (t *AWS_Rekognition_StreamProcessor) SetSV__BoundingBoxRegionsOfInterest(v ...AWS_Rekognition_StreamProcessor_BoundingBox) *AWS_Rekognition_StreamProcessor {
	t.BoundingBoxRegionsOfInterest = cfz.SV(v...)
	return t
}

// Set__ConnectedHomeSettings updates property "ConnectedHomeSettings".
func (t *AWS_Rekognition_StreamProcessor) Set__ConnectedHomeSettings(v cfz.Expression[AWS_Rekognition_StreamProcessor_ConnectedHomeSettings]) *AWS_Rekognition_StreamProcessor {
	t.ConnectedHomeSettings = v
	return t
}

// SetV__ConnectedHomeSettings updates property "ConnectedHomeSettings".
func (t *AWS_Rekognition_StreamProcessor) SetV__ConnectedHomeSettings(v AWS_Rekognition_StreamProcessor_ConnectedHomeSettings) *AWS_Rekognition_StreamProcessor {
	t.ConnectedHomeSettings = cfz.V(v)
	return t
}

// Set__DataSharingPreference updates property "DataSharingPreference".
func (t *AWS_Rekognition_StreamProcessor) Set__DataSharingPreference(v cfz.Expression[AWS_Rekognition_StreamProcessor_DataSharingPreference]) *AWS_Rekognition_StreamProcessor {
	t.DataSharingPreference = v
	return t
}

// SetV__DataSharingPreference updates property "DataSharingPreference".
func (t *AWS_Rekognition_StreamProcessor) SetV__DataSharingPreference(v AWS_Rekognition_StreamProcessor_DataSharingPreference) *AWS_Rekognition_StreamProcessor {
	t.DataSharingPreference = cfz.V(v)
	return t
}

// Set__FaceSearchSettings updates property "FaceSearchSettings".
func (t *AWS_Rekognition_StreamProcessor) Set__FaceSearchSettings(v cfz.Expression[AWS_Rekognition_StreamProcessor_FaceSearchSettings]) *AWS_Rekognition_StreamProcessor {
	t.FaceSearchSettings = v
	return t
}

// SetV__FaceSearchSettings updates property "FaceSearchSettings".
func (t *AWS_Rekognition_StreamProcessor) SetV__FaceSearchSettings(v AWS_Rekognition_StreamProcessor_FaceSearchSettings) *AWS_Rekognition_StreamProcessor {
	t.FaceSearchSettings = cfz.V(v)
	return t
}

// Set__KinesisDataStream updates property "KinesisDataStream".
func (t *AWS_Rekognition_StreamProcessor) Set__KinesisDataStream(v cfz.Expression[AWS_Rekognition_StreamProcessor_KinesisDataStream]) *AWS_Rekognition_StreamProcessor {
	t.KinesisDataStream = v
	return t
}

// SetV__KinesisDataStream updates property "KinesisDataStream".
func (t *AWS_Rekognition_StreamProcessor) SetV__KinesisDataStream(v AWS_Rekognition_StreamProcessor_KinesisDataStream) *AWS_Rekognition_StreamProcessor {
	t.KinesisDataStream = cfz.V(v)
	return t
}

// Set__KinesisVideoStream updates property "KinesisVideoStream".
func (t *AWS_Rekognition_StreamProcessor) Set__KinesisVideoStream(v cfz.Expression[AWS_Rekognition_StreamProcessor_KinesisVideoStream]) *AWS_Rekognition_StreamProcessor {
	t.KinesisVideoStream = v
	return t
}

// SetV__KinesisVideoStream updates property "KinesisVideoStream".
func (t *AWS_Rekognition_StreamProcessor) SetV__KinesisVideoStream(v AWS_Rekognition_StreamProcessor_KinesisVideoStream) *AWS_Rekognition_StreamProcessor {
	t.KinesisVideoStream = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_Rekognition_StreamProcessor) Set__KmsKeyId(v cfz.Expression[string]) *AWS_Rekognition_StreamProcessor {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_Rekognition_StreamProcessor) SetV__KmsKeyId(v string) *AWS_Rekognition_StreamProcessor {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Rekognition_StreamProcessor) Set__Name(v cfz.Expression[string]) *AWS_Rekognition_StreamProcessor {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Rekognition_StreamProcessor) SetV__Name(v string) *AWS_Rekognition_StreamProcessor {
	t.Name = cfz.V(v)
	return t
}

// Set__NotificationChannel updates property "NotificationChannel".
func (t *AWS_Rekognition_StreamProcessor) Set__NotificationChannel(v cfz.Expression[AWS_Rekognition_StreamProcessor_NotificationChannel]) *AWS_Rekognition_StreamProcessor {
	t.NotificationChannel = v
	return t
}

// SetV__NotificationChannel updates property "NotificationChannel".
func (t *AWS_Rekognition_StreamProcessor) SetV__NotificationChannel(v AWS_Rekognition_StreamProcessor_NotificationChannel) *AWS_Rekognition_StreamProcessor {
	t.NotificationChannel = cfz.V(v)
	return t
}

// Set__PolygonRegionsOfInterest updates property "PolygonRegionsOfInterest".
func (t *AWS_Rekognition_StreamProcessor) Set__PolygonRegionsOfInterest(v cfz.Expression[json.RawMessage]) *AWS_Rekognition_StreamProcessor {
	t.PolygonRegionsOfInterest = v
	return t
}

// SetV__PolygonRegionsOfInterest updates property "PolygonRegionsOfInterest".
func (t *AWS_Rekognition_StreamProcessor) SetV__PolygonRegionsOfInterest(v json.RawMessage) *AWS_Rekognition_StreamProcessor {
	t.PolygonRegionsOfInterest = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_Rekognition_StreamProcessor) Set__RoleArn(v cfz.Expression[string]) *AWS_Rekognition_StreamProcessor {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_Rekognition_StreamProcessor) SetV__RoleArn(v string) *AWS_Rekognition_StreamProcessor {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__S3Destination updates property "S3Destination".
func (t *AWS_Rekognition_StreamProcessor) Set__S3Destination(v cfz.Expression[AWS_Rekognition_StreamProcessor_S3Destination]) *AWS_Rekognition_StreamProcessor {
	t.S3Destination = v
	return t
}

// SetV__S3Destination updates property "S3Destination".
func (t *AWS_Rekognition_StreamProcessor) SetV__S3Destination(v AWS_Rekognition_StreamProcessor_S3Destination) *AWS_Rekognition_StreamProcessor {
	t.S3Destination = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Rekognition_StreamProcessor) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Rekognition_StreamProcessor {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Rekognition_StreamProcessor) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Rekognition_StreamProcessor {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Rekognition_StreamProcessor) SetSV__Tags(v ...cfz.Tag) *AWS_Rekognition_StreamProcessor {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Rekognition_StreamProcessor) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Rekognition_StreamProcessor) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Rekognition_StreamProcessor__AttributesMap.Arn))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_Rekognition_StreamProcessor) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Rekognition_StreamProcessor__AttributesMap.Status))
}

// GetAtt__StatusMessage returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StatusMessage
func (t *AWS_Rekognition_StreamProcessor) GetAtt__StatusMessage() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Rekognition_StreamProcessor__AttributesMap.StatusMessage))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Rekognition_StreamProcessor) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Rekognition_StreamProcessor) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_Rekognition_StreamProcessor) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StatusMessage returns a conventionally configured output for an attribute of this resource.
// Attribute: StatusMessage
func (t *AWS_Rekognition_StreamProcessor) GetConventionalOutputAtt__StatusMessage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatusMessage", t.GetAtt__StatusMessage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Rekognition_StreamProcessor) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Rekognition_StreamProcessor

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Rekognition_StreamProcessor) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
