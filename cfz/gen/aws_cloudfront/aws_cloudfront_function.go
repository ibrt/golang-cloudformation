// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudfront

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudFront_Function)(nil)
	_ cfz.Resource                   = (*AWS_CloudFront_Function)(nil)
)

const (
	// AWS_CloudFront_Function__Type is the CloudFormation type for AWS::CloudFront::Function.
	AWS_CloudFront_Function__Type = "AWS::CloudFront::Function"
)

var (
	// AWS_CloudFront_Function__AttributesMap reports all the CloudFormation attributes for AWS::CloudFront::Function.
	AWS_CloudFront_Function__AttributesMap = struct {
		FunctionARN                  string
		FunctionMetadata_FunctionARN string
		Stage                        string
	}{
		FunctionARN:                  "FunctionARN",
		FunctionMetadata_FunctionARN: "FunctionMetadata.FunctionARN",
		Stage:                        "Stage",
	}

	// AWS_CloudFront_Function__AttributesSlice reports all the CloudFormation attributes for AWS::CloudFront::Function.
	AWS_CloudFront_Function__AttributesSlice = []string{
		AWS_CloudFront_Function__AttributesMap.FunctionARN,
		AWS_CloudFront_Function__AttributesMap.FunctionMetadata_FunctionARN,
		AWS_CloudFront_Function__AttributesMap.Stage,
	}
)

var (
	// AWS_CloudFront_Function__PropertiesMap reports all the CloudFormation properties for AWS::CloudFront::Function.
	AWS_CloudFront_Function__PropertiesMap = struct {
		AutoPublish      string
		FunctionCode     string
		FunctionConfig   string
		FunctionMetadata string
		Name             string
	}{
		AutoPublish:      "AutoPublish",
		FunctionCode:     "FunctionCode",
		FunctionConfig:   "FunctionConfig",
		FunctionMetadata: "FunctionMetadata",
		Name:             "Name",
	}

	// AWS_CloudFront_Function__PropertiesSlice reports all the CloudFormation properties for AWS::CloudFront::Function.
	AWS_CloudFront_Function__PropertiesSlice = []string{
		AWS_CloudFront_Function__PropertiesMap.AutoPublish,
		AWS_CloudFront_Function__PropertiesMap.FunctionCode,
		AWS_CloudFront_Function__PropertiesMap.FunctionConfig,
		AWS_CloudFront_Function__PropertiesMap.FunctionMetadata,
		AWS_CloudFront_Function__PropertiesMap.Name,
	}
)

// AWS_CloudFront_Function is a binding for AWS::CloudFront::Function.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html
type AWS_CloudFront_Function struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AutoPublish is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-autopublish
	AutoPublish cfz.Expression[bool] `json:"AutoPublish,omitempty"`

	// FunctionCode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functioncode
	FunctionCode cfz.Expression[string] `json:"FunctionCode,omitempty"`

	// FunctionConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionconfig
	FunctionConfig cfz.Expression[AWS_CloudFront_Function_FunctionConfig] `json:"FunctionConfig,omitempty"`

	// FunctionMetadata is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-functionmetadata
	FunctionMetadata cfz.Expression[AWS_CloudFront_Function_FunctionMetadata] `json:"FunctionMetadata,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-function.html#cfn-cloudfront-function-name
	Name cfz.Expression[string] `json:"Name,omitempty"`
}

// New__AWS_CloudFront_Function initializes a new *AWS_CloudFront_Function.
func New__AWS_CloudFront_Function(logicalName string) *AWS_CloudFront_Function {
	return &AWS_CloudFront_Function{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudFront_Function) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudFront_Function) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudFront_Function) GetType() string {
	return AWS_CloudFront_Function__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudFront_Function) Set__LogicalName(v string) *AWS_CloudFront_Function {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudFront_Function) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudFront_Function {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudFront_Function) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudFront_Function {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudFront_Function) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudFront_Function {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudFront_Function) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudFront_Function {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudFront_Function) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudFront_Function {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudFront_Function) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudFront_Function {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AutoPublish updates property "AutoPublish".
func (t *AWS_CloudFront_Function) Set__AutoPublish(v cfz.Expression[bool]) *AWS_CloudFront_Function {
	t.AutoPublish = v
	return t
}

// SetV__AutoPublish updates property "AutoPublish".
func (t *AWS_CloudFront_Function) SetV__AutoPublish(v bool) *AWS_CloudFront_Function {
	t.AutoPublish = cfz.V(v)
	return t
}

// Set__FunctionCode updates property "FunctionCode".
func (t *AWS_CloudFront_Function) Set__FunctionCode(v cfz.Expression[string]) *AWS_CloudFront_Function {
	t.FunctionCode = v
	return t
}

// SetV__FunctionCode updates property "FunctionCode".
func (t *AWS_CloudFront_Function) SetV__FunctionCode(v string) *AWS_CloudFront_Function {
	t.FunctionCode = cfz.V(v)
	return t
}

// Set__FunctionConfig updates property "FunctionConfig".
func (t *AWS_CloudFront_Function) Set__FunctionConfig(v cfz.Expression[AWS_CloudFront_Function_FunctionConfig]) *AWS_CloudFront_Function {
	t.FunctionConfig = v
	return t
}

// SetV__FunctionConfig updates property "FunctionConfig".
func (t *AWS_CloudFront_Function) SetV__FunctionConfig(v AWS_CloudFront_Function_FunctionConfig) *AWS_CloudFront_Function {
	t.FunctionConfig = cfz.V(v)
	return t
}

// Set__FunctionMetadata updates property "FunctionMetadata".
func (t *AWS_CloudFront_Function) Set__FunctionMetadata(v cfz.Expression[AWS_CloudFront_Function_FunctionMetadata]) *AWS_CloudFront_Function {
	t.FunctionMetadata = v
	return t
}

// SetV__FunctionMetadata updates property "FunctionMetadata".
func (t *AWS_CloudFront_Function) SetV__FunctionMetadata(v AWS_CloudFront_Function_FunctionMetadata) *AWS_CloudFront_Function {
	t.FunctionMetadata = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_CloudFront_Function) Set__Name(v cfz.Expression[string]) *AWS_CloudFront_Function {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_CloudFront_Function) SetV__Name(v string) *AWS_CloudFront_Function {
	t.Name = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudFront_Function) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__FunctionARN returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FunctionARN
func (t *AWS_CloudFront_Function) GetAtt__FunctionARN() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudFront_Function__AttributesMap.FunctionARN))
}

// GetAtt__FunctionMetadata_FunctionARN returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FunctionMetadata.FunctionARN
func (t *AWS_CloudFront_Function) GetAtt__FunctionMetadata_FunctionARN() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudFront_Function__AttributesMap.FunctionMetadata_FunctionARN))
}

// GetAtt__Stage returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Stage
func (t *AWS_CloudFront_Function) GetAtt__Stage() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudFront_Function__AttributesMap.Stage))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudFront_Function) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FunctionARN returns a conventionally configured output for an attribute of this resource.
// Attribute: FunctionARN
func (t *AWS_CloudFront_Function) GetConventionalOutputAtt__FunctionARN(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFunctionARN", t.GetAtt__FunctionARN())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FunctionMetadata_FunctionARN returns a conventionally configured output for an attribute of this resource.
// Attribute: FunctionMetadata.FunctionARN
func (t *AWS_CloudFront_Function) GetConventionalOutputAtt__FunctionMetadata_FunctionARN(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFunctionMetadataFunctionARN", t.GetAtt__FunctionMetadata_FunctionARN())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Stage returns a conventionally configured output for an attribute of this resource.
// Attribute: Stage
func (t *AWS_CloudFront_Function) GetConventionalOutputAtt__Stage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStage", t.GetAtt__Stage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudFront_Function) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudFront_Function

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudFront_Function) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
