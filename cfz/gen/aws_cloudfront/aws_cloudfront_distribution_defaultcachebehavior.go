// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudfront

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_CloudFront_Distribution_DefaultCacheBehavior__Type is the CloudFormation type for AWS::CloudFront::Distribution.DefaultCacheBehavior.
	AWS_CloudFront_Distribution_DefaultCacheBehavior__Type = "AWS::CloudFront::Distribution.DefaultCacheBehavior"
)

var (
	// AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap reports all the CloudFormation properties for AWS::CloudFront::Distribution.DefaultCacheBehavior.
	AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap = struct {
		AllowedMethods             string
		CachePolicyId              string
		CachedMethods              string
		Compress                   string
		DefaultTTL                 string
		FieldLevelEncryptionId     string
		ForwardedValues            string
		FunctionAssociations       string
		LambdaFunctionAssociations string
		MaxTTL                     string
		MinTTL                     string
		OriginRequestPolicyId      string
		RealtimeLogConfigArn       string
		ResponseHeadersPolicyId    string
		SmoothStreaming            string
		TargetOriginId             string
		TrustedKeyGroups           string
		TrustedSigners             string
		ViewerProtocolPolicy       string
	}{
		AllowedMethods:             "AllowedMethods",
		CachePolicyId:              "CachePolicyId",
		CachedMethods:              "CachedMethods",
		Compress:                   "Compress",
		DefaultTTL:                 "DefaultTTL",
		FieldLevelEncryptionId:     "FieldLevelEncryptionId",
		ForwardedValues:            "ForwardedValues",
		FunctionAssociations:       "FunctionAssociations",
		LambdaFunctionAssociations: "LambdaFunctionAssociations",
		MaxTTL:                     "MaxTTL",
		MinTTL:                     "MinTTL",
		OriginRequestPolicyId:      "OriginRequestPolicyId",
		RealtimeLogConfigArn:       "RealtimeLogConfigArn",
		ResponseHeadersPolicyId:    "ResponseHeadersPolicyId",
		SmoothStreaming:            "SmoothStreaming",
		TargetOriginId:             "TargetOriginId",
		TrustedKeyGroups:           "TrustedKeyGroups",
		TrustedSigners:             "TrustedSigners",
		ViewerProtocolPolicy:       "ViewerProtocolPolicy",
	}

	// AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesSlice reports all the CloudFormation properties for AWS::CloudFront::Distribution.DefaultCacheBehavior.
	AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesSlice = []string{
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.AllowedMethods,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.CachePolicyId,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.CachedMethods,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.Compress,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.DefaultTTL,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.FieldLevelEncryptionId,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.ForwardedValues,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.FunctionAssociations,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.LambdaFunctionAssociations,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.MaxTTL,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.MinTTL,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.OriginRequestPolicyId,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.RealtimeLogConfigArn,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.ResponseHeadersPolicyId,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.SmoothStreaming,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.TargetOriginId,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.TrustedKeyGroups,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.TrustedSigners,
		AWS_CloudFront_Distribution_DefaultCacheBehavior__PropertiesMap.ViewerProtocolPolicy,
	}
)

// AWS_CloudFront_Distribution_DefaultCacheBehavior is a binding for AWS::CloudFront::Distribution.DefaultCacheBehavior.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html
type AWS_CloudFront_Distribution_DefaultCacheBehavior struct {
	// AllowedMethods is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-allowedmethods
	AllowedMethods cfz.ExpressionSlice[string] `json:"AllowedMethods,omitempty"`

	// CachePolicyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-cachepolicyid
	CachePolicyId cfz.Expression[string] `json:"CachePolicyId,omitempty"`

	// CachedMethods is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-cachedmethods
	CachedMethods cfz.ExpressionSlice[string] `json:"CachedMethods,omitempty"`

	// Compress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-compress
	Compress cfz.Expression[bool] `json:"Compress,omitempty"`

	// DefaultTTL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-defaultttl
	DefaultTTL cfz.Expression[float64] `json:"DefaultTTL,omitempty"`

	// FieldLevelEncryptionId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-fieldlevelencryptionid
	FieldLevelEncryptionId cfz.Expression[string] `json:"FieldLevelEncryptionId,omitempty"`

	// ForwardedValues is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-forwardedvalues
	ForwardedValues cfz.Expression[AWS_CloudFront_Distribution_ForwardedValues] `json:"ForwardedValues,omitempty"`

	// FunctionAssociations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-functionassociations
	FunctionAssociations cfz.ExpressionSlice[AWS_CloudFront_Distribution_FunctionAssociation] `json:"FunctionAssociations,omitempty"`

	// LambdaFunctionAssociations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-lambdafunctionassociations
	LambdaFunctionAssociations cfz.ExpressionSlice[AWS_CloudFront_Distribution_LambdaFunctionAssociation] `json:"LambdaFunctionAssociations,omitempty"`

	// MaxTTL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-maxttl
	MaxTTL cfz.Expression[float64] `json:"MaxTTL,omitempty"`

	// MinTTL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-minttl
	MinTTL cfz.Expression[float64] `json:"MinTTL,omitempty"`

	// OriginRequestPolicyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-originrequestpolicyid
	OriginRequestPolicyId cfz.Expression[string] `json:"OriginRequestPolicyId,omitempty"`

	// RealtimeLogConfigArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-realtimelogconfigarn
	RealtimeLogConfigArn cfz.Expression[string] `json:"RealtimeLogConfigArn,omitempty"`

	// ResponseHeadersPolicyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-responseheaderspolicyid
	ResponseHeadersPolicyId cfz.Expression[string] `json:"ResponseHeadersPolicyId,omitempty"`

	// SmoothStreaming is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-smoothstreaming
	SmoothStreaming cfz.Expression[bool] `json:"SmoothStreaming,omitempty"`

	// TargetOriginId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-targetoriginid
	TargetOriginId cfz.Expression[string] `json:"TargetOriginId,omitempty"`

	// TrustedKeyGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-trustedkeygroups
	TrustedKeyGroups cfz.ExpressionSlice[string] `json:"TrustedKeyGroups,omitempty"`

	// TrustedSigners is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-trustedsigners
	TrustedSigners cfz.ExpressionSlice[string] `json:"TrustedSigners,omitempty"`

	// ViewerProtocolPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-defaultcachebehavior.html#cfn-cloudfront-distribution-defaultcachebehavior-viewerprotocolpolicy
	ViewerProtocolPolicy cfz.Expression[string] `json:"ViewerProtocolPolicy,omitempty"`
}

// New__AWS_CloudFront_Distribution_DefaultCacheBehavior initializes a new AWS_CloudFront_Distribution_DefaultCacheBehavior.
func New__AWS_CloudFront_Distribution_DefaultCacheBehavior() AWS_CloudFront_Distribution_DefaultCacheBehavior {
	return AWS_CloudFront_Distribution_DefaultCacheBehavior{}
}

// GetType returns the CloudFormation type.
func (AWS_CloudFront_Distribution_DefaultCacheBehavior) GetType() string {
	return AWS_CloudFront_Distribution_DefaultCacheBehavior__Type
}

// Set__AllowedMethods updates property "AllowedMethods".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__AllowedMethods(v cfz.ExpressionSlice[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.AllowedMethods = v
	return t
}

// SetS__AllowedMethods updates property "AllowedMethods".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetS__AllowedMethods(v ...cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.AllowedMethods = cfz.S(v...)
	return t
}

// SetSV__AllowedMethods updates property "AllowedMethods".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetSV__AllowedMethods(v ...string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.AllowedMethods = cfz.SV(v...)
	return t
}

// Set__CachePolicyId updates property "CachePolicyId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__CachePolicyId(v cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.CachePolicyId = v
	return t
}

// SetV__CachePolicyId updates property "CachePolicyId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__CachePolicyId(v string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.CachePolicyId = cfz.V(v)
	return t
}

// Set__CachedMethods updates property "CachedMethods".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__CachedMethods(v cfz.ExpressionSlice[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.CachedMethods = v
	return t
}

// SetS__CachedMethods updates property "CachedMethods".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetS__CachedMethods(v ...cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.CachedMethods = cfz.S(v...)
	return t
}

// SetSV__CachedMethods updates property "CachedMethods".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetSV__CachedMethods(v ...string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.CachedMethods = cfz.SV(v...)
	return t
}

// Set__Compress updates property "Compress".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__Compress(v cfz.Expression[bool]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.Compress = v
	return t
}

// SetV__Compress updates property "Compress".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__Compress(v bool) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.Compress = cfz.V(v)
	return t
}

// Set__DefaultTTL updates property "DefaultTTL".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__DefaultTTL(v cfz.Expression[float64]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.DefaultTTL = v
	return t
}

// SetV__DefaultTTL updates property "DefaultTTL".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__DefaultTTL(v float64) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.DefaultTTL = cfz.V(v)
	return t
}

// Set__FieldLevelEncryptionId updates property "FieldLevelEncryptionId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__FieldLevelEncryptionId(v cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.FieldLevelEncryptionId = v
	return t
}

// SetV__FieldLevelEncryptionId updates property "FieldLevelEncryptionId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__FieldLevelEncryptionId(v string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.FieldLevelEncryptionId = cfz.V(v)
	return t
}

// Set__ForwardedValues updates property "ForwardedValues".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__ForwardedValues(v cfz.Expression[AWS_CloudFront_Distribution_ForwardedValues]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.ForwardedValues = v
	return t
}

// SetV__ForwardedValues updates property "ForwardedValues".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__ForwardedValues(v AWS_CloudFront_Distribution_ForwardedValues) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.ForwardedValues = cfz.V(v)
	return t
}

// Set__FunctionAssociations updates property "FunctionAssociations".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__FunctionAssociations(v cfz.ExpressionSlice[AWS_CloudFront_Distribution_FunctionAssociation]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.FunctionAssociations = v
	return t
}

// SetS__FunctionAssociations updates property "FunctionAssociations".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetS__FunctionAssociations(v ...cfz.Expression[AWS_CloudFront_Distribution_FunctionAssociation]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.FunctionAssociations = cfz.S(v...)
	return t
}

// SetSV__FunctionAssociations updates property "FunctionAssociations".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetSV__FunctionAssociations(v ...AWS_CloudFront_Distribution_FunctionAssociation) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.FunctionAssociations = cfz.SV(v...)
	return t
}

// Set__LambdaFunctionAssociations updates property "LambdaFunctionAssociations".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__LambdaFunctionAssociations(v cfz.ExpressionSlice[AWS_CloudFront_Distribution_LambdaFunctionAssociation]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.LambdaFunctionAssociations = v
	return t
}

// SetS__LambdaFunctionAssociations updates property "LambdaFunctionAssociations".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetS__LambdaFunctionAssociations(v ...cfz.Expression[AWS_CloudFront_Distribution_LambdaFunctionAssociation]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.LambdaFunctionAssociations = cfz.S(v...)
	return t
}

// SetSV__LambdaFunctionAssociations updates property "LambdaFunctionAssociations".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetSV__LambdaFunctionAssociations(v ...AWS_CloudFront_Distribution_LambdaFunctionAssociation) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.LambdaFunctionAssociations = cfz.SV(v...)
	return t
}

// Set__MaxTTL updates property "MaxTTL".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__MaxTTL(v cfz.Expression[float64]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.MaxTTL = v
	return t
}

// SetV__MaxTTL updates property "MaxTTL".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__MaxTTL(v float64) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.MaxTTL = cfz.V(v)
	return t
}

// Set__MinTTL updates property "MinTTL".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__MinTTL(v cfz.Expression[float64]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.MinTTL = v
	return t
}

// SetV__MinTTL updates property "MinTTL".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__MinTTL(v float64) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.MinTTL = cfz.V(v)
	return t
}

// Set__OriginRequestPolicyId updates property "OriginRequestPolicyId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__OriginRequestPolicyId(v cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.OriginRequestPolicyId = v
	return t
}

// SetV__OriginRequestPolicyId updates property "OriginRequestPolicyId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__OriginRequestPolicyId(v string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.OriginRequestPolicyId = cfz.V(v)
	return t
}

// Set__RealtimeLogConfigArn updates property "RealtimeLogConfigArn".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__RealtimeLogConfigArn(v cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.RealtimeLogConfigArn = v
	return t
}

// SetV__RealtimeLogConfigArn updates property "RealtimeLogConfigArn".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__RealtimeLogConfigArn(v string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.RealtimeLogConfigArn = cfz.V(v)
	return t
}

// Set__ResponseHeadersPolicyId updates property "ResponseHeadersPolicyId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__ResponseHeadersPolicyId(v cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.ResponseHeadersPolicyId = v
	return t
}

// SetV__ResponseHeadersPolicyId updates property "ResponseHeadersPolicyId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__ResponseHeadersPolicyId(v string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.ResponseHeadersPolicyId = cfz.V(v)
	return t
}

// Set__SmoothStreaming updates property "SmoothStreaming".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__SmoothStreaming(v cfz.Expression[bool]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.SmoothStreaming = v
	return t
}

// SetV__SmoothStreaming updates property "SmoothStreaming".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__SmoothStreaming(v bool) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.SmoothStreaming = cfz.V(v)
	return t
}

// Set__TargetOriginId updates property "TargetOriginId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__TargetOriginId(v cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.TargetOriginId = v
	return t
}

// SetV__TargetOriginId updates property "TargetOriginId".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__TargetOriginId(v string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.TargetOriginId = cfz.V(v)
	return t
}

// Set__TrustedKeyGroups updates property "TrustedKeyGroups".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__TrustedKeyGroups(v cfz.ExpressionSlice[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.TrustedKeyGroups = v
	return t
}

// SetS__TrustedKeyGroups updates property "TrustedKeyGroups".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetS__TrustedKeyGroups(v ...cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.TrustedKeyGroups = cfz.S(v...)
	return t
}

// SetSV__TrustedKeyGroups updates property "TrustedKeyGroups".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetSV__TrustedKeyGroups(v ...string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.TrustedKeyGroups = cfz.SV(v...)
	return t
}

// Set__TrustedSigners updates property "TrustedSigners".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__TrustedSigners(v cfz.ExpressionSlice[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.TrustedSigners = v
	return t
}

// SetS__TrustedSigners updates property "TrustedSigners".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetS__TrustedSigners(v ...cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.TrustedSigners = cfz.S(v...)
	return t
}

// SetSV__TrustedSigners updates property "TrustedSigners".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetSV__TrustedSigners(v ...string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.TrustedSigners = cfz.SV(v...)
	return t
}

// Set__ViewerProtocolPolicy updates property "ViewerProtocolPolicy".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) Set__ViewerProtocolPolicy(v cfz.Expression[string]) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.ViewerProtocolPolicy = v
	return t
}

// SetV__ViewerProtocolPolicy updates property "ViewerProtocolPolicy".
func (t AWS_CloudFront_Distribution_DefaultCacheBehavior) SetV__ViewerProtocolPolicy(v string) AWS_CloudFront_Distribution_DefaultCacheBehavior {
	t.ViewerProtocolPolicy = cfz.V(v)
	return t
}
