// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudfront

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudFront_MonitoringSubscription)(nil)
	_ cfz.Resource                   = (*AWS_CloudFront_MonitoringSubscription)(nil)
)

const (
	// AWS_CloudFront_MonitoringSubscription__Type is the CloudFormation type for AWS::CloudFront::MonitoringSubscription.
	AWS_CloudFront_MonitoringSubscription__Type = "AWS::CloudFront::MonitoringSubscription"
)

var (
	// AWS_CloudFront_MonitoringSubscription__PropertiesMap reports all the CloudFormation properties for AWS::CloudFront::MonitoringSubscription.
	AWS_CloudFront_MonitoringSubscription__PropertiesMap = struct {
		DistributionId         string
		MonitoringSubscription string
	}{
		DistributionId:         "DistributionId",
		MonitoringSubscription: "MonitoringSubscription",
	}

	// AWS_CloudFront_MonitoringSubscription__PropertiesSlice reports all the CloudFormation properties for AWS::CloudFront::MonitoringSubscription.
	AWS_CloudFront_MonitoringSubscription__PropertiesSlice = []string{
		AWS_CloudFront_MonitoringSubscription__PropertiesMap.DistributionId,
		AWS_CloudFront_MonitoringSubscription__PropertiesMap.MonitoringSubscription,
	}
)

// AWS_CloudFront_MonitoringSubscription is a binding for AWS::CloudFront::MonitoringSubscription.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html
type AWS_CloudFront_MonitoringSubscription struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DistributionId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html#cfn-cloudfront-monitoringsubscription-distributionid
	DistributionId cfz.Expression[string] `json:"DistributionId,omitempty"`

	// MonitoringSubscription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-monitoringsubscription.html#cfn-cloudfront-monitoringsubscription-monitoringsubscription
	MonitoringSubscription cfz.Expression[AWS_CloudFront_MonitoringSubscription_MonitoringSubscription] `json:"MonitoringSubscription,omitempty"`
}

// New__AWS_CloudFront_MonitoringSubscription initializes a new *AWS_CloudFront_MonitoringSubscription.
func New__AWS_CloudFront_MonitoringSubscription(logicalName string) *AWS_CloudFront_MonitoringSubscription {
	return &AWS_CloudFront_MonitoringSubscription{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudFront_MonitoringSubscription) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudFront_MonitoringSubscription) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudFront_MonitoringSubscription) GetType() string {
	return AWS_CloudFront_MonitoringSubscription__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudFront_MonitoringSubscription) Set__LogicalName(v string) *AWS_CloudFront_MonitoringSubscription {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudFront_MonitoringSubscription) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudFront_MonitoringSubscription {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudFront_MonitoringSubscription) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudFront_MonitoringSubscription {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudFront_MonitoringSubscription) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudFront_MonitoringSubscription {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudFront_MonitoringSubscription) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudFront_MonitoringSubscription {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudFront_MonitoringSubscription) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudFront_MonitoringSubscription {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudFront_MonitoringSubscription) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudFront_MonitoringSubscription {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DistributionId updates property "DistributionId".
func (t *AWS_CloudFront_MonitoringSubscription) Set__DistributionId(v cfz.Expression[string]) *AWS_CloudFront_MonitoringSubscription {
	t.DistributionId = v
	return t
}

// SetV__DistributionId updates property "DistributionId".
func (t *AWS_CloudFront_MonitoringSubscription) SetV__DistributionId(v string) *AWS_CloudFront_MonitoringSubscription {
	t.DistributionId = cfz.V(v)
	return t
}

// Set__MonitoringSubscription updates property "MonitoringSubscription".
func (t *AWS_CloudFront_MonitoringSubscription) Set__MonitoringSubscription(v cfz.Expression[AWS_CloudFront_MonitoringSubscription_MonitoringSubscription]) *AWS_CloudFront_MonitoringSubscription {
	t.MonitoringSubscription = v
	return t
}

// SetV__MonitoringSubscription updates property "MonitoringSubscription".
func (t *AWS_CloudFront_MonitoringSubscription) SetV__MonitoringSubscription(v AWS_CloudFront_MonitoringSubscription_MonitoringSubscription) *AWS_CloudFront_MonitoringSubscription {
	t.MonitoringSubscription = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudFront_MonitoringSubscription) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudFront_MonitoringSubscription) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudFront_MonitoringSubscription) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudFront_MonitoringSubscription

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudFront_MonitoringSubscription) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
