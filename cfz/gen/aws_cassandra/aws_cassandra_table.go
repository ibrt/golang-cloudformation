// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cassandra

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Cassandra_Table)(nil)
	_ cfz.Resource                   = (*AWS_Cassandra_Table)(nil)
)

const (
	// AWS_Cassandra_Table__Type is the CloudFormation type for AWS::Cassandra::Table.
	AWS_Cassandra_Table__Type = "AWS::Cassandra::Table"
)

var (
	// AWS_Cassandra_Table__PropertiesMap reports all the CloudFormation properties for AWS::Cassandra::Table.
	AWS_Cassandra_Table__PropertiesMap = struct {
		AutoScalingSpecifications   string
		BillingMode                 string
		ClientSideTimestampsEnabled string
		ClusteringKeyColumns        string
		DefaultTimeToLive           string
		EncryptionSpecification     string
		KeyspaceName                string
		PartitionKeyColumns         string
		PointInTimeRecoveryEnabled  string
		RegularColumns              string
		ReplicaSpecifications       string
		TableName                   string
		Tags                        string
	}{
		AutoScalingSpecifications:   "AutoScalingSpecifications",
		BillingMode:                 "BillingMode",
		ClientSideTimestampsEnabled: "ClientSideTimestampsEnabled",
		ClusteringKeyColumns:        "ClusteringKeyColumns",
		DefaultTimeToLive:           "DefaultTimeToLive",
		EncryptionSpecification:     "EncryptionSpecification",
		KeyspaceName:                "KeyspaceName",
		PartitionKeyColumns:         "PartitionKeyColumns",
		PointInTimeRecoveryEnabled:  "PointInTimeRecoveryEnabled",
		RegularColumns:              "RegularColumns",
		ReplicaSpecifications:       "ReplicaSpecifications",
		TableName:                   "TableName",
		Tags:                        "Tags",
	}

	// AWS_Cassandra_Table__PropertiesSlice reports all the CloudFormation properties for AWS::Cassandra::Table.
	AWS_Cassandra_Table__PropertiesSlice = []string{
		AWS_Cassandra_Table__PropertiesMap.AutoScalingSpecifications,
		AWS_Cassandra_Table__PropertiesMap.BillingMode,
		AWS_Cassandra_Table__PropertiesMap.ClientSideTimestampsEnabled,
		AWS_Cassandra_Table__PropertiesMap.ClusteringKeyColumns,
		AWS_Cassandra_Table__PropertiesMap.DefaultTimeToLive,
		AWS_Cassandra_Table__PropertiesMap.EncryptionSpecification,
		AWS_Cassandra_Table__PropertiesMap.KeyspaceName,
		AWS_Cassandra_Table__PropertiesMap.PartitionKeyColumns,
		AWS_Cassandra_Table__PropertiesMap.PointInTimeRecoveryEnabled,
		AWS_Cassandra_Table__PropertiesMap.RegularColumns,
		AWS_Cassandra_Table__PropertiesMap.ReplicaSpecifications,
		AWS_Cassandra_Table__PropertiesMap.TableName,
		AWS_Cassandra_Table__PropertiesMap.Tags,
	}
)

// AWS_Cassandra_Table is a binding for AWS::Cassandra::Table.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html
type AWS_Cassandra_Table struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AutoScalingSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-autoscalingspecifications
	AutoScalingSpecifications cfz.Expression[AWS_Cassandra_Table_AutoScalingSpecification] `json:"AutoScalingSpecifications,omitempty"`

	// BillingMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode
	BillingMode cfz.Expression[AWS_Cassandra_Table_BillingMode] `json:"BillingMode,omitempty"`

	// ClientSideTimestampsEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clientsidetimestampsenabled
	ClientSideTimestampsEnabled cfz.Expression[bool] `json:"ClientSideTimestampsEnabled,omitempty"`

	// ClusteringKeyColumns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns
	ClusteringKeyColumns cfz.ExpressionSlice[AWS_Cassandra_Table_ClusteringKeyColumn] `json:"ClusteringKeyColumns,omitempty"`

	// DefaultTimeToLive is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-defaulttimetolive
	DefaultTimeToLive cfz.Expression[int32] `json:"DefaultTimeToLive,omitempty"`

	// EncryptionSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-encryptionspecification
	EncryptionSpecification cfz.Expression[AWS_Cassandra_Table_EncryptionSpecification] `json:"EncryptionSpecification,omitempty"`

	// KeyspaceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-keyspacename
	KeyspaceName cfz.Expression[string] `json:"KeyspaceName,omitempty"`

	// PartitionKeyColumns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns
	PartitionKeyColumns cfz.ExpressionSlice[AWS_Cassandra_Table_Column] `json:"PartitionKeyColumns,omitempty"`

	// PointInTimeRecoveryEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-pointintimerecoveryenabled
	PointInTimeRecoveryEnabled cfz.Expression[bool] `json:"PointInTimeRecoveryEnabled,omitempty"`

	// RegularColumns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns
	RegularColumns cfz.ExpressionSlice[AWS_Cassandra_Table_Column] `json:"RegularColumns,omitempty"`

	// ReplicaSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-replicaspecifications
	ReplicaSpecifications cfz.ExpressionSlice[AWS_Cassandra_Table_ReplicaSpecification] `json:"ReplicaSpecifications,omitempty"`

	// TableName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tablename
	TableName cfz.Expression[string] `json:"TableName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Cassandra_Table initializes a new *AWS_Cassandra_Table.
func New__AWS_Cassandra_Table(logicalName string) *AWS_Cassandra_Table {
	return &AWS_Cassandra_Table{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Cassandra_Table) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Cassandra_Table) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Cassandra_Table) GetType() string {
	return AWS_Cassandra_Table__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Cassandra_Table) Set__LogicalName(v string) *AWS_Cassandra_Table {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Cassandra_Table) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Cassandra_Table {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Cassandra_Table) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Cassandra_Table {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Cassandra_Table) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Cassandra_Table {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Cassandra_Table) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Cassandra_Table {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Cassandra_Table) Set__RequestedOutputs(v []cfz.Output) *AWS_Cassandra_Table {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Cassandra_Table) Add__RequestedOutputs(v ...cfz.Output) *AWS_Cassandra_Table {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AutoScalingSpecifications updates property "AutoScalingSpecifications".
func (t *AWS_Cassandra_Table) Set__AutoScalingSpecifications(v cfz.Expression[AWS_Cassandra_Table_AutoScalingSpecification]) *AWS_Cassandra_Table {
	t.AutoScalingSpecifications = v
	return t
}

// SetV__AutoScalingSpecifications updates property "AutoScalingSpecifications".
func (t *AWS_Cassandra_Table) SetV__AutoScalingSpecifications(v AWS_Cassandra_Table_AutoScalingSpecification) *AWS_Cassandra_Table {
	t.AutoScalingSpecifications = cfz.V(v)
	return t
}

// Set__BillingMode updates property "BillingMode".
func (t *AWS_Cassandra_Table) Set__BillingMode(v cfz.Expression[AWS_Cassandra_Table_BillingMode]) *AWS_Cassandra_Table {
	t.BillingMode = v
	return t
}

// SetV__BillingMode updates property "BillingMode".
func (t *AWS_Cassandra_Table) SetV__BillingMode(v AWS_Cassandra_Table_BillingMode) *AWS_Cassandra_Table {
	t.BillingMode = cfz.V(v)
	return t
}

// Set__ClientSideTimestampsEnabled updates property "ClientSideTimestampsEnabled".
func (t *AWS_Cassandra_Table) Set__ClientSideTimestampsEnabled(v cfz.Expression[bool]) *AWS_Cassandra_Table {
	t.ClientSideTimestampsEnabled = v
	return t
}

// SetV__ClientSideTimestampsEnabled updates property "ClientSideTimestampsEnabled".
func (t *AWS_Cassandra_Table) SetV__ClientSideTimestampsEnabled(v bool) *AWS_Cassandra_Table {
	t.ClientSideTimestampsEnabled = cfz.V(v)
	return t
}

// Set__ClusteringKeyColumns updates property "ClusteringKeyColumns".
func (t *AWS_Cassandra_Table) Set__ClusteringKeyColumns(v cfz.ExpressionSlice[AWS_Cassandra_Table_ClusteringKeyColumn]) *AWS_Cassandra_Table {
	t.ClusteringKeyColumns = v
	return t
}

// SetS__ClusteringKeyColumns updates property "ClusteringKeyColumns".
func (t *AWS_Cassandra_Table) SetS__ClusteringKeyColumns(v ...cfz.Expression[AWS_Cassandra_Table_ClusteringKeyColumn]) *AWS_Cassandra_Table {
	t.ClusteringKeyColumns = cfz.S(v...)
	return t
}

// SetSV__ClusteringKeyColumns updates property "ClusteringKeyColumns".
func (t *AWS_Cassandra_Table) SetSV__ClusteringKeyColumns(v ...AWS_Cassandra_Table_ClusteringKeyColumn) *AWS_Cassandra_Table {
	t.ClusteringKeyColumns = cfz.SV(v...)
	return t
}

// Set__DefaultTimeToLive updates property "DefaultTimeToLive".
func (t *AWS_Cassandra_Table) Set__DefaultTimeToLive(v cfz.Expression[int32]) *AWS_Cassandra_Table {
	t.DefaultTimeToLive = v
	return t
}

// SetV__DefaultTimeToLive updates property "DefaultTimeToLive".
func (t *AWS_Cassandra_Table) SetV__DefaultTimeToLive(v int32) *AWS_Cassandra_Table {
	t.DefaultTimeToLive = cfz.V(v)
	return t
}

// Set__EncryptionSpecification updates property "EncryptionSpecification".
func (t *AWS_Cassandra_Table) Set__EncryptionSpecification(v cfz.Expression[AWS_Cassandra_Table_EncryptionSpecification]) *AWS_Cassandra_Table {
	t.EncryptionSpecification = v
	return t
}

// SetV__EncryptionSpecification updates property "EncryptionSpecification".
func (t *AWS_Cassandra_Table) SetV__EncryptionSpecification(v AWS_Cassandra_Table_EncryptionSpecification) *AWS_Cassandra_Table {
	t.EncryptionSpecification = cfz.V(v)
	return t
}

// Set__KeyspaceName updates property "KeyspaceName".
func (t *AWS_Cassandra_Table) Set__KeyspaceName(v cfz.Expression[string]) *AWS_Cassandra_Table {
	t.KeyspaceName = v
	return t
}

// SetV__KeyspaceName updates property "KeyspaceName".
func (t *AWS_Cassandra_Table) SetV__KeyspaceName(v string) *AWS_Cassandra_Table {
	t.KeyspaceName = cfz.V(v)
	return t
}

// Set__PartitionKeyColumns updates property "PartitionKeyColumns".
func (t *AWS_Cassandra_Table) Set__PartitionKeyColumns(v cfz.ExpressionSlice[AWS_Cassandra_Table_Column]) *AWS_Cassandra_Table {
	t.PartitionKeyColumns = v
	return t
}

// SetS__PartitionKeyColumns updates property "PartitionKeyColumns".
func (t *AWS_Cassandra_Table) SetS__PartitionKeyColumns(v ...cfz.Expression[AWS_Cassandra_Table_Column]) *AWS_Cassandra_Table {
	t.PartitionKeyColumns = cfz.S(v...)
	return t
}

// SetSV__PartitionKeyColumns updates property "PartitionKeyColumns".
func (t *AWS_Cassandra_Table) SetSV__PartitionKeyColumns(v ...AWS_Cassandra_Table_Column) *AWS_Cassandra_Table {
	t.PartitionKeyColumns = cfz.SV(v...)
	return t
}

// Set__PointInTimeRecoveryEnabled updates property "PointInTimeRecoveryEnabled".
func (t *AWS_Cassandra_Table) Set__PointInTimeRecoveryEnabled(v cfz.Expression[bool]) *AWS_Cassandra_Table {
	t.PointInTimeRecoveryEnabled = v
	return t
}

// SetV__PointInTimeRecoveryEnabled updates property "PointInTimeRecoveryEnabled".
func (t *AWS_Cassandra_Table) SetV__PointInTimeRecoveryEnabled(v bool) *AWS_Cassandra_Table {
	t.PointInTimeRecoveryEnabled = cfz.V(v)
	return t
}

// Set__RegularColumns updates property "RegularColumns".
func (t *AWS_Cassandra_Table) Set__RegularColumns(v cfz.ExpressionSlice[AWS_Cassandra_Table_Column]) *AWS_Cassandra_Table {
	t.RegularColumns = v
	return t
}

// SetS__RegularColumns updates property "RegularColumns".
func (t *AWS_Cassandra_Table) SetS__RegularColumns(v ...cfz.Expression[AWS_Cassandra_Table_Column]) *AWS_Cassandra_Table {
	t.RegularColumns = cfz.S(v...)
	return t
}

// SetSV__RegularColumns updates property "RegularColumns".
func (t *AWS_Cassandra_Table) SetSV__RegularColumns(v ...AWS_Cassandra_Table_Column) *AWS_Cassandra_Table {
	t.RegularColumns = cfz.SV(v...)
	return t
}

// Set__ReplicaSpecifications updates property "ReplicaSpecifications".
func (t *AWS_Cassandra_Table) Set__ReplicaSpecifications(v cfz.ExpressionSlice[AWS_Cassandra_Table_ReplicaSpecification]) *AWS_Cassandra_Table {
	t.ReplicaSpecifications = v
	return t
}

// SetS__ReplicaSpecifications updates property "ReplicaSpecifications".
func (t *AWS_Cassandra_Table) SetS__ReplicaSpecifications(v ...cfz.Expression[AWS_Cassandra_Table_ReplicaSpecification]) *AWS_Cassandra_Table {
	t.ReplicaSpecifications = cfz.S(v...)
	return t
}

// SetSV__ReplicaSpecifications updates property "ReplicaSpecifications".
func (t *AWS_Cassandra_Table) SetSV__ReplicaSpecifications(v ...AWS_Cassandra_Table_ReplicaSpecification) *AWS_Cassandra_Table {
	t.ReplicaSpecifications = cfz.SV(v...)
	return t
}

// Set__TableName updates property "TableName".
func (t *AWS_Cassandra_Table) Set__TableName(v cfz.Expression[string]) *AWS_Cassandra_Table {
	t.TableName = v
	return t
}

// SetV__TableName updates property "TableName".
func (t *AWS_Cassandra_Table) SetV__TableName(v string) *AWS_Cassandra_Table {
	t.TableName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Cassandra_Table) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Cassandra_Table {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Cassandra_Table) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Cassandra_Table {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Cassandra_Table) SetSV__Tags(v ...cfz.Tag) *AWS_Cassandra_Table {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Cassandra_Table) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Cassandra_Table) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Cassandra_Table) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Cassandra_Table

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Cassandra_Table) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
