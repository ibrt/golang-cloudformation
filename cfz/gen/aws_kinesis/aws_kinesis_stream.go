// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_kinesis

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Kinesis_Stream)(nil)
	_ cfz.Resource                   = (*AWS_Kinesis_Stream)(nil)
)

const (
	// AWS_Kinesis_Stream__Type is the CloudFormation type for AWS::Kinesis::Stream.
	AWS_Kinesis_Stream__Type = "AWS::Kinesis::Stream"
)

var (
	// AWS_Kinesis_Stream__AttributesMap reports all the CloudFormation attributes for AWS::Kinesis::Stream.
	AWS_Kinesis_Stream__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_Kinesis_Stream__AttributesSlice reports all the CloudFormation attributes for AWS::Kinesis::Stream.
	AWS_Kinesis_Stream__AttributesSlice = []string{
		AWS_Kinesis_Stream__AttributesMap.Arn,
	}
)

var (
	// AWS_Kinesis_Stream__PropertiesMap reports all the CloudFormation properties for AWS::Kinesis::Stream.
	AWS_Kinesis_Stream__PropertiesMap = struct {
		Name                 string
		RetentionPeriodHours string
		ShardCount           string
		StreamEncryption     string
		StreamModeDetails    string
		Tags                 string
	}{
		Name:                 "Name",
		RetentionPeriodHours: "RetentionPeriodHours",
		ShardCount:           "ShardCount",
		StreamEncryption:     "StreamEncryption",
		StreamModeDetails:    "StreamModeDetails",
		Tags:                 "Tags",
	}

	// AWS_Kinesis_Stream__PropertiesSlice reports all the CloudFormation properties for AWS::Kinesis::Stream.
	AWS_Kinesis_Stream__PropertiesSlice = []string{
		AWS_Kinesis_Stream__PropertiesMap.Name,
		AWS_Kinesis_Stream__PropertiesMap.RetentionPeriodHours,
		AWS_Kinesis_Stream__PropertiesMap.ShardCount,
		AWS_Kinesis_Stream__PropertiesMap.StreamEncryption,
		AWS_Kinesis_Stream__PropertiesMap.StreamModeDetails,
		AWS_Kinesis_Stream__PropertiesMap.Tags,
	}
)

// AWS_Kinesis_Stream is a binding for AWS::Kinesis::Stream.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html
type AWS_Kinesis_Stream struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RetentionPeriodHours is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-retentionperiodhours
	RetentionPeriodHours cfz.Expression[int32] `json:"RetentionPeriodHours,omitempty"`

	// ShardCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-shardcount
	ShardCount cfz.Expression[int32] `json:"ShardCount,omitempty"`

	// StreamEncryption is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streamencryption
	StreamEncryption cfz.Expression[AWS_Kinesis_Stream_StreamEncryption] `json:"StreamEncryption,omitempty"`

	// StreamModeDetails is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-streammodedetails
	StreamModeDetails cfz.Expression[AWS_Kinesis_Stream_StreamModeDetails] `json:"StreamModeDetails,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesis-stream.html#cfn-kinesis-stream-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Kinesis_Stream initializes a new *AWS_Kinesis_Stream.
func New__AWS_Kinesis_Stream(logicalName string) *AWS_Kinesis_Stream {
	return &AWS_Kinesis_Stream{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Kinesis_Stream) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Kinesis_Stream) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Kinesis_Stream) GetType() string {
	return AWS_Kinesis_Stream__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Kinesis_Stream) Set__LogicalName(v string) *AWS_Kinesis_Stream {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Kinesis_Stream) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Kinesis_Stream {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Kinesis_Stream) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Kinesis_Stream {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Kinesis_Stream) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Kinesis_Stream {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Kinesis_Stream) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Kinesis_Stream {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Kinesis_Stream) Set__RequestedOutputs(v []cfz.Output) *AWS_Kinesis_Stream {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Kinesis_Stream) Add__RequestedOutputs(v ...cfz.Output) *AWS_Kinesis_Stream {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Kinesis_Stream) Set__Name(v cfz.Expression[string]) *AWS_Kinesis_Stream {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Kinesis_Stream) SetV__Name(v string) *AWS_Kinesis_Stream {
	t.Name = cfz.V(v)
	return t
}

// Set__RetentionPeriodHours updates property "RetentionPeriodHours".
func (t *AWS_Kinesis_Stream) Set__RetentionPeriodHours(v cfz.Expression[int32]) *AWS_Kinesis_Stream {
	t.RetentionPeriodHours = v
	return t
}

// SetV__RetentionPeriodHours updates property "RetentionPeriodHours".
func (t *AWS_Kinesis_Stream) SetV__RetentionPeriodHours(v int32) *AWS_Kinesis_Stream {
	t.RetentionPeriodHours = cfz.V(v)
	return t
}

// Set__ShardCount updates property "ShardCount".
func (t *AWS_Kinesis_Stream) Set__ShardCount(v cfz.Expression[int32]) *AWS_Kinesis_Stream {
	t.ShardCount = v
	return t
}

// SetV__ShardCount updates property "ShardCount".
func (t *AWS_Kinesis_Stream) SetV__ShardCount(v int32) *AWS_Kinesis_Stream {
	t.ShardCount = cfz.V(v)
	return t
}

// Set__StreamEncryption updates property "StreamEncryption".
func (t *AWS_Kinesis_Stream) Set__StreamEncryption(v cfz.Expression[AWS_Kinesis_Stream_StreamEncryption]) *AWS_Kinesis_Stream {
	t.StreamEncryption = v
	return t
}

// SetV__StreamEncryption updates property "StreamEncryption".
func (t *AWS_Kinesis_Stream) SetV__StreamEncryption(v AWS_Kinesis_Stream_StreamEncryption) *AWS_Kinesis_Stream {
	t.StreamEncryption = cfz.V(v)
	return t
}

// Set__StreamModeDetails updates property "StreamModeDetails".
func (t *AWS_Kinesis_Stream) Set__StreamModeDetails(v cfz.Expression[AWS_Kinesis_Stream_StreamModeDetails]) *AWS_Kinesis_Stream {
	t.StreamModeDetails = v
	return t
}

// SetV__StreamModeDetails updates property "StreamModeDetails".
func (t *AWS_Kinesis_Stream) SetV__StreamModeDetails(v AWS_Kinesis_Stream_StreamModeDetails) *AWS_Kinesis_Stream {
	t.StreamModeDetails = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Kinesis_Stream) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Kinesis_Stream {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Kinesis_Stream) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Kinesis_Stream {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Kinesis_Stream) SetSV__Tags(v ...cfz.Tag) *AWS_Kinesis_Stream {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Kinesis_Stream) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Kinesis_Stream) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Kinesis_Stream__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Kinesis_Stream) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Kinesis_Stream) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Kinesis_Stream) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Kinesis_Stream

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Kinesis_Stream) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
