// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appsync

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppSync_SourceApiAssociation)(nil)
	_ cfz.Resource                   = (*AWS_AppSync_SourceApiAssociation)(nil)
)

const (
	// AWS_AppSync_SourceApiAssociation__Type is the CloudFormation type for AWS::AppSync::SourceApiAssociation.
	AWS_AppSync_SourceApiAssociation__Type = "AWS::AppSync::SourceApiAssociation"
)

var (
	// AWS_AppSync_SourceApiAssociation__AttributesMap reports all the CloudFormation attributes for AWS::AppSync::SourceApiAssociation.
	AWS_AppSync_SourceApiAssociation__AttributesMap = struct {
		AssociationArn                   string
		AssociationId                    string
		LastSuccessfulMergeDate          string
		MergedApiArn                     string
		MergedApiId                      string
		SourceApiArn                     string
		SourceApiAssociationStatus       string
		SourceApiAssociationStatusDetail string
		SourceApiId                      string
	}{
		AssociationArn:                   "AssociationArn",
		AssociationId:                    "AssociationId",
		LastSuccessfulMergeDate:          "LastSuccessfulMergeDate",
		MergedApiArn:                     "MergedApiArn",
		MergedApiId:                      "MergedApiId",
		SourceApiArn:                     "SourceApiArn",
		SourceApiAssociationStatus:       "SourceApiAssociationStatus",
		SourceApiAssociationStatusDetail: "SourceApiAssociationStatusDetail",
		SourceApiId:                      "SourceApiId",
	}

	// AWS_AppSync_SourceApiAssociation__AttributesSlice reports all the CloudFormation attributes for AWS::AppSync::SourceApiAssociation.
	AWS_AppSync_SourceApiAssociation__AttributesSlice = []string{
		AWS_AppSync_SourceApiAssociation__AttributesMap.AssociationArn,
		AWS_AppSync_SourceApiAssociation__AttributesMap.AssociationId,
		AWS_AppSync_SourceApiAssociation__AttributesMap.LastSuccessfulMergeDate,
		AWS_AppSync_SourceApiAssociation__AttributesMap.MergedApiArn,
		AWS_AppSync_SourceApiAssociation__AttributesMap.MergedApiId,
		AWS_AppSync_SourceApiAssociation__AttributesMap.SourceApiArn,
		AWS_AppSync_SourceApiAssociation__AttributesMap.SourceApiAssociationStatus,
		AWS_AppSync_SourceApiAssociation__AttributesMap.SourceApiAssociationStatusDetail,
		AWS_AppSync_SourceApiAssociation__AttributesMap.SourceApiId,
	}
)

var (
	// AWS_AppSync_SourceApiAssociation__PropertiesMap reports all the CloudFormation properties for AWS::AppSync::SourceApiAssociation.
	AWS_AppSync_SourceApiAssociation__PropertiesMap = struct {
		Description                string
		MergedApiIdentifier        string
		SourceApiAssociationConfig string
		SourceApiIdentifier        string
	}{
		Description:                "Description",
		MergedApiIdentifier:        "MergedApiIdentifier",
		SourceApiAssociationConfig: "SourceApiAssociationConfig",
		SourceApiIdentifier:        "SourceApiIdentifier",
	}

	// AWS_AppSync_SourceApiAssociation__PropertiesSlice reports all the CloudFormation properties for AWS::AppSync::SourceApiAssociation.
	AWS_AppSync_SourceApiAssociation__PropertiesSlice = []string{
		AWS_AppSync_SourceApiAssociation__PropertiesMap.Description,
		AWS_AppSync_SourceApiAssociation__PropertiesMap.MergedApiIdentifier,
		AWS_AppSync_SourceApiAssociation__PropertiesMap.SourceApiAssociationConfig,
		AWS_AppSync_SourceApiAssociation__PropertiesMap.SourceApiIdentifier,
	}
)

// AWS_AppSync_SourceApiAssociation is a binding for AWS::AppSync::SourceApiAssociation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html
type AWS_AppSync_SourceApiAssociation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// MergedApiIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-mergedapiidentifier
	MergedApiIdentifier cfz.Expression[string] `json:"MergedApiIdentifier,omitempty"`

	// SourceApiAssociationConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-sourceapiassociationconfig
	SourceApiAssociationConfig cfz.Expression[AWS_AppSync_SourceApiAssociation_SourceApiAssociationConfig] `json:"SourceApiAssociationConfig,omitempty"`

	// SourceApiIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-sourceapiassociation.html#cfn-appsync-sourceapiassociation-sourceapiidentifier
	SourceApiIdentifier cfz.Expression[string] `json:"SourceApiIdentifier,omitempty"`
}

// New__AWS_AppSync_SourceApiAssociation initializes a new *AWS_AppSync_SourceApiAssociation.
func New__AWS_AppSync_SourceApiAssociation(logicalName string) *AWS_AppSync_SourceApiAssociation {
	return &AWS_AppSync_SourceApiAssociation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppSync_SourceApiAssociation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppSync_SourceApiAssociation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppSync_SourceApiAssociation) GetType() string {
	return AWS_AppSync_SourceApiAssociation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppSync_SourceApiAssociation) Set__LogicalName(v string) *AWS_AppSync_SourceApiAssociation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppSync_SourceApiAssociation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppSync_SourceApiAssociation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppSync_SourceApiAssociation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppSync_SourceApiAssociation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppSync_SourceApiAssociation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppSync_SourceApiAssociation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppSync_SourceApiAssociation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppSync_SourceApiAssociation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppSync_SourceApiAssociation) Set__RequestedOutputs(v []cfz.Output) *AWS_AppSync_SourceApiAssociation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppSync_SourceApiAssociation) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppSync_SourceApiAssociation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_AppSync_SourceApiAssociation) Set__Description(v cfz.Expression[string]) *AWS_AppSync_SourceApiAssociation {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_AppSync_SourceApiAssociation) SetV__Description(v string) *AWS_AppSync_SourceApiAssociation {
	t.Description = cfz.V(v)
	return t
}

// Set__MergedApiIdentifier updates property "MergedApiIdentifier".
func (t *AWS_AppSync_SourceApiAssociation) Set__MergedApiIdentifier(v cfz.Expression[string]) *AWS_AppSync_SourceApiAssociation {
	t.MergedApiIdentifier = v
	return t
}

// SetV__MergedApiIdentifier updates property "MergedApiIdentifier".
func (t *AWS_AppSync_SourceApiAssociation) SetV__MergedApiIdentifier(v string) *AWS_AppSync_SourceApiAssociation {
	t.MergedApiIdentifier = cfz.V(v)
	return t
}

// Set__SourceApiAssociationConfig updates property "SourceApiAssociationConfig".
func (t *AWS_AppSync_SourceApiAssociation) Set__SourceApiAssociationConfig(v cfz.Expression[AWS_AppSync_SourceApiAssociation_SourceApiAssociationConfig]) *AWS_AppSync_SourceApiAssociation {
	t.SourceApiAssociationConfig = v
	return t
}

// SetV__SourceApiAssociationConfig updates property "SourceApiAssociationConfig".
func (t *AWS_AppSync_SourceApiAssociation) SetV__SourceApiAssociationConfig(v AWS_AppSync_SourceApiAssociation_SourceApiAssociationConfig) *AWS_AppSync_SourceApiAssociation {
	t.SourceApiAssociationConfig = cfz.V(v)
	return t
}

// Set__SourceApiIdentifier updates property "SourceApiIdentifier".
func (t *AWS_AppSync_SourceApiAssociation) Set__SourceApiIdentifier(v cfz.Expression[string]) *AWS_AppSync_SourceApiAssociation {
	t.SourceApiIdentifier = v
	return t
}

// SetV__SourceApiIdentifier updates property "SourceApiIdentifier".
func (t *AWS_AppSync_SourceApiAssociation) SetV__SourceApiIdentifier(v string) *AWS_AppSync_SourceApiAssociation {
	t.SourceApiIdentifier = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppSync_SourceApiAssociation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AssociationArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AssociationArn
func (t *AWS_AppSync_SourceApiAssociation) GetAtt__AssociationArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_SourceApiAssociation__AttributesMap.AssociationArn))
}

// GetAtt__AssociationId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AssociationId
func (t *AWS_AppSync_SourceApiAssociation) GetAtt__AssociationId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_SourceApiAssociation__AttributesMap.AssociationId))
}

// GetAtt__LastSuccessfulMergeDate returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastSuccessfulMergeDate
func (t *AWS_AppSync_SourceApiAssociation) GetAtt__LastSuccessfulMergeDate() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_SourceApiAssociation__AttributesMap.LastSuccessfulMergeDate))
}

// GetAtt__MergedApiArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MergedApiArn
func (t *AWS_AppSync_SourceApiAssociation) GetAtt__MergedApiArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_SourceApiAssociation__AttributesMap.MergedApiArn))
}

// GetAtt__MergedApiId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MergedApiId
func (t *AWS_AppSync_SourceApiAssociation) GetAtt__MergedApiId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_SourceApiAssociation__AttributesMap.MergedApiId))
}

// GetAtt__SourceApiArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SourceApiArn
func (t *AWS_AppSync_SourceApiAssociation) GetAtt__SourceApiArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_SourceApiAssociation__AttributesMap.SourceApiArn))
}

// GetAtt__SourceApiAssociationStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SourceApiAssociationStatus
func (t *AWS_AppSync_SourceApiAssociation) GetAtt__SourceApiAssociationStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_SourceApiAssociation__AttributesMap.SourceApiAssociationStatus))
}

// GetAtt__SourceApiAssociationStatusDetail returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SourceApiAssociationStatusDetail
func (t *AWS_AppSync_SourceApiAssociation) GetAtt__SourceApiAssociationStatusDetail() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_SourceApiAssociation__AttributesMap.SourceApiAssociationStatusDetail))
}

// GetAtt__SourceApiId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SourceApiId
func (t *AWS_AppSync_SourceApiAssociation) GetAtt__SourceApiId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_SourceApiAssociation__AttributesMap.SourceApiId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AssociationArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AssociationArn
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputAtt__AssociationArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssociationArn", t.GetAtt__AssociationArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AssociationId returns a conventionally configured output for an attribute of this resource.
// Attribute: AssociationId
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputAtt__AssociationId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssociationId", t.GetAtt__AssociationId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastSuccessfulMergeDate returns a conventionally configured output for an attribute of this resource.
// Attribute: LastSuccessfulMergeDate
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputAtt__LastSuccessfulMergeDate(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastSuccessfulMergeDate", t.GetAtt__LastSuccessfulMergeDate())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MergedApiArn returns a conventionally configured output for an attribute of this resource.
// Attribute: MergedApiArn
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputAtt__MergedApiArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMergedApiArn", t.GetAtt__MergedApiArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MergedApiId returns a conventionally configured output for an attribute of this resource.
// Attribute: MergedApiId
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputAtt__MergedApiId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMergedApiId", t.GetAtt__MergedApiId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SourceApiArn returns a conventionally configured output for an attribute of this resource.
// Attribute: SourceApiArn
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputAtt__SourceApiArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSourceApiArn", t.GetAtt__SourceApiArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SourceApiAssociationStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: SourceApiAssociationStatus
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputAtt__SourceApiAssociationStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSourceApiAssociationStatus", t.GetAtt__SourceApiAssociationStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SourceApiAssociationStatusDetail returns a conventionally configured output for an attribute of this resource.
// Attribute: SourceApiAssociationStatusDetail
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputAtt__SourceApiAssociationStatusDetail(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSourceApiAssociationStatusDetail", t.GetAtt__SourceApiAssociationStatusDetail())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SourceApiId returns a conventionally configured output for an attribute of this resource.
// Attribute: SourceApiId
func (t *AWS_AppSync_SourceApiAssociation) GetConventionalOutputAtt__SourceApiId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSourceApiId", t.GetAtt__SourceApiId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppSync_SourceApiAssociation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppSync_SourceApiAssociation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppSync_SourceApiAssociation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
