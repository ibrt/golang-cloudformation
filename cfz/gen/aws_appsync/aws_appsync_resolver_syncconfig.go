// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appsync

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_AppSync_Resolver_SyncConfig__Type is the CloudFormation type for AWS::AppSync::Resolver.SyncConfig.
	AWS_AppSync_Resolver_SyncConfig__Type = "AWS::AppSync::Resolver.SyncConfig"
)

var (
	// AWS_AppSync_Resolver_SyncConfig__PropertiesMap reports all the CloudFormation properties for AWS::AppSync::Resolver.SyncConfig.
	AWS_AppSync_Resolver_SyncConfig__PropertiesMap = struct {
		ConflictDetection           string
		ConflictHandler             string
		LambdaConflictHandlerConfig string
	}{
		ConflictDetection:           "ConflictDetection",
		ConflictHandler:             "ConflictHandler",
		LambdaConflictHandlerConfig: "LambdaConflictHandlerConfig",
	}

	// AWS_AppSync_Resolver_SyncConfig__PropertiesSlice reports all the CloudFormation properties for AWS::AppSync::Resolver.SyncConfig.
	AWS_AppSync_Resolver_SyncConfig__PropertiesSlice = []string{
		AWS_AppSync_Resolver_SyncConfig__PropertiesMap.ConflictDetection,
		AWS_AppSync_Resolver_SyncConfig__PropertiesMap.ConflictHandler,
		AWS_AppSync_Resolver_SyncConfig__PropertiesMap.LambdaConflictHandlerConfig,
	}
)

// AWS_AppSync_Resolver_SyncConfig is a binding for AWS::AppSync::Resolver.SyncConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-syncconfig.html
type AWS_AppSync_Resolver_SyncConfig struct {
	// ConflictDetection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-syncconfig.html#cfn-appsync-resolver-syncconfig-conflictdetection
	ConflictDetection cfz.Expression[string] `json:"ConflictDetection,omitempty"`

	// ConflictHandler is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-syncconfig.html#cfn-appsync-resolver-syncconfig-conflicthandler
	ConflictHandler cfz.Expression[string] `json:"ConflictHandler,omitempty"`

	// LambdaConflictHandlerConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-resolver-syncconfig.html#cfn-appsync-resolver-syncconfig-lambdaconflicthandlerconfig
	LambdaConflictHandlerConfig cfz.Expression[AWS_AppSync_Resolver_LambdaConflictHandlerConfig] `json:"LambdaConflictHandlerConfig,omitempty"`
}

// New__AWS_AppSync_Resolver_SyncConfig initializes a new AWS_AppSync_Resolver_SyncConfig.
func New__AWS_AppSync_Resolver_SyncConfig() AWS_AppSync_Resolver_SyncConfig {
	return AWS_AppSync_Resolver_SyncConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_AppSync_Resolver_SyncConfig) GetType() string {
	return AWS_AppSync_Resolver_SyncConfig__Type
}

// Set__ConflictDetection updates property "ConflictDetection".
func (t AWS_AppSync_Resolver_SyncConfig) Set__ConflictDetection(v cfz.Expression[string]) AWS_AppSync_Resolver_SyncConfig {
	t.ConflictDetection = v
	return t
}

// SetV__ConflictDetection updates property "ConflictDetection".
func (t AWS_AppSync_Resolver_SyncConfig) SetV__ConflictDetection(v string) AWS_AppSync_Resolver_SyncConfig {
	t.ConflictDetection = cfz.V(v)
	return t
}

// Set__ConflictHandler updates property "ConflictHandler".
func (t AWS_AppSync_Resolver_SyncConfig) Set__ConflictHandler(v cfz.Expression[string]) AWS_AppSync_Resolver_SyncConfig {
	t.ConflictHandler = v
	return t
}

// SetV__ConflictHandler updates property "ConflictHandler".
func (t AWS_AppSync_Resolver_SyncConfig) SetV__ConflictHandler(v string) AWS_AppSync_Resolver_SyncConfig {
	t.ConflictHandler = cfz.V(v)
	return t
}

// Set__LambdaConflictHandlerConfig updates property "LambdaConflictHandlerConfig".
func (t AWS_AppSync_Resolver_SyncConfig) Set__LambdaConflictHandlerConfig(v cfz.Expression[AWS_AppSync_Resolver_LambdaConflictHandlerConfig]) AWS_AppSync_Resolver_SyncConfig {
	t.LambdaConflictHandlerConfig = v
	return t
}

// SetV__LambdaConflictHandlerConfig updates property "LambdaConflictHandlerConfig".
func (t AWS_AppSync_Resolver_SyncConfig) SetV__LambdaConflictHandlerConfig(v AWS_AppSync_Resolver_LambdaConflictHandlerConfig) AWS_AppSync_Resolver_SyncConfig {
	t.LambdaConflictHandlerConfig = cfz.V(v)
	return t
}
