// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appsync

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppSync_ChannelNamespace)(nil)
	_ cfz.Resource                   = (*AWS_AppSync_ChannelNamespace)(nil)
)

const (
	// AWS_AppSync_ChannelNamespace__Type is the CloudFormation type for AWS::AppSync::ChannelNamespace.
	AWS_AppSync_ChannelNamespace__Type = "AWS::AppSync::ChannelNamespace"
)

var (
	// AWS_AppSync_ChannelNamespace__AttributesMap reports all the CloudFormation attributes for AWS::AppSync::ChannelNamespace.
	AWS_AppSync_ChannelNamespace__AttributesMap = struct {
		ChannelNamespaceArn string
	}{
		ChannelNamespaceArn: "ChannelNamespaceArn",
	}

	// AWS_AppSync_ChannelNamespace__AttributesSlice reports all the CloudFormation attributes for AWS::AppSync::ChannelNamespace.
	AWS_AppSync_ChannelNamespace__AttributesSlice = []string{
		AWS_AppSync_ChannelNamespace__AttributesMap.ChannelNamespaceArn,
	}
)

var (
	// AWS_AppSync_ChannelNamespace__PropertiesMap reports all the CloudFormation properties for AWS::AppSync::ChannelNamespace.
	AWS_AppSync_ChannelNamespace__PropertiesMap = struct {
		ApiId              string
		CodeHandlers       string
		CodeS3Location     string
		Name               string
		PublishAuthModes   string
		SubscribeAuthModes string
		Tags               string
	}{
		ApiId:              "ApiId",
		CodeHandlers:       "CodeHandlers",
		CodeS3Location:     "CodeS3Location",
		Name:               "Name",
		PublishAuthModes:   "PublishAuthModes",
		SubscribeAuthModes: "SubscribeAuthModes",
		Tags:               "Tags",
	}

	// AWS_AppSync_ChannelNamespace__PropertiesSlice reports all the CloudFormation properties for AWS::AppSync::ChannelNamespace.
	AWS_AppSync_ChannelNamespace__PropertiesSlice = []string{
		AWS_AppSync_ChannelNamespace__PropertiesMap.ApiId,
		AWS_AppSync_ChannelNamespace__PropertiesMap.CodeHandlers,
		AWS_AppSync_ChannelNamespace__PropertiesMap.CodeS3Location,
		AWS_AppSync_ChannelNamespace__PropertiesMap.Name,
		AWS_AppSync_ChannelNamespace__PropertiesMap.PublishAuthModes,
		AWS_AppSync_ChannelNamespace__PropertiesMap.SubscribeAuthModes,
		AWS_AppSync_ChannelNamespace__PropertiesMap.Tags,
	}
)

// AWS_AppSync_ChannelNamespace is a binding for AWS::AppSync::ChannelNamespace.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html
type AWS_AppSync_ChannelNamespace struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApiId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-apiid
	ApiId cfz.Expression[string] `json:"ApiId,omitempty"`

	// CodeHandlers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-codehandlers
	CodeHandlers cfz.Expression[string] `json:"CodeHandlers,omitempty"`

	// CodeS3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-codes3location
	CodeS3Location cfz.Expression[string] `json:"CodeS3Location,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// PublishAuthModes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-publishauthmodes
	PublishAuthModes cfz.ExpressionSlice[AWS_AppSync_ChannelNamespace_AuthMode] `json:"PublishAuthModes,omitempty"`

	// SubscribeAuthModes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-subscribeauthmodes
	SubscribeAuthModes cfz.ExpressionSlice[AWS_AppSync_ChannelNamespace_AuthMode] `json:"SubscribeAuthModes,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-channelnamespace.html#cfn-appsync-channelnamespace-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_AppSync_ChannelNamespace initializes a new *AWS_AppSync_ChannelNamespace.
func New__AWS_AppSync_ChannelNamespace(logicalName string) *AWS_AppSync_ChannelNamespace {
	return &AWS_AppSync_ChannelNamespace{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppSync_ChannelNamespace) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppSync_ChannelNamespace) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppSync_ChannelNamespace) GetType() string {
	return AWS_AppSync_ChannelNamespace__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppSync_ChannelNamespace) Set__LogicalName(v string) *AWS_AppSync_ChannelNamespace {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppSync_ChannelNamespace) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppSync_ChannelNamespace {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppSync_ChannelNamespace) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppSync_ChannelNamespace {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppSync_ChannelNamespace) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppSync_ChannelNamespace {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppSync_ChannelNamespace) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppSync_ChannelNamespace {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppSync_ChannelNamespace) Set__RequestedOutputs(v []cfz.Output) *AWS_AppSync_ChannelNamespace {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppSync_ChannelNamespace) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppSync_ChannelNamespace {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApiId updates property "ApiId".
func (t *AWS_AppSync_ChannelNamespace) Set__ApiId(v cfz.Expression[string]) *AWS_AppSync_ChannelNamespace {
	t.ApiId = v
	return t
}

// SetV__ApiId updates property "ApiId".
func (t *AWS_AppSync_ChannelNamespace) SetV__ApiId(v string) *AWS_AppSync_ChannelNamespace {
	t.ApiId = cfz.V(v)
	return t
}

// Set__CodeHandlers updates property "CodeHandlers".
func (t *AWS_AppSync_ChannelNamespace) Set__CodeHandlers(v cfz.Expression[string]) *AWS_AppSync_ChannelNamespace {
	t.CodeHandlers = v
	return t
}

// SetV__CodeHandlers updates property "CodeHandlers".
func (t *AWS_AppSync_ChannelNamespace) SetV__CodeHandlers(v string) *AWS_AppSync_ChannelNamespace {
	t.CodeHandlers = cfz.V(v)
	return t
}

// Set__CodeS3Location updates property "CodeS3Location".
func (t *AWS_AppSync_ChannelNamespace) Set__CodeS3Location(v cfz.Expression[string]) *AWS_AppSync_ChannelNamespace {
	t.CodeS3Location = v
	return t
}

// SetV__CodeS3Location updates property "CodeS3Location".
func (t *AWS_AppSync_ChannelNamespace) SetV__CodeS3Location(v string) *AWS_AppSync_ChannelNamespace {
	t.CodeS3Location = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_AppSync_ChannelNamespace) Set__Name(v cfz.Expression[string]) *AWS_AppSync_ChannelNamespace {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_AppSync_ChannelNamespace) SetV__Name(v string) *AWS_AppSync_ChannelNamespace {
	t.Name = cfz.V(v)
	return t
}

// Set__PublishAuthModes updates property "PublishAuthModes".
func (t *AWS_AppSync_ChannelNamespace) Set__PublishAuthModes(v cfz.ExpressionSlice[AWS_AppSync_ChannelNamespace_AuthMode]) *AWS_AppSync_ChannelNamespace {
	t.PublishAuthModes = v
	return t
}

// SetS__PublishAuthModes updates property "PublishAuthModes".
func (t *AWS_AppSync_ChannelNamespace) SetS__PublishAuthModes(v ...cfz.Expression[AWS_AppSync_ChannelNamespace_AuthMode]) *AWS_AppSync_ChannelNamespace {
	t.PublishAuthModes = cfz.S(v...)
	return t
}

// SetSV__PublishAuthModes updates property "PublishAuthModes".
func (t *AWS_AppSync_ChannelNamespace) SetSV__PublishAuthModes(v ...AWS_AppSync_ChannelNamespace_AuthMode) *AWS_AppSync_ChannelNamespace {
	t.PublishAuthModes = cfz.SV(v...)
	return t
}

// Set__SubscribeAuthModes updates property "SubscribeAuthModes".
func (t *AWS_AppSync_ChannelNamespace) Set__SubscribeAuthModes(v cfz.ExpressionSlice[AWS_AppSync_ChannelNamespace_AuthMode]) *AWS_AppSync_ChannelNamespace {
	t.SubscribeAuthModes = v
	return t
}

// SetS__SubscribeAuthModes updates property "SubscribeAuthModes".
func (t *AWS_AppSync_ChannelNamespace) SetS__SubscribeAuthModes(v ...cfz.Expression[AWS_AppSync_ChannelNamespace_AuthMode]) *AWS_AppSync_ChannelNamespace {
	t.SubscribeAuthModes = cfz.S(v...)
	return t
}

// SetSV__SubscribeAuthModes updates property "SubscribeAuthModes".
func (t *AWS_AppSync_ChannelNamespace) SetSV__SubscribeAuthModes(v ...AWS_AppSync_ChannelNamespace_AuthMode) *AWS_AppSync_ChannelNamespace {
	t.SubscribeAuthModes = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppSync_ChannelNamespace) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_AppSync_ChannelNamespace {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppSync_ChannelNamespace) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_AppSync_ChannelNamespace {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppSync_ChannelNamespace) SetSV__Tags(v ...cfz.Tag) *AWS_AppSync_ChannelNamespace {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppSync_ChannelNamespace) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ChannelNamespaceArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ChannelNamespaceArn
func (t *AWS_AppSync_ChannelNamespace) GetAtt__ChannelNamespaceArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_ChannelNamespace__AttributesMap.ChannelNamespaceArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppSync_ChannelNamespace) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ChannelNamespaceArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ChannelNamespaceArn
func (t *AWS_AppSync_ChannelNamespace) GetConventionalOutputAtt__ChannelNamespaceArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttChannelNamespaceArn", t.GetAtt__ChannelNamespaceArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppSync_ChannelNamespace) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppSync_ChannelNamespace

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppSync_ChannelNamespace) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
