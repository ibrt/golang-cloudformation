// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appsync

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppSync_FunctionConfiguration)(nil)
	_ cfz.Resource                   = (*AWS_AppSync_FunctionConfiguration)(nil)
)

const (
	// AWS_AppSync_FunctionConfiguration__Type is the CloudFormation type for AWS::AppSync::FunctionConfiguration.
	AWS_AppSync_FunctionConfiguration__Type = "AWS::AppSync::FunctionConfiguration"
)

var (
	// AWS_AppSync_FunctionConfiguration__AttributesMap reports all the CloudFormation attributes for AWS::AppSync::FunctionConfiguration.
	AWS_AppSync_FunctionConfiguration__AttributesMap = struct {
		DataSourceName string
		FunctionArn    string
		FunctionId     string
		Name           string
	}{
		DataSourceName: "DataSourceName",
		FunctionArn:    "FunctionArn",
		FunctionId:     "FunctionId",
		Name:           "Name",
	}

	// AWS_AppSync_FunctionConfiguration__AttributesSlice reports all the CloudFormation attributes for AWS::AppSync::FunctionConfiguration.
	AWS_AppSync_FunctionConfiguration__AttributesSlice = []string{
		AWS_AppSync_FunctionConfiguration__AttributesMap.DataSourceName,
		AWS_AppSync_FunctionConfiguration__AttributesMap.FunctionArn,
		AWS_AppSync_FunctionConfiguration__AttributesMap.FunctionId,
		AWS_AppSync_FunctionConfiguration__AttributesMap.Name,
	}
)

var (
	// AWS_AppSync_FunctionConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::AppSync::FunctionConfiguration.
	AWS_AppSync_FunctionConfiguration__PropertiesMap = struct {
		ApiId                             string
		Code                              string
		CodeS3Location                    string
		DataSourceName                    string
		Description                       string
		FunctionVersion                   string
		MaxBatchSize                      string
		Name                              string
		RequestMappingTemplate            string
		RequestMappingTemplateS3Location  string
		ResponseMappingTemplate           string
		ResponseMappingTemplateS3Location string
		Runtime                           string
		SyncConfig                        string
	}{
		ApiId:                             "ApiId",
		Code:                              "Code",
		CodeS3Location:                    "CodeS3Location",
		DataSourceName:                    "DataSourceName",
		Description:                       "Description",
		FunctionVersion:                   "FunctionVersion",
		MaxBatchSize:                      "MaxBatchSize",
		Name:                              "Name",
		RequestMappingTemplate:            "RequestMappingTemplate",
		RequestMappingTemplateS3Location:  "RequestMappingTemplateS3Location",
		ResponseMappingTemplate:           "ResponseMappingTemplate",
		ResponseMappingTemplateS3Location: "ResponseMappingTemplateS3Location",
		Runtime:                           "Runtime",
		SyncConfig:                        "SyncConfig",
	}

	// AWS_AppSync_FunctionConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::AppSync::FunctionConfiguration.
	AWS_AppSync_FunctionConfiguration__PropertiesSlice = []string{
		AWS_AppSync_FunctionConfiguration__PropertiesMap.ApiId,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.Code,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.CodeS3Location,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.DataSourceName,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.Description,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.FunctionVersion,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.MaxBatchSize,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.Name,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.RequestMappingTemplate,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.RequestMappingTemplateS3Location,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.ResponseMappingTemplate,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.ResponseMappingTemplateS3Location,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.Runtime,
		AWS_AppSync_FunctionConfiguration__PropertiesMap.SyncConfig,
	}
)

// AWS_AppSync_FunctionConfiguration is a binding for AWS::AppSync::FunctionConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html
type AWS_AppSync_FunctionConfiguration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApiId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-apiid
	ApiId cfz.Expression[string] `json:"ApiId,omitempty"`

	// Code is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-code
	Code cfz.Expression[string] `json:"Code,omitempty"`

	// CodeS3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-codes3location
	CodeS3Location cfz.Expression[string] `json:"CodeS3Location,omitempty"`

	// DataSourceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-datasourcename
	DataSourceName cfz.Expression[string] `json:"DataSourceName,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// FunctionVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-functionversion
	FunctionVersion cfz.Expression[string] `json:"FunctionVersion,omitempty"`

	// MaxBatchSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-maxbatchsize
	MaxBatchSize cfz.Expression[int32] `json:"MaxBatchSize,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RequestMappingTemplate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-requestmappingtemplate
	RequestMappingTemplate cfz.Expression[string] `json:"RequestMappingTemplate,omitempty"`

	// RequestMappingTemplateS3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-requestmappingtemplates3location
	RequestMappingTemplateS3Location cfz.Expression[string] `json:"RequestMappingTemplateS3Location,omitempty"`

	// ResponseMappingTemplate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-responsemappingtemplate
	ResponseMappingTemplate cfz.Expression[string] `json:"ResponseMappingTemplate,omitempty"`

	// ResponseMappingTemplateS3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-responsemappingtemplates3location
	ResponseMappingTemplateS3Location cfz.Expression[string] `json:"ResponseMappingTemplateS3Location,omitempty"`

	// Runtime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-runtime
	Runtime cfz.Expression[AWS_AppSync_FunctionConfiguration_AppSyncRuntime] `json:"Runtime,omitempty"`

	// SyncConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-functionconfiguration.html#cfn-appsync-functionconfiguration-syncconfig
	SyncConfig cfz.Expression[AWS_AppSync_FunctionConfiguration_SyncConfig] `json:"SyncConfig,omitempty"`
}

// New__AWS_AppSync_FunctionConfiguration initializes a new *AWS_AppSync_FunctionConfiguration.
func New__AWS_AppSync_FunctionConfiguration(logicalName string) *AWS_AppSync_FunctionConfiguration {
	return &AWS_AppSync_FunctionConfiguration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppSync_FunctionConfiguration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppSync_FunctionConfiguration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppSync_FunctionConfiguration) GetType() string {
	return AWS_AppSync_FunctionConfiguration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppSync_FunctionConfiguration) Set__LogicalName(v string) *AWS_AppSync_FunctionConfiguration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppSync_FunctionConfiguration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppSync_FunctionConfiguration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppSync_FunctionConfiguration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppSync_FunctionConfiguration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppSync_FunctionConfiguration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppSync_FunctionConfiguration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppSync_FunctionConfiguration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppSync_FunctionConfiguration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppSync_FunctionConfiguration) Set__RequestedOutputs(v []cfz.Output) *AWS_AppSync_FunctionConfiguration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppSync_FunctionConfiguration) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppSync_FunctionConfiguration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApiId updates property "ApiId".
func (t *AWS_AppSync_FunctionConfiguration) Set__ApiId(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.ApiId = v
	return t
}

// SetV__ApiId updates property "ApiId".
func (t *AWS_AppSync_FunctionConfiguration) SetV__ApiId(v string) *AWS_AppSync_FunctionConfiguration {
	t.ApiId = cfz.V(v)
	return t
}

// Set__Code updates property "Code".
func (t *AWS_AppSync_FunctionConfiguration) Set__Code(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.Code = v
	return t
}

// SetV__Code updates property "Code".
func (t *AWS_AppSync_FunctionConfiguration) SetV__Code(v string) *AWS_AppSync_FunctionConfiguration {
	t.Code = cfz.V(v)
	return t
}

// Set__CodeS3Location updates property "CodeS3Location".
func (t *AWS_AppSync_FunctionConfiguration) Set__CodeS3Location(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.CodeS3Location = v
	return t
}

// SetV__CodeS3Location updates property "CodeS3Location".
func (t *AWS_AppSync_FunctionConfiguration) SetV__CodeS3Location(v string) *AWS_AppSync_FunctionConfiguration {
	t.CodeS3Location = cfz.V(v)
	return t
}

// Set__DataSourceName updates property "DataSourceName".
func (t *AWS_AppSync_FunctionConfiguration) Set__DataSourceName(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.DataSourceName = v
	return t
}

// SetV__DataSourceName updates property "DataSourceName".
func (t *AWS_AppSync_FunctionConfiguration) SetV__DataSourceName(v string) *AWS_AppSync_FunctionConfiguration {
	t.DataSourceName = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_AppSync_FunctionConfiguration) Set__Description(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_AppSync_FunctionConfiguration) SetV__Description(v string) *AWS_AppSync_FunctionConfiguration {
	t.Description = cfz.V(v)
	return t
}

// Set__FunctionVersion updates property "FunctionVersion".
func (t *AWS_AppSync_FunctionConfiguration) Set__FunctionVersion(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.FunctionVersion = v
	return t
}

// SetV__FunctionVersion updates property "FunctionVersion".
func (t *AWS_AppSync_FunctionConfiguration) SetV__FunctionVersion(v string) *AWS_AppSync_FunctionConfiguration {
	t.FunctionVersion = cfz.V(v)
	return t
}

// Set__MaxBatchSize updates property "MaxBatchSize".
func (t *AWS_AppSync_FunctionConfiguration) Set__MaxBatchSize(v cfz.Expression[int32]) *AWS_AppSync_FunctionConfiguration {
	t.MaxBatchSize = v
	return t
}

// SetV__MaxBatchSize updates property "MaxBatchSize".
func (t *AWS_AppSync_FunctionConfiguration) SetV__MaxBatchSize(v int32) *AWS_AppSync_FunctionConfiguration {
	t.MaxBatchSize = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_AppSync_FunctionConfiguration) Set__Name(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_AppSync_FunctionConfiguration) SetV__Name(v string) *AWS_AppSync_FunctionConfiguration {
	t.Name = cfz.V(v)
	return t
}

// Set__RequestMappingTemplate updates property "RequestMappingTemplate".
func (t *AWS_AppSync_FunctionConfiguration) Set__RequestMappingTemplate(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.RequestMappingTemplate = v
	return t
}

// SetV__RequestMappingTemplate updates property "RequestMappingTemplate".
func (t *AWS_AppSync_FunctionConfiguration) SetV__RequestMappingTemplate(v string) *AWS_AppSync_FunctionConfiguration {
	t.RequestMappingTemplate = cfz.V(v)
	return t
}

// Set__RequestMappingTemplateS3Location updates property "RequestMappingTemplateS3Location".
func (t *AWS_AppSync_FunctionConfiguration) Set__RequestMappingTemplateS3Location(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.RequestMappingTemplateS3Location = v
	return t
}

// SetV__RequestMappingTemplateS3Location updates property "RequestMappingTemplateS3Location".
func (t *AWS_AppSync_FunctionConfiguration) SetV__RequestMappingTemplateS3Location(v string) *AWS_AppSync_FunctionConfiguration {
	t.RequestMappingTemplateS3Location = cfz.V(v)
	return t
}

// Set__ResponseMappingTemplate updates property "ResponseMappingTemplate".
func (t *AWS_AppSync_FunctionConfiguration) Set__ResponseMappingTemplate(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.ResponseMappingTemplate = v
	return t
}

// SetV__ResponseMappingTemplate updates property "ResponseMappingTemplate".
func (t *AWS_AppSync_FunctionConfiguration) SetV__ResponseMappingTemplate(v string) *AWS_AppSync_FunctionConfiguration {
	t.ResponseMappingTemplate = cfz.V(v)
	return t
}

// Set__ResponseMappingTemplateS3Location updates property "ResponseMappingTemplateS3Location".
func (t *AWS_AppSync_FunctionConfiguration) Set__ResponseMappingTemplateS3Location(v cfz.Expression[string]) *AWS_AppSync_FunctionConfiguration {
	t.ResponseMappingTemplateS3Location = v
	return t
}

// SetV__ResponseMappingTemplateS3Location updates property "ResponseMappingTemplateS3Location".
func (t *AWS_AppSync_FunctionConfiguration) SetV__ResponseMappingTemplateS3Location(v string) *AWS_AppSync_FunctionConfiguration {
	t.ResponseMappingTemplateS3Location = cfz.V(v)
	return t
}

// Set__Runtime updates property "Runtime".
func (t *AWS_AppSync_FunctionConfiguration) Set__Runtime(v cfz.Expression[AWS_AppSync_FunctionConfiguration_AppSyncRuntime]) *AWS_AppSync_FunctionConfiguration {
	t.Runtime = v
	return t
}

// SetV__Runtime updates property "Runtime".
func (t *AWS_AppSync_FunctionConfiguration) SetV__Runtime(v AWS_AppSync_FunctionConfiguration_AppSyncRuntime) *AWS_AppSync_FunctionConfiguration {
	t.Runtime = cfz.V(v)
	return t
}

// Set__SyncConfig updates property "SyncConfig".
func (t *AWS_AppSync_FunctionConfiguration) Set__SyncConfig(v cfz.Expression[AWS_AppSync_FunctionConfiguration_SyncConfig]) *AWS_AppSync_FunctionConfiguration {
	t.SyncConfig = v
	return t
}

// SetV__SyncConfig updates property "SyncConfig".
func (t *AWS_AppSync_FunctionConfiguration) SetV__SyncConfig(v AWS_AppSync_FunctionConfiguration_SyncConfig) *AWS_AppSync_FunctionConfiguration {
	t.SyncConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppSync_FunctionConfiguration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DataSourceName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DataSourceName
func (t *AWS_AppSync_FunctionConfiguration) GetAtt__DataSourceName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_FunctionConfiguration__AttributesMap.DataSourceName))
}

// GetAtt__FunctionArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FunctionArn
func (t *AWS_AppSync_FunctionConfiguration) GetAtt__FunctionArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_FunctionConfiguration__AttributesMap.FunctionArn))
}

// GetAtt__FunctionId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FunctionId
func (t *AWS_AppSync_FunctionConfiguration) GetAtt__FunctionId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_FunctionConfiguration__AttributesMap.FunctionId))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_AppSync_FunctionConfiguration) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_FunctionConfiguration__AttributesMap.Name))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppSync_FunctionConfiguration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DataSourceName returns a conventionally configured output for an attribute of this resource.
// Attribute: DataSourceName
func (t *AWS_AppSync_FunctionConfiguration) GetConventionalOutputAtt__DataSourceName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDataSourceName", t.GetAtt__DataSourceName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FunctionArn returns a conventionally configured output for an attribute of this resource.
// Attribute: FunctionArn
func (t *AWS_AppSync_FunctionConfiguration) GetConventionalOutputAtt__FunctionArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFunctionArn", t.GetAtt__FunctionArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FunctionId returns a conventionally configured output for an attribute of this resource.
// Attribute: FunctionId
func (t *AWS_AppSync_FunctionConfiguration) GetConventionalOutputAtt__FunctionId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFunctionId", t.GetAtt__FunctionId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_AppSync_FunctionConfiguration) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppSync_FunctionConfiguration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppSync_FunctionConfiguration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppSync_FunctionConfiguration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
