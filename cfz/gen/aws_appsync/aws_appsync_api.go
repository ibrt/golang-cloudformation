// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appsync

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppSync_Api)(nil)
	_ cfz.Resource                   = (*AWS_AppSync_Api)(nil)
)

const (
	// AWS_AppSync_Api__Type is the CloudFormation type for AWS::AppSync::Api.
	AWS_AppSync_Api__Type = "AWS::AppSync::Api"
)

var (
	// AWS_AppSync_Api__AttributesMap reports all the CloudFormation attributes for AWS::AppSync::Api.
	AWS_AppSync_Api__AttributesMap = struct {
		ApiArn       string
		ApiId        string
		Dns          string
		Dns_Http     string
		Dns_Realtime string
	}{
		ApiArn:       "ApiArn",
		ApiId:        "ApiId",
		Dns:          "Dns",
		Dns_Http:     "Dns.Http",
		Dns_Realtime: "Dns.Realtime",
	}

	// AWS_AppSync_Api__AttributesSlice reports all the CloudFormation attributes for AWS::AppSync::Api.
	AWS_AppSync_Api__AttributesSlice = []string{
		AWS_AppSync_Api__AttributesMap.ApiArn,
		AWS_AppSync_Api__AttributesMap.ApiId,
		AWS_AppSync_Api__AttributesMap.Dns,
		AWS_AppSync_Api__AttributesMap.Dns_Http,
		AWS_AppSync_Api__AttributesMap.Dns_Realtime,
	}
)

var (
	// AWS_AppSync_Api__PropertiesMap reports all the CloudFormation properties for AWS::AppSync::Api.
	AWS_AppSync_Api__PropertiesMap = struct {
		EventConfig  string
		Name         string
		OwnerContact string
		Tags         string
	}{
		EventConfig:  "EventConfig",
		Name:         "Name",
		OwnerContact: "OwnerContact",
		Tags:         "Tags",
	}

	// AWS_AppSync_Api__PropertiesSlice reports all the CloudFormation properties for AWS::AppSync::Api.
	AWS_AppSync_Api__PropertiesSlice = []string{
		AWS_AppSync_Api__PropertiesMap.EventConfig,
		AWS_AppSync_Api__PropertiesMap.Name,
		AWS_AppSync_Api__PropertiesMap.OwnerContact,
		AWS_AppSync_Api__PropertiesMap.Tags,
	}
)

// AWS_AppSync_Api is a binding for AWS::AppSync::Api.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html
type AWS_AppSync_Api struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// EventConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html#cfn-appsync-api-eventconfig
	EventConfig cfz.Expression[AWS_AppSync_Api_EventConfig] `json:"EventConfig,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html#cfn-appsync-api-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// OwnerContact is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html#cfn-appsync-api-ownercontact
	OwnerContact cfz.Expression[string] `json:"OwnerContact,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-api.html#cfn-appsync-api-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_AppSync_Api initializes a new *AWS_AppSync_Api.
func New__AWS_AppSync_Api(logicalName string) *AWS_AppSync_Api {
	return &AWS_AppSync_Api{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppSync_Api) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppSync_Api) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppSync_Api) GetType() string {
	return AWS_AppSync_Api__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppSync_Api) Set__LogicalName(v string) *AWS_AppSync_Api {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppSync_Api) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppSync_Api {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppSync_Api) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppSync_Api {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppSync_Api) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppSync_Api {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppSync_Api) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppSync_Api {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppSync_Api) Set__RequestedOutputs(v []cfz.Output) *AWS_AppSync_Api {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppSync_Api) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppSync_Api {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__EventConfig updates property "EventConfig".
func (t *AWS_AppSync_Api) Set__EventConfig(v cfz.Expression[AWS_AppSync_Api_EventConfig]) *AWS_AppSync_Api {
	t.EventConfig = v
	return t
}

// SetV__EventConfig updates property "EventConfig".
func (t *AWS_AppSync_Api) SetV__EventConfig(v AWS_AppSync_Api_EventConfig) *AWS_AppSync_Api {
	t.EventConfig = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_AppSync_Api) Set__Name(v cfz.Expression[string]) *AWS_AppSync_Api {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_AppSync_Api) SetV__Name(v string) *AWS_AppSync_Api {
	t.Name = cfz.V(v)
	return t
}

// Set__OwnerContact updates property "OwnerContact".
func (t *AWS_AppSync_Api) Set__OwnerContact(v cfz.Expression[string]) *AWS_AppSync_Api {
	t.OwnerContact = v
	return t
}

// SetV__OwnerContact updates property "OwnerContact".
func (t *AWS_AppSync_Api) SetV__OwnerContact(v string) *AWS_AppSync_Api {
	t.OwnerContact = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppSync_Api) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_AppSync_Api {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppSync_Api) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_AppSync_Api {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppSync_Api) SetSV__Tags(v ...cfz.Tag) *AWS_AppSync_Api {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppSync_Api) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ApiArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ApiArn
func (t *AWS_AppSync_Api) GetAtt__ApiArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_Api__AttributesMap.ApiArn))
}

// GetAtt__ApiId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ApiId
func (t *AWS_AppSync_Api) GetAtt__ApiId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_Api__AttributesMap.ApiId))
}

// GetAtt__Dns returns a $cfz.Expression[AWS_AppSync_Api_DnsMap] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Dns
func (t *AWS_AppSync_Api) GetAtt__Dns() cfz.Expression[AWS_AppSync_Api_DnsMap] {
	return cfz.GetAtt[AWS_AppSync_Api_DnsMap](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_Api__AttributesMap.Dns))
}

// GetAtt__Dns_Http returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Dns.Http
func (t *AWS_AppSync_Api) GetAtt__Dns_Http() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_Api__AttributesMap.Dns_Http))
}

// GetAtt__Dns_Realtime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Dns.Realtime
func (t *AWS_AppSync_Api) GetAtt__Dns_Realtime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AppSync_Api__AttributesMap.Dns_Realtime))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppSync_Api) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ApiArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ApiArn
func (t *AWS_AppSync_Api) GetConventionalOutputAtt__ApiArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttApiArn", t.GetAtt__ApiArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ApiId returns a conventionally configured output for an attribute of this resource.
// Attribute: ApiId
func (t *AWS_AppSync_Api) GetConventionalOutputAtt__ApiId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttApiId", t.GetAtt__ApiId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Dns returns a conventionally configured output for an attribute of this resource.
// Attribute: Dns
func (t *AWS_AppSync_Api) GetConventionalOutputAtt__Dns(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDns", t.GetAtt__Dns())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Dns_Http returns a conventionally configured output for an attribute of this resource.
// Attribute: Dns.Http
func (t *AWS_AppSync_Api) GetConventionalOutputAtt__Dns_Http(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDnsHttp", t.GetAtt__Dns_Http())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Dns_Realtime returns a conventionally configured output for an attribute of this resource.
// Attribute: Dns.Realtime
func (t *AWS_AppSync_Api) GetConventionalOutputAtt__Dns_Realtime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDnsRealtime", t.GetAtt__Dns_Realtime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppSync_Api) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppSync_Api

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppSync_Api) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
