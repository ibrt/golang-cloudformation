// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_refactorspaces

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_RefactorSpaces_Route)(nil)
	_ cfz.Resource                   = (*AWS_RefactorSpaces_Route)(nil)
)

const (
	// AWS_RefactorSpaces_Route__Type is the CloudFormation type for AWS::RefactorSpaces::Route.
	AWS_RefactorSpaces_Route__Type = "AWS::RefactorSpaces::Route"
)

var (
	// AWS_RefactorSpaces_Route__AttributesMap reports all the CloudFormation attributes for AWS::RefactorSpaces::Route.
	AWS_RefactorSpaces_Route__AttributesMap = struct {
		Arn              string
		PathResourceToId string
		RouteIdentifier  string
	}{
		Arn:              "Arn",
		PathResourceToId: "PathResourceToId",
		RouteIdentifier:  "RouteIdentifier",
	}

	// AWS_RefactorSpaces_Route__AttributesSlice reports all the CloudFormation attributes for AWS::RefactorSpaces::Route.
	AWS_RefactorSpaces_Route__AttributesSlice = []string{
		AWS_RefactorSpaces_Route__AttributesMap.Arn,
		AWS_RefactorSpaces_Route__AttributesMap.PathResourceToId,
		AWS_RefactorSpaces_Route__AttributesMap.RouteIdentifier,
	}
)

var (
	// AWS_RefactorSpaces_Route__PropertiesMap reports all the CloudFormation properties for AWS::RefactorSpaces::Route.
	AWS_RefactorSpaces_Route__PropertiesMap = struct {
		ApplicationIdentifier string
		DefaultRoute          string
		EnvironmentIdentifier string
		RouteType             string
		ServiceIdentifier     string
		Tags                  string
		UriPathRoute          string
	}{
		ApplicationIdentifier: "ApplicationIdentifier",
		DefaultRoute:          "DefaultRoute",
		EnvironmentIdentifier: "EnvironmentIdentifier",
		RouteType:             "RouteType",
		ServiceIdentifier:     "ServiceIdentifier",
		Tags:                  "Tags",
		UriPathRoute:          "UriPathRoute",
	}

	// AWS_RefactorSpaces_Route__PropertiesSlice reports all the CloudFormation properties for AWS::RefactorSpaces::Route.
	AWS_RefactorSpaces_Route__PropertiesSlice = []string{
		AWS_RefactorSpaces_Route__PropertiesMap.ApplicationIdentifier,
		AWS_RefactorSpaces_Route__PropertiesMap.DefaultRoute,
		AWS_RefactorSpaces_Route__PropertiesMap.EnvironmentIdentifier,
		AWS_RefactorSpaces_Route__PropertiesMap.RouteType,
		AWS_RefactorSpaces_Route__PropertiesMap.ServiceIdentifier,
		AWS_RefactorSpaces_Route__PropertiesMap.Tags,
		AWS_RefactorSpaces_Route__PropertiesMap.UriPathRoute,
	}
)

// AWS_RefactorSpaces_Route is a binding for AWS::RefactorSpaces::Route.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html
type AWS_RefactorSpaces_Route struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-applicationidentifier
	ApplicationIdentifier cfz.Expression[string] `json:"ApplicationIdentifier,omitempty"`

	// DefaultRoute is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-defaultroute
	DefaultRoute cfz.Expression[AWS_RefactorSpaces_Route_DefaultRouteInput] `json:"DefaultRoute,omitempty"`

	// EnvironmentIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-environmentidentifier
	EnvironmentIdentifier cfz.Expression[string] `json:"EnvironmentIdentifier,omitempty"`

	// RouteType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-routetype
	RouteType cfz.Expression[string] `json:"RouteType,omitempty"`

	// ServiceIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-serviceidentifier
	ServiceIdentifier cfz.Expression[string] `json:"ServiceIdentifier,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UriPathRoute is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-refactorspaces-route.html#cfn-refactorspaces-route-uripathroute
	UriPathRoute cfz.Expression[AWS_RefactorSpaces_Route_UriPathRouteInput] `json:"UriPathRoute,omitempty"`
}

// New__AWS_RefactorSpaces_Route initializes a new *AWS_RefactorSpaces_Route.
func New__AWS_RefactorSpaces_Route(logicalName string) *AWS_RefactorSpaces_Route {
	return &AWS_RefactorSpaces_Route{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_RefactorSpaces_Route) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_RefactorSpaces_Route) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_RefactorSpaces_Route) GetType() string {
	return AWS_RefactorSpaces_Route__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_RefactorSpaces_Route) Set__LogicalName(v string) *AWS_RefactorSpaces_Route {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_RefactorSpaces_Route) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_RefactorSpaces_Route {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_RefactorSpaces_Route) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_RefactorSpaces_Route {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_RefactorSpaces_Route) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_RefactorSpaces_Route {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_RefactorSpaces_Route) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_RefactorSpaces_Route {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_RefactorSpaces_Route) Set__RequestedOutputs(v []cfz.Output) *AWS_RefactorSpaces_Route {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_RefactorSpaces_Route) Add__RequestedOutputs(v ...cfz.Output) *AWS_RefactorSpaces_Route {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationIdentifier updates property "ApplicationIdentifier".
func (t *AWS_RefactorSpaces_Route) Set__ApplicationIdentifier(v cfz.Expression[string]) *AWS_RefactorSpaces_Route {
	t.ApplicationIdentifier = v
	return t
}

// SetV__ApplicationIdentifier updates property "ApplicationIdentifier".
func (t *AWS_RefactorSpaces_Route) SetV__ApplicationIdentifier(v string) *AWS_RefactorSpaces_Route {
	t.ApplicationIdentifier = cfz.V(v)
	return t
}

// Set__DefaultRoute updates property "DefaultRoute".
func (t *AWS_RefactorSpaces_Route) Set__DefaultRoute(v cfz.Expression[AWS_RefactorSpaces_Route_DefaultRouteInput]) *AWS_RefactorSpaces_Route {
	t.DefaultRoute = v
	return t
}

// SetV__DefaultRoute updates property "DefaultRoute".
func (t *AWS_RefactorSpaces_Route) SetV__DefaultRoute(v AWS_RefactorSpaces_Route_DefaultRouteInput) *AWS_RefactorSpaces_Route {
	t.DefaultRoute = cfz.V(v)
	return t
}

// Set__EnvironmentIdentifier updates property "EnvironmentIdentifier".
func (t *AWS_RefactorSpaces_Route) Set__EnvironmentIdentifier(v cfz.Expression[string]) *AWS_RefactorSpaces_Route {
	t.EnvironmentIdentifier = v
	return t
}

// SetV__EnvironmentIdentifier updates property "EnvironmentIdentifier".
func (t *AWS_RefactorSpaces_Route) SetV__EnvironmentIdentifier(v string) *AWS_RefactorSpaces_Route {
	t.EnvironmentIdentifier = cfz.V(v)
	return t
}

// Set__RouteType updates property "RouteType".
func (t *AWS_RefactorSpaces_Route) Set__RouteType(v cfz.Expression[string]) *AWS_RefactorSpaces_Route {
	t.RouteType = v
	return t
}

// SetV__RouteType updates property "RouteType".
func (t *AWS_RefactorSpaces_Route) SetV__RouteType(v string) *AWS_RefactorSpaces_Route {
	t.RouteType = cfz.V(v)
	return t
}

// Set__ServiceIdentifier updates property "ServiceIdentifier".
func (t *AWS_RefactorSpaces_Route) Set__ServiceIdentifier(v cfz.Expression[string]) *AWS_RefactorSpaces_Route {
	t.ServiceIdentifier = v
	return t
}

// SetV__ServiceIdentifier updates property "ServiceIdentifier".
func (t *AWS_RefactorSpaces_Route) SetV__ServiceIdentifier(v string) *AWS_RefactorSpaces_Route {
	t.ServiceIdentifier = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_RefactorSpaces_Route) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_RefactorSpaces_Route {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_RefactorSpaces_Route) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_RefactorSpaces_Route {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_RefactorSpaces_Route) SetSV__Tags(v ...cfz.Tag) *AWS_RefactorSpaces_Route {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UriPathRoute updates property "UriPathRoute".
func (t *AWS_RefactorSpaces_Route) Set__UriPathRoute(v cfz.Expression[AWS_RefactorSpaces_Route_UriPathRouteInput]) *AWS_RefactorSpaces_Route {
	t.UriPathRoute = v
	return t
}

// SetV__UriPathRoute updates property "UriPathRoute".
func (t *AWS_RefactorSpaces_Route) SetV__UriPathRoute(v AWS_RefactorSpaces_Route_UriPathRouteInput) *AWS_RefactorSpaces_Route {
	t.UriPathRoute = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_RefactorSpaces_Route) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_RefactorSpaces_Route) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RefactorSpaces_Route__AttributesMap.Arn))
}

// GetAtt__PathResourceToId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PathResourceToId
func (t *AWS_RefactorSpaces_Route) GetAtt__PathResourceToId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RefactorSpaces_Route__AttributesMap.PathResourceToId))
}

// GetAtt__RouteIdentifier returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RouteIdentifier
func (t *AWS_RefactorSpaces_Route) GetAtt__RouteIdentifier() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RefactorSpaces_Route__AttributesMap.RouteIdentifier))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_RefactorSpaces_Route) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_RefactorSpaces_Route) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PathResourceToId returns a conventionally configured output for an attribute of this resource.
// Attribute: PathResourceToId
func (t *AWS_RefactorSpaces_Route) GetConventionalOutputAtt__PathResourceToId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPathResourceToId", t.GetAtt__PathResourceToId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RouteIdentifier returns a conventionally configured output for an attribute of this resource.
// Attribute: RouteIdentifier
func (t *AWS_RefactorSpaces_Route) GetConventionalOutputAtt__RouteIdentifier(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRouteIdentifier", t.GetAtt__RouteIdentifier())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_RefactorSpaces_Route) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_RefactorSpaces_Route

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_RefactorSpaces_Route) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
