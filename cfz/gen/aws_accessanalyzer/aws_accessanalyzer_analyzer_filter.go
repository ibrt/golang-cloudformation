// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_accessanalyzer

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_AccessAnalyzer_Analyzer_Filter__Type is the CloudFormation type for AWS::AccessAnalyzer::Analyzer.Filter.
	AWS_AccessAnalyzer_Analyzer_Filter__Type = "AWS::AccessAnalyzer::Analyzer.Filter"
)

var (
	// AWS_AccessAnalyzer_Analyzer_Filter__PropertiesMap reports all the CloudFormation properties for AWS::AccessAnalyzer::Analyzer.Filter.
	AWS_AccessAnalyzer_Analyzer_Filter__PropertiesMap = struct {
		Contains string
		Eq       string
		Exists   string
		Neq      string
		Property string
	}{
		Contains: "Contains",
		Eq:       "Eq",
		Exists:   "Exists",
		Neq:      "Neq",
		Property: "Property",
	}

	// AWS_AccessAnalyzer_Analyzer_Filter__PropertiesSlice reports all the CloudFormation properties for AWS::AccessAnalyzer::Analyzer.Filter.
	AWS_AccessAnalyzer_Analyzer_Filter__PropertiesSlice = []string{
		AWS_AccessAnalyzer_Analyzer_Filter__PropertiesMap.Contains,
		AWS_AccessAnalyzer_Analyzer_Filter__PropertiesMap.Eq,
		AWS_AccessAnalyzer_Analyzer_Filter__PropertiesMap.Exists,
		AWS_AccessAnalyzer_Analyzer_Filter__PropertiesMap.Neq,
		AWS_AccessAnalyzer_Analyzer_Filter__PropertiesMap.Property,
	}
)

// AWS_AccessAnalyzer_Analyzer_Filter is a binding for AWS::AccessAnalyzer::Analyzer.Filter.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-accessanalyzer-analyzer-filter.html
type AWS_AccessAnalyzer_Analyzer_Filter struct {
	// Contains is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-accessanalyzer-analyzer-filter.html#cfn-accessanalyzer-analyzer-filter-contains
	Contains cfz.ExpressionSlice[string] `json:"Contains,omitempty"`

	// Eq is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-accessanalyzer-analyzer-filter.html#cfn-accessanalyzer-analyzer-filter-eq
	Eq cfz.ExpressionSlice[string] `json:"Eq,omitempty"`

	// Exists is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-accessanalyzer-analyzer-filter.html#cfn-accessanalyzer-analyzer-filter-exists
	Exists cfz.Expression[bool] `json:"Exists,omitempty"`

	// Neq is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-accessanalyzer-analyzer-filter.html#cfn-accessanalyzer-analyzer-filter-neq
	Neq cfz.ExpressionSlice[string] `json:"Neq,omitempty"`

	// Property is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-accessanalyzer-analyzer-filter.html#cfn-accessanalyzer-analyzer-filter-property
	Property cfz.Expression[string] `json:"Property,omitempty"`
}

// New__AWS_AccessAnalyzer_Analyzer_Filter initializes a new AWS_AccessAnalyzer_Analyzer_Filter.
func New__AWS_AccessAnalyzer_Analyzer_Filter() AWS_AccessAnalyzer_Analyzer_Filter {
	return AWS_AccessAnalyzer_Analyzer_Filter{}
}

// GetType returns the CloudFormation type.
func (AWS_AccessAnalyzer_Analyzer_Filter) GetType() string {
	return AWS_AccessAnalyzer_Analyzer_Filter__Type
}

// Set__Contains updates property "Contains".
func (t AWS_AccessAnalyzer_Analyzer_Filter) Set__Contains(v cfz.ExpressionSlice[string]) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Contains = v
	return t
}

// SetS__Contains updates property "Contains".
func (t AWS_AccessAnalyzer_Analyzer_Filter) SetS__Contains(v ...cfz.Expression[string]) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Contains = cfz.S(v...)
	return t
}

// SetSV__Contains updates property "Contains".
func (t AWS_AccessAnalyzer_Analyzer_Filter) SetSV__Contains(v ...string) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Contains = cfz.SV(v...)
	return t
}

// Set__Eq updates property "Eq".
func (t AWS_AccessAnalyzer_Analyzer_Filter) Set__Eq(v cfz.ExpressionSlice[string]) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Eq = v
	return t
}

// SetS__Eq updates property "Eq".
func (t AWS_AccessAnalyzer_Analyzer_Filter) SetS__Eq(v ...cfz.Expression[string]) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Eq = cfz.S(v...)
	return t
}

// SetSV__Eq updates property "Eq".
func (t AWS_AccessAnalyzer_Analyzer_Filter) SetSV__Eq(v ...string) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Eq = cfz.SV(v...)
	return t
}

// Set__Exists updates property "Exists".
func (t AWS_AccessAnalyzer_Analyzer_Filter) Set__Exists(v cfz.Expression[bool]) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Exists = v
	return t
}

// SetV__Exists updates property "Exists".
func (t AWS_AccessAnalyzer_Analyzer_Filter) SetV__Exists(v bool) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Exists = cfz.V(v)
	return t
}

// Set__Neq updates property "Neq".
func (t AWS_AccessAnalyzer_Analyzer_Filter) Set__Neq(v cfz.ExpressionSlice[string]) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Neq = v
	return t
}

// SetS__Neq updates property "Neq".
func (t AWS_AccessAnalyzer_Analyzer_Filter) SetS__Neq(v ...cfz.Expression[string]) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Neq = cfz.S(v...)
	return t
}

// SetSV__Neq updates property "Neq".
func (t AWS_AccessAnalyzer_Analyzer_Filter) SetSV__Neq(v ...string) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Neq = cfz.SV(v...)
	return t
}

// Set__Property updates property "Property".
func (t AWS_AccessAnalyzer_Analyzer_Filter) Set__Property(v cfz.Expression[string]) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Property = v
	return t
}

// SetV__Property updates property "Property".
func (t AWS_AccessAnalyzer_Analyzer_Filter) SetV__Property(v string) AWS_AccessAnalyzer_Analyzer_Filter {
	t.Property = cfz.V(v)
	return t
}
