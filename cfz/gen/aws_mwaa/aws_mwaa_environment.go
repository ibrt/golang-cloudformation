// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mwaa

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_MWAA_Environment)(nil)
	_ cfz.Resource                   = (*AWS_MWAA_Environment)(nil)
)

const (
	// AWS_MWAA_Environment__Type is the CloudFormation type for AWS::MWAA::Environment.
	AWS_MWAA_Environment__Type = "AWS::MWAA::Environment"
)

var (
	// AWS_MWAA_Environment__AttributesMap reports all the CloudFormation attributes for AWS::MWAA::Environment.
	AWS_MWAA_Environment__AttributesMap = struct {
		Arn                                                          string
		CeleryExecutorQueue                                          string
		DatabaseVpcEndpointService                                   string
		LoggingConfiguration_DagProcessingLogs_CloudWatchLogGroupArn string
		LoggingConfiguration_SchedulerLogs_CloudWatchLogGroupArn     string
		LoggingConfiguration_TaskLogs_CloudWatchLogGroupArn          string
		LoggingConfiguration_WebserverLogs_CloudWatchLogGroupArn     string
		LoggingConfiguration_WorkerLogs_CloudWatchLogGroupArn        string
		WebserverUrl                                                 string
		WebserverVpcEndpointService                                  string
	}{
		Arn:                        "Arn",
		CeleryExecutorQueue:        "CeleryExecutorQueue",
		DatabaseVpcEndpointService: "DatabaseVpcEndpointService",
		LoggingConfiguration_DagProcessingLogs_CloudWatchLogGroupArn: "LoggingConfiguration.DagProcessingLogs.CloudWatchLogGroupArn",
		LoggingConfiguration_SchedulerLogs_CloudWatchLogGroupArn:     "LoggingConfiguration.SchedulerLogs.CloudWatchLogGroupArn",
		LoggingConfiguration_TaskLogs_CloudWatchLogGroupArn:          "LoggingConfiguration.TaskLogs.CloudWatchLogGroupArn",
		LoggingConfiguration_WebserverLogs_CloudWatchLogGroupArn:     "LoggingConfiguration.WebserverLogs.CloudWatchLogGroupArn",
		LoggingConfiguration_WorkerLogs_CloudWatchLogGroupArn:        "LoggingConfiguration.WorkerLogs.CloudWatchLogGroupArn",
		WebserverUrl:                "WebserverUrl",
		WebserverVpcEndpointService: "WebserverVpcEndpointService",
	}

	// AWS_MWAA_Environment__AttributesSlice reports all the CloudFormation attributes for AWS::MWAA::Environment.
	AWS_MWAA_Environment__AttributesSlice = []string{
		AWS_MWAA_Environment__AttributesMap.Arn,
		AWS_MWAA_Environment__AttributesMap.CeleryExecutorQueue,
		AWS_MWAA_Environment__AttributesMap.DatabaseVpcEndpointService,
		AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_DagProcessingLogs_CloudWatchLogGroupArn,
		AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_SchedulerLogs_CloudWatchLogGroupArn,
		AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_TaskLogs_CloudWatchLogGroupArn,
		AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_WebserverLogs_CloudWatchLogGroupArn,
		AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_WorkerLogs_CloudWatchLogGroupArn,
		AWS_MWAA_Environment__AttributesMap.WebserverUrl,
		AWS_MWAA_Environment__AttributesMap.WebserverVpcEndpointService,
	}
)

var (
	// AWS_MWAA_Environment__PropertiesMap reports all the CloudFormation properties for AWS::MWAA::Environment.
	AWS_MWAA_Environment__PropertiesMap = struct {
		AirflowConfigurationOptions  string
		AirflowVersion               string
		DagS3Path                    string
		EndpointManagement           string
		EnvironmentClass             string
		ExecutionRoleArn             string
		KmsKey                       string
		LoggingConfiguration         string
		MaxWebservers                string
		MaxWorkers                   string
		MinWebservers                string
		MinWorkers                   string
		Name                         string
		NetworkConfiguration         string
		PluginsS3ObjectVersion       string
		PluginsS3Path                string
		RequirementsS3ObjectVersion  string
		RequirementsS3Path           string
		Schedulers                   string
		SourceBucketArn              string
		StartupScriptS3ObjectVersion string
		StartupScriptS3Path          string
		Tags                         string
		WebserverAccessMode          string
		WeeklyMaintenanceWindowStart string
	}{
		AirflowConfigurationOptions:  "AirflowConfigurationOptions",
		AirflowVersion:               "AirflowVersion",
		DagS3Path:                    "DagS3Path",
		EndpointManagement:           "EndpointManagement",
		EnvironmentClass:             "EnvironmentClass",
		ExecutionRoleArn:             "ExecutionRoleArn",
		KmsKey:                       "KmsKey",
		LoggingConfiguration:         "LoggingConfiguration",
		MaxWebservers:                "MaxWebservers",
		MaxWorkers:                   "MaxWorkers",
		MinWebservers:                "MinWebservers",
		MinWorkers:                   "MinWorkers",
		Name:                         "Name",
		NetworkConfiguration:         "NetworkConfiguration",
		PluginsS3ObjectVersion:       "PluginsS3ObjectVersion",
		PluginsS3Path:                "PluginsS3Path",
		RequirementsS3ObjectVersion:  "RequirementsS3ObjectVersion",
		RequirementsS3Path:           "RequirementsS3Path",
		Schedulers:                   "Schedulers",
		SourceBucketArn:              "SourceBucketArn",
		StartupScriptS3ObjectVersion: "StartupScriptS3ObjectVersion",
		StartupScriptS3Path:          "StartupScriptS3Path",
		Tags:                         "Tags",
		WebserverAccessMode:          "WebserverAccessMode",
		WeeklyMaintenanceWindowStart: "WeeklyMaintenanceWindowStart",
	}

	// AWS_MWAA_Environment__PropertiesSlice reports all the CloudFormation properties for AWS::MWAA::Environment.
	AWS_MWAA_Environment__PropertiesSlice = []string{
		AWS_MWAA_Environment__PropertiesMap.AirflowConfigurationOptions,
		AWS_MWAA_Environment__PropertiesMap.AirflowVersion,
		AWS_MWAA_Environment__PropertiesMap.DagS3Path,
		AWS_MWAA_Environment__PropertiesMap.EndpointManagement,
		AWS_MWAA_Environment__PropertiesMap.EnvironmentClass,
		AWS_MWAA_Environment__PropertiesMap.ExecutionRoleArn,
		AWS_MWAA_Environment__PropertiesMap.KmsKey,
		AWS_MWAA_Environment__PropertiesMap.LoggingConfiguration,
		AWS_MWAA_Environment__PropertiesMap.MaxWebservers,
		AWS_MWAA_Environment__PropertiesMap.MaxWorkers,
		AWS_MWAA_Environment__PropertiesMap.MinWebservers,
		AWS_MWAA_Environment__PropertiesMap.MinWorkers,
		AWS_MWAA_Environment__PropertiesMap.Name,
		AWS_MWAA_Environment__PropertiesMap.NetworkConfiguration,
		AWS_MWAA_Environment__PropertiesMap.PluginsS3ObjectVersion,
		AWS_MWAA_Environment__PropertiesMap.PluginsS3Path,
		AWS_MWAA_Environment__PropertiesMap.RequirementsS3ObjectVersion,
		AWS_MWAA_Environment__PropertiesMap.RequirementsS3Path,
		AWS_MWAA_Environment__PropertiesMap.Schedulers,
		AWS_MWAA_Environment__PropertiesMap.SourceBucketArn,
		AWS_MWAA_Environment__PropertiesMap.StartupScriptS3ObjectVersion,
		AWS_MWAA_Environment__PropertiesMap.StartupScriptS3Path,
		AWS_MWAA_Environment__PropertiesMap.Tags,
		AWS_MWAA_Environment__PropertiesMap.WebserverAccessMode,
		AWS_MWAA_Environment__PropertiesMap.WeeklyMaintenanceWindowStart,
	}
)

// AWS_MWAA_Environment is a binding for AWS::MWAA::Environment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html
type AWS_MWAA_Environment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AirflowConfigurationOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-airflowconfigurationoptions
	AirflowConfigurationOptions cfz.Expression[json.RawMessage] `json:"AirflowConfigurationOptions,omitempty"`

	// AirflowVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-airflowversion
	AirflowVersion cfz.Expression[string] `json:"AirflowVersion,omitempty"`

	// DagS3Path is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-dags3path
	DagS3Path cfz.Expression[string] `json:"DagS3Path,omitempty"`

	// EndpointManagement is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-endpointmanagement
	EndpointManagement cfz.Expression[string] `json:"EndpointManagement,omitempty"`

	// EnvironmentClass is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-environmentclass
	EnvironmentClass cfz.Expression[string] `json:"EnvironmentClass,omitempty"`

	// ExecutionRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-executionrolearn
	ExecutionRoleArn cfz.Expression[string] `json:"ExecutionRoleArn,omitempty"`

	// KmsKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-kmskey
	KmsKey cfz.Expression[string] `json:"KmsKey,omitempty"`

	// LoggingConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-loggingconfiguration
	LoggingConfiguration cfz.Expression[AWS_MWAA_Environment_LoggingConfiguration] `json:"LoggingConfiguration,omitempty"`

	// MaxWebservers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-maxwebservers
	MaxWebservers cfz.Expression[int32] `json:"MaxWebservers,omitempty"`

	// MaxWorkers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-maxworkers
	MaxWorkers cfz.Expression[int32] `json:"MaxWorkers,omitempty"`

	// MinWebservers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-minwebservers
	MinWebservers cfz.Expression[int32] `json:"MinWebservers,omitempty"`

	// MinWorkers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-minworkers
	MinWorkers cfz.Expression[int32] `json:"MinWorkers,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// NetworkConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-networkconfiguration
	NetworkConfiguration cfz.Expression[AWS_MWAA_Environment_NetworkConfiguration] `json:"NetworkConfiguration,omitempty"`

	// PluginsS3ObjectVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-pluginss3objectversion
	PluginsS3ObjectVersion cfz.Expression[string] `json:"PluginsS3ObjectVersion,omitempty"`

	// PluginsS3Path is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-pluginss3path
	PluginsS3Path cfz.Expression[string] `json:"PluginsS3Path,omitempty"`

	// RequirementsS3ObjectVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-requirementss3objectversion
	RequirementsS3ObjectVersion cfz.Expression[string] `json:"RequirementsS3ObjectVersion,omitempty"`

	// RequirementsS3Path is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-requirementss3path
	RequirementsS3Path cfz.Expression[string] `json:"RequirementsS3Path,omitempty"`

	// Schedulers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-schedulers
	Schedulers cfz.Expression[int32] `json:"Schedulers,omitempty"`

	// SourceBucketArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-sourcebucketarn
	SourceBucketArn cfz.Expression[string] `json:"SourceBucketArn,omitempty"`

	// StartupScriptS3ObjectVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-startupscripts3objectversion
	StartupScriptS3ObjectVersion cfz.Expression[string] `json:"StartupScriptS3ObjectVersion,omitempty"`

	// StartupScriptS3Path is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-startupscripts3path
	StartupScriptS3Path cfz.Expression[string] `json:"StartupScriptS3Path,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-tags
	Tags cfz.Expression[json.RawMessage] `json:"Tags,omitempty"`

	// WebserverAccessMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-webserveraccessmode
	WebserverAccessMode cfz.Expression[string] `json:"WebserverAccessMode,omitempty"`

	// WeeklyMaintenanceWindowStart is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-weeklymaintenancewindowstart
	WeeklyMaintenanceWindowStart cfz.Expression[string] `json:"WeeklyMaintenanceWindowStart,omitempty"`
}

// New__AWS_MWAA_Environment initializes a new *AWS_MWAA_Environment.
func New__AWS_MWAA_Environment(logicalName string) *AWS_MWAA_Environment {
	return &AWS_MWAA_Environment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_MWAA_Environment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_MWAA_Environment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_MWAA_Environment) GetType() string {
	return AWS_MWAA_Environment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_MWAA_Environment) Set__LogicalName(v string) *AWS_MWAA_Environment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_MWAA_Environment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_MWAA_Environment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_MWAA_Environment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_MWAA_Environment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_MWAA_Environment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_MWAA_Environment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_MWAA_Environment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_MWAA_Environment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_MWAA_Environment) Set__RequestedOutputs(v []cfz.Output) *AWS_MWAA_Environment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_MWAA_Environment) Add__RequestedOutputs(v ...cfz.Output) *AWS_MWAA_Environment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AirflowConfigurationOptions updates property "AirflowConfigurationOptions".
func (t *AWS_MWAA_Environment) Set__AirflowConfigurationOptions(v cfz.Expression[json.RawMessage]) *AWS_MWAA_Environment {
	t.AirflowConfigurationOptions = v
	return t
}

// SetV__AirflowConfigurationOptions updates property "AirflowConfigurationOptions".
func (t *AWS_MWAA_Environment) SetV__AirflowConfigurationOptions(v json.RawMessage) *AWS_MWAA_Environment {
	t.AirflowConfigurationOptions = cfz.V(v)
	return t
}

// Set__AirflowVersion updates property "AirflowVersion".
func (t *AWS_MWAA_Environment) Set__AirflowVersion(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.AirflowVersion = v
	return t
}

// SetV__AirflowVersion updates property "AirflowVersion".
func (t *AWS_MWAA_Environment) SetV__AirflowVersion(v string) *AWS_MWAA_Environment {
	t.AirflowVersion = cfz.V(v)
	return t
}

// Set__DagS3Path updates property "DagS3Path".
func (t *AWS_MWAA_Environment) Set__DagS3Path(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.DagS3Path = v
	return t
}

// SetV__DagS3Path updates property "DagS3Path".
func (t *AWS_MWAA_Environment) SetV__DagS3Path(v string) *AWS_MWAA_Environment {
	t.DagS3Path = cfz.V(v)
	return t
}

// Set__EndpointManagement updates property "EndpointManagement".
func (t *AWS_MWAA_Environment) Set__EndpointManagement(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.EndpointManagement = v
	return t
}

// SetV__EndpointManagement updates property "EndpointManagement".
func (t *AWS_MWAA_Environment) SetV__EndpointManagement(v string) *AWS_MWAA_Environment {
	t.EndpointManagement = cfz.V(v)
	return t
}

// Set__EnvironmentClass updates property "EnvironmentClass".
func (t *AWS_MWAA_Environment) Set__EnvironmentClass(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.EnvironmentClass = v
	return t
}

// SetV__EnvironmentClass updates property "EnvironmentClass".
func (t *AWS_MWAA_Environment) SetV__EnvironmentClass(v string) *AWS_MWAA_Environment {
	t.EnvironmentClass = cfz.V(v)
	return t
}

// Set__ExecutionRoleArn updates property "ExecutionRoleArn".
func (t *AWS_MWAA_Environment) Set__ExecutionRoleArn(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.ExecutionRoleArn = v
	return t
}

// SetV__ExecutionRoleArn updates property "ExecutionRoleArn".
func (t *AWS_MWAA_Environment) SetV__ExecutionRoleArn(v string) *AWS_MWAA_Environment {
	t.ExecutionRoleArn = cfz.V(v)
	return t
}

// Set__KmsKey updates property "KmsKey".
func (t *AWS_MWAA_Environment) Set__KmsKey(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.KmsKey = v
	return t
}

// SetV__KmsKey updates property "KmsKey".
func (t *AWS_MWAA_Environment) SetV__KmsKey(v string) *AWS_MWAA_Environment {
	t.KmsKey = cfz.V(v)
	return t
}

// Set__LoggingConfiguration updates property "LoggingConfiguration".
func (t *AWS_MWAA_Environment) Set__LoggingConfiguration(v cfz.Expression[AWS_MWAA_Environment_LoggingConfiguration]) *AWS_MWAA_Environment {
	t.LoggingConfiguration = v
	return t
}

// SetV__LoggingConfiguration updates property "LoggingConfiguration".
func (t *AWS_MWAA_Environment) SetV__LoggingConfiguration(v AWS_MWAA_Environment_LoggingConfiguration) *AWS_MWAA_Environment {
	t.LoggingConfiguration = cfz.V(v)
	return t
}

// Set__MaxWebservers updates property "MaxWebservers".
func (t *AWS_MWAA_Environment) Set__MaxWebservers(v cfz.Expression[int32]) *AWS_MWAA_Environment {
	t.MaxWebservers = v
	return t
}

// SetV__MaxWebservers updates property "MaxWebservers".
func (t *AWS_MWAA_Environment) SetV__MaxWebservers(v int32) *AWS_MWAA_Environment {
	t.MaxWebservers = cfz.V(v)
	return t
}

// Set__MaxWorkers updates property "MaxWorkers".
func (t *AWS_MWAA_Environment) Set__MaxWorkers(v cfz.Expression[int32]) *AWS_MWAA_Environment {
	t.MaxWorkers = v
	return t
}

// SetV__MaxWorkers updates property "MaxWorkers".
func (t *AWS_MWAA_Environment) SetV__MaxWorkers(v int32) *AWS_MWAA_Environment {
	t.MaxWorkers = cfz.V(v)
	return t
}

// Set__MinWebservers updates property "MinWebservers".
func (t *AWS_MWAA_Environment) Set__MinWebservers(v cfz.Expression[int32]) *AWS_MWAA_Environment {
	t.MinWebservers = v
	return t
}

// SetV__MinWebservers updates property "MinWebservers".
func (t *AWS_MWAA_Environment) SetV__MinWebservers(v int32) *AWS_MWAA_Environment {
	t.MinWebservers = cfz.V(v)
	return t
}

// Set__MinWorkers updates property "MinWorkers".
func (t *AWS_MWAA_Environment) Set__MinWorkers(v cfz.Expression[int32]) *AWS_MWAA_Environment {
	t.MinWorkers = v
	return t
}

// SetV__MinWorkers updates property "MinWorkers".
func (t *AWS_MWAA_Environment) SetV__MinWorkers(v int32) *AWS_MWAA_Environment {
	t.MinWorkers = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_MWAA_Environment) Set__Name(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_MWAA_Environment) SetV__Name(v string) *AWS_MWAA_Environment {
	t.Name = cfz.V(v)
	return t
}

// Set__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_MWAA_Environment) Set__NetworkConfiguration(v cfz.Expression[AWS_MWAA_Environment_NetworkConfiguration]) *AWS_MWAA_Environment {
	t.NetworkConfiguration = v
	return t
}

// SetV__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_MWAA_Environment) SetV__NetworkConfiguration(v AWS_MWAA_Environment_NetworkConfiguration) *AWS_MWAA_Environment {
	t.NetworkConfiguration = cfz.V(v)
	return t
}

// Set__PluginsS3ObjectVersion updates property "PluginsS3ObjectVersion".
func (t *AWS_MWAA_Environment) Set__PluginsS3ObjectVersion(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.PluginsS3ObjectVersion = v
	return t
}

// SetV__PluginsS3ObjectVersion updates property "PluginsS3ObjectVersion".
func (t *AWS_MWAA_Environment) SetV__PluginsS3ObjectVersion(v string) *AWS_MWAA_Environment {
	t.PluginsS3ObjectVersion = cfz.V(v)
	return t
}

// Set__PluginsS3Path updates property "PluginsS3Path".
func (t *AWS_MWAA_Environment) Set__PluginsS3Path(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.PluginsS3Path = v
	return t
}

// SetV__PluginsS3Path updates property "PluginsS3Path".
func (t *AWS_MWAA_Environment) SetV__PluginsS3Path(v string) *AWS_MWAA_Environment {
	t.PluginsS3Path = cfz.V(v)
	return t
}

// Set__RequirementsS3ObjectVersion updates property "RequirementsS3ObjectVersion".
func (t *AWS_MWAA_Environment) Set__RequirementsS3ObjectVersion(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.RequirementsS3ObjectVersion = v
	return t
}

// SetV__RequirementsS3ObjectVersion updates property "RequirementsS3ObjectVersion".
func (t *AWS_MWAA_Environment) SetV__RequirementsS3ObjectVersion(v string) *AWS_MWAA_Environment {
	t.RequirementsS3ObjectVersion = cfz.V(v)
	return t
}

// Set__RequirementsS3Path updates property "RequirementsS3Path".
func (t *AWS_MWAA_Environment) Set__RequirementsS3Path(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.RequirementsS3Path = v
	return t
}

// SetV__RequirementsS3Path updates property "RequirementsS3Path".
func (t *AWS_MWAA_Environment) SetV__RequirementsS3Path(v string) *AWS_MWAA_Environment {
	t.RequirementsS3Path = cfz.V(v)
	return t
}

// Set__Schedulers updates property "Schedulers".
func (t *AWS_MWAA_Environment) Set__Schedulers(v cfz.Expression[int32]) *AWS_MWAA_Environment {
	t.Schedulers = v
	return t
}

// SetV__Schedulers updates property "Schedulers".
func (t *AWS_MWAA_Environment) SetV__Schedulers(v int32) *AWS_MWAA_Environment {
	t.Schedulers = cfz.V(v)
	return t
}

// Set__SourceBucketArn updates property "SourceBucketArn".
func (t *AWS_MWAA_Environment) Set__SourceBucketArn(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.SourceBucketArn = v
	return t
}

// SetV__SourceBucketArn updates property "SourceBucketArn".
func (t *AWS_MWAA_Environment) SetV__SourceBucketArn(v string) *AWS_MWAA_Environment {
	t.SourceBucketArn = cfz.V(v)
	return t
}

// Set__StartupScriptS3ObjectVersion updates property "StartupScriptS3ObjectVersion".
func (t *AWS_MWAA_Environment) Set__StartupScriptS3ObjectVersion(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.StartupScriptS3ObjectVersion = v
	return t
}

// SetV__StartupScriptS3ObjectVersion updates property "StartupScriptS3ObjectVersion".
func (t *AWS_MWAA_Environment) SetV__StartupScriptS3ObjectVersion(v string) *AWS_MWAA_Environment {
	t.StartupScriptS3ObjectVersion = cfz.V(v)
	return t
}

// Set__StartupScriptS3Path updates property "StartupScriptS3Path".
func (t *AWS_MWAA_Environment) Set__StartupScriptS3Path(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.StartupScriptS3Path = v
	return t
}

// SetV__StartupScriptS3Path updates property "StartupScriptS3Path".
func (t *AWS_MWAA_Environment) SetV__StartupScriptS3Path(v string) *AWS_MWAA_Environment {
	t.StartupScriptS3Path = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_MWAA_Environment) Set__Tags(v cfz.Expression[json.RawMessage]) *AWS_MWAA_Environment {
	t.Tags = v
	return t
}

// SetV__Tags updates property "Tags".
func (t *AWS_MWAA_Environment) SetV__Tags(v json.RawMessage) *AWS_MWAA_Environment {
	t.Tags = cfz.V(v)
	return t
}

// Set__WebserverAccessMode updates property "WebserverAccessMode".
func (t *AWS_MWAA_Environment) Set__WebserverAccessMode(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.WebserverAccessMode = v
	return t
}

// SetV__WebserverAccessMode updates property "WebserverAccessMode".
func (t *AWS_MWAA_Environment) SetV__WebserverAccessMode(v string) *AWS_MWAA_Environment {
	t.WebserverAccessMode = cfz.V(v)
	return t
}

// Set__WeeklyMaintenanceWindowStart updates property "WeeklyMaintenanceWindowStart".
func (t *AWS_MWAA_Environment) Set__WeeklyMaintenanceWindowStart(v cfz.Expression[string]) *AWS_MWAA_Environment {
	t.WeeklyMaintenanceWindowStart = v
	return t
}

// SetV__WeeklyMaintenanceWindowStart updates property "WeeklyMaintenanceWindowStart".
func (t *AWS_MWAA_Environment) SetV__WeeklyMaintenanceWindowStart(v string) *AWS_MWAA_Environment {
	t.WeeklyMaintenanceWindowStart = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_MWAA_Environment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_MWAA_Environment) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.Arn))
}

// GetAtt__CeleryExecutorQueue returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CeleryExecutorQueue
func (t *AWS_MWAA_Environment) GetAtt__CeleryExecutorQueue() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.CeleryExecutorQueue))
}

// GetAtt__DatabaseVpcEndpointService returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DatabaseVpcEndpointService
func (t *AWS_MWAA_Environment) GetAtt__DatabaseVpcEndpointService() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.DatabaseVpcEndpointService))
}

// GetAtt__LoggingConfiguration_DagProcessingLogs_CloudWatchLogGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoggingConfiguration.DagProcessingLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetAtt__LoggingConfiguration_DagProcessingLogs_CloudWatchLogGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_DagProcessingLogs_CloudWatchLogGroupArn))
}

// GetAtt__LoggingConfiguration_SchedulerLogs_CloudWatchLogGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoggingConfiguration.SchedulerLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetAtt__LoggingConfiguration_SchedulerLogs_CloudWatchLogGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_SchedulerLogs_CloudWatchLogGroupArn))
}

// GetAtt__LoggingConfiguration_TaskLogs_CloudWatchLogGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoggingConfiguration.TaskLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetAtt__LoggingConfiguration_TaskLogs_CloudWatchLogGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_TaskLogs_CloudWatchLogGroupArn))
}

// GetAtt__LoggingConfiguration_WebserverLogs_CloudWatchLogGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoggingConfiguration.WebserverLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetAtt__LoggingConfiguration_WebserverLogs_CloudWatchLogGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_WebserverLogs_CloudWatchLogGroupArn))
}

// GetAtt__LoggingConfiguration_WorkerLogs_CloudWatchLogGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoggingConfiguration.WorkerLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetAtt__LoggingConfiguration_WorkerLogs_CloudWatchLogGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.LoggingConfiguration_WorkerLogs_CloudWatchLogGroupArn))
}

// GetAtt__WebserverUrl returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: WebserverUrl
func (t *AWS_MWAA_Environment) GetAtt__WebserverUrl() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.WebserverUrl))
}

// GetAtt__WebserverVpcEndpointService returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: WebserverVpcEndpointService
func (t *AWS_MWAA_Environment) GetAtt__WebserverVpcEndpointService() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MWAA_Environment__AttributesMap.WebserverVpcEndpointService))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_MWAA_Environment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CeleryExecutorQueue returns a conventionally configured output for an attribute of this resource.
// Attribute: CeleryExecutorQueue
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__CeleryExecutorQueue(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCeleryExecutorQueue", t.GetAtt__CeleryExecutorQueue())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DatabaseVpcEndpointService returns a conventionally configured output for an attribute of this resource.
// Attribute: DatabaseVpcEndpointService
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__DatabaseVpcEndpointService(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDatabaseVpcEndpointService", t.GetAtt__DatabaseVpcEndpointService())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoggingConfiguration_DagProcessingLogs_CloudWatchLogGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: LoggingConfiguration.DagProcessingLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__LoggingConfiguration_DagProcessingLogs_CloudWatchLogGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoggingConfigurationDagProcessingLogsCloudWatchLogGroupArn", t.GetAtt__LoggingConfiguration_DagProcessingLogs_CloudWatchLogGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoggingConfiguration_SchedulerLogs_CloudWatchLogGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: LoggingConfiguration.SchedulerLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__LoggingConfiguration_SchedulerLogs_CloudWatchLogGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoggingConfigurationSchedulerLogsCloudWatchLogGroupArn", t.GetAtt__LoggingConfiguration_SchedulerLogs_CloudWatchLogGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoggingConfiguration_TaskLogs_CloudWatchLogGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: LoggingConfiguration.TaskLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__LoggingConfiguration_TaskLogs_CloudWatchLogGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoggingConfigurationTaskLogsCloudWatchLogGroupArn", t.GetAtt__LoggingConfiguration_TaskLogs_CloudWatchLogGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoggingConfiguration_WebserverLogs_CloudWatchLogGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: LoggingConfiguration.WebserverLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__LoggingConfiguration_WebserverLogs_CloudWatchLogGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoggingConfigurationWebserverLogsCloudWatchLogGroupArn", t.GetAtt__LoggingConfiguration_WebserverLogs_CloudWatchLogGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoggingConfiguration_WorkerLogs_CloudWatchLogGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: LoggingConfiguration.WorkerLogs.CloudWatchLogGroupArn
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__LoggingConfiguration_WorkerLogs_CloudWatchLogGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoggingConfigurationWorkerLogsCloudWatchLogGroupArn", t.GetAtt__LoggingConfiguration_WorkerLogs_CloudWatchLogGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__WebserverUrl returns a conventionally configured output for an attribute of this resource.
// Attribute: WebserverUrl
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__WebserverUrl(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttWebserverUrl", t.GetAtt__WebserverUrl())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__WebserverVpcEndpointService returns a conventionally configured output for an attribute of this resource.
// Attribute: WebserverVpcEndpointService
func (t *AWS_MWAA_Environment) GetConventionalOutputAtt__WebserverVpcEndpointService(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttWebserverVpcEndpointService", t.GetAtt__WebserverVpcEndpointService())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_MWAA_Environment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_MWAA_Environment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_MWAA_Environment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
