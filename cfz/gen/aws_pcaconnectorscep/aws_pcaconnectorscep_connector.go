// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_pcaconnectorscep

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_PCAConnectorSCEP_Connector)(nil)
	_ cfz.Resource                   = (*AWS_PCAConnectorSCEP_Connector)(nil)
)

const (
	// AWS_PCAConnectorSCEP_Connector__Type is the CloudFormation type for AWS::PCAConnectorSCEP::Connector.
	AWS_PCAConnectorSCEP_Connector__Type = "AWS::PCAConnectorSCEP::Connector"
)

var (
	// AWS_PCAConnectorSCEP_Connector__AttributesMap reports all the CloudFormation attributes for AWS::PCAConnectorSCEP::Connector.
	AWS_PCAConnectorSCEP_Connector__AttributesMap = struct {
		ConnectorArn                 string
		Endpoint                     string
		OpenIdConfiguration          string
		OpenIdConfiguration_Audience string
		OpenIdConfiguration_Issuer   string
		OpenIdConfiguration_Subject  string
		Type                         string
	}{
		ConnectorArn:                 "ConnectorArn",
		Endpoint:                     "Endpoint",
		OpenIdConfiguration:          "OpenIdConfiguration",
		OpenIdConfiguration_Audience: "OpenIdConfiguration.Audience",
		OpenIdConfiguration_Issuer:   "OpenIdConfiguration.Issuer",
		OpenIdConfiguration_Subject:  "OpenIdConfiguration.Subject",
		Type:                         "Type",
	}

	// AWS_PCAConnectorSCEP_Connector__AttributesSlice reports all the CloudFormation attributes for AWS::PCAConnectorSCEP::Connector.
	AWS_PCAConnectorSCEP_Connector__AttributesSlice = []string{
		AWS_PCAConnectorSCEP_Connector__AttributesMap.ConnectorArn,
		AWS_PCAConnectorSCEP_Connector__AttributesMap.Endpoint,
		AWS_PCAConnectorSCEP_Connector__AttributesMap.OpenIdConfiguration,
		AWS_PCAConnectorSCEP_Connector__AttributesMap.OpenIdConfiguration_Audience,
		AWS_PCAConnectorSCEP_Connector__AttributesMap.OpenIdConfiguration_Issuer,
		AWS_PCAConnectorSCEP_Connector__AttributesMap.OpenIdConfiguration_Subject,
		AWS_PCAConnectorSCEP_Connector__AttributesMap.Type,
	}
)

var (
	// AWS_PCAConnectorSCEP_Connector__PropertiesMap reports all the CloudFormation properties for AWS::PCAConnectorSCEP::Connector.
	AWS_PCAConnectorSCEP_Connector__PropertiesMap = struct {
		CertificateAuthorityArn string
		MobileDeviceManagement  string
		Tags                    string
	}{
		CertificateAuthorityArn: "CertificateAuthorityArn",
		MobileDeviceManagement:  "MobileDeviceManagement",
		Tags:                    "Tags",
	}

	// AWS_PCAConnectorSCEP_Connector__PropertiesSlice reports all the CloudFormation properties for AWS::PCAConnectorSCEP::Connector.
	AWS_PCAConnectorSCEP_Connector__PropertiesSlice = []string{
		AWS_PCAConnectorSCEP_Connector__PropertiesMap.CertificateAuthorityArn,
		AWS_PCAConnectorSCEP_Connector__PropertiesMap.MobileDeviceManagement,
		AWS_PCAConnectorSCEP_Connector__PropertiesMap.Tags,
	}
)

// AWS_PCAConnectorSCEP_Connector is a binding for AWS::PCAConnectorSCEP::Connector.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-connector.html
type AWS_PCAConnectorSCEP_Connector struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CertificateAuthorityArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-connector.html#cfn-pcaconnectorscep-connector-certificateauthorityarn
	CertificateAuthorityArn cfz.Expression[string] `json:"CertificateAuthorityArn,omitempty"`

	// MobileDeviceManagement is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-connector.html#cfn-pcaconnectorscep-connector-mobiledevicemanagement
	MobileDeviceManagement cfz.Expression[AWS_PCAConnectorSCEP_Connector_MobileDeviceManagement] `json:"MobileDeviceManagement,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pcaconnectorscep-connector.html#cfn-pcaconnectorscep-connector-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`
}

// New__AWS_PCAConnectorSCEP_Connector initializes a new *AWS_PCAConnectorSCEP_Connector.
func New__AWS_PCAConnectorSCEP_Connector(logicalName string) *AWS_PCAConnectorSCEP_Connector {
	return &AWS_PCAConnectorSCEP_Connector{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_PCAConnectorSCEP_Connector) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_PCAConnectorSCEP_Connector) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_PCAConnectorSCEP_Connector) GetType() string {
	return AWS_PCAConnectorSCEP_Connector__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_PCAConnectorSCEP_Connector) Set__LogicalName(v string) *AWS_PCAConnectorSCEP_Connector {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_PCAConnectorSCEP_Connector) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_PCAConnectorSCEP_Connector {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_PCAConnectorSCEP_Connector) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_PCAConnectorSCEP_Connector {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_PCAConnectorSCEP_Connector) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_PCAConnectorSCEP_Connector {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_PCAConnectorSCEP_Connector) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_PCAConnectorSCEP_Connector {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_PCAConnectorSCEP_Connector) Set__RequestedOutputs(v []cfz.Output) *AWS_PCAConnectorSCEP_Connector {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_PCAConnectorSCEP_Connector) Add__RequestedOutputs(v ...cfz.Output) *AWS_PCAConnectorSCEP_Connector {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CertificateAuthorityArn updates property "CertificateAuthorityArn".
func (t *AWS_PCAConnectorSCEP_Connector) Set__CertificateAuthorityArn(v cfz.Expression[string]) *AWS_PCAConnectorSCEP_Connector {
	t.CertificateAuthorityArn = v
	return t
}

// SetV__CertificateAuthorityArn updates property "CertificateAuthorityArn".
func (t *AWS_PCAConnectorSCEP_Connector) SetV__CertificateAuthorityArn(v string) *AWS_PCAConnectorSCEP_Connector {
	t.CertificateAuthorityArn = cfz.V(v)
	return t
}

// Set__MobileDeviceManagement updates property "MobileDeviceManagement".
func (t *AWS_PCAConnectorSCEP_Connector) Set__MobileDeviceManagement(v cfz.Expression[AWS_PCAConnectorSCEP_Connector_MobileDeviceManagement]) *AWS_PCAConnectorSCEP_Connector {
	t.MobileDeviceManagement = v
	return t
}

// SetV__MobileDeviceManagement updates property "MobileDeviceManagement".
func (t *AWS_PCAConnectorSCEP_Connector) SetV__MobileDeviceManagement(v AWS_PCAConnectorSCEP_Connector_MobileDeviceManagement) *AWS_PCAConnectorSCEP_Connector {
	t.MobileDeviceManagement = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_PCAConnectorSCEP_Connector) Set__Tags(v cfz.ExpressionMap[string]) *AWS_PCAConnectorSCEP_Connector {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_PCAConnectorSCEP_Connector) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_PCAConnectorSCEP_Connector {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_PCAConnectorSCEP_Connector) SetMV__Tags(v ...map[string]string) *AWS_PCAConnectorSCEP_Connector {
	t.Tags = cfz.MV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_PCAConnectorSCEP_Connector) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ConnectorArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConnectorArn
func (t *AWS_PCAConnectorSCEP_Connector) GetAtt__ConnectorArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PCAConnectorSCEP_Connector__AttributesMap.ConnectorArn))
}

// GetAtt__Endpoint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint
func (t *AWS_PCAConnectorSCEP_Connector) GetAtt__Endpoint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PCAConnectorSCEP_Connector__AttributesMap.Endpoint))
}

// GetAtt__OpenIdConfiguration returns a $cfz.Expression[AWS_PCAConnectorSCEP_Connector_OpenIdConfiguration] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OpenIdConfiguration
func (t *AWS_PCAConnectorSCEP_Connector) GetAtt__OpenIdConfiguration() cfz.Expression[AWS_PCAConnectorSCEP_Connector_OpenIdConfiguration] {
	return cfz.GetAtt[AWS_PCAConnectorSCEP_Connector_OpenIdConfiguration](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PCAConnectorSCEP_Connector__AttributesMap.OpenIdConfiguration))
}

// GetAtt__OpenIdConfiguration_Audience returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OpenIdConfiguration.Audience
func (t *AWS_PCAConnectorSCEP_Connector) GetAtt__OpenIdConfiguration_Audience() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PCAConnectorSCEP_Connector__AttributesMap.OpenIdConfiguration_Audience))
}

// GetAtt__OpenIdConfiguration_Issuer returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OpenIdConfiguration.Issuer
func (t *AWS_PCAConnectorSCEP_Connector) GetAtt__OpenIdConfiguration_Issuer() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PCAConnectorSCEP_Connector__AttributesMap.OpenIdConfiguration_Issuer))
}

// GetAtt__OpenIdConfiguration_Subject returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OpenIdConfiguration.Subject
func (t *AWS_PCAConnectorSCEP_Connector) GetAtt__OpenIdConfiguration_Subject() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PCAConnectorSCEP_Connector__AttributesMap.OpenIdConfiguration_Subject))
}

// GetAtt__Type returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Type
func (t *AWS_PCAConnectorSCEP_Connector) GetAtt__Type() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PCAConnectorSCEP_Connector__AttributesMap.Type))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_PCAConnectorSCEP_Connector) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConnectorArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ConnectorArn
func (t *AWS_PCAConnectorSCEP_Connector) GetConventionalOutputAtt__ConnectorArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConnectorArn", t.GetAtt__ConnectorArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint
func (t *AWS_PCAConnectorSCEP_Connector) GetConventionalOutputAtt__Endpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpoint", t.GetAtt__Endpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OpenIdConfiguration returns a conventionally configured output for an attribute of this resource.
// Attribute: OpenIdConfiguration
func (t *AWS_PCAConnectorSCEP_Connector) GetConventionalOutputAtt__OpenIdConfiguration(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOpenIdConfiguration", t.GetAtt__OpenIdConfiguration())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OpenIdConfiguration_Audience returns a conventionally configured output for an attribute of this resource.
// Attribute: OpenIdConfiguration.Audience
func (t *AWS_PCAConnectorSCEP_Connector) GetConventionalOutputAtt__OpenIdConfiguration_Audience(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOpenIdConfigurationAudience", t.GetAtt__OpenIdConfiguration_Audience())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OpenIdConfiguration_Issuer returns a conventionally configured output for an attribute of this resource.
// Attribute: OpenIdConfiguration.Issuer
func (t *AWS_PCAConnectorSCEP_Connector) GetConventionalOutputAtt__OpenIdConfiguration_Issuer(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOpenIdConfigurationIssuer", t.GetAtt__OpenIdConfiguration_Issuer())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OpenIdConfiguration_Subject returns a conventionally configured output for an attribute of this resource.
// Attribute: OpenIdConfiguration.Subject
func (t *AWS_PCAConnectorSCEP_Connector) GetConventionalOutputAtt__OpenIdConfiguration_Subject(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOpenIdConfigurationSubject", t.GetAtt__OpenIdConfiguration_Subject())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Type returns a conventionally configured output for an attribute of this resource.
// Attribute: Type
func (t *AWS_PCAConnectorSCEP_Connector) GetConventionalOutputAtt__Type(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttType", t.GetAtt__Type())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_PCAConnectorSCEP_Connector) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_PCAConnectorSCEP_Connector

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_PCAConnectorSCEP_Connector) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
