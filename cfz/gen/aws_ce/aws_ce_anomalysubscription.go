// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ce

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CE_AnomalySubscription)(nil)
	_ cfz.Resource                   = (*AWS_CE_AnomalySubscription)(nil)
)

const (
	// AWS_CE_AnomalySubscription__Type is the CloudFormation type for AWS::CE::AnomalySubscription.
	AWS_CE_AnomalySubscription__Type = "AWS::CE::AnomalySubscription"
)

var (
	// AWS_CE_AnomalySubscription__AttributesMap reports all the CloudFormation attributes for AWS::CE::AnomalySubscription.
	AWS_CE_AnomalySubscription__AttributesMap = struct {
		AccountId       string
		SubscriptionArn string
	}{
		AccountId:       "AccountId",
		SubscriptionArn: "SubscriptionArn",
	}

	// AWS_CE_AnomalySubscription__AttributesSlice reports all the CloudFormation attributes for AWS::CE::AnomalySubscription.
	AWS_CE_AnomalySubscription__AttributesSlice = []string{
		AWS_CE_AnomalySubscription__AttributesMap.AccountId,
		AWS_CE_AnomalySubscription__AttributesMap.SubscriptionArn,
	}
)

var (
	// AWS_CE_AnomalySubscription__PropertiesMap reports all the CloudFormation properties for AWS::CE::AnomalySubscription.
	AWS_CE_AnomalySubscription__PropertiesMap = struct {
		Frequency           string
		MonitorArnList      string
		ResourceTags        string
		Subscribers         string
		SubscriptionName    string
		Threshold           string
		ThresholdExpression string
	}{
		Frequency:           "Frequency",
		MonitorArnList:      "MonitorArnList",
		ResourceTags:        "ResourceTags",
		Subscribers:         "Subscribers",
		SubscriptionName:    "SubscriptionName",
		Threshold:           "Threshold",
		ThresholdExpression: "ThresholdExpression",
	}

	// AWS_CE_AnomalySubscription__PropertiesSlice reports all the CloudFormation properties for AWS::CE::AnomalySubscription.
	AWS_CE_AnomalySubscription__PropertiesSlice = []string{
		AWS_CE_AnomalySubscription__PropertiesMap.Frequency,
		AWS_CE_AnomalySubscription__PropertiesMap.MonitorArnList,
		AWS_CE_AnomalySubscription__PropertiesMap.ResourceTags,
		AWS_CE_AnomalySubscription__PropertiesMap.Subscribers,
		AWS_CE_AnomalySubscription__PropertiesMap.SubscriptionName,
		AWS_CE_AnomalySubscription__PropertiesMap.Threshold,
		AWS_CE_AnomalySubscription__PropertiesMap.ThresholdExpression,
	}
)

// AWS_CE_AnomalySubscription is a binding for AWS::CE::AnomalySubscription.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html
type AWS_CE_AnomalySubscription struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Frequency is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-frequency
	Frequency cfz.Expression[string] `json:"Frequency,omitempty"`

	// MonitorArnList is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-monitorarnlist
	MonitorArnList cfz.ExpressionSlice[string] `json:"MonitorArnList,omitempty"`

	// ResourceTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-resourcetags
	ResourceTags cfz.ExpressionSlice[AWS_CE_AnomalySubscription_ResourceTag] `json:"ResourceTags,omitempty"`

	// Subscribers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-subscribers
	Subscribers cfz.ExpressionSlice[AWS_CE_AnomalySubscription_Subscriber] `json:"Subscribers,omitempty"`

	// SubscriptionName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-subscriptionname
	SubscriptionName cfz.Expression[string] `json:"SubscriptionName,omitempty"`

	// Threshold is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-threshold
	Threshold cfz.Expression[float64] `json:"Threshold,omitempty"`

	// ThresholdExpression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ce-anomalysubscription.html#cfn-ce-anomalysubscription-thresholdexpression
	ThresholdExpression cfz.Expression[string] `json:"ThresholdExpression,omitempty"`
}

// New__AWS_CE_AnomalySubscription initializes a new *AWS_CE_AnomalySubscription.
func New__AWS_CE_AnomalySubscription(logicalName string) *AWS_CE_AnomalySubscription {
	return &AWS_CE_AnomalySubscription{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CE_AnomalySubscription) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CE_AnomalySubscription) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CE_AnomalySubscription) GetType() string {
	return AWS_CE_AnomalySubscription__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CE_AnomalySubscription) Set__LogicalName(v string) *AWS_CE_AnomalySubscription {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CE_AnomalySubscription) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CE_AnomalySubscription {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CE_AnomalySubscription) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CE_AnomalySubscription {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CE_AnomalySubscription) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CE_AnomalySubscription {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CE_AnomalySubscription) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CE_AnomalySubscription {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CE_AnomalySubscription) Set__RequestedOutputs(v []cfz.Output) *AWS_CE_AnomalySubscription {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CE_AnomalySubscription) Add__RequestedOutputs(v ...cfz.Output) *AWS_CE_AnomalySubscription {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Frequency updates property "Frequency".
func (t *AWS_CE_AnomalySubscription) Set__Frequency(v cfz.Expression[string]) *AWS_CE_AnomalySubscription {
	t.Frequency = v
	return t
}

// SetV__Frequency updates property "Frequency".
func (t *AWS_CE_AnomalySubscription) SetV__Frequency(v string) *AWS_CE_AnomalySubscription {
	t.Frequency = cfz.V(v)
	return t
}

// Set__MonitorArnList updates property "MonitorArnList".
func (t *AWS_CE_AnomalySubscription) Set__MonitorArnList(v cfz.ExpressionSlice[string]) *AWS_CE_AnomalySubscription {
	t.MonitorArnList = v
	return t
}

// SetS__MonitorArnList updates property "MonitorArnList".
func (t *AWS_CE_AnomalySubscription) SetS__MonitorArnList(v ...cfz.Expression[string]) *AWS_CE_AnomalySubscription {
	t.MonitorArnList = cfz.S(v...)
	return t
}

// SetSV__MonitorArnList updates property "MonitorArnList".
func (t *AWS_CE_AnomalySubscription) SetSV__MonitorArnList(v ...string) *AWS_CE_AnomalySubscription {
	t.MonitorArnList = cfz.SV(v...)
	return t
}

// Set__ResourceTags updates property "ResourceTags".
func (t *AWS_CE_AnomalySubscription) Set__ResourceTags(v cfz.ExpressionSlice[AWS_CE_AnomalySubscription_ResourceTag]) *AWS_CE_AnomalySubscription {
	t.ResourceTags = v
	return t
}

// SetS__ResourceTags updates property "ResourceTags".
func (t *AWS_CE_AnomalySubscription) SetS__ResourceTags(v ...cfz.Expression[AWS_CE_AnomalySubscription_ResourceTag]) *AWS_CE_AnomalySubscription {
	t.ResourceTags = cfz.S(v...)
	return t
}

// SetSV__ResourceTags updates property "ResourceTags".
func (t *AWS_CE_AnomalySubscription) SetSV__ResourceTags(v ...AWS_CE_AnomalySubscription_ResourceTag) *AWS_CE_AnomalySubscription {
	t.ResourceTags = cfz.SV(v...)
	return t
}

// Set__Subscribers updates property "Subscribers".
func (t *AWS_CE_AnomalySubscription) Set__Subscribers(v cfz.ExpressionSlice[AWS_CE_AnomalySubscription_Subscriber]) *AWS_CE_AnomalySubscription {
	t.Subscribers = v
	return t
}

// SetS__Subscribers updates property "Subscribers".
func (t *AWS_CE_AnomalySubscription) SetS__Subscribers(v ...cfz.Expression[AWS_CE_AnomalySubscription_Subscriber]) *AWS_CE_AnomalySubscription {
	t.Subscribers = cfz.S(v...)
	return t
}

// SetSV__Subscribers updates property "Subscribers".
func (t *AWS_CE_AnomalySubscription) SetSV__Subscribers(v ...AWS_CE_AnomalySubscription_Subscriber) *AWS_CE_AnomalySubscription {
	t.Subscribers = cfz.SV(v...)
	return t
}

// Set__SubscriptionName updates property "SubscriptionName".
func (t *AWS_CE_AnomalySubscription) Set__SubscriptionName(v cfz.Expression[string]) *AWS_CE_AnomalySubscription {
	t.SubscriptionName = v
	return t
}

// SetV__SubscriptionName updates property "SubscriptionName".
func (t *AWS_CE_AnomalySubscription) SetV__SubscriptionName(v string) *AWS_CE_AnomalySubscription {
	t.SubscriptionName = cfz.V(v)
	return t
}

// Set__Threshold updates property "Threshold".
func (t *AWS_CE_AnomalySubscription) Set__Threshold(v cfz.Expression[float64]) *AWS_CE_AnomalySubscription {
	t.Threshold = v
	return t
}

// SetV__Threshold updates property "Threshold".
func (t *AWS_CE_AnomalySubscription) SetV__Threshold(v float64) *AWS_CE_AnomalySubscription {
	t.Threshold = cfz.V(v)
	return t
}

// Set__ThresholdExpression updates property "ThresholdExpression".
func (t *AWS_CE_AnomalySubscription) Set__ThresholdExpression(v cfz.Expression[string]) *AWS_CE_AnomalySubscription {
	t.ThresholdExpression = v
	return t
}

// SetV__ThresholdExpression updates property "ThresholdExpression".
func (t *AWS_CE_AnomalySubscription) SetV__ThresholdExpression(v string) *AWS_CE_AnomalySubscription {
	t.ThresholdExpression = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CE_AnomalySubscription) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AccountId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AccountId
func (t *AWS_CE_AnomalySubscription) GetAtt__AccountId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CE_AnomalySubscription__AttributesMap.AccountId))
}

// GetAtt__SubscriptionArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SubscriptionArn
func (t *AWS_CE_AnomalySubscription) GetAtt__SubscriptionArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CE_AnomalySubscription__AttributesMap.SubscriptionArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CE_AnomalySubscription) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AccountId returns a conventionally configured output for an attribute of this resource.
// Attribute: AccountId
func (t *AWS_CE_AnomalySubscription) GetConventionalOutputAtt__AccountId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAccountId", t.GetAtt__AccountId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SubscriptionArn returns a conventionally configured output for an attribute of this resource.
// Attribute: SubscriptionArn
func (t *AWS_CE_AnomalySubscription) GetConventionalOutputAtt__SubscriptionArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSubscriptionArn", t.GetAtt__SubscriptionArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CE_AnomalySubscription) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CE_AnomalySubscription

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CE_AnomalySubscription) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
