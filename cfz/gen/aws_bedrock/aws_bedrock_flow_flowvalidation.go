// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_bedrock

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Bedrock_Flow_FlowValidation__Type is the CloudFormation type for AWS::Bedrock::Flow.FlowValidation.
	AWS_Bedrock_Flow_FlowValidation__Type = "AWS::Bedrock::Flow.FlowValidation"
)

var (
	// AWS_Bedrock_Flow_FlowValidation__PropertiesMap reports all the CloudFormation properties for AWS::Bedrock::Flow.FlowValidation.
	AWS_Bedrock_Flow_FlowValidation__PropertiesMap = struct {
		Message string
	}{
		Message: "Message",
	}

	// AWS_Bedrock_Flow_FlowValidation__PropertiesSlice reports all the CloudFormation properties for AWS::Bedrock::Flow.FlowValidation.
	AWS_Bedrock_Flow_FlowValidation__PropertiesSlice = []string{
		AWS_Bedrock_Flow_FlowValidation__PropertiesMap.Message,
	}
)

// AWS_Bedrock_Flow_FlowValidation is a binding for AWS::Bedrock::Flow.FlowValidation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-flow-flowvalidation.html
type AWS_Bedrock_Flow_FlowValidation struct {
	// Message is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-flow-flowvalidation.html#cfn-bedrock-flow-flowvalidation-message
	Message cfz.Expression[string] `json:"Message,omitempty"`
}

// New__AWS_Bedrock_Flow_FlowValidation initializes a new AWS_Bedrock_Flow_FlowValidation.
func New__AWS_Bedrock_Flow_FlowValidation() AWS_Bedrock_Flow_FlowValidation {
	return AWS_Bedrock_Flow_FlowValidation{}
}

// GetType returns the CloudFormation type.
func (AWS_Bedrock_Flow_FlowValidation) GetType() string {
	return AWS_Bedrock_Flow_FlowValidation__Type
}

// Set__Message updates property "Message".
func (t AWS_Bedrock_Flow_FlowValidation) Set__Message(v cfz.Expression[string]) AWS_Bedrock_Flow_FlowValidation {
	t.Message = v
	return t
}

// SetV__Message updates property "Message".
func (t AWS_Bedrock_Flow_FlowValidation) SetV__Message(v string) AWS_Bedrock_Flow_FlowValidation {
	t.Message = cfz.V(v)
	return t
}
