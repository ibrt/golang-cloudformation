// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_bedrock

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Bedrock_PromptVersion)(nil)
	_ cfz.Resource                   = (*AWS_Bedrock_PromptVersion)(nil)
)

const (
	// AWS_Bedrock_PromptVersion__Type is the CloudFormation type for AWS::Bedrock::PromptVersion.
	AWS_Bedrock_PromptVersion__Type = "AWS::Bedrock::PromptVersion"
)

var (
	// AWS_Bedrock_PromptVersion__AttributesMap reports all the CloudFormation attributes for AWS::Bedrock::PromptVersion.
	AWS_Bedrock_PromptVersion__AttributesMap = struct {
		Arn                      string
		CreatedAt                string
		CustomerEncryptionKeyArn string
		DefaultVariant           string
		Name                     string
		PromptId                 string
		UpdatedAt                string
		Variants                 string
		Version                  string
	}{
		Arn:                      "Arn",
		CreatedAt:                "CreatedAt",
		CustomerEncryptionKeyArn: "CustomerEncryptionKeyArn",
		DefaultVariant:           "DefaultVariant",
		Name:                     "Name",
		PromptId:                 "PromptId",
		UpdatedAt:                "UpdatedAt",
		Variants:                 "Variants",
		Version:                  "Version",
	}

	// AWS_Bedrock_PromptVersion__AttributesSlice reports all the CloudFormation attributes for AWS::Bedrock::PromptVersion.
	AWS_Bedrock_PromptVersion__AttributesSlice = []string{
		AWS_Bedrock_PromptVersion__AttributesMap.Arn,
		AWS_Bedrock_PromptVersion__AttributesMap.CreatedAt,
		AWS_Bedrock_PromptVersion__AttributesMap.CustomerEncryptionKeyArn,
		AWS_Bedrock_PromptVersion__AttributesMap.DefaultVariant,
		AWS_Bedrock_PromptVersion__AttributesMap.Name,
		AWS_Bedrock_PromptVersion__AttributesMap.PromptId,
		AWS_Bedrock_PromptVersion__AttributesMap.UpdatedAt,
		AWS_Bedrock_PromptVersion__AttributesMap.Variants,
		AWS_Bedrock_PromptVersion__AttributesMap.Version,
	}
)

var (
	// AWS_Bedrock_PromptVersion__PropertiesMap reports all the CloudFormation properties for AWS::Bedrock::PromptVersion.
	AWS_Bedrock_PromptVersion__PropertiesMap = struct {
		Description string
		PromptArn   string
		Tags        string
	}{
		Description: "Description",
		PromptArn:   "PromptArn",
		Tags:        "Tags",
	}

	// AWS_Bedrock_PromptVersion__PropertiesSlice reports all the CloudFormation properties for AWS::Bedrock::PromptVersion.
	AWS_Bedrock_PromptVersion__PropertiesSlice = []string{
		AWS_Bedrock_PromptVersion__PropertiesMap.Description,
		AWS_Bedrock_PromptVersion__PropertiesMap.PromptArn,
		AWS_Bedrock_PromptVersion__PropertiesMap.Tags,
	}
)

// AWS_Bedrock_PromptVersion is a binding for AWS::Bedrock::PromptVersion.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-promptversion.html
type AWS_Bedrock_PromptVersion struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-promptversion.html#cfn-bedrock-promptversion-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// PromptArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-promptversion.html#cfn-bedrock-promptversion-promptarn
	PromptArn cfz.Expression[string] `json:"PromptArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-promptversion.html#cfn-bedrock-promptversion-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`
}

// New__AWS_Bedrock_PromptVersion initializes a new *AWS_Bedrock_PromptVersion.
func New__AWS_Bedrock_PromptVersion(logicalName string) *AWS_Bedrock_PromptVersion {
	return &AWS_Bedrock_PromptVersion{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Bedrock_PromptVersion) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Bedrock_PromptVersion) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Bedrock_PromptVersion) GetType() string {
	return AWS_Bedrock_PromptVersion__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Bedrock_PromptVersion) Set__LogicalName(v string) *AWS_Bedrock_PromptVersion {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Bedrock_PromptVersion) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Bedrock_PromptVersion {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Bedrock_PromptVersion) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Bedrock_PromptVersion {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Bedrock_PromptVersion) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Bedrock_PromptVersion {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Bedrock_PromptVersion) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Bedrock_PromptVersion {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Bedrock_PromptVersion) Set__RequestedOutputs(v []cfz.Output) *AWS_Bedrock_PromptVersion {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Bedrock_PromptVersion) Add__RequestedOutputs(v ...cfz.Output) *AWS_Bedrock_PromptVersion {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Bedrock_PromptVersion) Set__Description(v cfz.Expression[string]) *AWS_Bedrock_PromptVersion {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Bedrock_PromptVersion) SetV__Description(v string) *AWS_Bedrock_PromptVersion {
	t.Description = cfz.V(v)
	return t
}

// Set__PromptArn updates property "PromptArn".
func (t *AWS_Bedrock_PromptVersion) Set__PromptArn(v cfz.Expression[string]) *AWS_Bedrock_PromptVersion {
	t.PromptArn = v
	return t
}

// SetV__PromptArn updates property "PromptArn".
func (t *AWS_Bedrock_PromptVersion) SetV__PromptArn(v string) *AWS_Bedrock_PromptVersion {
	t.PromptArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Bedrock_PromptVersion) Set__Tags(v cfz.ExpressionMap[string]) *AWS_Bedrock_PromptVersion {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_Bedrock_PromptVersion) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_Bedrock_PromptVersion {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_Bedrock_PromptVersion) SetMV__Tags(v ...map[string]string) *AWS_Bedrock_PromptVersion {
	t.Tags = cfz.MV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Bedrock_PromptVersion) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Bedrock_PromptVersion) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_PromptVersion__AttributesMap.Arn))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_Bedrock_PromptVersion) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_PromptVersion__AttributesMap.CreatedAt))
}

// GetAtt__CustomerEncryptionKeyArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CustomerEncryptionKeyArn
func (t *AWS_Bedrock_PromptVersion) GetAtt__CustomerEncryptionKeyArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_PromptVersion__AttributesMap.CustomerEncryptionKeyArn))
}

// GetAtt__DefaultVariant returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DefaultVariant
func (t *AWS_Bedrock_PromptVersion) GetAtt__DefaultVariant() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_PromptVersion__AttributesMap.DefaultVariant))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_Bedrock_PromptVersion) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_PromptVersion__AttributesMap.Name))
}

// GetAtt__PromptId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PromptId
func (t *AWS_Bedrock_PromptVersion) GetAtt__PromptId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_PromptVersion__AttributesMap.PromptId))
}

// GetAtt__UpdatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedAt
func (t *AWS_Bedrock_PromptVersion) GetAtt__UpdatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_PromptVersion__AttributesMap.UpdatedAt))
}

// GetAttSlice__Variants returns a $cfz.ExpressionSlice[AWS_Bedrock_PromptVersion_PromptVariant] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Variants
func (t *AWS_Bedrock_PromptVersion) GetAttSlice__Variants() cfz.ExpressionSlice[AWS_Bedrock_PromptVersion_PromptVariant] {
	return cfz.GetAttSlice[AWS_Bedrock_PromptVersion_PromptVariant](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_PromptVersion__AttributesMap.Variants))
}

// GetAtt__Version returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Version
func (t *AWS_Bedrock_PromptVersion) GetAtt__Version() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_PromptVersion__AttributesMap.Version))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CustomerEncryptionKeyArn returns a conventionally configured output for an attribute of this resource.
// Attribute: CustomerEncryptionKeyArn
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputAtt__CustomerEncryptionKeyArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCustomerEncryptionKeyArn", t.GetAtt__CustomerEncryptionKeyArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DefaultVariant returns a conventionally configured output for an attribute of this resource.
// Attribute: DefaultVariant
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputAtt__DefaultVariant(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDefaultVariant", t.GetAtt__DefaultVariant())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PromptId returns a conventionally configured output for an attribute of this resource.
// Attribute: PromptId
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputAtt__PromptId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPromptId", t.GetAtt__PromptId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedAt
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputAtt__UpdatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedAt", t.GetAtt__UpdatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Variants returns a conventionally configured output for an attribute of this resource.
// Attribute: Variants
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputAtt__Variants(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVariants", t.GetAttSlice__Variants())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Version returns a conventionally configured output for an attribute of this resource.
// Attribute: Version
func (t *AWS_Bedrock_PromptVersion) GetConventionalOutputAtt__Version(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVersion", t.GetAtt__Version())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Bedrock_PromptVersion) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Bedrock_PromptVersion

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Bedrock_PromptVersion) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
