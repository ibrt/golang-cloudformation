// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_bedrock

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration__Type is the CloudFormation type for AWS::Bedrock::DataSource.HierarchicalChunkingConfiguration.
	AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration__Type = "AWS::Bedrock::DataSource.HierarchicalChunkingConfiguration"
)

var (
	// AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::Bedrock::DataSource.HierarchicalChunkingConfiguration.
	AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration__PropertiesMap = struct {
		LevelConfigurations string
		OverlapTokens       string
	}{
		LevelConfigurations: "LevelConfigurations",
		OverlapTokens:       "OverlapTokens",
	}

	// AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::Bedrock::DataSource.HierarchicalChunkingConfiguration.
	AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration__PropertiesSlice = []string{
		AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration__PropertiesMap.LevelConfigurations,
		AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration__PropertiesMap.OverlapTokens,
	}
)

// AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration is a binding for AWS::Bedrock::DataSource.HierarchicalChunkingConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-datasource-hierarchicalchunkingconfiguration.html
type AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration struct {
	// LevelConfigurations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-datasource-hierarchicalchunkingconfiguration.html#cfn-bedrock-datasource-hierarchicalchunkingconfiguration-levelconfigurations
	LevelConfigurations cfz.ExpressionSlice[AWS_Bedrock_DataSource_HierarchicalChunkingLevelConfiguration] `json:"LevelConfigurations,omitempty"`

	// OverlapTokens is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-datasource-hierarchicalchunkingconfiguration.html#cfn-bedrock-datasource-hierarchicalchunkingconfiguration-overlaptokens
	OverlapTokens cfz.Expression[int32] `json:"OverlapTokens,omitempty"`
}

// New__AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration initializes a new AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration.
func New__AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration() AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration {
	return AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration) GetType() string {
	return AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration__Type
}

// Set__LevelConfigurations updates property "LevelConfigurations".
func (t AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration) Set__LevelConfigurations(v cfz.ExpressionSlice[AWS_Bedrock_DataSource_HierarchicalChunkingLevelConfiguration]) AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration {
	t.LevelConfigurations = v
	return t
}

// SetS__LevelConfigurations updates property "LevelConfigurations".
func (t AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration) SetS__LevelConfigurations(v ...cfz.Expression[AWS_Bedrock_DataSource_HierarchicalChunkingLevelConfiguration]) AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration {
	t.LevelConfigurations = cfz.S(v...)
	return t
}

// SetSV__LevelConfigurations updates property "LevelConfigurations".
func (t AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration) SetSV__LevelConfigurations(v ...AWS_Bedrock_DataSource_HierarchicalChunkingLevelConfiguration) AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration {
	t.LevelConfigurations = cfz.SV(v...)
	return t
}

// Set__OverlapTokens updates property "OverlapTokens".
func (t AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration) Set__OverlapTokens(v cfz.Expression[int32]) AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration {
	t.OverlapTokens = v
	return t
}

// SetV__OverlapTokens updates property "OverlapTokens".
func (t AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration) SetV__OverlapTokens(v int32) AWS_Bedrock_DataSource_HierarchicalChunkingConfiguration {
	t.OverlapTokens = cfz.V(v)
	return t
}
