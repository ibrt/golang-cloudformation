// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_bedrock

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Bedrock_DataSource_S3Location__Type is the CloudFormation type for AWS::Bedrock::DataSource.S3Location.
	AWS_Bedrock_DataSource_S3Location__Type = "AWS::Bedrock::DataSource.S3Location"
)

var (
	// AWS_Bedrock_DataSource_S3Location__PropertiesMap reports all the CloudFormation properties for AWS::Bedrock::DataSource.S3Location.
	AWS_Bedrock_DataSource_S3Location__PropertiesMap = struct {
		URI string
	}{
		URI: "URI",
	}

	// AWS_Bedrock_DataSource_S3Location__PropertiesSlice reports all the CloudFormation properties for AWS::Bedrock::DataSource.S3Location.
	AWS_Bedrock_DataSource_S3Location__PropertiesSlice = []string{
		AWS_Bedrock_DataSource_S3Location__PropertiesMap.URI,
	}
)

// AWS_Bedrock_DataSource_S3Location is a binding for AWS::Bedrock::DataSource.S3Location.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-datasource-s3location.html
type AWS_Bedrock_DataSource_S3Location struct {
	// URI is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-datasource-s3location.html#cfn-bedrock-datasource-s3location-uri
	URI cfz.Expression[string] `json:"URI,omitempty"`
}

// New__AWS_Bedrock_DataSource_S3Location initializes a new AWS_Bedrock_DataSource_S3Location.
func New__AWS_Bedrock_DataSource_S3Location() AWS_Bedrock_DataSource_S3Location {
	return AWS_Bedrock_DataSource_S3Location{}
}

// GetType returns the CloudFormation type.
func (AWS_Bedrock_DataSource_S3Location) GetType() string {
	return AWS_Bedrock_DataSource_S3Location__Type
}

// Set__URI updates property "URI".
func (t AWS_Bedrock_DataSource_S3Location) Set__URI(v cfz.Expression[string]) AWS_Bedrock_DataSource_S3Location {
	t.URI = v
	return t
}

// SetV__URI updates property "URI".
func (t AWS_Bedrock_DataSource_S3Location) SetV__URI(v string) AWS_Bedrock_DataSource_S3Location {
	t.URI = cfz.V(v)
	return t
}
