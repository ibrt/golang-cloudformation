// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_bedrock

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Bedrock_Flow)(nil)
	_ cfz.Resource                   = (*AWS_Bedrock_Flow)(nil)
)

const (
	// AWS_Bedrock_Flow__Type is the CloudFormation type for AWS::Bedrock::Flow.
	AWS_Bedrock_Flow__Type = "AWS::Bedrock::Flow"
)

var (
	// AWS_Bedrock_Flow__AttributesMap reports all the CloudFormation attributes for AWS::Bedrock::Flow.
	AWS_Bedrock_Flow__AttributesMap = struct {
		Arn         string
		CreatedAt   string
		Id          string
		Status      string
		UpdatedAt   string
		Validations string
		Version     string
	}{
		Arn:         "Arn",
		CreatedAt:   "CreatedAt",
		Id:          "Id",
		Status:      "Status",
		UpdatedAt:   "UpdatedAt",
		Validations: "Validations",
		Version:     "Version",
	}

	// AWS_Bedrock_Flow__AttributesSlice reports all the CloudFormation attributes for AWS::Bedrock::Flow.
	AWS_Bedrock_Flow__AttributesSlice = []string{
		AWS_Bedrock_Flow__AttributesMap.Arn,
		AWS_Bedrock_Flow__AttributesMap.CreatedAt,
		AWS_Bedrock_Flow__AttributesMap.Id,
		AWS_Bedrock_Flow__AttributesMap.Status,
		AWS_Bedrock_Flow__AttributesMap.UpdatedAt,
		AWS_Bedrock_Flow__AttributesMap.Validations,
		AWS_Bedrock_Flow__AttributesMap.Version,
	}
)

var (
	// AWS_Bedrock_Flow__PropertiesMap reports all the CloudFormation properties for AWS::Bedrock::Flow.
	AWS_Bedrock_Flow__PropertiesMap = struct {
		CustomerEncryptionKeyArn string
		Definition               string
		DefinitionS3Location     string
		DefinitionString         string
		DefinitionSubstitutions  string
		Description              string
		ExecutionRoleArn         string
		Name                     string
		Tags                     string
		TestAliasTags            string
	}{
		CustomerEncryptionKeyArn: "CustomerEncryptionKeyArn",
		Definition:               "Definition",
		DefinitionS3Location:     "DefinitionS3Location",
		DefinitionString:         "DefinitionString",
		DefinitionSubstitutions:  "DefinitionSubstitutions",
		Description:              "Description",
		ExecutionRoleArn:         "ExecutionRoleArn",
		Name:                     "Name",
		Tags:                     "Tags",
		TestAliasTags:            "TestAliasTags",
	}

	// AWS_Bedrock_Flow__PropertiesSlice reports all the CloudFormation properties for AWS::Bedrock::Flow.
	AWS_Bedrock_Flow__PropertiesSlice = []string{
		AWS_Bedrock_Flow__PropertiesMap.CustomerEncryptionKeyArn,
		AWS_Bedrock_Flow__PropertiesMap.Definition,
		AWS_Bedrock_Flow__PropertiesMap.DefinitionS3Location,
		AWS_Bedrock_Flow__PropertiesMap.DefinitionString,
		AWS_Bedrock_Flow__PropertiesMap.DefinitionSubstitutions,
		AWS_Bedrock_Flow__PropertiesMap.Description,
		AWS_Bedrock_Flow__PropertiesMap.ExecutionRoleArn,
		AWS_Bedrock_Flow__PropertiesMap.Name,
		AWS_Bedrock_Flow__PropertiesMap.Tags,
		AWS_Bedrock_Flow__PropertiesMap.TestAliasTags,
	}
)

// AWS_Bedrock_Flow is a binding for AWS::Bedrock::Flow.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html
type AWS_Bedrock_Flow struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CustomerEncryptionKeyArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-customerencryptionkeyarn
	CustomerEncryptionKeyArn cfz.Expression[string] `json:"CustomerEncryptionKeyArn,omitempty"`

	// Definition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-definition
	Definition cfz.Expression[AWS_Bedrock_Flow_FlowDefinition] `json:"Definition,omitempty"`

	// DefinitionS3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-definitions3location
	DefinitionS3Location cfz.Expression[AWS_Bedrock_Flow_S3Location] `json:"DefinitionS3Location,omitempty"`

	// DefinitionString is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-definitionstring
	DefinitionString cfz.Expression[string] `json:"DefinitionString,omitempty"`

	// DefinitionSubstitutions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-definitionsubstitutions
	DefinitionSubstitutions cfz.ExpressionMap[json.RawMessage] `json:"DefinitionSubstitutions,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// ExecutionRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-executionrolearn
	ExecutionRoleArn cfz.Expression[string] `json:"ExecutionRoleArn,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// TestAliasTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-bedrock-flow.html#cfn-bedrock-flow-testaliastags
	TestAliasTags cfz.ExpressionMap[string] `json:"TestAliasTags,omitempty"`
}

// New__AWS_Bedrock_Flow initializes a new *AWS_Bedrock_Flow.
func New__AWS_Bedrock_Flow(logicalName string) *AWS_Bedrock_Flow {
	return &AWS_Bedrock_Flow{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Bedrock_Flow) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Bedrock_Flow) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Bedrock_Flow) GetType() string {
	return AWS_Bedrock_Flow__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Bedrock_Flow) Set__LogicalName(v string) *AWS_Bedrock_Flow {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Bedrock_Flow) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Bedrock_Flow {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Bedrock_Flow) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Bedrock_Flow {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Bedrock_Flow) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Bedrock_Flow {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Bedrock_Flow) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Bedrock_Flow {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Bedrock_Flow) Set__RequestedOutputs(v []cfz.Output) *AWS_Bedrock_Flow {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Bedrock_Flow) Add__RequestedOutputs(v ...cfz.Output) *AWS_Bedrock_Flow {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CustomerEncryptionKeyArn updates property "CustomerEncryptionKeyArn".
func (t *AWS_Bedrock_Flow) Set__CustomerEncryptionKeyArn(v cfz.Expression[string]) *AWS_Bedrock_Flow {
	t.CustomerEncryptionKeyArn = v
	return t
}

// SetV__CustomerEncryptionKeyArn updates property "CustomerEncryptionKeyArn".
func (t *AWS_Bedrock_Flow) SetV__CustomerEncryptionKeyArn(v string) *AWS_Bedrock_Flow {
	t.CustomerEncryptionKeyArn = cfz.V(v)
	return t
}

// Set__Definition updates property "Definition".
func (t *AWS_Bedrock_Flow) Set__Definition(v cfz.Expression[AWS_Bedrock_Flow_FlowDefinition]) *AWS_Bedrock_Flow {
	t.Definition = v
	return t
}

// SetV__Definition updates property "Definition".
func (t *AWS_Bedrock_Flow) SetV__Definition(v AWS_Bedrock_Flow_FlowDefinition) *AWS_Bedrock_Flow {
	t.Definition = cfz.V(v)
	return t
}

// Set__DefinitionS3Location updates property "DefinitionS3Location".
func (t *AWS_Bedrock_Flow) Set__DefinitionS3Location(v cfz.Expression[AWS_Bedrock_Flow_S3Location]) *AWS_Bedrock_Flow {
	t.DefinitionS3Location = v
	return t
}

// SetV__DefinitionS3Location updates property "DefinitionS3Location".
func (t *AWS_Bedrock_Flow) SetV__DefinitionS3Location(v AWS_Bedrock_Flow_S3Location) *AWS_Bedrock_Flow {
	t.DefinitionS3Location = cfz.V(v)
	return t
}

// Set__DefinitionString updates property "DefinitionString".
func (t *AWS_Bedrock_Flow) Set__DefinitionString(v cfz.Expression[string]) *AWS_Bedrock_Flow {
	t.DefinitionString = v
	return t
}

// SetV__DefinitionString updates property "DefinitionString".
func (t *AWS_Bedrock_Flow) SetV__DefinitionString(v string) *AWS_Bedrock_Flow {
	t.DefinitionString = cfz.V(v)
	return t
}

// Set__DefinitionSubstitutions updates property "DefinitionSubstitutions".
func (t *AWS_Bedrock_Flow) Set__DefinitionSubstitutions(v cfz.ExpressionMap[json.RawMessage]) *AWS_Bedrock_Flow {
	t.DefinitionSubstitutions = v
	return t
}

// SetM__DefinitionSubstitutions updates property "DefinitionSubstitutions".
func (t *AWS_Bedrock_Flow) SetM__DefinitionSubstitutions(v ...map[string]cfz.Expression[json.RawMessage]) *AWS_Bedrock_Flow {
	t.DefinitionSubstitutions = cfz.M(v...)
	return t
}

// SetMV__DefinitionSubstitutions updates property "DefinitionSubstitutions".
func (t *AWS_Bedrock_Flow) SetMV__DefinitionSubstitutions(v ...map[string]json.RawMessage) *AWS_Bedrock_Flow {
	t.DefinitionSubstitutions = cfz.MV(v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Bedrock_Flow) Set__Description(v cfz.Expression[string]) *AWS_Bedrock_Flow {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Bedrock_Flow) SetV__Description(v string) *AWS_Bedrock_Flow {
	t.Description = cfz.V(v)
	return t
}

// Set__ExecutionRoleArn updates property "ExecutionRoleArn".
func (t *AWS_Bedrock_Flow) Set__ExecutionRoleArn(v cfz.Expression[string]) *AWS_Bedrock_Flow {
	t.ExecutionRoleArn = v
	return t
}

// SetV__ExecutionRoleArn updates property "ExecutionRoleArn".
func (t *AWS_Bedrock_Flow) SetV__ExecutionRoleArn(v string) *AWS_Bedrock_Flow {
	t.ExecutionRoleArn = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Bedrock_Flow) Set__Name(v cfz.Expression[string]) *AWS_Bedrock_Flow {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Bedrock_Flow) SetV__Name(v string) *AWS_Bedrock_Flow {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Bedrock_Flow) Set__Tags(v cfz.ExpressionMap[string]) *AWS_Bedrock_Flow {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_Bedrock_Flow) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_Bedrock_Flow {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_Bedrock_Flow) SetMV__Tags(v ...map[string]string) *AWS_Bedrock_Flow {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__TestAliasTags updates property "TestAliasTags".
func (t *AWS_Bedrock_Flow) Set__TestAliasTags(v cfz.ExpressionMap[string]) *AWS_Bedrock_Flow {
	t.TestAliasTags = v
	return t
}

// SetM__TestAliasTags updates property "TestAliasTags".
func (t *AWS_Bedrock_Flow) SetM__TestAliasTags(v ...map[string]cfz.Expression[string]) *AWS_Bedrock_Flow {
	t.TestAliasTags = cfz.M(v...)
	return t
}

// SetMV__TestAliasTags updates property "TestAliasTags".
func (t *AWS_Bedrock_Flow) SetMV__TestAliasTags(v ...map[string]string) *AWS_Bedrock_Flow {
	t.TestAliasTags = cfz.MV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Bedrock_Flow) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Bedrock_Flow) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_Flow__AttributesMap.Arn))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_Bedrock_Flow) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_Flow__AttributesMap.CreatedAt))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Bedrock_Flow) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_Flow__AttributesMap.Id))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_Bedrock_Flow) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_Flow__AttributesMap.Status))
}

// GetAtt__UpdatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedAt
func (t *AWS_Bedrock_Flow) GetAtt__UpdatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_Flow__AttributesMap.UpdatedAt))
}

// GetAttSlice__Validations returns a $cfz.ExpressionSlice[AWS_Bedrock_Flow_FlowValidation] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Validations
func (t *AWS_Bedrock_Flow) GetAttSlice__Validations() cfz.ExpressionSlice[AWS_Bedrock_Flow_FlowValidation] {
	return cfz.GetAttSlice[AWS_Bedrock_Flow_FlowValidation](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_Flow__AttributesMap.Validations))
}

// GetAtt__Version returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Version
func (t *AWS_Bedrock_Flow) GetAtt__Version() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Bedrock_Flow__AttributesMap.Version))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Bedrock_Flow) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Bedrock_Flow) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_Bedrock_Flow) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Bedrock_Flow) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_Bedrock_Flow) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedAt
func (t *AWS_Bedrock_Flow) GetConventionalOutputAtt__UpdatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedAt", t.GetAtt__UpdatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Validations returns a conventionally configured output for an attribute of this resource.
// Attribute: Validations
func (t *AWS_Bedrock_Flow) GetConventionalOutputAtt__Validations(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttValidations", t.GetAttSlice__Validations())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Version returns a conventionally configured output for an attribute of this resource.
// Attribute: Version
func (t *AWS_Bedrock_Flow) GetConventionalOutputAtt__Version(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVersion", t.GetAtt__Version())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Bedrock_Flow) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Bedrock_Flow

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Bedrock_Flow) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
