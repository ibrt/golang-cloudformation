// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_bedrock

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Bedrock_DataSource_Transformation__Type is the CloudFormation type for AWS::Bedrock::DataSource.Transformation.
	AWS_Bedrock_DataSource_Transformation__Type = "AWS::Bedrock::DataSource.Transformation"
)

var (
	// AWS_Bedrock_DataSource_Transformation__PropertiesMap reports all the CloudFormation properties for AWS::Bedrock::DataSource.Transformation.
	AWS_Bedrock_DataSource_Transformation__PropertiesMap = struct {
		StepToApply            string
		TransformationFunction string
	}{
		StepToApply:            "StepToApply",
		TransformationFunction: "TransformationFunction",
	}

	// AWS_Bedrock_DataSource_Transformation__PropertiesSlice reports all the CloudFormation properties for AWS::Bedrock::DataSource.Transformation.
	AWS_Bedrock_DataSource_Transformation__PropertiesSlice = []string{
		AWS_Bedrock_DataSource_Transformation__PropertiesMap.StepToApply,
		AWS_Bedrock_DataSource_Transformation__PropertiesMap.TransformationFunction,
	}
)

// AWS_Bedrock_DataSource_Transformation is a binding for AWS::Bedrock::DataSource.Transformation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-datasource-transformation.html
type AWS_Bedrock_DataSource_Transformation struct {
	// StepToApply is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-datasource-transformation.html#cfn-bedrock-datasource-transformation-steptoapply
	StepToApply cfz.Expression[string] `json:"StepToApply,omitempty"`

	// TransformationFunction is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-bedrock-datasource-transformation.html#cfn-bedrock-datasource-transformation-transformationfunction
	TransformationFunction cfz.Expression[AWS_Bedrock_DataSource_TransformationFunction] `json:"TransformationFunction,omitempty"`
}

// New__AWS_Bedrock_DataSource_Transformation initializes a new AWS_Bedrock_DataSource_Transformation.
func New__AWS_Bedrock_DataSource_Transformation() AWS_Bedrock_DataSource_Transformation {
	return AWS_Bedrock_DataSource_Transformation{}
}

// GetType returns the CloudFormation type.
func (AWS_Bedrock_DataSource_Transformation) GetType() string {
	return AWS_Bedrock_DataSource_Transformation__Type
}

// Set__StepToApply updates property "StepToApply".
func (t AWS_Bedrock_DataSource_Transformation) Set__StepToApply(v cfz.Expression[string]) AWS_Bedrock_DataSource_Transformation {
	t.StepToApply = v
	return t
}

// SetV__StepToApply updates property "StepToApply".
func (t AWS_Bedrock_DataSource_Transformation) SetV__StepToApply(v string) AWS_Bedrock_DataSource_Transformation {
	t.StepToApply = cfz.V(v)
	return t
}

// Set__TransformationFunction updates property "TransformationFunction".
func (t AWS_Bedrock_DataSource_Transformation) Set__TransformationFunction(v cfz.Expression[AWS_Bedrock_DataSource_TransformationFunction]) AWS_Bedrock_DataSource_Transformation {
	t.TransformationFunction = v
	return t
}

// SetV__TransformationFunction updates property "TransformationFunction".
func (t AWS_Bedrock_DataSource_Transformation) SetV__TransformationFunction(v AWS_Bedrock_DataSource_TransformationFunction) AWS_Bedrock_DataSource_Transformation {
	t.TransformationFunction = cfz.V(v)
	return t
}
