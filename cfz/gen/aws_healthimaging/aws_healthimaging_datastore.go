// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_healthimaging

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_HealthImaging_Datastore)(nil)
	_ cfz.Resource                   = (*AWS_HealthImaging_Datastore)(nil)
)

const (
	// AWS_HealthImaging_Datastore__Type is the CloudFormation type for AWS::HealthImaging::Datastore.
	AWS_HealthImaging_Datastore__Type = "AWS::HealthImaging::Datastore"
)

var (
	// AWS_HealthImaging_Datastore__AttributesMap reports all the CloudFormation attributes for AWS::HealthImaging::Datastore.
	AWS_HealthImaging_Datastore__AttributesMap = struct {
		CreatedAt       string
		DatastoreArn    string
		DatastoreId     string
		DatastoreStatus string
		UpdatedAt       string
	}{
		CreatedAt:       "CreatedAt",
		DatastoreArn:    "DatastoreArn",
		DatastoreId:     "DatastoreId",
		DatastoreStatus: "DatastoreStatus",
		UpdatedAt:       "UpdatedAt",
	}

	// AWS_HealthImaging_Datastore__AttributesSlice reports all the CloudFormation attributes for AWS::HealthImaging::Datastore.
	AWS_HealthImaging_Datastore__AttributesSlice = []string{
		AWS_HealthImaging_Datastore__AttributesMap.CreatedAt,
		AWS_HealthImaging_Datastore__AttributesMap.DatastoreArn,
		AWS_HealthImaging_Datastore__AttributesMap.DatastoreId,
		AWS_HealthImaging_Datastore__AttributesMap.DatastoreStatus,
		AWS_HealthImaging_Datastore__AttributesMap.UpdatedAt,
	}
)

var (
	// AWS_HealthImaging_Datastore__PropertiesMap reports all the CloudFormation properties for AWS::HealthImaging::Datastore.
	AWS_HealthImaging_Datastore__PropertiesMap = struct {
		DatastoreName string
		KmsKeyArn     string
		Tags          string
	}{
		DatastoreName: "DatastoreName",
		KmsKeyArn:     "KmsKeyArn",
		Tags:          "Tags",
	}

	// AWS_HealthImaging_Datastore__PropertiesSlice reports all the CloudFormation properties for AWS::HealthImaging::Datastore.
	AWS_HealthImaging_Datastore__PropertiesSlice = []string{
		AWS_HealthImaging_Datastore__PropertiesMap.DatastoreName,
		AWS_HealthImaging_Datastore__PropertiesMap.KmsKeyArn,
		AWS_HealthImaging_Datastore__PropertiesMap.Tags,
	}
)

// AWS_HealthImaging_Datastore is a binding for AWS::HealthImaging::Datastore.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthimaging-datastore.html
type AWS_HealthImaging_Datastore struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DatastoreName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthimaging-datastore.html#cfn-healthimaging-datastore-datastorename
	DatastoreName cfz.Expression[string] `json:"DatastoreName,omitempty"`

	// KmsKeyArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthimaging-datastore.html#cfn-healthimaging-datastore-kmskeyarn
	KmsKeyArn cfz.Expression[string] `json:"KmsKeyArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthimaging-datastore.html#cfn-healthimaging-datastore-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`
}

// New__AWS_HealthImaging_Datastore initializes a new *AWS_HealthImaging_Datastore.
func New__AWS_HealthImaging_Datastore(logicalName string) *AWS_HealthImaging_Datastore {
	return &AWS_HealthImaging_Datastore{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_HealthImaging_Datastore) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_HealthImaging_Datastore) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_HealthImaging_Datastore) GetType() string {
	return AWS_HealthImaging_Datastore__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_HealthImaging_Datastore) Set__LogicalName(v string) *AWS_HealthImaging_Datastore {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_HealthImaging_Datastore) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_HealthImaging_Datastore {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_HealthImaging_Datastore) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_HealthImaging_Datastore {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_HealthImaging_Datastore) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_HealthImaging_Datastore {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_HealthImaging_Datastore) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_HealthImaging_Datastore {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_HealthImaging_Datastore) Set__RequestedOutputs(v []cfz.Output) *AWS_HealthImaging_Datastore {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_HealthImaging_Datastore) Add__RequestedOutputs(v ...cfz.Output) *AWS_HealthImaging_Datastore {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DatastoreName updates property "DatastoreName".
func (t *AWS_HealthImaging_Datastore) Set__DatastoreName(v cfz.Expression[string]) *AWS_HealthImaging_Datastore {
	t.DatastoreName = v
	return t
}

// SetV__DatastoreName updates property "DatastoreName".
func (t *AWS_HealthImaging_Datastore) SetV__DatastoreName(v string) *AWS_HealthImaging_Datastore {
	t.DatastoreName = cfz.V(v)
	return t
}

// Set__KmsKeyArn updates property "KmsKeyArn".
func (t *AWS_HealthImaging_Datastore) Set__KmsKeyArn(v cfz.Expression[string]) *AWS_HealthImaging_Datastore {
	t.KmsKeyArn = v
	return t
}

// SetV__KmsKeyArn updates property "KmsKeyArn".
func (t *AWS_HealthImaging_Datastore) SetV__KmsKeyArn(v string) *AWS_HealthImaging_Datastore {
	t.KmsKeyArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_HealthImaging_Datastore) Set__Tags(v cfz.ExpressionMap[string]) *AWS_HealthImaging_Datastore {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_HealthImaging_Datastore) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_HealthImaging_Datastore {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_HealthImaging_Datastore) SetMV__Tags(v ...map[string]string) *AWS_HealthImaging_Datastore {
	t.Tags = cfz.MV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_HealthImaging_Datastore) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_HealthImaging_Datastore) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_HealthImaging_Datastore__AttributesMap.CreatedAt))
}

// GetAtt__DatastoreArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DatastoreArn
func (t *AWS_HealthImaging_Datastore) GetAtt__DatastoreArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_HealthImaging_Datastore__AttributesMap.DatastoreArn))
}

// GetAtt__DatastoreId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DatastoreId
func (t *AWS_HealthImaging_Datastore) GetAtt__DatastoreId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_HealthImaging_Datastore__AttributesMap.DatastoreId))
}

// GetAtt__DatastoreStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DatastoreStatus
func (t *AWS_HealthImaging_Datastore) GetAtt__DatastoreStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_HealthImaging_Datastore__AttributesMap.DatastoreStatus))
}

// GetAtt__UpdatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedAt
func (t *AWS_HealthImaging_Datastore) GetAtt__UpdatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_HealthImaging_Datastore__AttributesMap.UpdatedAt))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_HealthImaging_Datastore) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_HealthImaging_Datastore) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DatastoreArn returns a conventionally configured output for an attribute of this resource.
// Attribute: DatastoreArn
func (t *AWS_HealthImaging_Datastore) GetConventionalOutputAtt__DatastoreArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDatastoreArn", t.GetAtt__DatastoreArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DatastoreId returns a conventionally configured output for an attribute of this resource.
// Attribute: DatastoreId
func (t *AWS_HealthImaging_Datastore) GetConventionalOutputAtt__DatastoreId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDatastoreId", t.GetAtt__DatastoreId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DatastoreStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: DatastoreStatus
func (t *AWS_HealthImaging_Datastore) GetConventionalOutputAtt__DatastoreStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDatastoreStatus", t.GetAtt__DatastoreStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedAt
func (t *AWS_HealthImaging_Datastore) GetConventionalOutputAtt__UpdatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedAt", t.GetAtt__UpdatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_HealthImaging_Datastore) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_HealthImaging_Datastore

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_HealthImaging_Datastore) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
