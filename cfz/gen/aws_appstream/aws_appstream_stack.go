// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appstream

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppStream_Stack)(nil)
	_ cfz.Resource                   = (*AWS_AppStream_Stack)(nil)
)

const (
	// AWS_AppStream_Stack__Type is the CloudFormation type for AWS::AppStream::Stack.
	AWS_AppStream_Stack__Type = "AWS::AppStream::Stack"
)

var (
	// AWS_AppStream_Stack__PropertiesMap reports all the CloudFormation properties for AWS::AppStream::Stack.
	AWS_AppStream_Stack__PropertiesMap = struct {
		AccessEndpoints             string
		ApplicationSettings         string
		AttributesToDelete          string
		DeleteStorageConnectors     string
		Description                 string
		DisplayName                 string
		EmbedHostDomains            string
		FeedbackURL                 string
		Name                        string
		RedirectURL                 string
		StorageConnectors           string
		StreamingExperienceSettings string
		Tags                        string
		UserSettings                string
	}{
		AccessEndpoints:             "AccessEndpoints",
		ApplicationSettings:         "ApplicationSettings",
		AttributesToDelete:          "AttributesToDelete",
		DeleteStorageConnectors:     "DeleteStorageConnectors",
		Description:                 "Description",
		DisplayName:                 "DisplayName",
		EmbedHostDomains:            "EmbedHostDomains",
		FeedbackURL:                 "FeedbackURL",
		Name:                        "Name",
		RedirectURL:                 "RedirectURL",
		StorageConnectors:           "StorageConnectors",
		StreamingExperienceSettings: "StreamingExperienceSettings",
		Tags:                        "Tags",
		UserSettings:                "UserSettings",
	}

	// AWS_AppStream_Stack__PropertiesSlice reports all the CloudFormation properties for AWS::AppStream::Stack.
	AWS_AppStream_Stack__PropertiesSlice = []string{
		AWS_AppStream_Stack__PropertiesMap.AccessEndpoints,
		AWS_AppStream_Stack__PropertiesMap.ApplicationSettings,
		AWS_AppStream_Stack__PropertiesMap.AttributesToDelete,
		AWS_AppStream_Stack__PropertiesMap.DeleteStorageConnectors,
		AWS_AppStream_Stack__PropertiesMap.Description,
		AWS_AppStream_Stack__PropertiesMap.DisplayName,
		AWS_AppStream_Stack__PropertiesMap.EmbedHostDomains,
		AWS_AppStream_Stack__PropertiesMap.FeedbackURL,
		AWS_AppStream_Stack__PropertiesMap.Name,
		AWS_AppStream_Stack__PropertiesMap.RedirectURL,
		AWS_AppStream_Stack__PropertiesMap.StorageConnectors,
		AWS_AppStream_Stack__PropertiesMap.StreamingExperienceSettings,
		AWS_AppStream_Stack__PropertiesMap.Tags,
		AWS_AppStream_Stack__PropertiesMap.UserSettings,
	}
)

// AWS_AppStream_Stack is a binding for AWS::AppStream::Stack.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html
type AWS_AppStream_Stack struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessEndpoints is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-accessendpoints
	AccessEndpoints cfz.ExpressionSlice[AWS_AppStream_Stack_AccessEndpoint] `json:"AccessEndpoints,omitempty"`

	// ApplicationSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-applicationsettings
	ApplicationSettings cfz.Expression[AWS_AppStream_Stack_ApplicationSettings] `json:"ApplicationSettings,omitempty"`

	// AttributesToDelete is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-attributestodelete
	AttributesToDelete cfz.ExpressionSlice[string] `json:"AttributesToDelete,omitempty"`

	// DeleteStorageConnectors is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-deletestorageconnectors
	DeleteStorageConnectors cfz.Expression[bool] `json:"DeleteStorageConnectors,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DisplayName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-displayname
	DisplayName cfz.Expression[string] `json:"DisplayName,omitempty"`

	// EmbedHostDomains is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-embedhostdomains
	EmbedHostDomains cfz.ExpressionSlice[string] `json:"EmbedHostDomains,omitempty"`

	// FeedbackURL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-feedbackurl
	FeedbackURL cfz.Expression[string] `json:"FeedbackURL,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RedirectURL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-redirecturl
	RedirectURL cfz.Expression[string] `json:"RedirectURL,omitempty"`

	// StorageConnectors is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-storageconnectors
	StorageConnectors cfz.ExpressionSlice[AWS_AppStream_Stack_StorageConnector] `json:"StorageConnectors,omitempty"`

	// StreamingExperienceSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-streamingexperiencesettings
	StreamingExperienceSettings cfz.Expression[AWS_AppStream_Stack_StreamingExperienceSettings] `json:"StreamingExperienceSettings,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UserSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stack.html#cfn-appstream-stack-usersettings
	UserSettings cfz.ExpressionSlice[AWS_AppStream_Stack_UserSetting] `json:"UserSettings,omitempty"`
}

// New__AWS_AppStream_Stack initializes a new *AWS_AppStream_Stack.
func New__AWS_AppStream_Stack(logicalName string) *AWS_AppStream_Stack {
	return &AWS_AppStream_Stack{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppStream_Stack) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppStream_Stack) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppStream_Stack) GetType() string {
	return AWS_AppStream_Stack__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppStream_Stack) Set__LogicalName(v string) *AWS_AppStream_Stack {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppStream_Stack) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppStream_Stack {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppStream_Stack) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppStream_Stack {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppStream_Stack) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppStream_Stack {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppStream_Stack) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppStream_Stack {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppStream_Stack) Set__RequestedOutputs(v []cfz.Output) *AWS_AppStream_Stack {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppStream_Stack) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppStream_Stack {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessEndpoints updates property "AccessEndpoints".
func (t *AWS_AppStream_Stack) Set__AccessEndpoints(v cfz.ExpressionSlice[AWS_AppStream_Stack_AccessEndpoint]) *AWS_AppStream_Stack {
	t.AccessEndpoints = v
	return t
}

// SetS__AccessEndpoints updates property "AccessEndpoints".
func (t *AWS_AppStream_Stack) SetS__AccessEndpoints(v ...cfz.Expression[AWS_AppStream_Stack_AccessEndpoint]) *AWS_AppStream_Stack {
	t.AccessEndpoints = cfz.S(v...)
	return t
}

// SetSV__AccessEndpoints updates property "AccessEndpoints".
func (t *AWS_AppStream_Stack) SetSV__AccessEndpoints(v ...AWS_AppStream_Stack_AccessEndpoint) *AWS_AppStream_Stack {
	t.AccessEndpoints = cfz.SV(v...)
	return t
}

// Set__ApplicationSettings updates property "ApplicationSettings".
func (t *AWS_AppStream_Stack) Set__ApplicationSettings(v cfz.Expression[AWS_AppStream_Stack_ApplicationSettings]) *AWS_AppStream_Stack {
	t.ApplicationSettings = v
	return t
}

// SetV__ApplicationSettings updates property "ApplicationSettings".
func (t *AWS_AppStream_Stack) SetV__ApplicationSettings(v AWS_AppStream_Stack_ApplicationSettings) *AWS_AppStream_Stack {
	t.ApplicationSettings = cfz.V(v)
	return t
}

// Set__AttributesToDelete updates property "AttributesToDelete".
func (t *AWS_AppStream_Stack) Set__AttributesToDelete(v cfz.ExpressionSlice[string]) *AWS_AppStream_Stack {
	t.AttributesToDelete = v
	return t
}

// SetS__AttributesToDelete updates property "AttributesToDelete".
func (t *AWS_AppStream_Stack) SetS__AttributesToDelete(v ...cfz.Expression[string]) *AWS_AppStream_Stack {
	t.AttributesToDelete = cfz.S(v...)
	return t
}

// SetSV__AttributesToDelete updates property "AttributesToDelete".
func (t *AWS_AppStream_Stack) SetSV__AttributesToDelete(v ...string) *AWS_AppStream_Stack {
	t.AttributesToDelete = cfz.SV(v...)
	return t
}

// Set__DeleteStorageConnectors updates property "DeleteStorageConnectors".
func (t *AWS_AppStream_Stack) Set__DeleteStorageConnectors(v cfz.Expression[bool]) *AWS_AppStream_Stack {
	t.DeleteStorageConnectors = v
	return t
}

// SetV__DeleteStorageConnectors updates property "DeleteStorageConnectors".
func (t *AWS_AppStream_Stack) SetV__DeleteStorageConnectors(v bool) *AWS_AppStream_Stack {
	t.DeleteStorageConnectors = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_AppStream_Stack) Set__Description(v cfz.Expression[string]) *AWS_AppStream_Stack {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_AppStream_Stack) SetV__Description(v string) *AWS_AppStream_Stack {
	t.Description = cfz.V(v)
	return t
}

// Set__DisplayName updates property "DisplayName".
func (t *AWS_AppStream_Stack) Set__DisplayName(v cfz.Expression[string]) *AWS_AppStream_Stack {
	t.DisplayName = v
	return t
}

// SetV__DisplayName updates property "DisplayName".
func (t *AWS_AppStream_Stack) SetV__DisplayName(v string) *AWS_AppStream_Stack {
	t.DisplayName = cfz.V(v)
	return t
}

// Set__EmbedHostDomains updates property "EmbedHostDomains".
func (t *AWS_AppStream_Stack) Set__EmbedHostDomains(v cfz.ExpressionSlice[string]) *AWS_AppStream_Stack {
	t.EmbedHostDomains = v
	return t
}

// SetS__EmbedHostDomains updates property "EmbedHostDomains".
func (t *AWS_AppStream_Stack) SetS__EmbedHostDomains(v ...cfz.Expression[string]) *AWS_AppStream_Stack {
	t.EmbedHostDomains = cfz.S(v...)
	return t
}

// SetSV__EmbedHostDomains updates property "EmbedHostDomains".
func (t *AWS_AppStream_Stack) SetSV__EmbedHostDomains(v ...string) *AWS_AppStream_Stack {
	t.EmbedHostDomains = cfz.SV(v...)
	return t
}

// Set__FeedbackURL updates property "FeedbackURL".
func (t *AWS_AppStream_Stack) Set__FeedbackURL(v cfz.Expression[string]) *AWS_AppStream_Stack {
	t.FeedbackURL = v
	return t
}

// SetV__FeedbackURL updates property "FeedbackURL".
func (t *AWS_AppStream_Stack) SetV__FeedbackURL(v string) *AWS_AppStream_Stack {
	t.FeedbackURL = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_AppStream_Stack) Set__Name(v cfz.Expression[string]) *AWS_AppStream_Stack {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_AppStream_Stack) SetV__Name(v string) *AWS_AppStream_Stack {
	t.Name = cfz.V(v)
	return t
}

// Set__RedirectURL updates property "RedirectURL".
func (t *AWS_AppStream_Stack) Set__RedirectURL(v cfz.Expression[string]) *AWS_AppStream_Stack {
	t.RedirectURL = v
	return t
}

// SetV__RedirectURL updates property "RedirectURL".
func (t *AWS_AppStream_Stack) SetV__RedirectURL(v string) *AWS_AppStream_Stack {
	t.RedirectURL = cfz.V(v)
	return t
}

// Set__StorageConnectors updates property "StorageConnectors".
func (t *AWS_AppStream_Stack) Set__StorageConnectors(v cfz.ExpressionSlice[AWS_AppStream_Stack_StorageConnector]) *AWS_AppStream_Stack {
	t.StorageConnectors = v
	return t
}

// SetS__StorageConnectors updates property "StorageConnectors".
func (t *AWS_AppStream_Stack) SetS__StorageConnectors(v ...cfz.Expression[AWS_AppStream_Stack_StorageConnector]) *AWS_AppStream_Stack {
	t.StorageConnectors = cfz.S(v...)
	return t
}

// SetSV__StorageConnectors updates property "StorageConnectors".
func (t *AWS_AppStream_Stack) SetSV__StorageConnectors(v ...AWS_AppStream_Stack_StorageConnector) *AWS_AppStream_Stack {
	t.StorageConnectors = cfz.SV(v...)
	return t
}

// Set__StreamingExperienceSettings updates property "StreamingExperienceSettings".
func (t *AWS_AppStream_Stack) Set__StreamingExperienceSettings(v cfz.Expression[AWS_AppStream_Stack_StreamingExperienceSettings]) *AWS_AppStream_Stack {
	t.StreamingExperienceSettings = v
	return t
}

// SetV__StreamingExperienceSettings updates property "StreamingExperienceSettings".
func (t *AWS_AppStream_Stack) SetV__StreamingExperienceSettings(v AWS_AppStream_Stack_StreamingExperienceSettings) *AWS_AppStream_Stack {
	t.StreamingExperienceSettings = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppStream_Stack) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_AppStream_Stack {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppStream_Stack) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_AppStream_Stack {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppStream_Stack) SetSV__Tags(v ...cfz.Tag) *AWS_AppStream_Stack {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UserSettings updates property "UserSettings".
func (t *AWS_AppStream_Stack) Set__UserSettings(v cfz.ExpressionSlice[AWS_AppStream_Stack_UserSetting]) *AWS_AppStream_Stack {
	t.UserSettings = v
	return t
}

// SetS__UserSettings updates property "UserSettings".
func (t *AWS_AppStream_Stack) SetS__UserSettings(v ...cfz.Expression[AWS_AppStream_Stack_UserSetting]) *AWS_AppStream_Stack {
	t.UserSettings = cfz.S(v...)
	return t
}

// SetSV__UserSettings updates property "UserSettings".
func (t *AWS_AppStream_Stack) SetSV__UserSettings(v ...AWS_AppStream_Stack_UserSetting) *AWS_AppStream_Stack {
	t.UserSettings = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppStream_Stack) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppStream_Stack) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppStream_Stack) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppStream_Stack

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppStream_Stack) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
