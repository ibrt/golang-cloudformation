// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_appstream

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AppStream_Fleet)(nil)
	_ cfz.Resource                   = (*AWS_AppStream_Fleet)(nil)
)

const (
	// AWS_AppStream_Fleet__Type is the CloudFormation type for AWS::AppStream::Fleet.
	AWS_AppStream_Fleet__Type = "AWS::AppStream::Fleet"
)

var (
	// AWS_AppStream_Fleet__PropertiesMap reports all the CloudFormation properties for AWS::AppStream::Fleet.
	AWS_AppStream_Fleet__PropertiesMap = struct {
		ComputeCapacity                string
		Description                    string
		DisconnectTimeoutInSeconds     string
		DisplayName                    string
		DomainJoinInfo                 string
		EnableDefaultInternetAccess    string
		FleetType                      string
		IamRoleArn                     string
		IdleDisconnectTimeoutInSeconds string
		ImageArn                       string
		ImageName                      string
		InstanceType                   string
		MaxConcurrentSessions          string
		MaxSessionsPerInstance         string
		MaxUserDurationInSeconds       string
		Name                           string
		Platform                       string
		SessionScriptS3Location        string
		StreamView                     string
		Tags                           string
		UsbDeviceFilterStrings         string
		VpcConfig                      string
	}{
		ComputeCapacity:                "ComputeCapacity",
		Description:                    "Description",
		DisconnectTimeoutInSeconds:     "DisconnectTimeoutInSeconds",
		DisplayName:                    "DisplayName",
		DomainJoinInfo:                 "DomainJoinInfo",
		EnableDefaultInternetAccess:    "EnableDefaultInternetAccess",
		FleetType:                      "FleetType",
		IamRoleArn:                     "IamRoleArn",
		IdleDisconnectTimeoutInSeconds: "IdleDisconnectTimeoutInSeconds",
		ImageArn:                       "ImageArn",
		ImageName:                      "ImageName",
		InstanceType:                   "InstanceType",
		MaxConcurrentSessions:          "MaxConcurrentSessions",
		MaxSessionsPerInstance:         "MaxSessionsPerInstance",
		MaxUserDurationInSeconds:       "MaxUserDurationInSeconds",
		Name:                           "Name",
		Platform:                       "Platform",
		SessionScriptS3Location:        "SessionScriptS3Location",
		StreamView:                     "StreamView",
		Tags:                           "Tags",
		UsbDeviceFilterStrings:         "UsbDeviceFilterStrings",
		VpcConfig:                      "VpcConfig",
	}

	// AWS_AppStream_Fleet__PropertiesSlice reports all the CloudFormation properties for AWS::AppStream::Fleet.
	AWS_AppStream_Fleet__PropertiesSlice = []string{
		AWS_AppStream_Fleet__PropertiesMap.ComputeCapacity,
		AWS_AppStream_Fleet__PropertiesMap.Description,
		AWS_AppStream_Fleet__PropertiesMap.DisconnectTimeoutInSeconds,
		AWS_AppStream_Fleet__PropertiesMap.DisplayName,
		AWS_AppStream_Fleet__PropertiesMap.DomainJoinInfo,
		AWS_AppStream_Fleet__PropertiesMap.EnableDefaultInternetAccess,
		AWS_AppStream_Fleet__PropertiesMap.FleetType,
		AWS_AppStream_Fleet__PropertiesMap.IamRoleArn,
		AWS_AppStream_Fleet__PropertiesMap.IdleDisconnectTimeoutInSeconds,
		AWS_AppStream_Fleet__PropertiesMap.ImageArn,
		AWS_AppStream_Fleet__PropertiesMap.ImageName,
		AWS_AppStream_Fleet__PropertiesMap.InstanceType,
		AWS_AppStream_Fleet__PropertiesMap.MaxConcurrentSessions,
		AWS_AppStream_Fleet__PropertiesMap.MaxSessionsPerInstance,
		AWS_AppStream_Fleet__PropertiesMap.MaxUserDurationInSeconds,
		AWS_AppStream_Fleet__PropertiesMap.Name,
		AWS_AppStream_Fleet__PropertiesMap.Platform,
		AWS_AppStream_Fleet__PropertiesMap.SessionScriptS3Location,
		AWS_AppStream_Fleet__PropertiesMap.StreamView,
		AWS_AppStream_Fleet__PropertiesMap.Tags,
		AWS_AppStream_Fleet__PropertiesMap.UsbDeviceFilterStrings,
		AWS_AppStream_Fleet__PropertiesMap.VpcConfig,
	}
)

// AWS_AppStream_Fleet is a binding for AWS::AppStream::Fleet.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html
type AWS_AppStream_Fleet struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ComputeCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-computecapacity
	ComputeCapacity cfz.Expression[AWS_AppStream_Fleet_ComputeCapacity] `json:"ComputeCapacity,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DisconnectTimeoutInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-disconnecttimeoutinseconds
	DisconnectTimeoutInSeconds cfz.Expression[int32] `json:"DisconnectTimeoutInSeconds,omitempty"`

	// DisplayName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-displayname
	DisplayName cfz.Expression[string] `json:"DisplayName,omitempty"`

	// DomainJoinInfo is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-domainjoininfo
	DomainJoinInfo cfz.Expression[AWS_AppStream_Fleet_DomainJoinInfo] `json:"DomainJoinInfo,omitempty"`

	// EnableDefaultInternetAccess is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-enabledefaultinternetaccess
	EnableDefaultInternetAccess cfz.Expression[bool] `json:"EnableDefaultInternetAccess,omitempty"`

	// FleetType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-fleettype
	FleetType cfz.Expression[string] `json:"FleetType,omitempty"`

	// IamRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-iamrolearn
	IamRoleArn cfz.Expression[string] `json:"IamRoleArn,omitempty"`

	// IdleDisconnectTimeoutInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-idledisconnecttimeoutinseconds
	IdleDisconnectTimeoutInSeconds cfz.Expression[int32] `json:"IdleDisconnectTimeoutInSeconds,omitempty"`

	// ImageArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-imagearn
	ImageArn cfz.Expression[string] `json:"ImageArn,omitempty"`

	// ImageName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-imagename
	ImageName cfz.Expression[string] `json:"ImageName,omitempty"`

	// InstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-instancetype
	InstanceType cfz.Expression[string] `json:"InstanceType,omitempty"`

	// MaxConcurrentSessions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-maxconcurrentsessions
	MaxConcurrentSessions cfz.Expression[int32] `json:"MaxConcurrentSessions,omitempty"`

	// MaxSessionsPerInstance is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-maxsessionsperinstance
	MaxSessionsPerInstance cfz.Expression[int32] `json:"MaxSessionsPerInstance,omitempty"`

	// MaxUserDurationInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-maxuserdurationinseconds
	MaxUserDurationInSeconds cfz.Expression[int32] `json:"MaxUserDurationInSeconds,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Platform is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-platform
	Platform cfz.Expression[string] `json:"Platform,omitempty"`

	// SessionScriptS3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-sessionscripts3location
	SessionScriptS3Location cfz.Expression[AWS_AppStream_Fleet_S3Location] `json:"SessionScriptS3Location,omitempty"`

	// StreamView is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-streamview
	StreamView cfz.Expression[string] `json:"StreamView,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UsbDeviceFilterStrings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-usbdevicefilterstrings
	UsbDeviceFilterStrings cfz.ExpressionSlice[string] `json:"UsbDeviceFilterStrings,omitempty"`

	// VpcConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-fleet.html#cfn-appstream-fleet-vpcconfig
	VpcConfig cfz.Expression[AWS_AppStream_Fleet_VpcConfig] `json:"VpcConfig,omitempty"`
}

// New__AWS_AppStream_Fleet initializes a new *AWS_AppStream_Fleet.
func New__AWS_AppStream_Fleet(logicalName string) *AWS_AppStream_Fleet {
	return &AWS_AppStream_Fleet{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AppStream_Fleet) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AppStream_Fleet) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AppStream_Fleet) GetType() string {
	return AWS_AppStream_Fleet__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AppStream_Fleet) Set__LogicalName(v string) *AWS_AppStream_Fleet {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AppStream_Fleet) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AppStream_Fleet {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AppStream_Fleet) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AppStream_Fleet {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AppStream_Fleet) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AppStream_Fleet {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AppStream_Fleet) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AppStream_Fleet {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AppStream_Fleet) Set__RequestedOutputs(v []cfz.Output) *AWS_AppStream_Fleet {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AppStream_Fleet) Add__RequestedOutputs(v ...cfz.Output) *AWS_AppStream_Fleet {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ComputeCapacity updates property "ComputeCapacity".
func (t *AWS_AppStream_Fleet) Set__ComputeCapacity(v cfz.Expression[AWS_AppStream_Fleet_ComputeCapacity]) *AWS_AppStream_Fleet {
	t.ComputeCapacity = v
	return t
}

// SetV__ComputeCapacity updates property "ComputeCapacity".
func (t *AWS_AppStream_Fleet) SetV__ComputeCapacity(v AWS_AppStream_Fleet_ComputeCapacity) *AWS_AppStream_Fleet {
	t.ComputeCapacity = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_AppStream_Fleet) Set__Description(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_AppStream_Fleet) SetV__Description(v string) *AWS_AppStream_Fleet {
	t.Description = cfz.V(v)
	return t
}

// Set__DisconnectTimeoutInSeconds updates property "DisconnectTimeoutInSeconds".
func (t *AWS_AppStream_Fleet) Set__DisconnectTimeoutInSeconds(v cfz.Expression[int32]) *AWS_AppStream_Fleet {
	t.DisconnectTimeoutInSeconds = v
	return t
}

// SetV__DisconnectTimeoutInSeconds updates property "DisconnectTimeoutInSeconds".
func (t *AWS_AppStream_Fleet) SetV__DisconnectTimeoutInSeconds(v int32) *AWS_AppStream_Fleet {
	t.DisconnectTimeoutInSeconds = cfz.V(v)
	return t
}

// Set__DisplayName updates property "DisplayName".
func (t *AWS_AppStream_Fleet) Set__DisplayName(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.DisplayName = v
	return t
}

// SetV__DisplayName updates property "DisplayName".
func (t *AWS_AppStream_Fleet) SetV__DisplayName(v string) *AWS_AppStream_Fleet {
	t.DisplayName = cfz.V(v)
	return t
}

// Set__DomainJoinInfo updates property "DomainJoinInfo".
func (t *AWS_AppStream_Fleet) Set__DomainJoinInfo(v cfz.Expression[AWS_AppStream_Fleet_DomainJoinInfo]) *AWS_AppStream_Fleet {
	t.DomainJoinInfo = v
	return t
}

// SetV__DomainJoinInfo updates property "DomainJoinInfo".
func (t *AWS_AppStream_Fleet) SetV__DomainJoinInfo(v AWS_AppStream_Fleet_DomainJoinInfo) *AWS_AppStream_Fleet {
	t.DomainJoinInfo = cfz.V(v)
	return t
}

// Set__EnableDefaultInternetAccess updates property "EnableDefaultInternetAccess".
func (t *AWS_AppStream_Fleet) Set__EnableDefaultInternetAccess(v cfz.Expression[bool]) *AWS_AppStream_Fleet {
	t.EnableDefaultInternetAccess = v
	return t
}

// SetV__EnableDefaultInternetAccess updates property "EnableDefaultInternetAccess".
func (t *AWS_AppStream_Fleet) SetV__EnableDefaultInternetAccess(v bool) *AWS_AppStream_Fleet {
	t.EnableDefaultInternetAccess = cfz.V(v)
	return t
}

// Set__FleetType updates property "FleetType".
func (t *AWS_AppStream_Fleet) Set__FleetType(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.FleetType = v
	return t
}

// SetV__FleetType updates property "FleetType".
func (t *AWS_AppStream_Fleet) SetV__FleetType(v string) *AWS_AppStream_Fleet {
	t.FleetType = cfz.V(v)
	return t
}

// Set__IamRoleArn updates property "IamRoleArn".
func (t *AWS_AppStream_Fleet) Set__IamRoleArn(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.IamRoleArn = v
	return t
}

// SetV__IamRoleArn updates property "IamRoleArn".
func (t *AWS_AppStream_Fleet) SetV__IamRoleArn(v string) *AWS_AppStream_Fleet {
	t.IamRoleArn = cfz.V(v)
	return t
}

// Set__IdleDisconnectTimeoutInSeconds updates property "IdleDisconnectTimeoutInSeconds".
func (t *AWS_AppStream_Fleet) Set__IdleDisconnectTimeoutInSeconds(v cfz.Expression[int32]) *AWS_AppStream_Fleet {
	t.IdleDisconnectTimeoutInSeconds = v
	return t
}

// SetV__IdleDisconnectTimeoutInSeconds updates property "IdleDisconnectTimeoutInSeconds".
func (t *AWS_AppStream_Fleet) SetV__IdleDisconnectTimeoutInSeconds(v int32) *AWS_AppStream_Fleet {
	t.IdleDisconnectTimeoutInSeconds = cfz.V(v)
	return t
}

// Set__ImageArn updates property "ImageArn".
func (t *AWS_AppStream_Fleet) Set__ImageArn(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.ImageArn = v
	return t
}

// SetV__ImageArn updates property "ImageArn".
func (t *AWS_AppStream_Fleet) SetV__ImageArn(v string) *AWS_AppStream_Fleet {
	t.ImageArn = cfz.V(v)
	return t
}

// Set__ImageName updates property "ImageName".
func (t *AWS_AppStream_Fleet) Set__ImageName(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.ImageName = v
	return t
}

// SetV__ImageName updates property "ImageName".
func (t *AWS_AppStream_Fleet) SetV__ImageName(v string) *AWS_AppStream_Fleet {
	t.ImageName = cfz.V(v)
	return t
}

// Set__InstanceType updates property "InstanceType".
func (t *AWS_AppStream_Fleet) Set__InstanceType(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.InstanceType = v
	return t
}

// SetV__InstanceType updates property "InstanceType".
func (t *AWS_AppStream_Fleet) SetV__InstanceType(v string) *AWS_AppStream_Fleet {
	t.InstanceType = cfz.V(v)
	return t
}

// Set__MaxConcurrentSessions updates property "MaxConcurrentSessions".
func (t *AWS_AppStream_Fleet) Set__MaxConcurrentSessions(v cfz.Expression[int32]) *AWS_AppStream_Fleet {
	t.MaxConcurrentSessions = v
	return t
}

// SetV__MaxConcurrentSessions updates property "MaxConcurrentSessions".
func (t *AWS_AppStream_Fleet) SetV__MaxConcurrentSessions(v int32) *AWS_AppStream_Fleet {
	t.MaxConcurrentSessions = cfz.V(v)
	return t
}

// Set__MaxSessionsPerInstance updates property "MaxSessionsPerInstance".
func (t *AWS_AppStream_Fleet) Set__MaxSessionsPerInstance(v cfz.Expression[int32]) *AWS_AppStream_Fleet {
	t.MaxSessionsPerInstance = v
	return t
}

// SetV__MaxSessionsPerInstance updates property "MaxSessionsPerInstance".
func (t *AWS_AppStream_Fleet) SetV__MaxSessionsPerInstance(v int32) *AWS_AppStream_Fleet {
	t.MaxSessionsPerInstance = cfz.V(v)
	return t
}

// Set__MaxUserDurationInSeconds updates property "MaxUserDurationInSeconds".
func (t *AWS_AppStream_Fleet) Set__MaxUserDurationInSeconds(v cfz.Expression[int32]) *AWS_AppStream_Fleet {
	t.MaxUserDurationInSeconds = v
	return t
}

// SetV__MaxUserDurationInSeconds updates property "MaxUserDurationInSeconds".
func (t *AWS_AppStream_Fleet) SetV__MaxUserDurationInSeconds(v int32) *AWS_AppStream_Fleet {
	t.MaxUserDurationInSeconds = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_AppStream_Fleet) Set__Name(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_AppStream_Fleet) SetV__Name(v string) *AWS_AppStream_Fleet {
	t.Name = cfz.V(v)
	return t
}

// Set__Platform updates property "Platform".
func (t *AWS_AppStream_Fleet) Set__Platform(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.Platform = v
	return t
}

// SetV__Platform updates property "Platform".
func (t *AWS_AppStream_Fleet) SetV__Platform(v string) *AWS_AppStream_Fleet {
	t.Platform = cfz.V(v)
	return t
}

// Set__SessionScriptS3Location updates property "SessionScriptS3Location".
func (t *AWS_AppStream_Fleet) Set__SessionScriptS3Location(v cfz.Expression[AWS_AppStream_Fleet_S3Location]) *AWS_AppStream_Fleet {
	t.SessionScriptS3Location = v
	return t
}

// SetV__SessionScriptS3Location updates property "SessionScriptS3Location".
func (t *AWS_AppStream_Fleet) SetV__SessionScriptS3Location(v AWS_AppStream_Fleet_S3Location) *AWS_AppStream_Fleet {
	t.SessionScriptS3Location = cfz.V(v)
	return t
}

// Set__StreamView updates property "StreamView".
func (t *AWS_AppStream_Fleet) Set__StreamView(v cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.StreamView = v
	return t
}

// SetV__StreamView updates property "StreamView".
func (t *AWS_AppStream_Fleet) SetV__StreamView(v string) *AWS_AppStream_Fleet {
	t.StreamView = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AppStream_Fleet) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_AppStream_Fleet {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AppStream_Fleet) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_AppStream_Fleet {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AppStream_Fleet) SetSV__Tags(v ...cfz.Tag) *AWS_AppStream_Fleet {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UsbDeviceFilterStrings updates property "UsbDeviceFilterStrings".
func (t *AWS_AppStream_Fleet) Set__UsbDeviceFilterStrings(v cfz.ExpressionSlice[string]) *AWS_AppStream_Fleet {
	t.UsbDeviceFilterStrings = v
	return t
}

// SetS__UsbDeviceFilterStrings updates property "UsbDeviceFilterStrings".
func (t *AWS_AppStream_Fleet) SetS__UsbDeviceFilterStrings(v ...cfz.Expression[string]) *AWS_AppStream_Fleet {
	t.UsbDeviceFilterStrings = cfz.S(v...)
	return t
}

// SetSV__UsbDeviceFilterStrings updates property "UsbDeviceFilterStrings".
func (t *AWS_AppStream_Fleet) SetSV__UsbDeviceFilterStrings(v ...string) *AWS_AppStream_Fleet {
	t.UsbDeviceFilterStrings = cfz.SV(v...)
	return t
}

// Set__VpcConfig updates property "VpcConfig".
func (t *AWS_AppStream_Fleet) Set__VpcConfig(v cfz.Expression[AWS_AppStream_Fleet_VpcConfig]) *AWS_AppStream_Fleet {
	t.VpcConfig = v
	return t
}

// SetV__VpcConfig updates property "VpcConfig".
func (t *AWS_AppStream_Fleet) SetV__VpcConfig(v AWS_AppStream_Fleet_VpcConfig) *AWS_AppStream_Fleet {
	t.VpcConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AppStream_Fleet) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AppStream_Fleet) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AppStream_Fleet) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AppStream_Fleet

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AppStream_Fleet) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
