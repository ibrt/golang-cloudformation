// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_codecommit

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CodeCommit_Repository)(nil)
	_ cfz.Resource                   = (*AWS_CodeCommit_Repository)(nil)
)

const (
	// AWS_CodeCommit_Repository__Type is the CloudFormation type for AWS::CodeCommit::Repository.
	AWS_CodeCommit_Repository__Type = "AWS::CodeCommit::Repository"
)

var (
	// AWS_CodeCommit_Repository__AttributesMap reports all the CloudFormation attributes for AWS::CodeCommit::Repository.
	AWS_CodeCommit_Repository__AttributesMap = struct {
		Arn          string
		CloneUrlHttp string
		CloneUrlSsh  string
		KmsKeyId     string
		Name         string
	}{
		Arn:          "Arn",
		CloneUrlHttp: "CloneUrlHttp",
		CloneUrlSsh:  "CloneUrlSsh",
		KmsKeyId:     "KmsKeyId",
		Name:         "Name",
	}

	// AWS_CodeCommit_Repository__AttributesSlice reports all the CloudFormation attributes for AWS::CodeCommit::Repository.
	AWS_CodeCommit_Repository__AttributesSlice = []string{
		AWS_CodeCommit_Repository__AttributesMap.Arn,
		AWS_CodeCommit_Repository__AttributesMap.CloneUrlHttp,
		AWS_CodeCommit_Repository__AttributesMap.CloneUrlSsh,
		AWS_CodeCommit_Repository__AttributesMap.KmsKeyId,
		AWS_CodeCommit_Repository__AttributesMap.Name,
	}
)

var (
	// AWS_CodeCommit_Repository__PropertiesMap reports all the CloudFormation properties for AWS::CodeCommit::Repository.
	AWS_CodeCommit_Repository__PropertiesMap = struct {
		Code                  string
		KmsKeyId              string
		RepositoryDescription string
		RepositoryName        string
		Tags                  string
		Triggers              string
	}{
		Code:                  "Code",
		KmsKeyId:              "KmsKeyId",
		RepositoryDescription: "RepositoryDescription",
		RepositoryName:        "RepositoryName",
		Tags:                  "Tags",
		Triggers:              "Triggers",
	}

	// AWS_CodeCommit_Repository__PropertiesSlice reports all the CloudFormation properties for AWS::CodeCommit::Repository.
	AWS_CodeCommit_Repository__PropertiesSlice = []string{
		AWS_CodeCommit_Repository__PropertiesMap.Code,
		AWS_CodeCommit_Repository__PropertiesMap.KmsKeyId,
		AWS_CodeCommit_Repository__PropertiesMap.RepositoryDescription,
		AWS_CodeCommit_Repository__PropertiesMap.RepositoryName,
		AWS_CodeCommit_Repository__PropertiesMap.Tags,
		AWS_CodeCommit_Repository__PropertiesMap.Triggers,
	}
)

// AWS_CodeCommit_Repository is a binding for AWS::CodeCommit::Repository.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html
type AWS_CodeCommit_Repository struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Code is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-code
	Code cfz.Expression[AWS_CodeCommit_Repository_Code] `json:"Code,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// RepositoryDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositorydescription
	RepositoryDescription cfz.Expression[string] `json:"RepositoryDescription,omitempty"`

	// RepositoryName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositoryname
	RepositoryName cfz.Expression[string] `json:"RepositoryName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Triggers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-triggers
	Triggers cfz.ExpressionSlice[AWS_CodeCommit_Repository_RepositoryTrigger] `json:"Triggers,omitempty"`
}

// New__AWS_CodeCommit_Repository initializes a new *AWS_CodeCommit_Repository.
func New__AWS_CodeCommit_Repository(logicalName string) *AWS_CodeCommit_Repository {
	return &AWS_CodeCommit_Repository{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CodeCommit_Repository) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CodeCommit_Repository) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CodeCommit_Repository) GetType() string {
	return AWS_CodeCommit_Repository__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CodeCommit_Repository) Set__LogicalName(v string) *AWS_CodeCommit_Repository {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CodeCommit_Repository) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CodeCommit_Repository {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CodeCommit_Repository) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CodeCommit_Repository {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CodeCommit_Repository) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CodeCommit_Repository {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CodeCommit_Repository) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CodeCommit_Repository {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CodeCommit_Repository) Set__RequestedOutputs(v []cfz.Output) *AWS_CodeCommit_Repository {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CodeCommit_Repository) Add__RequestedOutputs(v ...cfz.Output) *AWS_CodeCommit_Repository {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Code updates property "Code".
func (t *AWS_CodeCommit_Repository) Set__Code(v cfz.Expression[AWS_CodeCommit_Repository_Code]) *AWS_CodeCommit_Repository {
	t.Code = v
	return t
}

// SetV__Code updates property "Code".
func (t *AWS_CodeCommit_Repository) SetV__Code(v AWS_CodeCommit_Repository_Code) *AWS_CodeCommit_Repository {
	t.Code = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_CodeCommit_Repository) Set__KmsKeyId(v cfz.Expression[string]) *AWS_CodeCommit_Repository {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_CodeCommit_Repository) SetV__KmsKeyId(v string) *AWS_CodeCommit_Repository {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__RepositoryDescription updates property "RepositoryDescription".
func (t *AWS_CodeCommit_Repository) Set__RepositoryDescription(v cfz.Expression[string]) *AWS_CodeCommit_Repository {
	t.RepositoryDescription = v
	return t
}

// SetV__RepositoryDescription updates property "RepositoryDescription".
func (t *AWS_CodeCommit_Repository) SetV__RepositoryDescription(v string) *AWS_CodeCommit_Repository {
	t.RepositoryDescription = cfz.V(v)
	return t
}

// Set__RepositoryName updates property "RepositoryName".
func (t *AWS_CodeCommit_Repository) Set__RepositoryName(v cfz.Expression[string]) *AWS_CodeCommit_Repository {
	t.RepositoryName = v
	return t
}

// SetV__RepositoryName updates property "RepositoryName".
func (t *AWS_CodeCommit_Repository) SetV__RepositoryName(v string) *AWS_CodeCommit_Repository {
	t.RepositoryName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CodeCommit_Repository) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CodeCommit_Repository {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CodeCommit_Repository) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CodeCommit_Repository {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CodeCommit_Repository) SetSV__Tags(v ...cfz.Tag) *AWS_CodeCommit_Repository {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Triggers updates property "Triggers".
func (t *AWS_CodeCommit_Repository) Set__Triggers(v cfz.ExpressionSlice[AWS_CodeCommit_Repository_RepositoryTrigger]) *AWS_CodeCommit_Repository {
	t.Triggers = v
	return t
}

// SetS__Triggers updates property "Triggers".
func (t *AWS_CodeCommit_Repository) SetS__Triggers(v ...cfz.Expression[AWS_CodeCommit_Repository_RepositoryTrigger]) *AWS_CodeCommit_Repository {
	t.Triggers = cfz.S(v...)
	return t
}

// SetSV__Triggers updates property "Triggers".
func (t *AWS_CodeCommit_Repository) SetSV__Triggers(v ...AWS_CodeCommit_Repository_RepositoryTrigger) *AWS_CodeCommit_Repository {
	t.Triggers = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CodeCommit_Repository) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_CodeCommit_Repository) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeCommit_Repository__AttributesMap.Arn))
}

// GetAtt__CloneUrlHttp returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CloneUrlHttp
func (t *AWS_CodeCommit_Repository) GetAtt__CloneUrlHttp() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeCommit_Repository__AttributesMap.CloneUrlHttp))
}

// GetAtt__CloneUrlSsh returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CloneUrlSsh
func (t *AWS_CodeCommit_Repository) GetAtt__CloneUrlSsh() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeCommit_Repository__AttributesMap.CloneUrlSsh))
}

// GetAtt__KmsKeyId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: KmsKeyId
func (t *AWS_CodeCommit_Repository) GetAtt__KmsKeyId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeCommit_Repository__AttributesMap.KmsKeyId))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_CodeCommit_Repository) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeCommit_Repository__AttributesMap.Name))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CodeCommit_Repository) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_CodeCommit_Repository) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CloneUrlHttp returns a conventionally configured output for an attribute of this resource.
// Attribute: CloneUrlHttp
func (t *AWS_CodeCommit_Repository) GetConventionalOutputAtt__CloneUrlHttp(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCloneUrlHttp", t.GetAtt__CloneUrlHttp())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CloneUrlSsh returns a conventionally configured output for an attribute of this resource.
// Attribute: CloneUrlSsh
func (t *AWS_CodeCommit_Repository) GetConventionalOutputAtt__CloneUrlSsh(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCloneUrlSsh", t.GetAtt__CloneUrlSsh())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__KmsKeyId returns a conventionally configured output for an attribute of this resource.
// Attribute: KmsKeyId
func (t *AWS_CodeCommit_Repository) GetConventionalOutputAtt__KmsKeyId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttKmsKeyId", t.GetAtt__KmsKeyId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_CodeCommit_Repository) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CodeCommit_Repository) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CodeCommit_Repository

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CodeCommit_Repository) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
