// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_kinesisanalyticsv2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_KinesisAnalyticsV2_Application)(nil)
	_ cfz.Resource                   = (*AWS_KinesisAnalyticsV2_Application)(nil)
)

const (
	// AWS_KinesisAnalyticsV2_Application__Type is the CloudFormation type for AWS::KinesisAnalyticsV2::Application.
	AWS_KinesisAnalyticsV2_Application__Type = "AWS::KinesisAnalyticsV2::Application"
)

var (
	// AWS_KinesisAnalyticsV2_Application__PropertiesMap reports all the CloudFormation properties for AWS::KinesisAnalyticsV2::Application.
	AWS_KinesisAnalyticsV2_Application__PropertiesMap = struct {
		ApplicationConfiguration            string
		ApplicationDescription              string
		ApplicationMaintenanceConfiguration string
		ApplicationMode                     string
		ApplicationName                     string
		RunConfiguration                    string
		RuntimeEnvironment                  string
		ServiceExecutionRole                string
		Tags                                string
	}{
		ApplicationConfiguration:            "ApplicationConfiguration",
		ApplicationDescription:              "ApplicationDescription",
		ApplicationMaintenanceConfiguration: "ApplicationMaintenanceConfiguration",
		ApplicationMode:                     "ApplicationMode",
		ApplicationName:                     "ApplicationName",
		RunConfiguration:                    "RunConfiguration",
		RuntimeEnvironment:                  "RuntimeEnvironment",
		ServiceExecutionRole:                "ServiceExecutionRole",
		Tags:                                "Tags",
	}

	// AWS_KinesisAnalyticsV2_Application__PropertiesSlice reports all the CloudFormation properties for AWS::KinesisAnalyticsV2::Application.
	AWS_KinesisAnalyticsV2_Application__PropertiesSlice = []string{
		AWS_KinesisAnalyticsV2_Application__PropertiesMap.ApplicationConfiguration,
		AWS_KinesisAnalyticsV2_Application__PropertiesMap.ApplicationDescription,
		AWS_KinesisAnalyticsV2_Application__PropertiesMap.ApplicationMaintenanceConfiguration,
		AWS_KinesisAnalyticsV2_Application__PropertiesMap.ApplicationMode,
		AWS_KinesisAnalyticsV2_Application__PropertiesMap.ApplicationName,
		AWS_KinesisAnalyticsV2_Application__PropertiesMap.RunConfiguration,
		AWS_KinesisAnalyticsV2_Application__PropertiesMap.RuntimeEnvironment,
		AWS_KinesisAnalyticsV2_Application__PropertiesMap.ServiceExecutionRole,
		AWS_KinesisAnalyticsV2_Application__PropertiesMap.Tags,
	}
)

// AWS_KinesisAnalyticsV2_Application is a binding for AWS::KinesisAnalyticsV2::Application.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html
type AWS_KinesisAnalyticsV2_Application struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationconfiguration
	ApplicationConfiguration cfz.Expression[AWS_KinesisAnalyticsV2_Application_ApplicationConfiguration] `json:"ApplicationConfiguration,omitempty"`

	// ApplicationDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationdescription
	ApplicationDescription cfz.Expression[string] `json:"ApplicationDescription,omitempty"`

	// ApplicationMaintenanceConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationmaintenanceconfiguration
	ApplicationMaintenanceConfiguration cfz.Expression[AWS_KinesisAnalyticsV2_Application_ApplicationMaintenanceConfiguration] `json:"ApplicationMaintenanceConfiguration,omitempty"`

	// ApplicationMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationmode
	ApplicationMode cfz.Expression[string] `json:"ApplicationMode,omitempty"`

	// ApplicationName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationname
	ApplicationName cfz.Expression[string] `json:"ApplicationName,omitempty"`

	// RunConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-runconfiguration
	RunConfiguration cfz.Expression[AWS_KinesisAnalyticsV2_Application_RunConfiguration] `json:"RunConfiguration,omitempty"`

	// RuntimeEnvironment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-runtimeenvironment
	RuntimeEnvironment cfz.Expression[string] `json:"RuntimeEnvironment,omitempty"`

	// ServiceExecutionRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-serviceexecutionrole
	ServiceExecutionRole cfz.Expression[string] `json:"ServiceExecutionRole,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_KinesisAnalyticsV2_Application initializes a new *AWS_KinesisAnalyticsV2_Application.
func New__AWS_KinesisAnalyticsV2_Application(logicalName string) *AWS_KinesisAnalyticsV2_Application {
	return &AWS_KinesisAnalyticsV2_Application{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_KinesisAnalyticsV2_Application) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_KinesisAnalyticsV2_Application) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_KinesisAnalyticsV2_Application) GetType() string {
	return AWS_KinesisAnalyticsV2_Application__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_KinesisAnalyticsV2_Application) Set__LogicalName(v string) *AWS_KinesisAnalyticsV2_Application {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_KinesisAnalyticsV2_Application) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_KinesisAnalyticsV2_Application {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_KinesisAnalyticsV2_Application) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_KinesisAnalyticsV2_Application {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_KinesisAnalyticsV2_Application) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_KinesisAnalyticsV2_Application {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_KinesisAnalyticsV2_Application) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_KinesisAnalyticsV2_Application {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_KinesisAnalyticsV2_Application) Set__RequestedOutputs(v []cfz.Output) *AWS_KinesisAnalyticsV2_Application {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_KinesisAnalyticsV2_Application) Add__RequestedOutputs(v ...cfz.Output) *AWS_KinesisAnalyticsV2_Application {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationConfiguration updates property "ApplicationConfiguration".
func (t *AWS_KinesisAnalyticsV2_Application) Set__ApplicationConfiguration(v cfz.Expression[AWS_KinesisAnalyticsV2_Application_ApplicationConfiguration]) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationConfiguration = v
	return t
}

// SetV__ApplicationConfiguration updates property "ApplicationConfiguration".
func (t *AWS_KinesisAnalyticsV2_Application) SetV__ApplicationConfiguration(v AWS_KinesisAnalyticsV2_Application_ApplicationConfiguration) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationConfiguration = cfz.V(v)
	return t
}

// Set__ApplicationDescription updates property "ApplicationDescription".
func (t *AWS_KinesisAnalyticsV2_Application) Set__ApplicationDescription(v cfz.Expression[string]) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationDescription = v
	return t
}

// SetV__ApplicationDescription updates property "ApplicationDescription".
func (t *AWS_KinesisAnalyticsV2_Application) SetV__ApplicationDescription(v string) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationDescription = cfz.V(v)
	return t
}

// Set__ApplicationMaintenanceConfiguration updates property "ApplicationMaintenanceConfiguration".
func (t *AWS_KinesisAnalyticsV2_Application) Set__ApplicationMaintenanceConfiguration(v cfz.Expression[AWS_KinesisAnalyticsV2_Application_ApplicationMaintenanceConfiguration]) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationMaintenanceConfiguration = v
	return t
}

// SetV__ApplicationMaintenanceConfiguration updates property "ApplicationMaintenanceConfiguration".
func (t *AWS_KinesisAnalyticsV2_Application) SetV__ApplicationMaintenanceConfiguration(v AWS_KinesisAnalyticsV2_Application_ApplicationMaintenanceConfiguration) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationMaintenanceConfiguration = cfz.V(v)
	return t
}

// Set__ApplicationMode updates property "ApplicationMode".
func (t *AWS_KinesisAnalyticsV2_Application) Set__ApplicationMode(v cfz.Expression[string]) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationMode = v
	return t
}

// SetV__ApplicationMode updates property "ApplicationMode".
func (t *AWS_KinesisAnalyticsV2_Application) SetV__ApplicationMode(v string) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationMode = cfz.V(v)
	return t
}

// Set__ApplicationName updates property "ApplicationName".
func (t *AWS_KinesisAnalyticsV2_Application) Set__ApplicationName(v cfz.Expression[string]) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationName = v
	return t
}

// SetV__ApplicationName updates property "ApplicationName".
func (t *AWS_KinesisAnalyticsV2_Application) SetV__ApplicationName(v string) *AWS_KinesisAnalyticsV2_Application {
	t.ApplicationName = cfz.V(v)
	return t
}

// Set__RunConfiguration updates property "RunConfiguration".
func (t *AWS_KinesisAnalyticsV2_Application) Set__RunConfiguration(v cfz.Expression[AWS_KinesisAnalyticsV2_Application_RunConfiguration]) *AWS_KinesisAnalyticsV2_Application {
	t.RunConfiguration = v
	return t
}

// SetV__RunConfiguration updates property "RunConfiguration".
func (t *AWS_KinesisAnalyticsV2_Application) SetV__RunConfiguration(v AWS_KinesisAnalyticsV2_Application_RunConfiguration) *AWS_KinesisAnalyticsV2_Application {
	t.RunConfiguration = cfz.V(v)
	return t
}

// Set__RuntimeEnvironment updates property "RuntimeEnvironment".
func (t *AWS_KinesisAnalyticsV2_Application) Set__RuntimeEnvironment(v cfz.Expression[string]) *AWS_KinesisAnalyticsV2_Application {
	t.RuntimeEnvironment = v
	return t
}

// SetV__RuntimeEnvironment updates property "RuntimeEnvironment".
func (t *AWS_KinesisAnalyticsV2_Application) SetV__RuntimeEnvironment(v string) *AWS_KinesisAnalyticsV2_Application {
	t.RuntimeEnvironment = cfz.V(v)
	return t
}

// Set__ServiceExecutionRole updates property "ServiceExecutionRole".
func (t *AWS_KinesisAnalyticsV2_Application) Set__ServiceExecutionRole(v cfz.Expression[string]) *AWS_KinesisAnalyticsV2_Application {
	t.ServiceExecutionRole = v
	return t
}

// SetV__ServiceExecutionRole updates property "ServiceExecutionRole".
func (t *AWS_KinesisAnalyticsV2_Application) SetV__ServiceExecutionRole(v string) *AWS_KinesisAnalyticsV2_Application {
	t.ServiceExecutionRole = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_KinesisAnalyticsV2_Application) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_KinesisAnalyticsV2_Application {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_KinesisAnalyticsV2_Application) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_KinesisAnalyticsV2_Application {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_KinesisAnalyticsV2_Application) SetSV__Tags(v ...cfz.Tag) *AWS_KinesisAnalyticsV2_Application {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_KinesisAnalyticsV2_Application) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_KinesisAnalyticsV2_Application) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_KinesisAnalyticsV2_Application) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_KinesisAnalyticsV2_Application

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_KinesisAnalyticsV2_Application) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
