// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lambda

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lambda_EventSourceMapping)(nil)
	_ cfz.Resource                   = (*AWS_Lambda_EventSourceMapping)(nil)
)

const (
	// AWS_Lambda_EventSourceMapping__Type is the CloudFormation type for AWS::Lambda::EventSourceMapping.
	AWS_Lambda_EventSourceMapping__Type = "AWS::Lambda::EventSourceMapping"
)

var (
	// AWS_Lambda_EventSourceMapping__AttributesMap reports all the CloudFormation attributes for AWS::Lambda::EventSourceMapping.
	AWS_Lambda_EventSourceMapping__AttributesMap = struct {
		EventSourceMappingArn string
		Id                    string
	}{
		EventSourceMappingArn: "EventSourceMappingArn",
		Id:                    "Id",
	}

	// AWS_Lambda_EventSourceMapping__AttributesSlice reports all the CloudFormation attributes for AWS::Lambda::EventSourceMapping.
	AWS_Lambda_EventSourceMapping__AttributesSlice = []string{
		AWS_Lambda_EventSourceMapping__AttributesMap.EventSourceMappingArn,
		AWS_Lambda_EventSourceMapping__AttributesMap.Id,
	}
)

var (
	// AWS_Lambda_EventSourceMapping__PropertiesMap reports all the CloudFormation properties for AWS::Lambda::EventSourceMapping.
	AWS_Lambda_EventSourceMapping__PropertiesMap = struct {
		AmazonManagedKafkaEventSourceConfig string
		BatchSize                           string
		BisectBatchOnFunctionError          string
		DestinationConfig                   string
		DocumentDBEventSourceConfig         string
		Enabled                             string
		EventSourceArn                      string
		FilterCriteria                      string
		FunctionName                        string
		FunctionResponseTypes               string
		KmsKeyArn                           string
		MaximumBatchingWindowInSeconds      string
		MaximumRecordAgeInSeconds           string
		MaximumRetryAttempts                string
		MetricsConfig                       string
		ParallelizationFactor               string
		ProvisionedPollerConfig             string
		Queues                              string
		ScalingConfig                       string
		SelfManagedEventSource              string
		SelfManagedKafkaEventSourceConfig   string
		SourceAccessConfigurations          string
		StartingPosition                    string
		StartingPositionTimestamp           string
		Tags                                string
		Topics                              string
		TumblingWindowInSeconds             string
	}{
		AmazonManagedKafkaEventSourceConfig: "AmazonManagedKafkaEventSourceConfig",
		BatchSize:                           "BatchSize",
		BisectBatchOnFunctionError:          "BisectBatchOnFunctionError",
		DestinationConfig:                   "DestinationConfig",
		DocumentDBEventSourceConfig:         "DocumentDBEventSourceConfig",
		Enabled:                             "Enabled",
		EventSourceArn:                      "EventSourceArn",
		FilterCriteria:                      "FilterCriteria",
		FunctionName:                        "FunctionName",
		FunctionResponseTypes:               "FunctionResponseTypes",
		KmsKeyArn:                           "KmsKeyArn",
		MaximumBatchingWindowInSeconds:      "MaximumBatchingWindowInSeconds",
		MaximumRecordAgeInSeconds:           "MaximumRecordAgeInSeconds",
		MaximumRetryAttempts:                "MaximumRetryAttempts",
		MetricsConfig:                       "MetricsConfig",
		ParallelizationFactor:               "ParallelizationFactor",
		ProvisionedPollerConfig:             "ProvisionedPollerConfig",
		Queues:                              "Queues",
		ScalingConfig:                       "ScalingConfig",
		SelfManagedEventSource:              "SelfManagedEventSource",
		SelfManagedKafkaEventSourceConfig:   "SelfManagedKafkaEventSourceConfig",
		SourceAccessConfigurations:          "SourceAccessConfigurations",
		StartingPosition:                    "StartingPosition",
		StartingPositionTimestamp:           "StartingPositionTimestamp",
		Tags:                                "Tags",
		Topics:                              "Topics",
		TumblingWindowInSeconds:             "TumblingWindowInSeconds",
	}

	// AWS_Lambda_EventSourceMapping__PropertiesSlice reports all the CloudFormation properties for AWS::Lambda::EventSourceMapping.
	AWS_Lambda_EventSourceMapping__PropertiesSlice = []string{
		AWS_Lambda_EventSourceMapping__PropertiesMap.AmazonManagedKafkaEventSourceConfig,
		AWS_Lambda_EventSourceMapping__PropertiesMap.BatchSize,
		AWS_Lambda_EventSourceMapping__PropertiesMap.BisectBatchOnFunctionError,
		AWS_Lambda_EventSourceMapping__PropertiesMap.DestinationConfig,
		AWS_Lambda_EventSourceMapping__PropertiesMap.DocumentDBEventSourceConfig,
		AWS_Lambda_EventSourceMapping__PropertiesMap.Enabled,
		AWS_Lambda_EventSourceMapping__PropertiesMap.EventSourceArn,
		AWS_Lambda_EventSourceMapping__PropertiesMap.FilterCriteria,
		AWS_Lambda_EventSourceMapping__PropertiesMap.FunctionName,
		AWS_Lambda_EventSourceMapping__PropertiesMap.FunctionResponseTypes,
		AWS_Lambda_EventSourceMapping__PropertiesMap.KmsKeyArn,
		AWS_Lambda_EventSourceMapping__PropertiesMap.MaximumBatchingWindowInSeconds,
		AWS_Lambda_EventSourceMapping__PropertiesMap.MaximumRecordAgeInSeconds,
		AWS_Lambda_EventSourceMapping__PropertiesMap.MaximumRetryAttempts,
		AWS_Lambda_EventSourceMapping__PropertiesMap.MetricsConfig,
		AWS_Lambda_EventSourceMapping__PropertiesMap.ParallelizationFactor,
		AWS_Lambda_EventSourceMapping__PropertiesMap.ProvisionedPollerConfig,
		AWS_Lambda_EventSourceMapping__PropertiesMap.Queues,
		AWS_Lambda_EventSourceMapping__PropertiesMap.ScalingConfig,
		AWS_Lambda_EventSourceMapping__PropertiesMap.SelfManagedEventSource,
		AWS_Lambda_EventSourceMapping__PropertiesMap.SelfManagedKafkaEventSourceConfig,
		AWS_Lambda_EventSourceMapping__PropertiesMap.SourceAccessConfigurations,
		AWS_Lambda_EventSourceMapping__PropertiesMap.StartingPosition,
		AWS_Lambda_EventSourceMapping__PropertiesMap.StartingPositionTimestamp,
		AWS_Lambda_EventSourceMapping__PropertiesMap.Tags,
		AWS_Lambda_EventSourceMapping__PropertiesMap.Topics,
		AWS_Lambda_EventSourceMapping__PropertiesMap.TumblingWindowInSeconds,
	}
)

// AWS_Lambda_EventSourceMapping is a binding for AWS::Lambda::EventSourceMapping.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html
type AWS_Lambda_EventSourceMapping struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AmazonManagedKafkaEventSourceConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-amazonmanagedkafkaeventsourceconfig
	AmazonManagedKafkaEventSourceConfig cfz.Expression[AWS_Lambda_EventSourceMapping_AmazonManagedKafkaEventSourceConfig] `json:"AmazonManagedKafkaEventSourceConfig,omitempty"`

	// BatchSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-batchsize
	BatchSize cfz.Expression[int32] `json:"BatchSize,omitempty"`

	// BisectBatchOnFunctionError is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-bisectbatchonfunctionerror
	BisectBatchOnFunctionError cfz.Expression[bool] `json:"BisectBatchOnFunctionError,omitempty"`

	// DestinationConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-destinationconfig
	DestinationConfig cfz.Expression[AWS_Lambda_EventSourceMapping_DestinationConfig] `json:"DestinationConfig,omitempty"`

	// DocumentDBEventSourceConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-documentdbeventsourceconfig
	DocumentDBEventSourceConfig cfz.Expression[AWS_Lambda_EventSourceMapping_DocumentDBEventSourceConfig] `json:"DocumentDBEventSourceConfig,omitempty"`

	// Enabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-enabled
	Enabled cfz.Expression[bool] `json:"Enabled,omitempty"`

	// EventSourceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-eventsourcearn
	EventSourceArn cfz.Expression[string] `json:"EventSourceArn,omitempty"`

	// FilterCriteria is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-filtercriteria
	FilterCriteria cfz.Expression[AWS_Lambda_EventSourceMapping_FilterCriteria] `json:"FilterCriteria,omitempty"`

	// FunctionName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionname
	FunctionName cfz.Expression[string] `json:"FunctionName,omitempty"`

	// FunctionResponseTypes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionresponsetypes
	FunctionResponseTypes cfz.ExpressionSlice[string] `json:"FunctionResponseTypes,omitempty"`

	// KmsKeyArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-kmskeyarn
	KmsKeyArn cfz.Expression[string] `json:"KmsKeyArn,omitempty"`

	// MaximumBatchingWindowInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumbatchingwindowinseconds
	MaximumBatchingWindowInSeconds cfz.Expression[int32] `json:"MaximumBatchingWindowInSeconds,omitempty"`

	// MaximumRecordAgeInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumrecordageinseconds
	MaximumRecordAgeInSeconds cfz.Expression[int32] `json:"MaximumRecordAgeInSeconds,omitempty"`

	// MaximumRetryAttempts is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumretryattempts
	MaximumRetryAttempts cfz.Expression[int32] `json:"MaximumRetryAttempts,omitempty"`

	// MetricsConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-metricsconfig
	MetricsConfig cfz.Expression[AWS_Lambda_EventSourceMapping_MetricsConfig] `json:"MetricsConfig,omitempty"`

	// ParallelizationFactor is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-parallelizationfactor
	ParallelizationFactor cfz.Expression[int32] `json:"ParallelizationFactor,omitempty"`

	// ProvisionedPollerConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-provisionedpollerconfig
	ProvisionedPollerConfig cfz.Expression[AWS_Lambda_EventSourceMapping_ProvisionedPollerConfig] `json:"ProvisionedPollerConfig,omitempty"`

	// Queues is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-queues
	Queues cfz.ExpressionSlice[string] `json:"Queues,omitempty"`

	// ScalingConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-scalingconfig
	ScalingConfig cfz.Expression[AWS_Lambda_EventSourceMapping_ScalingConfig] `json:"ScalingConfig,omitempty"`

	// SelfManagedEventSource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-selfmanagedeventsource
	SelfManagedEventSource cfz.Expression[AWS_Lambda_EventSourceMapping_SelfManagedEventSource] `json:"SelfManagedEventSource,omitempty"`

	// SelfManagedKafkaEventSourceConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-selfmanagedkafkaeventsourceconfig
	SelfManagedKafkaEventSourceConfig cfz.Expression[AWS_Lambda_EventSourceMapping_SelfManagedKafkaEventSourceConfig] `json:"SelfManagedKafkaEventSourceConfig,omitempty"`

	// SourceAccessConfigurations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-sourceaccessconfigurations
	SourceAccessConfigurations cfz.ExpressionSlice[AWS_Lambda_EventSourceMapping_SourceAccessConfiguration] `json:"SourceAccessConfigurations,omitempty"`

	// StartingPosition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingposition
	StartingPosition cfz.Expression[string] `json:"StartingPosition,omitempty"`

	// StartingPositionTimestamp is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingpositiontimestamp
	StartingPositionTimestamp cfz.Expression[float64] `json:"StartingPositionTimestamp,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Topics is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-topics
	Topics cfz.ExpressionSlice[string] `json:"Topics,omitempty"`

	// TumblingWindowInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-tumblingwindowinseconds
	TumblingWindowInSeconds cfz.Expression[int32] `json:"TumblingWindowInSeconds,omitempty"`
}

// New__AWS_Lambda_EventSourceMapping initializes a new *AWS_Lambda_EventSourceMapping.
func New__AWS_Lambda_EventSourceMapping(logicalName string) *AWS_Lambda_EventSourceMapping {
	return &AWS_Lambda_EventSourceMapping{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lambda_EventSourceMapping) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lambda_EventSourceMapping) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lambda_EventSourceMapping) GetType() string {
	return AWS_Lambda_EventSourceMapping__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lambda_EventSourceMapping) Set__LogicalName(v string) *AWS_Lambda_EventSourceMapping {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lambda_EventSourceMapping) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lambda_EventSourceMapping {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lambda_EventSourceMapping) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lambda_EventSourceMapping {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lambda_EventSourceMapping) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lambda_EventSourceMapping {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lambda_EventSourceMapping) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lambda_EventSourceMapping {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lambda_EventSourceMapping) Set__RequestedOutputs(v []cfz.Output) *AWS_Lambda_EventSourceMapping {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lambda_EventSourceMapping) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lambda_EventSourceMapping {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AmazonManagedKafkaEventSourceConfig updates property "AmazonManagedKafkaEventSourceConfig".
func (t *AWS_Lambda_EventSourceMapping) Set__AmazonManagedKafkaEventSourceConfig(v cfz.Expression[AWS_Lambda_EventSourceMapping_AmazonManagedKafkaEventSourceConfig]) *AWS_Lambda_EventSourceMapping {
	t.AmazonManagedKafkaEventSourceConfig = v
	return t
}

// SetV__AmazonManagedKafkaEventSourceConfig updates property "AmazonManagedKafkaEventSourceConfig".
func (t *AWS_Lambda_EventSourceMapping) SetV__AmazonManagedKafkaEventSourceConfig(v AWS_Lambda_EventSourceMapping_AmazonManagedKafkaEventSourceConfig) *AWS_Lambda_EventSourceMapping {
	t.AmazonManagedKafkaEventSourceConfig = cfz.V(v)
	return t
}

// Set__BatchSize updates property "BatchSize".
func (t *AWS_Lambda_EventSourceMapping) Set__BatchSize(v cfz.Expression[int32]) *AWS_Lambda_EventSourceMapping {
	t.BatchSize = v
	return t
}

// SetV__BatchSize updates property "BatchSize".
func (t *AWS_Lambda_EventSourceMapping) SetV__BatchSize(v int32) *AWS_Lambda_EventSourceMapping {
	t.BatchSize = cfz.V(v)
	return t
}

// Set__BisectBatchOnFunctionError updates property "BisectBatchOnFunctionError".
func (t *AWS_Lambda_EventSourceMapping) Set__BisectBatchOnFunctionError(v cfz.Expression[bool]) *AWS_Lambda_EventSourceMapping {
	t.BisectBatchOnFunctionError = v
	return t
}

// SetV__BisectBatchOnFunctionError updates property "BisectBatchOnFunctionError".
func (t *AWS_Lambda_EventSourceMapping) SetV__BisectBatchOnFunctionError(v bool) *AWS_Lambda_EventSourceMapping {
	t.BisectBatchOnFunctionError = cfz.V(v)
	return t
}

// Set__DestinationConfig updates property "DestinationConfig".
func (t *AWS_Lambda_EventSourceMapping) Set__DestinationConfig(v cfz.Expression[AWS_Lambda_EventSourceMapping_DestinationConfig]) *AWS_Lambda_EventSourceMapping {
	t.DestinationConfig = v
	return t
}

// SetV__DestinationConfig updates property "DestinationConfig".
func (t *AWS_Lambda_EventSourceMapping) SetV__DestinationConfig(v AWS_Lambda_EventSourceMapping_DestinationConfig) *AWS_Lambda_EventSourceMapping {
	t.DestinationConfig = cfz.V(v)
	return t
}

// Set__DocumentDBEventSourceConfig updates property "DocumentDBEventSourceConfig".
func (t *AWS_Lambda_EventSourceMapping) Set__DocumentDBEventSourceConfig(v cfz.Expression[AWS_Lambda_EventSourceMapping_DocumentDBEventSourceConfig]) *AWS_Lambda_EventSourceMapping {
	t.DocumentDBEventSourceConfig = v
	return t
}

// SetV__DocumentDBEventSourceConfig updates property "DocumentDBEventSourceConfig".
func (t *AWS_Lambda_EventSourceMapping) SetV__DocumentDBEventSourceConfig(v AWS_Lambda_EventSourceMapping_DocumentDBEventSourceConfig) *AWS_Lambda_EventSourceMapping {
	t.DocumentDBEventSourceConfig = cfz.V(v)
	return t
}

// Set__Enabled updates property "Enabled".
func (t *AWS_Lambda_EventSourceMapping) Set__Enabled(v cfz.Expression[bool]) *AWS_Lambda_EventSourceMapping {
	t.Enabled = v
	return t
}

// SetV__Enabled updates property "Enabled".
func (t *AWS_Lambda_EventSourceMapping) SetV__Enabled(v bool) *AWS_Lambda_EventSourceMapping {
	t.Enabled = cfz.V(v)
	return t
}

// Set__EventSourceArn updates property "EventSourceArn".
func (t *AWS_Lambda_EventSourceMapping) Set__EventSourceArn(v cfz.Expression[string]) *AWS_Lambda_EventSourceMapping {
	t.EventSourceArn = v
	return t
}

// SetV__EventSourceArn updates property "EventSourceArn".
func (t *AWS_Lambda_EventSourceMapping) SetV__EventSourceArn(v string) *AWS_Lambda_EventSourceMapping {
	t.EventSourceArn = cfz.V(v)
	return t
}

// Set__FilterCriteria updates property "FilterCriteria".
func (t *AWS_Lambda_EventSourceMapping) Set__FilterCriteria(v cfz.Expression[AWS_Lambda_EventSourceMapping_FilterCriteria]) *AWS_Lambda_EventSourceMapping {
	t.FilterCriteria = v
	return t
}

// SetV__FilterCriteria updates property "FilterCriteria".
func (t *AWS_Lambda_EventSourceMapping) SetV__FilterCriteria(v AWS_Lambda_EventSourceMapping_FilterCriteria) *AWS_Lambda_EventSourceMapping {
	t.FilterCriteria = cfz.V(v)
	return t
}

// Set__FunctionName updates property "FunctionName".
func (t *AWS_Lambda_EventSourceMapping) Set__FunctionName(v cfz.Expression[string]) *AWS_Lambda_EventSourceMapping {
	t.FunctionName = v
	return t
}

// SetV__FunctionName updates property "FunctionName".
func (t *AWS_Lambda_EventSourceMapping) SetV__FunctionName(v string) *AWS_Lambda_EventSourceMapping {
	t.FunctionName = cfz.V(v)
	return t
}

// Set__FunctionResponseTypes updates property "FunctionResponseTypes".
func (t *AWS_Lambda_EventSourceMapping) Set__FunctionResponseTypes(v cfz.ExpressionSlice[string]) *AWS_Lambda_EventSourceMapping {
	t.FunctionResponseTypes = v
	return t
}

// SetS__FunctionResponseTypes updates property "FunctionResponseTypes".
func (t *AWS_Lambda_EventSourceMapping) SetS__FunctionResponseTypes(v ...cfz.Expression[string]) *AWS_Lambda_EventSourceMapping {
	t.FunctionResponseTypes = cfz.S(v...)
	return t
}

// SetSV__FunctionResponseTypes updates property "FunctionResponseTypes".
func (t *AWS_Lambda_EventSourceMapping) SetSV__FunctionResponseTypes(v ...string) *AWS_Lambda_EventSourceMapping {
	t.FunctionResponseTypes = cfz.SV(v...)
	return t
}

// Set__KmsKeyArn updates property "KmsKeyArn".
func (t *AWS_Lambda_EventSourceMapping) Set__KmsKeyArn(v cfz.Expression[string]) *AWS_Lambda_EventSourceMapping {
	t.KmsKeyArn = v
	return t
}

// SetV__KmsKeyArn updates property "KmsKeyArn".
func (t *AWS_Lambda_EventSourceMapping) SetV__KmsKeyArn(v string) *AWS_Lambda_EventSourceMapping {
	t.KmsKeyArn = cfz.V(v)
	return t
}

// Set__MaximumBatchingWindowInSeconds updates property "MaximumBatchingWindowInSeconds".
func (t *AWS_Lambda_EventSourceMapping) Set__MaximumBatchingWindowInSeconds(v cfz.Expression[int32]) *AWS_Lambda_EventSourceMapping {
	t.MaximumBatchingWindowInSeconds = v
	return t
}

// SetV__MaximumBatchingWindowInSeconds updates property "MaximumBatchingWindowInSeconds".
func (t *AWS_Lambda_EventSourceMapping) SetV__MaximumBatchingWindowInSeconds(v int32) *AWS_Lambda_EventSourceMapping {
	t.MaximumBatchingWindowInSeconds = cfz.V(v)
	return t
}

// Set__MaximumRecordAgeInSeconds updates property "MaximumRecordAgeInSeconds".
func (t *AWS_Lambda_EventSourceMapping) Set__MaximumRecordAgeInSeconds(v cfz.Expression[int32]) *AWS_Lambda_EventSourceMapping {
	t.MaximumRecordAgeInSeconds = v
	return t
}

// SetV__MaximumRecordAgeInSeconds updates property "MaximumRecordAgeInSeconds".
func (t *AWS_Lambda_EventSourceMapping) SetV__MaximumRecordAgeInSeconds(v int32) *AWS_Lambda_EventSourceMapping {
	t.MaximumRecordAgeInSeconds = cfz.V(v)
	return t
}

// Set__MaximumRetryAttempts updates property "MaximumRetryAttempts".
func (t *AWS_Lambda_EventSourceMapping) Set__MaximumRetryAttempts(v cfz.Expression[int32]) *AWS_Lambda_EventSourceMapping {
	t.MaximumRetryAttempts = v
	return t
}

// SetV__MaximumRetryAttempts updates property "MaximumRetryAttempts".
func (t *AWS_Lambda_EventSourceMapping) SetV__MaximumRetryAttempts(v int32) *AWS_Lambda_EventSourceMapping {
	t.MaximumRetryAttempts = cfz.V(v)
	return t
}

// Set__MetricsConfig updates property "MetricsConfig".
func (t *AWS_Lambda_EventSourceMapping) Set__MetricsConfig(v cfz.Expression[AWS_Lambda_EventSourceMapping_MetricsConfig]) *AWS_Lambda_EventSourceMapping {
	t.MetricsConfig = v
	return t
}

// SetV__MetricsConfig updates property "MetricsConfig".
func (t *AWS_Lambda_EventSourceMapping) SetV__MetricsConfig(v AWS_Lambda_EventSourceMapping_MetricsConfig) *AWS_Lambda_EventSourceMapping {
	t.MetricsConfig = cfz.V(v)
	return t
}

// Set__ParallelizationFactor updates property "ParallelizationFactor".
func (t *AWS_Lambda_EventSourceMapping) Set__ParallelizationFactor(v cfz.Expression[int32]) *AWS_Lambda_EventSourceMapping {
	t.ParallelizationFactor = v
	return t
}

// SetV__ParallelizationFactor updates property "ParallelizationFactor".
func (t *AWS_Lambda_EventSourceMapping) SetV__ParallelizationFactor(v int32) *AWS_Lambda_EventSourceMapping {
	t.ParallelizationFactor = cfz.V(v)
	return t
}

// Set__ProvisionedPollerConfig updates property "ProvisionedPollerConfig".
func (t *AWS_Lambda_EventSourceMapping) Set__ProvisionedPollerConfig(v cfz.Expression[AWS_Lambda_EventSourceMapping_ProvisionedPollerConfig]) *AWS_Lambda_EventSourceMapping {
	t.ProvisionedPollerConfig = v
	return t
}

// SetV__ProvisionedPollerConfig updates property "ProvisionedPollerConfig".
func (t *AWS_Lambda_EventSourceMapping) SetV__ProvisionedPollerConfig(v AWS_Lambda_EventSourceMapping_ProvisionedPollerConfig) *AWS_Lambda_EventSourceMapping {
	t.ProvisionedPollerConfig = cfz.V(v)
	return t
}

// Set__Queues updates property "Queues".
func (t *AWS_Lambda_EventSourceMapping) Set__Queues(v cfz.ExpressionSlice[string]) *AWS_Lambda_EventSourceMapping {
	t.Queues = v
	return t
}

// SetS__Queues updates property "Queues".
func (t *AWS_Lambda_EventSourceMapping) SetS__Queues(v ...cfz.Expression[string]) *AWS_Lambda_EventSourceMapping {
	t.Queues = cfz.S(v...)
	return t
}

// SetSV__Queues updates property "Queues".
func (t *AWS_Lambda_EventSourceMapping) SetSV__Queues(v ...string) *AWS_Lambda_EventSourceMapping {
	t.Queues = cfz.SV(v...)
	return t
}

// Set__ScalingConfig updates property "ScalingConfig".
func (t *AWS_Lambda_EventSourceMapping) Set__ScalingConfig(v cfz.Expression[AWS_Lambda_EventSourceMapping_ScalingConfig]) *AWS_Lambda_EventSourceMapping {
	t.ScalingConfig = v
	return t
}

// SetV__ScalingConfig updates property "ScalingConfig".
func (t *AWS_Lambda_EventSourceMapping) SetV__ScalingConfig(v AWS_Lambda_EventSourceMapping_ScalingConfig) *AWS_Lambda_EventSourceMapping {
	t.ScalingConfig = cfz.V(v)
	return t
}

// Set__SelfManagedEventSource updates property "SelfManagedEventSource".
func (t *AWS_Lambda_EventSourceMapping) Set__SelfManagedEventSource(v cfz.Expression[AWS_Lambda_EventSourceMapping_SelfManagedEventSource]) *AWS_Lambda_EventSourceMapping {
	t.SelfManagedEventSource = v
	return t
}

// SetV__SelfManagedEventSource updates property "SelfManagedEventSource".
func (t *AWS_Lambda_EventSourceMapping) SetV__SelfManagedEventSource(v AWS_Lambda_EventSourceMapping_SelfManagedEventSource) *AWS_Lambda_EventSourceMapping {
	t.SelfManagedEventSource = cfz.V(v)
	return t
}

// Set__SelfManagedKafkaEventSourceConfig updates property "SelfManagedKafkaEventSourceConfig".
func (t *AWS_Lambda_EventSourceMapping) Set__SelfManagedKafkaEventSourceConfig(v cfz.Expression[AWS_Lambda_EventSourceMapping_SelfManagedKafkaEventSourceConfig]) *AWS_Lambda_EventSourceMapping {
	t.SelfManagedKafkaEventSourceConfig = v
	return t
}

// SetV__SelfManagedKafkaEventSourceConfig updates property "SelfManagedKafkaEventSourceConfig".
func (t *AWS_Lambda_EventSourceMapping) SetV__SelfManagedKafkaEventSourceConfig(v AWS_Lambda_EventSourceMapping_SelfManagedKafkaEventSourceConfig) *AWS_Lambda_EventSourceMapping {
	t.SelfManagedKafkaEventSourceConfig = cfz.V(v)
	return t
}

// Set__SourceAccessConfigurations updates property "SourceAccessConfigurations".
func (t *AWS_Lambda_EventSourceMapping) Set__SourceAccessConfigurations(v cfz.ExpressionSlice[AWS_Lambda_EventSourceMapping_SourceAccessConfiguration]) *AWS_Lambda_EventSourceMapping {
	t.SourceAccessConfigurations = v
	return t
}

// SetS__SourceAccessConfigurations updates property "SourceAccessConfigurations".
func (t *AWS_Lambda_EventSourceMapping) SetS__SourceAccessConfigurations(v ...cfz.Expression[AWS_Lambda_EventSourceMapping_SourceAccessConfiguration]) *AWS_Lambda_EventSourceMapping {
	t.SourceAccessConfigurations = cfz.S(v...)
	return t
}

// SetSV__SourceAccessConfigurations updates property "SourceAccessConfigurations".
func (t *AWS_Lambda_EventSourceMapping) SetSV__SourceAccessConfigurations(v ...AWS_Lambda_EventSourceMapping_SourceAccessConfiguration) *AWS_Lambda_EventSourceMapping {
	t.SourceAccessConfigurations = cfz.SV(v...)
	return t
}

// Set__StartingPosition updates property "StartingPosition".
func (t *AWS_Lambda_EventSourceMapping) Set__StartingPosition(v cfz.Expression[string]) *AWS_Lambda_EventSourceMapping {
	t.StartingPosition = v
	return t
}

// SetV__StartingPosition updates property "StartingPosition".
func (t *AWS_Lambda_EventSourceMapping) SetV__StartingPosition(v string) *AWS_Lambda_EventSourceMapping {
	t.StartingPosition = cfz.V(v)
	return t
}

// Set__StartingPositionTimestamp updates property "StartingPositionTimestamp".
func (t *AWS_Lambda_EventSourceMapping) Set__StartingPositionTimestamp(v cfz.Expression[float64]) *AWS_Lambda_EventSourceMapping {
	t.StartingPositionTimestamp = v
	return t
}

// SetV__StartingPositionTimestamp updates property "StartingPositionTimestamp".
func (t *AWS_Lambda_EventSourceMapping) SetV__StartingPositionTimestamp(v float64) *AWS_Lambda_EventSourceMapping {
	t.StartingPositionTimestamp = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Lambda_EventSourceMapping) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Lambda_EventSourceMapping {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Lambda_EventSourceMapping) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Lambda_EventSourceMapping {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Lambda_EventSourceMapping) SetSV__Tags(v ...cfz.Tag) *AWS_Lambda_EventSourceMapping {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Topics updates property "Topics".
func (t *AWS_Lambda_EventSourceMapping) Set__Topics(v cfz.ExpressionSlice[string]) *AWS_Lambda_EventSourceMapping {
	t.Topics = v
	return t
}

// SetS__Topics updates property "Topics".
func (t *AWS_Lambda_EventSourceMapping) SetS__Topics(v ...cfz.Expression[string]) *AWS_Lambda_EventSourceMapping {
	t.Topics = cfz.S(v...)
	return t
}

// SetSV__Topics updates property "Topics".
func (t *AWS_Lambda_EventSourceMapping) SetSV__Topics(v ...string) *AWS_Lambda_EventSourceMapping {
	t.Topics = cfz.SV(v...)
	return t
}

// Set__TumblingWindowInSeconds updates property "TumblingWindowInSeconds".
func (t *AWS_Lambda_EventSourceMapping) Set__TumblingWindowInSeconds(v cfz.Expression[int32]) *AWS_Lambda_EventSourceMapping {
	t.TumblingWindowInSeconds = v
	return t
}

// SetV__TumblingWindowInSeconds updates property "TumblingWindowInSeconds".
func (t *AWS_Lambda_EventSourceMapping) SetV__TumblingWindowInSeconds(v int32) *AWS_Lambda_EventSourceMapping {
	t.TumblingWindowInSeconds = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lambda_EventSourceMapping) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__EventSourceMappingArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EventSourceMappingArn
func (t *AWS_Lambda_EventSourceMapping) GetAtt__EventSourceMappingArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_EventSourceMapping__AttributesMap.EventSourceMappingArn))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Lambda_EventSourceMapping) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_EventSourceMapping__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lambda_EventSourceMapping) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EventSourceMappingArn returns a conventionally configured output for an attribute of this resource.
// Attribute: EventSourceMappingArn
func (t *AWS_Lambda_EventSourceMapping) GetConventionalOutputAtt__EventSourceMappingArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEventSourceMappingArn", t.GetAtt__EventSourceMappingArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Lambda_EventSourceMapping) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lambda_EventSourceMapping) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lambda_EventSourceMapping

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lambda_EventSourceMapping) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
