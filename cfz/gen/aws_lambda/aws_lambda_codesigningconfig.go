// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lambda

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lambda_CodeSigningConfig)(nil)
	_ cfz.Resource                   = (*AWS_Lambda_CodeSigningConfig)(nil)
)

const (
	// AWS_Lambda_CodeSigningConfig__Type is the CloudFormation type for AWS::Lambda::CodeSigningConfig.
	AWS_Lambda_CodeSigningConfig__Type = "AWS::Lambda::CodeSigningConfig"
)

var (
	// AWS_Lambda_CodeSigningConfig__AttributesMap reports all the CloudFormation attributes for AWS::Lambda::CodeSigningConfig.
	AWS_Lambda_CodeSigningConfig__AttributesMap = struct {
		CodeSigningConfigArn string
		CodeSigningConfigId  string
	}{
		CodeSigningConfigArn: "CodeSigningConfigArn",
		CodeSigningConfigId:  "CodeSigningConfigId",
	}

	// AWS_Lambda_CodeSigningConfig__AttributesSlice reports all the CloudFormation attributes for AWS::Lambda::CodeSigningConfig.
	AWS_Lambda_CodeSigningConfig__AttributesSlice = []string{
		AWS_Lambda_CodeSigningConfig__AttributesMap.CodeSigningConfigArn,
		AWS_Lambda_CodeSigningConfig__AttributesMap.CodeSigningConfigId,
	}
)

var (
	// AWS_Lambda_CodeSigningConfig__PropertiesMap reports all the CloudFormation properties for AWS::Lambda::CodeSigningConfig.
	AWS_Lambda_CodeSigningConfig__PropertiesMap = struct {
		AllowedPublishers   string
		CodeSigningPolicies string
		Description         string
		Tags                string
	}{
		AllowedPublishers:   "AllowedPublishers",
		CodeSigningPolicies: "CodeSigningPolicies",
		Description:         "Description",
		Tags:                "Tags",
	}

	// AWS_Lambda_CodeSigningConfig__PropertiesSlice reports all the CloudFormation properties for AWS::Lambda::CodeSigningConfig.
	AWS_Lambda_CodeSigningConfig__PropertiesSlice = []string{
		AWS_Lambda_CodeSigningConfig__PropertiesMap.AllowedPublishers,
		AWS_Lambda_CodeSigningConfig__PropertiesMap.CodeSigningPolicies,
		AWS_Lambda_CodeSigningConfig__PropertiesMap.Description,
		AWS_Lambda_CodeSigningConfig__PropertiesMap.Tags,
	}
)

// AWS_Lambda_CodeSigningConfig is a binding for AWS::Lambda::CodeSigningConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html
type AWS_Lambda_CodeSigningConfig struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AllowedPublishers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-allowedpublishers
	AllowedPublishers cfz.Expression[AWS_Lambda_CodeSigningConfig_AllowedPublishers] `json:"AllowedPublishers,omitempty"`

	// CodeSigningPolicies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-codesigningpolicies
	CodeSigningPolicies cfz.Expression[AWS_Lambda_CodeSigningConfig_CodeSigningPolicies] `json:"CodeSigningPolicies,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-codesigningconfig.html#cfn-lambda-codesigningconfig-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Lambda_CodeSigningConfig initializes a new *AWS_Lambda_CodeSigningConfig.
func New__AWS_Lambda_CodeSigningConfig(logicalName string) *AWS_Lambda_CodeSigningConfig {
	return &AWS_Lambda_CodeSigningConfig{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lambda_CodeSigningConfig) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lambda_CodeSigningConfig) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lambda_CodeSigningConfig) GetType() string {
	return AWS_Lambda_CodeSigningConfig__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lambda_CodeSigningConfig) Set__LogicalName(v string) *AWS_Lambda_CodeSigningConfig {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lambda_CodeSigningConfig) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lambda_CodeSigningConfig {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lambda_CodeSigningConfig) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lambda_CodeSigningConfig {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lambda_CodeSigningConfig) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lambda_CodeSigningConfig {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lambda_CodeSigningConfig) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lambda_CodeSigningConfig {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lambda_CodeSigningConfig) Set__RequestedOutputs(v []cfz.Output) *AWS_Lambda_CodeSigningConfig {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lambda_CodeSigningConfig) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lambda_CodeSigningConfig {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AllowedPublishers updates property "AllowedPublishers".
func (t *AWS_Lambda_CodeSigningConfig) Set__AllowedPublishers(v cfz.Expression[AWS_Lambda_CodeSigningConfig_AllowedPublishers]) *AWS_Lambda_CodeSigningConfig {
	t.AllowedPublishers = v
	return t
}

// SetV__AllowedPublishers updates property "AllowedPublishers".
func (t *AWS_Lambda_CodeSigningConfig) SetV__AllowedPublishers(v AWS_Lambda_CodeSigningConfig_AllowedPublishers) *AWS_Lambda_CodeSigningConfig {
	t.AllowedPublishers = cfz.V(v)
	return t
}

// Set__CodeSigningPolicies updates property "CodeSigningPolicies".
func (t *AWS_Lambda_CodeSigningConfig) Set__CodeSigningPolicies(v cfz.Expression[AWS_Lambda_CodeSigningConfig_CodeSigningPolicies]) *AWS_Lambda_CodeSigningConfig {
	t.CodeSigningPolicies = v
	return t
}

// SetV__CodeSigningPolicies updates property "CodeSigningPolicies".
func (t *AWS_Lambda_CodeSigningConfig) SetV__CodeSigningPolicies(v AWS_Lambda_CodeSigningConfig_CodeSigningPolicies) *AWS_Lambda_CodeSigningConfig {
	t.CodeSigningPolicies = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Lambda_CodeSigningConfig) Set__Description(v cfz.Expression[string]) *AWS_Lambda_CodeSigningConfig {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Lambda_CodeSigningConfig) SetV__Description(v string) *AWS_Lambda_CodeSigningConfig {
	t.Description = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Lambda_CodeSigningConfig) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Lambda_CodeSigningConfig {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Lambda_CodeSigningConfig) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Lambda_CodeSigningConfig {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Lambda_CodeSigningConfig) SetSV__Tags(v ...cfz.Tag) *AWS_Lambda_CodeSigningConfig {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lambda_CodeSigningConfig) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CodeSigningConfigArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CodeSigningConfigArn
func (t *AWS_Lambda_CodeSigningConfig) GetAtt__CodeSigningConfigArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_CodeSigningConfig__AttributesMap.CodeSigningConfigArn))
}

// GetAtt__CodeSigningConfigId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CodeSigningConfigId
func (t *AWS_Lambda_CodeSigningConfig) GetAtt__CodeSigningConfigId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_CodeSigningConfig__AttributesMap.CodeSigningConfigId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lambda_CodeSigningConfig) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CodeSigningConfigArn returns a conventionally configured output for an attribute of this resource.
// Attribute: CodeSigningConfigArn
func (t *AWS_Lambda_CodeSigningConfig) GetConventionalOutputAtt__CodeSigningConfigArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCodeSigningConfigArn", t.GetAtt__CodeSigningConfigArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CodeSigningConfigId returns a conventionally configured output for an attribute of this resource.
// Attribute: CodeSigningConfigId
func (t *AWS_Lambda_CodeSigningConfig) GetConventionalOutputAtt__CodeSigningConfigId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCodeSigningConfigId", t.GetAtt__CodeSigningConfigId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lambda_CodeSigningConfig) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lambda_CodeSigningConfig

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lambda_CodeSigningConfig) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
