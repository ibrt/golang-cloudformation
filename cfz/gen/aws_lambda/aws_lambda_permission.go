// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lambda

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lambda_Permission)(nil)
	_ cfz.Resource                   = (*AWS_Lambda_Permission)(nil)
)

const (
	// AWS_Lambda_Permission__Type is the CloudFormation type for AWS::Lambda::Permission.
	AWS_Lambda_Permission__Type = "AWS::Lambda::Permission"
)

var (
	// AWS_Lambda_Permission__AttributesMap reports all the CloudFormation attributes for AWS::Lambda::Permission.
	AWS_Lambda_Permission__AttributesMap = struct {
		Id string
	}{
		Id: "Id",
	}

	// AWS_Lambda_Permission__AttributesSlice reports all the CloudFormation attributes for AWS::Lambda::Permission.
	AWS_Lambda_Permission__AttributesSlice = []string{
		AWS_Lambda_Permission__AttributesMap.Id,
	}
)

var (
	// AWS_Lambda_Permission__PropertiesMap reports all the CloudFormation properties for AWS::Lambda::Permission.
	AWS_Lambda_Permission__PropertiesMap = struct {
		Action              string
		EventSourceToken    string
		FunctionName        string
		FunctionUrlAuthType string
		Principal           string
		PrincipalOrgID      string
		SourceAccount       string
		SourceArn           string
	}{
		Action:              "Action",
		EventSourceToken:    "EventSourceToken",
		FunctionName:        "FunctionName",
		FunctionUrlAuthType: "FunctionUrlAuthType",
		Principal:           "Principal",
		PrincipalOrgID:      "PrincipalOrgID",
		SourceAccount:       "SourceAccount",
		SourceArn:           "SourceArn",
	}

	// AWS_Lambda_Permission__PropertiesSlice reports all the CloudFormation properties for AWS::Lambda::Permission.
	AWS_Lambda_Permission__PropertiesSlice = []string{
		AWS_Lambda_Permission__PropertiesMap.Action,
		AWS_Lambda_Permission__PropertiesMap.EventSourceToken,
		AWS_Lambda_Permission__PropertiesMap.FunctionName,
		AWS_Lambda_Permission__PropertiesMap.FunctionUrlAuthType,
		AWS_Lambda_Permission__PropertiesMap.Principal,
		AWS_Lambda_Permission__PropertiesMap.PrincipalOrgID,
		AWS_Lambda_Permission__PropertiesMap.SourceAccount,
		AWS_Lambda_Permission__PropertiesMap.SourceArn,
	}
)

// AWS_Lambda_Permission is a binding for AWS::Lambda::Permission.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html
type AWS_Lambda_Permission struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Action is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-action
	Action cfz.Expression[string] `json:"Action,omitempty"`

	// EventSourceToken is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-eventsourcetoken
	EventSourceToken cfz.Expression[string] `json:"EventSourceToken,omitempty"`

	// FunctionName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-functionname
	FunctionName cfz.Expression[string] `json:"FunctionName,omitempty"`

	// FunctionUrlAuthType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-functionurlauthtype
	FunctionUrlAuthType cfz.Expression[string] `json:"FunctionUrlAuthType,omitempty"`

	// Principal is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-principal
	Principal cfz.Expression[string] `json:"Principal,omitempty"`

	// PrincipalOrgID is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-principalorgid
	PrincipalOrgID cfz.Expression[string] `json:"PrincipalOrgID,omitempty"`

	// SourceAccount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourceaccount
	SourceAccount cfz.Expression[string] `json:"SourceAccount,omitempty"`

	// SourceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html#cfn-lambda-permission-sourcearn
	SourceArn cfz.Expression[string] `json:"SourceArn,omitempty"`
}

// New__AWS_Lambda_Permission initializes a new *AWS_Lambda_Permission.
func New__AWS_Lambda_Permission(logicalName string) *AWS_Lambda_Permission {
	return &AWS_Lambda_Permission{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lambda_Permission) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lambda_Permission) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lambda_Permission) GetType() string {
	return AWS_Lambda_Permission__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lambda_Permission) Set__LogicalName(v string) *AWS_Lambda_Permission {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lambda_Permission) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lambda_Permission {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lambda_Permission) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lambda_Permission {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lambda_Permission) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lambda_Permission {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lambda_Permission) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lambda_Permission {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lambda_Permission) Set__RequestedOutputs(v []cfz.Output) *AWS_Lambda_Permission {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lambda_Permission) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lambda_Permission {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Action updates property "Action".
func (t *AWS_Lambda_Permission) Set__Action(v cfz.Expression[string]) *AWS_Lambda_Permission {
	t.Action = v
	return t
}

// SetV__Action updates property "Action".
func (t *AWS_Lambda_Permission) SetV__Action(v string) *AWS_Lambda_Permission {
	t.Action = cfz.V(v)
	return t
}

// Set__EventSourceToken updates property "EventSourceToken".
func (t *AWS_Lambda_Permission) Set__EventSourceToken(v cfz.Expression[string]) *AWS_Lambda_Permission {
	t.EventSourceToken = v
	return t
}

// SetV__EventSourceToken updates property "EventSourceToken".
func (t *AWS_Lambda_Permission) SetV__EventSourceToken(v string) *AWS_Lambda_Permission {
	t.EventSourceToken = cfz.V(v)
	return t
}

// Set__FunctionName updates property "FunctionName".
func (t *AWS_Lambda_Permission) Set__FunctionName(v cfz.Expression[string]) *AWS_Lambda_Permission {
	t.FunctionName = v
	return t
}

// SetV__FunctionName updates property "FunctionName".
func (t *AWS_Lambda_Permission) SetV__FunctionName(v string) *AWS_Lambda_Permission {
	t.FunctionName = cfz.V(v)
	return t
}

// Set__FunctionUrlAuthType updates property "FunctionUrlAuthType".
func (t *AWS_Lambda_Permission) Set__FunctionUrlAuthType(v cfz.Expression[string]) *AWS_Lambda_Permission {
	t.FunctionUrlAuthType = v
	return t
}

// SetV__FunctionUrlAuthType updates property "FunctionUrlAuthType".
func (t *AWS_Lambda_Permission) SetV__FunctionUrlAuthType(v string) *AWS_Lambda_Permission {
	t.FunctionUrlAuthType = cfz.V(v)
	return t
}

// Set__Principal updates property "Principal".
func (t *AWS_Lambda_Permission) Set__Principal(v cfz.Expression[string]) *AWS_Lambda_Permission {
	t.Principal = v
	return t
}

// SetV__Principal updates property "Principal".
func (t *AWS_Lambda_Permission) SetV__Principal(v string) *AWS_Lambda_Permission {
	t.Principal = cfz.V(v)
	return t
}

// Set__PrincipalOrgID updates property "PrincipalOrgID".
func (t *AWS_Lambda_Permission) Set__PrincipalOrgID(v cfz.Expression[string]) *AWS_Lambda_Permission {
	t.PrincipalOrgID = v
	return t
}

// SetV__PrincipalOrgID updates property "PrincipalOrgID".
func (t *AWS_Lambda_Permission) SetV__PrincipalOrgID(v string) *AWS_Lambda_Permission {
	t.PrincipalOrgID = cfz.V(v)
	return t
}

// Set__SourceAccount updates property "SourceAccount".
func (t *AWS_Lambda_Permission) Set__SourceAccount(v cfz.Expression[string]) *AWS_Lambda_Permission {
	t.SourceAccount = v
	return t
}

// SetV__SourceAccount updates property "SourceAccount".
func (t *AWS_Lambda_Permission) SetV__SourceAccount(v string) *AWS_Lambda_Permission {
	t.SourceAccount = cfz.V(v)
	return t
}

// Set__SourceArn updates property "SourceArn".
func (t *AWS_Lambda_Permission) Set__SourceArn(v cfz.Expression[string]) *AWS_Lambda_Permission {
	t.SourceArn = v
	return t
}

// SetV__SourceArn updates property "SourceArn".
func (t *AWS_Lambda_Permission) SetV__SourceArn(v string) *AWS_Lambda_Permission {
	t.SourceArn = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lambda_Permission) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Lambda_Permission) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_Permission__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lambda_Permission) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Lambda_Permission) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lambda_Permission) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lambda_Permission

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lambda_Permission) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
