// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lambda

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lambda_Version)(nil)
	_ cfz.Resource                   = (*AWS_Lambda_Version)(nil)
)

const (
	// AWS_Lambda_Version__Type is the CloudFormation type for AWS::Lambda::Version.
	AWS_Lambda_Version__Type = "AWS::Lambda::Version"
)

var (
	// AWS_Lambda_Version__AttributesMap reports all the CloudFormation attributes for AWS::Lambda::Version.
	AWS_Lambda_Version__AttributesMap = struct {
		FunctionArn string
		Version     string
	}{
		FunctionArn: "FunctionArn",
		Version:     "Version",
	}

	// AWS_Lambda_Version__AttributesSlice reports all the CloudFormation attributes for AWS::Lambda::Version.
	AWS_Lambda_Version__AttributesSlice = []string{
		AWS_Lambda_Version__AttributesMap.FunctionArn,
		AWS_Lambda_Version__AttributesMap.Version,
	}
)

var (
	// AWS_Lambda_Version__PropertiesMap reports all the CloudFormation properties for AWS::Lambda::Version.
	AWS_Lambda_Version__PropertiesMap = struct {
		CodeSha256                   string
		Description                  string
		FunctionName                 string
		ProvisionedConcurrencyConfig string
		RuntimePolicy                string
	}{
		CodeSha256:                   "CodeSha256",
		Description:                  "Description",
		FunctionName:                 "FunctionName",
		ProvisionedConcurrencyConfig: "ProvisionedConcurrencyConfig",
		RuntimePolicy:                "RuntimePolicy",
	}

	// AWS_Lambda_Version__PropertiesSlice reports all the CloudFormation properties for AWS::Lambda::Version.
	AWS_Lambda_Version__PropertiesSlice = []string{
		AWS_Lambda_Version__PropertiesMap.CodeSha256,
		AWS_Lambda_Version__PropertiesMap.Description,
		AWS_Lambda_Version__PropertiesMap.FunctionName,
		AWS_Lambda_Version__PropertiesMap.ProvisionedConcurrencyConfig,
		AWS_Lambda_Version__PropertiesMap.RuntimePolicy,
	}
)

// AWS_Lambda_Version is a binding for AWS::Lambda::Version.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html
type AWS_Lambda_Version struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CodeSha256 is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-codesha256
	CodeSha256 cfz.Expression[string] `json:"CodeSha256,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// FunctionName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-functionname
	FunctionName cfz.Expression[string] `json:"FunctionName,omitempty"`

	// ProvisionedConcurrencyConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-provisionedconcurrencyconfig
	ProvisionedConcurrencyConfig cfz.Expression[AWS_Lambda_Version_ProvisionedConcurrencyConfiguration] `json:"ProvisionedConcurrencyConfig,omitempty"`

	// RuntimePolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-version.html#cfn-lambda-version-runtimepolicy
	RuntimePolicy cfz.Expression[AWS_Lambda_Version_RuntimePolicy] `json:"RuntimePolicy,omitempty"`
}

// New__AWS_Lambda_Version initializes a new *AWS_Lambda_Version.
func New__AWS_Lambda_Version(logicalName string) *AWS_Lambda_Version {
	return &AWS_Lambda_Version{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lambda_Version) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lambda_Version) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lambda_Version) GetType() string {
	return AWS_Lambda_Version__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lambda_Version) Set__LogicalName(v string) *AWS_Lambda_Version {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lambda_Version) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lambda_Version {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lambda_Version) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lambda_Version {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lambda_Version) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lambda_Version {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lambda_Version) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lambda_Version {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lambda_Version) Set__RequestedOutputs(v []cfz.Output) *AWS_Lambda_Version {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lambda_Version) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lambda_Version {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CodeSha256 updates property "CodeSha256".
func (t *AWS_Lambda_Version) Set__CodeSha256(v cfz.Expression[string]) *AWS_Lambda_Version {
	t.CodeSha256 = v
	return t
}

// SetV__CodeSha256 updates property "CodeSha256".
func (t *AWS_Lambda_Version) SetV__CodeSha256(v string) *AWS_Lambda_Version {
	t.CodeSha256 = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Lambda_Version) Set__Description(v cfz.Expression[string]) *AWS_Lambda_Version {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Lambda_Version) SetV__Description(v string) *AWS_Lambda_Version {
	t.Description = cfz.V(v)
	return t
}

// Set__FunctionName updates property "FunctionName".
func (t *AWS_Lambda_Version) Set__FunctionName(v cfz.Expression[string]) *AWS_Lambda_Version {
	t.FunctionName = v
	return t
}

// SetV__FunctionName updates property "FunctionName".
func (t *AWS_Lambda_Version) SetV__FunctionName(v string) *AWS_Lambda_Version {
	t.FunctionName = cfz.V(v)
	return t
}

// Set__ProvisionedConcurrencyConfig updates property "ProvisionedConcurrencyConfig".
func (t *AWS_Lambda_Version) Set__ProvisionedConcurrencyConfig(v cfz.Expression[AWS_Lambda_Version_ProvisionedConcurrencyConfiguration]) *AWS_Lambda_Version {
	t.ProvisionedConcurrencyConfig = v
	return t
}

// SetV__ProvisionedConcurrencyConfig updates property "ProvisionedConcurrencyConfig".
func (t *AWS_Lambda_Version) SetV__ProvisionedConcurrencyConfig(v AWS_Lambda_Version_ProvisionedConcurrencyConfiguration) *AWS_Lambda_Version {
	t.ProvisionedConcurrencyConfig = cfz.V(v)
	return t
}

// Set__RuntimePolicy updates property "RuntimePolicy".
func (t *AWS_Lambda_Version) Set__RuntimePolicy(v cfz.Expression[AWS_Lambda_Version_RuntimePolicy]) *AWS_Lambda_Version {
	t.RuntimePolicy = v
	return t
}

// SetV__RuntimePolicy updates property "RuntimePolicy".
func (t *AWS_Lambda_Version) SetV__RuntimePolicy(v AWS_Lambda_Version_RuntimePolicy) *AWS_Lambda_Version {
	t.RuntimePolicy = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lambda_Version) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__FunctionArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FunctionArn
func (t *AWS_Lambda_Version) GetAtt__FunctionArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_Version__AttributesMap.FunctionArn))
}

// GetAtt__Version returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Version
func (t *AWS_Lambda_Version) GetAtt__Version() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_Version__AttributesMap.Version))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lambda_Version) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FunctionArn returns a conventionally configured output for an attribute of this resource.
// Attribute: FunctionArn
func (t *AWS_Lambda_Version) GetConventionalOutputAtt__FunctionArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFunctionArn", t.GetAtt__FunctionArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Version returns a conventionally configured output for an attribute of this resource.
// Attribute: Version
func (t *AWS_Lambda_Version) GetConventionalOutputAtt__Version(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVersion", t.GetAtt__Version())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lambda_Version) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lambda_Version

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lambda_Version) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
