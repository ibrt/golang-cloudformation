// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lambda

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Lambda_LayerVersion_Content__Type is the CloudFormation type for AWS::Lambda::LayerVersion.Content.
	AWS_Lambda_LayerVersion_Content__Type = "AWS::Lambda::LayerVersion.Content"
)

var (
	// AWS_Lambda_LayerVersion_Content__PropertiesMap reports all the CloudFormation properties for AWS::Lambda::LayerVersion.Content.
	AWS_Lambda_LayerVersion_Content__PropertiesMap = struct {
		S3Bucket        string
		S3Key           string
		S3ObjectVersion string
	}{
		S3Bucket:        "S3Bucket",
		S3Key:           "S3Key",
		S3ObjectVersion: "S3ObjectVersion",
	}

	// AWS_Lambda_LayerVersion_Content__PropertiesSlice reports all the CloudFormation properties for AWS::Lambda::LayerVersion.Content.
	AWS_Lambda_LayerVersion_Content__PropertiesSlice = []string{
		AWS_Lambda_LayerVersion_Content__PropertiesMap.S3Bucket,
		AWS_Lambda_LayerVersion_Content__PropertiesMap.S3Key,
		AWS_Lambda_LayerVersion_Content__PropertiesMap.S3ObjectVersion,
	}
)

// AWS_Lambda_LayerVersion_Content is a binding for AWS::Lambda::LayerVersion.Content.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-layerversion-content.html
type AWS_Lambda_LayerVersion_Content struct {
	// S3Bucket is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-layerversion-content.html#cfn-lambda-layerversion-content-s3bucket
	S3Bucket cfz.Expression[string] `json:"S3Bucket,omitempty"`

	// S3Key is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-layerversion-content.html#cfn-lambda-layerversion-content-s3key
	S3Key cfz.Expression[string] `json:"S3Key,omitempty"`

	// S3ObjectVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-layerversion-content.html#cfn-lambda-layerversion-content-s3objectversion
	S3ObjectVersion cfz.Expression[string] `json:"S3ObjectVersion,omitempty"`
}

// New__AWS_Lambda_LayerVersion_Content initializes a new AWS_Lambda_LayerVersion_Content.
func New__AWS_Lambda_LayerVersion_Content() AWS_Lambda_LayerVersion_Content {
	return AWS_Lambda_LayerVersion_Content{}
}

// GetType returns the CloudFormation type.
func (AWS_Lambda_LayerVersion_Content) GetType() string {
	return AWS_Lambda_LayerVersion_Content__Type
}

// Set__S3Bucket updates property "S3Bucket".
func (t AWS_Lambda_LayerVersion_Content) Set__S3Bucket(v cfz.Expression[string]) AWS_Lambda_LayerVersion_Content {
	t.S3Bucket = v
	return t
}

// SetV__S3Bucket updates property "S3Bucket".
func (t AWS_Lambda_LayerVersion_Content) SetV__S3Bucket(v string) AWS_Lambda_LayerVersion_Content {
	t.S3Bucket = cfz.V(v)
	return t
}

// Set__S3Key updates property "S3Key".
func (t AWS_Lambda_LayerVersion_Content) Set__S3Key(v cfz.Expression[string]) AWS_Lambda_LayerVersion_Content {
	t.S3Key = v
	return t
}

// SetV__S3Key updates property "S3Key".
func (t AWS_Lambda_LayerVersion_Content) SetV__S3Key(v string) AWS_Lambda_LayerVersion_Content {
	t.S3Key = cfz.V(v)
	return t
}

// Set__S3ObjectVersion updates property "S3ObjectVersion".
func (t AWS_Lambda_LayerVersion_Content) Set__S3ObjectVersion(v cfz.Expression[string]) AWS_Lambda_LayerVersion_Content {
	t.S3ObjectVersion = v
	return t
}

// SetV__S3ObjectVersion updates property "S3ObjectVersion".
func (t AWS_Lambda_LayerVersion_Content) SetV__S3ObjectVersion(v string) AWS_Lambda_LayerVersion_Content {
	t.S3ObjectVersion = cfz.V(v)
	return t
}
