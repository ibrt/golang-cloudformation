// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lambda

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lambda_Function)(nil)
	_ cfz.Resource                   = (*AWS_Lambda_Function)(nil)
)

const (
	// AWS_Lambda_Function__Type is the CloudFormation type for AWS::Lambda::Function.
	AWS_Lambda_Function__Type = "AWS::Lambda::Function"
)

var (
	// AWS_Lambda_Function__AttributesMap reports all the CloudFormation attributes for AWS::Lambda::Function.
	AWS_Lambda_Function__AttributesMap = struct {
		Arn                                  string
		SnapStartResponse                    string
		SnapStartResponse_ApplyOn            string
		SnapStartResponse_OptimizationStatus string
	}{
		Arn:                                  "Arn",
		SnapStartResponse:                    "SnapStartResponse",
		SnapStartResponse_ApplyOn:            "SnapStartResponse.ApplyOn",
		SnapStartResponse_OptimizationStatus: "SnapStartResponse.OptimizationStatus",
	}

	// AWS_Lambda_Function__AttributesSlice reports all the CloudFormation attributes for AWS::Lambda::Function.
	AWS_Lambda_Function__AttributesSlice = []string{
		AWS_Lambda_Function__AttributesMap.Arn,
		AWS_Lambda_Function__AttributesMap.SnapStartResponse,
		AWS_Lambda_Function__AttributesMap.SnapStartResponse_ApplyOn,
		AWS_Lambda_Function__AttributesMap.SnapStartResponse_OptimizationStatus,
	}
)

var (
	// AWS_Lambda_Function__PropertiesMap reports all the CloudFormation properties for AWS::Lambda::Function.
	AWS_Lambda_Function__PropertiesMap = struct {
		Architectures                string
		Code                         string
		CodeSigningConfigArn         string
		DeadLetterConfig             string
		Description                  string
		Environment                  string
		EphemeralStorage             string
		FileSystemConfigs            string
		FunctionName                 string
		Handler                      string
		ImageConfig                  string
		KmsKeyArn                    string
		Layers                       string
		LoggingConfig                string
		MemorySize                   string
		PackageType                  string
		RecursiveLoop                string
		ReservedConcurrentExecutions string
		Role                         string
		Runtime                      string
		RuntimeManagementConfig      string
		SnapStart                    string
		Tags                         string
		Timeout                      string
		TracingConfig                string
		VpcConfig                    string
	}{
		Architectures:                "Architectures",
		Code:                         "Code",
		CodeSigningConfigArn:         "CodeSigningConfigArn",
		DeadLetterConfig:             "DeadLetterConfig",
		Description:                  "Description",
		Environment:                  "Environment",
		EphemeralStorage:             "EphemeralStorage",
		FileSystemConfigs:            "FileSystemConfigs",
		FunctionName:                 "FunctionName",
		Handler:                      "Handler",
		ImageConfig:                  "ImageConfig",
		KmsKeyArn:                    "KmsKeyArn",
		Layers:                       "Layers",
		LoggingConfig:                "LoggingConfig",
		MemorySize:                   "MemorySize",
		PackageType:                  "PackageType",
		RecursiveLoop:                "RecursiveLoop",
		ReservedConcurrentExecutions: "ReservedConcurrentExecutions",
		Role:                         "Role",
		Runtime:                      "Runtime",
		RuntimeManagementConfig:      "RuntimeManagementConfig",
		SnapStart:                    "SnapStart",
		Tags:                         "Tags",
		Timeout:                      "Timeout",
		TracingConfig:                "TracingConfig",
		VpcConfig:                    "VpcConfig",
	}

	// AWS_Lambda_Function__PropertiesSlice reports all the CloudFormation properties for AWS::Lambda::Function.
	AWS_Lambda_Function__PropertiesSlice = []string{
		AWS_Lambda_Function__PropertiesMap.Architectures,
		AWS_Lambda_Function__PropertiesMap.Code,
		AWS_Lambda_Function__PropertiesMap.CodeSigningConfigArn,
		AWS_Lambda_Function__PropertiesMap.DeadLetterConfig,
		AWS_Lambda_Function__PropertiesMap.Description,
		AWS_Lambda_Function__PropertiesMap.Environment,
		AWS_Lambda_Function__PropertiesMap.EphemeralStorage,
		AWS_Lambda_Function__PropertiesMap.FileSystemConfigs,
		AWS_Lambda_Function__PropertiesMap.FunctionName,
		AWS_Lambda_Function__PropertiesMap.Handler,
		AWS_Lambda_Function__PropertiesMap.ImageConfig,
		AWS_Lambda_Function__PropertiesMap.KmsKeyArn,
		AWS_Lambda_Function__PropertiesMap.Layers,
		AWS_Lambda_Function__PropertiesMap.LoggingConfig,
		AWS_Lambda_Function__PropertiesMap.MemorySize,
		AWS_Lambda_Function__PropertiesMap.PackageType,
		AWS_Lambda_Function__PropertiesMap.RecursiveLoop,
		AWS_Lambda_Function__PropertiesMap.ReservedConcurrentExecutions,
		AWS_Lambda_Function__PropertiesMap.Role,
		AWS_Lambda_Function__PropertiesMap.Runtime,
		AWS_Lambda_Function__PropertiesMap.RuntimeManagementConfig,
		AWS_Lambda_Function__PropertiesMap.SnapStart,
		AWS_Lambda_Function__PropertiesMap.Tags,
		AWS_Lambda_Function__PropertiesMap.Timeout,
		AWS_Lambda_Function__PropertiesMap.TracingConfig,
		AWS_Lambda_Function__PropertiesMap.VpcConfig,
	}
)

// AWS_Lambda_Function is a binding for AWS::Lambda::Function.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html
type AWS_Lambda_Function struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Architectures is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-architectures
	Architectures cfz.ExpressionSlice[string] `json:"Architectures,omitempty"`

	// Code is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-code
	Code cfz.Expression[AWS_Lambda_Function_Code] `json:"Code,omitempty"`

	// CodeSigningConfigArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-codesigningconfigarn
	CodeSigningConfigArn cfz.Expression[string] `json:"CodeSigningConfigArn,omitempty"`

	// DeadLetterConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-deadletterconfig
	DeadLetterConfig cfz.Expression[AWS_Lambda_Function_DeadLetterConfig] `json:"DeadLetterConfig,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Environment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-environment
	Environment cfz.Expression[AWS_Lambda_Function_Environment] `json:"Environment,omitempty"`

	// EphemeralStorage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-ephemeralstorage
	EphemeralStorage cfz.Expression[AWS_Lambda_Function_EphemeralStorage] `json:"EphemeralStorage,omitempty"`

	// FileSystemConfigs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-filesystemconfigs
	FileSystemConfigs cfz.ExpressionSlice[AWS_Lambda_Function_FileSystemConfig] `json:"FileSystemConfigs,omitempty"`

	// FunctionName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-functionname
	FunctionName cfz.Expression[string] `json:"FunctionName,omitempty"`

	// Handler is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-handler
	Handler cfz.Expression[string] `json:"Handler,omitempty"`

	// ImageConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-imageconfig
	ImageConfig cfz.Expression[AWS_Lambda_Function_ImageConfig] `json:"ImageConfig,omitempty"`

	// KmsKeyArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-kmskeyarn
	KmsKeyArn cfz.Expression[string] `json:"KmsKeyArn,omitempty"`

	// Layers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-layers
	Layers cfz.ExpressionSlice[string] `json:"Layers,omitempty"`

	// LoggingConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-loggingconfig
	LoggingConfig cfz.Expression[AWS_Lambda_Function_LoggingConfig] `json:"LoggingConfig,omitempty"`

	// MemorySize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-memorysize
	MemorySize cfz.Expression[int32] `json:"MemorySize,omitempty"`

	// PackageType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-packagetype
	PackageType cfz.Expression[string] `json:"PackageType,omitempty"`

	// RecursiveLoop is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-recursiveloop
	RecursiveLoop cfz.Expression[string] `json:"RecursiveLoop,omitempty"`

	// ReservedConcurrentExecutions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-reservedconcurrentexecutions
	ReservedConcurrentExecutions cfz.Expression[int32] `json:"ReservedConcurrentExecutions,omitempty"`

	// Role is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-role
	Role cfz.Expression[string] `json:"Role,omitempty"`

	// Runtime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtime
	Runtime cfz.Expression[string] `json:"Runtime,omitempty"`

	// RuntimeManagementConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-runtimemanagementconfig
	RuntimeManagementConfig cfz.Expression[AWS_Lambda_Function_RuntimeManagementConfig] `json:"RuntimeManagementConfig,omitempty"`

	// SnapStart is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-snapstart
	SnapStart cfz.Expression[AWS_Lambda_Function_SnapStart] `json:"SnapStart,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Timeout is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-timeout
	Timeout cfz.Expression[int32] `json:"Timeout,omitempty"`

	// TracingConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-tracingconfig
	TracingConfig cfz.Expression[AWS_Lambda_Function_TracingConfig] `json:"TracingConfig,omitempty"`

	// VpcConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html#cfn-lambda-function-vpcconfig
	VpcConfig cfz.Expression[AWS_Lambda_Function_VpcConfig] `json:"VpcConfig,omitempty"`
}

// New__AWS_Lambda_Function initializes a new *AWS_Lambda_Function.
func New__AWS_Lambda_Function(logicalName string) *AWS_Lambda_Function {
	return &AWS_Lambda_Function{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lambda_Function) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lambda_Function) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lambda_Function) GetType() string {
	return AWS_Lambda_Function__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lambda_Function) Set__LogicalName(v string) *AWS_Lambda_Function {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lambda_Function) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lambda_Function {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lambda_Function) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lambda_Function {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lambda_Function) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lambda_Function {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lambda_Function) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lambda_Function {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lambda_Function) Set__RequestedOutputs(v []cfz.Output) *AWS_Lambda_Function {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lambda_Function) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lambda_Function {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Architectures updates property "Architectures".
func (t *AWS_Lambda_Function) Set__Architectures(v cfz.ExpressionSlice[string]) *AWS_Lambda_Function {
	t.Architectures = v
	return t
}

// SetS__Architectures updates property "Architectures".
func (t *AWS_Lambda_Function) SetS__Architectures(v ...cfz.Expression[string]) *AWS_Lambda_Function {
	t.Architectures = cfz.S(v...)
	return t
}

// SetSV__Architectures updates property "Architectures".
func (t *AWS_Lambda_Function) SetSV__Architectures(v ...string) *AWS_Lambda_Function {
	t.Architectures = cfz.SV(v...)
	return t
}

// Set__Code updates property "Code".
func (t *AWS_Lambda_Function) Set__Code(v cfz.Expression[AWS_Lambda_Function_Code]) *AWS_Lambda_Function {
	t.Code = v
	return t
}

// SetV__Code updates property "Code".
func (t *AWS_Lambda_Function) SetV__Code(v AWS_Lambda_Function_Code) *AWS_Lambda_Function {
	t.Code = cfz.V(v)
	return t
}

// Set__CodeSigningConfigArn updates property "CodeSigningConfigArn".
func (t *AWS_Lambda_Function) Set__CodeSigningConfigArn(v cfz.Expression[string]) *AWS_Lambda_Function {
	t.CodeSigningConfigArn = v
	return t
}

// SetV__CodeSigningConfigArn updates property "CodeSigningConfigArn".
func (t *AWS_Lambda_Function) SetV__CodeSigningConfigArn(v string) *AWS_Lambda_Function {
	t.CodeSigningConfigArn = cfz.V(v)
	return t
}

// Set__DeadLetterConfig updates property "DeadLetterConfig".
func (t *AWS_Lambda_Function) Set__DeadLetterConfig(v cfz.Expression[AWS_Lambda_Function_DeadLetterConfig]) *AWS_Lambda_Function {
	t.DeadLetterConfig = v
	return t
}

// SetV__DeadLetterConfig updates property "DeadLetterConfig".
func (t *AWS_Lambda_Function) SetV__DeadLetterConfig(v AWS_Lambda_Function_DeadLetterConfig) *AWS_Lambda_Function {
	t.DeadLetterConfig = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Lambda_Function) Set__Description(v cfz.Expression[string]) *AWS_Lambda_Function {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Lambda_Function) SetV__Description(v string) *AWS_Lambda_Function {
	t.Description = cfz.V(v)
	return t
}

// Set__Environment updates property "Environment".
func (t *AWS_Lambda_Function) Set__Environment(v cfz.Expression[AWS_Lambda_Function_Environment]) *AWS_Lambda_Function {
	t.Environment = v
	return t
}

// SetV__Environment updates property "Environment".
func (t *AWS_Lambda_Function) SetV__Environment(v AWS_Lambda_Function_Environment) *AWS_Lambda_Function {
	t.Environment = cfz.V(v)
	return t
}

// Set__EphemeralStorage updates property "EphemeralStorage".
func (t *AWS_Lambda_Function) Set__EphemeralStorage(v cfz.Expression[AWS_Lambda_Function_EphemeralStorage]) *AWS_Lambda_Function {
	t.EphemeralStorage = v
	return t
}

// SetV__EphemeralStorage updates property "EphemeralStorage".
func (t *AWS_Lambda_Function) SetV__EphemeralStorage(v AWS_Lambda_Function_EphemeralStorage) *AWS_Lambda_Function {
	t.EphemeralStorage = cfz.V(v)
	return t
}

// Set__FileSystemConfigs updates property "FileSystemConfigs".
func (t *AWS_Lambda_Function) Set__FileSystemConfigs(v cfz.ExpressionSlice[AWS_Lambda_Function_FileSystemConfig]) *AWS_Lambda_Function {
	t.FileSystemConfigs = v
	return t
}

// SetS__FileSystemConfigs updates property "FileSystemConfigs".
func (t *AWS_Lambda_Function) SetS__FileSystemConfigs(v ...cfz.Expression[AWS_Lambda_Function_FileSystemConfig]) *AWS_Lambda_Function {
	t.FileSystemConfigs = cfz.S(v...)
	return t
}

// SetSV__FileSystemConfigs updates property "FileSystemConfigs".
func (t *AWS_Lambda_Function) SetSV__FileSystemConfigs(v ...AWS_Lambda_Function_FileSystemConfig) *AWS_Lambda_Function {
	t.FileSystemConfigs = cfz.SV(v...)
	return t
}

// Set__FunctionName updates property "FunctionName".
func (t *AWS_Lambda_Function) Set__FunctionName(v cfz.Expression[string]) *AWS_Lambda_Function {
	t.FunctionName = v
	return t
}

// SetV__FunctionName updates property "FunctionName".
func (t *AWS_Lambda_Function) SetV__FunctionName(v string) *AWS_Lambda_Function {
	t.FunctionName = cfz.V(v)
	return t
}

// Set__Handler updates property "Handler".
func (t *AWS_Lambda_Function) Set__Handler(v cfz.Expression[string]) *AWS_Lambda_Function {
	t.Handler = v
	return t
}

// SetV__Handler updates property "Handler".
func (t *AWS_Lambda_Function) SetV__Handler(v string) *AWS_Lambda_Function {
	t.Handler = cfz.V(v)
	return t
}

// Set__ImageConfig updates property "ImageConfig".
func (t *AWS_Lambda_Function) Set__ImageConfig(v cfz.Expression[AWS_Lambda_Function_ImageConfig]) *AWS_Lambda_Function {
	t.ImageConfig = v
	return t
}

// SetV__ImageConfig updates property "ImageConfig".
func (t *AWS_Lambda_Function) SetV__ImageConfig(v AWS_Lambda_Function_ImageConfig) *AWS_Lambda_Function {
	t.ImageConfig = cfz.V(v)
	return t
}

// Set__KmsKeyArn updates property "KmsKeyArn".
func (t *AWS_Lambda_Function) Set__KmsKeyArn(v cfz.Expression[string]) *AWS_Lambda_Function {
	t.KmsKeyArn = v
	return t
}

// SetV__KmsKeyArn updates property "KmsKeyArn".
func (t *AWS_Lambda_Function) SetV__KmsKeyArn(v string) *AWS_Lambda_Function {
	t.KmsKeyArn = cfz.V(v)
	return t
}

// Set__Layers updates property "Layers".
func (t *AWS_Lambda_Function) Set__Layers(v cfz.ExpressionSlice[string]) *AWS_Lambda_Function {
	t.Layers = v
	return t
}

// SetS__Layers updates property "Layers".
func (t *AWS_Lambda_Function) SetS__Layers(v ...cfz.Expression[string]) *AWS_Lambda_Function {
	t.Layers = cfz.S(v...)
	return t
}

// SetSV__Layers updates property "Layers".
func (t *AWS_Lambda_Function) SetSV__Layers(v ...string) *AWS_Lambda_Function {
	t.Layers = cfz.SV(v...)
	return t
}

// Set__LoggingConfig updates property "LoggingConfig".
func (t *AWS_Lambda_Function) Set__LoggingConfig(v cfz.Expression[AWS_Lambda_Function_LoggingConfig]) *AWS_Lambda_Function {
	t.LoggingConfig = v
	return t
}

// SetV__LoggingConfig updates property "LoggingConfig".
func (t *AWS_Lambda_Function) SetV__LoggingConfig(v AWS_Lambda_Function_LoggingConfig) *AWS_Lambda_Function {
	t.LoggingConfig = cfz.V(v)
	return t
}

// Set__MemorySize updates property "MemorySize".
func (t *AWS_Lambda_Function) Set__MemorySize(v cfz.Expression[int32]) *AWS_Lambda_Function {
	t.MemorySize = v
	return t
}

// SetV__MemorySize updates property "MemorySize".
func (t *AWS_Lambda_Function) SetV__MemorySize(v int32) *AWS_Lambda_Function {
	t.MemorySize = cfz.V(v)
	return t
}

// Set__PackageType updates property "PackageType".
func (t *AWS_Lambda_Function) Set__PackageType(v cfz.Expression[string]) *AWS_Lambda_Function {
	t.PackageType = v
	return t
}

// SetV__PackageType updates property "PackageType".
func (t *AWS_Lambda_Function) SetV__PackageType(v string) *AWS_Lambda_Function {
	t.PackageType = cfz.V(v)
	return t
}

// Set__RecursiveLoop updates property "RecursiveLoop".
func (t *AWS_Lambda_Function) Set__RecursiveLoop(v cfz.Expression[string]) *AWS_Lambda_Function {
	t.RecursiveLoop = v
	return t
}

// SetV__RecursiveLoop updates property "RecursiveLoop".
func (t *AWS_Lambda_Function) SetV__RecursiveLoop(v string) *AWS_Lambda_Function {
	t.RecursiveLoop = cfz.V(v)
	return t
}

// Set__ReservedConcurrentExecutions updates property "ReservedConcurrentExecutions".
func (t *AWS_Lambda_Function) Set__ReservedConcurrentExecutions(v cfz.Expression[int32]) *AWS_Lambda_Function {
	t.ReservedConcurrentExecutions = v
	return t
}

// SetV__ReservedConcurrentExecutions updates property "ReservedConcurrentExecutions".
func (t *AWS_Lambda_Function) SetV__ReservedConcurrentExecutions(v int32) *AWS_Lambda_Function {
	t.ReservedConcurrentExecutions = cfz.V(v)
	return t
}

// Set__Role updates property "Role".
func (t *AWS_Lambda_Function) Set__Role(v cfz.Expression[string]) *AWS_Lambda_Function {
	t.Role = v
	return t
}

// SetV__Role updates property "Role".
func (t *AWS_Lambda_Function) SetV__Role(v string) *AWS_Lambda_Function {
	t.Role = cfz.V(v)
	return t
}

// Set__Runtime updates property "Runtime".
func (t *AWS_Lambda_Function) Set__Runtime(v cfz.Expression[string]) *AWS_Lambda_Function {
	t.Runtime = v
	return t
}

// SetV__Runtime updates property "Runtime".
func (t *AWS_Lambda_Function) SetV__Runtime(v string) *AWS_Lambda_Function {
	t.Runtime = cfz.V(v)
	return t
}

// Set__RuntimeManagementConfig updates property "RuntimeManagementConfig".
func (t *AWS_Lambda_Function) Set__RuntimeManagementConfig(v cfz.Expression[AWS_Lambda_Function_RuntimeManagementConfig]) *AWS_Lambda_Function {
	t.RuntimeManagementConfig = v
	return t
}

// SetV__RuntimeManagementConfig updates property "RuntimeManagementConfig".
func (t *AWS_Lambda_Function) SetV__RuntimeManagementConfig(v AWS_Lambda_Function_RuntimeManagementConfig) *AWS_Lambda_Function {
	t.RuntimeManagementConfig = cfz.V(v)
	return t
}

// Set__SnapStart updates property "SnapStart".
func (t *AWS_Lambda_Function) Set__SnapStart(v cfz.Expression[AWS_Lambda_Function_SnapStart]) *AWS_Lambda_Function {
	t.SnapStart = v
	return t
}

// SetV__SnapStart updates property "SnapStart".
func (t *AWS_Lambda_Function) SetV__SnapStart(v AWS_Lambda_Function_SnapStart) *AWS_Lambda_Function {
	t.SnapStart = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Lambda_Function) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Lambda_Function {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Lambda_Function) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Lambda_Function {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Lambda_Function) SetSV__Tags(v ...cfz.Tag) *AWS_Lambda_Function {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Timeout updates property "Timeout".
func (t *AWS_Lambda_Function) Set__Timeout(v cfz.Expression[int32]) *AWS_Lambda_Function {
	t.Timeout = v
	return t
}

// SetV__Timeout updates property "Timeout".
func (t *AWS_Lambda_Function) SetV__Timeout(v int32) *AWS_Lambda_Function {
	t.Timeout = cfz.V(v)
	return t
}

// Set__TracingConfig updates property "TracingConfig".
func (t *AWS_Lambda_Function) Set__TracingConfig(v cfz.Expression[AWS_Lambda_Function_TracingConfig]) *AWS_Lambda_Function {
	t.TracingConfig = v
	return t
}

// SetV__TracingConfig updates property "TracingConfig".
func (t *AWS_Lambda_Function) SetV__TracingConfig(v AWS_Lambda_Function_TracingConfig) *AWS_Lambda_Function {
	t.TracingConfig = cfz.V(v)
	return t
}

// Set__VpcConfig updates property "VpcConfig".
func (t *AWS_Lambda_Function) Set__VpcConfig(v cfz.Expression[AWS_Lambda_Function_VpcConfig]) *AWS_Lambda_Function {
	t.VpcConfig = v
	return t
}

// SetV__VpcConfig updates property "VpcConfig".
func (t *AWS_Lambda_Function) SetV__VpcConfig(v AWS_Lambda_Function_VpcConfig) *AWS_Lambda_Function {
	t.VpcConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lambda_Function) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Lambda_Function) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_Function__AttributesMap.Arn))
}

// GetAtt__SnapStartResponse returns a $cfz.Expression[AWS_Lambda_Function_SnapStartResponse] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SnapStartResponse
func (t *AWS_Lambda_Function) GetAtt__SnapStartResponse() cfz.Expression[AWS_Lambda_Function_SnapStartResponse] {
	return cfz.GetAtt[AWS_Lambda_Function_SnapStartResponse](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_Function__AttributesMap.SnapStartResponse))
}

// GetAtt__SnapStartResponse_ApplyOn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SnapStartResponse.ApplyOn
func (t *AWS_Lambda_Function) GetAtt__SnapStartResponse_ApplyOn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_Function__AttributesMap.SnapStartResponse_ApplyOn))
}

// GetAtt__SnapStartResponse_OptimizationStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SnapStartResponse.OptimizationStatus
func (t *AWS_Lambda_Function) GetAtt__SnapStartResponse_OptimizationStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lambda_Function__AttributesMap.SnapStartResponse_OptimizationStatus))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lambda_Function) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Lambda_Function) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SnapStartResponse returns a conventionally configured output for an attribute of this resource.
// Attribute: SnapStartResponse
func (t *AWS_Lambda_Function) GetConventionalOutputAtt__SnapStartResponse(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSnapStartResponse", t.GetAtt__SnapStartResponse())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SnapStartResponse_ApplyOn returns a conventionally configured output for an attribute of this resource.
// Attribute: SnapStartResponse.ApplyOn
func (t *AWS_Lambda_Function) GetConventionalOutputAtt__SnapStartResponse_ApplyOn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSnapStartResponseApplyOn", t.GetAtt__SnapStartResponse_ApplyOn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SnapStartResponse_OptimizationStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: SnapStartResponse.OptimizationStatus
func (t *AWS_Lambda_Function) GetConventionalOutputAtt__SnapStartResponse_OptimizationStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSnapStartResponseOptimizationStatus", t.GetAtt__SnapStartResponse_OptimizationStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lambda_Function) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lambda_Function

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lambda_Function) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
