// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lambda

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Lambda_Function_VpcConfig__Type is the CloudFormation type for AWS::Lambda::Function.VpcConfig.
	AWS_Lambda_Function_VpcConfig__Type = "AWS::Lambda::Function.VpcConfig"
)

var (
	// AWS_Lambda_Function_VpcConfig__PropertiesMap reports all the CloudFormation properties for AWS::Lambda::Function.VpcConfig.
	AWS_Lambda_Function_VpcConfig__PropertiesMap = struct {
		Ipv6AllowedForDualStack string
		SecurityGroupIds        string
		SubnetIds               string
	}{
		Ipv6AllowedForDualStack: "Ipv6AllowedForDualStack",
		SecurityGroupIds:        "SecurityGroupIds",
		SubnetIds:               "SubnetIds",
	}

	// AWS_Lambda_Function_VpcConfig__PropertiesSlice reports all the CloudFormation properties for AWS::Lambda::Function.VpcConfig.
	AWS_Lambda_Function_VpcConfig__PropertiesSlice = []string{
		AWS_Lambda_Function_VpcConfig__PropertiesMap.Ipv6AllowedForDualStack,
		AWS_Lambda_Function_VpcConfig__PropertiesMap.SecurityGroupIds,
		AWS_Lambda_Function_VpcConfig__PropertiesMap.SubnetIds,
	}
)

// AWS_Lambda_Function_VpcConfig is a binding for AWS::Lambda::Function.VpcConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html
type AWS_Lambda_Function_VpcConfig struct {
	// Ipv6AllowedForDualStack is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-ipv6allowedfordualstack
	Ipv6AllowedForDualStack cfz.Expression[bool] `json:"Ipv6AllowedForDualStack,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// SubnetIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html#cfn-lambda-function-vpcconfig-subnetids
	SubnetIds cfz.ExpressionSlice[string] `json:"SubnetIds,omitempty"`
}

// New__AWS_Lambda_Function_VpcConfig initializes a new AWS_Lambda_Function_VpcConfig.
func New__AWS_Lambda_Function_VpcConfig() AWS_Lambda_Function_VpcConfig {
	return AWS_Lambda_Function_VpcConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_Lambda_Function_VpcConfig) GetType() string {
	return AWS_Lambda_Function_VpcConfig__Type
}

// Set__Ipv6AllowedForDualStack updates property "Ipv6AllowedForDualStack".
func (t AWS_Lambda_Function_VpcConfig) Set__Ipv6AllowedForDualStack(v cfz.Expression[bool]) AWS_Lambda_Function_VpcConfig {
	t.Ipv6AllowedForDualStack = v
	return t
}

// SetV__Ipv6AllowedForDualStack updates property "Ipv6AllowedForDualStack".
func (t AWS_Lambda_Function_VpcConfig) SetV__Ipv6AllowedForDualStack(v bool) AWS_Lambda_Function_VpcConfig {
	t.Ipv6AllowedForDualStack = cfz.V(v)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t AWS_Lambda_Function_VpcConfig) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) AWS_Lambda_Function_VpcConfig {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t AWS_Lambda_Function_VpcConfig) SetS__SecurityGroupIds(v ...cfz.Expression[string]) AWS_Lambda_Function_VpcConfig {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t AWS_Lambda_Function_VpcConfig) SetSV__SecurityGroupIds(v ...string) AWS_Lambda_Function_VpcConfig {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__SubnetIds updates property "SubnetIds".
func (t AWS_Lambda_Function_VpcConfig) Set__SubnetIds(v cfz.ExpressionSlice[string]) AWS_Lambda_Function_VpcConfig {
	t.SubnetIds = v
	return t
}

// SetS__SubnetIds updates property "SubnetIds".
func (t AWS_Lambda_Function_VpcConfig) SetS__SubnetIds(v ...cfz.Expression[string]) AWS_Lambda_Function_VpcConfig {
	t.SubnetIds = cfz.S(v...)
	return t
}

// SetSV__SubnetIds updates property "SubnetIds".
func (t AWS_Lambda_Function_VpcConfig) SetSV__SubnetIds(v ...string) AWS_Lambda_Function_VpcConfig {
	t.SubnetIds = cfz.SV(v...)
	return t
}
