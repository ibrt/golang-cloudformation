// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lambda

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Lambda_Function_ImageConfig__Type is the CloudFormation type for AWS::Lambda::Function.ImageConfig.
	AWS_Lambda_Function_ImageConfig__Type = "AWS::Lambda::Function.ImageConfig"
)

var (
	// AWS_Lambda_Function_ImageConfig__PropertiesMap reports all the CloudFormation properties for AWS::Lambda::Function.ImageConfig.
	AWS_Lambda_Function_ImageConfig__PropertiesMap = struct {
		Command          string
		EntryPoint       string
		WorkingDirectory string
	}{
		Command:          "Command",
		EntryPoint:       "EntryPoint",
		WorkingDirectory: "WorkingDirectory",
	}

	// AWS_Lambda_Function_ImageConfig__PropertiesSlice reports all the CloudFormation properties for AWS::Lambda::Function.ImageConfig.
	AWS_Lambda_Function_ImageConfig__PropertiesSlice = []string{
		AWS_Lambda_Function_ImageConfig__PropertiesMap.Command,
		AWS_Lambda_Function_ImageConfig__PropertiesMap.EntryPoint,
		AWS_Lambda_Function_ImageConfig__PropertiesMap.WorkingDirectory,
	}
)

// AWS_Lambda_Function_ImageConfig is a binding for AWS::Lambda::Function.ImageConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html
type AWS_Lambda_Function_ImageConfig struct {
	// Command is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-command
	Command cfz.ExpressionSlice[string] `json:"Command,omitempty"`

	// EntryPoint is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-entrypoint
	EntryPoint cfz.ExpressionSlice[string] `json:"EntryPoint,omitempty"`

	// WorkingDirectory is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-imageconfig.html#cfn-lambda-function-imageconfig-workingdirectory
	WorkingDirectory cfz.Expression[string] `json:"WorkingDirectory,omitempty"`
}

// New__AWS_Lambda_Function_ImageConfig initializes a new AWS_Lambda_Function_ImageConfig.
func New__AWS_Lambda_Function_ImageConfig() AWS_Lambda_Function_ImageConfig {
	return AWS_Lambda_Function_ImageConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_Lambda_Function_ImageConfig) GetType() string {
	return AWS_Lambda_Function_ImageConfig__Type
}

// Set__Command updates property "Command".
func (t AWS_Lambda_Function_ImageConfig) Set__Command(v cfz.ExpressionSlice[string]) AWS_Lambda_Function_ImageConfig {
	t.Command = v
	return t
}

// SetS__Command updates property "Command".
func (t AWS_Lambda_Function_ImageConfig) SetS__Command(v ...cfz.Expression[string]) AWS_Lambda_Function_ImageConfig {
	t.Command = cfz.S(v...)
	return t
}

// SetSV__Command updates property "Command".
func (t AWS_Lambda_Function_ImageConfig) SetSV__Command(v ...string) AWS_Lambda_Function_ImageConfig {
	t.Command = cfz.SV(v...)
	return t
}

// Set__EntryPoint updates property "EntryPoint".
func (t AWS_Lambda_Function_ImageConfig) Set__EntryPoint(v cfz.ExpressionSlice[string]) AWS_Lambda_Function_ImageConfig {
	t.EntryPoint = v
	return t
}

// SetS__EntryPoint updates property "EntryPoint".
func (t AWS_Lambda_Function_ImageConfig) SetS__EntryPoint(v ...cfz.Expression[string]) AWS_Lambda_Function_ImageConfig {
	t.EntryPoint = cfz.S(v...)
	return t
}

// SetSV__EntryPoint updates property "EntryPoint".
func (t AWS_Lambda_Function_ImageConfig) SetSV__EntryPoint(v ...string) AWS_Lambda_Function_ImageConfig {
	t.EntryPoint = cfz.SV(v...)
	return t
}

// Set__WorkingDirectory updates property "WorkingDirectory".
func (t AWS_Lambda_Function_ImageConfig) Set__WorkingDirectory(v cfz.Expression[string]) AWS_Lambda_Function_ImageConfig {
	t.WorkingDirectory = v
	return t
}

// SetV__WorkingDirectory updates property "WorkingDirectory".
func (t AWS_Lambda_Function_ImageConfig) SetV__WorkingDirectory(v string) AWS_Lambda_Function_ImageConfig {
	t.WorkingDirectory = cfz.V(v)
	return t
}
