// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_directoryservice

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DirectoryService_MicrosoftAD)(nil)
	_ cfz.Resource                   = (*AWS_DirectoryService_MicrosoftAD)(nil)
)

const (
	// AWS_DirectoryService_MicrosoftAD__Type is the CloudFormation type for AWS::DirectoryService::MicrosoftAD.
	AWS_DirectoryService_MicrosoftAD__Type = "AWS::DirectoryService::MicrosoftAD"
)

var (
	// AWS_DirectoryService_MicrosoftAD__AttributesMap reports all the CloudFormation attributes for AWS::DirectoryService::MicrosoftAD.
	AWS_DirectoryService_MicrosoftAD__AttributesMap = struct {
		Alias          string
		DnsIpAddresses string
	}{
		Alias:          "Alias",
		DnsIpAddresses: "DnsIpAddresses",
	}

	// AWS_DirectoryService_MicrosoftAD__AttributesSlice reports all the CloudFormation attributes for AWS::DirectoryService::MicrosoftAD.
	AWS_DirectoryService_MicrosoftAD__AttributesSlice = []string{
		AWS_DirectoryService_MicrosoftAD__AttributesMap.Alias,
		AWS_DirectoryService_MicrosoftAD__AttributesMap.DnsIpAddresses,
	}
)

var (
	// AWS_DirectoryService_MicrosoftAD__PropertiesMap reports all the CloudFormation properties for AWS::DirectoryService::MicrosoftAD.
	AWS_DirectoryService_MicrosoftAD__PropertiesMap = struct {
		CreateAlias string
		Edition     string
		EnableSso   string
		Name        string
		Password    string
		ShortName   string
		VpcSettings string
	}{
		CreateAlias: "CreateAlias",
		Edition:     "Edition",
		EnableSso:   "EnableSso",
		Name:        "Name",
		Password:    "Password",
		ShortName:   "ShortName",
		VpcSettings: "VpcSettings",
	}

	// AWS_DirectoryService_MicrosoftAD__PropertiesSlice reports all the CloudFormation properties for AWS::DirectoryService::MicrosoftAD.
	AWS_DirectoryService_MicrosoftAD__PropertiesSlice = []string{
		AWS_DirectoryService_MicrosoftAD__PropertiesMap.CreateAlias,
		AWS_DirectoryService_MicrosoftAD__PropertiesMap.Edition,
		AWS_DirectoryService_MicrosoftAD__PropertiesMap.EnableSso,
		AWS_DirectoryService_MicrosoftAD__PropertiesMap.Name,
		AWS_DirectoryService_MicrosoftAD__PropertiesMap.Password,
		AWS_DirectoryService_MicrosoftAD__PropertiesMap.ShortName,
		AWS_DirectoryService_MicrosoftAD__PropertiesMap.VpcSettings,
	}
)

// AWS_DirectoryService_MicrosoftAD is a binding for AWS::DirectoryService::MicrosoftAD.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html
type AWS_DirectoryService_MicrosoftAD struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CreateAlias is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-createalias
	CreateAlias cfz.Expression[bool] `json:"CreateAlias,omitempty"`

	// Edition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-edition
	Edition cfz.Expression[string] `json:"Edition,omitempty"`

	// EnableSso is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-enablesso
	EnableSso cfz.Expression[bool] `json:"EnableSso,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Password is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-password
	Password cfz.Expression[string] `json:"Password,omitempty"`

	// ShortName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-shortname
	ShortName cfz.Expression[string] `json:"ShortName,omitempty"`

	// VpcSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-directoryservice-microsoftad.html#cfn-directoryservice-microsoftad-vpcsettings
	VpcSettings cfz.Expression[AWS_DirectoryService_MicrosoftAD_VpcSettings] `json:"VpcSettings,omitempty"`
}

// New__AWS_DirectoryService_MicrosoftAD initializes a new *AWS_DirectoryService_MicrosoftAD.
func New__AWS_DirectoryService_MicrosoftAD(logicalName string) *AWS_DirectoryService_MicrosoftAD {
	return &AWS_DirectoryService_MicrosoftAD{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DirectoryService_MicrosoftAD) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DirectoryService_MicrosoftAD) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DirectoryService_MicrosoftAD) GetType() string {
	return AWS_DirectoryService_MicrosoftAD__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DirectoryService_MicrosoftAD) Set__LogicalName(v string) *AWS_DirectoryService_MicrosoftAD {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DirectoryService_MicrosoftAD) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DirectoryService_MicrosoftAD {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DirectoryService_MicrosoftAD) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DirectoryService_MicrosoftAD {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DirectoryService_MicrosoftAD) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DirectoryService_MicrosoftAD {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DirectoryService_MicrosoftAD) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DirectoryService_MicrosoftAD {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DirectoryService_MicrosoftAD) Set__RequestedOutputs(v []cfz.Output) *AWS_DirectoryService_MicrosoftAD {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DirectoryService_MicrosoftAD) Add__RequestedOutputs(v ...cfz.Output) *AWS_DirectoryService_MicrosoftAD {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CreateAlias updates property "CreateAlias".
func (t *AWS_DirectoryService_MicrosoftAD) Set__CreateAlias(v cfz.Expression[bool]) *AWS_DirectoryService_MicrosoftAD {
	t.CreateAlias = v
	return t
}

// SetV__CreateAlias updates property "CreateAlias".
func (t *AWS_DirectoryService_MicrosoftAD) SetV__CreateAlias(v bool) *AWS_DirectoryService_MicrosoftAD {
	t.CreateAlias = cfz.V(v)
	return t
}

// Set__Edition updates property "Edition".
func (t *AWS_DirectoryService_MicrosoftAD) Set__Edition(v cfz.Expression[string]) *AWS_DirectoryService_MicrosoftAD {
	t.Edition = v
	return t
}

// SetV__Edition updates property "Edition".
func (t *AWS_DirectoryService_MicrosoftAD) SetV__Edition(v string) *AWS_DirectoryService_MicrosoftAD {
	t.Edition = cfz.V(v)
	return t
}

// Set__EnableSso updates property "EnableSso".
func (t *AWS_DirectoryService_MicrosoftAD) Set__EnableSso(v cfz.Expression[bool]) *AWS_DirectoryService_MicrosoftAD {
	t.EnableSso = v
	return t
}

// SetV__EnableSso updates property "EnableSso".
func (t *AWS_DirectoryService_MicrosoftAD) SetV__EnableSso(v bool) *AWS_DirectoryService_MicrosoftAD {
	t.EnableSso = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_DirectoryService_MicrosoftAD) Set__Name(v cfz.Expression[string]) *AWS_DirectoryService_MicrosoftAD {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_DirectoryService_MicrosoftAD) SetV__Name(v string) *AWS_DirectoryService_MicrosoftAD {
	t.Name = cfz.V(v)
	return t
}

// Set__Password updates property "Password".
func (t *AWS_DirectoryService_MicrosoftAD) Set__Password(v cfz.Expression[string]) *AWS_DirectoryService_MicrosoftAD {
	t.Password = v
	return t
}

// SetV__Password updates property "Password".
func (t *AWS_DirectoryService_MicrosoftAD) SetV__Password(v string) *AWS_DirectoryService_MicrosoftAD {
	t.Password = cfz.V(v)
	return t
}

// Set__ShortName updates property "ShortName".
func (t *AWS_DirectoryService_MicrosoftAD) Set__ShortName(v cfz.Expression[string]) *AWS_DirectoryService_MicrosoftAD {
	t.ShortName = v
	return t
}

// SetV__ShortName updates property "ShortName".
func (t *AWS_DirectoryService_MicrosoftAD) SetV__ShortName(v string) *AWS_DirectoryService_MicrosoftAD {
	t.ShortName = cfz.V(v)
	return t
}

// Set__VpcSettings updates property "VpcSettings".
func (t *AWS_DirectoryService_MicrosoftAD) Set__VpcSettings(v cfz.Expression[AWS_DirectoryService_MicrosoftAD_VpcSettings]) *AWS_DirectoryService_MicrosoftAD {
	t.VpcSettings = v
	return t
}

// SetV__VpcSettings updates property "VpcSettings".
func (t *AWS_DirectoryService_MicrosoftAD) SetV__VpcSettings(v AWS_DirectoryService_MicrosoftAD_VpcSettings) *AWS_DirectoryService_MicrosoftAD {
	t.VpcSettings = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DirectoryService_MicrosoftAD) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Alias returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Alias
func (t *AWS_DirectoryService_MicrosoftAD) GetAtt__Alias() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DirectoryService_MicrosoftAD__AttributesMap.Alias))
}

// GetAttSlice__DnsIpAddresses returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DnsIpAddresses
func (t *AWS_DirectoryService_MicrosoftAD) GetAttSlice__DnsIpAddresses() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DirectoryService_MicrosoftAD__AttributesMap.DnsIpAddresses))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DirectoryService_MicrosoftAD) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Alias returns a conventionally configured output for an attribute of this resource.
// Attribute: Alias
func (t *AWS_DirectoryService_MicrosoftAD) GetConventionalOutputAtt__Alias(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAlias", t.GetAtt__Alias())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DnsIpAddresses returns a conventionally configured output for an attribute of this resource.
// Attribute: DnsIpAddresses
func (t *AWS_DirectoryService_MicrosoftAD) GetConventionalOutputAtt__DnsIpAddresses(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDnsIpAddresses", t.GetAttSlice__DnsIpAddresses())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DirectoryService_MicrosoftAD) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DirectoryService_MicrosoftAD

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DirectoryService_MicrosoftAD) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
