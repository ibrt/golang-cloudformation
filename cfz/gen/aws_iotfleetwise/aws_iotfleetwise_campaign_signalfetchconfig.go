// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotfleetwise

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoTFleetWise_Campaign_SignalFetchConfig__Type is the CloudFormation type for AWS::IoTFleetWise::Campaign.SignalFetchConfig.
	AWS_IoTFleetWise_Campaign_SignalFetchConfig__Type = "AWS::IoTFleetWise::Campaign.SignalFetchConfig"
)

var (
	// AWS_IoTFleetWise_Campaign_SignalFetchConfig__PropertiesMap reports all the CloudFormation properties for AWS::IoTFleetWise::Campaign.SignalFetchConfig.
	AWS_IoTFleetWise_Campaign_SignalFetchConfig__PropertiesMap = struct {
		ConditionBased string
		TimeBased      string
	}{
		ConditionBased: "ConditionBased",
		TimeBased:      "TimeBased",
	}

	// AWS_IoTFleetWise_Campaign_SignalFetchConfig__PropertiesSlice reports all the CloudFormation properties for AWS::IoTFleetWise::Campaign.SignalFetchConfig.
	AWS_IoTFleetWise_Campaign_SignalFetchConfig__PropertiesSlice = []string{
		AWS_IoTFleetWise_Campaign_SignalFetchConfig__PropertiesMap.ConditionBased,
		AWS_IoTFleetWise_Campaign_SignalFetchConfig__PropertiesMap.TimeBased,
	}
)

// AWS_IoTFleetWise_Campaign_SignalFetchConfig is a binding for AWS::IoTFleetWise::Campaign.SignalFetchConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-signalfetchconfig.html
type AWS_IoTFleetWise_Campaign_SignalFetchConfig struct {
	// ConditionBased is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-signalfetchconfig.html#cfn-iotfleetwise-campaign-signalfetchconfig-conditionbased
	ConditionBased cfz.Expression[AWS_IoTFleetWise_Campaign_ConditionBasedSignalFetchConfig] `json:"ConditionBased,omitempty"`

	// TimeBased is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-signalfetchconfig.html#cfn-iotfleetwise-campaign-signalfetchconfig-timebased
	TimeBased cfz.Expression[AWS_IoTFleetWise_Campaign_TimeBasedSignalFetchConfig] `json:"TimeBased,omitempty"`
}

// New__AWS_IoTFleetWise_Campaign_SignalFetchConfig initializes a new AWS_IoTFleetWise_Campaign_SignalFetchConfig.
func New__AWS_IoTFleetWise_Campaign_SignalFetchConfig() AWS_IoTFleetWise_Campaign_SignalFetchConfig {
	return AWS_IoTFleetWise_Campaign_SignalFetchConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_IoTFleetWise_Campaign_SignalFetchConfig) GetType() string {
	return AWS_IoTFleetWise_Campaign_SignalFetchConfig__Type
}

// Set__ConditionBased updates property "ConditionBased".
func (t AWS_IoTFleetWise_Campaign_SignalFetchConfig) Set__ConditionBased(v cfz.Expression[AWS_IoTFleetWise_Campaign_ConditionBasedSignalFetchConfig]) AWS_IoTFleetWise_Campaign_SignalFetchConfig {
	t.ConditionBased = v
	return t
}

// SetV__ConditionBased updates property "ConditionBased".
func (t AWS_IoTFleetWise_Campaign_SignalFetchConfig) SetV__ConditionBased(v AWS_IoTFleetWise_Campaign_ConditionBasedSignalFetchConfig) AWS_IoTFleetWise_Campaign_SignalFetchConfig {
	t.ConditionBased = cfz.V(v)
	return t
}

// Set__TimeBased updates property "TimeBased".
func (t AWS_IoTFleetWise_Campaign_SignalFetchConfig) Set__TimeBased(v cfz.Expression[AWS_IoTFleetWise_Campaign_TimeBasedSignalFetchConfig]) AWS_IoTFleetWise_Campaign_SignalFetchConfig {
	t.TimeBased = v
	return t
}

// SetV__TimeBased updates property "TimeBased".
func (t AWS_IoTFleetWise_Campaign_SignalFetchConfig) SetV__TimeBased(v AWS_IoTFleetWise_Campaign_TimeBasedSignalFetchConfig) AWS_IoTFleetWise_Campaign_SignalFetchConfig {
	t.TimeBased = cfz.V(v)
	return t
}
