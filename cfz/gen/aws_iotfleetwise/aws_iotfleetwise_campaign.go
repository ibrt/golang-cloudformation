// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotfleetwise

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IoTFleetWise_Campaign)(nil)
	_ cfz.Resource                   = (*AWS_IoTFleetWise_Campaign)(nil)
)

const (
	// AWS_IoTFleetWise_Campaign__Type is the CloudFormation type for AWS::IoTFleetWise::Campaign.
	AWS_IoTFleetWise_Campaign__Type = "AWS::IoTFleetWise::Campaign"
)

var (
	// AWS_IoTFleetWise_Campaign__AttributesMap reports all the CloudFormation attributes for AWS::IoTFleetWise::Campaign.
	AWS_IoTFleetWise_Campaign__AttributesMap = struct {
		Arn                  string
		CreationTime         string
		LastModificationTime string
		Status               string
	}{
		Arn:                  "Arn",
		CreationTime:         "CreationTime",
		LastModificationTime: "LastModificationTime",
		Status:               "Status",
	}

	// AWS_IoTFleetWise_Campaign__AttributesSlice reports all the CloudFormation attributes for AWS::IoTFleetWise::Campaign.
	AWS_IoTFleetWise_Campaign__AttributesSlice = []string{
		AWS_IoTFleetWise_Campaign__AttributesMap.Arn,
		AWS_IoTFleetWise_Campaign__AttributesMap.CreationTime,
		AWS_IoTFleetWise_Campaign__AttributesMap.LastModificationTime,
		AWS_IoTFleetWise_Campaign__AttributesMap.Status,
	}
)

var (
	// AWS_IoTFleetWise_Campaign__PropertiesMap reports all the CloudFormation properties for AWS::IoTFleetWise::Campaign.
	AWS_IoTFleetWise_Campaign__PropertiesMap = struct {
		Action                        string
		CollectionScheme              string
		Compression                   string
		DataDestinationConfigs        string
		DataExtraDimensions           string
		DataPartitions                string
		Description                   string
		DiagnosticsMode               string
		ExpiryTime                    string
		Name                          string
		PostTriggerCollectionDuration string
		Priority                      string
		SignalCatalogArn              string
		SignalsToCollect              string
		SignalsToFetch                string
		SpoolingMode                  string
		StartTime                     string
		Tags                          string
		TargetArn                     string
	}{
		Action:                        "Action",
		CollectionScheme:              "CollectionScheme",
		Compression:                   "Compression",
		DataDestinationConfigs:        "DataDestinationConfigs",
		DataExtraDimensions:           "DataExtraDimensions",
		DataPartitions:                "DataPartitions",
		Description:                   "Description",
		DiagnosticsMode:               "DiagnosticsMode",
		ExpiryTime:                    "ExpiryTime",
		Name:                          "Name",
		PostTriggerCollectionDuration: "PostTriggerCollectionDuration",
		Priority:                      "Priority",
		SignalCatalogArn:              "SignalCatalogArn",
		SignalsToCollect:              "SignalsToCollect",
		SignalsToFetch:                "SignalsToFetch",
		SpoolingMode:                  "SpoolingMode",
		StartTime:                     "StartTime",
		Tags:                          "Tags",
		TargetArn:                     "TargetArn",
	}

	// AWS_IoTFleetWise_Campaign__PropertiesSlice reports all the CloudFormation properties for AWS::IoTFleetWise::Campaign.
	AWS_IoTFleetWise_Campaign__PropertiesSlice = []string{
		AWS_IoTFleetWise_Campaign__PropertiesMap.Action,
		AWS_IoTFleetWise_Campaign__PropertiesMap.CollectionScheme,
		AWS_IoTFleetWise_Campaign__PropertiesMap.Compression,
		AWS_IoTFleetWise_Campaign__PropertiesMap.DataDestinationConfigs,
		AWS_IoTFleetWise_Campaign__PropertiesMap.DataExtraDimensions,
		AWS_IoTFleetWise_Campaign__PropertiesMap.DataPartitions,
		AWS_IoTFleetWise_Campaign__PropertiesMap.Description,
		AWS_IoTFleetWise_Campaign__PropertiesMap.DiagnosticsMode,
		AWS_IoTFleetWise_Campaign__PropertiesMap.ExpiryTime,
		AWS_IoTFleetWise_Campaign__PropertiesMap.Name,
		AWS_IoTFleetWise_Campaign__PropertiesMap.PostTriggerCollectionDuration,
		AWS_IoTFleetWise_Campaign__PropertiesMap.Priority,
		AWS_IoTFleetWise_Campaign__PropertiesMap.SignalCatalogArn,
		AWS_IoTFleetWise_Campaign__PropertiesMap.SignalsToCollect,
		AWS_IoTFleetWise_Campaign__PropertiesMap.SignalsToFetch,
		AWS_IoTFleetWise_Campaign__PropertiesMap.SpoolingMode,
		AWS_IoTFleetWise_Campaign__PropertiesMap.StartTime,
		AWS_IoTFleetWise_Campaign__PropertiesMap.Tags,
		AWS_IoTFleetWise_Campaign__PropertiesMap.TargetArn,
	}
)

// AWS_IoTFleetWise_Campaign is a binding for AWS::IoTFleetWise::Campaign.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html
type AWS_IoTFleetWise_Campaign struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Action is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-action
	Action cfz.Expression[string] `json:"Action,omitempty"`

	// CollectionScheme is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-collectionscheme
	CollectionScheme cfz.Expression[AWS_IoTFleetWise_Campaign_CollectionScheme] `json:"CollectionScheme,omitempty"`

	// Compression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-compression
	Compression cfz.Expression[string] `json:"Compression,omitempty"`

	// DataDestinationConfigs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-datadestinationconfigs
	DataDestinationConfigs cfz.ExpressionSlice[AWS_IoTFleetWise_Campaign_DataDestinationConfig] `json:"DataDestinationConfigs,omitempty"`

	// DataExtraDimensions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-dataextradimensions
	DataExtraDimensions cfz.ExpressionSlice[string] `json:"DataExtraDimensions,omitempty"`

	// DataPartitions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-datapartitions
	DataPartitions cfz.ExpressionSlice[AWS_IoTFleetWise_Campaign_DataPartition] `json:"DataPartitions,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DiagnosticsMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-diagnosticsmode
	DiagnosticsMode cfz.Expression[string] `json:"DiagnosticsMode,omitempty"`

	// ExpiryTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-expirytime
	ExpiryTime cfz.Expression[string] `json:"ExpiryTime,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// PostTriggerCollectionDuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-posttriggercollectionduration
	PostTriggerCollectionDuration cfz.Expression[float64] `json:"PostTriggerCollectionDuration,omitempty"`

	// Priority is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-priority
	Priority cfz.Expression[int32] `json:"Priority,omitempty"`

	// SignalCatalogArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-signalcatalogarn
	SignalCatalogArn cfz.Expression[string] `json:"SignalCatalogArn,omitempty"`

	// SignalsToCollect is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-signalstocollect
	SignalsToCollect cfz.ExpressionSlice[AWS_IoTFleetWise_Campaign_SignalInformation] `json:"SignalsToCollect,omitempty"`

	// SignalsToFetch is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-signalstofetch
	SignalsToFetch cfz.ExpressionSlice[AWS_IoTFleetWise_Campaign_SignalFetchInformation] `json:"SignalsToFetch,omitempty"`

	// SpoolingMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-spoolingmode
	SpoolingMode cfz.Expression[string] `json:"SpoolingMode,omitempty"`

	// StartTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-starttime
	StartTime cfz.Expression[string] `json:"StartTime,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TargetArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iotfleetwise-campaign.html#cfn-iotfleetwise-campaign-targetarn
	TargetArn cfz.Expression[string] `json:"TargetArn,omitempty"`
}

// New__AWS_IoTFleetWise_Campaign initializes a new *AWS_IoTFleetWise_Campaign.
func New__AWS_IoTFleetWise_Campaign(logicalName string) *AWS_IoTFleetWise_Campaign {
	return &AWS_IoTFleetWise_Campaign{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IoTFleetWise_Campaign) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IoTFleetWise_Campaign) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IoTFleetWise_Campaign) GetType() string {
	return AWS_IoTFleetWise_Campaign__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IoTFleetWise_Campaign) Set__LogicalName(v string) *AWS_IoTFleetWise_Campaign {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IoTFleetWise_Campaign) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IoTFleetWise_Campaign {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IoTFleetWise_Campaign) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IoTFleetWise_Campaign {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IoTFleetWise_Campaign) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IoTFleetWise_Campaign {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IoTFleetWise_Campaign) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IoTFleetWise_Campaign {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IoTFleetWise_Campaign) Set__RequestedOutputs(v []cfz.Output) *AWS_IoTFleetWise_Campaign {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IoTFleetWise_Campaign) Add__RequestedOutputs(v ...cfz.Output) *AWS_IoTFleetWise_Campaign {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Action updates property "Action".
func (t *AWS_IoTFleetWise_Campaign) Set__Action(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.Action = v
	return t
}

// SetV__Action updates property "Action".
func (t *AWS_IoTFleetWise_Campaign) SetV__Action(v string) *AWS_IoTFleetWise_Campaign {
	t.Action = cfz.V(v)
	return t
}

// Set__CollectionScheme updates property "CollectionScheme".
func (t *AWS_IoTFleetWise_Campaign) Set__CollectionScheme(v cfz.Expression[AWS_IoTFleetWise_Campaign_CollectionScheme]) *AWS_IoTFleetWise_Campaign {
	t.CollectionScheme = v
	return t
}

// SetV__CollectionScheme updates property "CollectionScheme".
func (t *AWS_IoTFleetWise_Campaign) SetV__CollectionScheme(v AWS_IoTFleetWise_Campaign_CollectionScheme) *AWS_IoTFleetWise_Campaign {
	t.CollectionScheme = cfz.V(v)
	return t
}

// Set__Compression updates property "Compression".
func (t *AWS_IoTFleetWise_Campaign) Set__Compression(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.Compression = v
	return t
}

// SetV__Compression updates property "Compression".
func (t *AWS_IoTFleetWise_Campaign) SetV__Compression(v string) *AWS_IoTFleetWise_Campaign {
	t.Compression = cfz.V(v)
	return t
}

// Set__DataDestinationConfigs updates property "DataDestinationConfigs".
func (t *AWS_IoTFleetWise_Campaign) Set__DataDestinationConfigs(v cfz.ExpressionSlice[AWS_IoTFleetWise_Campaign_DataDestinationConfig]) *AWS_IoTFleetWise_Campaign {
	t.DataDestinationConfigs = v
	return t
}

// SetS__DataDestinationConfigs updates property "DataDestinationConfigs".
func (t *AWS_IoTFleetWise_Campaign) SetS__DataDestinationConfigs(v ...cfz.Expression[AWS_IoTFleetWise_Campaign_DataDestinationConfig]) *AWS_IoTFleetWise_Campaign {
	t.DataDestinationConfigs = cfz.S(v...)
	return t
}

// SetSV__DataDestinationConfigs updates property "DataDestinationConfigs".
func (t *AWS_IoTFleetWise_Campaign) SetSV__DataDestinationConfigs(v ...AWS_IoTFleetWise_Campaign_DataDestinationConfig) *AWS_IoTFleetWise_Campaign {
	t.DataDestinationConfigs = cfz.SV(v...)
	return t
}

// Set__DataExtraDimensions updates property "DataExtraDimensions".
func (t *AWS_IoTFleetWise_Campaign) Set__DataExtraDimensions(v cfz.ExpressionSlice[string]) *AWS_IoTFleetWise_Campaign {
	t.DataExtraDimensions = v
	return t
}

// SetS__DataExtraDimensions updates property "DataExtraDimensions".
func (t *AWS_IoTFleetWise_Campaign) SetS__DataExtraDimensions(v ...cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.DataExtraDimensions = cfz.S(v...)
	return t
}

// SetSV__DataExtraDimensions updates property "DataExtraDimensions".
func (t *AWS_IoTFleetWise_Campaign) SetSV__DataExtraDimensions(v ...string) *AWS_IoTFleetWise_Campaign {
	t.DataExtraDimensions = cfz.SV(v...)
	return t
}

// Set__DataPartitions updates property "DataPartitions".
func (t *AWS_IoTFleetWise_Campaign) Set__DataPartitions(v cfz.ExpressionSlice[AWS_IoTFleetWise_Campaign_DataPartition]) *AWS_IoTFleetWise_Campaign {
	t.DataPartitions = v
	return t
}

// SetS__DataPartitions updates property "DataPartitions".
func (t *AWS_IoTFleetWise_Campaign) SetS__DataPartitions(v ...cfz.Expression[AWS_IoTFleetWise_Campaign_DataPartition]) *AWS_IoTFleetWise_Campaign {
	t.DataPartitions = cfz.S(v...)
	return t
}

// SetSV__DataPartitions updates property "DataPartitions".
func (t *AWS_IoTFleetWise_Campaign) SetSV__DataPartitions(v ...AWS_IoTFleetWise_Campaign_DataPartition) *AWS_IoTFleetWise_Campaign {
	t.DataPartitions = cfz.SV(v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_IoTFleetWise_Campaign) Set__Description(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_IoTFleetWise_Campaign) SetV__Description(v string) *AWS_IoTFleetWise_Campaign {
	t.Description = cfz.V(v)
	return t
}

// Set__DiagnosticsMode updates property "DiagnosticsMode".
func (t *AWS_IoTFleetWise_Campaign) Set__DiagnosticsMode(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.DiagnosticsMode = v
	return t
}

// SetV__DiagnosticsMode updates property "DiagnosticsMode".
func (t *AWS_IoTFleetWise_Campaign) SetV__DiagnosticsMode(v string) *AWS_IoTFleetWise_Campaign {
	t.DiagnosticsMode = cfz.V(v)
	return t
}

// Set__ExpiryTime updates property "ExpiryTime".
func (t *AWS_IoTFleetWise_Campaign) Set__ExpiryTime(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.ExpiryTime = v
	return t
}

// SetV__ExpiryTime updates property "ExpiryTime".
func (t *AWS_IoTFleetWise_Campaign) SetV__ExpiryTime(v string) *AWS_IoTFleetWise_Campaign {
	t.ExpiryTime = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_IoTFleetWise_Campaign) Set__Name(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_IoTFleetWise_Campaign) SetV__Name(v string) *AWS_IoTFleetWise_Campaign {
	t.Name = cfz.V(v)
	return t
}

// Set__PostTriggerCollectionDuration updates property "PostTriggerCollectionDuration".
func (t *AWS_IoTFleetWise_Campaign) Set__PostTriggerCollectionDuration(v cfz.Expression[float64]) *AWS_IoTFleetWise_Campaign {
	t.PostTriggerCollectionDuration = v
	return t
}

// SetV__PostTriggerCollectionDuration updates property "PostTriggerCollectionDuration".
func (t *AWS_IoTFleetWise_Campaign) SetV__PostTriggerCollectionDuration(v float64) *AWS_IoTFleetWise_Campaign {
	t.PostTriggerCollectionDuration = cfz.V(v)
	return t
}

// Set__Priority updates property "Priority".
func (t *AWS_IoTFleetWise_Campaign) Set__Priority(v cfz.Expression[int32]) *AWS_IoTFleetWise_Campaign {
	t.Priority = v
	return t
}

// SetV__Priority updates property "Priority".
func (t *AWS_IoTFleetWise_Campaign) SetV__Priority(v int32) *AWS_IoTFleetWise_Campaign {
	t.Priority = cfz.V(v)
	return t
}

// Set__SignalCatalogArn updates property "SignalCatalogArn".
func (t *AWS_IoTFleetWise_Campaign) Set__SignalCatalogArn(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.SignalCatalogArn = v
	return t
}

// SetV__SignalCatalogArn updates property "SignalCatalogArn".
func (t *AWS_IoTFleetWise_Campaign) SetV__SignalCatalogArn(v string) *AWS_IoTFleetWise_Campaign {
	t.SignalCatalogArn = cfz.V(v)
	return t
}

// Set__SignalsToCollect updates property "SignalsToCollect".
func (t *AWS_IoTFleetWise_Campaign) Set__SignalsToCollect(v cfz.ExpressionSlice[AWS_IoTFleetWise_Campaign_SignalInformation]) *AWS_IoTFleetWise_Campaign {
	t.SignalsToCollect = v
	return t
}

// SetS__SignalsToCollect updates property "SignalsToCollect".
func (t *AWS_IoTFleetWise_Campaign) SetS__SignalsToCollect(v ...cfz.Expression[AWS_IoTFleetWise_Campaign_SignalInformation]) *AWS_IoTFleetWise_Campaign {
	t.SignalsToCollect = cfz.S(v...)
	return t
}

// SetSV__SignalsToCollect updates property "SignalsToCollect".
func (t *AWS_IoTFleetWise_Campaign) SetSV__SignalsToCollect(v ...AWS_IoTFleetWise_Campaign_SignalInformation) *AWS_IoTFleetWise_Campaign {
	t.SignalsToCollect = cfz.SV(v...)
	return t
}

// Set__SignalsToFetch updates property "SignalsToFetch".
func (t *AWS_IoTFleetWise_Campaign) Set__SignalsToFetch(v cfz.ExpressionSlice[AWS_IoTFleetWise_Campaign_SignalFetchInformation]) *AWS_IoTFleetWise_Campaign {
	t.SignalsToFetch = v
	return t
}

// SetS__SignalsToFetch updates property "SignalsToFetch".
func (t *AWS_IoTFleetWise_Campaign) SetS__SignalsToFetch(v ...cfz.Expression[AWS_IoTFleetWise_Campaign_SignalFetchInformation]) *AWS_IoTFleetWise_Campaign {
	t.SignalsToFetch = cfz.S(v...)
	return t
}

// SetSV__SignalsToFetch updates property "SignalsToFetch".
func (t *AWS_IoTFleetWise_Campaign) SetSV__SignalsToFetch(v ...AWS_IoTFleetWise_Campaign_SignalFetchInformation) *AWS_IoTFleetWise_Campaign {
	t.SignalsToFetch = cfz.SV(v...)
	return t
}

// Set__SpoolingMode updates property "SpoolingMode".
func (t *AWS_IoTFleetWise_Campaign) Set__SpoolingMode(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.SpoolingMode = v
	return t
}

// SetV__SpoolingMode updates property "SpoolingMode".
func (t *AWS_IoTFleetWise_Campaign) SetV__SpoolingMode(v string) *AWS_IoTFleetWise_Campaign {
	t.SpoolingMode = cfz.V(v)
	return t
}

// Set__StartTime updates property "StartTime".
func (t *AWS_IoTFleetWise_Campaign) Set__StartTime(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.StartTime = v
	return t
}

// SetV__StartTime updates property "StartTime".
func (t *AWS_IoTFleetWise_Campaign) SetV__StartTime(v string) *AWS_IoTFleetWise_Campaign {
	t.StartTime = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IoTFleetWise_Campaign) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_IoTFleetWise_Campaign {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_IoTFleetWise_Campaign) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_IoTFleetWise_Campaign {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_IoTFleetWise_Campaign) SetSV__Tags(v ...cfz.Tag) *AWS_IoTFleetWise_Campaign {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TargetArn updates property "TargetArn".
func (t *AWS_IoTFleetWise_Campaign) Set__TargetArn(v cfz.Expression[string]) *AWS_IoTFleetWise_Campaign {
	t.TargetArn = v
	return t
}

// SetV__TargetArn updates property "TargetArn".
func (t *AWS_IoTFleetWise_Campaign) SetV__TargetArn(v string) *AWS_IoTFleetWise_Campaign {
	t.TargetArn = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IoTFleetWise_Campaign) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IoTFleetWise_Campaign) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTFleetWise_Campaign__AttributesMap.Arn))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_IoTFleetWise_Campaign) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTFleetWise_Campaign__AttributesMap.CreationTime))
}

// GetAtt__LastModificationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastModificationTime
func (t *AWS_IoTFleetWise_Campaign) GetAtt__LastModificationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTFleetWise_Campaign__AttributesMap.LastModificationTime))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_IoTFleetWise_Campaign) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTFleetWise_Campaign__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IoTFleetWise_Campaign) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IoTFleetWise_Campaign) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_IoTFleetWise_Campaign) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastModificationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastModificationTime
func (t *AWS_IoTFleetWise_Campaign) GetConventionalOutputAtt__LastModificationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastModificationTime", t.GetAtt__LastModificationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_IoTFleetWise_Campaign) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IoTFleetWise_Campaign) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IoTFleetWise_Campaign

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IoTFleetWise_Campaign) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
