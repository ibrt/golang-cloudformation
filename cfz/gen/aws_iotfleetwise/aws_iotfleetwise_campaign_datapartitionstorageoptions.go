// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotfleetwise

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__Type is the CloudFormation type for AWS::IoTFleetWise::Campaign.DataPartitionStorageOptions.
	AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__Type = "AWS::IoTFleetWise::Campaign.DataPartitionStorageOptions"
)

var (
	// AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__PropertiesMap reports all the CloudFormation properties for AWS::IoTFleetWise::Campaign.DataPartitionStorageOptions.
	AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__PropertiesMap = struct {
		MaximumSize       string
		MinimumTimeToLive string
		StorageLocation   string
	}{
		MaximumSize:       "MaximumSize",
		MinimumTimeToLive: "MinimumTimeToLive",
		StorageLocation:   "StorageLocation",
	}

	// AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__PropertiesSlice reports all the CloudFormation properties for AWS::IoTFleetWise::Campaign.DataPartitionStorageOptions.
	AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__PropertiesSlice = []string{
		AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__PropertiesMap.MaximumSize,
		AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__PropertiesMap.MinimumTimeToLive,
		AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__PropertiesMap.StorageLocation,
	}
)

// AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions is a binding for AWS::IoTFleetWise::Campaign.DataPartitionStorageOptions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-datapartitionstorageoptions.html
type AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions struct {
	// MaximumSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-datapartitionstorageoptions.html#cfn-iotfleetwise-campaign-datapartitionstorageoptions-maximumsize
	MaximumSize cfz.Expression[AWS_IoTFleetWise_Campaign_StorageMaximumSize] `json:"MaximumSize,omitempty"`

	// MinimumTimeToLive is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-datapartitionstorageoptions.html#cfn-iotfleetwise-campaign-datapartitionstorageoptions-minimumtimetolive
	MinimumTimeToLive cfz.Expression[AWS_IoTFleetWise_Campaign_StorageMinimumTimeToLive] `json:"MinimumTimeToLive,omitempty"`

	// StorageLocation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-datapartitionstorageoptions.html#cfn-iotfleetwise-campaign-datapartitionstorageoptions-storagelocation
	StorageLocation cfz.Expression[string] `json:"StorageLocation,omitempty"`
}

// New__AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions initializes a new AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions.
func New__AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions() AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions {
	return AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions{}
}

// GetType returns the CloudFormation type.
func (AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions) GetType() string {
	return AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions__Type
}

// Set__MaximumSize updates property "MaximumSize".
func (t AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions) Set__MaximumSize(v cfz.Expression[AWS_IoTFleetWise_Campaign_StorageMaximumSize]) AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions {
	t.MaximumSize = v
	return t
}

// SetV__MaximumSize updates property "MaximumSize".
func (t AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions) SetV__MaximumSize(v AWS_IoTFleetWise_Campaign_StorageMaximumSize) AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions {
	t.MaximumSize = cfz.V(v)
	return t
}

// Set__MinimumTimeToLive updates property "MinimumTimeToLive".
func (t AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions) Set__MinimumTimeToLive(v cfz.Expression[AWS_IoTFleetWise_Campaign_StorageMinimumTimeToLive]) AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions {
	t.MinimumTimeToLive = v
	return t
}

// SetV__MinimumTimeToLive updates property "MinimumTimeToLive".
func (t AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions) SetV__MinimumTimeToLive(v AWS_IoTFleetWise_Campaign_StorageMinimumTimeToLive) AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions {
	t.MinimumTimeToLive = cfz.V(v)
	return t
}

// Set__StorageLocation updates property "StorageLocation".
func (t AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions) Set__StorageLocation(v cfz.Expression[string]) AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions {
	t.StorageLocation = v
	return t
}

// SetV__StorageLocation updates property "StorageLocation".
func (t AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions) SetV__StorageLocation(v string) AWS_IoTFleetWise_Campaign_DataPartitionStorageOptions {
	t.StorageLocation = cfz.V(v)
	return t
}
