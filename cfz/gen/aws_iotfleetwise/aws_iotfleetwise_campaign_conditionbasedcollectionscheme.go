// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotfleetwise

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__Type is the CloudFormation type for AWS::IoTFleetWise::Campaign.ConditionBasedCollectionScheme.
	AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__Type = "AWS::IoTFleetWise::Campaign.ConditionBasedCollectionScheme"
)

var (
	// AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__PropertiesMap reports all the CloudFormation properties for AWS::IoTFleetWise::Campaign.ConditionBasedCollectionScheme.
	AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__PropertiesMap = struct {
		ConditionLanguageVersion string
		Expression               string
		MinimumTriggerIntervalMs string
		TriggerMode              string
	}{
		ConditionLanguageVersion: "ConditionLanguageVersion",
		Expression:               "Expression",
		MinimumTriggerIntervalMs: "MinimumTriggerIntervalMs",
		TriggerMode:              "TriggerMode",
	}

	// AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__PropertiesSlice reports all the CloudFormation properties for AWS::IoTFleetWise::Campaign.ConditionBasedCollectionScheme.
	AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__PropertiesSlice = []string{
		AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__PropertiesMap.ConditionLanguageVersion,
		AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__PropertiesMap.Expression,
		AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__PropertiesMap.MinimumTriggerIntervalMs,
		AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__PropertiesMap.TriggerMode,
	}
)

// AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme is a binding for AWS::IoTFleetWise::Campaign.ConditionBasedCollectionScheme.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-conditionbasedcollectionscheme.html
type AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme struct {
	// ConditionLanguageVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-conditionbasedcollectionscheme.html#cfn-iotfleetwise-campaign-conditionbasedcollectionscheme-conditionlanguageversion
	ConditionLanguageVersion cfz.Expression[int32] `json:"ConditionLanguageVersion,omitempty"`

	// Expression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-conditionbasedcollectionscheme.html#cfn-iotfleetwise-campaign-conditionbasedcollectionscheme-expression
	Expression cfz.Expression[string] `json:"Expression,omitempty"`

	// MinimumTriggerIntervalMs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-conditionbasedcollectionscheme.html#cfn-iotfleetwise-campaign-conditionbasedcollectionscheme-minimumtriggerintervalms
	MinimumTriggerIntervalMs cfz.Expression[float64] `json:"MinimumTriggerIntervalMs,omitempty"`

	// TriggerMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotfleetwise-campaign-conditionbasedcollectionscheme.html#cfn-iotfleetwise-campaign-conditionbasedcollectionscheme-triggermode
	TriggerMode cfz.Expression[string] `json:"TriggerMode,omitempty"`
}

// New__AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme initializes a new AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme.
func New__AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme() AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme {
	return AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme{}
}

// GetType returns the CloudFormation type.
func (AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme) GetType() string {
	return AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme__Type
}

// Set__ConditionLanguageVersion updates property "ConditionLanguageVersion".
func (t AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme) Set__ConditionLanguageVersion(v cfz.Expression[int32]) AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme {
	t.ConditionLanguageVersion = v
	return t
}

// SetV__ConditionLanguageVersion updates property "ConditionLanguageVersion".
func (t AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme) SetV__ConditionLanguageVersion(v int32) AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme {
	t.ConditionLanguageVersion = cfz.V(v)
	return t
}

// Set__Expression updates property "Expression".
func (t AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme) Set__Expression(v cfz.Expression[string]) AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme {
	t.Expression = v
	return t
}

// SetV__Expression updates property "Expression".
func (t AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme) SetV__Expression(v string) AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme {
	t.Expression = cfz.V(v)
	return t
}

// Set__MinimumTriggerIntervalMs updates property "MinimumTriggerIntervalMs".
func (t AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme) Set__MinimumTriggerIntervalMs(v cfz.Expression[float64]) AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme {
	t.MinimumTriggerIntervalMs = v
	return t
}

// SetV__MinimumTriggerIntervalMs updates property "MinimumTriggerIntervalMs".
func (t AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme) SetV__MinimumTriggerIntervalMs(v float64) AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme {
	t.MinimumTriggerIntervalMs = cfz.V(v)
	return t
}

// Set__TriggerMode updates property "TriggerMode".
func (t AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme) Set__TriggerMode(v cfz.Expression[string]) AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme {
	t.TriggerMode = v
	return t
}

// SetV__TriggerMode updates property "TriggerMode".
func (t AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme) SetV__TriggerMode(v string) AWS_IoTFleetWise_Campaign_ConditionBasedCollectionScheme {
	t.TriggerMode = cfz.V(v)
	return t
}
