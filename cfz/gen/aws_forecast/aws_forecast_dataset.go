// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_forecast

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Forecast_Dataset)(nil)
	_ cfz.Resource                   = (*AWS_Forecast_Dataset)(nil)
)

const (
	// AWS_Forecast_Dataset__Type is the CloudFormation type for AWS::Forecast::Dataset.
	AWS_Forecast_Dataset__Type = "AWS::Forecast::Dataset"
)

var (
	// AWS_Forecast_Dataset__AttributesMap reports all the CloudFormation attributes for AWS::Forecast::Dataset.
	AWS_Forecast_Dataset__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_Forecast_Dataset__AttributesSlice reports all the CloudFormation attributes for AWS::Forecast::Dataset.
	AWS_Forecast_Dataset__AttributesSlice = []string{
		AWS_Forecast_Dataset__AttributesMap.Arn,
	}
)

var (
	// AWS_Forecast_Dataset__PropertiesMap reports all the CloudFormation properties for AWS::Forecast::Dataset.
	AWS_Forecast_Dataset__PropertiesMap = struct {
		DataFrequency    string
		DatasetName      string
		DatasetType      string
		Domain           string
		EncryptionConfig string
		Schema           string
		Tags             string
	}{
		DataFrequency:    "DataFrequency",
		DatasetName:      "DatasetName",
		DatasetType:      "DatasetType",
		Domain:           "Domain",
		EncryptionConfig: "EncryptionConfig",
		Schema:           "Schema",
		Tags:             "Tags",
	}

	// AWS_Forecast_Dataset__PropertiesSlice reports all the CloudFormation properties for AWS::Forecast::Dataset.
	AWS_Forecast_Dataset__PropertiesSlice = []string{
		AWS_Forecast_Dataset__PropertiesMap.DataFrequency,
		AWS_Forecast_Dataset__PropertiesMap.DatasetName,
		AWS_Forecast_Dataset__PropertiesMap.DatasetType,
		AWS_Forecast_Dataset__PropertiesMap.Domain,
		AWS_Forecast_Dataset__PropertiesMap.EncryptionConfig,
		AWS_Forecast_Dataset__PropertiesMap.Schema,
		AWS_Forecast_Dataset__PropertiesMap.Tags,
	}
)

// AWS_Forecast_Dataset is a binding for AWS::Forecast::Dataset.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html
type AWS_Forecast_Dataset struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DataFrequency is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-datafrequency
	DataFrequency cfz.Expression[string] `json:"DataFrequency,omitempty"`

	// DatasetName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-datasetname
	DatasetName cfz.Expression[string] `json:"DatasetName,omitempty"`

	// DatasetType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-datasettype
	DatasetType cfz.Expression[string] `json:"DatasetType,omitempty"`

	// Domain is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-domain
	Domain cfz.Expression[string] `json:"Domain,omitempty"`

	// EncryptionConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-encryptionconfig
	EncryptionConfig cfz.Expression[AWS_Forecast_Dataset_EncryptionConfig] `json:"EncryptionConfig,omitempty"`

	// Schema is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-schema
	Schema cfz.Expression[AWS_Forecast_Dataset_Schema] `json:"Schema,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-tags
	Tags cfz.ExpressionSlice[AWS_Forecast_Dataset_TagsItems] `json:"Tags,omitempty"`
}

// New__AWS_Forecast_Dataset initializes a new *AWS_Forecast_Dataset.
func New__AWS_Forecast_Dataset(logicalName string) *AWS_Forecast_Dataset {
	return &AWS_Forecast_Dataset{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Forecast_Dataset) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Forecast_Dataset) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Forecast_Dataset) GetType() string {
	return AWS_Forecast_Dataset__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Forecast_Dataset) Set__LogicalName(v string) *AWS_Forecast_Dataset {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Forecast_Dataset) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Forecast_Dataset {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Forecast_Dataset) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Forecast_Dataset {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Forecast_Dataset) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Forecast_Dataset {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Forecast_Dataset) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Forecast_Dataset {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Forecast_Dataset) Set__RequestedOutputs(v []cfz.Output) *AWS_Forecast_Dataset {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Forecast_Dataset) Add__RequestedOutputs(v ...cfz.Output) *AWS_Forecast_Dataset {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DataFrequency updates property "DataFrequency".
func (t *AWS_Forecast_Dataset) Set__DataFrequency(v cfz.Expression[string]) *AWS_Forecast_Dataset {
	t.DataFrequency = v
	return t
}

// SetV__DataFrequency updates property "DataFrequency".
func (t *AWS_Forecast_Dataset) SetV__DataFrequency(v string) *AWS_Forecast_Dataset {
	t.DataFrequency = cfz.V(v)
	return t
}

// Set__DatasetName updates property "DatasetName".
func (t *AWS_Forecast_Dataset) Set__DatasetName(v cfz.Expression[string]) *AWS_Forecast_Dataset {
	t.DatasetName = v
	return t
}

// SetV__DatasetName updates property "DatasetName".
func (t *AWS_Forecast_Dataset) SetV__DatasetName(v string) *AWS_Forecast_Dataset {
	t.DatasetName = cfz.V(v)
	return t
}

// Set__DatasetType updates property "DatasetType".
func (t *AWS_Forecast_Dataset) Set__DatasetType(v cfz.Expression[string]) *AWS_Forecast_Dataset {
	t.DatasetType = v
	return t
}

// SetV__DatasetType updates property "DatasetType".
func (t *AWS_Forecast_Dataset) SetV__DatasetType(v string) *AWS_Forecast_Dataset {
	t.DatasetType = cfz.V(v)
	return t
}

// Set__Domain updates property "Domain".
func (t *AWS_Forecast_Dataset) Set__Domain(v cfz.Expression[string]) *AWS_Forecast_Dataset {
	t.Domain = v
	return t
}

// SetV__Domain updates property "Domain".
func (t *AWS_Forecast_Dataset) SetV__Domain(v string) *AWS_Forecast_Dataset {
	t.Domain = cfz.V(v)
	return t
}

// Set__EncryptionConfig updates property "EncryptionConfig".
func (t *AWS_Forecast_Dataset) Set__EncryptionConfig(v cfz.Expression[AWS_Forecast_Dataset_EncryptionConfig]) *AWS_Forecast_Dataset {
	t.EncryptionConfig = v
	return t
}

// SetV__EncryptionConfig updates property "EncryptionConfig".
func (t *AWS_Forecast_Dataset) SetV__EncryptionConfig(v AWS_Forecast_Dataset_EncryptionConfig) *AWS_Forecast_Dataset {
	t.EncryptionConfig = cfz.V(v)
	return t
}

// Set__Schema updates property "Schema".
func (t *AWS_Forecast_Dataset) Set__Schema(v cfz.Expression[AWS_Forecast_Dataset_Schema]) *AWS_Forecast_Dataset {
	t.Schema = v
	return t
}

// SetV__Schema updates property "Schema".
func (t *AWS_Forecast_Dataset) SetV__Schema(v AWS_Forecast_Dataset_Schema) *AWS_Forecast_Dataset {
	t.Schema = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Forecast_Dataset) Set__Tags(v cfz.ExpressionSlice[AWS_Forecast_Dataset_TagsItems]) *AWS_Forecast_Dataset {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Forecast_Dataset) SetS__Tags(v ...cfz.Expression[AWS_Forecast_Dataset_TagsItems]) *AWS_Forecast_Dataset {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Forecast_Dataset) SetSV__Tags(v ...AWS_Forecast_Dataset_TagsItems) *AWS_Forecast_Dataset {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Forecast_Dataset) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Forecast_Dataset) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Forecast_Dataset__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Forecast_Dataset) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Forecast_Dataset) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Forecast_Dataset) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Forecast_Dataset

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Forecast_Dataset) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
