// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_apigateway

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ApiGateway_Authorizer)(nil)
	_ cfz.Resource                   = (*AWS_ApiGateway_Authorizer)(nil)
)

const (
	// AWS_ApiGateway_Authorizer__Type is the CloudFormation type for AWS::ApiGateway::Authorizer.
	AWS_ApiGateway_Authorizer__Type = "AWS::ApiGateway::Authorizer"
)

var (
	// AWS_ApiGateway_Authorizer__AttributesMap reports all the CloudFormation attributes for AWS::ApiGateway::Authorizer.
	AWS_ApiGateway_Authorizer__AttributesMap = struct {
		AuthorizerId string
	}{
		AuthorizerId: "AuthorizerId",
	}

	// AWS_ApiGateway_Authorizer__AttributesSlice reports all the CloudFormation attributes for AWS::ApiGateway::Authorizer.
	AWS_ApiGateway_Authorizer__AttributesSlice = []string{
		AWS_ApiGateway_Authorizer__AttributesMap.AuthorizerId,
	}
)

var (
	// AWS_ApiGateway_Authorizer__PropertiesMap reports all the CloudFormation properties for AWS::ApiGateway::Authorizer.
	AWS_ApiGateway_Authorizer__PropertiesMap = struct {
		AuthType                     string
		AuthorizerCredentials        string
		AuthorizerResultTtlInSeconds string
		AuthorizerUri                string
		IdentitySource               string
		IdentityValidationExpression string
		Name                         string
		ProviderARNs                 string
		RestApiId                    string
		Type                         string
	}{
		AuthType:                     "AuthType",
		AuthorizerCredentials:        "AuthorizerCredentials",
		AuthorizerResultTtlInSeconds: "AuthorizerResultTtlInSeconds",
		AuthorizerUri:                "AuthorizerUri",
		IdentitySource:               "IdentitySource",
		IdentityValidationExpression: "IdentityValidationExpression",
		Name:                         "Name",
		ProviderARNs:                 "ProviderARNs",
		RestApiId:                    "RestApiId",
		Type:                         "Type",
	}

	// AWS_ApiGateway_Authorizer__PropertiesSlice reports all the CloudFormation properties for AWS::ApiGateway::Authorizer.
	AWS_ApiGateway_Authorizer__PropertiesSlice = []string{
		AWS_ApiGateway_Authorizer__PropertiesMap.AuthType,
		AWS_ApiGateway_Authorizer__PropertiesMap.AuthorizerCredentials,
		AWS_ApiGateway_Authorizer__PropertiesMap.AuthorizerResultTtlInSeconds,
		AWS_ApiGateway_Authorizer__PropertiesMap.AuthorizerUri,
		AWS_ApiGateway_Authorizer__PropertiesMap.IdentitySource,
		AWS_ApiGateway_Authorizer__PropertiesMap.IdentityValidationExpression,
		AWS_ApiGateway_Authorizer__PropertiesMap.Name,
		AWS_ApiGateway_Authorizer__PropertiesMap.ProviderARNs,
		AWS_ApiGateway_Authorizer__PropertiesMap.RestApiId,
		AWS_ApiGateway_Authorizer__PropertiesMap.Type,
	}
)

// AWS_ApiGateway_Authorizer is a binding for AWS::ApiGateway::Authorizer.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html
type AWS_ApiGateway_Authorizer struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AuthType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authtype
	AuthType cfz.Expression[string] `json:"AuthType,omitempty"`

	// AuthorizerCredentials is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authorizercredentials
	AuthorizerCredentials cfz.Expression[string] `json:"AuthorizerCredentials,omitempty"`

	// AuthorizerResultTtlInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authorizerresultttlinseconds
	AuthorizerResultTtlInSeconds cfz.Expression[int32] `json:"AuthorizerResultTtlInSeconds,omitempty"`

	// AuthorizerUri is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-authorizeruri
	AuthorizerUri cfz.Expression[string] `json:"AuthorizerUri,omitempty"`

	// IdentitySource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-identitysource
	IdentitySource cfz.Expression[string] `json:"IdentitySource,omitempty"`

	// IdentityValidationExpression is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-identityvalidationexpression
	IdentityValidationExpression cfz.Expression[string] `json:"IdentityValidationExpression,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// ProviderARNs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-providerarns
	ProviderARNs cfz.ExpressionSlice[string] `json:"ProviderARNs,omitempty"`

	// RestApiId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-restapiid
	RestApiId cfz.Expression[string] `json:"RestApiId,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-authorizer.html#cfn-apigateway-authorizer-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_ApiGateway_Authorizer initializes a new *AWS_ApiGateway_Authorizer.
func New__AWS_ApiGateway_Authorizer(logicalName string) *AWS_ApiGateway_Authorizer {
	return &AWS_ApiGateway_Authorizer{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ApiGateway_Authorizer) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ApiGateway_Authorizer) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ApiGateway_Authorizer) GetType() string {
	return AWS_ApiGateway_Authorizer__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ApiGateway_Authorizer) Set__LogicalName(v string) *AWS_ApiGateway_Authorizer {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ApiGateway_Authorizer) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ApiGateway_Authorizer {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ApiGateway_Authorizer) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ApiGateway_Authorizer {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ApiGateway_Authorizer) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ApiGateway_Authorizer {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ApiGateway_Authorizer) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ApiGateway_Authorizer {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ApiGateway_Authorizer) Set__RequestedOutputs(v []cfz.Output) *AWS_ApiGateway_Authorizer {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ApiGateway_Authorizer) Add__RequestedOutputs(v ...cfz.Output) *AWS_ApiGateway_Authorizer {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AuthType updates property "AuthType".
func (t *AWS_ApiGateway_Authorizer) Set__AuthType(v cfz.Expression[string]) *AWS_ApiGateway_Authorizer {
	t.AuthType = v
	return t
}

// SetV__AuthType updates property "AuthType".
func (t *AWS_ApiGateway_Authorizer) SetV__AuthType(v string) *AWS_ApiGateway_Authorizer {
	t.AuthType = cfz.V(v)
	return t
}

// Set__AuthorizerCredentials updates property "AuthorizerCredentials".
func (t *AWS_ApiGateway_Authorizer) Set__AuthorizerCredentials(v cfz.Expression[string]) *AWS_ApiGateway_Authorizer {
	t.AuthorizerCredentials = v
	return t
}

// SetV__AuthorizerCredentials updates property "AuthorizerCredentials".
func (t *AWS_ApiGateway_Authorizer) SetV__AuthorizerCredentials(v string) *AWS_ApiGateway_Authorizer {
	t.AuthorizerCredentials = cfz.V(v)
	return t
}

// Set__AuthorizerResultTtlInSeconds updates property "AuthorizerResultTtlInSeconds".
func (t *AWS_ApiGateway_Authorizer) Set__AuthorizerResultTtlInSeconds(v cfz.Expression[int32]) *AWS_ApiGateway_Authorizer {
	t.AuthorizerResultTtlInSeconds = v
	return t
}

// SetV__AuthorizerResultTtlInSeconds updates property "AuthorizerResultTtlInSeconds".
func (t *AWS_ApiGateway_Authorizer) SetV__AuthorizerResultTtlInSeconds(v int32) *AWS_ApiGateway_Authorizer {
	t.AuthorizerResultTtlInSeconds = cfz.V(v)
	return t
}

// Set__AuthorizerUri updates property "AuthorizerUri".
func (t *AWS_ApiGateway_Authorizer) Set__AuthorizerUri(v cfz.Expression[string]) *AWS_ApiGateway_Authorizer {
	t.AuthorizerUri = v
	return t
}

// SetV__AuthorizerUri updates property "AuthorizerUri".
func (t *AWS_ApiGateway_Authorizer) SetV__AuthorizerUri(v string) *AWS_ApiGateway_Authorizer {
	t.AuthorizerUri = cfz.V(v)
	return t
}

// Set__IdentitySource updates property "IdentitySource".
func (t *AWS_ApiGateway_Authorizer) Set__IdentitySource(v cfz.Expression[string]) *AWS_ApiGateway_Authorizer {
	t.IdentitySource = v
	return t
}

// SetV__IdentitySource updates property "IdentitySource".
func (t *AWS_ApiGateway_Authorizer) SetV__IdentitySource(v string) *AWS_ApiGateway_Authorizer {
	t.IdentitySource = cfz.V(v)
	return t
}

// Set__IdentityValidationExpression updates property "IdentityValidationExpression".
func (t *AWS_ApiGateway_Authorizer) Set__IdentityValidationExpression(v cfz.Expression[string]) *AWS_ApiGateway_Authorizer {
	t.IdentityValidationExpression = v
	return t
}

// SetV__IdentityValidationExpression updates property "IdentityValidationExpression".
func (t *AWS_ApiGateway_Authorizer) SetV__IdentityValidationExpression(v string) *AWS_ApiGateway_Authorizer {
	t.IdentityValidationExpression = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_ApiGateway_Authorizer) Set__Name(v cfz.Expression[string]) *AWS_ApiGateway_Authorizer {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_ApiGateway_Authorizer) SetV__Name(v string) *AWS_ApiGateway_Authorizer {
	t.Name = cfz.V(v)
	return t
}

// Set__ProviderARNs updates property "ProviderARNs".
func (t *AWS_ApiGateway_Authorizer) Set__ProviderARNs(v cfz.ExpressionSlice[string]) *AWS_ApiGateway_Authorizer {
	t.ProviderARNs = v
	return t
}

// SetS__ProviderARNs updates property "ProviderARNs".
func (t *AWS_ApiGateway_Authorizer) SetS__ProviderARNs(v ...cfz.Expression[string]) *AWS_ApiGateway_Authorizer {
	t.ProviderARNs = cfz.S(v...)
	return t
}

// SetSV__ProviderARNs updates property "ProviderARNs".
func (t *AWS_ApiGateway_Authorizer) SetSV__ProviderARNs(v ...string) *AWS_ApiGateway_Authorizer {
	t.ProviderARNs = cfz.SV(v...)
	return t
}

// Set__RestApiId updates property "RestApiId".
func (t *AWS_ApiGateway_Authorizer) Set__RestApiId(v cfz.Expression[string]) *AWS_ApiGateway_Authorizer {
	t.RestApiId = v
	return t
}

// SetV__RestApiId updates property "RestApiId".
func (t *AWS_ApiGateway_Authorizer) SetV__RestApiId(v string) *AWS_ApiGateway_Authorizer {
	t.RestApiId = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_ApiGateway_Authorizer) Set__Type(v cfz.Expression[string]) *AWS_ApiGateway_Authorizer {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_ApiGateway_Authorizer) SetV__Type(v string) *AWS_ApiGateway_Authorizer {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ApiGateway_Authorizer) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AuthorizerId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AuthorizerId
func (t *AWS_ApiGateway_Authorizer) GetAtt__AuthorizerId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ApiGateway_Authorizer__AttributesMap.AuthorizerId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ApiGateway_Authorizer) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AuthorizerId returns a conventionally configured output for an attribute of this resource.
// Attribute: AuthorizerId
func (t *AWS_ApiGateway_Authorizer) GetConventionalOutputAtt__AuthorizerId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAuthorizerId", t.GetAtt__AuthorizerId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ApiGateway_Authorizer) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ApiGateway_Authorizer

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ApiGateway_Authorizer) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
