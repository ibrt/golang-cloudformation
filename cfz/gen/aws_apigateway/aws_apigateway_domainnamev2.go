// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_apigateway

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ApiGateway_DomainNameV2)(nil)
	_ cfz.Resource                   = (*AWS_ApiGateway_DomainNameV2)(nil)
)

const (
	// AWS_ApiGateway_DomainNameV2__Type is the CloudFormation type for AWS::ApiGateway::DomainNameV2.
	AWS_ApiGateway_DomainNameV2__Type = "AWS::ApiGateway::DomainNameV2"
)

var (
	// AWS_ApiGateway_DomainNameV2__AttributesMap reports all the CloudFormation attributes for AWS::ApiGateway::DomainNameV2.
	AWS_ApiGateway_DomainNameV2__AttributesMap = struct {
		DomainNameArn string
		DomainNameId  string
	}{
		DomainNameArn: "DomainNameArn",
		DomainNameId:  "DomainNameId",
	}

	// AWS_ApiGateway_DomainNameV2__AttributesSlice reports all the CloudFormation attributes for AWS::ApiGateway::DomainNameV2.
	AWS_ApiGateway_DomainNameV2__AttributesSlice = []string{
		AWS_ApiGateway_DomainNameV2__AttributesMap.DomainNameArn,
		AWS_ApiGateway_DomainNameV2__AttributesMap.DomainNameId,
	}
)

var (
	// AWS_ApiGateway_DomainNameV2__PropertiesMap reports all the CloudFormation properties for AWS::ApiGateway::DomainNameV2.
	AWS_ApiGateway_DomainNameV2__PropertiesMap = struct {
		CertificateArn        string
		DomainName            string
		EndpointConfiguration string
		Policy                string
		SecurityPolicy        string
		Tags                  string
	}{
		CertificateArn:        "CertificateArn",
		DomainName:            "DomainName",
		EndpointConfiguration: "EndpointConfiguration",
		Policy:                "Policy",
		SecurityPolicy:        "SecurityPolicy",
		Tags:                  "Tags",
	}

	// AWS_ApiGateway_DomainNameV2__PropertiesSlice reports all the CloudFormation properties for AWS::ApiGateway::DomainNameV2.
	AWS_ApiGateway_DomainNameV2__PropertiesSlice = []string{
		AWS_ApiGateway_DomainNameV2__PropertiesMap.CertificateArn,
		AWS_ApiGateway_DomainNameV2__PropertiesMap.DomainName,
		AWS_ApiGateway_DomainNameV2__PropertiesMap.EndpointConfiguration,
		AWS_ApiGateway_DomainNameV2__PropertiesMap.Policy,
		AWS_ApiGateway_DomainNameV2__PropertiesMap.SecurityPolicy,
		AWS_ApiGateway_DomainNameV2__PropertiesMap.Tags,
	}
)

// AWS_ApiGateway_DomainNameV2 is a binding for AWS::ApiGateway::DomainNameV2.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html
type AWS_ApiGateway_DomainNameV2 struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CertificateArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-certificatearn
	CertificateArn cfz.Expression[string] `json:"CertificateArn,omitempty"`

	// DomainName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-domainname
	DomainName cfz.Expression[string] `json:"DomainName,omitempty"`

	// EndpointConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-endpointconfiguration
	EndpointConfiguration cfz.Expression[AWS_ApiGateway_DomainNameV2_EndpointConfiguration] `json:"EndpointConfiguration,omitempty"`

	// Policy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-policy
	Policy cfz.Expression[json.RawMessage] `json:"Policy,omitempty"`

	// SecurityPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-securitypolicy
	SecurityPolicy cfz.Expression[string] `json:"SecurityPolicy,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-domainnamev2.html#cfn-apigateway-domainnamev2-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_ApiGateway_DomainNameV2 initializes a new *AWS_ApiGateway_DomainNameV2.
func New__AWS_ApiGateway_DomainNameV2(logicalName string) *AWS_ApiGateway_DomainNameV2 {
	return &AWS_ApiGateway_DomainNameV2{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ApiGateway_DomainNameV2) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ApiGateway_DomainNameV2) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ApiGateway_DomainNameV2) GetType() string {
	return AWS_ApiGateway_DomainNameV2__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ApiGateway_DomainNameV2) Set__LogicalName(v string) *AWS_ApiGateway_DomainNameV2 {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ApiGateway_DomainNameV2) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ApiGateway_DomainNameV2 {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ApiGateway_DomainNameV2) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ApiGateway_DomainNameV2 {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ApiGateway_DomainNameV2) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ApiGateway_DomainNameV2 {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ApiGateway_DomainNameV2) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ApiGateway_DomainNameV2 {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ApiGateway_DomainNameV2) Set__RequestedOutputs(v []cfz.Output) *AWS_ApiGateway_DomainNameV2 {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ApiGateway_DomainNameV2) Add__RequestedOutputs(v ...cfz.Output) *AWS_ApiGateway_DomainNameV2 {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CertificateArn updates property "CertificateArn".
func (t *AWS_ApiGateway_DomainNameV2) Set__CertificateArn(v cfz.Expression[string]) *AWS_ApiGateway_DomainNameV2 {
	t.CertificateArn = v
	return t
}

// SetV__CertificateArn updates property "CertificateArn".
func (t *AWS_ApiGateway_DomainNameV2) SetV__CertificateArn(v string) *AWS_ApiGateway_DomainNameV2 {
	t.CertificateArn = cfz.V(v)
	return t
}

// Set__DomainName updates property "DomainName".
func (t *AWS_ApiGateway_DomainNameV2) Set__DomainName(v cfz.Expression[string]) *AWS_ApiGateway_DomainNameV2 {
	t.DomainName = v
	return t
}

// SetV__DomainName updates property "DomainName".
func (t *AWS_ApiGateway_DomainNameV2) SetV__DomainName(v string) *AWS_ApiGateway_DomainNameV2 {
	t.DomainName = cfz.V(v)
	return t
}

// Set__EndpointConfiguration updates property "EndpointConfiguration".
func (t *AWS_ApiGateway_DomainNameV2) Set__EndpointConfiguration(v cfz.Expression[AWS_ApiGateway_DomainNameV2_EndpointConfiguration]) *AWS_ApiGateway_DomainNameV2 {
	t.EndpointConfiguration = v
	return t
}

// SetV__EndpointConfiguration updates property "EndpointConfiguration".
func (t *AWS_ApiGateway_DomainNameV2) SetV__EndpointConfiguration(v AWS_ApiGateway_DomainNameV2_EndpointConfiguration) *AWS_ApiGateway_DomainNameV2 {
	t.EndpointConfiguration = cfz.V(v)
	return t
}

// Set__Policy updates property "Policy".
func (t *AWS_ApiGateway_DomainNameV2) Set__Policy(v cfz.Expression[json.RawMessage]) *AWS_ApiGateway_DomainNameV2 {
	t.Policy = v
	return t
}

// SetV__Policy updates property "Policy".
func (t *AWS_ApiGateway_DomainNameV2) SetV__Policy(v json.RawMessage) *AWS_ApiGateway_DomainNameV2 {
	t.Policy = cfz.V(v)
	return t
}

// Set__SecurityPolicy updates property "SecurityPolicy".
func (t *AWS_ApiGateway_DomainNameV2) Set__SecurityPolicy(v cfz.Expression[string]) *AWS_ApiGateway_DomainNameV2 {
	t.SecurityPolicy = v
	return t
}

// SetV__SecurityPolicy updates property "SecurityPolicy".
func (t *AWS_ApiGateway_DomainNameV2) SetV__SecurityPolicy(v string) *AWS_ApiGateway_DomainNameV2 {
	t.SecurityPolicy = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ApiGateway_DomainNameV2) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ApiGateway_DomainNameV2 {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ApiGateway_DomainNameV2) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ApiGateway_DomainNameV2 {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ApiGateway_DomainNameV2) SetSV__Tags(v ...cfz.Tag) *AWS_ApiGateway_DomainNameV2 {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ApiGateway_DomainNameV2) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DomainNameArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DomainNameArn
func (t *AWS_ApiGateway_DomainNameV2) GetAtt__DomainNameArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ApiGateway_DomainNameV2__AttributesMap.DomainNameArn))
}

// GetAtt__DomainNameId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DomainNameId
func (t *AWS_ApiGateway_DomainNameV2) GetAtt__DomainNameId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ApiGateway_DomainNameV2__AttributesMap.DomainNameId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ApiGateway_DomainNameV2) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DomainNameArn returns a conventionally configured output for an attribute of this resource.
// Attribute: DomainNameArn
func (t *AWS_ApiGateway_DomainNameV2) GetConventionalOutputAtt__DomainNameArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDomainNameArn", t.GetAtt__DomainNameArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DomainNameId returns a conventionally configured output for an attribute of this resource.
// Attribute: DomainNameId
func (t *AWS_ApiGateway_DomainNameV2) GetConventionalOutputAtt__DomainNameId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDomainNameId", t.GetAtt__DomainNameId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ApiGateway_DomainNameV2) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ApiGateway_DomainNameV2

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ApiGateway_DomainNameV2) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
