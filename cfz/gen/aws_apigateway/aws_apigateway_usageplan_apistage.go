// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_apigateway

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_ApiGateway_UsagePlan_ApiStage__Type is the CloudFormation type for AWS::ApiGateway::UsagePlan.ApiStage.
	AWS_ApiGateway_UsagePlan_ApiStage__Type = "AWS::ApiGateway::UsagePlan.ApiStage"
)

var (
	// AWS_ApiGateway_UsagePlan_ApiStage__PropertiesMap reports all the CloudFormation properties for AWS::ApiGateway::UsagePlan.ApiStage.
	AWS_ApiGateway_UsagePlan_ApiStage__PropertiesMap = struct {
		ApiId    string
		Stage    string
		Throttle string
	}{
		ApiId:    "ApiId",
		Stage:    "Stage",
		Throttle: "Throttle",
	}

	// AWS_ApiGateway_UsagePlan_ApiStage__PropertiesSlice reports all the CloudFormation properties for AWS::ApiGateway::UsagePlan.ApiStage.
	AWS_ApiGateway_UsagePlan_ApiStage__PropertiesSlice = []string{
		AWS_ApiGateway_UsagePlan_ApiStage__PropertiesMap.ApiId,
		AWS_ApiGateway_UsagePlan_ApiStage__PropertiesMap.Stage,
		AWS_ApiGateway_UsagePlan_ApiStage__PropertiesMap.Throttle,
	}
)

// AWS_ApiGateway_UsagePlan_ApiStage is a binding for AWS::ApiGateway::UsagePlan.ApiStage.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html
type AWS_ApiGateway_UsagePlan_ApiStage struct {
	// ApiId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html#cfn-apigateway-usageplan-apistage-apiid
	ApiId cfz.Expression[string] `json:"ApiId,omitempty"`

	// Stage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html#cfn-apigateway-usageplan-apistage-stage
	Stage cfz.Expression[string] `json:"Stage,omitempty"`

	// Throttle is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-usageplan-apistage.html#cfn-apigateway-usageplan-apistage-throttle
	Throttle cfz.ExpressionMap[AWS_ApiGateway_UsagePlan_ThrottleSettings] `json:"Throttle,omitempty"`
}

// New__AWS_ApiGateway_UsagePlan_ApiStage initializes a new AWS_ApiGateway_UsagePlan_ApiStage.
func New__AWS_ApiGateway_UsagePlan_ApiStage() AWS_ApiGateway_UsagePlan_ApiStage {
	return AWS_ApiGateway_UsagePlan_ApiStage{}
}

// GetType returns the CloudFormation type.
func (AWS_ApiGateway_UsagePlan_ApiStage) GetType() string {
	return AWS_ApiGateway_UsagePlan_ApiStage__Type
}

// Set__ApiId updates property "ApiId".
func (t AWS_ApiGateway_UsagePlan_ApiStage) Set__ApiId(v cfz.Expression[string]) AWS_ApiGateway_UsagePlan_ApiStage {
	t.ApiId = v
	return t
}

// SetV__ApiId updates property "ApiId".
func (t AWS_ApiGateway_UsagePlan_ApiStage) SetV__ApiId(v string) AWS_ApiGateway_UsagePlan_ApiStage {
	t.ApiId = cfz.V(v)
	return t
}

// Set__Stage updates property "Stage".
func (t AWS_ApiGateway_UsagePlan_ApiStage) Set__Stage(v cfz.Expression[string]) AWS_ApiGateway_UsagePlan_ApiStage {
	t.Stage = v
	return t
}

// SetV__Stage updates property "Stage".
func (t AWS_ApiGateway_UsagePlan_ApiStage) SetV__Stage(v string) AWS_ApiGateway_UsagePlan_ApiStage {
	t.Stage = cfz.V(v)
	return t
}

// Set__Throttle updates property "Throttle".
func (t AWS_ApiGateway_UsagePlan_ApiStage) Set__Throttle(v cfz.ExpressionMap[AWS_ApiGateway_UsagePlan_ThrottleSettings]) AWS_ApiGateway_UsagePlan_ApiStage {
	t.Throttle = v
	return t
}

// SetM__Throttle updates property "Throttle".
func (t AWS_ApiGateway_UsagePlan_ApiStage) SetM__Throttle(v ...map[string]cfz.Expression[AWS_ApiGateway_UsagePlan_ThrottleSettings]) AWS_ApiGateway_UsagePlan_ApiStage {
	t.Throttle = cfz.M(v...)
	return t
}

// SetMV__Throttle updates property "Throttle".
func (t AWS_ApiGateway_UsagePlan_ApiStage) SetMV__Throttle(v ...map[string]AWS_ApiGateway_UsagePlan_ThrottleSettings) AWS_ApiGateway_UsagePlan_ApiStage {
	t.Throttle = cfz.MV(v...)
	return t
}
