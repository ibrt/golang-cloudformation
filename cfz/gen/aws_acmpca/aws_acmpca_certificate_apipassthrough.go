// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_acmpca

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_ACMPCA_Certificate_ApiPassthrough__Type is the CloudFormation type for AWS::ACMPCA::Certificate.ApiPassthrough.
	AWS_ACMPCA_Certificate_ApiPassthrough__Type = "AWS::ACMPCA::Certificate.ApiPassthrough"
)

var (
	// AWS_ACMPCA_Certificate_ApiPassthrough__PropertiesMap reports all the CloudFormation properties for AWS::ACMPCA::Certificate.ApiPassthrough.
	AWS_ACMPCA_Certificate_ApiPassthrough__PropertiesMap = struct {
		Extensions string
		Subject    string
	}{
		Extensions: "Extensions",
		Subject:    "Subject",
	}

	// AWS_ACMPCA_Certificate_ApiPassthrough__PropertiesSlice reports all the CloudFormation properties for AWS::ACMPCA::Certificate.ApiPassthrough.
	AWS_ACMPCA_Certificate_ApiPassthrough__PropertiesSlice = []string{
		AWS_ACMPCA_Certificate_ApiPassthrough__PropertiesMap.Extensions,
		AWS_ACMPCA_Certificate_ApiPassthrough__PropertiesMap.Subject,
	}
)

// AWS_ACMPCA_Certificate_ApiPassthrough is a binding for AWS::ACMPCA::Certificate.ApiPassthrough.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-apipassthrough.html
type AWS_ACMPCA_Certificate_ApiPassthrough struct {
	// Extensions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-apipassthrough.html#cfn-acmpca-certificate-apipassthrough-extensions
	Extensions cfz.Expression[AWS_ACMPCA_Certificate_Extensions] `json:"Extensions,omitempty"`

	// Subject is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-apipassthrough.html#cfn-acmpca-certificate-apipassthrough-subject
	Subject cfz.Expression[AWS_ACMPCA_Certificate_Subject] `json:"Subject,omitempty"`
}

// New__AWS_ACMPCA_Certificate_ApiPassthrough initializes a new AWS_ACMPCA_Certificate_ApiPassthrough.
func New__AWS_ACMPCA_Certificate_ApiPassthrough() AWS_ACMPCA_Certificate_ApiPassthrough {
	return AWS_ACMPCA_Certificate_ApiPassthrough{}
}

// GetType returns the CloudFormation type.
func (AWS_ACMPCA_Certificate_ApiPassthrough) GetType() string {
	return AWS_ACMPCA_Certificate_ApiPassthrough__Type
}

// Set__Extensions updates property "Extensions".
func (t AWS_ACMPCA_Certificate_ApiPassthrough) Set__Extensions(v cfz.Expression[AWS_ACMPCA_Certificate_Extensions]) AWS_ACMPCA_Certificate_ApiPassthrough {
	t.Extensions = v
	return t
}

// SetV__Extensions updates property "Extensions".
func (t AWS_ACMPCA_Certificate_ApiPassthrough) SetV__Extensions(v AWS_ACMPCA_Certificate_Extensions) AWS_ACMPCA_Certificate_ApiPassthrough {
	t.Extensions = cfz.V(v)
	return t
}

// Set__Subject updates property "Subject".
func (t AWS_ACMPCA_Certificate_ApiPassthrough) Set__Subject(v cfz.Expression[AWS_ACMPCA_Certificate_Subject]) AWS_ACMPCA_Certificate_ApiPassthrough {
	t.Subject = v
	return t
}

// SetV__Subject updates property "Subject".
func (t AWS_ACMPCA_Certificate_ApiPassthrough) SetV__Subject(v AWS_ACMPCA_Certificate_Subject) AWS_ACMPCA_Certificate_ApiPassthrough {
	t.Subject = cfz.V(v)
	return t
}
