// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_acmpca

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ACMPCA_Permission)(nil)
	_ cfz.Resource                   = (*AWS_ACMPCA_Permission)(nil)
)

const (
	// AWS_ACMPCA_Permission__Type is the CloudFormation type for AWS::ACMPCA::Permission.
	AWS_ACMPCA_Permission__Type = "AWS::ACMPCA::Permission"
)

var (
	// AWS_ACMPCA_Permission__PropertiesMap reports all the CloudFormation properties for AWS::ACMPCA::Permission.
	AWS_ACMPCA_Permission__PropertiesMap = struct {
		Actions                 string
		CertificateAuthorityArn string
		Principal               string
		SourceAccount           string
	}{
		Actions:                 "Actions",
		CertificateAuthorityArn: "CertificateAuthorityArn",
		Principal:               "Principal",
		SourceAccount:           "SourceAccount",
	}

	// AWS_ACMPCA_Permission__PropertiesSlice reports all the CloudFormation properties for AWS::ACMPCA::Permission.
	AWS_ACMPCA_Permission__PropertiesSlice = []string{
		AWS_ACMPCA_Permission__PropertiesMap.Actions,
		AWS_ACMPCA_Permission__PropertiesMap.CertificateAuthorityArn,
		AWS_ACMPCA_Permission__PropertiesMap.Principal,
		AWS_ACMPCA_Permission__PropertiesMap.SourceAccount,
	}
)

// AWS_ACMPCA_Permission is a binding for AWS::ACMPCA::Permission.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html
type AWS_ACMPCA_Permission struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Actions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-actions
	Actions cfz.ExpressionSlice[string] `json:"Actions,omitempty"`

	// CertificateAuthorityArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-certificateauthorityarn
	CertificateAuthorityArn cfz.Expression[string] `json:"CertificateAuthorityArn,omitempty"`

	// Principal is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-principal
	Principal cfz.Expression[string] `json:"Principal,omitempty"`

	// SourceAccount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-permission.html#cfn-acmpca-permission-sourceaccount
	SourceAccount cfz.Expression[string] `json:"SourceAccount,omitempty"`
}

// New__AWS_ACMPCA_Permission initializes a new *AWS_ACMPCA_Permission.
func New__AWS_ACMPCA_Permission(logicalName string) *AWS_ACMPCA_Permission {
	return &AWS_ACMPCA_Permission{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ACMPCA_Permission) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ACMPCA_Permission) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ACMPCA_Permission) GetType() string {
	return AWS_ACMPCA_Permission__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ACMPCA_Permission) Set__LogicalName(v string) *AWS_ACMPCA_Permission {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ACMPCA_Permission) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ACMPCA_Permission {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ACMPCA_Permission) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ACMPCA_Permission {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ACMPCA_Permission) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ACMPCA_Permission {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ACMPCA_Permission) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ACMPCA_Permission {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ACMPCA_Permission) Set__RequestedOutputs(v []cfz.Output) *AWS_ACMPCA_Permission {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ACMPCA_Permission) Add__RequestedOutputs(v ...cfz.Output) *AWS_ACMPCA_Permission {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Actions updates property "Actions".
func (t *AWS_ACMPCA_Permission) Set__Actions(v cfz.ExpressionSlice[string]) *AWS_ACMPCA_Permission {
	t.Actions = v
	return t
}

// SetS__Actions updates property "Actions".
func (t *AWS_ACMPCA_Permission) SetS__Actions(v ...cfz.Expression[string]) *AWS_ACMPCA_Permission {
	t.Actions = cfz.S(v...)
	return t
}

// SetSV__Actions updates property "Actions".
func (t *AWS_ACMPCA_Permission) SetSV__Actions(v ...string) *AWS_ACMPCA_Permission {
	t.Actions = cfz.SV(v...)
	return t
}

// Set__CertificateAuthorityArn updates property "CertificateAuthorityArn".
func (t *AWS_ACMPCA_Permission) Set__CertificateAuthorityArn(v cfz.Expression[string]) *AWS_ACMPCA_Permission {
	t.CertificateAuthorityArn = v
	return t
}

// SetV__CertificateAuthorityArn updates property "CertificateAuthorityArn".
func (t *AWS_ACMPCA_Permission) SetV__CertificateAuthorityArn(v string) *AWS_ACMPCA_Permission {
	t.CertificateAuthorityArn = cfz.V(v)
	return t
}

// Set__Principal updates property "Principal".
func (t *AWS_ACMPCA_Permission) Set__Principal(v cfz.Expression[string]) *AWS_ACMPCA_Permission {
	t.Principal = v
	return t
}

// SetV__Principal updates property "Principal".
func (t *AWS_ACMPCA_Permission) SetV__Principal(v string) *AWS_ACMPCA_Permission {
	t.Principal = cfz.V(v)
	return t
}

// Set__SourceAccount updates property "SourceAccount".
func (t *AWS_ACMPCA_Permission) Set__SourceAccount(v cfz.Expression[string]) *AWS_ACMPCA_Permission {
	t.SourceAccount = v
	return t
}

// SetV__SourceAccount updates property "SourceAccount".
func (t *AWS_ACMPCA_Permission) SetV__SourceAccount(v string) *AWS_ACMPCA_Permission {
	t.SourceAccount = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ACMPCA_Permission) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ACMPCA_Permission) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ACMPCA_Permission) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ACMPCA_Permission

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ACMPCA_Permission) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
