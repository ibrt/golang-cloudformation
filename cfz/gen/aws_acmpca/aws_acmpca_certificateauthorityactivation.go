// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_acmpca

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ACMPCA_CertificateAuthorityActivation)(nil)
	_ cfz.Resource                   = (*AWS_ACMPCA_CertificateAuthorityActivation)(nil)
)

const (
	// AWS_ACMPCA_CertificateAuthorityActivation__Type is the CloudFormation type for AWS::ACMPCA::CertificateAuthorityActivation.
	AWS_ACMPCA_CertificateAuthorityActivation__Type = "AWS::ACMPCA::CertificateAuthorityActivation"
)

var (
	// AWS_ACMPCA_CertificateAuthorityActivation__AttributesMap reports all the CloudFormation attributes for AWS::ACMPCA::CertificateAuthorityActivation.
	AWS_ACMPCA_CertificateAuthorityActivation__AttributesMap = struct {
		CompleteCertificateChain string
	}{
		CompleteCertificateChain: "CompleteCertificateChain",
	}

	// AWS_ACMPCA_CertificateAuthorityActivation__AttributesSlice reports all the CloudFormation attributes for AWS::ACMPCA::CertificateAuthorityActivation.
	AWS_ACMPCA_CertificateAuthorityActivation__AttributesSlice = []string{
		AWS_ACMPCA_CertificateAuthorityActivation__AttributesMap.CompleteCertificateChain,
	}
)

var (
	// AWS_ACMPCA_CertificateAuthorityActivation__PropertiesMap reports all the CloudFormation properties for AWS::ACMPCA::CertificateAuthorityActivation.
	AWS_ACMPCA_CertificateAuthorityActivation__PropertiesMap = struct {
		Certificate             string
		CertificateAuthorityArn string
		CertificateChain        string
		Status                  string
	}{
		Certificate:             "Certificate",
		CertificateAuthorityArn: "CertificateAuthorityArn",
		CertificateChain:        "CertificateChain",
		Status:                  "Status",
	}

	// AWS_ACMPCA_CertificateAuthorityActivation__PropertiesSlice reports all the CloudFormation properties for AWS::ACMPCA::CertificateAuthorityActivation.
	AWS_ACMPCA_CertificateAuthorityActivation__PropertiesSlice = []string{
		AWS_ACMPCA_CertificateAuthorityActivation__PropertiesMap.Certificate,
		AWS_ACMPCA_CertificateAuthorityActivation__PropertiesMap.CertificateAuthorityArn,
		AWS_ACMPCA_CertificateAuthorityActivation__PropertiesMap.CertificateChain,
		AWS_ACMPCA_CertificateAuthorityActivation__PropertiesMap.Status,
	}
)

// AWS_ACMPCA_CertificateAuthorityActivation is a binding for AWS::ACMPCA::CertificateAuthorityActivation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html
type AWS_ACMPCA_CertificateAuthorityActivation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Certificate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificate
	Certificate cfz.Expression[string] `json:"Certificate,omitempty"`

	// CertificateAuthorityArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificateauthorityarn
	CertificateAuthorityArn cfz.Expression[string] `json:"CertificateAuthorityArn,omitempty"`

	// CertificateChain is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-certificatechain
	CertificateChain cfz.Expression[string] `json:"CertificateChain,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-acmpca-certificateauthorityactivation.html#cfn-acmpca-certificateauthorityactivation-status
	Status cfz.Expression[string] `json:"Status,omitempty"`
}

// New__AWS_ACMPCA_CertificateAuthorityActivation initializes a new *AWS_ACMPCA_CertificateAuthorityActivation.
func New__AWS_ACMPCA_CertificateAuthorityActivation(logicalName string) *AWS_ACMPCA_CertificateAuthorityActivation {
	return &AWS_ACMPCA_CertificateAuthorityActivation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ACMPCA_CertificateAuthorityActivation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ACMPCA_CertificateAuthorityActivation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ACMPCA_CertificateAuthorityActivation) GetType() string {
	return AWS_ACMPCA_CertificateAuthorityActivation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Set__LogicalName(v string) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Set__RequestedOutputs(v []cfz.Output) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Add__RequestedOutputs(v ...cfz.Output) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Certificate updates property "Certificate".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Set__Certificate(v cfz.Expression[string]) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.Certificate = v
	return t
}

// SetV__Certificate updates property "Certificate".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) SetV__Certificate(v string) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.Certificate = cfz.V(v)
	return t
}

// Set__CertificateAuthorityArn updates property "CertificateAuthorityArn".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Set__CertificateAuthorityArn(v cfz.Expression[string]) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.CertificateAuthorityArn = v
	return t
}

// SetV__CertificateAuthorityArn updates property "CertificateAuthorityArn".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) SetV__CertificateAuthorityArn(v string) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.CertificateAuthorityArn = cfz.V(v)
	return t
}

// Set__CertificateChain updates property "CertificateChain".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Set__CertificateChain(v cfz.Expression[string]) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.CertificateChain = v
	return t
}

// SetV__CertificateChain updates property "CertificateChain".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) SetV__CertificateChain(v string) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.CertificateChain = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Set__Status(v cfz.Expression[string]) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t *AWS_ACMPCA_CertificateAuthorityActivation) SetV__Status(v string) *AWS_ACMPCA_CertificateAuthorityActivation {
	t.Status = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ACMPCA_CertificateAuthorityActivation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CompleteCertificateChain returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CompleteCertificateChain
func (t *AWS_ACMPCA_CertificateAuthorityActivation) GetAtt__CompleteCertificateChain() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ACMPCA_CertificateAuthorityActivation__AttributesMap.CompleteCertificateChain))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ACMPCA_CertificateAuthorityActivation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CompleteCertificateChain returns a conventionally configured output for an attribute of this resource.
// Attribute: CompleteCertificateChain
func (t *AWS_ACMPCA_CertificateAuthorityActivation) GetConventionalOutputAtt__CompleteCertificateChain(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCompleteCertificateChain", t.GetAtt__CompleteCertificateChain())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ACMPCA_CertificateAuthorityActivation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ACMPCA_CertificateAuthorityActivation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ACMPCA_CertificateAuthorityActivation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
