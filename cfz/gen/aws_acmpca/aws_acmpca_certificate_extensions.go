// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_acmpca

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_ACMPCA_Certificate_Extensions__Type is the CloudFormation type for AWS::ACMPCA::Certificate.Extensions.
	AWS_ACMPCA_Certificate_Extensions__Type = "AWS::ACMPCA::Certificate.Extensions"
)

var (
	// AWS_ACMPCA_Certificate_Extensions__PropertiesMap reports all the CloudFormation properties for AWS::ACMPCA::Certificate.Extensions.
	AWS_ACMPCA_Certificate_Extensions__PropertiesMap = struct {
		CertificatePolicies     string
		CustomExtensions        string
		ExtendedKeyUsage        string
		KeyUsage                string
		SubjectAlternativeNames string
	}{
		CertificatePolicies:     "CertificatePolicies",
		CustomExtensions:        "CustomExtensions",
		ExtendedKeyUsage:        "ExtendedKeyUsage",
		KeyUsage:                "KeyUsage",
		SubjectAlternativeNames: "SubjectAlternativeNames",
	}

	// AWS_ACMPCA_Certificate_Extensions__PropertiesSlice reports all the CloudFormation properties for AWS::ACMPCA::Certificate.Extensions.
	AWS_ACMPCA_Certificate_Extensions__PropertiesSlice = []string{
		AWS_ACMPCA_Certificate_Extensions__PropertiesMap.CertificatePolicies,
		AWS_ACMPCA_Certificate_Extensions__PropertiesMap.CustomExtensions,
		AWS_ACMPCA_Certificate_Extensions__PropertiesMap.ExtendedKeyUsage,
		AWS_ACMPCA_Certificate_Extensions__PropertiesMap.KeyUsage,
		AWS_ACMPCA_Certificate_Extensions__PropertiesMap.SubjectAlternativeNames,
	}
)

// AWS_ACMPCA_Certificate_Extensions is a binding for AWS::ACMPCA::Certificate.Extensions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html
type AWS_ACMPCA_Certificate_Extensions struct {
	// CertificatePolicies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-certificatepolicies
	CertificatePolicies cfz.ExpressionSlice[AWS_ACMPCA_Certificate_PolicyInformation] `json:"CertificatePolicies,omitempty"`

	// CustomExtensions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-customextensions
	CustomExtensions cfz.ExpressionSlice[AWS_ACMPCA_Certificate_CustomExtension] `json:"CustomExtensions,omitempty"`

	// ExtendedKeyUsage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-extendedkeyusage
	ExtendedKeyUsage cfz.ExpressionSlice[AWS_ACMPCA_Certificate_ExtendedKeyUsage] `json:"ExtendedKeyUsage,omitempty"`

	// KeyUsage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-keyusage
	KeyUsage cfz.Expression[AWS_ACMPCA_Certificate_KeyUsage] `json:"KeyUsage,omitempty"`

	// SubjectAlternativeNames is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-acmpca-certificate-extensions.html#cfn-acmpca-certificate-extensions-subjectalternativenames
	SubjectAlternativeNames cfz.ExpressionSlice[AWS_ACMPCA_Certificate_GeneralName] `json:"SubjectAlternativeNames,omitempty"`
}

// New__AWS_ACMPCA_Certificate_Extensions initializes a new AWS_ACMPCA_Certificate_Extensions.
func New__AWS_ACMPCA_Certificate_Extensions() AWS_ACMPCA_Certificate_Extensions {
	return AWS_ACMPCA_Certificate_Extensions{}
}

// GetType returns the CloudFormation type.
func (AWS_ACMPCA_Certificate_Extensions) GetType() string {
	return AWS_ACMPCA_Certificate_Extensions__Type
}

// Set__CertificatePolicies updates property "CertificatePolicies".
func (t AWS_ACMPCA_Certificate_Extensions) Set__CertificatePolicies(v cfz.ExpressionSlice[AWS_ACMPCA_Certificate_PolicyInformation]) AWS_ACMPCA_Certificate_Extensions {
	t.CertificatePolicies = v
	return t
}

// SetS__CertificatePolicies updates property "CertificatePolicies".
func (t AWS_ACMPCA_Certificate_Extensions) SetS__CertificatePolicies(v ...cfz.Expression[AWS_ACMPCA_Certificate_PolicyInformation]) AWS_ACMPCA_Certificate_Extensions {
	t.CertificatePolicies = cfz.S(v...)
	return t
}

// SetSV__CertificatePolicies updates property "CertificatePolicies".
func (t AWS_ACMPCA_Certificate_Extensions) SetSV__CertificatePolicies(v ...AWS_ACMPCA_Certificate_PolicyInformation) AWS_ACMPCA_Certificate_Extensions {
	t.CertificatePolicies = cfz.SV(v...)
	return t
}

// Set__CustomExtensions updates property "CustomExtensions".
func (t AWS_ACMPCA_Certificate_Extensions) Set__CustomExtensions(v cfz.ExpressionSlice[AWS_ACMPCA_Certificate_CustomExtension]) AWS_ACMPCA_Certificate_Extensions {
	t.CustomExtensions = v
	return t
}

// SetS__CustomExtensions updates property "CustomExtensions".
func (t AWS_ACMPCA_Certificate_Extensions) SetS__CustomExtensions(v ...cfz.Expression[AWS_ACMPCA_Certificate_CustomExtension]) AWS_ACMPCA_Certificate_Extensions {
	t.CustomExtensions = cfz.S(v...)
	return t
}

// SetSV__CustomExtensions updates property "CustomExtensions".
func (t AWS_ACMPCA_Certificate_Extensions) SetSV__CustomExtensions(v ...AWS_ACMPCA_Certificate_CustomExtension) AWS_ACMPCA_Certificate_Extensions {
	t.CustomExtensions = cfz.SV(v...)
	return t
}

// Set__ExtendedKeyUsage updates property "ExtendedKeyUsage".
func (t AWS_ACMPCA_Certificate_Extensions) Set__ExtendedKeyUsage(v cfz.ExpressionSlice[AWS_ACMPCA_Certificate_ExtendedKeyUsage]) AWS_ACMPCA_Certificate_Extensions {
	t.ExtendedKeyUsage = v
	return t
}

// SetS__ExtendedKeyUsage updates property "ExtendedKeyUsage".
func (t AWS_ACMPCA_Certificate_Extensions) SetS__ExtendedKeyUsage(v ...cfz.Expression[AWS_ACMPCA_Certificate_ExtendedKeyUsage]) AWS_ACMPCA_Certificate_Extensions {
	t.ExtendedKeyUsage = cfz.S(v...)
	return t
}

// SetSV__ExtendedKeyUsage updates property "ExtendedKeyUsage".
func (t AWS_ACMPCA_Certificate_Extensions) SetSV__ExtendedKeyUsage(v ...AWS_ACMPCA_Certificate_ExtendedKeyUsage) AWS_ACMPCA_Certificate_Extensions {
	t.ExtendedKeyUsage = cfz.SV(v...)
	return t
}

// Set__KeyUsage updates property "KeyUsage".
func (t AWS_ACMPCA_Certificate_Extensions) Set__KeyUsage(v cfz.Expression[AWS_ACMPCA_Certificate_KeyUsage]) AWS_ACMPCA_Certificate_Extensions {
	t.KeyUsage = v
	return t
}

// SetV__KeyUsage updates property "KeyUsage".
func (t AWS_ACMPCA_Certificate_Extensions) SetV__KeyUsage(v AWS_ACMPCA_Certificate_KeyUsage) AWS_ACMPCA_Certificate_Extensions {
	t.KeyUsage = cfz.V(v)
	return t
}

// Set__SubjectAlternativeNames updates property "SubjectAlternativeNames".
func (t AWS_ACMPCA_Certificate_Extensions) Set__SubjectAlternativeNames(v cfz.ExpressionSlice[AWS_ACMPCA_Certificate_GeneralName]) AWS_ACMPCA_Certificate_Extensions {
	t.SubjectAlternativeNames = v
	return t
}

// SetS__SubjectAlternativeNames updates property "SubjectAlternativeNames".
func (t AWS_ACMPCA_Certificate_Extensions) SetS__SubjectAlternativeNames(v ...cfz.Expression[AWS_ACMPCA_Certificate_GeneralName]) AWS_ACMPCA_Certificate_Extensions {
	t.SubjectAlternativeNames = cfz.S(v...)
	return t
}

// SetSV__SubjectAlternativeNames updates property "SubjectAlternativeNames".
func (t AWS_ACMPCA_Certificate_Extensions) SetSV__SubjectAlternativeNames(v ...AWS_ACMPCA_Certificate_GeneralName) AWS_ACMPCA_Certificate_Extensions {
	t.SubjectAlternativeNames = cfz.SV(v...)
	return t
}
