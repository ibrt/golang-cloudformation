// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_launchwizard

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_LaunchWizard_Deployment)(nil)
	_ cfz.Resource                   = (*AWS_LaunchWizard_Deployment)(nil)
)

const (
	// AWS_LaunchWizard_Deployment__Type is the CloudFormation type for AWS::LaunchWizard::Deployment.
	AWS_LaunchWizard_Deployment__Type = "AWS::LaunchWizard::Deployment"
)

var (
	// AWS_LaunchWizard_Deployment__AttributesMap reports all the CloudFormation attributes for AWS::LaunchWizard::Deployment.
	AWS_LaunchWizard_Deployment__AttributesMap = struct {
		Arn           string
		CreatedAt     string
		DeletedAt     string
		DeploymentId  string
		ResourceGroup string
		Status        string
	}{
		Arn:           "Arn",
		CreatedAt:     "CreatedAt",
		DeletedAt:     "DeletedAt",
		DeploymentId:  "DeploymentId",
		ResourceGroup: "ResourceGroup",
		Status:        "Status",
	}

	// AWS_LaunchWizard_Deployment__AttributesSlice reports all the CloudFormation attributes for AWS::LaunchWizard::Deployment.
	AWS_LaunchWizard_Deployment__AttributesSlice = []string{
		AWS_LaunchWizard_Deployment__AttributesMap.Arn,
		AWS_LaunchWizard_Deployment__AttributesMap.CreatedAt,
		AWS_LaunchWizard_Deployment__AttributesMap.DeletedAt,
		AWS_LaunchWizard_Deployment__AttributesMap.DeploymentId,
		AWS_LaunchWizard_Deployment__AttributesMap.ResourceGroup,
		AWS_LaunchWizard_Deployment__AttributesMap.Status,
	}
)

var (
	// AWS_LaunchWizard_Deployment__PropertiesMap reports all the CloudFormation properties for AWS::LaunchWizard::Deployment.
	AWS_LaunchWizard_Deployment__PropertiesMap = struct {
		DeploymentPatternName string
		Name                  string
		Specifications        string
		Tags                  string
		WorkloadName          string
	}{
		DeploymentPatternName: "DeploymentPatternName",
		Name:                  "Name",
		Specifications:        "Specifications",
		Tags:                  "Tags",
		WorkloadName:          "WorkloadName",
	}

	// AWS_LaunchWizard_Deployment__PropertiesSlice reports all the CloudFormation properties for AWS::LaunchWizard::Deployment.
	AWS_LaunchWizard_Deployment__PropertiesSlice = []string{
		AWS_LaunchWizard_Deployment__PropertiesMap.DeploymentPatternName,
		AWS_LaunchWizard_Deployment__PropertiesMap.Name,
		AWS_LaunchWizard_Deployment__PropertiesMap.Specifications,
		AWS_LaunchWizard_Deployment__PropertiesMap.Tags,
		AWS_LaunchWizard_Deployment__PropertiesMap.WorkloadName,
	}
)

// AWS_LaunchWizard_Deployment is a binding for AWS::LaunchWizard::Deployment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html
type AWS_LaunchWizard_Deployment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DeploymentPatternName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-deploymentpatternname
	DeploymentPatternName cfz.Expression[string] `json:"DeploymentPatternName,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Specifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-specifications
	Specifications cfz.ExpressionMap[string] `json:"Specifications,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-tags
	Tags cfz.ExpressionSlice[AWS_LaunchWizard_Deployment_Tags] `json:"Tags,omitempty"`

	// WorkloadName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-launchwizard-deployment.html#cfn-launchwizard-deployment-workloadname
	WorkloadName cfz.Expression[string] `json:"WorkloadName,omitempty"`
}

// New__AWS_LaunchWizard_Deployment initializes a new *AWS_LaunchWizard_Deployment.
func New__AWS_LaunchWizard_Deployment(logicalName string) *AWS_LaunchWizard_Deployment {
	return &AWS_LaunchWizard_Deployment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_LaunchWizard_Deployment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_LaunchWizard_Deployment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_LaunchWizard_Deployment) GetType() string {
	return AWS_LaunchWizard_Deployment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_LaunchWizard_Deployment) Set__LogicalName(v string) *AWS_LaunchWizard_Deployment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_LaunchWizard_Deployment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_LaunchWizard_Deployment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_LaunchWizard_Deployment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_LaunchWizard_Deployment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_LaunchWizard_Deployment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_LaunchWizard_Deployment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_LaunchWizard_Deployment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_LaunchWizard_Deployment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_LaunchWizard_Deployment) Set__RequestedOutputs(v []cfz.Output) *AWS_LaunchWizard_Deployment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_LaunchWizard_Deployment) Add__RequestedOutputs(v ...cfz.Output) *AWS_LaunchWizard_Deployment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DeploymentPatternName updates property "DeploymentPatternName".
func (t *AWS_LaunchWizard_Deployment) Set__DeploymentPatternName(v cfz.Expression[string]) *AWS_LaunchWizard_Deployment {
	t.DeploymentPatternName = v
	return t
}

// SetV__DeploymentPatternName updates property "DeploymentPatternName".
func (t *AWS_LaunchWizard_Deployment) SetV__DeploymentPatternName(v string) *AWS_LaunchWizard_Deployment {
	t.DeploymentPatternName = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_LaunchWizard_Deployment) Set__Name(v cfz.Expression[string]) *AWS_LaunchWizard_Deployment {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_LaunchWizard_Deployment) SetV__Name(v string) *AWS_LaunchWizard_Deployment {
	t.Name = cfz.V(v)
	return t
}

// Set__Specifications updates property "Specifications".
func (t *AWS_LaunchWizard_Deployment) Set__Specifications(v cfz.ExpressionMap[string]) *AWS_LaunchWizard_Deployment {
	t.Specifications = v
	return t
}

// SetM__Specifications updates property "Specifications".
func (t *AWS_LaunchWizard_Deployment) SetM__Specifications(v ...map[string]cfz.Expression[string]) *AWS_LaunchWizard_Deployment {
	t.Specifications = cfz.M(v...)
	return t
}

// SetMV__Specifications updates property "Specifications".
func (t *AWS_LaunchWizard_Deployment) SetMV__Specifications(v ...map[string]string) *AWS_LaunchWizard_Deployment {
	t.Specifications = cfz.MV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_LaunchWizard_Deployment) Set__Tags(v cfz.ExpressionSlice[AWS_LaunchWizard_Deployment_Tags]) *AWS_LaunchWizard_Deployment {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_LaunchWizard_Deployment) SetS__Tags(v ...cfz.Expression[AWS_LaunchWizard_Deployment_Tags]) *AWS_LaunchWizard_Deployment {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_LaunchWizard_Deployment) SetSV__Tags(v ...AWS_LaunchWizard_Deployment_Tags) *AWS_LaunchWizard_Deployment {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__WorkloadName updates property "WorkloadName".
func (t *AWS_LaunchWizard_Deployment) Set__WorkloadName(v cfz.Expression[string]) *AWS_LaunchWizard_Deployment {
	t.WorkloadName = v
	return t
}

// SetV__WorkloadName updates property "WorkloadName".
func (t *AWS_LaunchWizard_Deployment) SetV__WorkloadName(v string) *AWS_LaunchWizard_Deployment {
	t.WorkloadName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_LaunchWizard_Deployment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_LaunchWizard_Deployment) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_LaunchWizard_Deployment__AttributesMap.Arn))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_LaunchWizard_Deployment) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_LaunchWizard_Deployment__AttributesMap.CreatedAt))
}

// GetAtt__DeletedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DeletedAt
func (t *AWS_LaunchWizard_Deployment) GetAtt__DeletedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_LaunchWizard_Deployment__AttributesMap.DeletedAt))
}

// GetAtt__DeploymentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DeploymentId
func (t *AWS_LaunchWizard_Deployment) GetAtt__DeploymentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_LaunchWizard_Deployment__AttributesMap.DeploymentId))
}

// GetAtt__ResourceGroup returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceGroup
func (t *AWS_LaunchWizard_Deployment) GetAtt__ResourceGroup() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_LaunchWizard_Deployment__AttributesMap.ResourceGroup))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_LaunchWizard_Deployment) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_LaunchWizard_Deployment__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_LaunchWizard_Deployment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_LaunchWizard_Deployment) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_LaunchWizard_Deployment) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DeletedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: DeletedAt
func (t *AWS_LaunchWizard_Deployment) GetConventionalOutputAtt__DeletedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDeletedAt", t.GetAtt__DeletedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DeploymentId returns a conventionally configured output for an attribute of this resource.
// Attribute: DeploymentId
func (t *AWS_LaunchWizard_Deployment) GetConventionalOutputAtt__DeploymentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDeploymentId", t.GetAtt__DeploymentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceGroup returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceGroup
func (t *AWS_LaunchWizard_Deployment) GetConventionalOutputAtt__ResourceGroup(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceGroup", t.GetAtt__ResourceGroup())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_LaunchWizard_Deployment) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_LaunchWizard_Deployment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_LaunchWizard_Deployment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_LaunchWizard_Deployment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
