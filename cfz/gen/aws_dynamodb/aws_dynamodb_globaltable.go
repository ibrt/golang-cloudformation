// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_dynamodb

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DynamoDB_GlobalTable)(nil)
	_ cfz.Resource                   = (*AWS_DynamoDB_GlobalTable)(nil)
)

const (
	// AWS_DynamoDB_GlobalTable__Type is the CloudFormation type for AWS::DynamoDB::GlobalTable.
	AWS_DynamoDB_GlobalTable__Type = "AWS::DynamoDB::GlobalTable"
)

var (
	// AWS_DynamoDB_GlobalTable__AttributesMap reports all the CloudFormation attributes for AWS::DynamoDB::GlobalTable.
	AWS_DynamoDB_GlobalTable__AttributesMap = struct {
		Arn       string
		StreamArn string
		TableId   string
	}{
		Arn:       "Arn",
		StreamArn: "StreamArn",
		TableId:   "TableId",
	}

	// AWS_DynamoDB_GlobalTable__AttributesSlice reports all the CloudFormation attributes for AWS::DynamoDB::GlobalTable.
	AWS_DynamoDB_GlobalTable__AttributesSlice = []string{
		AWS_DynamoDB_GlobalTable__AttributesMap.Arn,
		AWS_DynamoDB_GlobalTable__AttributesMap.StreamArn,
		AWS_DynamoDB_GlobalTable__AttributesMap.TableId,
	}
)

var (
	// AWS_DynamoDB_GlobalTable__PropertiesMap reports all the CloudFormation properties for AWS::DynamoDB::GlobalTable.
	AWS_DynamoDB_GlobalTable__PropertiesMap = struct {
		AttributeDefinitions               string
		BillingMode                        string
		GlobalSecondaryIndexes             string
		KeySchema                          string
		LocalSecondaryIndexes              string
		Replicas                           string
		SSESpecification                   string
		StreamSpecification                string
		TableName                          string
		TimeToLiveSpecification            string
		WarmThroughput                     string
		WriteOnDemandThroughputSettings    string
		WriteProvisionedThroughputSettings string
	}{
		AttributeDefinitions:               "AttributeDefinitions",
		BillingMode:                        "BillingMode",
		GlobalSecondaryIndexes:             "GlobalSecondaryIndexes",
		KeySchema:                          "KeySchema",
		LocalSecondaryIndexes:              "LocalSecondaryIndexes",
		Replicas:                           "Replicas",
		SSESpecification:                   "SSESpecification",
		StreamSpecification:                "StreamSpecification",
		TableName:                          "TableName",
		TimeToLiveSpecification:            "TimeToLiveSpecification",
		WarmThroughput:                     "WarmThroughput",
		WriteOnDemandThroughputSettings:    "WriteOnDemandThroughputSettings",
		WriteProvisionedThroughputSettings: "WriteProvisionedThroughputSettings",
	}

	// AWS_DynamoDB_GlobalTable__PropertiesSlice reports all the CloudFormation properties for AWS::DynamoDB::GlobalTable.
	AWS_DynamoDB_GlobalTable__PropertiesSlice = []string{
		AWS_DynamoDB_GlobalTable__PropertiesMap.AttributeDefinitions,
		AWS_DynamoDB_GlobalTable__PropertiesMap.BillingMode,
		AWS_DynamoDB_GlobalTable__PropertiesMap.GlobalSecondaryIndexes,
		AWS_DynamoDB_GlobalTable__PropertiesMap.KeySchema,
		AWS_DynamoDB_GlobalTable__PropertiesMap.LocalSecondaryIndexes,
		AWS_DynamoDB_GlobalTable__PropertiesMap.Replicas,
		AWS_DynamoDB_GlobalTable__PropertiesMap.SSESpecification,
		AWS_DynamoDB_GlobalTable__PropertiesMap.StreamSpecification,
		AWS_DynamoDB_GlobalTable__PropertiesMap.TableName,
		AWS_DynamoDB_GlobalTable__PropertiesMap.TimeToLiveSpecification,
		AWS_DynamoDB_GlobalTable__PropertiesMap.WarmThroughput,
		AWS_DynamoDB_GlobalTable__PropertiesMap.WriteOnDemandThroughputSettings,
		AWS_DynamoDB_GlobalTable__PropertiesMap.WriteProvisionedThroughputSettings,
	}
)

// AWS_DynamoDB_GlobalTable is a binding for AWS::DynamoDB::GlobalTable.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html
type AWS_DynamoDB_GlobalTable struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AttributeDefinitions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-attributedefinitions
	AttributeDefinitions cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_AttributeDefinition] `json:"AttributeDefinitions,omitempty"`

	// BillingMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-billingmode
	BillingMode cfz.Expression[string] `json:"BillingMode,omitempty"`

	// GlobalSecondaryIndexes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-globalsecondaryindexes
	GlobalSecondaryIndexes cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_GlobalSecondaryIndex] `json:"GlobalSecondaryIndexes,omitempty"`

	// KeySchema is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-keyschema
	KeySchema cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_KeySchema] `json:"KeySchema,omitempty"`

	// LocalSecondaryIndexes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-localsecondaryindexes
	LocalSecondaryIndexes cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_LocalSecondaryIndex] `json:"LocalSecondaryIndexes,omitempty"`

	// Replicas is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-replicas
	Replicas cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_ReplicaSpecification] `json:"Replicas,omitempty"`

	// SSESpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-ssespecification
	SSESpecification cfz.Expression[AWS_DynamoDB_GlobalTable_SSESpecification] `json:"SSESpecification,omitempty"`

	// StreamSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-streamspecification
	StreamSpecification cfz.Expression[AWS_DynamoDB_GlobalTable_StreamSpecification] `json:"StreamSpecification,omitempty"`

	// TableName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-tablename
	TableName cfz.Expression[string] `json:"TableName,omitempty"`

	// TimeToLiveSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-timetolivespecification
	TimeToLiveSpecification cfz.Expression[AWS_DynamoDB_GlobalTable_TimeToLiveSpecification] `json:"TimeToLiveSpecification,omitempty"`

	// WarmThroughput is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-warmthroughput
	WarmThroughput cfz.Expression[AWS_DynamoDB_GlobalTable_WarmThroughput] `json:"WarmThroughput,omitempty"`

	// WriteOnDemandThroughputSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-writeondemandthroughputsettings
	WriteOnDemandThroughputSettings cfz.Expression[AWS_DynamoDB_GlobalTable_WriteOnDemandThroughputSettings] `json:"WriteOnDemandThroughputSettings,omitempty"`

	// WriteProvisionedThroughputSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-globaltable.html#cfn-dynamodb-globaltable-writeprovisionedthroughputsettings
	WriteProvisionedThroughputSettings cfz.Expression[AWS_DynamoDB_GlobalTable_WriteProvisionedThroughputSettings] `json:"WriteProvisionedThroughputSettings,omitempty"`
}

// New__AWS_DynamoDB_GlobalTable initializes a new *AWS_DynamoDB_GlobalTable.
func New__AWS_DynamoDB_GlobalTable(logicalName string) *AWS_DynamoDB_GlobalTable {
	return &AWS_DynamoDB_GlobalTable{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DynamoDB_GlobalTable) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DynamoDB_GlobalTable) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DynamoDB_GlobalTable) GetType() string {
	return AWS_DynamoDB_GlobalTable__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DynamoDB_GlobalTable) Set__LogicalName(v string) *AWS_DynamoDB_GlobalTable {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DynamoDB_GlobalTable) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DynamoDB_GlobalTable {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DynamoDB_GlobalTable) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DynamoDB_GlobalTable {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DynamoDB_GlobalTable) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DynamoDB_GlobalTable {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DynamoDB_GlobalTable) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DynamoDB_GlobalTable {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DynamoDB_GlobalTable) Set__RequestedOutputs(v []cfz.Output) *AWS_DynamoDB_GlobalTable {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DynamoDB_GlobalTable) Add__RequestedOutputs(v ...cfz.Output) *AWS_DynamoDB_GlobalTable {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AttributeDefinitions updates property "AttributeDefinitions".
func (t *AWS_DynamoDB_GlobalTable) Set__AttributeDefinitions(v cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_AttributeDefinition]) *AWS_DynamoDB_GlobalTable {
	t.AttributeDefinitions = v
	return t
}

// SetS__AttributeDefinitions updates property "AttributeDefinitions".
func (t *AWS_DynamoDB_GlobalTable) SetS__AttributeDefinitions(v ...cfz.Expression[AWS_DynamoDB_GlobalTable_AttributeDefinition]) *AWS_DynamoDB_GlobalTable {
	t.AttributeDefinitions = cfz.S(v...)
	return t
}

// SetSV__AttributeDefinitions updates property "AttributeDefinitions".
func (t *AWS_DynamoDB_GlobalTable) SetSV__AttributeDefinitions(v ...AWS_DynamoDB_GlobalTable_AttributeDefinition) *AWS_DynamoDB_GlobalTable {
	t.AttributeDefinitions = cfz.SV(v...)
	return t
}

// Set__BillingMode updates property "BillingMode".
func (t *AWS_DynamoDB_GlobalTable) Set__BillingMode(v cfz.Expression[string]) *AWS_DynamoDB_GlobalTable {
	t.BillingMode = v
	return t
}

// SetV__BillingMode updates property "BillingMode".
func (t *AWS_DynamoDB_GlobalTable) SetV__BillingMode(v string) *AWS_DynamoDB_GlobalTable {
	t.BillingMode = cfz.V(v)
	return t
}

// Set__GlobalSecondaryIndexes updates property "GlobalSecondaryIndexes".
func (t *AWS_DynamoDB_GlobalTable) Set__GlobalSecondaryIndexes(v cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_GlobalSecondaryIndex]) *AWS_DynamoDB_GlobalTable {
	t.GlobalSecondaryIndexes = v
	return t
}

// SetS__GlobalSecondaryIndexes updates property "GlobalSecondaryIndexes".
func (t *AWS_DynamoDB_GlobalTable) SetS__GlobalSecondaryIndexes(v ...cfz.Expression[AWS_DynamoDB_GlobalTable_GlobalSecondaryIndex]) *AWS_DynamoDB_GlobalTable {
	t.GlobalSecondaryIndexes = cfz.S(v...)
	return t
}

// SetSV__GlobalSecondaryIndexes updates property "GlobalSecondaryIndexes".
func (t *AWS_DynamoDB_GlobalTable) SetSV__GlobalSecondaryIndexes(v ...AWS_DynamoDB_GlobalTable_GlobalSecondaryIndex) *AWS_DynamoDB_GlobalTable {
	t.GlobalSecondaryIndexes = cfz.SV(v...)
	return t
}

// Set__KeySchema updates property "KeySchema".
func (t *AWS_DynamoDB_GlobalTable) Set__KeySchema(v cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_KeySchema]) *AWS_DynamoDB_GlobalTable {
	t.KeySchema = v
	return t
}

// SetS__KeySchema updates property "KeySchema".
func (t *AWS_DynamoDB_GlobalTable) SetS__KeySchema(v ...cfz.Expression[AWS_DynamoDB_GlobalTable_KeySchema]) *AWS_DynamoDB_GlobalTable {
	t.KeySchema = cfz.S(v...)
	return t
}

// SetSV__KeySchema updates property "KeySchema".
func (t *AWS_DynamoDB_GlobalTable) SetSV__KeySchema(v ...AWS_DynamoDB_GlobalTable_KeySchema) *AWS_DynamoDB_GlobalTable {
	t.KeySchema = cfz.SV(v...)
	return t
}

// Set__LocalSecondaryIndexes updates property "LocalSecondaryIndexes".
func (t *AWS_DynamoDB_GlobalTable) Set__LocalSecondaryIndexes(v cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_LocalSecondaryIndex]) *AWS_DynamoDB_GlobalTable {
	t.LocalSecondaryIndexes = v
	return t
}

// SetS__LocalSecondaryIndexes updates property "LocalSecondaryIndexes".
func (t *AWS_DynamoDB_GlobalTable) SetS__LocalSecondaryIndexes(v ...cfz.Expression[AWS_DynamoDB_GlobalTable_LocalSecondaryIndex]) *AWS_DynamoDB_GlobalTable {
	t.LocalSecondaryIndexes = cfz.S(v...)
	return t
}

// SetSV__LocalSecondaryIndexes updates property "LocalSecondaryIndexes".
func (t *AWS_DynamoDB_GlobalTable) SetSV__LocalSecondaryIndexes(v ...AWS_DynamoDB_GlobalTable_LocalSecondaryIndex) *AWS_DynamoDB_GlobalTable {
	t.LocalSecondaryIndexes = cfz.SV(v...)
	return t
}

// Set__Replicas updates property "Replicas".
func (t *AWS_DynamoDB_GlobalTable) Set__Replicas(v cfz.ExpressionSlice[AWS_DynamoDB_GlobalTable_ReplicaSpecification]) *AWS_DynamoDB_GlobalTable {
	t.Replicas = v
	return t
}

// SetS__Replicas updates property "Replicas".
func (t *AWS_DynamoDB_GlobalTable) SetS__Replicas(v ...cfz.Expression[AWS_DynamoDB_GlobalTable_ReplicaSpecification]) *AWS_DynamoDB_GlobalTable {
	t.Replicas = cfz.S(v...)
	return t
}

// SetSV__Replicas updates property "Replicas".
func (t *AWS_DynamoDB_GlobalTable) SetSV__Replicas(v ...AWS_DynamoDB_GlobalTable_ReplicaSpecification) *AWS_DynamoDB_GlobalTable {
	t.Replicas = cfz.SV(v...)
	return t
}

// Set__SSESpecification updates property "SSESpecification".
func (t *AWS_DynamoDB_GlobalTable) Set__SSESpecification(v cfz.Expression[AWS_DynamoDB_GlobalTable_SSESpecification]) *AWS_DynamoDB_GlobalTable {
	t.SSESpecification = v
	return t
}

// SetV__SSESpecification updates property "SSESpecification".
func (t *AWS_DynamoDB_GlobalTable) SetV__SSESpecification(v AWS_DynamoDB_GlobalTable_SSESpecification) *AWS_DynamoDB_GlobalTable {
	t.SSESpecification = cfz.V(v)
	return t
}

// Set__StreamSpecification updates property "StreamSpecification".
func (t *AWS_DynamoDB_GlobalTable) Set__StreamSpecification(v cfz.Expression[AWS_DynamoDB_GlobalTable_StreamSpecification]) *AWS_DynamoDB_GlobalTable {
	t.StreamSpecification = v
	return t
}

// SetV__StreamSpecification updates property "StreamSpecification".
func (t *AWS_DynamoDB_GlobalTable) SetV__StreamSpecification(v AWS_DynamoDB_GlobalTable_StreamSpecification) *AWS_DynamoDB_GlobalTable {
	t.StreamSpecification = cfz.V(v)
	return t
}

// Set__TableName updates property "TableName".
func (t *AWS_DynamoDB_GlobalTable) Set__TableName(v cfz.Expression[string]) *AWS_DynamoDB_GlobalTable {
	t.TableName = v
	return t
}

// SetV__TableName updates property "TableName".
func (t *AWS_DynamoDB_GlobalTable) SetV__TableName(v string) *AWS_DynamoDB_GlobalTable {
	t.TableName = cfz.V(v)
	return t
}

// Set__TimeToLiveSpecification updates property "TimeToLiveSpecification".
func (t *AWS_DynamoDB_GlobalTable) Set__TimeToLiveSpecification(v cfz.Expression[AWS_DynamoDB_GlobalTable_TimeToLiveSpecification]) *AWS_DynamoDB_GlobalTable {
	t.TimeToLiveSpecification = v
	return t
}

// SetV__TimeToLiveSpecification updates property "TimeToLiveSpecification".
func (t *AWS_DynamoDB_GlobalTable) SetV__TimeToLiveSpecification(v AWS_DynamoDB_GlobalTable_TimeToLiveSpecification) *AWS_DynamoDB_GlobalTable {
	t.TimeToLiveSpecification = cfz.V(v)
	return t
}

// Set__WarmThroughput updates property "WarmThroughput".
func (t *AWS_DynamoDB_GlobalTable) Set__WarmThroughput(v cfz.Expression[AWS_DynamoDB_GlobalTable_WarmThroughput]) *AWS_DynamoDB_GlobalTable {
	t.WarmThroughput = v
	return t
}

// SetV__WarmThroughput updates property "WarmThroughput".
func (t *AWS_DynamoDB_GlobalTable) SetV__WarmThroughput(v AWS_DynamoDB_GlobalTable_WarmThroughput) *AWS_DynamoDB_GlobalTable {
	t.WarmThroughput = cfz.V(v)
	return t
}

// Set__WriteOnDemandThroughputSettings updates property "WriteOnDemandThroughputSettings".
func (t *AWS_DynamoDB_GlobalTable) Set__WriteOnDemandThroughputSettings(v cfz.Expression[AWS_DynamoDB_GlobalTable_WriteOnDemandThroughputSettings]) *AWS_DynamoDB_GlobalTable {
	t.WriteOnDemandThroughputSettings = v
	return t
}

// SetV__WriteOnDemandThroughputSettings updates property "WriteOnDemandThroughputSettings".
func (t *AWS_DynamoDB_GlobalTable) SetV__WriteOnDemandThroughputSettings(v AWS_DynamoDB_GlobalTable_WriteOnDemandThroughputSettings) *AWS_DynamoDB_GlobalTable {
	t.WriteOnDemandThroughputSettings = cfz.V(v)
	return t
}

// Set__WriteProvisionedThroughputSettings updates property "WriteProvisionedThroughputSettings".
func (t *AWS_DynamoDB_GlobalTable) Set__WriteProvisionedThroughputSettings(v cfz.Expression[AWS_DynamoDB_GlobalTable_WriteProvisionedThroughputSettings]) *AWS_DynamoDB_GlobalTable {
	t.WriteProvisionedThroughputSettings = v
	return t
}

// SetV__WriteProvisionedThroughputSettings updates property "WriteProvisionedThroughputSettings".
func (t *AWS_DynamoDB_GlobalTable) SetV__WriteProvisionedThroughputSettings(v AWS_DynamoDB_GlobalTable_WriteProvisionedThroughputSettings) *AWS_DynamoDB_GlobalTable {
	t.WriteProvisionedThroughputSettings = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DynamoDB_GlobalTable) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_DynamoDB_GlobalTable) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DynamoDB_GlobalTable__AttributesMap.Arn))
}

// GetAtt__StreamArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StreamArn
func (t *AWS_DynamoDB_GlobalTable) GetAtt__StreamArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DynamoDB_GlobalTable__AttributesMap.StreamArn))
}

// GetAtt__TableId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: TableId
func (t *AWS_DynamoDB_GlobalTable) GetAtt__TableId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DynamoDB_GlobalTable__AttributesMap.TableId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DynamoDB_GlobalTable) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_DynamoDB_GlobalTable) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StreamArn returns a conventionally configured output for an attribute of this resource.
// Attribute: StreamArn
func (t *AWS_DynamoDB_GlobalTable) GetConventionalOutputAtt__StreamArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStreamArn", t.GetAtt__StreamArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__TableId returns a conventionally configured output for an attribute of this resource.
// Attribute: TableId
func (t *AWS_DynamoDB_GlobalTable) GetConventionalOutputAtt__TableId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTableId", t.GetAtt__TableId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DynamoDB_GlobalTable) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DynamoDB_GlobalTable

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DynamoDB_GlobalTable) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
