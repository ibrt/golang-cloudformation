// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_dynamodb

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DynamoDB_Table)(nil)
	_ cfz.Resource                   = (*AWS_DynamoDB_Table)(nil)
)

const (
	// AWS_DynamoDB_Table__Type is the CloudFormation type for AWS::DynamoDB::Table.
	AWS_DynamoDB_Table__Type = "AWS::DynamoDB::Table"
)

var (
	// AWS_DynamoDB_Table__AttributesMap reports all the CloudFormation attributes for AWS::DynamoDB::Table.
	AWS_DynamoDB_Table__AttributesMap = struct {
		Arn       string
		StreamArn string
	}{
		Arn:       "Arn",
		StreamArn: "StreamArn",
	}

	// AWS_DynamoDB_Table__AttributesSlice reports all the CloudFormation attributes for AWS::DynamoDB::Table.
	AWS_DynamoDB_Table__AttributesSlice = []string{
		AWS_DynamoDB_Table__AttributesMap.Arn,
		AWS_DynamoDB_Table__AttributesMap.StreamArn,
	}
)

var (
	// AWS_DynamoDB_Table__PropertiesMap reports all the CloudFormation properties for AWS::DynamoDB::Table.
	AWS_DynamoDB_Table__PropertiesMap = struct {
		AttributeDefinitions             string
		BillingMode                      string
		ContributorInsightsSpecification string
		DeletionProtectionEnabled        string
		GlobalSecondaryIndexes           string
		ImportSourceSpecification        string
		KeySchema                        string
		KinesisStreamSpecification       string
		LocalSecondaryIndexes            string
		OnDemandThroughput               string
		PointInTimeRecoverySpecification string
		ProvisionedThroughput            string
		ResourcePolicy                   string
		SSESpecification                 string
		StreamSpecification              string
		TableClass                       string
		TableName                        string
		Tags                             string
		TimeToLiveSpecification          string
		WarmThroughput                   string
	}{
		AttributeDefinitions:             "AttributeDefinitions",
		BillingMode:                      "BillingMode",
		ContributorInsightsSpecification: "ContributorInsightsSpecification",
		DeletionProtectionEnabled:        "DeletionProtectionEnabled",
		GlobalSecondaryIndexes:           "GlobalSecondaryIndexes",
		ImportSourceSpecification:        "ImportSourceSpecification",
		KeySchema:                        "KeySchema",
		KinesisStreamSpecification:       "KinesisStreamSpecification",
		LocalSecondaryIndexes:            "LocalSecondaryIndexes",
		OnDemandThroughput:               "OnDemandThroughput",
		PointInTimeRecoverySpecification: "PointInTimeRecoverySpecification",
		ProvisionedThroughput:            "ProvisionedThroughput",
		ResourcePolicy:                   "ResourcePolicy",
		SSESpecification:                 "SSESpecification",
		StreamSpecification:              "StreamSpecification",
		TableClass:                       "TableClass",
		TableName:                        "TableName",
		Tags:                             "Tags",
		TimeToLiveSpecification:          "TimeToLiveSpecification",
		WarmThroughput:                   "WarmThroughput",
	}

	// AWS_DynamoDB_Table__PropertiesSlice reports all the CloudFormation properties for AWS::DynamoDB::Table.
	AWS_DynamoDB_Table__PropertiesSlice = []string{
		AWS_DynamoDB_Table__PropertiesMap.AttributeDefinitions,
		AWS_DynamoDB_Table__PropertiesMap.BillingMode,
		AWS_DynamoDB_Table__PropertiesMap.ContributorInsightsSpecification,
		AWS_DynamoDB_Table__PropertiesMap.DeletionProtectionEnabled,
		AWS_DynamoDB_Table__PropertiesMap.GlobalSecondaryIndexes,
		AWS_DynamoDB_Table__PropertiesMap.ImportSourceSpecification,
		AWS_DynamoDB_Table__PropertiesMap.KeySchema,
		AWS_DynamoDB_Table__PropertiesMap.KinesisStreamSpecification,
		AWS_DynamoDB_Table__PropertiesMap.LocalSecondaryIndexes,
		AWS_DynamoDB_Table__PropertiesMap.OnDemandThroughput,
		AWS_DynamoDB_Table__PropertiesMap.PointInTimeRecoverySpecification,
		AWS_DynamoDB_Table__PropertiesMap.ProvisionedThroughput,
		AWS_DynamoDB_Table__PropertiesMap.ResourcePolicy,
		AWS_DynamoDB_Table__PropertiesMap.SSESpecification,
		AWS_DynamoDB_Table__PropertiesMap.StreamSpecification,
		AWS_DynamoDB_Table__PropertiesMap.TableClass,
		AWS_DynamoDB_Table__PropertiesMap.TableName,
		AWS_DynamoDB_Table__PropertiesMap.Tags,
		AWS_DynamoDB_Table__PropertiesMap.TimeToLiveSpecification,
		AWS_DynamoDB_Table__PropertiesMap.WarmThroughput,
	}
)

// AWS_DynamoDB_Table is a binding for AWS::DynamoDB::Table.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html
type AWS_DynamoDB_Table struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AttributeDefinitions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-attributedefinitions
	AttributeDefinitions cfz.ExpressionSlice[AWS_DynamoDB_Table_AttributeDefinition] `json:"AttributeDefinitions,omitempty"`

	// BillingMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-billingmode
	BillingMode cfz.Expression[string] `json:"BillingMode,omitempty"`

	// ContributorInsightsSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-contributorinsightsspecification
	ContributorInsightsSpecification cfz.Expression[AWS_DynamoDB_Table_ContributorInsightsSpecification] `json:"ContributorInsightsSpecification,omitempty"`

	// DeletionProtectionEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-deletionprotectionenabled
	DeletionProtectionEnabled cfz.Expression[bool] `json:"DeletionProtectionEnabled,omitempty"`

	// GlobalSecondaryIndexes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-globalsecondaryindexes
	GlobalSecondaryIndexes cfz.ExpressionSlice[AWS_DynamoDB_Table_GlobalSecondaryIndex] `json:"GlobalSecondaryIndexes,omitempty"`

	// ImportSourceSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-importsourcespecification
	ImportSourceSpecification cfz.Expression[AWS_DynamoDB_Table_ImportSourceSpecification] `json:"ImportSourceSpecification,omitempty"`

	// KeySchema is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-keyschema
	KeySchema cfz.ExpressionSlice[AWS_DynamoDB_Table_KeySchema] `json:"KeySchema,omitempty"`

	// KinesisStreamSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-kinesisstreamspecification
	KinesisStreamSpecification cfz.Expression[AWS_DynamoDB_Table_KinesisStreamSpecification] `json:"KinesisStreamSpecification,omitempty"`

	// LocalSecondaryIndexes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-localsecondaryindexes
	LocalSecondaryIndexes cfz.ExpressionSlice[AWS_DynamoDB_Table_LocalSecondaryIndex] `json:"LocalSecondaryIndexes,omitempty"`

	// OnDemandThroughput is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-ondemandthroughput
	OnDemandThroughput cfz.Expression[AWS_DynamoDB_Table_OnDemandThroughput] `json:"OnDemandThroughput,omitempty"`

	// PointInTimeRecoverySpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-pointintimerecoveryspecification
	PointInTimeRecoverySpecification cfz.Expression[AWS_DynamoDB_Table_PointInTimeRecoverySpecification] `json:"PointInTimeRecoverySpecification,omitempty"`

	// ProvisionedThroughput is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-provisionedthroughput
	ProvisionedThroughput cfz.Expression[AWS_DynamoDB_Table_ProvisionedThroughput] `json:"ProvisionedThroughput,omitempty"`

	// ResourcePolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-resourcepolicy
	ResourcePolicy cfz.Expression[AWS_DynamoDB_Table_ResourcePolicy] `json:"ResourcePolicy,omitempty"`

	// SSESpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-ssespecification
	SSESpecification cfz.Expression[AWS_DynamoDB_Table_SSESpecification] `json:"SSESpecification,omitempty"`

	// StreamSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-streamspecification
	StreamSpecification cfz.Expression[AWS_DynamoDB_Table_StreamSpecification] `json:"StreamSpecification,omitempty"`

	// TableClass is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-tableclass
	TableClass cfz.Expression[string] `json:"TableClass,omitempty"`

	// TableName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-tablename
	TableName cfz.Expression[string] `json:"TableName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TimeToLiveSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-timetolivespecification
	TimeToLiveSpecification cfz.Expression[AWS_DynamoDB_Table_TimeToLiveSpecification] `json:"TimeToLiveSpecification,omitempty"`

	// WarmThroughput is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#cfn-dynamodb-table-warmthroughput
	WarmThroughput cfz.Expression[AWS_DynamoDB_Table_WarmThroughput] `json:"WarmThroughput,omitempty"`
}

// New__AWS_DynamoDB_Table initializes a new *AWS_DynamoDB_Table.
func New__AWS_DynamoDB_Table(logicalName string) *AWS_DynamoDB_Table {
	return &AWS_DynamoDB_Table{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DynamoDB_Table) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DynamoDB_Table) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DynamoDB_Table) GetType() string {
	return AWS_DynamoDB_Table__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DynamoDB_Table) Set__LogicalName(v string) *AWS_DynamoDB_Table {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DynamoDB_Table) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DynamoDB_Table {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DynamoDB_Table) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DynamoDB_Table {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DynamoDB_Table) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DynamoDB_Table {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DynamoDB_Table) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DynamoDB_Table {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DynamoDB_Table) Set__RequestedOutputs(v []cfz.Output) *AWS_DynamoDB_Table {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DynamoDB_Table) Add__RequestedOutputs(v ...cfz.Output) *AWS_DynamoDB_Table {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AttributeDefinitions updates property "AttributeDefinitions".
func (t *AWS_DynamoDB_Table) Set__AttributeDefinitions(v cfz.ExpressionSlice[AWS_DynamoDB_Table_AttributeDefinition]) *AWS_DynamoDB_Table {
	t.AttributeDefinitions = v
	return t
}

// SetS__AttributeDefinitions updates property "AttributeDefinitions".
func (t *AWS_DynamoDB_Table) SetS__AttributeDefinitions(v ...cfz.Expression[AWS_DynamoDB_Table_AttributeDefinition]) *AWS_DynamoDB_Table {
	t.AttributeDefinitions = cfz.S(v...)
	return t
}

// SetSV__AttributeDefinitions updates property "AttributeDefinitions".
func (t *AWS_DynamoDB_Table) SetSV__AttributeDefinitions(v ...AWS_DynamoDB_Table_AttributeDefinition) *AWS_DynamoDB_Table {
	t.AttributeDefinitions = cfz.SV(v...)
	return t
}

// Set__BillingMode updates property "BillingMode".
func (t *AWS_DynamoDB_Table) Set__BillingMode(v cfz.Expression[string]) *AWS_DynamoDB_Table {
	t.BillingMode = v
	return t
}

// SetV__BillingMode updates property "BillingMode".
func (t *AWS_DynamoDB_Table) SetV__BillingMode(v string) *AWS_DynamoDB_Table {
	t.BillingMode = cfz.V(v)
	return t
}

// Set__ContributorInsightsSpecification updates property "ContributorInsightsSpecification".
func (t *AWS_DynamoDB_Table) Set__ContributorInsightsSpecification(v cfz.Expression[AWS_DynamoDB_Table_ContributorInsightsSpecification]) *AWS_DynamoDB_Table {
	t.ContributorInsightsSpecification = v
	return t
}

// SetV__ContributorInsightsSpecification updates property "ContributorInsightsSpecification".
func (t *AWS_DynamoDB_Table) SetV__ContributorInsightsSpecification(v AWS_DynamoDB_Table_ContributorInsightsSpecification) *AWS_DynamoDB_Table {
	t.ContributorInsightsSpecification = cfz.V(v)
	return t
}

// Set__DeletionProtectionEnabled updates property "DeletionProtectionEnabled".
func (t *AWS_DynamoDB_Table) Set__DeletionProtectionEnabled(v cfz.Expression[bool]) *AWS_DynamoDB_Table {
	t.DeletionProtectionEnabled = v
	return t
}

// SetV__DeletionProtectionEnabled updates property "DeletionProtectionEnabled".
func (t *AWS_DynamoDB_Table) SetV__DeletionProtectionEnabled(v bool) *AWS_DynamoDB_Table {
	t.DeletionProtectionEnabled = cfz.V(v)
	return t
}

// Set__GlobalSecondaryIndexes updates property "GlobalSecondaryIndexes".
func (t *AWS_DynamoDB_Table) Set__GlobalSecondaryIndexes(v cfz.ExpressionSlice[AWS_DynamoDB_Table_GlobalSecondaryIndex]) *AWS_DynamoDB_Table {
	t.GlobalSecondaryIndexes = v
	return t
}

// SetS__GlobalSecondaryIndexes updates property "GlobalSecondaryIndexes".
func (t *AWS_DynamoDB_Table) SetS__GlobalSecondaryIndexes(v ...cfz.Expression[AWS_DynamoDB_Table_GlobalSecondaryIndex]) *AWS_DynamoDB_Table {
	t.GlobalSecondaryIndexes = cfz.S(v...)
	return t
}

// SetSV__GlobalSecondaryIndexes updates property "GlobalSecondaryIndexes".
func (t *AWS_DynamoDB_Table) SetSV__GlobalSecondaryIndexes(v ...AWS_DynamoDB_Table_GlobalSecondaryIndex) *AWS_DynamoDB_Table {
	t.GlobalSecondaryIndexes = cfz.SV(v...)
	return t
}

// Set__ImportSourceSpecification updates property "ImportSourceSpecification".
func (t *AWS_DynamoDB_Table) Set__ImportSourceSpecification(v cfz.Expression[AWS_DynamoDB_Table_ImportSourceSpecification]) *AWS_DynamoDB_Table {
	t.ImportSourceSpecification = v
	return t
}

// SetV__ImportSourceSpecification updates property "ImportSourceSpecification".
func (t *AWS_DynamoDB_Table) SetV__ImportSourceSpecification(v AWS_DynamoDB_Table_ImportSourceSpecification) *AWS_DynamoDB_Table {
	t.ImportSourceSpecification = cfz.V(v)
	return t
}

// Set__KeySchema updates property "KeySchema".
func (t *AWS_DynamoDB_Table) Set__KeySchema(v cfz.ExpressionSlice[AWS_DynamoDB_Table_KeySchema]) *AWS_DynamoDB_Table {
	t.KeySchema = v
	return t
}

// SetS__KeySchema updates property "KeySchema".
func (t *AWS_DynamoDB_Table) SetS__KeySchema(v ...cfz.Expression[AWS_DynamoDB_Table_KeySchema]) *AWS_DynamoDB_Table {
	t.KeySchema = cfz.S(v...)
	return t
}

// SetSV__KeySchema updates property "KeySchema".
func (t *AWS_DynamoDB_Table) SetSV__KeySchema(v ...AWS_DynamoDB_Table_KeySchema) *AWS_DynamoDB_Table {
	t.KeySchema = cfz.SV(v...)
	return t
}

// Set__KinesisStreamSpecification updates property "KinesisStreamSpecification".
func (t *AWS_DynamoDB_Table) Set__KinesisStreamSpecification(v cfz.Expression[AWS_DynamoDB_Table_KinesisStreamSpecification]) *AWS_DynamoDB_Table {
	t.KinesisStreamSpecification = v
	return t
}

// SetV__KinesisStreamSpecification updates property "KinesisStreamSpecification".
func (t *AWS_DynamoDB_Table) SetV__KinesisStreamSpecification(v AWS_DynamoDB_Table_KinesisStreamSpecification) *AWS_DynamoDB_Table {
	t.KinesisStreamSpecification = cfz.V(v)
	return t
}

// Set__LocalSecondaryIndexes updates property "LocalSecondaryIndexes".
func (t *AWS_DynamoDB_Table) Set__LocalSecondaryIndexes(v cfz.ExpressionSlice[AWS_DynamoDB_Table_LocalSecondaryIndex]) *AWS_DynamoDB_Table {
	t.LocalSecondaryIndexes = v
	return t
}

// SetS__LocalSecondaryIndexes updates property "LocalSecondaryIndexes".
func (t *AWS_DynamoDB_Table) SetS__LocalSecondaryIndexes(v ...cfz.Expression[AWS_DynamoDB_Table_LocalSecondaryIndex]) *AWS_DynamoDB_Table {
	t.LocalSecondaryIndexes = cfz.S(v...)
	return t
}

// SetSV__LocalSecondaryIndexes updates property "LocalSecondaryIndexes".
func (t *AWS_DynamoDB_Table) SetSV__LocalSecondaryIndexes(v ...AWS_DynamoDB_Table_LocalSecondaryIndex) *AWS_DynamoDB_Table {
	t.LocalSecondaryIndexes = cfz.SV(v...)
	return t
}

// Set__OnDemandThroughput updates property "OnDemandThroughput".
func (t *AWS_DynamoDB_Table) Set__OnDemandThroughput(v cfz.Expression[AWS_DynamoDB_Table_OnDemandThroughput]) *AWS_DynamoDB_Table {
	t.OnDemandThroughput = v
	return t
}

// SetV__OnDemandThroughput updates property "OnDemandThroughput".
func (t *AWS_DynamoDB_Table) SetV__OnDemandThroughput(v AWS_DynamoDB_Table_OnDemandThroughput) *AWS_DynamoDB_Table {
	t.OnDemandThroughput = cfz.V(v)
	return t
}

// Set__PointInTimeRecoverySpecification updates property "PointInTimeRecoverySpecification".
func (t *AWS_DynamoDB_Table) Set__PointInTimeRecoverySpecification(v cfz.Expression[AWS_DynamoDB_Table_PointInTimeRecoverySpecification]) *AWS_DynamoDB_Table {
	t.PointInTimeRecoverySpecification = v
	return t
}

// SetV__PointInTimeRecoverySpecification updates property "PointInTimeRecoverySpecification".
func (t *AWS_DynamoDB_Table) SetV__PointInTimeRecoverySpecification(v AWS_DynamoDB_Table_PointInTimeRecoverySpecification) *AWS_DynamoDB_Table {
	t.PointInTimeRecoverySpecification = cfz.V(v)
	return t
}

// Set__ProvisionedThroughput updates property "ProvisionedThroughput".
func (t *AWS_DynamoDB_Table) Set__ProvisionedThroughput(v cfz.Expression[AWS_DynamoDB_Table_ProvisionedThroughput]) *AWS_DynamoDB_Table {
	t.ProvisionedThroughput = v
	return t
}

// SetV__ProvisionedThroughput updates property "ProvisionedThroughput".
func (t *AWS_DynamoDB_Table) SetV__ProvisionedThroughput(v AWS_DynamoDB_Table_ProvisionedThroughput) *AWS_DynamoDB_Table {
	t.ProvisionedThroughput = cfz.V(v)
	return t
}

// Set__ResourcePolicy updates property "ResourcePolicy".
func (t *AWS_DynamoDB_Table) Set__ResourcePolicy(v cfz.Expression[AWS_DynamoDB_Table_ResourcePolicy]) *AWS_DynamoDB_Table {
	t.ResourcePolicy = v
	return t
}

// SetV__ResourcePolicy updates property "ResourcePolicy".
func (t *AWS_DynamoDB_Table) SetV__ResourcePolicy(v AWS_DynamoDB_Table_ResourcePolicy) *AWS_DynamoDB_Table {
	t.ResourcePolicy = cfz.V(v)
	return t
}

// Set__SSESpecification updates property "SSESpecification".
func (t *AWS_DynamoDB_Table) Set__SSESpecification(v cfz.Expression[AWS_DynamoDB_Table_SSESpecification]) *AWS_DynamoDB_Table {
	t.SSESpecification = v
	return t
}

// SetV__SSESpecification updates property "SSESpecification".
func (t *AWS_DynamoDB_Table) SetV__SSESpecification(v AWS_DynamoDB_Table_SSESpecification) *AWS_DynamoDB_Table {
	t.SSESpecification = cfz.V(v)
	return t
}

// Set__StreamSpecification updates property "StreamSpecification".
func (t *AWS_DynamoDB_Table) Set__StreamSpecification(v cfz.Expression[AWS_DynamoDB_Table_StreamSpecification]) *AWS_DynamoDB_Table {
	t.StreamSpecification = v
	return t
}

// SetV__StreamSpecification updates property "StreamSpecification".
func (t *AWS_DynamoDB_Table) SetV__StreamSpecification(v AWS_DynamoDB_Table_StreamSpecification) *AWS_DynamoDB_Table {
	t.StreamSpecification = cfz.V(v)
	return t
}

// Set__TableClass updates property "TableClass".
func (t *AWS_DynamoDB_Table) Set__TableClass(v cfz.Expression[string]) *AWS_DynamoDB_Table {
	t.TableClass = v
	return t
}

// SetV__TableClass updates property "TableClass".
func (t *AWS_DynamoDB_Table) SetV__TableClass(v string) *AWS_DynamoDB_Table {
	t.TableClass = cfz.V(v)
	return t
}

// Set__TableName updates property "TableName".
func (t *AWS_DynamoDB_Table) Set__TableName(v cfz.Expression[string]) *AWS_DynamoDB_Table {
	t.TableName = v
	return t
}

// SetV__TableName updates property "TableName".
func (t *AWS_DynamoDB_Table) SetV__TableName(v string) *AWS_DynamoDB_Table {
	t.TableName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_DynamoDB_Table) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_DynamoDB_Table {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_DynamoDB_Table) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_DynamoDB_Table {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_DynamoDB_Table) SetSV__Tags(v ...cfz.Tag) *AWS_DynamoDB_Table {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TimeToLiveSpecification updates property "TimeToLiveSpecification".
func (t *AWS_DynamoDB_Table) Set__TimeToLiveSpecification(v cfz.Expression[AWS_DynamoDB_Table_TimeToLiveSpecification]) *AWS_DynamoDB_Table {
	t.TimeToLiveSpecification = v
	return t
}

// SetV__TimeToLiveSpecification updates property "TimeToLiveSpecification".
func (t *AWS_DynamoDB_Table) SetV__TimeToLiveSpecification(v AWS_DynamoDB_Table_TimeToLiveSpecification) *AWS_DynamoDB_Table {
	t.TimeToLiveSpecification = cfz.V(v)
	return t
}

// Set__WarmThroughput updates property "WarmThroughput".
func (t *AWS_DynamoDB_Table) Set__WarmThroughput(v cfz.Expression[AWS_DynamoDB_Table_WarmThroughput]) *AWS_DynamoDB_Table {
	t.WarmThroughput = v
	return t
}

// SetV__WarmThroughput updates property "WarmThroughput".
func (t *AWS_DynamoDB_Table) SetV__WarmThroughput(v AWS_DynamoDB_Table_WarmThroughput) *AWS_DynamoDB_Table {
	t.WarmThroughput = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DynamoDB_Table) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_DynamoDB_Table) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DynamoDB_Table__AttributesMap.Arn))
}

// GetAtt__StreamArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StreamArn
func (t *AWS_DynamoDB_Table) GetAtt__StreamArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DynamoDB_Table__AttributesMap.StreamArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DynamoDB_Table) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_DynamoDB_Table) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StreamArn returns a conventionally configured output for an attribute of this resource.
// Attribute: StreamArn
func (t *AWS_DynamoDB_Table) GetConventionalOutputAtt__StreamArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStreamArn", t.GetAtt__StreamArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DynamoDB_Table) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DynamoDB_Table

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DynamoDB_Table) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
