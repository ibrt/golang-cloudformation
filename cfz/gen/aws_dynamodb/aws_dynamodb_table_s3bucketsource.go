// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_dynamodb

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DynamoDB_Table_S3BucketSource__Type is the CloudFormation type for AWS::DynamoDB::Table.S3BucketSource.
	AWS_DynamoDB_Table_S3BucketSource__Type = "AWS::DynamoDB::Table.S3BucketSource"
)

var (
	// AWS_DynamoDB_Table_S3BucketSource__PropertiesMap reports all the CloudFormation properties for AWS::DynamoDB::Table.S3BucketSource.
	AWS_DynamoDB_Table_S3BucketSource__PropertiesMap = struct {
		S3Bucket      string
		S3BucketOwner string
		S3KeyPrefix   string
	}{
		S3Bucket:      "S3Bucket",
		S3BucketOwner: "S3BucketOwner",
		S3KeyPrefix:   "S3KeyPrefix",
	}

	// AWS_DynamoDB_Table_S3BucketSource__PropertiesSlice reports all the CloudFormation properties for AWS::DynamoDB::Table.S3BucketSource.
	AWS_DynamoDB_Table_S3BucketSource__PropertiesSlice = []string{
		AWS_DynamoDB_Table_S3BucketSource__PropertiesMap.S3Bucket,
		AWS_DynamoDB_Table_S3BucketSource__PropertiesMap.S3BucketOwner,
		AWS_DynamoDB_Table_S3BucketSource__PropertiesMap.S3KeyPrefix,
	}
)

// AWS_DynamoDB_Table_S3BucketSource is a binding for AWS::DynamoDB::Table.S3BucketSource.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-table-s3bucketsource.html
type AWS_DynamoDB_Table_S3BucketSource struct {
	// S3Bucket is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-table-s3bucketsource.html#cfn-dynamodb-table-s3bucketsource-s3bucket
	S3Bucket cfz.Expression[string] `json:"S3Bucket,omitempty"`

	// S3BucketOwner is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-table-s3bucketsource.html#cfn-dynamodb-table-s3bucketsource-s3bucketowner
	S3BucketOwner cfz.Expression[string] `json:"S3BucketOwner,omitempty"`

	// S3KeyPrefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-table-s3bucketsource.html#cfn-dynamodb-table-s3bucketsource-s3keyprefix
	S3KeyPrefix cfz.Expression[string] `json:"S3KeyPrefix,omitempty"`
}

// New__AWS_DynamoDB_Table_S3BucketSource initializes a new AWS_DynamoDB_Table_S3BucketSource.
func New__AWS_DynamoDB_Table_S3BucketSource() AWS_DynamoDB_Table_S3BucketSource {
	return AWS_DynamoDB_Table_S3BucketSource{}
}

// GetType returns the CloudFormation type.
func (AWS_DynamoDB_Table_S3BucketSource) GetType() string {
	return AWS_DynamoDB_Table_S3BucketSource__Type
}

// Set__S3Bucket updates property "S3Bucket".
func (t AWS_DynamoDB_Table_S3BucketSource) Set__S3Bucket(v cfz.Expression[string]) AWS_DynamoDB_Table_S3BucketSource {
	t.S3Bucket = v
	return t
}

// SetV__S3Bucket updates property "S3Bucket".
func (t AWS_DynamoDB_Table_S3BucketSource) SetV__S3Bucket(v string) AWS_DynamoDB_Table_S3BucketSource {
	t.S3Bucket = cfz.V(v)
	return t
}

// Set__S3BucketOwner updates property "S3BucketOwner".
func (t AWS_DynamoDB_Table_S3BucketSource) Set__S3BucketOwner(v cfz.Expression[string]) AWS_DynamoDB_Table_S3BucketSource {
	t.S3BucketOwner = v
	return t
}

// SetV__S3BucketOwner updates property "S3BucketOwner".
func (t AWS_DynamoDB_Table_S3BucketSource) SetV__S3BucketOwner(v string) AWS_DynamoDB_Table_S3BucketSource {
	t.S3BucketOwner = cfz.V(v)
	return t
}

// Set__S3KeyPrefix updates property "S3KeyPrefix".
func (t AWS_DynamoDB_Table_S3BucketSource) Set__S3KeyPrefix(v cfz.Expression[string]) AWS_DynamoDB_Table_S3BucketSource {
	t.S3KeyPrefix = v
	return t
}

// SetV__S3KeyPrefix updates property "S3KeyPrefix".
func (t AWS_DynamoDB_Table_S3BucketSource) SetV__S3KeyPrefix(v string) AWS_DynamoDB_Table_S3BucketSource {
	t.S3KeyPrefix = cfz.V(v)
	return t
}
