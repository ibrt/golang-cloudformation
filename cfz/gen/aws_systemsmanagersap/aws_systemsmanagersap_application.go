// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_systemsmanagersap

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SystemsManagerSAP_Application)(nil)
	_ cfz.Resource                   = (*AWS_SystemsManagerSAP_Application)(nil)
)

const (
	// AWS_SystemsManagerSAP_Application__Type is the CloudFormation type for AWS::SystemsManagerSAP::Application.
	AWS_SystemsManagerSAP_Application__Type = "AWS::SystemsManagerSAP::Application"
)

var (
	// AWS_SystemsManagerSAP_Application__AttributesMap reports all the CloudFormation attributes for AWS::SystemsManagerSAP::Application.
	AWS_SystemsManagerSAP_Application__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_SystemsManagerSAP_Application__AttributesSlice reports all the CloudFormation attributes for AWS::SystemsManagerSAP::Application.
	AWS_SystemsManagerSAP_Application__AttributesSlice = []string{
		AWS_SystemsManagerSAP_Application__AttributesMap.Arn,
	}
)

var (
	// AWS_SystemsManagerSAP_Application__PropertiesMap reports all the CloudFormation properties for AWS::SystemsManagerSAP::Application.
	AWS_SystemsManagerSAP_Application__PropertiesMap = struct {
		ApplicationId     string
		ApplicationType   string
		Credentials       string
		DatabaseArn       string
		Instances         string
		SapInstanceNumber string
		Sid               string
		Tags              string
	}{
		ApplicationId:     "ApplicationId",
		ApplicationType:   "ApplicationType",
		Credentials:       "Credentials",
		DatabaseArn:       "DatabaseArn",
		Instances:         "Instances",
		SapInstanceNumber: "SapInstanceNumber",
		Sid:               "Sid",
		Tags:              "Tags",
	}

	// AWS_SystemsManagerSAP_Application__PropertiesSlice reports all the CloudFormation properties for AWS::SystemsManagerSAP::Application.
	AWS_SystemsManagerSAP_Application__PropertiesSlice = []string{
		AWS_SystemsManagerSAP_Application__PropertiesMap.ApplicationId,
		AWS_SystemsManagerSAP_Application__PropertiesMap.ApplicationType,
		AWS_SystemsManagerSAP_Application__PropertiesMap.Credentials,
		AWS_SystemsManagerSAP_Application__PropertiesMap.DatabaseArn,
		AWS_SystemsManagerSAP_Application__PropertiesMap.Instances,
		AWS_SystemsManagerSAP_Application__PropertiesMap.SapInstanceNumber,
		AWS_SystemsManagerSAP_Application__PropertiesMap.Sid,
		AWS_SystemsManagerSAP_Application__PropertiesMap.Tags,
	}
)

// AWS_SystemsManagerSAP_Application is a binding for AWS::SystemsManagerSAP::Application.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html
type AWS_SystemsManagerSAP_Application struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-applicationid
	ApplicationId cfz.Expression[string] `json:"ApplicationId,omitempty"`

	// ApplicationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-applicationtype
	ApplicationType cfz.Expression[string] `json:"ApplicationType,omitempty"`

	// Credentials is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-credentials
	Credentials cfz.ExpressionSlice[AWS_SystemsManagerSAP_Application_Credential] `json:"Credentials,omitempty"`

	// DatabaseArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-databasearn
	DatabaseArn cfz.Expression[string] `json:"DatabaseArn,omitempty"`

	// Instances is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-instances
	Instances cfz.ExpressionSlice[string] `json:"Instances,omitempty"`

	// SapInstanceNumber is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-sapinstancenumber
	SapInstanceNumber cfz.Expression[string] `json:"SapInstanceNumber,omitempty"`

	// Sid is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-sid
	Sid cfz.Expression[string] `json:"Sid,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-systemsmanagersap-application.html#cfn-systemsmanagersap-application-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_SystemsManagerSAP_Application initializes a new *AWS_SystemsManagerSAP_Application.
func New__AWS_SystemsManagerSAP_Application(logicalName string) *AWS_SystemsManagerSAP_Application {
	return &AWS_SystemsManagerSAP_Application{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SystemsManagerSAP_Application) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SystemsManagerSAP_Application) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SystemsManagerSAP_Application) GetType() string {
	return AWS_SystemsManagerSAP_Application__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SystemsManagerSAP_Application) Set__LogicalName(v string) *AWS_SystemsManagerSAP_Application {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SystemsManagerSAP_Application) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SystemsManagerSAP_Application {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SystemsManagerSAP_Application) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SystemsManagerSAP_Application {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SystemsManagerSAP_Application) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SystemsManagerSAP_Application {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SystemsManagerSAP_Application) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SystemsManagerSAP_Application {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SystemsManagerSAP_Application) Set__RequestedOutputs(v []cfz.Output) *AWS_SystemsManagerSAP_Application {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SystemsManagerSAP_Application) Add__RequestedOutputs(v ...cfz.Output) *AWS_SystemsManagerSAP_Application {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationId updates property "ApplicationId".
func (t *AWS_SystemsManagerSAP_Application) Set__ApplicationId(v cfz.Expression[string]) *AWS_SystemsManagerSAP_Application {
	t.ApplicationId = v
	return t
}

// SetV__ApplicationId updates property "ApplicationId".
func (t *AWS_SystemsManagerSAP_Application) SetV__ApplicationId(v string) *AWS_SystemsManagerSAP_Application {
	t.ApplicationId = cfz.V(v)
	return t
}

// Set__ApplicationType updates property "ApplicationType".
func (t *AWS_SystemsManagerSAP_Application) Set__ApplicationType(v cfz.Expression[string]) *AWS_SystemsManagerSAP_Application {
	t.ApplicationType = v
	return t
}

// SetV__ApplicationType updates property "ApplicationType".
func (t *AWS_SystemsManagerSAP_Application) SetV__ApplicationType(v string) *AWS_SystemsManagerSAP_Application {
	t.ApplicationType = cfz.V(v)
	return t
}

// Set__Credentials updates property "Credentials".
func (t *AWS_SystemsManagerSAP_Application) Set__Credentials(v cfz.ExpressionSlice[AWS_SystemsManagerSAP_Application_Credential]) *AWS_SystemsManagerSAP_Application {
	t.Credentials = v
	return t
}

// SetS__Credentials updates property "Credentials".
func (t *AWS_SystemsManagerSAP_Application) SetS__Credentials(v ...cfz.Expression[AWS_SystemsManagerSAP_Application_Credential]) *AWS_SystemsManagerSAP_Application {
	t.Credentials = cfz.S(v...)
	return t
}

// SetSV__Credentials updates property "Credentials".
func (t *AWS_SystemsManagerSAP_Application) SetSV__Credentials(v ...AWS_SystemsManagerSAP_Application_Credential) *AWS_SystemsManagerSAP_Application {
	t.Credentials = cfz.SV(v...)
	return t
}

// Set__DatabaseArn updates property "DatabaseArn".
func (t *AWS_SystemsManagerSAP_Application) Set__DatabaseArn(v cfz.Expression[string]) *AWS_SystemsManagerSAP_Application {
	t.DatabaseArn = v
	return t
}

// SetV__DatabaseArn updates property "DatabaseArn".
func (t *AWS_SystemsManagerSAP_Application) SetV__DatabaseArn(v string) *AWS_SystemsManagerSAP_Application {
	t.DatabaseArn = cfz.V(v)
	return t
}

// Set__Instances updates property "Instances".
func (t *AWS_SystemsManagerSAP_Application) Set__Instances(v cfz.ExpressionSlice[string]) *AWS_SystemsManagerSAP_Application {
	t.Instances = v
	return t
}

// SetS__Instances updates property "Instances".
func (t *AWS_SystemsManagerSAP_Application) SetS__Instances(v ...cfz.Expression[string]) *AWS_SystemsManagerSAP_Application {
	t.Instances = cfz.S(v...)
	return t
}

// SetSV__Instances updates property "Instances".
func (t *AWS_SystemsManagerSAP_Application) SetSV__Instances(v ...string) *AWS_SystemsManagerSAP_Application {
	t.Instances = cfz.SV(v...)
	return t
}

// Set__SapInstanceNumber updates property "SapInstanceNumber".
func (t *AWS_SystemsManagerSAP_Application) Set__SapInstanceNumber(v cfz.Expression[string]) *AWS_SystemsManagerSAP_Application {
	t.SapInstanceNumber = v
	return t
}

// SetV__SapInstanceNumber updates property "SapInstanceNumber".
func (t *AWS_SystemsManagerSAP_Application) SetV__SapInstanceNumber(v string) *AWS_SystemsManagerSAP_Application {
	t.SapInstanceNumber = cfz.V(v)
	return t
}

// Set__Sid updates property "Sid".
func (t *AWS_SystemsManagerSAP_Application) Set__Sid(v cfz.Expression[string]) *AWS_SystemsManagerSAP_Application {
	t.Sid = v
	return t
}

// SetV__Sid updates property "Sid".
func (t *AWS_SystemsManagerSAP_Application) SetV__Sid(v string) *AWS_SystemsManagerSAP_Application {
	t.Sid = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SystemsManagerSAP_Application) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SystemsManagerSAP_Application {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SystemsManagerSAP_Application) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SystemsManagerSAP_Application {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SystemsManagerSAP_Application) SetSV__Tags(v ...cfz.Tag) *AWS_SystemsManagerSAP_Application {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SystemsManagerSAP_Application) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_SystemsManagerSAP_Application) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SystemsManagerSAP_Application__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SystemsManagerSAP_Application) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_SystemsManagerSAP_Application) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SystemsManagerSAP_Application) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SystemsManagerSAP_Application

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SystemsManagerSAP_Application) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
