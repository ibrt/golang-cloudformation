// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_scheduler

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Scheduler_Schedule_Target__Type is the CloudFormation type for AWS::Scheduler::Schedule.Target.
	AWS_Scheduler_Schedule_Target__Type = "AWS::Scheduler::Schedule.Target"
)

var (
	// AWS_Scheduler_Schedule_Target__PropertiesMap reports all the CloudFormation properties for AWS::Scheduler::Schedule.Target.
	AWS_Scheduler_Schedule_Target__PropertiesMap = struct {
		Arn                         string
		DeadLetterConfig            string
		EcsParameters               string
		EventBridgeParameters       string
		Input                       string
		KinesisParameters           string
		RetryPolicy                 string
		RoleArn                     string
		SageMakerPipelineParameters string
		SqsParameters               string
	}{
		Arn:                         "Arn",
		DeadLetterConfig:            "DeadLetterConfig",
		EcsParameters:               "EcsParameters",
		EventBridgeParameters:       "EventBridgeParameters",
		Input:                       "Input",
		KinesisParameters:           "KinesisParameters",
		RetryPolicy:                 "RetryPolicy",
		RoleArn:                     "RoleArn",
		SageMakerPipelineParameters: "SageMakerPipelineParameters",
		SqsParameters:               "SqsParameters",
	}

	// AWS_Scheduler_Schedule_Target__PropertiesSlice reports all the CloudFormation properties for AWS::Scheduler::Schedule.Target.
	AWS_Scheduler_Schedule_Target__PropertiesSlice = []string{
		AWS_Scheduler_Schedule_Target__PropertiesMap.Arn,
		AWS_Scheduler_Schedule_Target__PropertiesMap.DeadLetterConfig,
		AWS_Scheduler_Schedule_Target__PropertiesMap.EcsParameters,
		AWS_Scheduler_Schedule_Target__PropertiesMap.EventBridgeParameters,
		AWS_Scheduler_Schedule_Target__PropertiesMap.Input,
		AWS_Scheduler_Schedule_Target__PropertiesMap.KinesisParameters,
		AWS_Scheduler_Schedule_Target__PropertiesMap.RetryPolicy,
		AWS_Scheduler_Schedule_Target__PropertiesMap.RoleArn,
		AWS_Scheduler_Schedule_Target__PropertiesMap.SageMakerPipelineParameters,
		AWS_Scheduler_Schedule_Target__PropertiesMap.SqsParameters,
	}
)

// AWS_Scheduler_Schedule_Target is a binding for AWS::Scheduler::Schedule.Target.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html
type AWS_Scheduler_Schedule_Target struct {
	// Arn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-arn
	Arn cfz.Expression[string] `json:"Arn,omitempty"`

	// DeadLetterConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-deadletterconfig
	DeadLetterConfig cfz.Expression[AWS_Scheduler_Schedule_DeadLetterConfig] `json:"DeadLetterConfig,omitempty"`

	// EcsParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-ecsparameters
	EcsParameters cfz.Expression[AWS_Scheduler_Schedule_EcsParameters] `json:"EcsParameters,omitempty"`

	// EventBridgeParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-eventbridgeparameters
	EventBridgeParameters cfz.Expression[AWS_Scheduler_Schedule_EventBridgeParameters] `json:"EventBridgeParameters,omitempty"`

	// Input is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-input
	Input cfz.Expression[string] `json:"Input,omitempty"`

	// KinesisParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-kinesisparameters
	KinesisParameters cfz.Expression[AWS_Scheduler_Schedule_KinesisParameters] `json:"KinesisParameters,omitempty"`

	// RetryPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-retrypolicy
	RetryPolicy cfz.Expression[AWS_Scheduler_Schedule_RetryPolicy] `json:"RetryPolicy,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// SageMakerPipelineParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-sagemakerpipelineparameters
	SageMakerPipelineParameters cfz.Expression[AWS_Scheduler_Schedule_SageMakerPipelineParameters] `json:"SageMakerPipelineParameters,omitempty"`

	// SqsParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-target.html#cfn-scheduler-schedule-target-sqsparameters
	SqsParameters cfz.Expression[AWS_Scheduler_Schedule_SqsParameters] `json:"SqsParameters,omitempty"`
}

// New__AWS_Scheduler_Schedule_Target initializes a new AWS_Scheduler_Schedule_Target.
func New__AWS_Scheduler_Schedule_Target() AWS_Scheduler_Schedule_Target {
	return AWS_Scheduler_Schedule_Target{}
}

// GetType returns the CloudFormation type.
func (AWS_Scheduler_Schedule_Target) GetType() string {
	return AWS_Scheduler_Schedule_Target__Type
}

// Set__Arn updates property "Arn".
func (t AWS_Scheduler_Schedule_Target) Set__Arn(v cfz.Expression[string]) AWS_Scheduler_Schedule_Target {
	t.Arn = v
	return t
}

// SetV__Arn updates property "Arn".
func (t AWS_Scheduler_Schedule_Target) SetV__Arn(v string) AWS_Scheduler_Schedule_Target {
	t.Arn = cfz.V(v)
	return t
}

// Set__DeadLetterConfig updates property "DeadLetterConfig".
func (t AWS_Scheduler_Schedule_Target) Set__DeadLetterConfig(v cfz.Expression[AWS_Scheduler_Schedule_DeadLetterConfig]) AWS_Scheduler_Schedule_Target {
	t.DeadLetterConfig = v
	return t
}

// SetV__DeadLetterConfig updates property "DeadLetterConfig".
func (t AWS_Scheduler_Schedule_Target) SetV__DeadLetterConfig(v AWS_Scheduler_Schedule_DeadLetterConfig) AWS_Scheduler_Schedule_Target {
	t.DeadLetterConfig = cfz.V(v)
	return t
}

// Set__EcsParameters updates property "EcsParameters".
func (t AWS_Scheduler_Schedule_Target) Set__EcsParameters(v cfz.Expression[AWS_Scheduler_Schedule_EcsParameters]) AWS_Scheduler_Schedule_Target {
	t.EcsParameters = v
	return t
}

// SetV__EcsParameters updates property "EcsParameters".
func (t AWS_Scheduler_Schedule_Target) SetV__EcsParameters(v AWS_Scheduler_Schedule_EcsParameters) AWS_Scheduler_Schedule_Target {
	t.EcsParameters = cfz.V(v)
	return t
}

// Set__EventBridgeParameters updates property "EventBridgeParameters".
func (t AWS_Scheduler_Schedule_Target) Set__EventBridgeParameters(v cfz.Expression[AWS_Scheduler_Schedule_EventBridgeParameters]) AWS_Scheduler_Schedule_Target {
	t.EventBridgeParameters = v
	return t
}

// SetV__EventBridgeParameters updates property "EventBridgeParameters".
func (t AWS_Scheduler_Schedule_Target) SetV__EventBridgeParameters(v AWS_Scheduler_Schedule_EventBridgeParameters) AWS_Scheduler_Schedule_Target {
	t.EventBridgeParameters = cfz.V(v)
	return t
}

// Set__Input updates property "Input".
func (t AWS_Scheduler_Schedule_Target) Set__Input(v cfz.Expression[string]) AWS_Scheduler_Schedule_Target {
	t.Input = v
	return t
}

// SetV__Input updates property "Input".
func (t AWS_Scheduler_Schedule_Target) SetV__Input(v string) AWS_Scheduler_Schedule_Target {
	t.Input = cfz.V(v)
	return t
}

// Set__KinesisParameters updates property "KinesisParameters".
func (t AWS_Scheduler_Schedule_Target) Set__KinesisParameters(v cfz.Expression[AWS_Scheduler_Schedule_KinesisParameters]) AWS_Scheduler_Schedule_Target {
	t.KinesisParameters = v
	return t
}

// SetV__KinesisParameters updates property "KinesisParameters".
func (t AWS_Scheduler_Schedule_Target) SetV__KinesisParameters(v AWS_Scheduler_Schedule_KinesisParameters) AWS_Scheduler_Schedule_Target {
	t.KinesisParameters = cfz.V(v)
	return t
}

// Set__RetryPolicy updates property "RetryPolicy".
func (t AWS_Scheduler_Schedule_Target) Set__RetryPolicy(v cfz.Expression[AWS_Scheduler_Schedule_RetryPolicy]) AWS_Scheduler_Schedule_Target {
	t.RetryPolicy = v
	return t
}

// SetV__RetryPolicy updates property "RetryPolicy".
func (t AWS_Scheduler_Schedule_Target) SetV__RetryPolicy(v AWS_Scheduler_Schedule_RetryPolicy) AWS_Scheduler_Schedule_Target {
	t.RetryPolicy = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t AWS_Scheduler_Schedule_Target) Set__RoleArn(v cfz.Expression[string]) AWS_Scheduler_Schedule_Target {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t AWS_Scheduler_Schedule_Target) SetV__RoleArn(v string) AWS_Scheduler_Schedule_Target {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__SageMakerPipelineParameters updates property "SageMakerPipelineParameters".
func (t AWS_Scheduler_Schedule_Target) Set__SageMakerPipelineParameters(v cfz.Expression[AWS_Scheduler_Schedule_SageMakerPipelineParameters]) AWS_Scheduler_Schedule_Target {
	t.SageMakerPipelineParameters = v
	return t
}

// SetV__SageMakerPipelineParameters updates property "SageMakerPipelineParameters".
func (t AWS_Scheduler_Schedule_Target) SetV__SageMakerPipelineParameters(v AWS_Scheduler_Schedule_SageMakerPipelineParameters) AWS_Scheduler_Schedule_Target {
	t.SageMakerPipelineParameters = cfz.V(v)
	return t
}

// Set__SqsParameters updates property "SqsParameters".
func (t AWS_Scheduler_Schedule_Target) Set__SqsParameters(v cfz.Expression[AWS_Scheduler_Schedule_SqsParameters]) AWS_Scheduler_Schedule_Target {
	t.SqsParameters = v
	return t
}

// SetV__SqsParameters updates property "SqsParameters".
func (t AWS_Scheduler_Schedule_Target) SetV__SqsParameters(v AWS_Scheduler_Schedule_SqsParameters) AWS_Scheduler_Schedule_Target {
	t.SqsParameters = cfz.V(v)
	return t
}
