// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_scheduler

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Scheduler_Schedule_EcsParameters__Type is the CloudFormation type for AWS::Scheduler::Schedule.EcsParameters.
	AWS_Scheduler_Schedule_EcsParameters__Type = "AWS::Scheduler::Schedule.EcsParameters"
)

var (
	// AWS_Scheduler_Schedule_EcsParameters__PropertiesMap reports all the CloudFormation properties for AWS::Scheduler::Schedule.EcsParameters.
	AWS_Scheduler_Schedule_EcsParameters__PropertiesMap = struct {
		CapacityProviderStrategy string
		EnableECSManagedTags     string
		EnableExecuteCommand     string
		Group                    string
		LaunchType               string
		NetworkConfiguration     string
		PlacementConstraints     string
		PlacementStrategy        string
		PlatformVersion          string
		PropagateTags            string
		ReferenceId              string
		Tags                     string
		TaskCount                string
		TaskDefinitionArn        string
	}{
		CapacityProviderStrategy: "CapacityProviderStrategy",
		EnableECSManagedTags:     "EnableECSManagedTags",
		EnableExecuteCommand:     "EnableExecuteCommand",
		Group:                    "Group",
		LaunchType:               "LaunchType",
		NetworkConfiguration:     "NetworkConfiguration",
		PlacementConstraints:     "PlacementConstraints",
		PlacementStrategy:        "PlacementStrategy",
		PlatformVersion:          "PlatformVersion",
		PropagateTags:            "PropagateTags",
		ReferenceId:              "ReferenceId",
		Tags:                     "Tags",
		TaskCount:                "TaskCount",
		TaskDefinitionArn:        "TaskDefinitionArn",
	}

	// AWS_Scheduler_Schedule_EcsParameters__PropertiesSlice reports all the CloudFormation properties for AWS::Scheduler::Schedule.EcsParameters.
	AWS_Scheduler_Schedule_EcsParameters__PropertiesSlice = []string{
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.CapacityProviderStrategy,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.EnableECSManagedTags,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.EnableExecuteCommand,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.Group,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.LaunchType,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.NetworkConfiguration,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.PlacementConstraints,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.PlacementStrategy,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.PlatformVersion,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.PropagateTags,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.ReferenceId,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.Tags,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.TaskCount,
		AWS_Scheduler_Schedule_EcsParameters__PropertiesMap.TaskDefinitionArn,
	}
)

// AWS_Scheduler_Schedule_EcsParameters is a binding for AWS::Scheduler::Schedule.EcsParameters.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html
type AWS_Scheduler_Schedule_EcsParameters struct {
	// CapacityProviderStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-capacityproviderstrategy
	CapacityProviderStrategy cfz.ExpressionSlice[AWS_Scheduler_Schedule_CapacityProviderStrategyItem] `json:"CapacityProviderStrategy,omitempty"`

	// EnableECSManagedTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-enableecsmanagedtags
	EnableECSManagedTags cfz.Expression[bool] `json:"EnableECSManagedTags,omitempty"`

	// EnableExecuteCommand is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-enableexecutecommand
	EnableExecuteCommand cfz.Expression[bool] `json:"EnableExecuteCommand,omitempty"`

	// Group is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-group
	Group cfz.Expression[string] `json:"Group,omitempty"`

	// LaunchType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-launchtype
	LaunchType cfz.Expression[string] `json:"LaunchType,omitempty"`

	// NetworkConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-networkconfiguration
	NetworkConfiguration cfz.Expression[AWS_Scheduler_Schedule_NetworkConfiguration] `json:"NetworkConfiguration,omitempty"`

	// PlacementConstraints is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-placementconstraints
	PlacementConstraints cfz.ExpressionSlice[AWS_Scheduler_Schedule_PlacementConstraint] `json:"PlacementConstraints,omitempty"`

	// PlacementStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-placementstrategy
	PlacementStrategy cfz.ExpressionSlice[AWS_Scheduler_Schedule_PlacementStrategy] `json:"PlacementStrategy,omitempty"`

	// PlatformVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-platformversion
	PlatformVersion cfz.Expression[string] `json:"PlatformVersion,omitempty"`

	// PropagateTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-propagatetags
	PropagateTags cfz.Expression[string] `json:"PropagateTags,omitempty"`

	// ReferenceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-referenceid
	ReferenceId cfz.Expression[string] `json:"ReferenceId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-tags
	Tags cfz.Expression[json.RawMessage] `json:"Tags,omitempty"`

	// TaskCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-taskcount
	TaskCount cfz.Expression[float64] `json:"TaskCount,omitempty"`

	// TaskDefinitionArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-scheduler-schedule-ecsparameters.html#cfn-scheduler-schedule-ecsparameters-taskdefinitionarn
	TaskDefinitionArn cfz.Expression[string] `json:"TaskDefinitionArn,omitempty"`
}

// New__AWS_Scheduler_Schedule_EcsParameters initializes a new AWS_Scheduler_Schedule_EcsParameters.
func New__AWS_Scheduler_Schedule_EcsParameters() AWS_Scheduler_Schedule_EcsParameters {
	return AWS_Scheduler_Schedule_EcsParameters{}
}

// GetType returns the CloudFormation type.
func (AWS_Scheduler_Schedule_EcsParameters) GetType() string {
	return AWS_Scheduler_Schedule_EcsParameters__Type
}

// Set__CapacityProviderStrategy updates property "CapacityProviderStrategy".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__CapacityProviderStrategy(v cfz.ExpressionSlice[AWS_Scheduler_Schedule_CapacityProviderStrategyItem]) AWS_Scheduler_Schedule_EcsParameters {
	t.CapacityProviderStrategy = v
	return t
}

// SetS__CapacityProviderStrategy updates property "CapacityProviderStrategy".
func (t AWS_Scheduler_Schedule_EcsParameters) SetS__CapacityProviderStrategy(v ...cfz.Expression[AWS_Scheduler_Schedule_CapacityProviderStrategyItem]) AWS_Scheduler_Schedule_EcsParameters {
	t.CapacityProviderStrategy = cfz.S(v...)
	return t
}

// SetSV__CapacityProviderStrategy updates property "CapacityProviderStrategy".
func (t AWS_Scheduler_Schedule_EcsParameters) SetSV__CapacityProviderStrategy(v ...AWS_Scheduler_Schedule_CapacityProviderStrategyItem) AWS_Scheduler_Schedule_EcsParameters {
	t.CapacityProviderStrategy = cfz.SV(v...)
	return t
}

// Set__EnableECSManagedTags updates property "EnableECSManagedTags".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__EnableECSManagedTags(v cfz.Expression[bool]) AWS_Scheduler_Schedule_EcsParameters {
	t.EnableECSManagedTags = v
	return t
}

// SetV__EnableECSManagedTags updates property "EnableECSManagedTags".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__EnableECSManagedTags(v bool) AWS_Scheduler_Schedule_EcsParameters {
	t.EnableECSManagedTags = cfz.V(v)
	return t
}

// Set__EnableExecuteCommand updates property "EnableExecuteCommand".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__EnableExecuteCommand(v cfz.Expression[bool]) AWS_Scheduler_Schedule_EcsParameters {
	t.EnableExecuteCommand = v
	return t
}

// SetV__EnableExecuteCommand updates property "EnableExecuteCommand".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__EnableExecuteCommand(v bool) AWS_Scheduler_Schedule_EcsParameters {
	t.EnableExecuteCommand = cfz.V(v)
	return t
}

// Set__Group updates property "Group".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__Group(v cfz.Expression[string]) AWS_Scheduler_Schedule_EcsParameters {
	t.Group = v
	return t
}

// SetV__Group updates property "Group".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__Group(v string) AWS_Scheduler_Schedule_EcsParameters {
	t.Group = cfz.V(v)
	return t
}

// Set__LaunchType updates property "LaunchType".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__LaunchType(v cfz.Expression[string]) AWS_Scheduler_Schedule_EcsParameters {
	t.LaunchType = v
	return t
}

// SetV__LaunchType updates property "LaunchType".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__LaunchType(v string) AWS_Scheduler_Schedule_EcsParameters {
	t.LaunchType = cfz.V(v)
	return t
}

// Set__NetworkConfiguration updates property "NetworkConfiguration".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__NetworkConfiguration(v cfz.Expression[AWS_Scheduler_Schedule_NetworkConfiguration]) AWS_Scheduler_Schedule_EcsParameters {
	t.NetworkConfiguration = v
	return t
}

// SetV__NetworkConfiguration updates property "NetworkConfiguration".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__NetworkConfiguration(v AWS_Scheduler_Schedule_NetworkConfiguration) AWS_Scheduler_Schedule_EcsParameters {
	t.NetworkConfiguration = cfz.V(v)
	return t
}

// Set__PlacementConstraints updates property "PlacementConstraints".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__PlacementConstraints(v cfz.ExpressionSlice[AWS_Scheduler_Schedule_PlacementConstraint]) AWS_Scheduler_Schedule_EcsParameters {
	t.PlacementConstraints = v
	return t
}

// SetS__PlacementConstraints updates property "PlacementConstraints".
func (t AWS_Scheduler_Schedule_EcsParameters) SetS__PlacementConstraints(v ...cfz.Expression[AWS_Scheduler_Schedule_PlacementConstraint]) AWS_Scheduler_Schedule_EcsParameters {
	t.PlacementConstraints = cfz.S(v...)
	return t
}

// SetSV__PlacementConstraints updates property "PlacementConstraints".
func (t AWS_Scheduler_Schedule_EcsParameters) SetSV__PlacementConstraints(v ...AWS_Scheduler_Schedule_PlacementConstraint) AWS_Scheduler_Schedule_EcsParameters {
	t.PlacementConstraints = cfz.SV(v...)
	return t
}

// Set__PlacementStrategy updates property "PlacementStrategy".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__PlacementStrategy(v cfz.ExpressionSlice[AWS_Scheduler_Schedule_PlacementStrategy]) AWS_Scheduler_Schedule_EcsParameters {
	t.PlacementStrategy = v
	return t
}

// SetS__PlacementStrategy updates property "PlacementStrategy".
func (t AWS_Scheduler_Schedule_EcsParameters) SetS__PlacementStrategy(v ...cfz.Expression[AWS_Scheduler_Schedule_PlacementStrategy]) AWS_Scheduler_Schedule_EcsParameters {
	t.PlacementStrategy = cfz.S(v...)
	return t
}

// SetSV__PlacementStrategy updates property "PlacementStrategy".
func (t AWS_Scheduler_Schedule_EcsParameters) SetSV__PlacementStrategy(v ...AWS_Scheduler_Schedule_PlacementStrategy) AWS_Scheduler_Schedule_EcsParameters {
	t.PlacementStrategy = cfz.SV(v...)
	return t
}

// Set__PlatformVersion updates property "PlatformVersion".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__PlatformVersion(v cfz.Expression[string]) AWS_Scheduler_Schedule_EcsParameters {
	t.PlatformVersion = v
	return t
}

// SetV__PlatformVersion updates property "PlatformVersion".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__PlatformVersion(v string) AWS_Scheduler_Schedule_EcsParameters {
	t.PlatformVersion = cfz.V(v)
	return t
}

// Set__PropagateTags updates property "PropagateTags".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__PropagateTags(v cfz.Expression[string]) AWS_Scheduler_Schedule_EcsParameters {
	t.PropagateTags = v
	return t
}

// SetV__PropagateTags updates property "PropagateTags".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__PropagateTags(v string) AWS_Scheduler_Schedule_EcsParameters {
	t.PropagateTags = cfz.V(v)
	return t
}

// Set__ReferenceId updates property "ReferenceId".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__ReferenceId(v cfz.Expression[string]) AWS_Scheduler_Schedule_EcsParameters {
	t.ReferenceId = v
	return t
}

// SetV__ReferenceId updates property "ReferenceId".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__ReferenceId(v string) AWS_Scheduler_Schedule_EcsParameters {
	t.ReferenceId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__Tags(v cfz.Expression[json.RawMessage]) AWS_Scheduler_Schedule_EcsParameters {
	t.Tags = v
	return t
}

// SetV__Tags updates property "Tags".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__Tags(v json.RawMessage) AWS_Scheduler_Schedule_EcsParameters {
	t.Tags = cfz.V(v)
	return t
}

// Set__TaskCount updates property "TaskCount".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__TaskCount(v cfz.Expression[float64]) AWS_Scheduler_Schedule_EcsParameters {
	t.TaskCount = v
	return t
}

// SetV__TaskCount updates property "TaskCount".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__TaskCount(v float64) AWS_Scheduler_Schedule_EcsParameters {
	t.TaskCount = cfz.V(v)
	return t
}

// Set__TaskDefinitionArn updates property "TaskDefinitionArn".
func (t AWS_Scheduler_Schedule_EcsParameters) Set__TaskDefinitionArn(v cfz.Expression[string]) AWS_Scheduler_Schedule_EcsParameters {
	t.TaskDefinitionArn = v
	return t
}

// SetV__TaskDefinitionArn updates property "TaskDefinitionArn".
func (t AWS_Scheduler_Schedule_EcsParameters) SetV__TaskDefinitionArn(v string) AWS_Scheduler_Schedule_EcsParameters {
	t.TaskDefinitionArn = cfz.V(v)
	return t
}
