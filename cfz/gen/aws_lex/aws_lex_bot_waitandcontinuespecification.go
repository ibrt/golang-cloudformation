// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lex

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Lex_Bot_WaitAndContinueSpecification__Type is the CloudFormation type for AWS::Lex::Bot.WaitAndContinueSpecification.
	AWS_Lex_Bot_WaitAndContinueSpecification__Type = "AWS::Lex::Bot.WaitAndContinueSpecification"
)

var (
	// AWS_Lex_Bot_WaitAndContinueSpecification__PropertiesMap reports all the CloudFormation properties for AWS::Lex::Bot.WaitAndContinueSpecification.
	AWS_Lex_Bot_WaitAndContinueSpecification__PropertiesMap = struct {
		ContinueResponse     string
		IsActive             string
		StillWaitingResponse string
		WaitingResponse      string
	}{
		ContinueResponse:     "ContinueResponse",
		IsActive:             "IsActive",
		StillWaitingResponse: "StillWaitingResponse",
		WaitingResponse:      "WaitingResponse",
	}

	// AWS_Lex_Bot_WaitAndContinueSpecification__PropertiesSlice reports all the CloudFormation properties for AWS::Lex::Bot.WaitAndContinueSpecification.
	AWS_Lex_Bot_WaitAndContinueSpecification__PropertiesSlice = []string{
		AWS_Lex_Bot_WaitAndContinueSpecification__PropertiesMap.ContinueResponse,
		AWS_Lex_Bot_WaitAndContinueSpecification__PropertiesMap.IsActive,
		AWS_Lex_Bot_WaitAndContinueSpecification__PropertiesMap.StillWaitingResponse,
		AWS_Lex_Bot_WaitAndContinueSpecification__PropertiesMap.WaitingResponse,
	}
)

// AWS_Lex_Bot_WaitAndContinueSpecification is a binding for AWS::Lex::Bot.WaitAndContinueSpecification.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-waitandcontinuespecification.html
type AWS_Lex_Bot_WaitAndContinueSpecification struct {
	// ContinueResponse is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-waitandcontinuespecification.html#cfn-lex-bot-waitandcontinuespecification-continueresponse
	ContinueResponse cfz.Expression[AWS_Lex_Bot_ResponseSpecification] `json:"ContinueResponse,omitempty"`

	// IsActive is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-waitandcontinuespecification.html#cfn-lex-bot-waitandcontinuespecification-isactive
	IsActive cfz.Expression[bool] `json:"IsActive,omitempty"`

	// StillWaitingResponse is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-waitandcontinuespecification.html#cfn-lex-bot-waitandcontinuespecification-stillwaitingresponse
	StillWaitingResponse cfz.Expression[AWS_Lex_Bot_StillWaitingResponseSpecification] `json:"StillWaitingResponse,omitempty"`

	// WaitingResponse is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-waitandcontinuespecification.html#cfn-lex-bot-waitandcontinuespecification-waitingresponse
	WaitingResponse cfz.Expression[AWS_Lex_Bot_ResponseSpecification] `json:"WaitingResponse,omitempty"`
}

// New__AWS_Lex_Bot_WaitAndContinueSpecification initializes a new AWS_Lex_Bot_WaitAndContinueSpecification.
func New__AWS_Lex_Bot_WaitAndContinueSpecification() AWS_Lex_Bot_WaitAndContinueSpecification {
	return AWS_Lex_Bot_WaitAndContinueSpecification{}
}

// GetType returns the CloudFormation type.
func (AWS_Lex_Bot_WaitAndContinueSpecification) GetType() string {
	return AWS_Lex_Bot_WaitAndContinueSpecification__Type
}

// Set__ContinueResponse updates property "ContinueResponse".
func (t AWS_Lex_Bot_WaitAndContinueSpecification) Set__ContinueResponse(v cfz.Expression[AWS_Lex_Bot_ResponseSpecification]) AWS_Lex_Bot_WaitAndContinueSpecification {
	t.ContinueResponse = v
	return t
}

// SetV__ContinueResponse updates property "ContinueResponse".
func (t AWS_Lex_Bot_WaitAndContinueSpecification) SetV__ContinueResponse(v AWS_Lex_Bot_ResponseSpecification) AWS_Lex_Bot_WaitAndContinueSpecification {
	t.ContinueResponse = cfz.V(v)
	return t
}

// Set__IsActive updates property "IsActive".
func (t AWS_Lex_Bot_WaitAndContinueSpecification) Set__IsActive(v cfz.Expression[bool]) AWS_Lex_Bot_WaitAndContinueSpecification {
	t.IsActive = v
	return t
}

// SetV__IsActive updates property "IsActive".
func (t AWS_Lex_Bot_WaitAndContinueSpecification) SetV__IsActive(v bool) AWS_Lex_Bot_WaitAndContinueSpecification {
	t.IsActive = cfz.V(v)
	return t
}

// Set__StillWaitingResponse updates property "StillWaitingResponse".
func (t AWS_Lex_Bot_WaitAndContinueSpecification) Set__StillWaitingResponse(v cfz.Expression[AWS_Lex_Bot_StillWaitingResponseSpecification]) AWS_Lex_Bot_WaitAndContinueSpecification {
	t.StillWaitingResponse = v
	return t
}

// SetV__StillWaitingResponse updates property "StillWaitingResponse".
func (t AWS_Lex_Bot_WaitAndContinueSpecification) SetV__StillWaitingResponse(v AWS_Lex_Bot_StillWaitingResponseSpecification) AWS_Lex_Bot_WaitAndContinueSpecification {
	t.StillWaitingResponse = cfz.V(v)
	return t
}

// Set__WaitingResponse updates property "WaitingResponse".
func (t AWS_Lex_Bot_WaitAndContinueSpecification) Set__WaitingResponse(v cfz.Expression[AWS_Lex_Bot_ResponseSpecification]) AWS_Lex_Bot_WaitAndContinueSpecification {
	t.WaitingResponse = v
	return t
}

// SetV__WaitingResponse updates property "WaitingResponse".
func (t AWS_Lex_Bot_WaitAndContinueSpecification) SetV__WaitingResponse(v AWS_Lex_Bot_ResponseSpecification) AWS_Lex_Bot_WaitAndContinueSpecification {
	t.WaitingResponse = cfz.V(v)
	return t
}
