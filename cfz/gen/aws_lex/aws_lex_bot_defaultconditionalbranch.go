// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lex

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Lex_Bot_DefaultConditionalBranch__Type is the CloudFormation type for AWS::Lex::Bot.DefaultConditionalBranch.
	AWS_Lex_Bot_DefaultConditionalBranch__Type = "AWS::Lex::Bot.DefaultConditionalBranch"
)

var (
	// AWS_Lex_Bot_DefaultConditionalBranch__PropertiesMap reports all the CloudFormation properties for AWS::Lex::Bot.DefaultConditionalBranch.
	AWS_Lex_Bot_DefaultConditionalBranch__PropertiesMap = struct {
		NextStep string
		Response string
	}{
		NextStep: "NextStep",
		Response: "Response",
	}

	// AWS_Lex_Bot_DefaultConditionalBranch__PropertiesSlice reports all the CloudFormation properties for AWS::Lex::Bot.DefaultConditionalBranch.
	AWS_Lex_Bot_DefaultConditionalBranch__PropertiesSlice = []string{
		AWS_Lex_Bot_DefaultConditionalBranch__PropertiesMap.NextStep,
		AWS_Lex_Bot_DefaultConditionalBranch__PropertiesMap.Response,
	}
)

// AWS_Lex_Bot_DefaultConditionalBranch is a binding for AWS::Lex::Bot.DefaultConditionalBranch.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-defaultconditionalbranch.html
type AWS_Lex_Bot_DefaultConditionalBranch struct {
	// NextStep is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-defaultconditionalbranch.html#cfn-lex-bot-defaultconditionalbranch-nextstep
	NextStep cfz.Expression[AWS_Lex_Bot_DialogState] `json:"NextStep,omitempty"`

	// Response is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-defaultconditionalbranch.html#cfn-lex-bot-defaultconditionalbranch-response
	Response cfz.Expression[AWS_Lex_Bot_ResponseSpecification] `json:"Response,omitempty"`
}

// New__AWS_Lex_Bot_DefaultConditionalBranch initializes a new AWS_Lex_Bot_DefaultConditionalBranch.
func New__AWS_Lex_Bot_DefaultConditionalBranch() AWS_Lex_Bot_DefaultConditionalBranch {
	return AWS_Lex_Bot_DefaultConditionalBranch{}
}

// GetType returns the CloudFormation type.
func (AWS_Lex_Bot_DefaultConditionalBranch) GetType() string {
	return AWS_Lex_Bot_DefaultConditionalBranch__Type
}

// Set__NextStep updates property "NextStep".
func (t AWS_Lex_Bot_DefaultConditionalBranch) Set__NextStep(v cfz.Expression[AWS_Lex_Bot_DialogState]) AWS_Lex_Bot_DefaultConditionalBranch {
	t.NextStep = v
	return t
}

// SetV__NextStep updates property "NextStep".
func (t AWS_Lex_Bot_DefaultConditionalBranch) SetV__NextStep(v AWS_Lex_Bot_DialogState) AWS_Lex_Bot_DefaultConditionalBranch {
	t.NextStep = cfz.V(v)
	return t
}

// Set__Response updates property "Response".
func (t AWS_Lex_Bot_DefaultConditionalBranch) Set__Response(v cfz.Expression[AWS_Lex_Bot_ResponseSpecification]) AWS_Lex_Bot_DefaultConditionalBranch {
	t.Response = v
	return t
}

// SetV__Response updates property "Response".
func (t AWS_Lex_Bot_DefaultConditionalBranch) SetV__Response(v AWS_Lex_Bot_ResponseSpecification) AWS_Lex_Bot_DefaultConditionalBranch {
	t.Response = cfz.V(v)
	return t
}
