// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lex

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Lex_Bot_S3Location__Type is the CloudFormation type for AWS::Lex::Bot.S3Location.
	AWS_Lex_Bot_S3Location__Type = "AWS::Lex::Bot.S3Location"
)

var (
	// AWS_Lex_Bot_S3Location__PropertiesMap reports all the CloudFormation properties for AWS::Lex::Bot.S3Location.
	AWS_Lex_Bot_S3Location__PropertiesMap = struct {
		S3Bucket        string
		S3ObjectKey     string
		S3ObjectVersion string
	}{
		S3Bucket:        "S3Bucket",
		S3ObjectKey:     "S3ObjectKey",
		S3ObjectVersion: "S3ObjectVersion",
	}

	// AWS_Lex_Bot_S3Location__PropertiesSlice reports all the CloudFormation properties for AWS::Lex::Bot.S3Location.
	AWS_Lex_Bot_S3Location__PropertiesSlice = []string{
		AWS_Lex_Bot_S3Location__PropertiesMap.S3Bucket,
		AWS_Lex_Bot_S3Location__PropertiesMap.S3ObjectKey,
		AWS_Lex_Bot_S3Location__PropertiesMap.S3ObjectVersion,
	}
)

// AWS_Lex_Bot_S3Location is a binding for AWS::Lex::Bot.S3Location.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-s3location.html
type AWS_Lex_Bot_S3Location struct {
	// S3Bucket is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-s3location.html#cfn-lex-bot-s3location-s3bucket
	S3Bucket cfz.Expression[string] `json:"S3Bucket,omitempty"`

	// S3ObjectKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-s3location.html#cfn-lex-bot-s3location-s3objectkey
	S3ObjectKey cfz.Expression[string] `json:"S3ObjectKey,omitempty"`

	// S3ObjectVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-s3location.html#cfn-lex-bot-s3location-s3objectversion
	S3ObjectVersion cfz.Expression[string] `json:"S3ObjectVersion,omitempty"`
}

// New__AWS_Lex_Bot_S3Location initializes a new AWS_Lex_Bot_S3Location.
func New__AWS_Lex_Bot_S3Location() AWS_Lex_Bot_S3Location {
	return AWS_Lex_Bot_S3Location{}
}

// GetType returns the CloudFormation type.
func (AWS_Lex_Bot_S3Location) GetType() string {
	return AWS_Lex_Bot_S3Location__Type
}

// Set__S3Bucket updates property "S3Bucket".
func (t AWS_Lex_Bot_S3Location) Set__S3Bucket(v cfz.Expression[string]) AWS_Lex_Bot_S3Location {
	t.S3Bucket = v
	return t
}

// SetV__S3Bucket updates property "S3Bucket".
func (t AWS_Lex_Bot_S3Location) SetV__S3Bucket(v string) AWS_Lex_Bot_S3Location {
	t.S3Bucket = cfz.V(v)
	return t
}

// Set__S3ObjectKey updates property "S3ObjectKey".
func (t AWS_Lex_Bot_S3Location) Set__S3ObjectKey(v cfz.Expression[string]) AWS_Lex_Bot_S3Location {
	t.S3ObjectKey = v
	return t
}

// SetV__S3ObjectKey updates property "S3ObjectKey".
func (t AWS_Lex_Bot_S3Location) SetV__S3ObjectKey(v string) AWS_Lex_Bot_S3Location {
	t.S3ObjectKey = cfz.V(v)
	return t
}

// Set__S3ObjectVersion updates property "S3ObjectVersion".
func (t AWS_Lex_Bot_S3Location) Set__S3ObjectVersion(v cfz.Expression[string]) AWS_Lex_Bot_S3Location {
	t.S3ObjectVersion = v
	return t
}

// SetV__S3ObjectVersion updates property "S3ObjectVersion".
func (t AWS_Lex_Bot_S3Location) SetV__S3ObjectVersion(v string) AWS_Lex_Bot_S3Location {
	t.S3ObjectVersion = cfz.V(v)
	return t
}
