// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lex

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lex_Bot)(nil)
	_ cfz.Resource                   = (*AWS_Lex_Bot)(nil)
)

const (
	// AWS_Lex_Bot__Type is the CloudFormation type for AWS::Lex::Bot.
	AWS_Lex_Bot__Type = "AWS::Lex::Bot"
)

var (
	// AWS_Lex_Bot__AttributesMap reports all the CloudFormation attributes for AWS::Lex::Bot.
	AWS_Lex_Bot__AttributesMap = struct {
		Arn string
		Id  string
	}{
		Arn: "Arn",
		Id:  "Id",
	}

	// AWS_Lex_Bot__AttributesSlice reports all the CloudFormation attributes for AWS::Lex::Bot.
	AWS_Lex_Bot__AttributesSlice = []string{
		AWS_Lex_Bot__AttributesMap.Arn,
		AWS_Lex_Bot__AttributesMap.Id,
	}
)

var (
	// AWS_Lex_Bot__PropertiesMap reports all the CloudFormation properties for AWS::Lex::Bot.
	AWS_Lex_Bot__PropertiesMap = struct {
		AutoBuildBotLocales     string
		BotFileS3Location       string
		BotLocales              string
		BotTags                 string
		DataPrivacy             string
		Description             string
		IdleSessionTTLInSeconds string
		Name                    string
		RoleArn                 string
		TestBotAliasSettings    string
		TestBotAliasTags        string
	}{
		AutoBuildBotLocales:     "AutoBuildBotLocales",
		BotFileS3Location:       "BotFileS3Location",
		BotLocales:              "BotLocales",
		BotTags:                 "BotTags",
		DataPrivacy:             "DataPrivacy",
		Description:             "Description",
		IdleSessionTTLInSeconds: "IdleSessionTTLInSeconds",
		Name:                    "Name",
		RoleArn:                 "RoleArn",
		TestBotAliasSettings:    "TestBotAliasSettings",
		TestBotAliasTags:        "TestBotAliasTags",
	}

	// AWS_Lex_Bot__PropertiesSlice reports all the CloudFormation properties for AWS::Lex::Bot.
	AWS_Lex_Bot__PropertiesSlice = []string{
		AWS_Lex_Bot__PropertiesMap.AutoBuildBotLocales,
		AWS_Lex_Bot__PropertiesMap.BotFileS3Location,
		AWS_Lex_Bot__PropertiesMap.BotLocales,
		AWS_Lex_Bot__PropertiesMap.BotTags,
		AWS_Lex_Bot__PropertiesMap.DataPrivacy,
		AWS_Lex_Bot__PropertiesMap.Description,
		AWS_Lex_Bot__PropertiesMap.IdleSessionTTLInSeconds,
		AWS_Lex_Bot__PropertiesMap.Name,
		AWS_Lex_Bot__PropertiesMap.RoleArn,
		AWS_Lex_Bot__PropertiesMap.TestBotAliasSettings,
		AWS_Lex_Bot__PropertiesMap.TestBotAliasTags,
	}
)

// AWS_Lex_Bot is a binding for AWS::Lex::Bot.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html
type AWS_Lex_Bot struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AutoBuildBotLocales is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-autobuildbotlocales
	AutoBuildBotLocales cfz.Expression[bool] `json:"AutoBuildBotLocales,omitempty"`

	// BotFileS3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-botfiles3location
	BotFileS3Location cfz.Expression[AWS_Lex_Bot_S3Location] `json:"BotFileS3Location,omitempty"`

	// BotLocales is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-botlocales
	BotLocales cfz.ExpressionSlice[AWS_Lex_Bot_BotLocale] `json:"BotLocales,omitempty"`

	// BotTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-bottags
	BotTags cfz.ExpressionSlice[cfz.Tag] `json:"BotTags,omitempty"`

	// DataPrivacy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-dataprivacy
	DataPrivacy cfz.Expression[AWS_Lex_Bot_DataPrivacy] `json:"DataPrivacy,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// IdleSessionTTLInSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-idlesessionttlinseconds
	IdleSessionTTLInSeconds cfz.Expression[int32] `json:"IdleSessionTTLInSeconds,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// TestBotAliasSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-testbotaliassettings
	TestBotAliasSettings cfz.Expression[AWS_Lex_Bot_TestBotAliasSettings] `json:"TestBotAliasSettings,omitempty"`

	// TestBotAliasTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-bot.html#cfn-lex-bot-testbotaliastags
	TestBotAliasTags cfz.ExpressionSlice[cfz.Tag] `json:"TestBotAliasTags,omitempty"`
}

// New__AWS_Lex_Bot initializes a new *AWS_Lex_Bot.
func New__AWS_Lex_Bot(logicalName string) *AWS_Lex_Bot {
	return &AWS_Lex_Bot{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lex_Bot) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lex_Bot) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lex_Bot) GetType() string {
	return AWS_Lex_Bot__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lex_Bot) Set__LogicalName(v string) *AWS_Lex_Bot {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lex_Bot) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lex_Bot {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lex_Bot) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lex_Bot {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lex_Bot) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lex_Bot {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lex_Bot) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lex_Bot {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lex_Bot) Set__RequestedOutputs(v []cfz.Output) *AWS_Lex_Bot {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lex_Bot) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lex_Bot {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AutoBuildBotLocales updates property "AutoBuildBotLocales".
func (t *AWS_Lex_Bot) Set__AutoBuildBotLocales(v cfz.Expression[bool]) *AWS_Lex_Bot {
	t.AutoBuildBotLocales = v
	return t
}

// SetV__AutoBuildBotLocales updates property "AutoBuildBotLocales".
func (t *AWS_Lex_Bot) SetV__AutoBuildBotLocales(v bool) *AWS_Lex_Bot {
	t.AutoBuildBotLocales = cfz.V(v)
	return t
}

// Set__BotFileS3Location updates property "BotFileS3Location".
func (t *AWS_Lex_Bot) Set__BotFileS3Location(v cfz.Expression[AWS_Lex_Bot_S3Location]) *AWS_Lex_Bot {
	t.BotFileS3Location = v
	return t
}

// SetV__BotFileS3Location updates property "BotFileS3Location".
func (t *AWS_Lex_Bot) SetV__BotFileS3Location(v AWS_Lex_Bot_S3Location) *AWS_Lex_Bot {
	t.BotFileS3Location = cfz.V(v)
	return t
}

// Set__BotLocales updates property "BotLocales".
func (t *AWS_Lex_Bot) Set__BotLocales(v cfz.ExpressionSlice[AWS_Lex_Bot_BotLocale]) *AWS_Lex_Bot {
	t.BotLocales = v
	return t
}

// SetS__BotLocales updates property "BotLocales".
func (t *AWS_Lex_Bot) SetS__BotLocales(v ...cfz.Expression[AWS_Lex_Bot_BotLocale]) *AWS_Lex_Bot {
	t.BotLocales = cfz.S(v...)
	return t
}

// SetSV__BotLocales updates property "BotLocales".
func (t *AWS_Lex_Bot) SetSV__BotLocales(v ...AWS_Lex_Bot_BotLocale) *AWS_Lex_Bot {
	t.BotLocales = cfz.SV(v...)
	return t
}

// Set__BotTags updates property "BotTags".
func (t *AWS_Lex_Bot) Set__BotTags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Lex_Bot {
	t.BotTags = v
	return t
}

// SetS__BotTags updates property "BotTags".
func (t *AWS_Lex_Bot) SetS__BotTags(v ...cfz.Expression[cfz.Tag]) *AWS_Lex_Bot {
	t.BotTags = cfz.S(v...)
	return t
}

// SetSV__BotTags updates property "BotTags".
func (t *AWS_Lex_Bot) SetSV__BotTags(v ...cfz.Tag) *AWS_Lex_Bot {
	t.BotTags = cfz.SV(v...)
	return t
}

// Set__DataPrivacy updates property "DataPrivacy".
func (t *AWS_Lex_Bot) Set__DataPrivacy(v cfz.Expression[AWS_Lex_Bot_DataPrivacy]) *AWS_Lex_Bot {
	t.DataPrivacy = v
	return t
}

// SetV__DataPrivacy updates property "DataPrivacy".
func (t *AWS_Lex_Bot) SetV__DataPrivacy(v AWS_Lex_Bot_DataPrivacy) *AWS_Lex_Bot {
	t.DataPrivacy = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Lex_Bot) Set__Description(v cfz.Expression[string]) *AWS_Lex_Bot {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Lex_Bot) SetV__Description(v string) *AWS_Lex_Bot {
	t.Description = cfz.V(v)
	return t
}

// Set__IdleSessionTTLInSeconds updates property "IdleSessionTTLInSeconds".
func (t *AWS_Lex_Bot) Set__IdleSessionTTLInSeconds(v cfz.Expression[int32]) *AWS_Lex_Bot {
	t.IdleSessionTTLInSeconds = v
	return t
}

// SetV__IdleSessionTTLInSeconds updates property "IdleSessionTTLInSeconds".
func (t *AWS_Lex_Bot) SetV__IdleSessionTTLInSeconds(v int32) *AWS_Lex_Bot {
	t.IdleSessionTTLInSeconds = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Lex_Bot) Set__Name(v cfz.Expression[string]) *AWS_Lex_Bot {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Lex_Bot) SetV__Name(v string) *AWS_Lex_Bot {
	t.Name = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_Lex_Bot) Set__RoleArn(v cfz.Expression[string]) *AWS_Lex_Bot {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_Lex_Bot) SetV__RoleArn(v string) *AWS_Lex_Bot {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__TestBotAliasSettings updates property "TestBotAliasSettings".
func (t *AWS_Lex_Bot) Set__TestBotAliasSettings(v cfz.Expression[AWS_Lex_Bot_TestBotAliasSettings]) *AWS_Lex_Bot {
	t.TestBotAliasSettings = v
	return t
}

// SetV__TestBotAliasSettings updates property "TestBotAliasSettings".
func (t *AWS_Lex_Bot) SetV__TestBotAliasSettings(v AWS_Lex_Bot_TestBotAliasSettings) *AWS_Lex_Bot {
	t.TestBotAliasSettings = cfz.V(v)
	return t
}

// Set__TestBotAliasTags updates property "TestBotAliasTags".
func (t *AWS_Lex_Bot) Set__TestBotAliasTags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Lex_Bot {
	t.TestBotAliasTags = v
	return t
}

// SetS__TestBotAliasTags updates property "TestBotAliasTags".
func (t *AWS_Lex_Bot) SetS__TestBotAliasTags(v ...cfz.Expression[cfz.Tag]) *AWS_Lex_Bot {
	t.TestBotAliasTags = cfz.S(v...)
	return t
}

// SetSV__TestBotAliasTags updates property "TestBotAliasTags".
func (t *AWS_Lex_Bot) SetSV__TestBotAliasTags(v ...cfz.Tag) *AWS_Lex_Bot {
	t.TestBotAliasTags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lex_Bot) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Lex_Bot) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lex_Bot__AttributesMap.Arn))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Lex_Bot) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lex_Bot__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lex_Bot) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Lex_Bot) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Lex_Bot) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lex_Bot) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lex_Bot

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lex_Bot) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
