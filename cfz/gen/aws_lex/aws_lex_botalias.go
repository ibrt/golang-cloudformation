// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lex

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lex_BotAlias)(nil)
	_ cfz.Resource                   = (*AWS_Lex_BotAlias)(nil)
)

const (
	// AWS_Lex_BotAlias__Type is the CloudFormation type for AWS::Lex::BotAlias.
	AWS_Lex_BotAlias__Type = "AWS::Lex::BotAlias"
)

var (
	// AWS_Lex_BotAlias__AttributesMap reports all the CloudFormation attributes for AWS::Lex::BotAlias.
	AWS_Lex_BotAlias__AttributesMap = struct {
		Arn            string
		BotAliasId     string
		BotAliasStatus string
	}{
		Arn:            "Arn",
		BotAliasId:     "BotAliasId",
		BotAliasStatus: "BotAliasStatus",
	}

	// AWS_Lex_BotAlias__AttributesSlice reports all the CloudFormation attributes for AWS::Lex::BotAlias.
	AWS_Lex_BotAlias__AttributesSlice = []string{
		AWS_Lex_BotAlias__AttributesMap.Arn,
		AWS_Lex_BotAlias__AttributesMap.BotAliasId,
		AWS_Lex_BotAlias__AttributesMap.BotAliasStatus,
	}
)

var (
	// AWS_Lex_BotAlias__PropertiesMap reports all the CloudFormation properties for AWS::Lex::BotAlias.
	AWS_Lex_BotAlias__PropertiesMap = struct {
		BotAliasLocaleSettings    string
		BotAliasName              string
		BotAliasTags              string
		BotId                     string
		BotVersion                string
		ConversationLogSettings   string
		Description               string
		SentimentAnalysisSettings string
	}{
		BotAliasLocaleSettings:    "BotAliasLocaleSettings",
		BotAliasName:              "BotAliasName",
		BotAliasTags:              "BotAliasTags",
		BotId:                     "BotId",
		BotVersion:                "BotVersion",
		ConversationLogSettings:   "ConversationLogSettings",
		Description:               "Description",
		SentimentAnalysisSettings: "SentimentAnalysisSettings",
	}

	// AWS_Lex_BotAlias__PropertiesSlice reports all the CloudFormation properties for AWS::Lex::BotAlias.
	AWS_Lex_BotAlias__PropertiesSlice = []string{
		AWS_Lex_BotAlias__PropertiesMap.BotAliasLocaleSettings,
		AWS_Lex_BotAlias__PropertiesMap.BotAliasName,
		AWS_Lex_BotAlias__PropertiesMap.BotAliasTags,
		AWS_Lex_BotAlias__PropertiesMap.BotId,
		AWS_Lex_BotAlias__PropertiesMap.BotVersion,
		AWS_Lex_BotAlias__PropertiesMap.ConversationLogSettings,
		AWS_Lex_BotAlias__PropertiesMap.Description,
		AWS_Lex_BotAlias__PropertiesMap.SentimentAnalysisSettings,
	}
)

// AWS_Lex_BotAlias is a binding for AWS::Lex::BotAlias.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html
type AWS_Lex_BotAlias struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// BotAliasLocaleSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botaliaslocalesettings
	BotAliasLocaleSettings cfz.ExpressionSlice[AWS_Lex_BotAlias_BotAliasLocaleSettingsItem] `json:"BotAliasLocaleSettings,omitempty"`

	// BotAliasName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botaliasname
	BotAliasName cfz.Expression[string] `json:"BotAliasName,omitempty"`

	// BotAliasTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botaliastags
	BotAliasTags cfz.ExpressionSlice[cfz.Tag] `json:"BotAliasTags,omitempty"`

	// BotId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botid
	BotId cfz.Expression[string] `json:"BotId,omitempty"`

	// BotVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-botversion
	BotVersion cfz.Expression[string] `json:"BotVersion,omitempty"`

	// ConversationLogSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-conversationlogsettings
	ConversationLogSettings cfz.Expression[AWS_Lex_BotAlias_ConversationLogSettings] `json:"ConversationLogSettings,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// SentimentAnalysisSettings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lex-botalias.html#cfn-lex-botalias-sentimentanalysissettings
	SentimentAnalysisSettings cfz.Expression[AWS_Lex_BotAlias_SentimentAnalysisSettings] `json:"SentimentAnalysisSettings,omitempty"`
}

// New__AWS_Lex_BotAlias initializes a new *AWS_Lex_BotAlias.
func New__AWS_Lex_BotAlias(logicalName string) *AWS_Lex_BotAlias {
	return &AWS_Lex_BotAlias{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lex_BotAlias) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lex_BotAlias) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lex_BotAlias) GetType() string {
	return AWS_Lex_BotAlias__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lex_BotAlias) Set__LogicalName(v string) *AWS_Lex_BotAlias {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lex_BotAlias) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lex_BotAlias {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lex_BotAlias) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lex_BotAlias {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lex_BotAlias) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lex_BotAlias {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lex_BotAlias) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lex_BotAlias {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lex_BotAlias) Set__RequestedOutputs(v []cfz.Output) *AWS_Lex_BotAlias {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lex_BotAlias) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lex_BotAlias {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__BotAliasLocaleSettings updates property "BotAliasLocaleSettings".
func (t *AWS_Lex_BotAlias) Set__BotAliasLocaleSettings(v cfz.ExpressionSlice[AWS_Lex_BotAlias_BotAliasLocaleSettingsItem]) *AWS_Lex_BotAlias {
	t.BotAliasLocaleSettings = v
	return t
}

// SetS__BotAliasLocaleSettings updates property "BotAliasLocaleSettings".
func (t *AWS_Lex_BotAlias) SetS__BotAliasLocaleSettings(v ...cfz.Expression[AWS_Lex_BotAlias_BotAliasLocaleSettingsItem]) *AWS_Lex_BotAlias {
	t.BotAliasLocaleSettings = cfz.S(v...)
	return t
}

// SetSV__BotAliasLocaleSettings updates property "BotAliasLocaleSettings".
func (t *AWS_Lex_BotAlias) SetSV__BotAliasLocaleSettings(v ...AWS_Lex_BotAlias_BotAliasLocaleSettingsItem) *AWS_Lex_BotAlias {
	t.BotAliasLocaleSettings = cfz.SV(v...)
	return t
}

// Set__BotAliasName updates property "BotAliasName".
func (t *AWS_Lex_BotAlias) Set__BotAliasName(v cfz.Expression[string]) *AWS_Lex_BotAlias {
	t.BotAliasName = v
	return t
}

// SetV__BotAliasName updates property "BotAliasName".
func (t *AWS_Lex_BotAlias) SetV__BotAliasName(v string) *AWS_Lex_BotAlias {
	t.BotAliasName = cfz.V(v)
	return t
}

// Set__BotAliasTags updates property "BotAliasTags".
func (t *AWS_Lex_BotAlias) Set__BotAliasTags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Lex_BotAlias {
	t.BotAliasTags = v
	return t
}

// SetS__BotAliasTags updates property "BotAliasTags".
func (t *AWS_Lex_BotAlias) SetS__BotAliasTags(v ...cfz.Expression[cfz.Tag]) *AWS_Lex_BotAlias {
	t.BotAliasTags = cfz.S(v...)
	return t
}

// SetSV__BotAliasTags updates property "BotAliasTags".
func (t *AWS_Lex_BotAlias) SetSV__BotAliasTags(v ...cfz.Tag) *AWS_Lex_BotAlias {
	t.BotAliasTags = cfz.SV(v...)
	return t
}

// Set__BotId updates property "BotId".
func (t *AWS_Lex_BotAlias) Set__BotId(v cfz.Expression[string]) *AWS_Lex_BotAlias {
	t.BotId = v
	return t
}

// SetV__BotId updates property "BotId".
func (t *AWS_Lex_BotAlias) SetV__BotId(v string) *AWS_Lex_BotAlias {
	t.BotId = cfz.V(v)
	return t
}

// Set__BotVersion updates property "BotVersion".
func (t *AWS_Lex_BotAlias) Set__BotVersion(v cfz.Expression[string]) *AWS_Lex_BotAlias {
	t.BotVersion = v
	return t
}

// SetV__BotVersion updates property "BotVersion".
func (t *AWS_Lex_BotAlias) SetV__BotVersion(v string) *AWS_Lex_BotAlias {
	t.BotVersion = cfz.V(v)
	return t
}

// Set__ConversationLogSettings updates property "ConversationLogSettings".
func (t *AWS_Lex_BotAlias) Set__ConversationLogSettings(v cfz.Expression[AWS_Lex_BotAlias_ConversationLogSettings]) *AWS_Lex_BotAlias {
	t.ConversationLogSettings = v
	return t
}

// SetV__ConversationLogSettings updates property "ConversationLogSettings".
func (t *AWS_Lex_BotAlias) SetV__ConversationLogSettings(v AWS_Lex_BotAlias_ConversationLogSettings) *AWS_Lex_BotAlias {
	t.ConversationLogSettings = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Lex_BotAlias) Set__Description(v cfz.Expression[string]) *AWS_Lex_BotAlias {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Lex_BotAlias) SetV__Description(v string) *AWS_Lex_BotAlias {
	t.Description = cfz.V(v)
	return t
}

// Set__SentimentAnalysisSettings updates property "SentimentAnalysisSettings".
func (t *AWS_Lex_BotAlias) Set__SentimentAnalysisSettings(v cfz.Expression[AWS_Lex_BotAlias_SentimentAnalysisSettings]) *AWS_Lex_BotAlias {
	t.SentimentAnalysisSettings = v
	return t
}

// SetV__SentimentAnalysisSettings updates property "SentimentAnalysisSettings".
func (t *AWS_Lex_BotAlias) SetV__SentimentAnalysisSettings(v AWS_Lex_BotAlias_SentimentAnalysisSettings) *AWS_Lex_BotAlias {
	t.SentimentAnalysisSettings = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lex_BotAlias) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Lex_BotAlias) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lex_BotAlias__AttributesMap.Arn))
}

// GetAtt__BotAliasId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BotAliasId
func (t *AWS_Lex_BotAlias) GetAtt__BotAliasId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lex_BotAlias__AttributesMap.BotAliasId))
}

// GetAtt__BotAliasStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BotAliasStatus
func (t *AWS_Lex_BotAlias) GetAtt__BotAliasStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lex_BotAlias__AttributesMap.BotAliasStatus))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lex_BotAlias) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Lex_BotAlias) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BotAliasId returns a conventionally configured output for an attribute of this resource.
// Attribute: BotAliasId
func (t *AWS_Lex_BotAlias) GetConventionalOutputAtt__BotAliasId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBotAliasId", t.GetAtt__BotAliasId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BotAliasStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: BotAliasStatus
func (t *AWS_Lex_BotAlias) GetConventionalOutputAtt__BotAliasStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBotAliasStatus", t.GetAtt__BotAliasStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lex_BotAlias) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lex_BotAlias

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lex_BotAlias) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
