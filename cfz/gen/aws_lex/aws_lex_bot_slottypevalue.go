// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lex

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Lex_Bot_SlotTypeValue__Type is the CloudFormation type for AWS::Lex::Bot.SlotTypeValue.
	AWS_Lex_Bot_SlotTypeValue__Type = "AWS::Lex::Bot.SlotTypeValue"
)

var (
	// AWS_Lex_Bot_SlotTypeValue__PropertiesMap reports all the CloudFormation properties for AWS::Lex::Bot.SlotTypeValue.
	AWS_Lex_Bot_SlotTypeValue__PropertiesMap = struct {
		SampleValue string
		Synonyms    string
	}{
		SampleValue: "SampleValue",
		Synonyms:    "Synonyms",
	}

	// AWS_Lex_Bot_SlotTypeValue__PropertiesSlice reports all the CloudFormation properties for AWS::Lex::Bot.SlotTypeValue.
	AWS_Lex_Bot_SlotTypeValue__PropertiesSlice = []string{
		AWS_Lex_Bot_SlotTypeValue__PropertiesMap.SampleValue,
		AWS_Lex_Bot_SlotTypeValue__PropertiesMap.Synonyms,
	}
)

// AWS_Lex_Bot_SlotTypeValue is a binding for AWS::Lex::Bot.SlotTypeValue.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-slottypevalue.html
type AWS_Lex_Bot_SlotTypeValue struct {
	// SampleValue is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-slottypevalue.html#cfn-lex-bot-slottypevalue-samplevalue
	SampleValue cfz.Expression[AWS_Lex_Bot_SampleValue] `json:"SampleValue,omitempty"`

	// Synonyms is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lex-bot-slottypevalue.html#cfn-lex-bot-slottypevalue-synonyms
	Synonyms cfz.ExpressionSlice[AWS_Lex_Bot_SampleValue] `json:"Synonyms,omitempty"`
}

// New__AWS_Lex_Bot_SlotTypeValue initializes a new AWS_Lex_Bot_SlotTypeValue.
func New__AWS_Lex_Bot_SlotTypeValue() AWS_Lex_Bot_SlotTypeValue {
	return AWS_Lex_Bot_SlotTypeValue{}
}

// GetType returns the CloudFormation type.
func (AWS_Lex_Bot_SlotTypeValue) GetType() string {
	return AWS_Lex_Bot_SlotTypeValue__Type
}

// Set__SampleValue updates property "SampleValue".
func (t AWS_Lex_Bot_SlotTypeValue) Set__SampleValue(v cfz.Expression[AWS_Lex_Bot_SampleValue]) AWS_Lex_Bot_SlotTypeValue {
	t.SampleValue = v
	return t
}

// SetV__SampleValue updates property "SampleValue".
func (t AWS_Lex_Bot_SlotTypeValue) SetV__SampleValue(v AWS_Lex_Bot_SampleValue) AWS_Lex_Bot_SlotTypeValue {
	t.SampleValue = cfz.V(v)
	return t
}

// Set__Synonyms updates property "Synonyms".
func (t AWS_Lex_Bot_SlotTypeValue) Set__Synonyms(v cfz.ExpressionSlice[AWS_Lex_Bot_SampleValue]) AWS_Lex_Bot_SlotTypeValue {
	t.Synonyms = v
	return t
}

// SetS__Synonyms updates property "Synonyms".
func (t AWS_Lex_Bot_SlotTypeValue) SetS__Synonyms(v ...cfz.Expression[AWS_Lex_Bot_SampleValue]) AWS_Lex_Bot_SlotTypeValue {
	t.Synonyms = cfz.S(v...)
	return t
}

// SetSV__Synonyms updates property "Synonyms".
func (t AWS_Lex_Bot_SlotTypeValue) SetSV__Synonyms(v ...AWS_Lex_Bot_SampleValue) AWS_Lex_Bot_SlotTypeValue {
	t.Synonyms = cfz.SV(v...)
	return t
}
