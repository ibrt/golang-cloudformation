// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_backup

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Backup_Framework)(nil)
	_ cfz.Resource                   = (*AWS_Backup_Framework)(nil)
)

const (
	// AWS_Backup_Framework__Type is the CloudFormation type for AWS::Backup::Framework.
	AWS_Backup_Framework__Type = "AWS::Backup::Framework"
)

var (
	// AWS_Backup_Framework__AttributesMap reports all the CloudFormation attributes for AWS::Backup::Framework.
	AWS_Backup_Framework__AttributesMap = struct {
		CreationTime     string
		DeploymentStatus string
		FrameworkArn     string
		FrameworkStatus  string
	}{
		CreationTime:     "CreationTime",
		DeploymentStatus: "DeploymentStatus",
		FrameworkArn:     "FrameworkArn",
		FrameworkStatus:  "FrameworkStatus",
	}

	// AWS_Backup_Framework__AttributesSlice reports all the CloudFormation attributes for AWS::Backup::Framework.
	AWS_Backup_Framework__AttributesSlice = []string{
		AWS_Backup_Framework__AttributesMap.CreationTime,
		AWS_Backup_Framework__AttributesMap.DeploymentStatus,
		AWS_Backup_Framework__AttributesMap.FrameworkArn,
		AWS_Backup_Framework__AttributesMap.FrameworkStatus,
	}
)

var (
	// AWS_Backup_Framework__PropertiesMap reports all the CloudFormation properties for AWS::Backup::Framework.
	AWS_Backup_Framework__PropertiesMap = struct {
		FrameworkControls    string
		FrameworkDescription string
		FrameworkName        string
		FrameworkTags        string
	}{
		FrameworkControls:    "FrameworkControls",
		FrameworkDescription: "FrameworkDescription",
		FrameworkName:        "FrameworkName",
		FrameworkTags:        "FrameworkTags",
	}

	// AWS_Backup_Framework__PropertiesSlice reports all the CloudFormation properties for AWS::Backup::Framework.
	AWS_Backup_Framework__PropertiesSlice = []string{
		AWS_Backup_Framework__PropertiesMap.FrameworkControls,
		AWS_Backup_Framework__PropertiesMap.FrameworkDescription,
		AWS_Backup_Framework__PropertiesMap.FrameworkName,
		AWS_Backup_Framework__PropertiesMap.FrameworkTags,
	}
)

// AWS_Backup_Framework is a binding for AWS::Backup::Framework.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html
type AWS_Backup_Framework struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// FrameworkControls is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkcontrols
	FrameworkControls cfz.ExpressionSlice[AWS_Backup_Framework_FrameworkControl] `json:"FrameworkControls,omitempty"`

	// FrameworkDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkdescription
	FrameworkDescription cfz.Expression[string] `json:"FrameworkDescription,omitempty"`

	// FrameworkName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworkname
	FrameworkName cfz.Expression[string] `json:"FrameworkName,omitempty"`

	// FrameworkTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-framework.html#cfn-backup-framework-frameworktags
	FrameworkTags cfz.ExpressionSlice[cfz.Tag] `json:"FrameworkTags,omitempty"`
}

// New__AWS_Backup_Framework initializes a new *AWS_Backup_Framework.
func New__AWS_Backup_Framework(logicalName string) *AWS_Backup_Framework {
	return &AWS_Backup_Framework{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Backup_Framework) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Backup_Framework) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Backup_Framework) GetType() string {
	return AWS_Backup_Framework__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Backup_Framework) Set__LogicalName(v string) *AWS_Backup_Framework {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Backup_Framework) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Backup_Framework {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Backup_Framework) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Backup_Framework {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Backup_Framework) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Backup_Framework {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Backup_Framework) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Backup_Framework {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Backup_Framework) Set__RequestedOutputs(v []cfz.Output) *AWS_Backup_Framework {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Backup_Framework) Add__RequestedOutputs(v ...cfz.Output) *AWS_Backup_Framework {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__FrameworkControls updates property "FrameworkControls".
func (t *AWS_Backup_Framework) Set__FrameworkControls(v cfz.ExpressionSlice[AWS_Backup_Framework_FrameworkControl]) *AWS_Backup_Framework {
	t.FrameworkControls = v
	return t
}

// SetS__FrameworkControls updates property "FrameworkControls".
func (t *AWS_Backup_Framework) SetS__FrameworkControls(v ...cfz.Expression[AWS_Backup_Framework_FrameworkControl]) *AWS_Backup_Framework {
	t.FrameworkControls = cfz.S(v...)
	return t
}

// SetSV__FrameworkControls updates property "FrameworkControls".
func (t *AWS_Backup_Framework) SetSV__FrameworkControls(v ...AWS_Backup_Framework_FrameworkControl) *AWS_Backup_Framework {
	t.FrameworkControls = cfz.SV(v...)
	return t
}

// Set__FrameworkDescription updates property "FrameworkDescription".
func (t *AWS_Backup_Framework) Set__FrameworkDescription(v cfz.Expression[string]) *AWS_Backup_Framework {
	t.FrameworkDescription = v
	return t
}

// SetV__FrameworkDescription updates property "FrameworkDescription".
func (t *AWS_Backup_Framework) SetV__FrameworkDescription(v string) *AWS_Backup_Framework {
	t.FrameworkDescription = cfz.V(v)
	return t
}

// Set__FrameworkName updates property "FrameworkName".
func (t *AWS_Backup_Framework) Set__FrameworkName(v cfz.Expression[string]) *AWS_Backup_Framework {
	t.FrameworkName = v
	return t
}

// SetV__FrameworkName updates property "FrameworkName".
func (t *AWS_Backup_Framework) SetV__FrameworkName(v string) *AWS_Backup_Framework {
	t.FrameworkName = cfz.V(v)
	return t
}

// Set__FrameworkTags updates property "FrameworkTags".
func (t *AWS_Backup_Framework) Set__FrameworkTags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Backup_Framework {
	t.FrameworkTags = v
	return t
}

// SetS__FrameworkTags updates property "FrameworkTags".
func (t *AWS_Backup_Framework) SetS__FrameworkTags(v ...cfz.Expression[cfz.Tag]) *AWS_Backup_Framework {
	t.FrameworkTags = cfz.S(v...)
	return t
}

// SetSV__FrameworkTags updates property "FrameworkTags".
func (t *AWS_Backup_Framework) SetSV__FrameworkTags(v ...cfz.Tag) *AWS_Backup_Framework {
	t.FrameworkTags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Backup_Framework) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_Backup_Framework) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Backup_Framework__AttributesMap.CreationTime))
}

// GetAtt__DeploymentStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DeploymentStatus
func (t *AWS_Backup_Framework) GetAtt__DeploymentStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Backup_Framework__AttributesMap.DeploymentStatus))
}

// GetAtt__FrameworkArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FrameworkArn
func (t *AWS_Backup_Framework) GetAtt__FrameworkArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Backup_Framework__AttributesMap.FrameworkArn))
}

// GetAtt__FrameworkStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: FrameworkStatus
func (t *AWS_Backup_Framework) GetAtt__FrameworkStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Backup_Framework__AttributesMap.FrameworkStatus))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Backup_Framework) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_Backup_Framework) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DeploymentStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: DeploymentStatus
func (t *AWS_Backup_Framework) GetConventionalOutputAtt__DeploymentStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDeploymentStatus", t.GetAtt__DeploymentStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FrameworkArn returns a conventionally configured output for an attribute of this resource.
// Attribute: FrameworkArn
func (t *AWS_Backup_Framework) GetConventionalOutputAtt__FrameworkArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFrameworkArn", t.GetAtt__FrameworkArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__FrameworkStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: FrameworkStatus
func (t *AWS_Backup_Framework) GetConventionalOutputAtt__FrameworkStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttFrameworkStatus", t.GetAtt__FrameworkStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Backup_Framework) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Backup_Framework

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Backup_Framework) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
