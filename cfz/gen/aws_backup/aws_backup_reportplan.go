// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_backup

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Backup_ReportPlan)(nil)
	_ cfz.Resource                   = (*AWS_Backup_ReportPlan)(nil)
)

const (
	// AWS_Backup_ReportPlan__Type is the CloudFormation type for AWS::Backup::ReportPlan.
	AWS_Backup_ReportPlan__Type = "AWS::Backup::ReportPlan"
)

var (
	// AWS_Backup_ReportPlan__AttributesMap reports all the CloudFormation attributes for AWS::Backup::ReportPlan.
	AWS_Backup_ReportPlan__AttributesMap = struct {
		ReportPlanArn string
	}{
		ReportPlanArn: "ReportPlanArn",
	}

	// AWS_Backup_ReportPlan__AttributesSlice reports all the CloudFormation attributes for AWS::Backup::ReportPlan.
	AWS_Backup_ReportPlan__AttributesSlice = []string{
		AWS_Backup_ReportPlan__AttributesMap.ReportPlanArn,
	}
)

var (
	// AWS_Backup_ReportPlan__PropertiesMap reports all the CloudFormation properties for AWS::Backup::ReportPlan.
	AWS_Backup_ReportPlan__PropertiesMap = struct {
		ReportDeliveryChannel string
		ReportPlanDescription string
		ReportPlanName        string
		ReportPlanTags        string
		ReportSetting         string
	}{
		ReportDeliveryChannel: "ReportDeliveryChannel",
		ReportPlanDescription: "ReportPlanDescription",
		ReportPlanName:        "ReportPlanName",
		ReportPlanTags:        "ReportPlanTags",
		ReportSetting:         "ReportSetting",
	}

	// AWS_Backup_ReportPlan__PropertiesSlice reports all the CloudFormation properties for AWS::Backup::ReportPlan.
	AWS_Backup_ReportPlan__PropertiesSlice = []string{
		AWS_Backup_ReportPlan__PropertiesMap.ReportDeliveryChannel,
		AWS_Backup_ReportPlan__PropertiesMap.ReportPlanDescription,
		AWS_Backup_ReportPlan__PropertiesMap.ReportPlanName,
		AWS_Backup_ReportPlan__PropertiesMap.ReportPlanTags,
		AWS_Backup_ReportPlan__PropertiesMap.ReportSetting,
	}
)

// AWS_Backup_ReportPlan is a binding for AWS::Backup::ReportPlan.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html
type AWS_Backup_ReportPlan struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ReportDeliveryChannel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportdeliverychannel
	ReportDeliveryChannel cfz.Expression[AWS_Backup_ReportPlan_ReportDeliveryChannel] `json:"ReportDeliveryChannel,omitempty"`

	// ReportPlanDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplandescription
	ReportPlanDescription cfz.Expression[string] `json:"ReportPlanDescription,omitempty"`

	// ReportPlanName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplanname
	ReportPlanName cfz.Expression[string] `json:"ReportPlanName,omitempty"`

	// ReportPlanTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportplantags
	ReportPlanTags cfz.ExpressionSlice[cfz.Tag] `json:"ReportPlanTags,omitempty"`

	// ReportSetting is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-reportplan.html#cfn-backup-reportplan-reportsetting
	ReportSetting cfz.Expression[AWS_Backup_ReportPlan_ReportSetting] `json:"ReportSetting,omitempty"`
}

// New__AWS_Backup_ReportPlan initializes a new *AWS_Backup_ReportPlan.
func New__AWS_Backup_ReportPlan(logicalName string) *AWS_Backup_ReportPlan {
	return &AWS_Backup_ReportPlan{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Backup_ReportPlan) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Backup_ReportPlan) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Backup_ReportPlan) GetType() string {
	return AWS_Backup_ReportPlan__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Backup_ReportPlan) Set__LogicalName(v string) *AWS_Backup_ReportPlan {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Backup_ReportPlan) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Backup_ReportPlan {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Backup_ReportPlan) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Backup_ReportPlan {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Backup_ReportPlan) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Backup_ReportPlan {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Backup_ReportPlan) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Backup_ReportPlan {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Backup_ReportPlan) Set__RequestedOutputs(v []cfz.Output) *AWS_Backup_ReportPlan {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Backup_ReportPlan) Add__RequestedOutputs(v ...cfz.Output) *AWS_Backup_ReportPlan {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ReportDeliveryChannel updates property "ReportDeliveryChannel".
func (t *AWS_Backup_ReportPlan) Set__ReportDeliveryChannel(v cfz.Expression[AWS_Backup_ReportPlan_ReportDeliveryChannel]) *AWS_Backup_ReportPlan {
	t.ReportDeliveryChannel = v
	return t
}

// SetV__ReportDeliveryChannel updates property "ReportDeliveryChannel".
func (t *AWS_Backup_ReportPlan) SetV__ReportDeliveryChannel(v AWS_Backup_ReportPlan_ReportDeliveryChannel) *AWS_Backup_ReportPlan {
	t.ReportDeliveryChannel = cfz.V(v)
	return t
}

// Set__ReportPlanDescription updates property "ReportPlanDescription".
func (t *AWS_Backup_ReportPlan) Set__ReportPlanDescription(v cfz.Expression[string]) *AWS_Backup_ReportPlan {
	t.ReportPlanDescription = v
	return t
}

// SetV__ReportPlanDescription updates property "ReportPlanDescription".
func (t *AWS_Backup_ReportPlan) SetV__ReportPlanDescription(v string) *AWS_Backup_ReportPlan {
	t.ReportPlanDescription = cfz.V(v)
	return t
}

// Set__ReportPlanName updates property "ReportPlanName".
func (t *AWS_Backup_ReportPlan) Set__ReportPlanName(v cfz.Expression[string]) *AWS_Backup_ReportPlan {
	t.ReportPlanName = v
	return t
}

// SetV__ReportPlanName updates property "ReportPlanName".
func (t *AWS_Backup_ReportPlan) SetV__ReportPlanName(v string) *AWS_Backup_ReportPlan {
	t.ReportPlanName = cfz.V(v)
	return t
}

// Set__ReportPlanTags updates property "ReportPlanTags".
func (t *AWS_Backup_ReportPlan) Set__ReportPlanTags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Backup_ReportPlan {
	t.ReportPlanTags = v
	return t
}

// SetS__ReportPlanTags updates property "ReportPlanTags".
func (t *AWS_Backup_ReportPlan) SetS__ReportPlanTags(v ...cfz.Expression[cfz.Tag]) *AWS_Backup_ReportPlan {
	t.ReportPlanTags = cfz.S(v...)
	return t
}

// SetSV__ReportPlanTags updates property "ReportPlanTags".
func (t *AWS_Backup_ReportPlan) SetSV__ReportPlanTags(v ...cfz.Tag) *AWS_Backup_ReportPlan {
	t.ReportPlanTags = cfz.SV(v...)
	return t
}

// Set__ReportSetting updates property "ReportSetting".
func (t *AWS_Backup_ReportPlan) Set__ReportSetting(v cfz.Expression[AWS_Backup_ReportPlan_ReportSetting]) *AWS_Backup_ReportPlan {
	t.ReportSetting = v
	return t
}

// SetV__ReportSetting updates property "ReportSetting".
func (t *AWS_Backup_ReportPlan) SetV__ReportSetting(v AWS_Backup_ReportPlan_ReportSetting) *AWS_Backup_ReportPlan {
	t.ReportSetting = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Backup_ReportPlan) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ReportPlanArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ReportPlanArn
func (t *AWS_Backup_ReportPlan) GetAtt__ReportPlanArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Backup_ReportPlan__AttributesMap.ReportPlanArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Backup_ReportPlan) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ReportPlanArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ReportPlanArn
func (t *AWS_Backup_ReportPlan) GetConventionalOutputAtt__ReportPlanArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttReportPlanArn", t.GetAtt__ReportPlanArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Backup_ReportPlan) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Backup_ReportPlan

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Backup_ReportPlan) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
