// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_backup

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Backup_BackupVault)(nil)
	_ cfz.Resource                   = (*AWS_Backup_BackupVault)(nil)
)

const (
	// AWS_Backup_BackupVault__Type is the CloudFormation type for AWS::Backup::BackupVault.
	AWS_Backup_BackupVault__Type = "AWS::Backup::BackupVault"
)

var (
	// AWS_Backup_BackupVault__AttributesMap reports all the CloudFormation attributes for AWS::Backup::BackupVault.
	AWS_Backup_BackupVault__AttributesMap = struct {
		BackupVaultArn  string
		BackupVaultName string
	}{
		BackupVaultArn:  "BackupVaultArn",
		BackupVaultName: "BackupVaultName",
	}

	// AWS_Backup_BackupVault__AttributesSlice reports all the CloudFormation attributes for AWS::Backup::BackupVault.
	AWS_Backup_BackupVault__AttributesSlice = []string{
		AWS_Backup_BackupVault__AttributesMap.BackupVaultArn,
		AWS_Backup_BackupVault__AttributesMap.BackupVaultName,
	}
)

var (
	// AWS_Backup_BackupVault__PropertiesMap reports all the CloudFormation properties for AWS::Backup::BackupVault.
	AWS_Backup_BackupVault__PropertiesMap = struct {
		AccessPolicy      string
		BackupVaultName   string
		BackupVaultTags   string
		EncryptionKeyArn  string
		LockConfiguration string
		Notifications     string
	}{
		AccessPolicy:      "AccessPolicy",
		BackupVaultName:   "BackupVaultName",
		BackupVaultTags:   "BackupVaultTags",
		EncryptionKeyArn:  "EncryptionKeyArn",
		LockConfiguration: "LockConfiguration",
		Notifications:     "Notifications",
	}

	// AWS_Backup_BackupVault__PropertiesSlice reports all the CloudFormation properties for AWS::Backup::BackupVault.
	AWS_Backup_BackupVault__PropertiesSlice = []string{
		AWS_Backup_BackupVault__PropertiesMap.AccessPolicy,
		AWS_Backup_BackupVault__PropertiesMap.BackupVaultName,
		AWS_Backup_BackupVault__PropertiesMap.BackupVaultTags,
		AWS_Backup_BackupVault__PropertiesMap.EncryptionKeyArn,
		AWS_Backup_BackupVault__PropertiesMap.LockConfiguration,
		AWS_Backup_BackupVault__PropertiesMap.Notifications,
	}
)

// AWS_Backup_BackupVault is a binding for AWS::Backup::BackupVault.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html
type AWS_Backup_BackupVault struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-accesspolicy
	AccessPolicy cfz.Expression[json.RawMessage] `json:"AccessPolicy,omitempty"`

	// BackupVaultName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaultname
	BackupVaultName cfz.Expression[string] `json:"BackupVaultName,omitempty"`

	// BackupVaultTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaulttags
	BackupVaultTags cfz.ExpressionMap[string] `json:"BackupVaultTags,omitempty"`

	// EncryptionKeyArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-encryptionkeyarn
	EncryptionKeyArn cfz.Expression[string] `json:"EncryptionKeyArn,omitempty"`

	// LockConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-lockconfiguration
	LockConfiguration cfz.Expression[AWS_Backup_BackupVault_LockConfigurationType] `json:"LockConfiguration,omitempty"`

	// Notifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-notifications
	Notifications cfz.Expression[AWS_Backup_BackupVault_NotificationObjectType] `json:"Notifications,omitempty"`
}

// New__AWS_Backup_BackupVault initializes a new *AWS_Backup_BackupVault.
func New__AWS_Backup_BackupVault(logicalName string) *AWS_Backup_BackupVault {
	return &AWS_Backup_BackupVault{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Backup_BackupVault) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Backup_BackupVault) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Backup_BackupVault) GetType() string {
	return AWS_Backup_BackupVault__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Backup_BackupVault) Set__LogicalName(v string) *AWS_Backup_BackupVault {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Backup_BackupVault) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Backup_BackupVault {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Backup_BackupVault) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Backup_BackupVault {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Backup_BackupVault) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Backup_BackupVault {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Backup_BackupVault) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Backup_BackupVault {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Backup_BackupVault) Set__RequestedOutputs(v []cfz.Output) *AWS_Backup_BackupVault {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Backup_BackupVault) Add__RequestedOutputs(v ...cfz.Output) *AWS_Backup_BackupVault {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessPolicy updates property "AccessPolicy".
func (t *AWS_Backup_BackupVault) Set__AccessPolicy(v cfz.Expression[json.RawMessage]) *AWS_Backup_BackupVault {
	t.AccessPolicy = v
	return t
}

// SetV__AccessPolicy updates property "AccessPolicy".
func (t *AWS_Backup_BackupVault) SetV__AccessPolicy(v json.RawMessage) *AWS_Backup_BackupVault {
	t.AccessPolicy = cfz.V(v)
	return t
}

// Set__BackupVaultName updates property "BackupVaultName".
func (t *AWS_Backup_BackupVault) Set__BackupVaultName(v cfz.Expression[string]) *AWS_Backup_BackupVault {
	t.BackupVaultName = v
	return t
}

// SetV__BackupVaultName updates property "BackupVaultName".
func (t *AWS_Backup_BackupVault) SetV__BackupVaultName(v string) *AWS_Backup_BackupVault {
	t.BackupVaultName = cfz.V(v)
	return t
}

// Set__BackupVaultTags updates property "BackupVaultTags".
func (t *AWS_Backup_BackupVault) Set__BackupVaultTags(v cfz.ExpressionMap[string]) *AWS_Backup_BackupVault {
	t.BackupVaultTags = v
	return t
}

// SetM__BackupVaultTags updates property "BackupVaultTags".
func (t *AWS_Backup_BackupVault) SetM__BackupVaultTags(v ...map[string]cfz.Expression[string]) *AWS_Backup_BackupVault {
	t.BackupVaultTags = cfz.M(v...)
	return t
}

// SetMV__BackupVaultTags updates property "BackupVaultTags".
func (t *AWS_Backup_BackupVault) SetMV__BackupVaultTags(v ...map[string]string) *AWS_Backup_BackupVault {
	t.BackupVaultTags = cfz.MV(v...)
	return t
}

// Set__EncryptionKeyArn updates property "EncryptionKeyArn".
func (t *AWS_Backup_BackupVault) Set__EncryptionKeyArn(v cfz.Expression[string]) *AWS_Backup_BackupVault {
	t.EncryptionKeyArn = v
	return t
}

// SetV__EncryptionKeyArn updates property "EncryptionKeyArn".
func (t *AWS_Backup_BackupVault) SetV__EncryptionKeyArn(v string) *AWS_Backup_BackupVault {
	t.EncryptionKeyArn = cfz.V(v)
	return t
}

// Set__LockConfiguration updates property "LockConfiguration".
func (t *AWS_Backup_BackupVault) Set__LockConfiguration(v cfz.Expression[AWS_Backup_BackupVault_LockConfigurationType]) *AWS_Backup_BackupVault {
	t.LockConfiguration = v
	return t
}

// SetV__LockConfiguration updates property "LockConfiguration".
func (t *AWS_Backup_BackupVault) SetV__LockConfiguration(v AWS_Backup_BackupVault_LockConfigurationType) *AWS_Backup_BackupVault {
	t.LockConfiguration = cfz.V(v)
	return t
}

// Set__Notifications updates property "Notifications".
func (t *AWS_Backup_BackupVault) Set__Notifications(v cfz.Expression[AWS_Backup_BackupVault_NotificationObjectType]) *AWS_Backup_BackupVault {
	t.Notifications = v
	return t
}

// SetV__Notifications updates property "Notifications".
func (t *AWS_Backup_BackupVault) SetV__Notifications(v AWS_Backup_BackupVault_NotificationObjectType) *AWS_Backup_BackupVault {
	t.Notifications = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Backup_BackupVault) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__BackupVaultArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BackupVaultArn
func (t *AWS_Backup_BackupVault) GetAtt__BackupVaultArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Backup_BackupVault__AttributesMap.BackupVaultArn))
}

// GetAtt__BackupVaultName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BackupVaultName
func (t *AWS_Backup_BackupVault) GetAtt__BackupVaultName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Backup_BackupVault__AttributesMap.BackupVaultName))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Backup_BackupVault) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BackupVaultArn returns a conventionally configured output for an attribute of this resource.
// Attribute: BackupVaultArn
func (t *AWS_Backup_BackupVault) GetConventionalOutputAtt__BackupVaultArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBackupVaultArn", t.GetAtt__BackupVaultArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BackupVaultName returns a conventionally configured output for an attribute of this resource.
// Attribute: BackupVaultName
func (t *AWS_Backup_BackupVault) GetConventionalOutputAtt__BackupVaultName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBackupVaultName", t.GetAtt__BackupVaultName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Backup_BackupVault) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Backup_BackupVault

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Backup_BackupVault) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
