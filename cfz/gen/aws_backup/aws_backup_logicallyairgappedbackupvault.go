// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_backup

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Backup_LogicallyAirGappedBackupVault)(nil)
	_ cfz.Resource                   = (*AWS_Backup_LogicallyAirGappedBackupVault)(nil)
)

const (
	// AWS_Backup_LogicallyAirGappedBackupVault__Type is the CloudFormation type for AWS::Backup::LogicallyAirGappedBackupVault.
	AWS_Backup_LogicallyAirGappedBackupVault__Type = "AWS::Backup::LogicallyAirGappedBackupVault"
)

var (
	// AWS_Backup_LogicallyAirGappedBackupVault__AttributesMap reports all the CloudFormation attributes for AWS::Backup::LogicallyAirGappedBackupVault.
	AWS_Backup_LogicallyAirGappedBackupVault__AttributesMap = struct {
		BackupVaultArn   string
		EncryptionKeyArn string
	}{
		BackupVaultArn:   "BackupVaultArn",
		EncryptionKeyArn: "EncryptionKeyArn",
	}

	// AWS_Backup_LogicallyAirGappedBackupVault__AttributesSlice reports all the CloudFormation attributes for AWS::Backup::LogicallyAirGappedBackupVault.
	AWS_Backup_LogicallyAirGappedBackupVault__AttributesSlice = []string{
		AWS_Backup_LogicallyAirGappedBackupVault__AttributesMap.BackupVaultArn,
		AWS_Backup_LogicallyAirGappedBackupVault__AttributesMap.EncryptionKeyArn,
	}
)

var (
	// AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap reports all the CloudFormation properties for AWS::Backup::LogicallyAirGappedBackupVault.
	AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap = struct {
		AccessPolicy     string
		BackupVaultName  string
		BackupVaultTags  string
		MaxRetentionDays string
		MinRetentionDays string
		Notifications    string
		VaultState       string
		VaultType        string
	}{
		AccessPolicy:     "AccessPolicy",
		BackupVaultName:  "BackupVaultName",
		BackupVaultTags:  "BackupVaultTags",
		MaxRetentionDays: "MaxRetentionDays",
		MinRetentionDays: "MinRetentionDays",
		Notifications:    "Notifications",
		VaultState:       "VaultState",
		VaultType:        "VaultType",
	}

	// AWS_Backup_LogicallyAirGappedBackupVault__PropertiesSlice reports all the CloudFormation properties for AWS::Backup::LogicallyAirGappedBackupVault.
	AWS_Backup_LogicallyAirGappedBackupVault__PropertiesSlice = []string{
		AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap.AccessPolicy,
		AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap.BackupVaultName,
		AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap.BackupVaultTags,
		AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap.MaxRetentionDays,
		AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap.MinRetentionDays,
		AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap.Notifications,
		AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap.VaultState,
		AWS_Backup_LogicallyAirGappedBackupVault__PropertiesMap.VaultType,
	}
)

// AWS_Backup_LogicallyAirGappedBackupVault is a binding for AWS::Backup::LogicallyAirGappedBackupVault.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html
type AWS_Backup_LogicallyAirGappedBackupVault struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-accesspolicy
	AccessPolicy cfz.Expression[json.RawMessage] `json:"AccessPolicy,omitempty"`

	// BackupVaultName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-backupvaultname
	BackupVaultName cfz.Expression[string] `json:"BackupVaultName,omitempty"`

	// BackupVaultTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-backupvaulttags
	BackupVaultTags cfz.ExpressionMap[string] `json:"BackupVaultTags,omitempty"`

	// MaxRetentionDays is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-maxretentiondays
	MaxRetentionDays cfz.Expression[int32] `json:"MaxRetentionDays,omitempty"`

	// MinRetentionDays is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-minretentiondays
	MinRetentionDays cfz.Expression[int32] `json:"MinRetentionDays,omitempty"`

	// Notifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-notifications
	Notifications cfz.Expression[AWS_Backup_LogicallyAirGappedBackupVault_NotificationObjectType] `json:"Notifications,omitempty"`

	// VaultState is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-vaultstate
	VaultState cfz.Expression[string] `json:"VaultState,omitempty"`

	// VaultType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-logicallyairgappedbackupvault.html#cfn-backup-logicallyairgappedbackupvault-vaulttype
	VaultType cfz.Expression[string] `json:"VaultType,omitempty"`
}

// New__AWS_Backup_LogicallyAirGappedBackupVault initializes a new *AWS_Backup_LogicallyAirGappedBackupVault.
func New__AWS_Backup_LogicallyAirGappedBackupVault(logicalName string) *AWS_Backup_LogicallyAirGappedBackupVault {
	return &AWS_Backup_LogicallyAirGappedBackupVault{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Backup_LogicallyAirGappedBackupVault) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Backup_LogicallyAirGappedBackupVault) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Backup_LogicallyAirGappedBackupVault) GetType() string {
	return AWS_Backup_LogicallyAirGappedBackupVault__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__LogicalName(v string) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__RequestedOutputs(v []cfz.Output) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Add__RequestedOutputs(v ...cfz.Output) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessPolicy updates property "AccessPolicy".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__AccessPolicy(v cfz.Expression[json.RawMessage]) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.AccessPolicy = v
	return t
}

// SetV__AccessPolicy updates property "AccessPolicy".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) SetV__AccessPolicy(v json.RawMessage) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.AccessPolicy = cfz.V(v)
	return t
}

// Set__BackupVaultName updates property "BackupVaultName".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__BackupVaultName(v cfz.Expression[string]) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.BackupVaultName = v
	return t
}

// SetV__BackupVaultName updates property "BackupVaultName".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) SetV__BackupVaultName(v string) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.BackupVaultName = cfz.V(v)
	return t
}

// Set__BackupVaultTags updates property "BackupVaultTags".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__BackupVaultTags(v cfz.ExpressionMap[string]) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.BackupVaultTags = v
	return t
}

// SetM__BackupVaultTags updates property "BackupVaultTags".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) SetM__BackupVaultTags(v ...map[string]cfz.Expression[string]) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.BackupVaultTags = cfz.M(v...)
	return t
}

// SetMV__BackupVaultTags updates property "BackupVaultTags".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) SetMV__BackupVaultTags(v ...map[string]string) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.BackupVaultTags = cfz.MV(v...)
	return t
}

// Set__MaxRetentionDays updates property "MaxRetentionDays".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__MaxRetentionDays(v cfz.Expression[int32]) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.MaxRetentionDays = v
	return t
}

// SetV__MaxRetentionDays updates property "MaxRetentionDays".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) SetV__MaxRetentionDays(v int32) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.MaxRetentionDays = cfz.V(v)
	return t
}

// Set__MinRetentionDays updates property "MinRetentionDays".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__MinRetentionDays(v cfz.Expression[int32]) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.MinRetentionDays = v
	return t
}

// SetV__MinRetentionDays updates property "MinRetentionDays".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) SetV__MinRetentionDays(v int32) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.MinRetentionDays = cfz.V(v)
	return t
}

// Set__Notifications updates property "Notifications".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__Notifications(v cfz.Expression[AWS_Backup_LogicallyAirGappedBackupVault_NotificationObjectType]) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.Notifications = v
	return t
}

// SetV__Notifications updates property "Notifications".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) SetV__Notifications(v AWS_Backup_LogicallyAirGappedBackupVault_NotificationObjectType) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.Notifications = cfz.V(v)
	return t
}

// Set__VaultState updates property "VaultState".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__VaultState(v cfz.Expression[string]) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.VaultState = v
	return t
}

// SetV__VaultState updates property "VaultState".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) SetV__VaultState(v string) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.VaultState = cfz.V(v)
	return t
}

// Set__VaultType updates property "VaultType".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Set__VaultType(v cfz.Expression[string]) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.VaultType = v
	return t
}

// SetV__VaultType updates property "VaultType".
func (t *AWS_Backup_LogicallyAirGappedBackupVault) SetV__VaultType(v string) *AWS_Backup_LogicallyAirGappedBackupVault {
	t.VaultType = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Backup_LogicallyAirGappedBackupVault) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__BackupVaultArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BackupVaultArn
func (t *AWS_Backup_LogicallyAirGappedBackupVault) GetAtt__BackupVaultArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Backup_LogicallyAirGappedBackupVault__AttributesMap.BackupVaultArn))
}

// GetAtt__EncryptionKeyArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EncryptionKeyArn
func (t *AWS_Backup_LogicallyAirGappedBackupVault) GetAtt__EncryptionKeyArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Backup_LogicallyAirGappedBackupVault__AttributesMap.EncryptionKeyArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Backup_LogicallyAirGappedBackupVault) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BackupVaultArn returns a conventionally configured output for an attribute of this resource.
// Attribute: BackupVaultArn
func (t *AWS_Backup_LogicallyAirGappedBackupVault) GetConventionalOutputAtt__BackupVaultArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBackupVaultArn", t.GetAtt__BackupVaultArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EncryptionKeyArn returns a conventionally configured output for an attribute of this resource.
// Attribute: EncryptionKeyArn
func (t *AWS_Backup_LogicallyAirGappedBackupVault) GetConventionalOutputAtt__EncryptionKeyArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEncryptionKeyArn", t.GetAtt__EncryptionKeyArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Backup_LogicallyAirGappedBackupVault) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Backup_LogicallyAirGappedBackupVault

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Backup_LogicallyAirGappedBackupVault) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
