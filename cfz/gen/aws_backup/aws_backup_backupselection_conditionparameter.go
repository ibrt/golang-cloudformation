// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_backup

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Backup_BackupSelection_ConditionParameter__Type is the CloudFormation type for AWS::Backup::BackupSelection.ConditionParameter.
	AWS_Backup_BackupSelection_ConditionParameter__Type = "AWS::Backup::BackupSelection.ConditionParameter"
)

var (
	// AWS_Backup_BackupSelection_ConditionParameter__PropertiesMap reports all the CloudFormation properties for AWS::Backup::BackupSelection.ConditionParameter.
	AWS_Backup_BackupSelection_ConditionParameter__PropertiesMap = struct {
		ConditionKey   string
		ConditionValue string
	}{
		ConditionKey:   "ConditionKey",
		ConditionValue: "ConditionValue",
	}

	// AWS_Backup_BackupSelection_ConditionParameter__PropertiesSlice reports all the CloudFormation properties for AWS::Backup::BackupSelection.ConditionParameter.
	AWS_Backup_BackupSelection_ConditionParameter__PropertiesSlice = []string{
		AWS_Backup_BackupSelection_ConditionParameter__PropertiesMap.ConditionKey,
		AWS_Backup_BackupSelection_ConditionParameter__PropertiesMap.ConditionValue,
	}
)

// AWS_Backup_BackupSelection_ConditionParameter is a binding for AWS::Backup::BackupSelection.ConditionParameter.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionparameter.html
type AWS_Backup_BackupSelection_ConditionParameter struct {
	// ConditionKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionparameter.html#cfn-backup-backupselection-conditionparameter-conditionkey
	ConditionKey cfz.Expression[string] `json:"ConditionKey,omitempty"`

	// ConditionValue is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionparameter.html#cfn-backup-backupselection-conditionparameter-conditionvalue
	ConditionValue cfz.Expression[string] `json:"ConditionValue,omitempty"`
}

// New__AWS_Backup_BackupSelection_ConditionParameter initializes a new AWS_Backup_BackupSelection_ConditionParameter.
func New__AWS_Backup_BackupSelection_ConditionParameter() AWS_Backup_BackupSelection_ConditionParameter {
	return AWS_Backup_BackupSelection_ConditionParameter{}
}

// GetType returns the CloudFormation type.
func (AWS_Backup_BackupSelection_ConditionParameter) GetType() string {
	return AWS_Backup_BackupSelection_ConditionParameter__Type
}

// Set__ConditionKey updates property "ConditionKey".
func (t AWS_Backup_BackupSelection_ConditionParameter) Set__ConditionKey(v cfz.Expression[string]) AWS_Backup_BackupSelection_ConditionParameter {
	t.ConditionKey = v
	return t
}

// SetV__ConditionKey updates property "ConditionKey".
func (t AWS_Backup_BackupSelection_ConditionParameter) SetV__ConditionKey(v string) AWS_Backup_BackupSelection_ConditionParameter {
	t.ConditionKey = cfz.V(v)
	return t
}

// Set__ConditionValue updates property "ConditionValue".
func (t AWS_Backup_BackupSelection_ConditionParameter) Set__ConditionValue(v cfz.Expression[string]) AWS_Backup_BackupSelection_ConditionParameter {
	t.ConditionValue = v
	return t
}

// SetV__ConditionValue updates property "ConditionValue".
func (t AWS_Backup_BackupSelection_ConditionParameter) SetV__ConditionValue(v string) AWS_Backup_BackupSelection_ConditionParameter {
	t.ConditionValue = cfz.V(v)
	return t
}
