// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lookoutequipment

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_LookoutEquipment_InferenceScheduler)(nil)
	_ cfz.Resource                   = (*AWS_LookoutEquipment_InferenceScheduler)(nil)
)

const (
	// AWS_LookoutEquipment_InferenceScheduler__Type is the CloudFormation type for AWS::LookoutEquipment::InferenceScheduler.
	AWS_LookoutEquipment_InferenceScheduler__Type = "AWS::LookoutEquipment::InferenceScheduler"
)

var (
	// AWS_LookoutEquipment_InferenceScheduler__AttributesMap reports all the CloudFormation attributes for AWS::LookoutEquipment::InferenceScheduler.
	AWS_LookoutEquipment_InferenceScheduler__AttributesMap = struct {
		InferenceSchedulerArn string
	}{
		InferenceSchedulerArn: "InferenceSchedulerArn",
	}

	// AWS_LookoutEquipment_InferenceScheduler__AttributesSlice reports all the CloudFormation attributes for AWS::LookoutEquipment::InferenceScheduler.
	AWS_LookoutEquipment_InferenceScheduler__AttributesSlice = []string{
		AWS_LookoutEquipment_InferenceScheduler__AttributesMap.InferenceSchedulerArn,
	}
)

var (
	// AWS_LookoutEquipment_InferenceScheduler__PropertiesMap reports all the CloudFormation properties for AWS::LookoutEquipment::InferenceScheduler.
	AWS_LookoutEquipment_InferenceScheduler__PropertiesMap = struct {
		DataDelayOffsetInMinutes string
		DataInputConfiguration   string
		DataOutputConfiguration  string
		DataUploadFrequency      string
		InferenceSchedulerName   string
		ModelName                string
		RoleArn                  string
		ServerSideKmsKeyId       string
		Tags                     string
	}{
		DataDelayOffsetInMinutes: "DataDelayOffsetInMinutes",
		DataInputConfiguration:   "DataInputConfiguration",
		DataOutputConfiguration:  "DataOutputConfiguration",
		DataUploadFrequency:      "DataUploadFrequency",
		InferenceSchedulerName:   "InferenceSchedulerName",
		ModelName:                "ModelName",
		RoleArn:                  "RoleArn",
		ServerSideKmsKeyId:       "ServerSideKmsKeyId",
		Tags:                     "Tags",
	}

	// AWS_LookoutEquipment_InferenceScheduler__PropertiesSlice reports all the CloudFormation properties for AWS::LookoutEquipment::InferenceScheduler.
	AWS_LookoutEquipment_InferenceScheduler__PropertiesSlice = []string{
		AWS_LookoutEquipment_InferenceScheduler__PropertiesMap.DataDelayOffsetInMinutes,
		AWS_LookoutEquipment_InferenceScheduler__PropertiesMap.DataInputConfiguration,
		AWS_LookoutEquipment_InferenceScheduler__PropertiesMap.DataOutputConfiguration,
		AWS_LookoutEquipment_InferenceScheduler__PropertiesMap.DataUploadFrequency,
		AWS_LookoutEquipment_InferenceScheduler__PropertiesMap.InferenceSchedulerName,
		AWS_LookoutEquipment_InferenceScheduler__PropertiesMap.ModelName,
		AWS_LookoutEquipment_InferenceScheduler__PropertiesMap.RoleArn,
		AWS_LookoutEquipment_InferenceScheduler__PropertiesMap.ServerSideKmsKeyId,
		AWS_LookoutEquipment_InferenceScheduler__PropertiesMap.Tags,
	}
)

// AWS_LookoutEquipment_InferenceScheduler is a binding for AWS::LookoutEquipment::InferenceScheduler.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html
type AWS_LookoutEquipment_InferenceScheduler struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DataDelayOffsetInMinutes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-datadelayoffsetinminutes
	DataDelayOffsetInMinutes cfz.Expression[int32] `json:"DataDelayOffsetInMinutes,omitempty"`

	// DataInputConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-datainputconfiguration
	DataInputConfiguration cfz.Expression[AWS_LookoutEquipment_InferenceScheduler_DataInputConfiguration] `json:"DataInputConfiguration,omitempty"`

	// DataOutputConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-dataoutputconfiguration
	DataOutputConfiguration cfz.Expression[AWS_LookoutEquipment_InferenceScheduler_DataOutputConfiguration] `json:"DataOutputConfiguration,omitempty"`

	// DataUploadFrequency is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-datauploadfrequency
	DataUploadFrequency cfz.Expression[string] `json:"DataUploadFrequency,omitempty"`

	// InferenceSchedulerName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-inferenceschedulername
	InferenceSchedulerName cfz.Expression[string] `json:"InferenceSchedulerName,omitempty"`

	// ModelName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-modelname
	ModelName cfz.Expression[string] `json:"ModelName,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// ServerSideKmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-serversidekmskeyid
	ServerSideKmsKeyId cfz.Expression[string] `json:"ServerSideKmsKeyId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lookoutequipment-inferencescheduler.html#cfn-lookoutequipment-inferencescheduler-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_LookoutEquipment_InferenceScheduler initializes a new *AWS_LookoutEquipment_InferenceScheduler.
func New__AWS_LookoutEquipment_InferenceScheduler(logicalName string) *AWS_LookoutEquipment_InferenceScheduler {
	return &AWS_LookoutEquipment_InferenceScheduler{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_LookoutEquipment_InferenceScheduler) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_LookoutEquipment_InferenceScheduler) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_LookoutEquipment_InferenceScheduler) GetType() string {
	return AWS_LookoutEquipment_InferenceScheduler__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__LogicalName(v string) *AWS_LookoutEquipment_InferenceScheduler {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_LookoutEquipment_InferenceScheduler {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_LookoutEquipment_InferenceScheduler) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_LookoutEquipment_InferenceScheduler {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_LookoutEquipment_InferenceScheduler {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_LookoutEquipment_InferenceScheduler {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__RequestedOutputs(v []cfz.Output) *AWS_LookoutEquipment_InferenceScheduler {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_LookoutEquipment_InferenceScheduler) Add__RequestedOutputs(v ...cfz.Output) *AWS_LookoutEquipment_InferenceScheduler {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DataDelayOffsetInMinutes updates property "DataDelayOffsetInMinutes".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__DataDelayOffsetInMinutes(v cfz.Expression[int32]) *AWS_LookoutEquipment_InferenceScheduler {
	t.DataDelayOffsetInMinutes = v
	return t
}

// SetV__DataDelayOffsetInMinutes updates property "DataDelayOffsetInMinutes".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetV__DataDelayOffsetInMinutes(v int32) *AWS_LookoutEquipment_InferenceScheduler {
	t.DataDelayOffsetInMinutes = cfz.V(v)
	return t
}

// Set__DataInputConfiguration updates property "DataInputConfiguration".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__DataInputConfiguration(v cfz.Expression[AWS_LookoutEquipment_InferenceScheduler_DataInputConfiguration]) *AWS_LookoutEquipment_InferenceScheduler {
	t.DataInputConfiguration = v
	return t
}

// SetV__DataInputConfiguration updates property "DataInputConfiguration".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetV__DataInputConfiguration(v AWS_LookoutEquipment_InferenceScheduler_DataInputConfiguration) *AWS_LookoutEquipment_InferenceScheduler {
	t.DataInputConfiguration = cfz.V(v)
	return t
}

// Set__DataOutputConfiguration updates property "DataOutputConfiguration".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__DataOutputConfiguration(v cfz.Expression[AWS_LookoutEquipment_InferenceScheduler_DataOutputConfiguration]) *AWS_LookoutEquipment_InferenceScheduler {
	t.DataOutputConfiguration = v
	return t
}

// SetV__DataOutputConfiguration updates property "DataOutputConfiguration".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetV__DataOutputConfiguration(v AWS_LookoutEquipment_InferenceScheduler_DataOutputConfiguration) *AWS_LookoutEquipment_InferenceScheduler {
	t.DataOutputConfiguration = cfz.V(v)
	return t
}

// Set__DataUploadFrequency updates property "DataUploadFrequency".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__DataUploadFrequency(v cfz.Expression[string]) *AWS_LookoutEquipment_InferenceScheduler {
	t.DataUploadFrequency = v
	return t
}

// SetV__DataUploadFrequency updates property "DataUploadFrequency".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetV__DataUploadFrequency(v string) *AWS_LookoutEquipment_InferenceScheduler {
	t.DataUploadFrequency = cfz.V(v)
	return t
}

// Set__InferenceSchedulerName updates property "InferenceSchedulerName".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__InferenceSchedulerName(v cfz.Expression[string]) *AWS_LookoutEquipment_InferenceScheduler {
	t.InferenceSchedulerName = v
	return t
}

// SetV__InferenceSchedulerName updates property "InferenceSchedulerName".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetV__InferenceSchedulerName(v string) *AWS_LookoutEquipment_InferenceScheduler {
	t.InferenceSchedulerName = cfz.V(v)
	return t
}

// Set__ModelName updates property "ModelName".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__ModelName(v cfz.Expression[string]) *AWS_LookoutEquipment_InferenceScheduler {
	t.ModelName = v
	return t
}

// SetV__ModelName updates property "ModelName".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetV__ModelName(v string) *AWS_LookoutEquipment_InferenceScheduler {
	t.ModelName = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__RoleArn(v cfz.Expression[string]) *AWS_LookoutEquipment_InferenceScheduler {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetV__RoleArn(v string) *AWS_LookoutEquipment_InferenceScheduler {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__ServerSideKmsKeyId updates property "ServerSideKmsKeyId".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__ServerSideKmsKeyId(v cfz.Expression[string]) *AWS_LookoutEquipment_InferenceScheduler {
	t.ServerSideKmsKeyId = v
	return t
}

// SetV__ServerSideKmsKeyId updates property "ServerSideKmsKeyId".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetV__ServerSideKmsKeyId(v string) *AWS_LookoutEquipment_InferenceScheduler {
	t.ServerSideKmsKeyId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_LookoutEquipment_InferenceScheduler) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_LookoutEquipment_InferenceScheduler {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_LookoutEquipment_InferenceScheduler {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_LookoutEquipment_InferenceScheduler) SetSV__Tags(v ...cfz.Tag) *AWS_LookoutEquipment_InferenceScheduler {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_LookoutEquipment_InferenceScheduler) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__InferenceSchedulerArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: InferenceSchedulerArn
func (t *AWS_LookoutEquipment_InferenceScheduler) GetAtt__InferenceSchedulerArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_LookoutEquipment_InferenceScheduler__AttributesMap.InferenceSchedulerArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_LookoutEquipment_InferenceScheduler) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__InferenceSchedulerArn returns a conventionally configured output for an attribute of this resource.
// Attribute: InferenceSchedulerArn
func (t *AWS_LookoutEquipment_InferenceScheduler) GetConventionalOutputAtt__InferenceSchedulerArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttInferenceSchedulerArn", t.GetAtt__InferenceSchedulerArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_LookoutEquipment_InferenceScheduler) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_LookoutEquipment_InferenceScheduler

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_LookoutEquipment_InferenceScheduler) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
