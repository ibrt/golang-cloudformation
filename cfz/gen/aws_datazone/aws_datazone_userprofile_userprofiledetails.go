// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_datazone

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DataZone_UserProfile_UserProfileDetails__Type is the CloudFormation type for AWS::DataZone::UserProfile.UserProfileDetails.
	AWS_DataZone_UserProfile_UserProfileDetails__Type = "AWS::DataZone::UserProfile.UserProfileDetails"
)

var (
	// AWS_DataZone_UserProfile_UserProfileDetails__PropertiesMap reports all the CloudFormation properties for AWS::DataZone::UserProfile.UserProfileDetails.
	AWS_DataZone_UserProfile_UserProfileDetails__PropertiesMap = struct {
		Iam string
		Sso string
	}{
		Iam: "Iam",
		Sso: "Sso",
	}

	// AWS_DataZone_UserProfile_UserProfileDetails__PropertiesSlice reports all the CloudFormation properties for AWS::DataZone::UserProfile.UserProfileDetails.
	AWS_DataZone_UserProfile_UserProfileDetails__PropertiesSlice = []string{
		AWS_DataZone_UserProfile_UserProfileDetails__PropertiesMap.Iam,
		AWS_DataZone_UserProfile_UserProfileDetails__PropertiesMap.Sso,
	}
)

// AWS_DataZone_UserProfile_UserProfileDetails is a binding for AWS::DataZone::UserProfile.UserProfileDetails.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-userprofile-userprofiledetails.html
type AWS_DataZone_UserProfile_UserProfileDetails struct {
	// Iam is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-userprofile-userprofiledetails.html#cfn-datazone-userprofile-userprofiledetails-iam
	Iam cfz.Expression[AWS_DataZone_UserProfile_IamUserProfileDetails] `json:"Iam,omitempty"`

	// Sso is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-userprofile-userprofiledetails.html#cfn-datazone-userprofile-userprofiledetails-sso
	Sso cfz.Expression[AWS_DataZone_UserProfile_SsoUserProfileDetails] `json:"Sso,omitempty"`
}

// New__AWS_DataZone_UserProfile_UserProfileDetails initializes a new AWS_DataZone_UserProfile_UserProfileDetails.
func New__AWS_DataZone_UserProfile_UserProfileDetails() AWS_DataZone_UserProfile_UserProfileDetails {
	return AWS_DataZone_UserProfile_UserProfileDetails{}
}

// GetType returns the CloudFormation type.
func (AWS_DataZone_UserProfile_UserProfileDetails) GetType() string {
	return AWS_DataZone_UserProfile_UserProfileDetails__Type
}

// Set__Iam updates property "Iam".
func (t AWS_DataZone_UserProfile_UserProfileDetails) Set__Iam(v cfz.Expression[AWS_DataZone_UserProfile_IamUserProfileDetails]) AWS_DataZone_UserProfile_UserProfileDetails {
	t.Iam = v
	return t
}

// SetV__Iam updates property "Iam".
func (t AWS_DataZone_UserProfile_UserProfileDetails) SetV__Iam(v AWS_DataZone_UserProfile_IamUserProfileDetails) AWS_DataZone_UserProfile_UserProfileDetails {
	t.Iam = cfz.V(v)
	return t
}

// Set__Sso updates property "Sso".
func (t AWS_DataZone_UserProfile_UserProfileDetails) Set__Sso(v cfz.Expression[AWS_DataZone_UserProfile_SsoUserProfileDetails]) AWS_DataZone_UserProfile_UserProfileDetails {
	t.Sso = v
	return t
}

// SetV__Sso updates property "Sso".
func (t AWS_DataZone_UserProfile_UserProfileDetails) SetV__Sso(v AWS_DataZone_UserProfile_SsoUserProfileDetails) AWS_DataZone_UserProfile_UserProfileDetails {
	t.Sso = cfz.V(v)
	return t
}
