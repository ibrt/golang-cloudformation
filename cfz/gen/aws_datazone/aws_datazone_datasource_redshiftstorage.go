// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_datazone

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DataZone_DataSource_RedshiftStorage__Type is the CloudFormation type for AWS::DataZone::DataSource.RedshiftStorage.
	AWS_DataZone_DataSource_RedshiftStorage__Type = "AWS::DataZone::DataSource.RedshiftStorage"
)

var (
	// AWS_DataZone_DataSource_RedshiftStorage__PropertiesMap reports all the CloudFormation properties for AWS::DataZone::DataSource.RedshiftStorage.
	AWS_DataZone_DataSource_RedshiftStorage__PropertiesMap = struct {
		RedshiftClusterSource    string
		RedshiftServerlessSource string
	}{
		RedshiftClusterSource:    "RedshiftClusterSource",
		RedshiftServerlessSource: "RedshiftServerlessSource",
	}

	// AWS_DataZone_DataSource_RedshiftStorage__PropertiesSlice reports all the CloudFormation properties for AWS::DataZone::DataSource.RedshiftStorage.
	AWS_DataZone_DataSource_RedshiftStorage__PropertiesSlice = []string{
		AWS_DataZone_DataSource_RedshiftStorage__PropertiesMap.RedshiftClusterSource,
		AWS_DataZone_DataSource_RedshiftStorage__PropertiesMap.RedshiftServerlessSource,
	}
)

// AWS_DataZone_DataSource_RedshiftStorage is a binding for AWS::DataZone::DataSource.RedshiftStorage.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-datasource-redshiftstorage.html
type AWS_DataZone_DataSource_RedshiftStorage struct {
	// RedshiftClusterSource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-datasource-redshiftstorage.html#cfn-datazone-datasource-redshiftstorage-redshiftclustersource
	RedshiftClusterSource cfz.Expression[AWS_DataZone_DataSource_RedshiftClusterStorage] `json:"RedshiftClusterSource,omitempty"`

	// RedshiftServerlessSource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-datasource-redshiftstorage.html#cfn-datazone-datasource-redshiftstorage-redshiftserverlesssource
	RedshiftServerlessSource cfz.Expression[AWS_DataZone_DataSource_RedshiftServerlessStorage] `json:"RedshiftServerlessSource,omitempty"`
}

// New__AWS_DataZone_DataSource_RedshiftStorage initializes a new AWS_DataZone_DataSource_RedshiftStorage.
func New__AWS_DataZone_DataSource_RedshiftStorage() AWS_DataZone_DataSource_RedshiftStorage {
	return AWS_DataZone_DataSource_RedshiftStorage{}
}

// GetType returns the CloudFormation type.
func (AWS_DataZone_DataSource_RedshiftStorage) GetType() string {
	return AWS_DataZone_DataSource_RedshiftStorage__Type
}

// Set__RedshiftClusterSource updates property "RedshiftClusterSource".
func (t AWS_DataZone_DataSource_RedshiftStorage) Set__RedshiftClusterSource(v cfz.Expression[AWS_DataZone_DataSource_RedshiftClusterStorage]) AWS_DataZone_DataSource_RedshiftStorage {
	t.RedshiftClusterSource = v
	return t
}

// SetV__RedshiftClusterSource updates property "RedshiftClusterSource".
func (t AWS_DataZone_DataSource_RedshiftStorage) SetV__RedshiftClusterSource(v AWS_DataZone_DataSource_RedshiftClusterStorage) AWS_DataZone_DataSource_RedshiftStorage {
	t.RedshiftClusterSource = cfz.V(v)
	return t
}

// Set__RedshiftServerlessSource updates property "RedshiftServerlessSource".
func (t AWS_DataZone_DataSource_RedshiftStorage) Set__RedshiftServerlessSource(v cfz.Expression[AWS_DataZone_DataSource_RedshiftServerlessStorage]) AWS_DataZone_DataSource_RedshiftStorage {
	t.RedshiftServerlessSource = v
	return t
}

// SetV__RedshiftServerlessSource updates property "RedshiftServerlessSource".
func (t AWS_DataZone_DataSource_RedshiftStorage) SetV__RedshiftServerlessSource(v AWS_DataZone_DataSource_RedshiftServerlessStorage) AWS_DataZone_DataSource_RedshiftStorage {
	t.RedshiftServerlessSource = cfz.V(v)
	return t
}
