// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_datazone

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_DataZone_DataSource_RelationalFilterConfiguration__Type is the CloudFormation type for AWS::DataZone::DataSource.RelationalFilterConfiguration.
	AWS_DataZone_DataSource_RelationalFilterConfiguration__Type = "AWS::DataZone::DataSource.RelationalFilterConfiguration"
)

var (
	// AWS_DataZone_DataSource_RelationalFilterConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::DataZone::DataSource.RelationalFilterConfiguration.
	AWS_DataZone_DataSource_RelationalFilterConfiguration__PropertiesMap = struct {
		DatabaseName      string
		FilterExpressions string
		SchemaName        string
	}{
		DatabaseName:      "DatabaseName",
		FilterExpressions: "FilterExpressions",
		SchemaName:        "SchemaName",
	}

	// AWS_DataZone_DataSource_RelationalFilterConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::DataZone::DataSource.RelationalFilterConfiguration.
	AWS_DataZone_DataSource_RelationalFilterConfiguration__PropertiesSlice = []string{
		AWS_DataZone_DataSource_RelationalFilterConfiguration__PropertiesMap.DatabaseName,
		AWS_DataZone_DataSource_RelationalFilterConfiguration__PropertiesMap.FilterExpressions,
		AWS_DataZone_DataSource_RelationalFilterConfiguration__PropertiesMap.SchemaName,
	}
)

// AWS_DataZone_DataSource_RelationalFilterConfiguration is a binding for AWS::DataZone::DataSource.RelationalFilterConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-datasource-relationalfilterconfiguration.html
type AWS_DataZone_DataSource_RelationalFilterConfiguration struct {
	// DatabaseName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-datasource-relationalfilterconfiguration.html#cfn-datazone-datasource-relationalfilterconfiguration-databasename
	DatabaseName cfz.Expression[string] `json:"DatabaseName,omitempty"`

	// FilterExpressions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-datasource-relationalfilterconfiguration.html#cfn-datazone-datasource-relationalfilterconfiguration-filterexpressions
	FilterExpressions cfz.ExpressionSlice[AWS_DataZone_DataSource_FilterExpression] `json:"FilterExpressions,omitempty"`

	// SchemaName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-datazone-datasource-relationalfilterconfiguration.html#cfn-datazone-datasource-relationalfilterconfiguration-schemaname
	SchemaName cfz.Expression[string] `json:"SchemaName,omitempty"`
}

// New__AWS_DataZone_DataSource_RelationalFilterConfiguration initializes a new AWS_DataZone_DataSource_RelationalFilterConfiguration.
func New__AWS_DataZone_DataSource_RelationalFilterConfiguration() AWS_DataZone_DataSource_RelationalFilterConfiguration {
	return AWS_DataZone_DataSource_RelationalFilterConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_DataZone_DataSource_RelationalFilterConfiguration) GetType() string {
	return AWS_DataZone_DataSource_RelationalFilterConfiguration__Type
}

// Set__DatabaseName updates property "DatabaseName".
func (t AWS_DataZone_DataSource_RelationalFilterConfiguration) Set__DatabaseName(v cfz.Expression[string]) AWS_DataZone_DataSource_RelationalFilterConfiguration {
	t.DatabaseName = v
	return t
}

// SetV__DatabaseName updates property "DatabaseName".
func (t AWS_DataZone_DataSource_RelationalFilterConfiguration) SetV__DatabaseName(v string) AWS_DataZone_DataSource_RelationalFilterConfiguration {
	t.DatabaseName = cfz.V(v)
	return t
}

// Set__FilterExpressions updates property "FilterExpressions".
func (t AWS_DataZone_DataSource_RelationalFilterConfiguration) Set__FilterExpressions(v cfz.ExpressionSlice[AWS_DataZone_DataSource_FilterExpression]) AWS_DataZone_DataSource_RelationalFilterConfiguration {
	t.FilterExpressions = v
	return t
}

// SetS__FilterExpressions updates property "FilterExpressions".
func (t AWS_DataZone_DataSource_RelationalFilterConfiguration) SetS__FilterExpressions(v ...cfz.Expression[AWS_DataZone_DataSource_FilterExpression]) AWS_DataZone_DataSource_RelationalFilterConfiguration {
	t.FilterExpressions = cfz.S(v...)
	return t
}

// SetSV__FilterExpressions updates property "FilterExpressions".
func (t AWS_DataZone_DataSource_RelationalFilterConfiguration) SetSV__FilterExpressions(v ...AWS_DataZone_DataSource_FilterExpression) AWS_DataZone_DataSource_RelationalFilterConfiguration {
	t.FilterExpressions = cfz.SV(v...)
	return t
}

// Set__SchemaName updates property "SchemaName".
func (t AWS_DataZone_DataSource_RelationalFilterConfiguration) Set__SchemaName(v cfz.Expression[string]) AWS_DataZone_DataSource_RelationalFilterConfiguration {
	t.SchemaName = v
	return t
}

// SetV__SchemaName updates property "SchemaName".
func (t AWS_DataZone_DataSource_RelationalFilterConfiguration) SetV__SchemaName(v string) AWS_DataZone_DataSource_RelationalFilterConfiguration {
	t.SchemaName = cfz.V(v)
	return t
}
