// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_datazone

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DataZone_SubscriptionTarget)(nil)
	_ cfz.Resource                   = (*AWS_DataZone_SubscriptionTarget)(nil)
)

const (
	// AWS_DataZone_SubscriptionTarget__Type is the CloudFormation type for AWS::DataZone::SubscriptionTarget.
	AWS_DataZone_SubscriptionTarget__Type = "AWS::DataZone::SubscriptionTarget"
)

var (
	// AWS_DataZone_SubscriptionTarget__AttributesMap reports all the CloudFormation attributes for AWS::DataZone::SubscriptionTarget.
	AWS_DataZone_SubscriptionTarget__AttributesMap = struct {
		CreatedAt     string
		CreatedBy     string
		DomainId      string
		EnvironmentId string
		Id            string
		ProjectId     string
		UpdatedAt     string
		UpdatedBy     string
	}{
		CreatedAt:     "CreatedAt",
		CreatedBy:     "CreatedBy",
		DomainId:      "DomainId",
		EnvironmentId: "EnvironmentId",
		Id:            "Id",
		ProjectId:     "ProjectId",
		UpdatedAt:     "UpdatedAt",
		UpdatedBy:     "UpdatedBy",
	}

	// AWS_DataZone_SubscriptionTarget__AttributesSlice reports all the CloudFormation attributes for AWS::DataZone::SubscriptionTarget.
	AWS_DataZone_SubscriptionTarget__AttributesSlice = []string{
		AWS_DataZone_SubscriptionTarget__AttributesMap.CreatedAt,
		AWS_DataZone_SubscriptionTarget__AttributesMap.CreatedBy,
		AWS_DataZone_SubscriptionTarget__AttributesMap.DomainId,
		AWS_DataZone_SubscriptionTarget__AttributesMap.EnvironmentId,
		AWS_DataZone_SubscriptionTarget__AttributesMap.Id,
		AWS_DataZone_SubscriptionTarget__AttributesMap.ProjectId,
		AWS_DataZone_SubscriptionTarget__AttributesMap.UpdatedAt,
		AWS_DataZone_SubscriptionTarget__AttributesMap.UpdatedBy,
	}
)

var (
	// AWS_DataZone_SubscriptionTarget__PropertiesMap reports all the CloudFormation properties for AWS::DataZone::SubscriptionTarget.
	AWS_DataZone_SubscriptionTarget__PropertiesMap = struct {
		ApplicableAssetTypes     string
		AuthorizedPrincipals     string
		DomainIdentifier         string
		EnvironmentIdentifier    string
		ManageAccessRole         string
		Name                     string
		Provider                 string
		SubscriptionTargetConfig string
		Type                     string
	}{
		ApplicableAssetTypes:     "ApplicableAssetTypes",
		AuthorizedPrincipals:     "AuthorizedPrincipals",
		DomainIdentifier:         "DomainIdentifier",
		EnvironmentIdentifier:    "EnvironmentIdentifier",
		ManageAccessRole:         "ManageAccessRole",
		Name:                     "Name",
		Provider:                 "Provider",
		SubscriptionTargetConfig: "SubscriptionTargetConfig",
		Type:                     "Type",
	}

	// AWS_DataZone_SubscriptionTarget__PropertiesSlice reports all the CloudFormation properties for AWS::DataZone::SubscriptionTarget.
	AWS_DataZone_SubscriptionTarget__PropertiesSlice = []string{
		AWS_DataZone_SubscriptionTarget__PropertiesMap.ApplicableAssetTypes,
		AWS_DataZone_SubscriptionTarget__PropertiesMap.AuthorizedPrincipals,
		AWS_DataZone_SubscriptionTarget__PropertiesMap.DomainIdentifier,
		AWS_DataZone_SubscriptionTarget__PropertiesMap.EnvironmentIdentifier,
		AWS_DataZone_SubscriptionTarget__PropertiesMap.ManageAccessRole,
		AWS_DataZone_SubscriptionTarget__PropertiesMap.Name,
		AWS_DataZone_SubscriptionTarget__PropertiesMap.Provider,
		AWS_DataZone_SubscriptionTarget__PropertiesMap.SubscriptionTargetConfig,
		AWS_DataZone_SubscriptionTarget__PropertiesMap.Type,
	}
)

// AWS_DataZone_SubscriptionTarget is a binding for AWS::DataZone::SubscriptionTarget.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html
type AWS_DataZone_SubscriptionTarget struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicableAssetTypes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-applicableassettypes
	ApplicableAssetTypes cfz.ExpressionSlice[string] `json:"ApplicableAssetTypes,omitempty"`

	// AuthorizedPrincipals is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-authorizedprincipals
	AuthorizedPrincipals cfz.ExpressionSlice[string] `json:"AuthorizedPrincipals,omitempty"`

	// DomainIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-domainidentifier
	DomainIdentifier cfz.Expression[string] `json:"DomainIdentifier,omitempty"`

	// EnvironmentIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-environmentidentifier
	EnvironmentIdentifier cfz.Expression[string] `json:"EnvironmentIdentifier,omitempty"`

	// ManageAccessRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-manageaccessrole
	ManageAccessRole cfz.Expression[string] `json:"ManageAccessRole,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Provider is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-provider
	Provider cfz.Expression[string] `json:"Provider,omitempty"`

	// SubscriptionTargetConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-subscriptiontargetconfig
	SubscriptionTargetConfig cfz.ExpressionSlice[AWS_DataZone_SubscriptionTarget_SubscriptionTargetForm] `json:"SubscriptionTargetConfig,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-datazone-subscriptiontarget.html#cfn-datazone-subscriptiontarget-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_DataZone_SubscriptionTarget initializes a new *AWS_DataZone_SubscriptionTarget.
func New__AWS_DataZone_SubscriptionTarget(logicalName string) *AWS_DataZone_SubscriptionTarget {
	return &AWS_DataZone_SubscriptionTarget{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DataZone_SubscriptionTarget) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DataZone_SubscriptionTarget) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DataZone_SubscriptionTarget) GetType() string {
	return AWS_DataZone_SubscriptionTarget__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DataZone_SubscriptionTarget) Set__LogicalName(v string) *AWS_DataZone_SubscriptionTarget {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DataZone_SubscriptionTarget) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DataZone_SubscriptionTarget {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DataZone_SubscriptionTarget) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DataZone_SubscriptionTarget {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DataZone_SubscriptionTarget) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DataZone_SubscriptionTarget {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DataZone_SubscriptionTarget) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DataZone_SubscriptionTarget {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DataZone_SubscriptionTarget) Set__RequestedOutputs(v []cfz.Output) *AWS_DataZone_SubscriptionTarget {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DataZone_SubscriptionTarget) Add__RequestedOutputs(v ...cfz.Output) *AWS_DataZone_SubscriptionTarget {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicableAssetTypes updates property "ApplicableAssetTypes".
func (t *AWS_DataZone_SubscriptionTarget) Set__ApplicableAssetTypes(v cfz.ExpressionSlice[string]) *AWS_DataZone_SubscriptionTarget {
	t.ApplicableAssetTypes = v
	return t
}

// SetS__ApplicableAssetTypes updates property "ApplicableAssetTypes".
func (t *AWS_DataZone_SubscriptionTarget) SetS__ApplicableAssetTypes(v ...cfz.Expression[string]) *AWS_DataZone_SubscriptionTarget {
	t.ApplicableAssetTypes = cfz.S(v...)
	return t
}

// SetSV__ApplicableAssetTypes updates property "ApplicableAssetTypes".
func (t *AWS_DataZone_SubscriptionTarget) SetSV__ApplicableAssetTypes(v ...string) *AWS_DataZone_SubscriptionTarget {
	t.ApplicableAssetTypes = cfz.SV(v...)
	return t
}

// Set__AuthorizedPrincipals updates property "AuthorizedPrincipals".
func (t *AWS_DataZone_SubscriptionTarget) Set__AuthorizedPrincipals(v cfz.ExpressionSlice[string]) *AWS_DataZone_SubscriptionTarget {
	t.AuthorizedPrincipals = v
	return t
}

// SetS__AuthorizedPrincipals updates property "AuthorizedPrincipals".
func (t *AWS_DataZone_SubscriptionTarget) SetS__AuthorizedPrincipals(v ...cfz.Expression[string]) *AWS_DataZone_SubscriptionTarget {
	t.AuthorizedPrincipals = cfz.S(v...)
	return t
}

// SetSV__AuthorizedPrincipals updates property "AuthorizedPrincipals".
func (t *AWS_DataZone_SubscriptionTarget) SetSV__AuthorizedPrincipals(v ...string) *AWS_DataZone_SubscriptionTarget {
	t.AuthorizedPrincipals = cfz.SV(v...)
	return t
}

// Set__DomainIdentifier updates property "DomainIdentifier".
func (t *AWS_DataZone_SubscriptionTarget) Set__DomainIdentifier(v cfz.Expression[string]) *AWS_DataZone_SubscriptionTarget {
	t.DomainIdentifier = v
	return t
}

// SetV__DomainIdentifier updates property "DomainIdentifier".
func (t *AWS_DataZone_SubscriptionTarget) SetV__DomainIdentifier(v string) *AWS_DataZone_SubscriptionTarget {
	t.DomainIdentifier = cfz.V(v)
	return t
}

// Set__EnvironmentIdentifier updates property "EnvironmentIdentifier".
func (t *AWS_DataZone_SubscriptionTarget) Set__EnvironmentIdentifier(v cfz.Expression[string]) *AWS_DataZone_SubscriptionTarget {
	t.EnvironmentIdentifier = v
	return t
}

// SetV__EnvironmentIdentifier updates property "EnvironmentIdentifier".
func (t *AWS_DataZone_SubscriptionTarget) SetV__EnvironmentIdentifier(v string) *AWS_DataZone_SubscriptionTarget {
	t.EnvironmentIdentifier = cfz.V(v)
	return t
}

// Set__ManageAccessRole updates property "ManageAccessRole".
func (t *AWS_DataZone_SubscriptionTarget) Set__ManageAccessRole(v cfz.Expression[string]) *AWS_DataZone_SubscriptionTarget {
	t.ManageAccessRole = v
	return t
}

// SetV__ManageAccessRole updates property "ManageAccessRole".
func (t *AWS_DataZone_SubscriptionTarget) SetV__ManageAccessRole(v string) *AWS_DataZone_SubscriptionTarget {
	t.ManageAccessRole = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_DataZone_SubscriptionTarget) Set__Name(v cfz.Expression[string]) *AWS_DataZone_SubscriptionTarget {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_DataZone_SubscriptionTarget) SetV__Name(v string) *AWS_DataZone_SubscriptionTarget {
	t.Name = cfz.V(v)
	return t
}

// Set__Provider updates property "Provider".
func (t *AWS_DataZone_SubscriptionTarget) Set__Provider(v cfz.Expression[string]) *AWS_DataZone_SubscriptionTarget {
	t.Provider = v
	return t
}

// SetV__Provider updates property "Provider".
func (t *AWS_DataZone_SubscriptionTarget) SetV__Provider(v string) *AWS_DataZone_SubscriptionTarget {
	t.Provider = cfz.V(v)
	return t
}

// Set__SubscriptionTargetConfig updates property "SubscriptionTargetConfig".
func (t *AWS_DataZone_SubscriptionTarget) Set__SubscriptionTargetConfig(v cfz.ExpressionSlice[AWS_DataZone_SubscriptionTarget_SubscriptionTargetForm]) *AWS_DataZone_SubscriptionTarget {
	t.SubscriptionTargetConfig = v
	return t
}

// SetS__SubscriptionTargetConfig updates property "SubscriptionTargetConfig".
func (t *AWS_DataZone_SubscriptionTarget) SetS__SubscriptionTargetConfig(v ...cfz.Expression[AWS_DataZone_SubscriptionTarget_SubscriptionTargetForm]) *AWS_DataZone_SubscriptionTarget {
	t.SubscriptionTargetConfig = cfz.S(v...)
	return t
}

// SetSV__SubscriptionTargetConfig updates property "SubscriptionTargetConfig".
func (t *AWS_DataZone_SubscriptionTarget) SetSV__SubscriptionTargetConfig(v ...AWS_DataZone_SubscriptionTarget_SubscriptionTargetForm) *AWS_DataZone_SubscriptionTarget {
	t.SubscriptionTargetConfig = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_DataZone_SubscriptionTarget) Set__Type(v cfz.Expression[string]) *AWS_DataZone_SubscriptionTarget {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_DataZone_SubscriptionTarget) SetV__Type(v string) *AWS_DataZone_SubscriptionTarget {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DataZone_SubscriptionTarget) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_DataZone_SubscriptionTarget) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataZone_SubscriptionTarget__AttributesMap.CreatedAt))
}

// GetAtt__CreatedBy returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedBy
func (t *AWS_DataZone_SubscriptionTarget) GetAtt__CreatedBy() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataZone_SubscriptionTarget__AttributesMap.CreatedBy))
}

// GetAtt__DomainId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DomainId
func (t *AWS_DataZone_SubscriptionTarget) GetAtt__DomainId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataZone_SubscriptionTarget__AttributesMap.DomainId))
}

// GetAtt__EnvironmentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EnvironmentId
func (t *AWS_DataZone_SubscriptionTarget) GetAtt__EnvironmentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataZone_SubscriptionTarget__AttributesMap.EnvironmentId))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_DataZone_SubscriptionTarget) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataZone_SubscriptionTarget__AttributesMap.Id))
}

// GetAtt__ProjectId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ProjectId
func (t *AWS_DataZone_SubscriptionTarget) GetAtt__ProjectId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataZone_SubscriptionTarget__AttributesMap.ProjectId))
}

// GetAtt__UpdatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedAt
func (t *AWS_DataZone_SubscriptionTarget) GetAtt__UpdatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataZone_SubscriptionTarget__AttributesMap.UpdatedAt))
}

// GetAtt__UpdatedBy returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedBy
func (t *AWS_DataZone_SubscriptionTarget) GetAtt__UpdatedBy() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DataZone_SubscriptionTarget__AttributesMap.UpdatedBy))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DataZone_SubscriptionTarget) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_DataZone_SubscriptionTarget) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedBy returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedBy
func (t *AWS_DataZone_SubscriptionTarget) GetConventionalOutputAtt__CreatedBy(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedBy", t.GetAtt__CreatedBy())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DomainId returns a conventionally configured output for an attribute of this resource.
// Attribute: DomainId
func (t *AWS_DataZone_SubscriptionTarget) GetConventionalOutputAtt__DomainId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDomainId", t.GetAtt__DomainId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EnvironmentId returns a conventionally configured output for an attribute of this resource.
// Attribute: EnvironmentId
func (t *AWS_DataZone_SubscriptionTarget) GetConventionalOutputAtt__EnvironmentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEnvironmentId", t.GetAtt__EnvironmentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_DataZone_SubscriptionTarget) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ProjectId returns a conventionally configured output for an attribute of this resource.
// Attribute: ProjectId
func (t *AWS_DataZone_SubscriptionTarget) GetConventionalOutputAtt__ProjectId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttProjectId", t.GetAtt__ProjectId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedAt
func (t *AWS_DataZone_SubscriptionTarget) GetConventionalOutputAtt__UpdatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedAt", t.GetAtt__UpdatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedBy returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedBy
func (t *AWS_DataZone_SubscriptionTarget) GetConventionalOutputAtt__UpdatedBy(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedBy", t.GetAtt__UpdatedBy())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DataZone_SubscriptionTarget) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DataZone_SubscriptionTarget

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DataZone_SubscriptionTarget) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
