// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotanalytics

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage__Type is the CloudFormation type for AWS::IoTAnalytics::Datastore.CustomerManagedS3Storage.
	AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage__Type = "AWS::IoTAnalytics::Datastore.CustomerManagedS3Storage"
)

var (
	// AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage__PropertiesMap reports all the CloudFormation properties for AWS::IoTAnalytics::Datastore.CustomerManagedS3Storage.
	AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage__PropertiesMap = struct {
		Bucket    string
		KeyPrefix string
	}{
		Bucket:    "Bucket",
		KeyPrefix: "KeyPrefix",
	}

	// AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage__PropertiesSlice reports all the CloudFormation properties for AWS::IoTAnalytics::Datastore.CustomerManagedS3Storage.
	AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage__PropertiesSlice = []string{
		AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage__PropertiesMap.Bucket,
		AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage__PropertiesMap.KeyPrefix,
	}
)

// AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage is a binding for AWS::IoTAnalytics::Datastore.CustomerManagedS3Storage.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotanalytics-datastore-customermanageds3storage.html
type AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage struct {
	// Bucket is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotanalytics-datastore-customermanageds3storage.html#cfn-iotanalytics-datastore-customermanageds3storage-bucket
	Bucket cfz.Expression[string] `json:"Bucket,omitempty"`

	// KeyPrefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotanalytics-datastore-customermanageds3storage.html#cfn-iotanalytics-datastore-customermanageds3storage-keyprefix
	KeyPrefix cfz.Expression[string] `json:"KeyPrefix,omitempty"`
}

// New__AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage initializes a new AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage.
func New__AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage() AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage {
	return AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage{}
}

// GetType returns the CloudFormation type.
func (AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage) GetType() string {
	return AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage__Type
}

// Set__Bucket updates property "Bucket".
func (t AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage) Set__Bucket(v cfz.Expression[string]) AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage {
	t.Bucket = v
	return t
}

// SetV__Bucket updates property "Bucket".
func (t AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage) SetV__Bucket(v string) AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage {
	t.Bucket = cfz.V(v)
	return t
}

// Set__KeyPrefix updates property "KeyPrefix".
func (t AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage) Set__KeyPrefix(v cfz.Expression[string]) AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage {
	t.KeyPrefix = v
	return t
}

// SetV__KeyPrefix updates property "KeyPrefix".
func (t AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage) SetV__KeyPrefix(v string) AWS_IoTAnalytics_Datastore_CustomerManagedS3Storage {
	t.KeyPrefix = cfz.V(v)
	return t
}
