// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotanalytics

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoTAnalytics_Channel_ChannelStorage__Type is the CloudFormation type for AWS::IoTAnalytics::Channel.ChannelStorage.
	AWS_IoTAnalytics_Channel_ChannelStorage__Type = "AWS::IoTAnalytics::Channel.ChannelStorage"
)

var (
	// AWS_IoTAnalytics_Channel_ChannelStorage__PropertiesMap reports all the CloudFormation properties for AWS::IoTAnalytics::Channel.ChannelStorage.
	AWS_IoTAnalytics_Channel_ChannelStorage__PropertiesMap = struct {
		CustomerManagedS3 string
		ServiceManagedS3  string
	}{
		CustomerManagedS3: "CustomerManagedS3",
		ServiceManagedS3:  "ServiceManagedS3",
	}

	// AWS_IoTAnalytics_Channel_ChannelStorage__PropertiesSlice reports all the CloudFormation properties for AWS::IoTAnalytics::Channel.ChannelStorage.
	AWS_IoTAnalytics_Channel_ChannelStorage__PropertiesSlice = []string{
		AWS_IoTAnalytics_Channel_ChannelStorage__PropertiesMap.CustomerManagedS3,
		AWS_IoTAnalytics_Channel_ChannelStorage__PropertiesMap.ServiceManagedS3,
	}
)

// AWS_IoTAnalytics_Channel_ChannelStorage is a binding for AWS::IoTAnalytics::Channel.ChannelStorage.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotanalytics-channel-channelstorage.html
type AWS_IoTAnalytics_Channel_ChannelStorage struct {
	// CustomerManagedS3 is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotanalytics-channel-channelstorage.html#cfn-iotanalytics-channel-channelstorage-customermanageds3
	CustomerManagedS3 cfz.Expression[AWS_IoTAnalytics_Channel_CustomerManagedS3] `json:"CustomerManagedS3,omitempty"`

	// ServiceManagedS3 is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotanalytics-channel-channelstorage.html#cfn-iotanalytics-channel-channelstorage-servicemanageds3
	ServiceManagedS3 cfz.Expression[json.RawMessage] `json:"ServiceManagedS3,omitempty"`
}

// New__AWS_IoTAnalytics_Channel_ChannelStorage initializes a new AWS_IoTAnalytics_Channel_ChannelStorage.
func New__AWS_IoTAnalytics_Channel_ChannelStorage() AWS_IoTAnalytics_Channel_ChannelStorage {
	return AWS_IoTAnalytics_Channel_ChannelStorage{}
}

// GetType returns the CloudFormation type.
func (AWS_IoTAnalytics_Channel_ChannelStorage) GetType() string {
	return AWS_IoTAnalytics_Channel_ChannelStorage__Type
}

// Set__CustomerManagedS3 updates property "CustomerManagedS3".
func (t AWS_IoTAnalytics_Channel_ChannelStorage) Set__CustomerManagedS3(v cfz.Expression[AWS_IoTAnalytics_Channel_CustomerManagedS3]) AWS_IoTAnalytics_Channel_ChannelStorage {
	t.CustomerManagedS3 = v
	return t
}

// SetV__CustomerManagedS3 updates property "CustomerManagedS3".
func (t AWS_IoTAnalytics_Channel_ChannelStorage) SetV__CustomerManagedS3(v AWS_IoTAnalytics_Channel_CustomerManagedS3) AWS_IoTAnalytics_Channel_ChannelStorage {
	t.CustomerManagedS3 = cfz.V(v)
	return t
}

// Set__ServiceManagedS3 updates property "ServiceManagedS3".
func (t AWS_IoTAnalytics_Channel_ChannelStorage) Set__ServiceManagedS3(v cfz.Expression[json.RawMessage]) AWS_IoTAnalytics_Channel_ChannelStorage {
	t.ServiceManagedS3 = v
	return t
}

// SetV__ServiceManagedS3 updates property "ServiceManagedS3".
func (t AWS_IoTAnalytics_Channel_ChannelStorage) SetV__ServiceManagedS3(v json.RawMessage) AWS_IoTAnalytics_Channel_ChannelStorage {
	t.ServiceManagedS3 = cfz.V(v)
	return t
}
