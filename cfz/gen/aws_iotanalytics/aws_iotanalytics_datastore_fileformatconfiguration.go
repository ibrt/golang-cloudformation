// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iotanalytics

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoTAnalytics_Datastore_FileFormatConfiguration__Type is the CloudFormation type for AWS::IoTAnalytics::Datastore.FileFormatConfiguration.
	AWS_IoTAnalytics_Datastore_FileFormatConfiguration__Type = "AWS::IoTAnalytics::Datastore.FileFormatConfiguration"
)

var (
	// AWS_IoTAnalytics_Datastore_FileFormatConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::IoTAnalytics::Datastore.FileFormatConfiguration.
	AWS_IoTAnalytics_Datastore_FileFormatConfiguration__PropertiesMap = struct {
		JsonConfiguration    string
		ParquetConfiguration string
	}{
		JsonConfiguration:    "JsonConfiguration",
		ParquetConfiguration: "ParquetConfiguration",
	}

	// AWS_IoTAnalytics_Datastore_FileFormatConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::IoTAnalytics::Datastore.FileFormatConfiguration.
	AWS_IoTAnalytics_Datastore_FileFormatConfiguration__PropertiesSlice = []string{
		AWS_IoTAnalytics_Datastore_FileFormatConfiguration__PropertiesMap.JsonConfiguration,
		AWS_IoTAnalytics_Datastore_FileFormatConfiguration__PropertiesMap.ParquetConfiguration,
	}
)

// AWS_IoTAnalytics_Datastore_FileFormatConfiguration is a binding for AWS::IoTAnalytics::Datastore.FileFormatConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotanalytics-datastore-fileformatconfiguration.html
type AWS_IoTAnalytics_Datastore_FileFormatConfiguration struct {
	// JsonConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotanalytics-datastore-fileformatconfiguration.html#cfn-iotanalytics-datastore-fileformatconfiguration-jsonconfiguration
	JsonConfiguration cfz.Expression[json.RawMessage] `json:"JsonConfiguration,omitempty"`

	// ParquetConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iotanalytics-datastore-fileformatconfiguration.html#cfn-iotanalytics-datastore-fileformatconfiguration-parquetconfiguration
	ParquetConfiguration cfz.Expression[AWS_IoTAnalytics_Datastore_ParquetConfiguration] `json:"ParquetConfiguration,omitempty"`
}

// New__AWS_IoTAnalytics_Datastore_FileFormatConfiguration initializes a new AWS_IoTAnalytics_Datastore_FileFormatConfiguration.
func New__AWS_IoTAnalytics_Datastore_FileFormatConfiguration() AWS_IoTAnalytics_Datastore_FileFormatConfiguration {
	return AWS_IoTAnalytics_Datastore_FileFormatConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_IoTAnalytics_Datastore_FileFormatConfiguration) GetType() string {
	return AWS_IoTAnalytics_Datastore_FileFormatConfiguration__Type
}

// Set__JsonConfiguration updates property "JsonConfiguration".
func (t AWS_IoTAnalytics_Datastore_FileFormatConfiguration) Set__JsonConfiguration(v cfz.Expression[json.RawMessage]) AWS_IoTAnalytics_Datastore_FileFormatConfiguration {
	t.JsonConfiguration = v
	return t
}

// SetV__JsonConfiguration updates property "JsonConfiguration".
func (t AWS_IoTAnalytics_Datastore_FileFormatConfiguration) SetV__JsonConfiguration(v json.RawMessage) AWS_IoTAnalytics_Datastore_FileFormatConfiguration {
	t.JsonConfiguration = cfz.V(v)
	return t
}

// Set__ParquetConfiguration updates property "ParquetConfiguration".
func (t AWS_IoTAnalytics_Datastore_FileFormatConfiguration) Set__ParquetConfiguration(v cfz.Expression[AWS_IoTAnalytics_Datastore_ParquetConfiguration]) AWS_IoTAnalytics_Datastore_FileFormatConfiguration {
	t.ParquetConfiguration = v
	return t
}

// SetV__ParquetConfiguration updates property "ParquetConfiguration".
func (t AWS_IoTAnalytics_Datastore_FileFormatConfiguration) SetV__ParquetConfiguration(v AWS_IoTAnalytics_Datastore_ParquetConfiguration) AWS_IoTAnalytics_Datastore_FileFormatConfiguration {
	t.ParquetConfiguration = cfz.V(v)
	return t
}
