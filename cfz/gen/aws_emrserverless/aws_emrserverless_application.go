// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_emrserverless

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EMRServerless_Application)(nil)
	_ cfz.Resource                   = (*AWS_EMRServerless_Application)(nil)
)

const (
	// AWS_EMRServerless_Application__Type is the CloudFormation type for AWS::EMRServerless::Application.
	AWS_EMRServerless_Application__Type = "AWS::EMRServerless::Application"
)

var (
	// AWS_EMRServerless_Application__AttributesMap reports all the CloudFormation attributes for AWS::EMRServerless::Application.
	AWS_EMRServerless_Application__AttributesMap = struct {
		ApplicationId string
		Arn           string
	}{
		ApplicationId: "ApplicationId",
		Arn:           "Arn",
	}

	// AWS_EMRServerless_Application__AttributesSlice reports all the CloudFormation attributes for AWS::EMRServerless::Application.
	AWS_EMRServerless_Application__AttributesSlice = []string{
		AWS_EMRServerless_Application__AttributesMap.ApplicationId,
		AWS_EMRServerless_Application__AttributesMap.Arn,
	}
)

var (
	// AWS_EMRServerless_Application__PropertiesMap reports all the CloudFormation properties for AWS::EMRServerless::Application.
	AWS_EMRServerless_Application__PropertiesMap = struct {
		Architecture             string
		AutoStartConfiguration   string
		AutoStopConfiguration    string
		ImageConfiguration       string
		InitialCapacity          string
		InteractiveConfiguration string
		MaximumCapacity          string
		MonitoringConfiguration  string
		Name                     string
		NetworkConfiguration     string
		ReleaseLabel             string
		RuntimeConfiguration     string
		Tags                     string
		Type                     string
		WorkerTypeSpecifications string
	}{
		Architecture:             "Architecture",
		AutoStartConfiguration:   "AutoStartConfiguration",
		AutoStopConfiguration:    "AutoStopConfiguration",
		ImageConfiguration:       "ImageConfiguration",
		InitialCapacity:          "InitialCapacity",
		InteractiveConfiguration: "InteractiveConfiguration",
		MaximumCapacity:          "MaximumCapacity",
		MonitoringConfiguration:  "MonitoringConfiguration",
		Name:                     "Name",
		NetworkConfiguration:     "NetworkConfiguration",
		ReleaseLabel:             "ReleaseLabel",
		RuntimeConfiguration:     "RuntimeConfiguration",
		Tags:                     "Tags",
		Type:                     "Type",
		WorkerTypeSpecifications: "WorkerTypeSpecifications",
	}

	// AWS_EMRServerless_Application__PropertiesSlice reports all the CloudFormation properties for AWS::EMRServerless::Application.
	AWS_EMRServerless_Application__PropertiesSlice = []string{
		AWS_EMRServerless_Application__PropertiesMap.Architecture,
		AWS_EMRServerless_Application__PropertiesMap.AutoStartConfiguration,
		AWS_EMRServerless_Application__PropertiesMap.AutoStopConfiguration,
		AWS_EMRServerless_Application__PropertiesMap.ImageConfiguration,
		AWS_EMRServerless_Application__PropertiesMap.InitialCapacity,
		AWS_EMRServerless_Application__PropertiesMap.InteractiveConfiguration,
		AWS_EMRServerless_Application__PropertiesMap.MaximumCapacity,
		AWS_EMRServerless_Application__PropertiesMap.MonitoringConfiguration,
		AWS_EMRServerless_Application__PropertiesMap.Name,
		AWS_EMRServerless_Application__PropertiesMap.NetworkConfiguration,
		AWS_EMRServerless_Application__PropertiesMap.ReleaseLabel,
		AWS_EMRServerless_Application__PropertiesMap.RuntimeConfiguration,
		AWS_EMRServerless_Application__PropertiesMap.Tags,
		AWS_EMRServerless_Application__PropertiesMap.Type,
		AWS_EMRServerless_Application__PropertiesMap.WorkerTypeSpecifications,
	}
)

// AWS_EMRServerless_Application is a binding for AWS::EMRServerless::Application.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html
type AWS_EMRServerless_Application struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Architecture is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-architecture
	Architecture cfz.Expression[string] `json:"Architecture,omitempty"`

	// AutoStartConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-autostartconfiguration
	AutoStartConfiguration cfz.Expression[AWS_EMRServerless_Application_AutoStartConfiguration] `json:"AutoStartConfiguration,omitempty"`

	// AutoStopConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-autostopconfiguration
	AutoStopConfiguration cfz.Expression[AWS_EMRServerless_Application_AutoStopConfiguration] `json:"AutoStopConfiguration,omitempty"`

	// ImageConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-imageconfiguration
	ImageConfiguration cfz.Expression[AWS_EMRServerless_Application_ImageConfigurationInput] `json:"ImageConfiguration,omitempty"`

	// InitialCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-initialcapacity
	InitialCapacity cfz.ExpressionSlice[AWS_EMRServerless_Application_InitialCapacityConfigKeyValuePair] `json:"InitialCapacity,omitempty"`

	// InteractiveConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-interactiveconfiguration
	InteractiveConfiguration cfz.Expression[AWS_EMRServerless_Application_InteractiveConfiguration] `json:"InteractiveConfiguration,omitempty"`

	// MaximumCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-maximumcapacity
	MaximumCapacity cfz.Expression[AWS_EMRServerless_Application_MaximumAllowedResources] `json:"MaximumCapacity,omitempty"`

	// MonitoringConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-monitoringconfiguration
	MonitoringConfiguration cfz.Expression[AWS_EMRServerless_Application_MonitoringConfiguration] `json:"MonitoringConfiguration,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// NetworkConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-networkconfiguration
	NetworkConfiguration cfz.Expression[AWS_EMRServerless_Application_NetworkConfiguration] `json:"NetworkConfiguration,omitempty"`

	// ReleaseLabel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-releaselabel
	ReleaseLabel cfz.Expression[string] `json:"ReleaseLabel,omitempty"`

	// RuntimeConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-runtimeconfiguration
	RuntimeConfiguration cfz.ExpressionSlice[AWS_EMRServerless_Application_ConfigurationObject] `json:"RuntimeConfiguration,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// WorkerTypeSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-workertypespecifications
	WorkerTypeSpecifications cfz.ExpressionMap[AWS_EMRServerless_Application_WorkerTypeSpecificationInput] `json:"WorkerTypeSpecifications,omitempty"`
}

// New__AWS_EMRServerless_Application initializes a new *AWS_EMRServerless_Application.
func New__AWS_EMRServerless_Application(logicalName string) *AWS_EMRServerless_Application {
	return &AWS_EMRServerless_Application{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EMRServerless_Application) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EMRServerless_Application) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EMRServerless_Application) GetType() string {
	return AWS_EMRServerless_Application__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EMRServerless_Application) Set__LogicalName(v string) *AWS_EMRServerless_Application {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EMRServerless_Application) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EMRServerless_Application {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EMRServerless_Application) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EMRServerless_Application {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EMRServerless_Application) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EMRServerless_Application {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EMRServerless_Application) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EMRServerless_Application {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EMRServerless_Application) Set__RequestedOutputs(v []cfz.Output) *AWS_EMRServerless_Application {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EMRServerless_Application) Add__RequestedOutputs(v ...cfz.Output) *AWS_EMRServerless_Application {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Architecture updates property "Architecture".
func (t *AWS_EMRServerless_Application) Set__Architecture(v cfz.Expression[string]) *AWS_EMRServerless_Application {
	t.Architecture = v
	return t
}

// SetV__Architecture updates property "Architecture".
func (t *AWS_EMRServerless_Application) SetV__Architecture(v string) *AWS_EMRServerless_Application {
	t.Architecture = cfz.V(v)
	return t
}

// Set__AutoStartConfiguration updates property "AutoStartConfiguration".
func (t *AWS_EMRServerless_Application) Set__AutoStartConfiguration(v cfz.Expression[AWS_EMRServerless_Application_AutoStartConfiguration]) *AWS_EMRServerless_Application {
	t.AutoStartConfiguration = v
	return t
}

// SetV__AutoStartConfiguration updates property "AutoStartConfiguration".
func (t *AWS_EMRServerless_Application) SetV__AutoStartConfiguration(v AWS_EMRServerless_Application_AutoStartConfiguration) *AWS_EMRServerless_Application {
	t.AutoStartConfiguration = cfz.V(v)
	return t
}

// Set__AutoStopConfiguration updates property "AutoStopConfiguration".
func (t *AWS_EMRServerless_Application) Set__AutoStopConfiguration(v cfz.Expression[AWS_EMRServerless_Application_AutoStopConfiguration]) *AWS_EMRServerless_Application {
	t.AutoStopConfiguration = v
	return t
}

// SetV__AutoStopConfiguration updates property "AutoStopConfiguration".
func (t *AWS_EMRServerless_Application) SetV__AutoStopConfiguration(v AWS_EMRServerless_Application_AutoStopConfiguration) *AWS_EMRServerless_Application {
	t.AutoStopConfiguration = cfz.V(v)
	return t
}

// Set__ImageConfiguration updates property "ImageConfiguration".
func (t *AWS_EMRServerless_Application) Set__ImageConfiguration(v cfz.Expression[AWS_EMRServerless_Application_ImageConfigurationInput]) *AWS_EMRServerless_Application {
	t.ImageConfiguration = v
	return t
}

// SetV__ImageConfiguration updates property "ImageConfiguration".
func (t *AWS_EMRServerless_Application) SetV__ImageConfiguration(v AWS_EMRServerless_Application_ImageConfigurationInput) *AWS_EMRServerless_Application {
	t.ImageConfiguration = cfz.V(v)
	return t
}

// Set__InitialCapacity updates property "InitialCapacity".
func (t *AWS_EMRServerless_Application) Set__InitialCapacity(v cfz.ExpressionSlice[AWS_EMRServerless_Application_InitialCapacityConfigKeyValuePair]) *AWS_EMRServerless_Application {
	t.InitialCapacity = v
	return t
}

// SetS__InitialCapacity updates property "InitialCapacity".
func (t *AWS_EMRServerless_Application) SetS__InitialCapacity(v ...cfz.Expression[AWS_EMRServerless_Application_InitialCapacityConfigKeyValuePair]) *AWS_EMRServerless_Application {
	t.InitialCapacity = cfz.S(v...)
	return t
}

// SetSV__InitialCapacity updates property "InitialCapacity".
func (t *AWS_EMRServerless_Application) SetSV__InitialCapacity(v ...AWS_EMRServerless_Application_InitialCapacityConfigKeyValuePair) *AWS_EMRServerless_Application {
	t.InitialCapacity = cfz.SV(v...)
	return t
}

// Set__InteractiveConfiguration updates property "InteractiveConfiguration".
func (t *AWS_EMRServerless_Application) Set__InteractiveConfiguration(v cfz.Expression[AWS_EMRServerless_Application_InteractiveConfiguration]) *AWS_EMRServerless_Application {
	t.InteractiveConfiguration = v
	return t
}

// SetV__InteractiveConfiguration updates property "InteractiveConfiguration".
func (t *AWS_EMRServerless_Application) SetV__InteractiveConfiguration(v AWS_EMRServerless_Application_InteractiveConfiguration) *AWS_EMRServerless_Application {
	t.InteractiveConfiguration = cfz.V(v)
	return t
}

// Set__MaximumCapacity updates property "MaximumCapacity".
func (t *AWS_EMRServerless_Application) Set__MaximumCapacity(v cfz.Expression[AWS_EMRServerless_Application_MaximumAllowedResources]) *AWS_EMRServerless_Application {
	t.MaximumCapacity = v
	return t
}

// SetV__MaximumCapacity updates property "MaximumCapacity".
func (t *AWS_EMRServerless_Application) SetV__MaximumCapacity(v AWS_EMRServerless_Application_MaximumAllowedResources) *AWS_EMRServerless_Application {
	t.MaximumCapacity = cfz.V(v)
	return t
}

// Set__MonitoringConfiguration updates property "MonitoringConfiguration".
func (t *AWS_EMRServerless_Application) Set__MonitoringConfiguration(v cfz.Expression[AWS_EMRServerless_Application_MonitoringConfiguration]) *AWS_EMRServerless_Application {
	t.MonitoringConfiguration = v
	return t
}

// SetV__MonitoringConfiguration updates property "MonitoringConfiguration".
func (t *AWS_EMRServerless_Application) SetV__MonitoringConfiguration(v AWS_EMRServerless_Application_MonitoringConfiguration) *AWS_EMRServerless_Application {
	t.MonitoringConfiguration = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_EMRServerless_Application) Set__Name(v cfz.Expression[string]) *AWS_EMRServerless_Application {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_EMRServerless_Application) SetV__Name(v string) *AWS_EMRServerless_Application {
	t.Name = cfz.V(v)
	return t
}

// Set__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_EMRServerless_Application) Set__NetworkConfiguration(v cfz.Expression[AWS_EMRServerless_Application_NetworkConfiguration]) *AWS_EMRServerless_Application {
	t.NetworkConfiguration = v
	return t
}

// SetV__NetworkConfiguration updates property "NetworkConfiguration".
func (t *AWS_EMRServerless_Application) SetV__NetworkConfiguration(v AWS_EMRServerless_Application_NetworkConfiguration) *AWS_EMRServerless_Application {
	t.NetworkConfiguration = cfz.V(v)
	return t
}

// Set__ReleaseLabel updates property "ReleaseLabel".
func (t *AWS_EMRServerless_Application) Set__ReleaseLabel(v cfz.Expression[string]) *AWS_EMRServerless_Application {
	t.ReleaseLabel = v
	return t
}

// SetV__ReleaseLabel updates property "ReleaseLabel".
func (t *AWS_EMRServerless_Application) SetV__ReleaseLabel(v string) *AWS_EMRServerless_Application {
	t.ReleaseLabel = cfz.V(v)
	return t
}

// Set__RuntimeConfiguration updates property "RuntimeConfiguration".
func (t *AWS_EMRServerless_Application) Set__RuntimeConfiguration(v cfz.ExpressionSlice[AWS_EMRServerless_Application_ConfigurationObject]) *AWS_EMRServerless_Application {
	t.RuntimeConfiguration = v
	return t
}

// SetS__RuntimeConfiguration updates property "RuntimeConfiguration".
func (t *AWS_EMRServerless_Application) SetS__RuntimeConfiguration(v ...cfz.Expression[AWS_EMRServerless_Application_ConfigurationObject]) *AWS_EMRServerless_Application {
	t.RuntimeConfiguration = cfz.S(v...)
	return t
}

// SetSV__RuntimeConfiguration updates property "RuntimeConfiguration".
func (t *AWS_EMRServerless_Application) SetSV__RuntimeConfiguration(v ...AWS_EMRServerless_Application_ConfigurationObject) *AWS_EMRServerless_Application {
	t.RuntimeConfiguration = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EMRServerless_Application) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EMRServerless_Application {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EMRServerless_Application) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EMRServerless_Application {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EMRServerless_Application) SetSV__Tags(v ...cfz.Tag) *AWS_EMRServerless_Application {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_EMRServerless_Application) Set__Type(v cfz.Expression[string]) *AWS_EMRServerless_Application {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_EMRServerless_Application) SetV__Type(v string) *AWS_EMRServerless_Application {
	t.Type = cfz.V(v)
	return t
}

// Set__WorkerTypeSpecifications updates property "WorkerTypeSpecifications".
func (t *AWS_EMRServerless_Application) Set__WorkerTypeSpecifications(v cfz.ExpressionMap[AWS_EMRServerless_Application_WorkerTypeSpecificationInput]) *AWS_EMRServerless_Application {
	t.WorkerTypeSpecifications = v
	return t
}

// SetM__WorkerTypeSpecifications updates property "WorkerTypeSpecifications".
func (t *AWS_EMRServerless_Application) SetM__WorkerTypeSpecifications(v ...map[string]cfz.Expression[AWS_EMRServerless_Application_WorkerTypeSpecificationInput]) *AWS_EMRServerless_Application {
	t.WorkerTypeSpecifications = cfz.M(v...)
	return t
}

// SetMV__WorkerTypeSpecifications updates property "WorkerTypeSpecifications".
func (t *AWS_EMRServerless_Application) SetMV__WorkerTypeSpecifications(v ...map[string]AWS_EMRServerless_Application_WorkerTypeSpecificationInput) *AWS_EMRServerless_Application {
	t.WorkerTypeSpecifications = cfz.MV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EMRServerless_Application) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ApplicationId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ApplicationId
func (t *AWS_EMRServerless_Application) GetAtt__ApplicationId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EMRServerless_Application__AttributesMap.ApplicationId))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_EMRServerless_Application) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EMRServerless_Application__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EMRServerless_Application) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ApplicationId returns a conventionally configured output for an attribute of this resource.
// Attribute: ApplicationId
func (t *AWS_EMRServerless_Application) GetConventionalOutputAtt__ApplicationId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttApplicationId", t.GetAtt__ApplicationId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_EMRServerless_Application) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EMRServerless_Application) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EMRServerless_Application

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EMRServerless_Application) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
