// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ivs

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__Type is the CloudFormation type for AWS::IVS::RecordingConfiguration.ThumbnailConfiguration.
	AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__Type = "AWS::IVS::RecordingConfiguration.ThumbnailConfiguration"
)

var (
	// AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::IVS::RecordingConfiguration.ThumbnailConfiguration.
	AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__PropertiesMap = struct {
		RecordingMode         string
		Resolution            string
		Storage               string
		TargetIntervalSeconds string
	}{
		RecordingMode:         "RecordingMode",
		Resolution:            "Resolution",
		Storage:               "Storage",
		TargetIntervalSeconds: "TargetIntervalSeconds",
	}

	// AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::IVS::RecordingConfiguration.ThumbnailConfiguration.
	AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__PropertiesSlice = []string{
		AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__PropertiesMap.RecordingMode,
		AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__PropertiesMap.Resolution,
		AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__PropertiesMap.Storage,
		AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__PropertiesMap.TargetIntervalSeconds,
	}
)

// AWS_IVS_RecordingConfiguration_ThumbnailConfiguration is a binding for AWS::IVS::RecordingConfiguration.ThumbnailConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ivs-recordingconfiguration-thumbnailconfiguration.html
type AWS_IVS_RecordingConfiguration_ThumbnailConfiguration struct {
	// RecordingMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ivs-recordingconfiguration-thumbnailconfiguration.html#cfn-ivs-recordingconfiguration-thumbnailconfiguration-recordingmode
	RecordingMode cfz.Expression[string] `json:"RecordingMode,omitempty"`

	// Resolution is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ivs-recordingconfiguration-thumbnailconfiguration.html#cfn-ivs-recordingconfiguration-thumbnailconfiguration-resolution
	Resolution cfz.Expression[string] `json:"Resolution,omitempty"`

	// Storage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ivs-recordingconfiguration-thumbnailconfiguration.html#cfn-ivs-recordingconfiguration-thumbnailconfiguration-storage
	Storage cfz.ExpressionSlice[string] `json:"Storage,omitempty"`

	// TargetIntervalSeconds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ivs-recordingconfiguration-thumbnailconfiguration.html#cfn-ivs-recordingconfiguration-thumbnailconfiguration-targetintervalseconds
	TargetIntervalSeconds cfz.Expression[int32] `json:"TargetIntervalSeconds,omitempty"`
}

// New__AWS_IVS_RecordingConfiguration_ThumbnailConfiguration initializes a new AWS_IVS_RecordingConfiguration_ThumbnailConfiguration.
func New__AWS_IVS_RecordingConfiguration_ThumbnailConfiguration() AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	return AWS_IVS_RecordingConfiguration_ThumbnailConfiguration{}
}

// GetType returns the CloudFormation type.
func (AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) GetType() string {
	return AWS_IVS_RecordingConfiguration_ThumbnailConfiguration__Type
}

// Set__RecordingMode updates property "RecordingMode".
func (t AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) Set__RecordingMode(v cfz.Expression[string]) AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	t.RecordingMode = v
	return t
}

// SetV__RecordingMode updates property "RecordingMode".
func (t AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) SetV__RecordingMode(v string) AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	t.RecordingMode = cfz.V(v)
	return t
}

// Set__Resolution updates property "Resolution".
func (t AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) Set__Resolution(v cfz.Expression[string]) AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	t.Resolution = v
	return t
}

// SetV__Resolution updates property "Resolution".
func (t AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) SetV__Resolution(v string) AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	t.Resolution = cfz.V(v)
	return t
}

// Set__Storage updates property "Storage".
func (t AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) Set__Storage(v cfz.ExpressionSlice[string]) AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	t.Storage = v
	return t
}

// SetS__Storage updates property "Storage".
func (t AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) SetS__Storage(v ...cfz.Expression[string]) AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	t.Storage = cfz.S(v...)
	return t
}

// SetSV__Storage updates property "Storage".
func (t AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) SetSV__Storage(v ...string) AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	t.Storage = cfz.SV(v...)
	return t
}

// Set__TargetIntervalSeconds updates property "TargetIntervalSeconds".
func (t AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) Set__TargetIntervalSeconds(v cfz.Expression[int32]) AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	t.TargetIntervalSeconds = v
	return t
}

// SetV__TargetIntervalSeconds updates property "TargetIntervalSeconds".
func (t AWS_IVS_RecordingConfiguration_ThumbnailConfiguration) SetV__TargetIntervalSeconds(v int32) AWS_IVS_RecordingConfiguration_ThumbnailConfiguration {
	t.TargetIntervalSeconds = cfz.V(v)
	return t
}
