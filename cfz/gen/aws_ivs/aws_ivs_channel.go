// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ivs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IVS_Channel)(nil)
	_ cfz.Resource                   = (*AWS_IVS_Channel)(nil)
)

const (
	// AWS_IVS_Channel__Type is the CloudFormation type for AWS::IVS::Channel.
	AWS_IVS_Channel__Type = "AWS::IVS::Channel"
)

var (
	// AWS_IVS_Channel__AttributesMap reports all the CloudFormation attributes for AWS::IVS::Channel.
	AWS_IVS_Channel__AttributesMap = struct {
		Arn            string
		IngestEndpoint string
		PlaybackUrl    string
	}{
		Arn:            "Arn",
		IngestEndpoint: "IngestEndpoint",
		PlaybackUrl:    "PlaybackUrl",
	}

	// AWS_IVS_Channel__AttributesSlice reports all the CloudFormation attributes for AWS::IVS::Channel.
	AWS_IVS_Channel__AttributesSlice = []string{
		AWS_IVS_Channel__AttributesMap.Arn,
		AWS_IVS_Channel__AttributesMap.IngestEndpoint,
		AWS_IVS_Channel__AttributesMap.PlaybackUrl,
	}
)

var (
	// AWS_IVS_Channel__PropertiesMap reports all the CloudFormation properties for AWS::IVS::Channel.
	AWS_IVS_Channel__PropertiesMap = struct {
		Authorized                string
		InsecureIngest            string
		LatencyMode               string
		Name                      string
		Preset                    string
		RecordingConfigurationArn string
		Tags                      string
		Type                      string
	}{
		Authorized:                "Authorized",
		InsecureIngest:            "InsecureIngest",
		LatencyMode:               "LatencyMode",
		Name:                      "Name",
		Preset:                    "Preset",
		RecordingConfigurationArn: "RecordingConfigurationArn",
		Tags:                      "Tags",
		Type:                      "Type",
	}

	// AWS_IVS_Channel__PropertiesSlice reports all the CloudFormation properties for AWS::IVS::Channel.
	AWS_IVS_Channel__PropertiesSlice = []string{
		AWS_IVS_Channel__PropertiesMap.Authorized,
		AWS_IVS_Channel__PropertiesMap.InsecureIngest,
		AWS_IVS_Channel__PropertiesMap.LatencyMode,
		AWS_IVS_Channel__PropertiesMap.Name,
		AWS_IVS_Channel__PropertiesMap.Preset,
		AWS_IVS_Channel__PropertiesMap.RecordingConfigurationArn,
		AWS_IVS_Channel__PropertiesMap.Tags,
		AWS_IVS_Channel__PropertiesMap.Type,
	}
)

// AWS_IVS_Channel is a binding for AWS::IVS::Channel.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html
type AWS_IVS_Channel struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Authorized is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-authorized
	Authorized cfz.Expression[bool] `json:"Authorized,omitempty"`

	// InsecureIngest is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-insecureingest
	InsecureIngest cfz.Expression[bool] `json:"InsecureIngest,omitempty"`

	// LatencyMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-latencymode
	LatencyMode cfz.Expression[string] `json:"LatencyMode,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Preset is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-preset
	Preset cfz.Expression[string] `json:"Preset,omitempty"`

	// RecordingConfigurationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-recordingconfigurationarn
	RecordingConfigurationArn cfz.Expression[string] `json:"RecordingConfigurationArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ivs-channel.html#cfn-ivs-channel-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_IVS_Channel initializes a new *AWS_IVS_Channel.
func New__AWS_IVS_Channel(logicalName string) *AWS_IVS_Channel {
	return &AWS_IVS_Channel{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IVS_Channel) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IVS_Channel) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IVS_Channel) GetType() string {
	return AWS_IVS_Channel__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IVS_Channel) Set__LogicalName(v string) *AWS_IVS_Channel {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IVS_Channel) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IVS_Channel {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IVS_Channel) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IVS_Channel {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IVS_Channel) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IVS_Channel {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IVS_Channel) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IVS_Channel {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IVS_Channel) Set__RequestedOutputs(v []cfz.Output) *AWS_IVS_Channel {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IVS_Channel) Add__RequestedOutputs(v ...cfz.Output) *AWS_IVS_Channel {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Authorized updates property "Authorized".
func (t *AWS_IVS_Channel) Set__Authorized(v cfz.Expression[bool]) *AWS_IVS_Channel {
	t.Authorized = v
	return t
}

// SetV__Authorized updates property "Authorized".
func (t *AWS_IVS_Channel) SetV__Authorized(v bool) *AWS_IVS_Channel {
	t.Authorized = cfz.V(v)
	return t
}

// Set__InsecureIngest updates property "InsecureIngest".
func (t *AWS_IVS_Channel) Set__InsecureIngest(v cfz.Expression[bool]) *AWS_IVS_Channel {
	t.InsecureIngest = v
	return t
}

// SetV__InsecureIngest updates property "InsecureIngest".
func (t *AWS_IVS_Channel) SetV__InsecureIngest(v bool) *AWS_IVS_Channel {
	t.InsecureIngest = cfz.V(v)
	return t
}

// Set__LatencyMode updates property "LatencyMode".
func (t *AWS_IVS_Channel) Set__LatencyMode(v cfz.Expression[string]) *AWS_IVS_Channel {
	t.LatencyMode = v
	return t
}

// SetV__LatencyMode updates property "LatencyMode".
func (t *AWS_IVS_Channel) SetV__LatencyMode(v string) *AWS_IVS_Channel {
	t.LatencyMode = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_IVS_Channel) Set__Name(v cfz.Expression[string]) *AWS_IVS_Channel {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_IVS_Channel) SetV__Name(v string) *AWS_IVS_Channel {
	t.Name = cfz.V(v)
	return t
}

// Set__Preset updates property "Preset".
func (t *AWS_IVS_Channel) Set__Preset(v cfz.Expression[string]) *AWS_IVS_Channel {
	t.Preset = v
	return t
}

// SetV__Preset updates property "Preset".
func (t *AWS_IVS_Channel) SetV__Preset(v string) *AWS_IVS_Channel {
	t.Preset = cfz.V(v)
	return t
}

// Set__RecordingConfigurationArn updates property "RecordingConfigurationArn".
func (t *AWS_IVS_Channel) Set__RecordingConfigurationArn(v cfz.Expression[string]) *AWS_IVS_Channel {
	t.RecordingConfigurationArn = v
	return t
}

// SetV__RecordingConfigurationArn updates property "RecordingConfigurationArn".
func (t *AWS_IVS_Channel) SetV__RecordingConfigurationArn(v string) *AWS_IVS_Channel {
	t.RecordingConfigurationArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IVS_Channel) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_IVS_Channel {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_IVS_Channel) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_IVS_Channel {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_IVS_Channel) SetSV__Tags(v ...cfz.Tag) *AWS_IVS_Channel {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_IVS_Channel) Set__Type(v cfz.Expression[string]) *AWS_IVS_Channel {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_IVS_Channel) SetV__Type(v string) *AWS_IVS_Channel {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IVS_Channel) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IVS_Channel) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IVS_Channel__AttributesMap.Arn))
}

// GetAtt__IngestEndpoint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IngestEndpoint
func (t *AWS_IVS_Channel) GetAtt__IngestEndpoint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IVS_Channel__AttributesMap.IngestEndpoint))
}

// GetAtt__PlaybackUrl returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PlaybackUrl
func (t *AWS_IVS_Channel) GetAtt__PlaybackUrl() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IVS_Channel__AttributesMap.PlaybackUrl))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IVS_Channel) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IVS_Channel) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IngestEndpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: IngestEndpoint
func (t *AWS_IVS_Channel) GetConventionalOutputAtt__IngestEndpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIngestEndpoint", t.GetAtt__IngestEndpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PlaybackUrl returns a conventionally configured output for an attribute of this resource.
// Attribute: PlaybackUrl
func (t *AWS_IVS_Channel) GetConventionalOutputAtt__PlaybackUrl(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPlaybackUrl", t.GetAtt__PlaybackUrl())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IVS_Channel) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IVS_Channel

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IVS_Channel) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
