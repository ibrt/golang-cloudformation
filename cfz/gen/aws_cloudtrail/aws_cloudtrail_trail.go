// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudtrail

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudTrail_Trail)(nil)
	_ cfz.Resource                   = (*AWS_CloudTrail_Trail)(nil)
)

const (
	// AWS_CloudTrail_Trail__Type is the CloudFormation type for AWS::CloudTrail::Trail.
	AWS_CloudTrail_Trail__Type = "AWS::CloudTrail::Trail"
)

var (
	// AWS_CloudTrail_Trail__AttributesMap reports all the CloudFormation attributes for AWS::CloudTrail::Trail.
	AWS_CloudTrail_Trail__AttributesMap = struct {
		Arn         string
		SnsTopicArn string
	}{
		Arn:         "Arn",
		SnsTopicArn: "SnsTopicArn",
	}

	// AWS_CloudTrail_Trail__AttributesSlice reports all the CloudFormation attributes for AWS::CloudTrail::Trail.
	AWS_CloudTrail_Trail__AttributesSlice = []string{
		AWS_CloudTrail_Trail__AttributesMap.Arn,
		AWS_CloudTrail_Trail__AttributesMap.SnsTopicArn,
	}
)

var (
	// AWS_CloudTrail_Trail__PropertiesMap reports all the CloudFormation properties for AWS::CloudTrail::Trail.
	AWS_CloudTrail_Trail__PropertiesMap = struct {
		AdvancedEventSelectors     string
		CloudWatchLogsLogGroupArn  string
		CloudWatchLogsRoleArn      string
		EnableLogFileValidation    string
		EventSelectors             string
		IncludeGlobalServiceEvents string
		InsightSelectors           string
		IsLogging                  string
		IsMultiRegionTrail         string
		IsOrganizationTrail        string
		KMSKeyId                   string
		S3BucketName               string
		S3KeyPrefix                string
		SnsTopicName               string
		Tags                       string
		TrailName                  string
	}{
		AdvancedEventSelectors:     "AdvancedEventSelectors",
		CloudWatchLogsLogGroupArn:  "CloudWatchLogsLogGroupArn",
		CloudWatchLogsRoleArn:      "CloudWatchLogsRoleArn",
		EnableLogFileValidation:    "EnableLogFileValidation",
		EventSelectors:             "EventSelectors",
		IncludeGlobalServiceEvents: "IncludeGlobalServiceEvents",
		InsightSelectors:           "InsightSelectors",
		IsLogging:                  "IsLogging",
		IsMultiRegionTrail:         "IsMultiRegionTrail",
		IsOrganizationTrail:        "IsOrganizationTrail",
		KMSKeyId:                   "KMSKeyId",
		S3BucketName:               "S3BucketName",
		S3KeyPrefix:                "S3KeyPrefix",
		SnsTopicName:               "SnsTopicName",
		Tags:                       "Tags",
		TrailName:                  "TrailName",
	}

	// AWS_CloudTrail_Trail__PropertiesSlice reports all the CloudFormation properties for AWS::CloudTrail::Trail.
	AWS_CloudTrail_Trail__PropertiesSlice = []string{
		AWS_CloudTrail_Trail__PropertiesMap.AdvancedEventSelectors,
		AWS_CloudTrail_Trail__PropertiesMap.CloudWatchLogsLogGroupArn,
		AWS_CloudTrail_Trail__PropertiesMap.CloudWatchLogsRoleArn,
		AWS_CloudTrail_Trail__PropertiesMap.EnableLogFileValidation,
		AWS_CloudTrail_Trail__PropertiesMap.EventSelectors,
		AWS_CloudTrail_Trail__PropertiesMap.IncludeGlobalServiceEvents,
		AWS_CloudTrail_Trail__PropertiesMap.InsightSelectors,
		AWS_CloudTrail_Trail__PropertiesMap.IsLogging,
		AWS_CloudTrail_Trail__PropertiesMap.IsMultiRegionTrail,
		AWS_CloudTrail_Trail__PropertiesMap.IsOrganizationTrail,
		AWS_CloudTrail_Trail__PropertiesMap.KMSKeyId,
		AWS_CloudTrail_Trail__PropertiesMap.S3BucketName,
		AWS_CloudTrail_Trail__PropertiesMap.S3KeyPrefix,
		AWS_CloudTrail_Trail__PropertiesMap.SnsTopicName,
		AWS_CloudTrail_Trail__PropertiesMap.Tags,
		AWS_CloudTrail_Trail__PropertiesMap.TrailName,
	}
)

// AWS_CloudTrail_Trail is a binding for AWS::CloudTrail::Trail.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html
type AWS_CloudTrail_Trail struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AdvancedEventSelectors is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-advancedeventselectors
	AdvancedEventSelectors cfz.ExpressionSlice[AWS_CloudTrail_Trail_AdvancedEventSelector] `json:"AdvancedEventSelectors,omitempty"`

	// CloudWatchLogsLogGroupArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-cloudwatchlogsloggrouparn
	CloudWatchLogsLogGroupArn cfz.Expression[string] `json:"CloudWatchLogsLogGroupArn,omitempty"`

	// CloudWatchLogsRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-cloudwatchlogsrolearn
	CloudWatchLogsRoleArn cfz.Expression[string] `json:"CloudWatchLogsRoleArn,omitempty"`

	// EnableLogFileValidation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-enablelogfilevalidation
	EnableLogFileValidation cfz.Expression[bool] `json:"EnableLogFileValidation,omitempty"`

	// EventSelectors is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-eventselectors
	EventSelectors cfz.ExpressionSlice[AWS_CloudTrail_Trail_EventSelector] `json:"EventSelectors,omitempty"`

	// IncludeGlobalServiceEvents is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-includeglobalserviceevents
	IncludeGlobalServiceEvents cfz.Expression[bool] `json:"IncludeGlobalServiceEvents,omitempty"`

	// InsightSelectors is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-insightselectors
	InsightSelectors cfz.ExpressionSlice[AWS_CloudTrail_Trail_InsightSelector] `json:"InsightSelectors,omitempty"`

	// IsLogging is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-islogging
	IsLogging cfz.Expression[bool] `json:"IsLogging,omitempty"`

	// IsMultiRegionTrail is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-ismultiregiontrail
	IsMultiRegionTrail cfz.Expression[bool] `json:"IsMultiRegionTrail,omitempty"`

	// IsOrganizationTrail is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-isorganizationtrail
	IsOrganizationTrail cfz.Expression[bool] `json:"IsOrganizationTrail,omitempty"`

	// KMSKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-kmskeyid
	KMSKeyId cfz.Expression[string] `json:"KMSKeyId,omitempty"`

	// S3BucketName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-s3bucketname
	S3BucketName cfz.Expression[string] `json:"S3BucketName,omitempty"`

	// S3KeyPrefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-s3keyprefix
	S3KeyPrefix cfz.Expression[string] `json:"S3KeyPrefix,omitempty"`

	// SnsTopicName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-snstopicname
	SnsTopicName cfz.Expression[string] `json:"SnsTopicName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TrailName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-trail.html#cfn-cloudtrail-trail-trailname
	TrailName cfz.Expression[string] `json:"TrailName,omitempty"`
}

// New__AWS_CloudTrail_Trail initializes a new *AWS_CloudTrail_Trail.
func New__AWS_CloudTrail_Trail(logicalName string) *AWS_CloudTrail_Trail {
	return &AWS_CloudTrail_Trail{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudTrail_Trail) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudTrail_Trail) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudTrail_Trail) GetType() string {
	return AWS_CloudTrail_Trail__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudTrail_Trail) Set__LogicalName(v string) *AWS_CloudTrail_Trail {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudTrail_Trail) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudTrail_Trail {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudTrail_Trail) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudTrail_Trail {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudTrail_Trail) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudTrail_Trail {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudTrail_Trail) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudTrail_Trail {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudTrail_Trail) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudTrail_Trail {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudTrail_Trail) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudTrail_Trail {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AdvancedEventSelectors updates property "AdvancedEventSelectors".
func (t *AWS_CloudTrail_Trail) Set__AdvancedEventSelectors(v cfz.ExpressionSlice[AWS_CloudTrail_Trail_AdvancedEventSelector]) *AWS_CloudTrail_Trail {
	t.AdvancedEventSelectors = v
	return t
}

// SetS__AdvancedEventSelectors updates property "AdvancedEventSelectors".
func (t *AWS_CloudTrail_Trail) SetS__AdvancedEventSelectors(v ...cfz.Expression[AWS_CloudTrail_Trail_AdvancedEventSelector]) *AWS_CloudTrail_Trail {
	t.AdvancedEventSelectors = cfz.S(v...)
	return t
}

// SetSV__AdvancedEventSelectors updates property "AdvancedEventSelectors".
func (t *AWS_CloudTrail_Trail) SetSV__AdvancedEventSelectors(v ...AWS_CloudTrail_Trail_AdvancedEventSelector) *AWS_CloudTrail_Trail {
	t.AdvancedEventSelectors = cfz.SV(v...)
	return t
}

// Set__CloudWatchLogsLogGroupArn updates property "CloudWatchLogsLogGroupArn".
func (t *AWS_CloudTrail_Trail) Set__CloudWatchLogsLogGroupArn(v cfz.Expression[string]) *AWS_CloudTrail_Trail {
	t.CloudWatchLogsLogGroupArn = v
	return t
}

// SetV__CloudWatchLogsLogGroupArn updates property "CloudWatchLogsLogGroupArn".
func (t *AWS_CloudTrail_Trail) SetV__CloudWatchLogsLogGroupArn(v string) *AWS_CloudTrail_Trail {
	t.CloudWatchLogsLogGroupArn = cfz.V(v)
	return t
}

// Set__CloudWatchLogsRoleArn updates property "CloudWatchLogsRoleArn".
func (t *AWS_CloudTrail_Trail) Set__CloudWatchLogsRoleArn(v cfz.Expression[string]) *AWS_CloudTrail_Trail {
	t.CloudWatchLogsRoleArn = v
	return t
}

// SetV__CloudWatchLogsRoleArn updates property "CloudWatchLogsRoleArn".
func (t *AWS_CloudTrail_Trail) SetV__CloudWatchLogsRoleArn(v string) *AWS_CloudTrail_Trail {
	t.CloudWatchLogsRoleArn = cfz.V(v)
	return t
}

// Set__EnableLogFileValidation updates property "EnableLogFileValidation".
func (t *AWS_CloudTrail_Trail) Set__EnableLogFileValidation(v cfz.Expression[bool]) *AWS_CloudTrail_Trail {
	t.EnableLogFileValidation = v
	return t
}

// SetV__EnableLogFileValidation updates property "EnableLogFileValidation".
func (t *AWS_CloudTrail_Trail) SetV__EnableLogFileValidation(v bool) *AWS_CloudTrail_Trail {
	t.EnableLogFileValidation = cfz.V(v)
	return t
}

// Set__EventSelectors updates property "EventSelectors".
func (t *AWS_CloudTrail_Trail) Set__EventSelectors(v cfz.ExpressionSlice[AWS_CloudTrail_Trail_EventSelector]) *AWS_CloudTrail_Trail {
	t.EventSelectors = v
	return t
}

// SetS__EventSelectors updates property "EventSelectors".
func (t *AWS_CloudTrail_Trail) SetS__EventSelectors(v ...cfz.Expression[AWS_CloudTrail_Trail_EventSelector]) *AWS_CloudTrail_Trail {
	t.EventSelectors = cfz.S(v...)
	return t
}

// SetSV__EventSelectors updates property "EventSelectors".
func (t *AWS_CloudTrail_Trail) SetSV__EventSelectors(v ...AWS_CloudTrail_Trail_EventSelector) *AWS_CloudTrail_Trail {
	t.EventSelectors = cfz.SV(v...)
	return t
}

// Set__IncludeGlobalServiceEvents updates property "IncludeGlobalServiceEvents".
func (t *AWS_CloudTrail_Trail) Set__IncludeGlobalServiceEvents(v cfz.Expression[bool]) *AWS_CloudTrail_Trail {
	t.IncludeGlobalServiceEvents = v
	return t
}

// SetV__IncludeGlobalServiceEvents updates property "IncludeGlobalServiceEvents".
func (t *AWS_CloudTrail_Trail) SetV__IncludeGlobalServiceEvents(v bool) *AWS_CloudTrail_Trail {
	t.IncludeGlobalServiceEvents = cfz.V(v)
	return t
}

// Set__InsightSelectors updates property "InsightSelectors".
func (t *AWS_CloudTrail_Trail) Set__InsightSelectors(v cfz.ExpressionSlice[AWS_CloudTrail_Trail_InsightSelector]) *AWS_CloudTrail_Trail {
	t.InsightSelectors = v
	return t
}

// SetS__InsightSelectors updates property "InsightSelectors".
func (t *AWS_CloudTrail_Trail) SetS__InsightSelectors(v ...cfz.Expression[AWS_CloudTrail_Trail_InsightSelector]) *AWS_CloudTrail_Trail {
	t.InsightSelectors = cfz.S(v...)
	return t
}

// SetSV__InsightSelectors updates property "InsightSelectors".
func (t *AWS_CloudTrail_Trail) SetSV__InsightSelectors(v ...AWS_CloudTrail_Trail_InsightSelector) *AWS_CloudTrail_Trail {
	t.InsightSelectors = cfz.SV(v...)
	return t
}

// Set__IsLogging updates property "IsLogging".
func (t *AWS_CloudTrail_Trail) Set__IsLogging(v cfz.Expression[bool]) *AWS_CloudTrail_Trail {
	t.IsLogging = v
	return t
}

// SetV__IsLogging updates property "IsLogging".
func (t *AWS_CloudTrail_Trail) SetV__IsLogging(v bool) *AWS_CloudTrail_Trail {
	t.IsLogging = cfz.V(v)
	return t
}

// Set__IsMultiRegionTrail updates property "IsMultiRegionTrail".
func (t *AWS_CloudTrail_Trail) Set__IsMultiRegionTrail(v cfz.Expression[bool]) *AWS_CloudTrail_Trail {
	t.IsMultiRegionTrail = v
	return t
}

// SetV__IsMultiRegionTrail updates property "IsMultiRegionTrail".
func (t *AWS_CloudTrail_Trail) SetV__IsMultiRegionTrail(v bool) *AWS_CloudTrail_Trail {
	t.IsMultiRegionTrail = cfz.V(v)
	return t
}

// Set__IsOrganizationTrail updates property "IsOrganizationTrail".
func (t *AWS_CloudTrail_Trail) Set__IsOrganizationTrail(v cfz.Expression[bool]) *AWS_CloudTrail_Trail {
	t.IsOrganizationTrail = v
	return t
}

// SetV__IsOrganizationTrail updates property "IsOrganizationTrail".
func (t *AWS_CloudTrail_Trail) SetV__IsOrganizationTrail(v bool) *AWS_CloudTrail_Trail {
	t.IsOrganizationTrail = cfz.V(v)
	return t
}

// Set__KMSKeyId updates property "KMSKeyId".
func (t *AWS_CloudTrail_Trail) Set__KMSKeyId(v cfz.Expression[string]) *AWS_CloudTrail_Trail {
	t.KMSKeyId = v
	return t
}

// SetV__KMSKeyId updates property "KMSKeyId".
func (t *AWS_CloudTrail_Trail) SetV__KMSKeyId(v string) *AWS_CloudTrail_Trail {
	t.KMSKeyId = cfz.V(v)
	return t
}

// Set__S3BucketName updates property "S3BucketName".
func (t *AWS_CloudTrail_Trail) Set__S3BucketName(v cfz.Expression[string]) *AWS_CloudTrail_Trail {
	t.S3BucketName = v
	return t
}

// SetV__S3BucketName updates property "S3BucketName".
func (t *AWS_CloudTrail_Trail) SetV__S3BucketName(v string) *AWS_CloudTrail_Trail {
	t.S3BucketName = cfz.V(v)
	return t
}

// Set__S3KeyPrefix updates property "S3KeyPrefix".
func (t *AWS_CloudTrail_Trail) Set__S3KeyPrefix(v cfz.Expression[string]) *AWS_CloudTrail_Trail {
	t.S3KeyPrefix = v
	return t
}

// SetV__S3KeyPrefix updates property "S3KeyPrefix".
func (t *AWS_CloudTrail_Trail) SetV__S3KeyPrefix(v string) *AWS_CloudTrail_Trail {
	t.S3KeyPrefix = cfz.V(v)
	return t
}

// Set__SnsTopicName updates property "SnsTopicName".
func (t *AWS_CloudTrail_Trail) Set__SnsTopicName(v cfz.Expression[string]) *AWS_CloudTrail_Trail {
	t.SnsTopicName = v
	return t
}

// SetV__SnsTopicName updates property "SnsTopicName".
func (t *AWS_CloudTrail_Trail) SetV__SnsTopicName(v string) *AWS_CloudTrail_Trail {
	t.SnsTopicName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CloudTrail_Trail) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CloudTrail_Trail {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CloudTrail_Trail) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CloudTrail_Trail {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CloudTrail_Trail) SetSV__Tags(v ...cfz.Tag) *AWS_CloudTrail_Trail {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TrailName updates property "TrailName".
func (t *AWS_CloudTrail_Trail) Set__TrailName(v cfz.Expression[string]) *AWS_CloudTrail_Trail {
	t.TrailName = v
	return t
}

// SetV__TrailName updates property "TrailName".
func (t *AWS_CloudTrail_Trail) SetV__TrailName(v string) *AWS_CloudTrail_Trail {
	t.TrailName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudTrail_Trail) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_CloudTrail_Trail) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_Trail__AttributesMap.Arn))
}

// GetAtt__SnsTopicArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SnsTopicArn
func (t *AWS_CloudTrail_Trail) GetAtt__SnsTopicArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_Trail__AttributesMap.SnsTopicArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudTrail_Trail) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_CloudTrail_Trail) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SnsTopicArn returns a conventionally configured output for an attribute of this resource.
// Attribute: SnsTopicArn
func (t *AWS_CloudTrail_Trail) GetConventionalOutputAtt__SnsTopicArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSnsTopicArn", t.GetAtt__SnsTopicArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudTrail_Trail) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudTrail_Trail

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudTrail_Trail) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
