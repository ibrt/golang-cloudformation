// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudtrail

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudTrail_EventDataStore)(nil)
	_ cfz.Resource                   = (*AWS_CloudTrail_EventDataStore)(nil)
)

const (
	// AWS_CloudTrail_EventDataStore__Type is the CloudFormation type for AWS::CloudTrail::EventDataStore.
	AWS_CloudTrail_EventDataStore__Type = "AWS::CloudTrail::EventDataStore"
)

var (
	// AWS_CloudTrail_EventDataStore__AttributesMap reports all the CloudFormation attributes for AWS::CloudTrail::EventDataStore.
	AWS_CloudTrail_EventDataStore__AttributesMap = struct {
		CreatedTimestamp  string
		EventDataStoreArn string
		Status            string
		UpdatedTimestamp  string
	}{
		CreatedTimestamp:  "CreatedTimestamp",
		EventDataStoreArn: "EventDataStoreArn",
		Status:            "Status",
		UpdatedTimestamp:  "UpdatedTimestamp",
	}

	// AWS_CloudTrail_EventDataStore__AttributesSlice reports all the CloudFormation attributes for AWS::CloudTrail::EventDataStore.
	AWS_CloudTrail_EventDataStore__AttributesSlice = []string{
		AWS_CloudTrail_EventDataStore__AttributesMap.CreatedTimestamp,
		AWS_CloudTrail_EventDataStore__AttributesMap.EventDataStoreArn,
		AWS_CloudTrail_EventDataStore__AttributesMap.Status,
		AWS_CloudTrail_EventDataStore__AttributesMap.UpdatedTimestamp,
	}
)

var (
	// AWS_CloudTrail_EventDataStore__PropertiesMap reports all the CloudFormation properties for AWS::CloudTrail::EventDataStore.
	AWS_CloudTrail_EventDataStore__PropertiesMap = struct {
		AdvancedEventSelectors       string
		BillingMode                  string
		FederationEnabled            string
		FederationRoleArn            string
		IngestionEnabled             string
		InsightSelectors             string
		InsightsDestination          string
		KmsKeyId                     string
		MultiRegionEnabled           string
		Name                         string
		OrganizationEnabled          string
		RetentionPeriod              string
		Tags                         string
		TerminationProtectionEnabled string
	}{
		AdvancedEventSelectors:       "AdvancedEventSelectors",
		BillingMode:                  "BillingMode",
		FederationEnabled:            "FederationEnabled",
		FederationRoleArn:            "FederationRoleArn",
		IngestionEnabled:             "IngestionEnabled",
		InsightSelectors:             "InsightSelectors",
		InsightsDestination:          "InsightsDestination",
		KmsKeyId:                     "KmsKeyId",
		MultiRegionEnabled:           "MultiRegionEnabled",
		Name:                         "Name",
		OrganizationEnabled:          "OrganizationEnabled",
		RetentionPeriod:              "RetentionPeriod",
		Tags:                         "Tags",
		TerminationProtectionEnabled: "TerminationProtectionEnabled",
	}

	// AWS_CloudTrail_EventDataStore__PropertiesSlice reports all the CloudFormation properties for AWS::CloudTrail::EventDataStore.
	AWS_CloudTrail_EventDataStore__PropertiesSlice = []string{
		AWS_CloudTrail_EventDataStore__PropertiesMap.AdvancedEventSelectors,
		AWS_CloudTrail_EventDataStore__PropertiesMap.BillingMode,
		AWS_CloudTrail_EventDataStore__PropertiesMap.FederationEnabled,
		AWS_CloudTrail_EventDataStore__PropertiesMap.FederationRoleArn,
		AWS_CloudTrail_EventDataStore__PropertiesMap.IngestionEnabled,
		AWS_CloudTrail_EventDataStore__PropertiesMap.InsightSelectors,
		AWS_CloudTrail_EventDataStore__PropertiesMap.InsightsDestination,
		AWS_CloudTrail_EventDataStore__PropertiesMap.KmsKeyId,
		AWS_CloudTrail_EventDataStore__PropertiesMap.MultiRegionEnabled,
		AWS_CloudTrail_EventDataStore__PropertiesMap.Name,
		AWS_CloudTrail_EventDataStore__PropertiesMap.OrganizationEnabled,
		AWS_CloudTrail_EventDataStore__PropertiesMap.RetentionPeriod,
		AWS_CloudTrail_EventDataStore__PropertiesMap.Tags,
		AWS_CloudTrail_EventDataStore__PropertiesMap.TerminationProtectionEnabled,
	}
)

// AWS_CloudTrail_EventDataStore is a binding for AWS::CloudTrail::EventDataStore.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html
type AWS_CloudTrail_EventDataStore struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AdvancedEventSelectors is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-advancedeventselectors
	AdvancedEventSelectors cfz.ExpressionSlice[AWS_CloudTrail_EventDataStore_AdvancedEventSelector] `json:"AdvancedEventSelectors,omitempty"`

	// BillingMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-billingmode
	BillingMode cfz.Expression[string] `json:"BillingMode,omitempty"`

	// FederationEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-federationenabled
	FederationEnabled cfz.Expression[bool] `json:"FederationEnabled,omitempty"`

	// FederationRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-federationrolearn
	FederationRoleArn cfz.Expression[string] `json:"FederationRoleArn,omitempty"`

	// IngestionEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-ingestionenabled
	IngestionEnabled cfz.Expression[bool] `json:"IngestionEnabled,omitempty"`

	// InsightSelectors is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-insightselectors
	InsightSelectors cfz.ExpressionSlice[AWS_CloudTrail_EventDataStore_InsightSelector] `json:"InsightSelectors,omitempty"`

	// InsightsDestination is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-insightsdestination
	InsightsDestination cfz.Expression[string] `json:"InsightsDestination,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// MultiRegionEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-multiregionenabled
	MultiRegionEnabled cfz.Expression[bool] `json:"MultiRegionEnabled,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// OrganizationEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-organizationenabled
	OrganizationEnabled cfz.Expression[bool] `json:"OrganizationEnabled,omitempty"`

	// RetentionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-retentionperiod
	RetentionPeriod cfz.Expression[int32] `json:"RetentionPeriod,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TerminationProtectionEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-eventdatastore.html#cfn-cloudtrail-eventdatastore-terminationprotectionenabled
	TerminationProtectionEnabled cfz.Expression[bool] `json:"TerminationProtectionEnabled,omitempty"`
}

// New__AWS_CloudTrail_EventDataStore initializes a new *AWS_CloudTrail_EventDataStore.
func New__AWS_CloudTrail_EventDataStore(logicalName string) *AWS_CloudTrail_EventDataStore {
	return &AWS_CloudTrail_EventDataStore{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudTrail_EventDataStore) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudTrail_EventDataStore) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudTrail_EventDataStore) GetType() string {
	return AWS_CloudTrail_EventDataStore__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudTrail_EventDataStore) Set__LogicalName(v string) *AWS_CloudTrail_EventDataStore {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudTrail_EventDataStore) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudTrail_EventDataStore {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudTrail_EventDataStore) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudTrail_EventDataStore {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudTrail_EventDataStore) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudTrail_EventDataStore {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudTrail_EventDataStore) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudTrail_EventDataStore {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudTrail_EventDataStore) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudTrail_EventDataStore {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudTrail_EventDataStore) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudTrail_EventDataStore {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AdvancedEventSelectors updates property "AdvancedEventSelectors".
func (t *AWS_CloudTrail_EventDataStore) Set__AdvancedEventSelectors(v cfz.ExpressionSlice[AWS_CloudTrail_EventDataStore_AdvancedEventSelector]) *AWS_CloudTrail_EventDataStore {
	t.AdvancedEventSelectors = v
	return t
}

// SetS__AdvancedEventSelectors updates property "AdvancedEventSelectors".
func (t *AWS_CloudTrail_EventDataStore) SetS__AdvancedEventSelectors(v ...cfz.Expression[AWS_CloudTrail_EventDataStore_AdvancedEventSelector]) *AWS_CloudTrail_EventDataStore {
	t.AdvancedEventSelectors = cfz.S(v...)
	return t
}

// SetSV__AdvancedEventSelectors updates property "AdvancedEventSelectors".
func (t *AWS_CloudTrail_EventDataStore) SetSV__AdvancedEventSelectors(v ...AWS_CloudTrail_EventDataStore_AdvancedEventSelector) *AWS_CloudTrail_EventDataStore {
	t.AdvancedEventSelectors = cfz.SV(v...)
	return t
}

// Set__BillingMode updates property "BillingMode".
func (t *AWS_CloudTrail_EventDataStore) Set__BillingMode(v cfz.Expression[string]) *AWS_CloudTrail_EventDataStore {
	t.BillingMode = v
	return t
}

// SetV__BillingMode updates property "BillingMode".
func (t *AWS_CloudTrail_EventDataStore) SetV__BillingMode(v string) *AWS_CloudTrail_EventDataStore {
	t.BillingMode = cfz.V(v)
	return t
}

// Set__FederationEnabled updates property "FederationEnabled".
func (t *AWS_CloudTrail_EventDataStore) Set__FederationEnabled(v cfz.Expression[bool]) *AWS_CloudTrail_EventDataStore {
	t.FederationEnabled = v
	return t
}

// SetV__FederationEnabled updates property "FederationEnabled".
func (t *AWS_CloudTrail_EventDataStore) SetV__FederationEnabled(v bool) *AWS_CloudTrail_EventDataStore {
	t.FederationEnabled = cfz.V(v)
	return t
}

// Set__FederationRoleArn updates property "FederationRoleArn".
func (t *AWS_CloudTrail_EventDataStore) Set__FederationRoleArn(v cfz.Expression[string]) *AWS_CloudTrail_EventDataStore {
	t.FederationRoleArn = v
	return t
}

// SetV__FederationRoleArn updates property "FederationRoleArn".
func (t *AWS_CloudTrail_EventDataStore) SetV__FederationRoleArn(v string) *AWS_CloudTrail_EventDataStore {
	t.FederationRoleArn = cfz.V(v)
	return t
}

// Set__IngestionEnabled updates property "IngestionEnabled".
func (t *AWS_CloudTrail_EventDataStore) Set__IngestionEnabled(v cfz.Expression[bool]) *AWS_CloudTrail_EventDataStore {
	t.IngestionEnabled = v
	return t
}

// SetV__IngestionEnabled updates property "IngestionEnabled".
func (t *AWS_CloudTrail_EventDataStore) SetV__IngestionEnabled(v bool) *AWS_CloudTrail_EventDataStore {
	t.IngestionEnabled = cfz.V(v)
	return t
}

// Set__InsightSelectors updates property "InsightSelectors".
func (t *AWS_CloudTrail_EventDataStore) Set__InsightSelectors(v cfz.ExpressionSlice[AWS_CloudTrail_EventDataStore_InsightSelector]) *AWS_CloudTrail_EventDataStore {
	t.InsightSelectors = v
	return t
}

// SetS__InsightSelectors updates property "InsightSelectors".
func (t *AWS_CloudTrail_EventDataStore) SetS__InsightSelectors(v ...cfz.Expression[AWS_CloudTrail_EventDataStore_InsightSelector]) *AWS_CloudTrail_EventDataStore {
	t.InsightSelectors = cfz.S(v...)
	return t
}

// SetSV__InsightSelectors updates property "InsightSelectors".
func (t *AWS_CloudTrail_EventDataStore) SetSV__InsightSelectors(v ...AWS_CloudTrail_EventDataStore_InsightSelector) *AWS_CloudTrail_EventDataStore {
	t.InsightSelectors = cfz.SV(v...)
	return t
}

// Set__InsightsDestination updates property "InsightsDestination".
func (t *AWS_CloudTrail_EventDataStore) Set__InsightsDestination(v cfz.Expression[string]) *AWS_CloudTrail_EventDataStore {
	t.InsightsDestination = v
	return t
}

// SetV__InsightsDestination updates property "InsightsDestination".
func (t *AWS_CloudTrail_EventDataStore) SetV__InsightsDestination(v string) *AWS_CloudTrail_EventDataStore {
	t.InsightsDestination = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_CloudTrail_EventDataStore) Set__KmsKeyId(v cfz.Expression[string]) *AWS_CloudTrail_EventDataStore {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_CloudTrail_EventDataStore) SetV__KmsKeyId(v string) *AWS_CloudTrail_EventDataStore {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__MultiRegionEnabled updates property "MultiRegionEnabled".
func (t *AWS_CloudTrail_EventDataStore) Set__MultiRegionEnabled(v cfz.Expression[bool]) *AWS_CloudTrail_EventDataStore {
	t.MultiRegionEnabled = v
	return t
}

// SetV__MultiRegionEnabled updates property "MultiRegionEnabled".
func (t *AWS_CloudTrail_EventDataStore) SetV__MultiRegionEnabled(v bool) *AWS_CloudTrail_EventDataStore {
	t.MultiRegionEnabled = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_CloudTrail_EventDataStore) Set__Name(v cfz.Expression[string]) *AWS_CloudTrail_EventDataStore {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_CloudTrail_EventDataStore) SetV__Name(v string) *AWS_CloudTrail_EventDataStore {
	t.Name = cfz.V(v)
	return t
}

// Set__OrganizationEnabled updates property "OrganizationEnabled".
func (t *AWS_CloudTrail_EventDataStore) Set__OrganizationEnabled(v cfz.Expression[bool]) *AWS_CloudTrail_EventDataStore {
	t.OrganizationEnabled = v
	return t
}

// SetV__OrganizationEnabled updates property "OrganizationEnabled".
func (t *AWS_CloudTrail_EventDataStore) SetV__OrganizationEnabled(v bool) *AWS_CloudTrail_EventDataStore {
	t.OrganizationEnabled = cfz.V(v)
	return t
}

// Set__RetentionPeriod updates property "RetentionPeriod".
func (t *AWS_CloudTrail_EventDataStore) Set__RetentionPeriod(v cfz.Expression[int32]) *AWS_CloudTrail_EventDataStore {
	t.RetentionPeriod = v
	return t
}

// SetV__RetentionPeriod updates property "RetentionPeriod".
func (t *AWS_CloudTrail_EventDataStore) SetV__RetentionPeriod(v int32) *AWS_CloudTrail_EventDataStore {
	t.RetentionPeriod = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CloudTrail_EventDataStore) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CloudTrail_EventDataStore {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CloudTrail_EventDataStore) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CloudTrail_EventDataStore {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CloudTrail_EventDataStore) SetSV__Tags(v ...cfz.Tag) *AWS_CloudTrail_EventDataStore {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TerminationProtectionEnabled updates property "TerminationProtectionEnabled".
func (t *AWS_CloudTrail_EventDataStore) Set__TerminationProtectionEnabled(v cfz.Expression[bool]) *AWS_CloudTrail_EventDataStore {
	t.TerminationProtectionEnabled = v
	return t
}

// SetV__TerminationProtectionEnabled updates property "TerminationProtectionEnabled".
func (t *AWS_CloudTrail_EventDataStore) SetV__TerminationProtectionEnabled(v bool) *AWS_CloudTrail_EventDataStore {
	t.TerminationProtectionEnabled = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudTrail_EventDataStore) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreatedTimestamp returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedTimestamp
func (t *AWS_CloudTrail_EventDataStore) GetAtt__CreatedTimestamp() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_EventDataStore__AttributesMap.CreatedTimestamp))
}

// GetAtt__EventDataStoreArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EventDataStoreArn
func (t *AWS_CloudTrail_EventDataStore) GetAtt__EventDataStoreArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_EventDataStore__AttributesMap.EventDataStoreArn))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_CloudTrail_EventDataStore) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_EventDataStore__AttributesMap.Status))
}

// GetAtt__UpdatedTimestamp returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedTimestamp
func (t *AWS_CloudTrail_EventDataStore) GetAtt__UpdatedTimestamp() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_EventDataStore__AttributesMap.UpdatedTimestamp))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudTrail_EventDataStore) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedTimestamp returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedTimestamp
func (t *AWS_CloudTrail_EventDataStore) GetConventionalOutputAtt__CreatedTimestamp(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedTimestamp", t.GetAtt__CreatedTimestamp())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EventDataStoreArn returns a conventionally configured output for an attribute of this resource.
// Attribute: EventDataStoreArn
func (t *AWS_CloudTrail_EventDataStore) GetConventionalOutputAtt__EventDataStoreArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEventDataStoreArn", t.GetAtt__EventDataStoreArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_CloudTrail_EventDataStore) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedTimestamp returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedTimestamp
func (t *AWS_CloudTrail_EventDataStore) GetConventionalOutputAtt__UpdatedTimestamp(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedTimestamp", t.GetAtt__UpdatedTimestamp())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudTrail_EventDataStore) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudTrail_EventDataStore

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudTrail_EventDataStore) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
