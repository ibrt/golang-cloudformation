// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudtrail

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudTrail_Dashboard)(nil)
	_ cfz.Resource                   = (*AWS_CloudTrail_Dashboard)(nil)
)

const (
	// AWS_CloudTrail_Dashboard__Type is the CloudFormation type for AWS::CloudTrail::Dashboard.
	AWS_CloudTrail_Dashboard__Type = "AWS::CloudTrail::Dashboard"
)

var (
	// AWS_CloudTrail_Dashboard__AttributesMap reports all the CloudFormation attributes for AWS::CloudTrail::Dashboard.
	AWS_CloudTrail_Dashboard__AttributesMap = struct {
		CreatedTimestamp string
		DashboardArn     string
		Status           string
		Type             string
		UpdatedTimestamp string
	}{
		CreatedTimestamp: "CreatedTimestamp",
		DashboardArn:     "DashboardArn",
		Status:           "Status",
		Type:             "Type",
		UpdatedTimestamp: "UpdatedTimestamp",
	}

	// AWS_CloudTrail_Dashboard__AttributesSlice reports all the CloudFormation attributes for AWS::CloudTrail::Dashboard.
	AWS_CloudTrail_Dashboard__AttributesSlice = []string{
		AWS_CloudTrail_Dashboard__AttributesMap.CreatedTimestamp,
		AWS_CloudTrail_Dashboard__AttributesMap.DashboardArn,
		AWS_CloudTrail_Dashboard__AttributesMap.Status,
		AWS_CloudTrail_Dashboard__AttributesMap.Type,
		AWS_CloudTrail_Dashboard__AttributesMap.UpdatedTimestamp,
	}
)

var (
	// AWS_CloudTrail_Dashboard__PropertiesMap reports all the CloudFormation properties for AWS::CloudTrail::Dashboard.
	AWS_CloudTrail_Dashboard__PropertiesMap = struct {
		Name                         string
		RefreshSchedule              string
		Tags                         string
		TerminationProtectionEnabled string
		Widgets                      string
	}{
		Name:                         "Name",
		RefreshSchedule:              "RefreshSchedule",
		Tags:                         "Tags",
		TerminationProtectionEnabled: "TerminationProtectionEnabled",
		Widgets:                      "Widgets",
	}

	// AWS_CloudTrail_Dashboard__PropertiesSlice reports all the CloudFormation properties for AWS::CloudTrail::Dashboard.
	AWS_CloudTrail_Dashboard__PropertiesSlice = []string{
		AWS_CloudTrail_Dashboard__PropertiesMap.Name,
		AWS_CloudTrail_Dashboard__PropertiesMap.RefreshSchedule,
		AWS_CloudTrail_Dashboard__PropertiesMap.Tags,
		AWS_CloudTrail_Dashboard__PropertiesMap.TerminationProtectionEnabled,
		AWS_CloudTrail_Dashboard__PropertiesMap.Widgets,
	}
)

// AWS_CloudTrail_Dashboard is a binding for AWS::CloudTrail::Dashboard.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html
type AWS_CloudTrail_Dashboard struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RefreshSchedule is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-refreshschedule
	RefreshSchedule cfz.Expression[AWS_CloudTrail_Dashboard_RefreshSchedule] `json:"RefreshSchedule,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TerminationProtectionEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-terminationprotectionenabled
	TerminationProtectionEnabled cfz.Expression[bool] `json:"TerminationProtectionEnabled,omitempty"`

	// Widgets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudtrail-dashboard.html#cfn-cloudtrail-dashboard-widgets
	Widgets cfz.ExpressionSlice[AWS_CloudTrail_Dashboard_Widget] `json:"Widgets,omitempty"`
}

// New__AWS_CloudTrail_Dashboard initializes a new *AWS_CloudTrail_Dashboard.
func New__AWS_CloudTrail_Dashboard(logicalName string) *AWS_CloudTrail_Dashboard {
	return &AWS_CloudTrail_Dashboard{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudTrail_Dashboard) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudTrail_Dashboard) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudTrail_Dashboard) GetType() string {
	return AWS_CloudTrail_Dashboard__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudTrail_Dashboard) Set__LogicalName(v string) *AWS_CloudTrail_Dashboard {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudTrail_Dashboard) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudTrail_Dashboard {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudTrail_Dashboard) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudTrail_Dashboard {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudTrail_Dashboard) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudTrail_Dashboard {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudTrail_Dashboard) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudTrail_Dashboard {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudTrail_Dashboard) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudTrail_Dashboard {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudTrail_Dashboard) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudTrail_Dashboard {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_CloudTrail_Dashboard) Set__Name(v cfz.Expression[string]) *AWS_CloudTrail_Dashboard {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_CloudTrail_Dashboard) SetV__Name(v string) *AWS_CloudTrail_Dashboard {
	t.Name = cfz.V(v)
	return t
}

// Set__RefreshSchedule updates property "RefreshSchedule".
func (t *AWS_CloudTrail_Dashboard) Set__RefreshSchedule(v cfz.Expression[AWS_CloudTrail_Dashboard_RefreshSchedule]) *AWS_CloudTrail_Dashboard {
	t.RefreshSchedule = v
	return t
}

// SetV__RefreshSchedule updates property "RefreshSchedule".
func (t *AWS_CloudTrail_Dashboard) SetV__RefreshSchedule(v AWS_CloudTrail_Dashboard_RefreshSchedule) *AWS_CloudTrail_Dashboard {
	t.RefreshSchedule = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CloudTrail_Dashboard) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CloudTrail_Dashboard {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CloudTrail_Dashboard) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CloudTrail_Dashboard {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CloudTrail_Dashboard) SetSV__Tags(v ...cfz.Tag) *AWS_CloudTrail_Dashboard {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TerminationProtectionEnabled updates property "TerminationProtectionEnabled".
func (t *AWS_CloudTrail_Dashboard) Set__TerminationProtectionEnabled(v cfz.Expression[bool]) *AWS_CloudTrail_Dashboard {
	t.TerminationProtectionEnabled = v
	return t
}

// SetV__TerminationProtectionEnabled updates property "TerminationProtectionEnabled".
func (t *AWS_CloudTrail_Dashboard) SetV__TerminationProtectionEnabled(v bool) *AWS_CloudTrail_Dashboard {
	t.TerminationProtectionEnabled = cfz.V(v)
	return t
}

// Set__Widgets updates property "Widgets".
func (t *AWS_CloudTrail_Dashboard) Set__Widgets(v cfz.ExpressionSlice[AWS_CloudTrail_Dashboard_Widget]) *AWS_CloudTrail_Dashboard {
	t.Widgets = v
	return t
}

// SetS__Widgets updates property "Widgets".
func (t *AWS_CloudTrail_Dashboard) SetS__Widgets(v ...cfz.Expression[AWS_CloudTrail_Dashboard_Widget]) *AWS_CloudTrail_Dashboard {
	t.Widgets = cfz.S(v...)
	return t
}

// SetSV__Widgets updates property "Widgets".
func (t *AWS_CloudTrail_Dashboard) SetSV__Widgets(v ...AWS_CloudTrail_Dashboard_Widget) *AWS_CloudTrail_Dashboard {
	t.Widgets = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudTrail_Dashboard) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreatedTimestamp returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedTimestamp
func (t *AWS_CloudTrail_Dashboard) GetAtt__CreatedTimestamp() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_Dashboard__AttributesMap.CreatedTimestamp))
}

// GetAtt__DashboardArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DashboardArn
func (t *AWS_CloudTrail_Dashboard) GetAtt__DashboardArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_Dashboard__AttributesMap.DashboardArn))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_CloudTrail_Dashboard) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_Dashboard__AttributesMap.Status))
}

// GetAtt__Type returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Type
func (t *AWS_CloudTrail_Dashboard) GetAtt__Type() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_Dashboard__AttributesMap.Type))
}

// GetAtt__UpdatedTimestamp returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedTimestamp
func (t *AWS_CloudTrail_Dashboard) GetAtt__UpdatedTimestamp() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudTrail_Dashboard__AttributesMap.UpdatedTimestamp))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudTrail_Dashboard) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedTimestamp returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedTimestamp
func (t *AWS_CloudTrail_Dashboard) GetConventionalOutputAtt__CreatedTimestamp(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedTimestamp", t.GetAtt__CreatedTimestamp())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DashboardArn returns a conventionally configured output for an attribute of this resource.
// Attribute: DashboardArn
func (t *AWS_CloudTrail_Dashboard) GetConventionalOutputAtt__DashboardArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDashboardArn", t.GetAtt__DashboardArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_CloudTrail_Dashboard) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Type returns a conventionally configured output for an attribute of this resource.
// Attribute: Type
func (t *AWS_CloudTrail_Dashboard) GetConventionalOutputAtt__Type(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttType", t.GetAtt__Type())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedTimestamp returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedTimestamp
func (t *AWS_CloudTrail_Dashboard) GetConventionalOutputAtt__UpdatedTimestamp(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedTimestamp", t.GetAtt__UpdatedTimestamp())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudTrail_Dashboard) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudTrail_Dashboard

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudTrail_Dashboard) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
