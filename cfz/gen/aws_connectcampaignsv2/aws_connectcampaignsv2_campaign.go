// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_connectcampaignsv2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ConnectCampaignsV2_Campaign)(nil)
	_ cfz.Resource                   = (*AWS_ConnectCampaignsV2_Campaign)(nil)
)

const (
	// AWS_ConnectCampaignsV2_Campaign__Type is the CloudFormation type for AWS::ConnectCampaignsV2::Campaign.
	AWS_ConnectCampaignsV2_Campaign__Type = "AWS::ConnectCampaignsV2::Campaign"
)

var (
	// AWS_ConnectCampaignsV2_Campaign__AttributesMap reports all the CloudFormation attributes for AWS::ConnectCampaignsV2::Campaign.
	AWS_ConnectCampaignsV2_Campaign__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_ConnectCampaignsV2_Campaign__AttributesSlice reports all the CloudFormation attributes for AWS::ConnectCampaignsV2::Campaign.
	AWS_ConnectCampaignsV2_Campaign__AttributesSlice = []string{
		AWS_ConnectCampaignsV2_Campaign__AttributesMap.Arn,
	}
)

var (
	// AWS_ConnectCampaignsV2_Campaign__PropertiesMap reports all the CloudFormation properties for AWS::ConnectCampaignsV2::Campaign.
	AWS_ConnectCampaignsV2_Campaign__PropertiesMap = struct {
		ChannelSubtypeConfig        string
		CommunicationLimitsOverride string
		CommunicationTimeConfig     string
		ConnectCampaignFlowArn      string
		ConnectInstanceId           string
		Name                        string
		Schedule                    string
		Source                      string
		Tags                        string
	}{
		ChannelSubtypeConfig:        "ChannelSubtypeConfig",
		CommunicationLimitsOverride: "CommunicationLimitsOverride",
		CommunicationTimeConfig:     "CommunicationTimeConfig",
		ConnectCampaignFlowArn:      "ConnectCampaignFlowArn",
		ConnectInstanceId:           "ConnectInstanceId",
		Name:                        "Name",
		Schedule:                    "Schedule",
		Source:                      "Source",
		Tags:                        "Tags",
	}

	// AWS_ConnectCampaignsV2_Campaign__PropertiesSlice reports all the CloudFormation properties for AWS::ConnectCampaignsV2::Campaign.
	AWS_ConnectCampaignsV2_Campaign__PropertiesSlice = []string{
		AWS_ConnectCampaignsV2_Campaign__PropertiesMap.ChannelSubtypeConfig,
		AWS_ConnectCampaignsV2_Campaign__PropertiesMap.CommunicationLimitsOverride,
		AWS_ConnectCampaignsV2_Campaign__PropertiesMap.CommunicationTimeConfig,
		AWS_ConnectCampaignsV2_Campaign__PropertiesMap.ConnectCampaignFlowArn,
		AWS_ConnectCampaignsV2_Campaign__PropertiesMap.ConnectInstanceId,
		AWS_ConnectCampaignsV2_Campaign__PropertiesMap.Name,
		AWS_ConnectCampaignsV2_Campaign__PropertiesMap.Schedule,
		AWS_ConnectCampaignsV2_Campaign__PropertiesMap.Source,
		AWS_ConnectCampaignsV2_Campaign__PropertiesMap.Tags,
	}
)

// AWS_ConnectCampaignsV2_Campaign is a binding for AWS::ConnectCampaignsV2::Campaign.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html
type AWS_ConnectCampaignsV2_Campaign struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ChannelSubtypeConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-channelsubtypeconfig
	ChannelSubtypeConfig cfz.Expression[AWS_ConnectCampaignsV2_Campaign_ChannelSubtypeConfig] `json:"ChannelSubtypeConfig,omitempty"`

	// CommunicationLimitsOverride is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-communicationlimitsoverride
	CommunicationLimitsOverride cfz.Expression[AWS_ConnectCampaignsV2_Campaign_CommunicationLimitsConfig] `json:"CommunicationLimitsOverride,omitempty"`

	// CommunicationTimeConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-communicationtimeconfig
	CommunicationTimeConfig cfz.Expression[AWS_ConnectCampaignsV2_Campaign_CommunicationTimeConfig] `json:"CommunicationTimeConfig,omitempty"`

	// ConnectCampaignFlowArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-connectcampaignflowarn
	ConnectCampaignFlowArn cfz.Expression[string] `json:"ConnectCampaignFlowArn,omitempty"`

	// ConnectInstanceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-connectinstanceid
	ConnectInstanceId cfz.Expression[string] `json:"ConnectInstanceId,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Schedule is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-schedule
	Schedule cfz.Expression[AWS_ConnectCampaignsV2_Campaign_Schedule] `json:"Schedule,omitempty"`

	// Source is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-source
	Source cfz.Expression[AWS_ConnectCampaignsV2_Campaign_Source] `json:"Source,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-connectcampaignsv2-campaign.html#cfn-connectcampaignsv2-campaign-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_ConnectCampaignsV2_Campaign initializes a new *AWS_ConnectCampaignsV2_Campaign.
func New__AWS_ConnectCampaignsV2_Campaign(logicalName string) *AWS_ConnectCampaignsV2_Campaign {
	return &AWS_ConnectCampaignsV2_Campaign{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ConnectCampaignsV2_Campaign) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ConnectCampaignsV2_Campaign) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ConnectCampaignsV2_Campaign) GetType() string {
	return AWS_ConnectCampaignsV2_Campaign__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__LogicalName(v string) *AWS_ConnectCampaignsV2_Campaign {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ConnectCampaignsV2_Campaign {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ConnectCampaignsV2_Campaign) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ConnectCampaignsV2_Campaign {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ConnectCampaignsV2_Campaign {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ConnectCampaignsV2_Campaign {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__RequestedOutputs(v []cfz.Output) *AWS_ConnectCampaignsV2_Campaign {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ConnectCampaignsV2_Campaign) Add__RequestedOutputs(v ...cfz.Output) *AWS_ConnectCampaignsV2_Campaign {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ChannelSubtypeConfig updates property "ChannelSubtypeConfig".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__ChannelSubtypeConfig(v cfz.Expression[AWS_ConnectCampaignsV2_Campaign_ChannelSubtypeConfig]) *AWS_ConnectCampaignsV2_Campaign {
	t.ChannelSubtypeConfig = v
	return t
}

// SetV__ChannelSubtypeConfig updates property "ChannelSubtypeConfig".
func (t *AWS_ConnectCampaignsV2_Campaign) SetV__ChannelSubtypeConfig(v AWS_ConnectCampaignsV2_Campaign_ChannelSubtypeConfig) *AWS_ConnectCampaignsV2_Campaign {
	t.ChannelSubtypeConfig = cfz.V(v)
	return t
}

// Set__CommunicationLimitsOverride updates property "CommunicationLimitsOverride".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__CommunicationLimitsOverride(v cfz.Expression[AWS_ConnectCampaignsV2_Campaign_CommunicationLimitsConfig]) *AWS_ConnectCampaignsV2_Campaign {
	t.CommunicationLimitsOverride = v
	return t
}

// SetV__CommunicationLimitsOverride updates property "CommunicationLimitsOverride".
func (t *AWS_ConnectCampaignsV2_Campaign) SetV__CommunicationLimitsOverride(v AWS_ConnectCampaignsV2_Campaign_CommunicationLimitsConfig) *AWS_ConnectCampaignsV2_Campaign {
	t.CommunicationLimitsOverride = cfz.V(v)
	return t
}

// Set__CommunicationTimeConfig updates property "CommunicationTimeConfig".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__CommunicationTimeConfig(v cfz.Expression[AWS_ConnectCampaignsV2_Campaign_CommunicationTimeConfig]) *AWS_ConnectCampaignsV2_Campaign {
	t.CommunicationTimeConfig = v
	return t
}

// SetV__CommunicationTimeConfig updates property "CommunicationTimeConfig".
func (t *AWS_ConnectCampaignsV2_Campaign) SetV__CommunicationTimeConfig(v AWS_ConnectCampaignsV2_Campaign_CommunicationTimeConfig) *AWS_ConnectCampaignsV2_Campaign {
	t.CommunicationTimeConfig = cfz.V(v)
	return t
}

// Set__ConnectCampaignFlowArn updates property "ConnectCampaignFlowArn".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__ConnectCampaignFlowArn(v cfz.Expression[string]) *AWS_ConnectCampaignsV2_Campaign {
	t.ConnectCampaignFlowArn = v
	return t
}

// SetV__ConnectCampaignFlowArn updates property "ConnectCampaignFlowArn".
func (t *AWS_ConnectCampaignsV2_Campaign) SetV__ConnectCampaignFlowArn(v string) *AWS_ConnectCampaignsV2_Campaign {
	t.ConnectCampaignFlowArn = cfz.V(v)
	return t
}

// Set__ConnectInstanceId updates property "ConnectInstanceId".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__ConnectInstanceId(v cfz.Expression[string]) *AWS_ConnectCampaignsV2_Campaign {
	t.ConnectInstanceId = v
	return t
}

// SetV__ConnectInstanceId updates property "ConnectInstanceId".
func (t *AWS_ConnectCampaignsV2_Campaign) SetV__ConnectInstanceId(v string) *AWS_ConnectCampaignsV2_Campaign {
	t.ConnectInstanceId = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__Name(v cfz.Expression[string]) *AWS_ConnectCampaignsV2_Campaign {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_ConnectCampaignsV2_Campaign) SetV__Name(v string) *AWS_ConnectCampaignsV2_Campaign {
	t.Name = cfz.V(v)
	return t
}

// Set__Schedule updates property "Schedule".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__Schedule(v cfz.Expression[AWS_ConnectCampaignsV2_Campaign_Schedule]) *AWS_ConnectCampaignsV2_Campaign {
	t.Schedule = v
	return t
}

// SetV__Schedule updates property "Schedule".
func (t *AWS_ConnectCampaignsV2_Campaign) SetV__Schedule(v AWS_ConnectCampaignsV2_Campaign_Schedule) *AWS_ConnectCampaignsV2_Campaign {
	t.Schedule = cfz.V(v)
	return t
}

// Set__Source updates property "Source".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__Source(v cfz.Expression[AWS_ConnectCampaignsV2_Campaign_Source]) *AWS_ConnectCampaignsV2_Campaign {
	t.Source = v
	return t
}

// SetV__Source updates property "Source".
func (t *AWS_ConnectCampaignsV2_Campaign) SetV__Source(v AWS_ConnectCampaignsV2_Campaign_Source) *AWS_ConnectCampaignsV2_Campaign {
	t.Source = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ConnectCampaignsV2_Campaign) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ConnectCampaignsV2_Campaign {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ConnectCampaignsV2_Campaign) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ConnectCampaignsV2_Campaign {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ConnectCampaignsV2_Campaign) SetSV__Tags(v ...cfz.Tag) *AWS_ConnectCampaignsV2_Campaign {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ConnectCampaignsV2_Campaign) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_ConnectCampaignsV2_Campaign) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ConnectCampaignsV2_Campaign__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ConnectCampaignsV2_Campaign) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_ConnectCampaignsV2_Campaign) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ConnectCampaignsV2_Campaign) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ConnectCampaignsV2_Campaign

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ConnectCampaignsV2_Campaign) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
