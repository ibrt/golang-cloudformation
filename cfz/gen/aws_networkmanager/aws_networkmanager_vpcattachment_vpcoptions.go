// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_networkmanager

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_NetworkManager_VpcAttachment_VpcOptions__Type is the CloudFormation type for AWS::NetworkManager::VpcAttachment.VpcOptions.
	AWS_NetworkManager_VpcAttachment_VpcOptions__Type = "AWS::NetworkManager::VpcAttachment.VpcOptions"
)

var (
	// AWS_NetworkManager_VpcAttachment_VpcOptions__PropertiesMap reports all the CloudFormation properties for AWS::NetworkManager::VpcAttachment.VpcOptions.
	AWS_NetworkManager_VpcAttachment_VpcOptions__PropertiesMap = struct {
		ApplianceModeSupport string
		Ipv6Support          string
	}{
		ApplianceModeSupport: "ApplianceModeSupport",
		Ipv6Support:          "Ipv6Support",
	}

	// AWS_NetworkManager_VpcAttachment_VpcOptions__PropertiesSlice reports all the CloudFormation properties for AWS::NetworkManager::VpcAttachment.VpcOptions.
	AWS_NetworkManager_VpcAttachment_VpcOptions__PropertiesSlice = []string{
		AWS_NetworkManager_VpcAttachment_VpcOptions__PropertiesMap.ApplianceModeSupport,
		AWS_NetworkManager_VpcAttachment_VpcOptions__PropertiesMap.Ipv6Support,
	}
)

// AWS_NetworkManager_VpcAttachment_VpcOptions is a binding for AWS::NetworkManager::VpcAttachment.VpcOptions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-networkmanager-vpcattachment-vpcoptions.html
type AWS_NetworkManager_VpcAttachment_VpcOptions struct {
	// ApplianceModeSupport is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-networkmanager-vpcattachment-vpcoptions.html#cfn-networkmanager-vpcattachment-vpcoptions-appliancemodesupport
	ApplianceModeSupport cfz.Expression[bool] `json:"ApplianceModeSupport,omitempty"`

	// Ipv6Support is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-networkmanager-vpcattachment-vpcoptions.html#cfn-networkmanager-vpcattachment-vpcoptions-ipv6support
	Ipv6Support cfz.Expression[bool] `json:"Ipv6Support,omitempty"`
}

// New__AWS_NetworkManager_VpcAttachment_VpcOptions initializes a new AWS_NetworkManager_VpcAttachment_VpcOptions.
func New__AWS_NetworkManager_VpcAttachment_VpcOptions() AWS_NetworkManager_VpcAttachment_VpcOptions {
	return AWS_NetworkManager_VpcAttachment_VpcOptions{}
}

// GetType returns the CloudFormation type.
func (AWS_NetworkManager_VpcAttachment_VpcOptions) GetType() string {
	return AWS_NetworkManager_VpcAttachment_VpcOptions__Type
}

// Set__ApplianceModeSupport updates property "ApplianceModeSupport".
func (t AWS_NetworkManager_VpcAttachment_VpcOptions) Set__ApplianceModeSupport(v cfz.Expression[bool]) AWS_NetworkManager_VpcAttachment_VpcOptions {
	t.ApplianceModeSupport = v
	return t
}

// SetV__ApplianceModeSupport updates property "ApplianceModeSupport".
func (t AWS_NetworkManager_VpcAttachment_VpcOptions) SetV__ApplianceModeSupport(v bool) AWS_NetworkManager_VpcAttachment_VpcOptions {
	t.ApplianceModeSupport = cfz.V(v)
	return t
}

// Set__Ipv6Support updates property "Ipv6Support".
func (t AWS_NetworkManager_VpcAttachment_VpcOptions) Set__Ipv6Support(v cfz.Expression[bool]) AWS_NetworkManager_VpcAttachment_VpcOptions {
	t.Ipv6Support = v
	return t
}

// SetV__Ipv6Support updates property "Ipv6Support".
func (t AWS_NetworkManager_VpcAttachment_VpcOptions) SetV__Ipv6Support(v bool) AWS_NetworkManager_VpcAttachment_VpcOptions {
	t.Ipv6Support = cfz.V(v)
	return t
}
