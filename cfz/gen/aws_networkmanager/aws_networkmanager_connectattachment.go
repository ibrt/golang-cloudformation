// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_networkmanager

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_NetworkManager_ConnectAttachment)(nil)
	_ cfz.Resource                   = (*AWS_NetworkManager_ConnectAttachment)(nil)
)

const (
	// AWS_NetworkManager_ConnectAttachment__Type is the CloudFormation type for AWS::NetworkManager::ConnectAttachment.
	AWS_NetworkManager_ConnectAttachment__Type = "AWS::NetworkManager::ConnectAttachment"
)

var (
	// AWS_NetworkManager_ConnectAttachment__AttributesMap reports all the CloudFormation attributes for AWS::NetworkManager::ConnectAttachment.
	AWS_NetworkManager_ConnectAttachment__AttributesMap = struct {
		AttachmentId               string
		AttachmentPolicyRuleNumber string
		AttachmentType             string
		CoreNetworkArn             string
		CreatedAt                  string
		OwnerAccountId             string
		ResourceArn                string
		SegmentName                string
		State                      string
		UpdatedAt                  string
	}{
		AttachmentId:               "AttachmentId",
		AttachmentPolicyRuleNumber: "AttachmentPolicyRuleNumber",
		AttachmentType:             "AttachmentType",
		CoreNetworkArn:             "CoreNetworkArn",
		CreatedAt:                  "CreatedAt",
		OwnerAccountId:             "OwnerAccountId",
		ResourceArn:                "ResourceArn",
		SegmentName:                "SegmentName",
		State:                      "State",
		UpdatedAt:                  "UpdatedAt",
	}

	// AWS_NetworkManager_ConnectAttachment__AttributesSlice reports all the CloudFormation attributes for AWS::NetworkManager::ConnectAttachment.
	AWS_NetworkManager_ConnectAttachment__AttributesSlice = []string{
		AWS_NetworkManager_ConnectAttachment__AttributesMap.AttachmentId,
		AWS_NetworkManager_ConnectAttachment__AttributesMap.AttachmentPolicyRuleNumber,
		AWS_NetworkManager_ConnectAttachment__AttributesMap.AttachmentType,
		AWS_NetworkManager_ConnectAttachment__AttributesMap.CoreNetworkArn,
		AWS_NetworkManager_ConnectAttachment__AttributesMap.CreatedAt,
		AWS_NetworkManager_ConnectAttachment__AttributesMap.OwnerAccountId,
		AWS_NetworkManager_ConnectAttachment__AttributesMap.ResourceArn,
		AWS_NetworkManager_ConnectAttachment__AttributesMap.SegmentName,
		AWS_NetworkManager_ConnectAttachment__AttributesMap.State,
		AWS_NetworkManager_ConnectAttachment__AttributesMap.UpdatedAt,
	}
)

var (
	// AWS_NetworkManager_ConnectAttachment__PropertiesMap reports all the CloudFormation properties for AWS::NetworkManager::ConnectAttachment.
	AWS_NetworkManager_ConnectAttachment__PropertiesMap = struct {
		CoreNetworkId                      string
		EdgeLocation                       string
		NetworkFunctionGroupName           string
		Options                            string
		ProposedNetworkFunctionGroupChange string
		ProposedSegmentChange              string
		Tags                               string
		TransportAttachmentId              string
	}{
		CoreNetworkId:                      "CoreNetworkId",
		EdgeLocation:                       "EdgeLocation",
		NetworkFunctionGroupName:           "NetworkFunctionGroupName",
		Options:                            "Options",
		ProposedNetworkFunctionGroupChange: "ProposedNetworkFunctionGroupChange",
		ProposedSegmentChange:              "ProposedSegmentChange",
		Tags:                               "Tags",
		TransportAttachmentId:              "TransportAttachmentId",
	}

	// AWS_NetworkManager_ConnectAttachment__PropertiesSlice reports all the CloudFormation properties for AWS::NetworkManager::ConnectAttachment.
	AWS_NetworkManager_ConnectAttachment__PropertiesSlice = []string{
		AWS_NetworkManager_ConnectAttachment__PropertiesMap.CoreNetworkId,
		AWS_NetworkManager_ConnectAttachment__PropertiesMap.EdgeLocation,
		AWS_NetworkManager_ConnectAttachment__PropertiesMap.NetworkFunctionGroupName,
		AWS_NetworkManager_ConnectAttachment__PropertiesMap.Options,
		AWS_NetworkManager_ConnectAttachment__PropertiesMap.ProposedNetworkFunctionGroupChange,
		AWS_NetworkManager_ConnectAttachment__PropertiesMap.ProposedSegmentChange,
		AWS_NetworkManager_ConnectAttachment__PropertiesMap.Tags,
		AWS_NetworkManager_ConnectAttachment__PropertiesMap.TransportAttachmentId,
	}
)

// AWS_NetworkManager_ConnectAttachment is a binding for AWS::NetworkManager::ConnectAttachment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html
type AWS_NetworkManager_ConnectAttachment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CoreNetworkId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-corenetworkid
	CoreNetworkId cfz.Expression[string] `json:"CoreNetworkId,omitempty"`

	// EdgeLocation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-edgelocation
	EdgeLocation cfz.Expression[string] `json:"EdgeLocation,omitempty"`

	// NetworkFunctionGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-networkfunctiongroupname
	NetworkFunctionGroupName cfz.Expression[string] `json:"NetworkFunctionGroupName,omitempty"`

	// Options is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-options
	Options cfz.Expression[AWS_NetworkManager_ConnectAttachment_ConnectAttachmentOptions] `json:"Options,omitempty"`

	// ProposedNetworkFunctionGroupChange is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-proposednetworkfunctiongroupchange
	ProposedNetworkFunctionGroupChange cfz.Expression[AWS_NetworkManager_ConnectAttachment_ProposedNetworkFunctionGroupChange] `json:"ProposedNetworkFunctionGroupChange,omitempty"`

	// ProposedSegmentChange is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-proposedsegmentchange
	ProposedSegmentChange cfz.Expression[AWS_NetworkManager_ConnectAttachment_ProposedSegmentChange] `json:"ProposedSegmentChange,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TransportAttachmentId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-connectattachment.html#cfn-networkmanager-connectattachment-transportattachmentid
	TransportAttachmentId cfz.Expression[string] `json:"TransportAttachmentId,omitempty"`
}

// New__AWS_NetworkManager_ConnectAttachment initializes a new *AWS_NetworkManager_ConnectAttachment.
func New__AWS_NetworkManager_ConnectAttachment(logicalName string) *AWS_NetworkManager_ConnectAttachment {
	return &AWS_NetworkManager_ConnectAttachment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_NetworkManager_ConnectAttachment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_NetworkManager_ConnectAttachment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_NetworkManager_ConnectAttachment) GetType() string {
	return AWS_NetworkManager_ConnectAttachment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_NetworkManager_ConnectAttachment) Set__LogicalName(v string) *AWS_NetworkManager_ConnectAttachment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_NetworkManager_ConnectAttachment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_NetworkManager_ConnectAttachment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_NetworkManager_ConnectAttachment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_NetworkManager_ConnectAttachment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_NetworkManager_ConnectAttachment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_NetworkManager_ConnectAttachment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_NetworkManager_ConnectAttachment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_NetworkManager_ConnectAttachment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_NetworkManager_ConnectAttachment) Set__RequestedOutputs(v []cfz.Output) *AWS_NetworkManager_ConnectAttachment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_NetworkManager_ConnectAttachment) Add__RequestedOutputs(v ...cfz.Output) *AWS_NetworkManager_ConnectAttachment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CoreNetworkId updates property "CoreNetworkId".
func (t *AWS_NetworkManager_ConnectAttachment) Set__CoreNetworkId(v cfz.Expression[string]) *AWS_NetworkManager_ConnectAttachment {
	t.CoreNetworkId = v
	return t
}

// SetV__CoreNetworkId updates property "CoreNetworkId".
func (t *AWS_NetworkManager_ConnectAttachment) SetV__CoreNetworkId(v string) *AWS_NetworkManager_ConnectAttachment {
	t.CoreNetworkId = cfz.V(v)
	return t
}

// Set__EdgeLocation updates property "EdgeLocation".
func (t *AWS_NetworkManager_ConnectAttachment) Set__EdgeLocation(v cfz.Expression[string]) *AWS_NetworkManager_ConnectAttachment {
	t.EdgeLocation = v
	return t
}

// SetV__EdgeLocation updates property "EdgeLocation".
func (t *AWS_NetworkManager_ConnectAttachment) SetV__EdgeLocation(v string) *AWS_NetworkManager_ConnectAttachment {
	t.EdgeLocation = cfz.V(v)
	return t
}

// Set__NetworkFunctionGroupName updates property "NetworkFunctionGroupName".
func (t *AWS_NetworkManager_ConnectAttachment) Set__NetworkFunctionGroupName(v cfz.Expression[string]) *AWS_NetworkManager_ConnectAttachment {
	t.NetworkFunctionGroupName = v
	return t
}

// SetV__NetworkFunctionGroupName updates property "NetworkFunctionGroupName".
func (t *AWS_NetworkManager_ConnectAttachment) SetV__NetworkFunctionGroupName(v string) *AWS_NetworkManager_ConnectAttachment {
	t.NetworkFunctionGroupName = cfz.V(v)
	return t
}

// Set__Options updates property "Options".
func (t *AWS_NetworkManager_ConnectAttachment) Set__Options(v cfz.Expression[AWS_NetworkManager_ConnectAttachment_ConnectAttachmentOptions]) *AWS_NetworkManager_ConnectAttachment {
	t.Options = v
	return t
}

// SetV__Options updates property "Options".
func (t *AWS_NetworkManager_ConnectAttachment) SetV__Options(v AWS_NetworkManager_ConnectAttachment_ConnectAttachmentOptions) *AWS_NetworkManager_ConnectAttachment {
	t.Options = cfz.V(v)
	return t
}

// Set__ProposedNetworkFunctionGroupChange updates property "ProposedNetworkFunctionGroupChange".
func (t *AWS_NetworkManager_ConnectAttachment) Set__ProposedNetworkFunctionGroupChange(v cfz.Expression[AWS_NetworkManager_ConnectAttachment_ProposedNetworkFunctionGroupChange]) *AWS_NetworkManager_ConnectAttachment {
	t.ProposedNetworkFunctionGroupChange = v
	return t
}

// SetV__ProposedNetworkFunctionGroupChange updates property "ProposedNetworkFunctionGroupChange".
func (t *AWS_NetworkManager_ConnectAttachment) SetV__ProposedNetworkFunctionGroupChange(v AWS_NetworkManager_ConnectAttachment_ProposedNetworkFunctionGroupChange) *AWS_NetworkManager_ConnectAttachment {
	t.ProposedNetworkFunctionGroupChange = cfz.V(v)
	return t
}

// Set__ProposedSegmentChange updates property "ProposedSegmentChange".
func (t *AWS_NetworkManager_ConnectAttachment) Set__ProposedSegmentChange(v cfz.Expression[AWS_NetworkManager_ConnectAttachment_ProposedSegmentChange]) *AWS_NetworkManager_ConnectAttachment {
	t.ProposedSegmentChange = v
	return t
}

// SetV__ProposedSegmentChange updates property "ProposedSegmentChange".
func (t *AWS_NetworkManager_ConnectAttachment) SetV__ProposedSegmentChange(v AWS_NetworkManager_ConnectAttachment_ProposedSegmentChange) *AWS_NetworkManager_ConnectAttachment {
	t.ProposedSegmentChange = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_NetworkManager_ConnectAttachment) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_NetworkManager_ConnectAttachment {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_NetworkManager_ConnectAttachment) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_NetworkManager_ConnectAttachment {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_NetworkManager_ConnectAttachment) SetSV__Tags(v ...cfz.Tag) *AWS_NetworkManager_ConnectAttachment {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TransportAttachmentId updates property "TransportAttachmentId".
func (t *AWS_NetworkManager_ConnectAttachment) Set__TransportAttachmentId(v cfz.Expression[string]) *AWS_NetworkManager_ConnectAttachment {
	t.TransportAttachmentId = v
	return t
}

// SetV__TransportAttachmentId updates property "TransportAttachmentId".
func (t *AWS_NetworkManager_ConnectAttachment) SetV__TransportAttachmentId(v string) *AWS_NetworkManager_ConnectAttachment {
	t.TransportAttachmentId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_NetworkManager_ConnectAttachment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AttachmentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AttachmentId
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__AttachmentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.AttachmentId))
}

// GetAtt__AttachmentPolicyRuleNumber returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AttachmentPolicyRuleNumber
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__AttachmentPolicyRuleNumber() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.AttachmentPolicyRuleNumber))
}

// GetAtt__AttachmentType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AttachmentType
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__AttachmentType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.AttachmentType))
}

// GetAtt__CoreNetworkArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CoreNetworkArn
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__CoreNetworkArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.CoreNetworkArn))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.CreatedAt))
}

// GetAtt__OwnerAccountId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OwnerAccountId
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__OwnerAccountId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.OwnerAccountId))
}

// GetAtt__ResourceArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceArn
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__ResourceArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.ResourceArn))
}

// GetAtt__SegmentName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SegmentName
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__SegmentName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.SegmentName))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.State))
}

// GetAtt__UpdatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdatedAt
func (t *AWS_NetworkManager_ConnectAttachment) GetAtt__UpdatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_ConnectAttachment__AttributesMap.UpdatedAt))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AttachmentId returns a conventionally configured output for an attribute of this resource.
// Attribute: AttachmentId
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__AttachmentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAttachmentId", t.GetAtt__AttachmentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AttachmentPolicyRuleNumber returns a conventionally configured output for an attribute of this resource.
// Attribute: AttachmentPolicyRuleNumber
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__AttachmentPolicyRuleNumber(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAttachmentPolicyRuleNumber", t.GetAtt__AttachmentPolicyRuleNumber())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AttachmentType returns a conventionally configured output for an attribute of this resource.
// Attribute: AttachmentType
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__AttachmentType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAttachmentType", t.GetAtt__AttachmentType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CoreNetworkArn returns a conventionally configured output for an attribute of this resource.
// Attribute: CoreNetworkArn
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__CoreNetworkArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCoreNetworkArn", t.GetAtt__CoreNetworkArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OwnerAccountId returns a conventionally configured output for an attribute of this resource.
// Attribute: OwnerAccountId
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__OwnerAccountId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOwnerAccountId", t.GetAtt__OwnerAccountId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceArn
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__ResourceArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceArn", t.GetAtt__ResourceArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SegmentName returns a conventionally configured output for an attribute of this resource.
// Attribute: SegmentName
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__SegmentName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSegmentName", t.GetAtt__SegmentName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdatedAt
func (t *AWS_NetworkManager_ConnectAttachment) GetConventionalOutputAtt__UpdatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdatedAt", t.GetAtt__UpdatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_NetworkManager_ConnectAttachment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_NetworkManager_ConnectAttachment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_NetworkManager_ConnectAttachment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
