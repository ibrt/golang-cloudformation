// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_networkmanager

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_NetworkManager_TransitGatewayPeering)(nil)
	_ cfz.Resource                   = (*AWS_NetworkManager_TransitGatewayPeering)(nil)
)

const (
	// AWS_NetworkManager_TransitGatewayPeering__Type is the CloudFormation type for AWS::NetworkManager::TransitGatewayPeering.
	AWS_NetworkManager_TransitGatewayPeering__Type = "AWS::NetworkManager::TransitGatewayPeering"
)

var (
	// AWS_NetworkManager_TransitGatewayPeering__AttributesMap reports all the CloudFormation attributes for AWS::NetworkManager::TransitGatewayPeering.
	AWS_NetworkManager_TransitGatewayPeering__AttributesMap = struct {
		CoreNetworkArn                    string
		CreatedAt                         string
		EdgeLocation                      string
		OwnerAccountId                    string
		PeeringId                         string
		PeeringType                       string
		ResourceArn                       string
		State                             string
		TransitGatewayPeeringAttachmentId string
	}{
		CoreNetworkArn:                    "CoreNetworkArn",
		CreatedAt:                         "CreatedAt",
		EdgeLocation:                      "EdgeLocation",
		OwnerAccountId:                    "OwnerAccountId",
		PeeringId:                         "PeeringId",
		PeeringType:                       "PeeringType",
		ResourceArn:                       "ResourceArn",
		State:                             "State",
		TransitGatewayPeeringAttachmentId: "TransitGatewayPeeringAttachmentId",
	}

	// AWS_NetworkManager_TransitGatewayPeering__AttributesSlice reports all the CloudFormation attributes for AWS::NetworkManager::TransitGatewayPeering.
	AWS_NetworkManager_TransitGatewayPeering__AttributesSlice = []string{
		AWS_NetworkManager_TransitGatewayPeering__AttributesMap.CoreNetworkArn,
		AWS_NetworkManager_TransitGatewayPeering__AttributesMap.CreatedAt,
		AWS_NetworkManager_TransitGatewayPeering__AttributesMap.EdgeLocation,
		AWS_NetworkManager_TransitGatewayPeering__AttributesMap.OwnerAccountId,
		AWS_NetworkManager_TransitGatewayPeering__AttributesMap.PeeringId,
		AWS_NetworkManager_TransitGatewayPeering__AttributesMap.PeeringType,
		AWS_NetworkManager_TransitGatewayPeering__AttributesMap.ResourceArn,
		AWS_NetworkManager_TransitGatewayPeering__AttributesMap.State,
		AWS_NetworkManager_TransitGatewayPeering__AttributesMap.TransitGatewayPeeringAttachmentId,
	}
)

var (
	// AWS_NetworkManager_TransitGatewayPeering__PropertiesMap reports all the CloudFormation properties for AWS::NetworkManager::TransitGatewayPeering.
	AWS_NetworkManager_TransitGatewayPeering__PropertiesMap = struct {
		CoreNetworkId     string
		Tags              string
		TransitGatewayArn string
	}{
		CoreNetworkId:     "CoreNetworkId",
		Tags:              "Tags",
		TransitGatewayArn: "TransitGatewayArn",
	}

	// AWS_NetworkManager_TransitGatewayPeering__PropertiesSlice reports all the CloudFormation properties for AWS::NetworkManager::TransitGatewayPeering.
	AWS_NetworkManager_TransitGatewayPeering__PropertiesSlice = []string{
		AWS_NetworkManager_TransitGatewayPeering__PropertiesMap.CoreNetworkId,
		AWS_NetworkManager_TransitGatewayPeering__PropertiesMap.Tags,
		AWS_NetworkManager_TransitGatewayPeering__PropertiesMap.TransitGatewayArn,
	}
)

// AWS_NetworkManager_TransitGatewayPeering is a binding for AWS::NetworkManager::TransitGatewayPeering.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewaypeering.html
type AWS_NetworkManager_TransitGatewayPeering struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CoreNetworkId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewaypeering.html#cfn-networkmanager-transitgatewaypeering-corenetworkid
	CoreNetworkId cfz.Expression[string] `json:"CoreNetworkId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewaypeering.html#cfn-networkmanager-transitgatewaypeering-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TransitGatewayArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-networkmanager-transitgatewaypeering.html#cfn-networkmanager-transitgatewaypeering-transitgatewayarn
	TransitGatewayArn cfz.Expression[string] `json:"TransitGatewayArn,omitempty"`
}

// New__AWS_NetworkManager_TransitGatewayPeering initializes a new *AWS_NetworkManager_TransitGatewayPeering.
func New__AWS_NetworkManager_TransitGatewayPeering(logicalName string) *AWS_NetworkManager_TransitGatewayPeering {
	return &AWS_NetworkManager_TransitGatewayPeering{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_NetworkManager_TransitGatewayPeering) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_NetworkManager_TransitGatewayPeering) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_NetworkManager_TransitGatewayPeering) GetType() string {
	return AWS_NetworkManager_TransitGatewayPeering__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_NetworkManager_TransitGatewayPeering) Set__LogicalName(v string) *AWS_NetworkManager_TransitGatewayPeering {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_NetworkManager_TransitGatewayPeering) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_NetworkManager_TransitGatewayPeering {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_NetworkManager_TransitGatewayPeering) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_NetworkManager_TransitGatewayPeering {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_NetworkManager_TransitGatewayPeering) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_NetworkManager_TransitGatewayPeering {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_NetworkManager_TransitGatewayPeering) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_NetworkManager_TransitGatewayPeering {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_NetworkManager_TransitGatewayPeering) Set__RequestedOutputs(v []cfz.Output) *AWS_NetworkManager_TransitGatewayPeering {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_NetworkManager_TransitGatewayPeering) Add__RequestedOutputs(v ...cfz.Output) *AWS_NetworkManager_TransitGatewayPeering {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CoreNetworkId updates property "CoreNetworkId".
func (t *AWS_NetworkManager_TransitGatewayPeering) Set__CoreNetworkId(v cfz.Expression[string]) *AWS_NetworkManager_TransitGatewayPeering {
	t.CoreNetworkId = v
	return t
}

// SetV__CoreNetworkId updates property "CoreNetworkId".
func (t *AWS_NetworkManager_TransitGatewayPeering) SetV__CoreNetworkId(v string) *AWS_NetworkManager_TransitGatewayPeering {
	t.CoreNetworkId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_NetworkManager_TransitGatewayPeering) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_NetworkManager_TransitGatewayPeering {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_NetworkManager_TransitGatewayPeering) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_NetworkManager_TransitGatewayPeering {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_NetworkManager_TransitGatewayPeering) SetSV__Tags(v ...cfz.Tag) *AWS_NetworkManager_TransitGatewayPeering {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TransitGatewayArn updates property "TransitGatewayArn".
func (t *AWS_NetworkManager_TransitGatewayPeering) Set__TransitGatewayArn(v cfz.Expression[string]) *AWS_NetworkManager_TransitGatewayPeering {
	t.TransitGatewayArn = v
	return t
}

// SetV__TransitGatewayArn updates property "TransitGatewayArn".
func (t *AWS_NetworkManager_TransitGatewayPeering) SetV__TransitGatewayArn(v string) *AWS_NetworkManager_TransitGatewayPeering {
	t.TransitGatewayArn = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_NetworkManager_TransitGatewayPeering) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CoreNetworkArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CoreNetworkArn
func (t *AWS_NetworkManager_TransitGatewayPeering) GetAtt__CoreNetworkArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_TransitGatewayPeering__AttributesMap.CoreNetworkArn))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_NetworkManager_TransitGatewayPeering) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_TransitGatewayPeering__AttributesMap.CreatedAt))
}

// GetAtt__EdgeLocation returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EdgeLocation
func (t *AWS_NetworkManager_TransitGatewayPeering) GetAtt__EdgeLocation() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_TransitGatewayPeering__AttributesMap.EdgeLocation))
}

// GetAtt__OwnerAccountId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OwnerAccountId
func (t *AWS_NetworkManager_TransitGatewayPeering) GetAtt__OwnerAccountId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_TransitGatewayPeering__AttributesMap.OwnerAccountId))
}

// GetAtt__PeeringId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PeeringId
func (t *AWS_NetworkManager_TransitGatewayPeering) GetAtt__PeeringId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_TransitGatewayPeering__AttributesMap.PeeringId))
}

// GetAtt__PeeringType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PeeringType
func (t *AWS_NetworkManager_TransitGatewayPeering) GetAtt__PeeringType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_TransitGatewayPeering__AttributesMap.PeeringType))
}

// GetAtt__ResourceArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceArn
func (t *AWS_NetworkManager_TransitGatewayPeering) GetAtt__ResourceArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_TransitGatewayPeering__AttributesMap.ResourceArn))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_NetworkManager_TransitGatewayPeering) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_TransitGatewayPeering__AttributesMap.State))
}

// GetAtt__TransitGatewayPeeringAttachmentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: TransitGatewayPeeringAttachmentId
func (t *AWS_NetworkManager_TransitGatewayPeering) GetAtt__TransitGatewayPeeringAttachmentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_NetworkManager_TransitGatewayPeering__AttributesMap.TransitGatewayPeeringAttachmentId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CoreNetworkArn returns a conventionally configured output for an attribute of this resource.
// Attribute: CoreNetworkArn
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputAtt__CoreNetworkArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCoreNetworkArn", t.GetAtt__CoreNetworkArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EdgeLocation returns a conventionally configured output for an attribute of this resource.
// Attribute: EdgeLocation
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputAtt__EdgeLocation(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEdgeLocation", t.GetAtt__EdgeLocation())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OwnerAccountId returns a conventionally configured output for an attribute of this resource.
// Attribute: OwnerAccountId
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputAtt__OwnerAccountId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOwnerAccountId", t.GetAtt__OwnerAccountId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PeeringId returns a conventionally configured output for an attribute of this resource.
// Attribute: PeeringId
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputAtt__PeeringId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPeeringId", t.GetAtt__PeeringId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PeeringType returns a conventionally configured output for an attribute of this resource.
// Attribute: PeeringType
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputAtt__PeeringType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPeeringType", t.GetAtt__PeeringType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceArn
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputAtt__ResourceArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceArn", t.GetAtt__ResourceArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__TransitGatewayPeeringAttachmentId returns a conventionally configured output for an attribute of this resource.
// Attribute: TransitGatewayPeeringAttachmentId
func (t *AWS_NetworkManager_TransitGatewayPeering) GetConventionalOutputAtt__TransitGatewayPeeringAttachmentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTransitGatewayPeeringAttachmentId", t.GetAtt__TransitGatewayPeeringAttachmentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_NetworkManager_TransitGatewayPeering) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_NetworkManager_TransitGatewayPeering

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_NetworkManager_TransitGatewayPeering) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
