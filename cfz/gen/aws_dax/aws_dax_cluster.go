// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_dax

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DAX_Cluster)(nil)
	_ cfz.Resource                   = (*AWS_DAX_Cluster)(nil)
)

const (
	// AWS_DAX_Cluster__Type is the CloudFormation type for AWS::DAX::Cluster.
	AWS_DAX_Cluster__Type = "AWS::DAX::Cluster"
)

var (
	// AWS_DAX_Cluster__AttributesMap reports all the CloudFormation attributes for AWS::DAX::Cluster.
	AWS_DAX_Cluster__AttributesMap = struct {
		Arn                         string
		ClusterDiscoveryEndpoint    string
		ClusterDiscoveryEndpointURL string
	}{
		Arn:                         "Arn",
		ClusterDiscoveryEndpoint:    "ClusterDiscoveryEndpoint",
		ClusterDiscoveryEndpointURL: "ClusterDiscoveryEndpointURL",
	}

	// AWS_DAX_Cluster__AttributesSlice reports all the CloudFormation attributes for AWS::DAX::Cluster.
	AWS_DAX_Cluster__AttributesSlice = []string{
		AWS_DAX_Cluster__AttributesMap.Arn,
		AWS_DAX_Cluster__AttributesMap.ClusterDiscoveryEndpoint,
		AWS_DAX_Cluster__AttributesMap.ClusterDiscoveryEndpointURL,
	}
)

var (
	// AWS_DAX_Cluster__PropertiesMap reports all the CloudFormation properties for AWS::DAX::Cluster.
	AWS_DAX_Cluster__PropertiesMap = struct {
		AvailabilityZones             string
		ClusterEndpointEncryptionType string
		ClusterName                   string
		Description                   string
		IAMRoleARN                    string
		NodeType                      string
		NotificationTopicARN          string
		ParameterGroupName            string
		PreferredMaintenanceWindow    string
		ReplicationFactor             string
		SSESpecification              string
		SecurityGroupIds              string
		SubnetGroupName               string
		Tags                          string
	}{
		AvailabilityZones:             "AvailabilityZones",
		ClusterEndpointEncryptionType: "ClusterEndpointEncryptionType",
		ClusterName:                   "ClusterName",
		Description:                   "Description",
		IAMRoleARN:                    "IAMRoleARN",
		NodeType:                      "NodeType",
		NotificationTopicARN:          "NotificationTopicARN",
		ParameterGroupName:            "ParameterGroupName",
		PreferredMaintenanceWindow:    "PreferredMaintenanceWindow",
		ReplicationFactor:             "ReplicationFactor",
		SSESpecification:              "SSESpecification",
		SecurityGroupIds:              "SecurityGroupIds",
		SubnetGroupName:               "SubnetGroupName",
		Tags:                          "Tags",
	}

	// AWS_DAX_Cluster__PropertiesSlice reports all the CloudFormation properties for AWS::DAX::Cluster.
	AWS_DAX_Cluster__PropertiesSlice = []string{
		AWS_DAX_Cluster__PropertiesMap.AvailabilityZones,
		AWS_DAX_Cluster__PropertiesMap.ClusterEndpointEncryptionType,
		AWS_DAX_Cluster__PropertiesMap.ClusterName,
		AWS_DAX_Cluster__PropertiesMap.Description,
		AWS_DAX_Cluster__PropertiesMap.IAMRoleARN,
		AWS_DAX_Cluster__PropertiesMap.NodeType,
		AWS_DAX_Cluster__PropertiesMap.NotificationTopicARN,
		AWS_DAX_Cluster__PropertiesMap.ParameterGroupName,
		AWS_DAX_Cluster__PropertiesMap.PreferredMaintenanceWindow,
		AWS_DAX_Cluster__PropertiesMap.ReplicationFactor,
		AWS_DAX_Cluster__PropertiesMap.SSESpecification,
		AWS_DAX_Cluster__PropertiesMap.SecurityGroupIds,
		AWS_DAX_Cluster__PropertiesMap.SubnetGroupName,
		AWS_DAX_Cluster__PropertiesMap.Tags,
	}
)

// AWS_DAX_Cluster is a binding for AWS::DAX::Cluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html
type AWS_DAX_Cluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AvailabilityZones is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-availabilityzones
	AvailabilityZones cfz.ExpressionSlice[string] `json:"AvailabilityZones,omitempty"`

	// ClusterEndpointEncryptionType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clusterendpointencryptiontype
	ClusterEndpointEncryptionType cfz.Expression[string] `json:"ClusterEndpointEncryptionType,omitempty"`

	// ClusterName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-clustername
	ClusterName cfz.Expression[string] `json:"ClusterName,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// IAMRoleARN is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-iamrolearn
	IAMRoleARN cfz.Expression[string] `json:"IAMRoleARN,omitempty"`

	// NodeType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-nodetype
	NodeType cfz.Expression[string] `json:"NodeType,omitempty"`

	// NotificationTopicARN is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-notificationtopicarn
	NotificationTopicARN cfz.Expression[string] `json:"NotificationTopicARN,omitempty"`

	// ParameterGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-parametergroupname
	ParameterGroupName cfz.Expression[string] `json:"ParameterGroupName,omitempty"`

	// PreferredMaintenanceWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-preferredmaintenancewindow
	PreferredMaintenanceWindow cfz.Expression[string] `json:"PreferredMaintenanceWindow,omitempty"`

	// ReplicationFactor is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-replicationfactor
	ReplicationFactor cfz.Expression[int32] `json:"ReplicationFactor,omitempty"`

	// SSESpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-ssespecification
	SSESpecification cfz.Expression[AWS_DAX_Cluster_SSESpecification] `json:"SSESpecification,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// SubnetGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-subnetgroupname
	SubnetGroupName cfz.Expression[string] `json:"SubnetGroupName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html#cfn-dax-cluster-tags
	Tags cfz.Expression[json.RawMessage] `json:"Tags,omitempty"`
}

// New__AWS_DAX_Cluster initializes a new *AWS_DAX_Cluster.
func New__AWS_DAX_Cluster(logicalName string) *AWS_DAX_Cluster {
	return &AWS_DAX_Cluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DAX_Cluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DAX_Cluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DAX_Cluster) GetType() string {
	return AWS_DAX_Cluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DAX_Cluster) Set__LogicalName(v string) *AWS_DAX_Cluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DAX_Cluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DAX_Cluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DAX_Cluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DAX_Cluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DAX_Cluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DAX_Cluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DAX_Cluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DAX_Cluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DAX_Cluster) Set__RequestedOutputs(v []cfz.Output) *AWS_DAX_Cluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DAX_Cluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_DAX_Cluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_DAX_Cluster) Set__AvailabilityZones(v cfz.ExpressionSlice[string]) *AWS_DAX_Cluster {
	t.AvailabilityZones = v
	return t
}

// SetS__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_DAX_Cluster) SetS__AvailabilityZones(v ...cfz.Expression[string]) *AWS_DAX_Cluster {
	t.AvailabilityZones = cfz.S(v...)
	return t
}

// SetSV__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_DAX_Cluster) SetSV__AvailabilityZones(v ...string) *AWS_DAX_Cluster {
	t.AvailabilityZones = cfz.SV(v...)
	return t
}

// Set__ClusterEndpointEncryptionType updates property "ClusterEndpointEncryptionType".
func (t *AWS_DAX_Cluster) Set__ClusterEndpointEncryptionType(v cfz.Expression[string]) *AWS_DAX_Cluster {
	t.ClusterEndpointEncryptionType = v
	return t
}

// SetV__ClusterEndpointEncryptionType updates property "ClusterEndpointEncryptionType".
func (t *AWS_DAX_Cluster) SetV__ClusterEndpointEncryptionType(v string) *AWS_DAX_Cluster {
	t.ClusterEndpointEncryptionType = cfz.V(v)
	return t
}

// Set__ClusterName updates property "ClusterName".
func (t *AWS_DAX_Cluster) Set__ClusterName(v cfz.Expression[string]) *AWS_DAX_Cluster {
	t.ClusterName = v
	return t
}

// SetV__ClusterName updates property "ClusterName".
func (t *AWS_DAX_Cluster) SetV__ClusterName(v string) *AWS_DAX_Cluster {
	t.ClusterName = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_DAX_Cluster) Set__Description(v cfz.Expression[string]) *AWS_DAX_Cluster {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_DAX_Cluster) SetV__Description(v string) *AWS_DAX_Cluster {
	t.Description = cfz.V(v)
	return t
}

// Set__IAMRoleARN updates property "IAMRoleARN".
func (t *AWS_DAX_Cluster) Set__IAMRoleARN(v cfz.Expression[string]) *AWS_DAX_Cluster {
	t.IAMRoleARN = v
	return t
}

// SetV__IAMRoleARN updates property "IAMRoleARN".
func (t *AWS_DAX_Cluster) SetV__IAMRoleARN(v string) *AWS_DAX_Cluster {
	t.IAMRoleARN = cfz.V(v)
	return t
}

// Set__NodeType updates property "NodeType".
func (t *AWS_DAX_Cluster) Set__NodeType(v cfz.Expression[string]) *AWS_DAX_Cluster {
	t.NodeType = v
	return t
}

// SetV__NodeType updates property "NodeType".
func (t *AWS_DAX_Cluster) SetV__NodeType(v string) *AWS_DAX_Cluster {
	t.NodeType = cfz.V(v)
	return t
}

// Set__NotificationTopicARN updates property "NotificationTopicARN".
func (t *AWS_DAX_Cluster) Set__NotificationTopicARN(v cfz.Expression[string]) *AWS_DAX_Cluster {
	t.NotificationTopicARN = v
	return t
}

// SetV__NotificationTopicARN updates property "NotificationTopicARN".
func (t *AWS_DAX_Cluster) SetV__NotificationTopicARN(v string) *AWS_DAX_Cluster {
	t.NotificationTopicARN = cfz.V(v)
	return t
}

// Set__ParameterGroupName updates property "ParameterGroupName".
func (t *AWS_DAX_Cluster) Set__ParameterGroupName(v cfz.Expression[string]) *AWS_DAX_Cluster {
	t.ParameterGroupName = v
	return t
}

// SetV__ParameterGroupName updates property "ParameterGroupName".
func (t *AWS_DAX_Cluster) SetV__ParameterGroupName(v string) *AWS_DAX_Cluster {
	t.ParameterGroupName = cfz.V(v)
	return t
}

// Set__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_DAX_Cluster) Set__PreferredMaintenanceWindow(v cfz.Expression[string]) *AWS_DAX_Cluster {
	t.PreferredMaintenanceWindow = v
	return t
}

// SetV__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_DAX_Cluster) SetV__PreferredMaintenanceWindow(v string) *AWS_DAX_Cluster {
	t.PreferredMaintenanceWindow = cfz.V(v)
	return t
}

// Set__ReplicationFactor updates property "ReplicationFactor".
func (t *AWS_DAX_Cluster) Set__ReplicationFactor(v cfz.Expression[int32]) *AWS_DAX_Cluster {
	t.ReplicationFactor = v
	return t
}

// SetV__ReplicationFactor updates property "ReplicationFactor".
func (t *AWS_DAX_Cluster) SetV__ReplicationFactor(v int32) *AWS_DAX_Cluster {
	t.ReplicationFactor = cfz.V(v)
	return t
}

// Set__SSESpecification updates property "SSESpecification".
func (t *AWS_DAX_Cluster) Set__SSESpecification(v cfz.Expression[AWS_DAX_Cluster_SSESpecification]) *AWS_DAX_Cluster {
	t.SSESpecification = v
	return t
}

// SetV__SSESpecification updates property "SSESpecification".
func (t *AWS_DAX_Cluster) SetV__SSESpecification(v AWS_DAX_Cluster_SSESpecification) *AWS_DAX_Cluster {
	t.SSESpecification = cfz.V(v)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_DAX_Cluster) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_DAX_Cluster {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_DAX_Cluster) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_DAX_Cluster {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_DAX_Cluster) SetSV__SecurityGroupIds(v ...string) *AWS_DAX_Cluster {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__SubnetGroupName updates property "SubnetGroupName".
func (t *AWS_DAX_Cluster) Set__SubnetGroupName(v cfz.Expression[string]) *AWS_DAX_Cluster {
	t.SubnetGroupName = v
	return t
}

// SetV__SubnetGroupName updates property "SubnetGroupName".
func (t *AWS_DAX_Cluster) SetV__SubnetGroupName(v string) *AWS_DAX_Cluster {
	t.SubnetGroupName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_DAX_Cluster) Set__Tags(v cfz.Expression[json.RawMessage]) *AWS_DAX_Cluster {
	t.Tags = v
	return t
}

// SetV__Tags updates property "Tags".
func (t *AWS_DAX_Cluster) SetV__Tags(v json.RawMessage) *AWS_DAX_Cluster {
	t.Tags = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DAX_Cluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_DAX_Cluster) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DAX_Cluster__AttributesMap.Arn))
}

// GetAtt__ClusterDiscoveryEndpoint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ClusterDiscoveryEndpoint
func (t *AWS_DAX_Cluster) GetAtt__ClusterDiscoveryEndpoint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DAX_Cluster__AttributesMap.ClusterDiscoveryEndpoint))
}

// GetAtt__ClusterDiscoveryEndpointURL returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ClusterDiscoveryEndpointURL
func (t *AWS_DAX_Cluster) GetAtt__ClusterDiscoveryEndpointURL() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DAX_Cluster__AttributesMap.ClusterDiscoveryEndpointURL))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DAX_Cluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_DAX_Cluster) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ClusterDiscoveryEndpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: ClusterDiscoveryEndpoint
func (t *AWS_DAX_Cluster) GetConventionalOutputAtt__ClusterDiscoveryEndpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttClusterDiscoveryEndpoint", t.GetAtt__ClusterDiscoveryEndpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ClusterDiscoveryEndpointURL returns a conventionally configured output for an attribute of this resource.
// Attribute: ClusterDiscoveryEndpointURL
func (t *AWS_DAX_Cluster) GetConventionalOutputAtt__ClusterDiscoveryEndpointURL(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttClusterDiscoveryEndpointURL", t.GetAtt__ClusterDiscoveryEndpointURL())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DAX_Cluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DAX_Cluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DAX_Cluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
