// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_route53resolver

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Route53Resolver_FirewallRuleGroup)(nil)
	_ cfz.Resource                   = (*AWS_Route53Resolver_FirewallRuleGroup)(nil)
)

const (
	// AWS_Route53Resolver_FirewallRuleGroup__Type is the CloudFormation type for AWS::Route53Resolver::FirewallRuleGroup.
	AWS_Route53Resolver_FirewallRuleGroup__Type = "AWS::Route53Resolver::FirewallRuleGroup"
)

var (
	// AWS_Route53Resolver_FirewallRuleGroup__AttributesMap reports all the CloudFormation attributes for AWS::Route53Resolver::FirewallRuleGroup.
	AWS_Route53Resolver_FirewallRuleGroup__AttributesMap = struct {
		Arn              string
		CreationTime     string
		CreatorRequestId string
		Id               string
		ModificationTime string
		OwnerId          string
		RuleCount        string
		ShareStatus      string
		Status           string
		StatusMessage    string
	}{
		Arn:              "Arn",
		CreationTime:     "CreationTime",
		CreatorRequestId: "CreatorRequestId",
		Id:               "Id",
		ModificationTime: "ModificationTime",
		OwnerId:          "OwnerId",
		RuleCount:        "RuleCount",
		ShareStatus:      "ShareStatus",
		Status:           "Status",
		StatusMessage:    "StatusMessage",
	}

	// AWS_Route53Resolver_FirewallRuleGroup__AttributesSlice reports all the CloudFormation attributes for AWS::Route53Resolver::FirewallRuleGroup.
	AWS_Route53Resolver_FirewallRuleGroup__AttributesSlice = []string{
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.Arn,
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.CreationTime,
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.CreatorRequestId,
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.Id,
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.ModificationTime,
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.OwnerId,
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.RuleCount,
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.ShareStatus,
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.Status,
		AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.StatusMessage,
	}
)

var (
	// AWS_Route53Resolver_FirewallRuleGroup__PropertiesMap reports all the CloudFormation properties for AWS::Route53Resolver::FirewallRuleGroup.
	AWS_Route53Resolver_FirewallRuleGroup__PropertiesMap = struct {
		FirewallRules string
		Name          string
		Tags          string
	}{
		FirewallRules: "FirewallRules",
		Name:          "Name",
		Tags:          "Tags",
	}

	// AWS_Route53Resolver_FirewallRuleGroup__PropertiesSlice reports all the CloudFormation properties for AWS::Route53Resolver::FirewallRuleGroup.
	AWS_Route53Resolver_FirewallRuleGroup__PropertiesSlice = []string{
		AWS_Route53Resolver_FirewallRuleGroup__PropertiesMap.FirewallRules,
		AWS_Route53Resolver_FirewallRuleGroup__PropertiesMap.Name,
		AWS_Route53Resolver_FirewallRuleGroup__PropertiesMap.Tags,
	}
)

// AWS_Route53Resolver_FirewallRuleGroup is a binding for AWS::Route53Resolver::FirewallRuleGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html
type AWS_Route53Resolver_FirewallRuleGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// FirewallRules is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-firewallrules
	FirewallRules cfz.ExpressionSlice[AWS_Route53Resolver_FirewallRuleGroup_FirewallRule] `json:"FirewallRules,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-firewallrulegroup.html#cfn-route53resolver-firewallrulegroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Route53Resolver_FirewallRuleGroup initializes a new *AWS_Route53Resolver_FirewallRuleGroup.
func New__AWS_Route53Resolver_FirewallRuleGroup(logicalName string) *AWS_Route53Resolver_FirewallRuleGroup {
	return &AWS_Route53Resolver_FirewallRuleGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Route53Resolver_FirewallRuleGroup) GetType() string {
	return AWS_Route53Resolver_FirewallRuleGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Set__LogicalName(v string) *AWS_Route53Resolver_FirewallRuleGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Route53Resolver_FirewallRuleGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Route53Resolver_FirewallRuleGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Route53Resolver_FirewallRuleGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Route53Resolver_FirewallRuleGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_Route53Resolver_FirewallRuleGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_Route53Resolver_FirewallRuleGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__FirewallRules updates property "FirewallRules".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Set__FirewallRules(v cfz.ExpressionSlice[AWS_Route53Resolver_FirewallRuleGroup_FirewallRule]) *AWS_Route53Resolver_FirewallRuleGroup {
	t.FirewallRules = v
	return t
}

// SetS__FirewallRules updates property "FirewallRules".
func (t *AWS_Route53Resolver_FirewallRuleGroup) SetS__FirewallRules(v ...cfz.Expression[AWS_Route53Resolver_FirewallRuleGroup_FirewallRule]) *AWS_Route53Resolver_FirewallRuleGroup {
	t.FirewallRules = cfz.S(v...)
	return t
}

// SetSV__FirewallRules updates property "FirewallRules".
func (t *AWS_Route53Resolver_FirewallRuleGroup) SetSV__FirewallRules(v ...AWS_Route53Resolver_FirewallRuleGroup_FirewallRule) *AWS_Route53Resolver_FirewallRuleGroup {
	t.FirewallRules = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Set__Name(v cfz.Expression[string]) *AWS_Route53Resolver_FirewallRuleGroup {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Route53Resolver_FirewallRuleGroup) SetV__Name(v string) *AWS_Route53Resolver_FirewallRuleGroup {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Route53Resolver_FirewallRuleGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Route53Resolver_FirewallRuleGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Route53Resolver_FirewallRuleGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Route53Resolver_FirewallRuleGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Route53Resolver_FirewallRuleGroup) SetSV__Tags(v ...cfz.Tag) *AWS_Route53Resolver_FirewallRuleGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Route53Resolver_FirewallRuleGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.Arn))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.CreationTime))
}

// GetAtt__CreatorRequestId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatorRequestId
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__CreatorRequestId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.CreatorRequestId))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.Id))
}

// GetAtt__ModificationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ModificationTime
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__ModificationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.ModificationTime))
}

// GetAtt__OwnerId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OwnerId
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__OwnerId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.OwnerId))
}

// GetAtt__RuleCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RuleCount
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__RuleCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.RuleCount))
}

// GetAtt__ShareStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ShareStatus
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__ShareStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.ShareStatus))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.Status))
}

// GetAtt__StatusMessage returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StatusMessage
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetAtt__StatusMessage() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_FirewallRuleGroup__AttributesMap.StatusMessage))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatorRequestId returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatorRequestId
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__CreatorRequestId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatorRequestId", t.GetAtt__CreatorRequestId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ModificationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: ModificationTime
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__ModificationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttModificationTime", t.GetAtt__ModificationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OwnerId returns a conventionally configured output for an attribute of this resource.
// Attribute: OwnerId
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__OwnerId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOwnerId", t.GetAtt__OwnerId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RuleCount returns a conventionally configured output for an attribute of this resource.
// Attribute: RuleCount
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__RuleCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRuleCount", t.GetAtt__RuleCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ShareStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: ShareStatus
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__ShareStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttShareStatus", t.GetAtt__ShareStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StatusMessage returns a conventionally configured output for an attribute of this resource.
// Attribute: StatusMessage
func (t *AWS_Route53Resolver_FirewallRuleGroup) GetConventionalOutputAtt__StatusMessage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatusMessage", t.GetAtt__StatusMessage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Route53Resolver_FirewallRuleGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Route53Resolver_FirewallRuleGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Route53Resolver_FirewallRuleGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
