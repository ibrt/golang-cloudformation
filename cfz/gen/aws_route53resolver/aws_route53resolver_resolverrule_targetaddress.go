// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_route53resolver

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Route53Resolver_ResolverRule_TargetAddress__Type is the CloudFormation type for AWS::Route53Resolver::ResolverRule.TargetAddress.
	AWS_Route53Resolver_ResolverRule_TargetAddress__Type = "AWS::Route53Resolver::ResolverRule.TargetAddress"
)

var (
	// AWS_Route53Resolver_ResolverRule_TargetAddress__PropertiesMap reports all the CloudFormation properties for AWS::Route53Resolver::ResolverRule.TargetAddress.
	AWS_Route53Resolver_ResolverRule_TargetAddress__PropertiesMap = struct {
		Ip                   string
		Ipv6                 string
		Port                 string
		Protocol             string
		ServerNameIndication string
	}{
		Ip:                   "Ip",
		Ipv6:                 "Ipv6",
		Port:                 "Port",
		Protocol:             "Protocol",
		ServerNameIndication: "ServerNameIndication",
	}

	// AWS_Route53Resolver_ResolverRule_TargetAddress__PropertiesSlice reports all the CloudFormation properties for AWS::Route53Resolver::ResolverRule.TargetAddress.
	AWS_Route53Resolver_ResolverRule_TargetAddress__PropertiesSlice = []string{
		AWS_Route53Resolver_ResolverRule_TargetAddress__PropertiesMap.Ip,
		AWS_Route53Resolver_ResolverRule_TargetAddress__PropertiesMap.Ipv6,
		AWS_Route53Resolver_ResolverRule_TargetAddress__PropertiesMap.Port,
		AWS_Route53Resolver_ResolverRule_TargetAddress__PropertiesMap.Protocol,
		AWS_Route53Resolver_ResolverRule_TargetAddress__PropertiesMap.ServerNameIndication,
	}
)

// AWS_Route53Resolver_ResolverRule_TargetAddress is a binding for AWS::Route53Resolver::ResolverRule.TargetAddress.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html
type AWS_Route53Resolver_ResolverRule_TargetAddress struct {
	// Ip is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-ip
	Ip cfz.Expression[string] `json:"Ip,omitempty"`

	// Ipv6 is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-ipv6
	Ipv6 cfz.Expression[string] `json:"Ipv6,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-port
	Port cfz.Expression[string] `json:"Port,omitempty"`

	// Protocol is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-protocol
	Protocol cfz.Expression[string] `json:"Protocol,omitempty"`

	// ServerNameIndication is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-servernameindication
	ServerNameIndication cfz.Expression[string] `json:"ServerNameIndication,omitempty"`
}

// New__AWS_Route53Resolver_ResolverRule_TargetAddress initializes a new AWS_Route53Resolver_ResolverRule_TargetAddress.
func New__AWS_Route53Resolver_ResolverRule_TargetAddress() AWS_Route53Resolver_ResolverRule_TargetAddress {
	return AWS_Route53Resolver_ResolverRule_TargetAddress{}
}

// GetType returns the CloudFormation type.
func (AWS_Route53Resolver_ResolverRule_TargetAddress) GetType() string {
	return AWS_Route53Resolver_ResolverRule_TargetAddress__Type
}

// Set__Ip updates property "Ip".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) Set__Ip(v cfz.Expression[string]) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.Ip = v
	return t
}

// SetV__Ip updates property "Ip".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) SetV__Ip(v string) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.Ip = cfz.V(v)
	return t
}

// Set__Ipv6 updates property "Ipv6".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) Set__Ipv6(v cfz.Expression[string]) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.Ipv6 = v
	return t
}

// SetV__Ipv6 updates property "Ipv6".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) SetV__Ipv6(v string) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.Ipv6 = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) Set__Port(v cfz.Expression[string]) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) SetV__Port(v string) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.Port = cfz.V(v)
	return t
}

// Set__Protocol updates property "Protocol".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) Set__Protocol(v cfz.Expression[string]) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.Protocol = v
	return t
}

// SetV__Protocol updates property "Protocol".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) SetV__Protocol(v string) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.Protocol = cfz.V(v)
	return t
}

// Set__ServerNameIndication updates property "ServerNameIndication".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) Set__ServerNameIndication(v cfz.Expression[string]) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.ServerNameIndication = v
	return t
}

// SetV__ServerNameIndication updates property "ServerNameIndication".
func (t AWS_Route53Resolver_ResolverRule_TargetAddress) SetV__ServerNameIndication(v string) AWS_Route53Resolver_ResolverRule_TargetAddress {
	t.ServerNameIndication = cfz.V(v)
	return t
}
