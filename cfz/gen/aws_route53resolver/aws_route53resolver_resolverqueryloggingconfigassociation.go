// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_route53resolver

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation)(nil)
	_ cfz.Resource                   = (*AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation)(nil)
)

const (
	// AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__Type is the CloudFormation type for AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.
	AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__Type = "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation"
)

var (
	// AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap reports all the CloudFormation attributes for AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.
	AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap = struct {
		CreationTime string
		Error        string
		ErrorMessage string
		Id           string
		Status       string
	}{
		CreationTime: "CreationTime",
		Error:        "Error",
		ErrorMessage: "ErrorMessage",
		Id:           "Id",
		Status:       "Status",
	}

	// AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesSlice reports all the CloudFormation attributes for AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.
	AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesSlice = []string{
		AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.CreationTime,
		AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.Error,
		AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.ErrorMessage,
		AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.Id,
		AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.Status,
	}
)

var (
	// AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__PropertiesMap reports all the CloudFormation properties for AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.
	AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__PropertiesMap = struct {
		ResolverQueryLogConfigId string
		ResourceId               string
	}{
		ResolverQueryLogConfigId: "ResolverQueryLogConfigId",
		ResourceId:               "ResourceId",
	}

	// AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__PropertiesSlice reports all the CloudFormation properties for AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.
	AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__PropertiesSlice = []string{
		AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__PropertiesMap.ResolverQueryLogConfigId,
		AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__PropertiesMap.ResourceId,
	}
)

// AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation is a binding for AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html
type AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ResolverQueryLogConfigId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid
	ResolverQueryLogConfigId cfz.Expression[string] `json:"ResolverQueryLogConfigId,omitempty"`

	// ResourceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid
	ResourceId cfz.Expression[string] `json:"ResourceId,omitempty"`
}

// New__AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation initializes a new *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation.
func New__AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation(logicalName string) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	return &AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetType() string {
	return AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Set__LogicalName(v string) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Set__RequestedOutputs(v []cfz.Output) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Add__RequestedOutputs(v ...cfz.Output) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ResolverQueryLogConfigId updates property "ResolverQueryLogConfigId".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Set__ResolverQueryLogConfigId(v cfz.Expression[string]) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.ResolverQueryLogConfigId = v
	return t
}

// SetV__ResolverQueryLogConfigId updates property "ResolverQueryLogConfigId".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) SetV__ResolverQueryLogConfigId(v string) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.ResolverQueryLogConfigId = cfz.V(v)
	return t
}

// Set__ResourceId updates property "ResourceId".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Set__ResourceId(v cfz.Expression[string]) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.ResourceId = v
	return t
}

// SetV__ResourceId updates property "ResourceId".
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) SetV__ResourceId(v string) *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation {
	t.ResourceId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.CreationTime))
}

// GetAtt__Error returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Error
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetAtt__Error() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.Error))
}

// GetAtt__ErrorMessage returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ErrorMessage
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetAtt__ErrorMessage() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.ErrorMessage))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.Id))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Error returns a conventionally configured output for an attribute of this resource.
// Attribute: Error
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetConventionalOutputAtt__Error(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttError", t.GetAtt__Error())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ErrorMessage returns a conventionally configured output for an attribute of this resource.
// Attribute: ErrorMessage
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetConventionalOutputAtt__ErrorMessage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttErrorMessage", t.GetAtt__ErrorMessage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Route53Resolver_ResolverQueryLoggingConfigAssociation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
