// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_route53resolver

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__Type is the CloudFormation type for AWS::Route53Resolver::ResolverEndpoint.IpAddressRequest.
	AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__Type = "AWS::Route53Resolver::ResolverEndpoint.IpAddressRequest"
)

var (
	// AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__PropertiesMap reports all the CloudFormation properties for AWS::Route53Resolver::ResolverEndpoint.IpAddressRequest.
	AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__PropertiesMap = struct {
		Ip       string
		Ipv6     string
		SubnetId string
	}{
		Ip:       "Ip",
		Ipv6:     "Ipv6",
		SubnetId: "SubnetId",
	}

	// AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__PropertiesSlice reports all the CloudFormation properties for AWS::Route53Resolver::ResolverEndpoint.IpAddressRequest.
	AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__PropertiesSlice = []string{
		AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__PropertiesMap.Ip,
		AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__PropertiesMap.Ipv6,
		AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__PropertiesMap.SubnetId,
	}
)

// AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest is a binding for AWS::Route53Resolver::ResolverEndpoint.IpAddressRequest.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html
type AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest struct {
	// Ip is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-ip
	Ip cfz.Expression[string] `json:"Ip,omitempty"`

	// Ipv6 is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-ipv6
	Ipv6 cfz.Expression[string] `json:"Ipv6,omitempty"`

	// SubnetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-subnetid
	SubnetId cfz.Expression[string] `json:"SubnetId,omitempty"`
}

// New__AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest initializes a new AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest.
func New__AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest() AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest {
	return AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest{}
}

// GetType returns the CloudFormation type.
func (AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest) GetType() string {
	return AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest__Type
}

// Set__Ip updates property "Ip".
func (t AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest) Set__Ip(v cfz.Expression[string]) AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest {
	t.Ip = v
	return t
}

// SetV__Ip updates property "Ip".
func (t AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest) SetV__Ip(v string) AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest {
	t.Ip = cfz.V(v)
	return t
}

// Set__Ipv6 updates property "Ipv6".
func (t AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest) Set__Ipv6(v cfz.Expression[string]) AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest {
	t.Ipv6 = v
	return t
}

// SetV__Ipv6 updates property "Ipv6".
func (t AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest) SetV__Ipv6(v string) AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest {
	t.Ipv6 = cfz.V(v)
	return t
}

// Set__SubnetId updates property "SubnetId".
func (t AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest) Set__SubnetId(v cfz.Expression[string]) AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest {
	t.SubnetId = v
	return t
}

// SetV__SubnetId updates property "SubnetId".
func (t AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest) SetV__SubnetId(v string) AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest {
	t.SubnetId = cfz.V(v)
	return t
}
