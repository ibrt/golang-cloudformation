// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_amazonmq

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AmazonMQ_Broker)(nil)
	_ cfz.Resource                   = (*AWS_AmazonMQ_Broker)(nil)
)

const (
	// AWS_AmazonMQ_Broker__Type is the CloudFormation type for AWS::AmazonMQ::Broker.
	AWS_AmazonMQ_Broker__Type = "AWS::AmazonMQ::Broker"
)

var (
	// AWS_AmazonMQ_Broker__AttributesMap reports all the CloudFormation attributes for AWS::AmazonMQ::Broker.
	AWS_AmazonMQ_Broker__AttributesMap = struct {
		AmqpEndpoints         string
		Arn                   string
		ConfigurationId       string
		ConfigurationRevision string
		IpAddresses           string
		MqttEndpoints         string
		OpenWireEndpoints     string
		StompEndpoints        string
		WssEndpoints          string
	}{
		AmqpEndpoints:         "AmqpEndpoints",
		Arn:                   "Arn",
		ConfigurationId:       "ConfigurationId",
		ConfigurationRevision: "ConfigurationRevision",
		IpAddresses:           "IpAddresses",
		MqttEndpoints:         "MqttEndpoints",
		OpenWireEndpoints:     "OpenWireEndpoints",
		StompEndpoints:        "StompEndpoints",
		WssEndpoints:          "WssEndpoints",
	}

	// AWS_AmazonMQ_Broker__AttributesSlice reports all the CloudFormation attributes for AWS::AmazonMQ::Broker.
	AWS_AmazonMQ_Broker__AttributesSlice = []string{
		AWS_AmazonMQ_Broker__AttributesMap.AmqpEndpoints,
		AWS_AmazonMQ_Broker__AttributesMap.Arn,
		AWS_AmazonMQ_Broker__AttributesMap.ConfigurationId,
		AWS_AmazonMQ_Broker__AttributesMap.ConfigurationRevision,
		AWS_AmazonMQ_Broker__AttributesMap.IpAddresses,
		AWS_AmazonMQ_Broker__AttributesMap.MqttEndpoints,
		AWS_AmazonMQ_Broker__AttributesMap.OpenWireEndpoints,
		AWS_AmazonMQ_Broker__AttributesMap.StompEndpoints,
		AWS_AmazonMQ_Broker__AttributesMap.WssEndpoints,
	}
)

var (
	// AWS_AmazonMQ_Broker__PropertiesMap reports all the CloudFormation properties for AWS::AmazonMQ::Broker.
	AWS_AmazonMQ_Broker__PropertiesMap = struct {
		AuthenticationStrategy          string
		AutoMinorVersionUpgrade         string
		BrokerName                      string
		Configuration                   string
		DataReplicationMode             string
		DataReplicationPrimaryBrokerArn string
		DeploymentMode                  string
		EncryptionOptions               string
		EngineType                      string
		EngineVersion                   string
		HostInstanceType                string
		LdapServerMetadata              string
		Logs                            string
		MaintenanceWindowStartTime      string
		PubliclyAccessible              string
		SecurityGroups                  string
		StorageType                     string
		SubnetIds                       string
		Tags                            string
		Users                           string
	}{
		AuthenticationStrategy:          "AuthenticationStrategy",
		AutoMinorVersionUpgrade:         "AutoMinorVersionUpgrade",
		BrokerName:                      "BrokerName",
		Configuration:                   "Configuration",
		DataReplicationMode:             "DataReplicationMode",
		DataReplicationPrimaryBrokerArn: "DataReplicationPrimaryBrokerArn",
		DeploymentMode:                  "DeploymentMode",
		EncryptionOptions:               "EncryptionOptions",
		EngineType:                      "EngineType",
		EngineVersion:                   "EngineVersion",
		HostInstanceType:                "HostInstanceType",
		LdapServerMetadata:              "LdapServerMetadata",
		Logs:                            "Logs",
		MaintenanceWindowStartTime:      "MaintenanceWindowStartTime",
		PubliclyAccessible:              "PubliclyAccessible",
		SecurityGroups:                  "SecurityGroups",
		StorageType:                     "StorageType",
		SubnetIds:                       "SubnetIds",
		Tags:                            "Tags",
		Users:                           "Users",
	}

	// AWS_AmazonMQ_Broker__PropertiesSlice reports all the CloudFormation properties for AWS::AmazonMQ::Broker.
	AWS_AmazonMQ_Broker__PropertiesSlice = []string{
		AWS_AmazonMQ_Broker__PropertiesMap.AuthenticationStrategy,
		AWS_AmazonMQ_Broker__PropertiesMap.AutoMinorVersionUpgrade,
		AWS_AmazonMQ_Broker__PropertiesMap.BrokerName,
		AWS_AmazonMQ_Broker__PropertiesMap.Configuration,
		AWS_AmazonMQ_Broker__PropertiesMap.DataReplicationMode,
		AWS_AmazonMQ_Broker__PropertiesMap.DataReplicationPrimaryBrokerArn,
		AWS_AmazonMQ_Broker__PropertiesMap.DeploymentMode,
		AWS_AmazonMQ_Broker__PropertiesMap.EncryptionOptions,
		AWS_AmazonMQ_Broker__PropertiesMap.EngineType,
		AWS_AmazonMQ_Broker__PropertiesMap.EngineVersion,
		AWS_AmazonMQ_Broker__PropertiesMap.HostInstanceType,
		AWS_AmazonMQ_Broker__PropertiesMap.LdapServerMetadata,
		AWS_AmazonMQ_Broker__PropertiesMap.Logs,
		AWS_AmazonMQ_Broker__PropertiesMap.MaintenanceWindowStartTime,
		AWS_AmazonMQ_Broker__PropertiesMap.PubliclyAccessible,
		AWS_AmazonMQ_Broker__PropertiesMap.SecurityGroups,
		AWS_AmazonMQ_Broker__PropertiesMap.StorageType,
		AWS_AmazonMQ_Broker__PropertiesMap.SubnetIds,
		AWS_AmazonMQ_Broker__PropertiesMap.Tags,
		AWS_AmazonMQ_Broker__PropertiesMap.Users,
	}
)

// AWS_AmazonMQ_Broker is a binding for AWS::AmazonMQ::Broker.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html
type AWS_AmazonMQ_Broker struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AuthenticationStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-authenticationstrategy
	AuthenticationStrategy cfz.Expression[string] `json:"AuthenticationStrategy,omitempty"`

	// AutoMinorVersionUpgrade is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-autominorversionupgrade
	AutoMinorVersionUpgrade cfz.Expression[bool] `json:"AutoMinorVersionUpgrade,omitempty"`

	// BrokerName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-brokername
	BrokerName cfz.Expression[string] `json:"BrokerName,omitempty"`

	// Configuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-configuration
	Configuration cfz.Expression[AWS_AmazonMQ_Broker_ConfigurationId] `json:"Configuration,omitempty"`

	// DataReplicationMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-datareplicationmode
	DataReplicationMode cfz.Expression[string] `json:"DataReplicationMode,omitempty"`

	// DataReplicationPrimaryBrokerArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-datareplicationprimarybrokerarn
	DataReplicationPrimaryBrokerArn cfz.Expression[string] `json:"DataReplicationPrimaryBrokerArn,omitempty"`

	// DeploymentMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-deploymentmode
	DeploymentMode cfz.Expression[string] `json:"DeploymentMode,omitempty"`

	// EncryptionOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-encryptionoptions
	EncryptionOptions cfz.Expression[AWS_AmazonMQ_Broker_EncryptionOptions] `json:"EncryptionOptions,omitempty"`

	// EngineType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-enginetype
	EngineType cfz.Expression[string] `json:"EngineType,omitempty"`

	// EngineVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-engineversion
	EngineVersion cfz.Expression[string] `json:"EngineVersion,omitempty"`

	// HostInstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-hostinstancetype
	HostInstanceType cfz.Expression[string] `json:"HostInstanceType,omitempty"`

	// LdapServerMetadata is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-ldapservermetadata
	LdapServerMetadata cfz.Expression[AWS_AmazonMQ_Broker_LdapServerMetadata] `json:"LdapServerMetadata,omitempty"`

	// Logs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-logs
	Logs cfz.Expression[AWS_AmazonMQ_Broker_LogList] `json:"Logs,omitempty"`

	// MaintenanceWindowStartTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-maintenancewindowstarttime
	MaintenanceWindowStartTime cfz.Expression[AWS_AmazonMQ_Broker_MaintenanceWindow] `json:"MaintenanceWindowStartTime,omitempty"`

	// PubliclyAccessible is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-publiclyaccessible
	PubliclyAccessible cfz.Expression[bool] `json:"PubliclyAccessible,omitempty"`

	// SecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-securitygroups
	SecurityGroups cfz.ExpressionSlice[string] `json:"SecurityGroups,omitempty"`

	// StorageType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-storagetype
	StorageType cfz.Expression[string] `json:"StorageType,omitempty"`

	// SubnetIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-subnetids
	SubnetIds cfz.ExpressionSlice[string] `json:"SubnetIds,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-tags
	Tags cfz.ExpressionSlice[AWS_AmazonMQ_Broker_TagsEntry] `json:"Tags,omitempty"`

	// Users is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-amazonmq-broker.html#cfn-amazonmq-broker-users
	Users cfz.ExpressionSlice[AWS_AmazonMQ_Broker_User] `json:"Users,omitempty"`
}

// New__AWS_AmazonMQ_Broker initializes a new *AWS_AmazonMQ_Broker.
func New__AWS_AmazonMQ_Broker(logicalName string) *AWS_AmazonMQ_Broker {
	return &AWS_AmazonMQ_Broker{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AmazonMQ_Broker) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AmazonMQ_Broker) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AmazonMQ_Broker) GetType() string {
	return AWS_AmazonMQ_Broker__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AmazonMQ_Broker) Set__LogicalName(v string) *AWS_AmazonMQ_Broker {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AmazonMQ_Broker) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AmazonMQ_Broker {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AmazonMQ_Broker) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AmazonMQ_Broker {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AmazonMQ_Broker) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AmazonMQ_Broker {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AmazonMQ_Broker) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AmazonMQ_Broker {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AmazonMQ_Broker) Set__RequestedOutputs(v []cfz.Output) *AWS_AmazonMQ_Broker {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AmazonMQ_Broker) Add__RequestedOutputs(v ...cfz.Output) *AWS_AmazonMQ_Broker {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AuthenticationStrategy updates property "AuthenticationStrategy".
func (t *AWS_AmazonMQ_Broker) Set__AuthenticationStrategy(v cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.AuthenticationStrategy = v
	return t
}

// SetV__AuthenticationStrategy updates property "AuthenticationStrategy".
func (t *AWS_AmazonMQ_Broker) SetV__AuthenticationStrategy(v string) *AWS_AmazonMQ_Broker {
	t.AuthenticationStrategy = cfz.V(v)
	return t
}

// Set__AutoMinorVersionUpgrade updates property "AutoMinorVersionUpgrade".
func (t *AWS_AmazonMQ_Broker) Set__AutoMinorVersionUpgrade(v cfz.Expression[bool]) *AWS_AmazonMQ_Broker {
	t.AutoMinorVersionUpgrade = v
	return t
}

// SetV__AutoMinorVersionUpgrade updates property "AutoMinorVersionUpgrade".
func (t *AWS_AmazonMQ_Broker) SetV__AutoMinorVersionUpgrade(v bool) *AWS_AmazonMQ_Broker {
	t.AutoMinorVersionUpgrade = cfz.V(v)
	return t
}

// Set__BrokerName updates property "BrokerName".
func (t *AWS_AmazonMQ_Broker) Set__BrokerName(v cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.BrokerName = v
	return t
}

// SetV__BrokerName updates property "BrokerName".
func (t *AWS_AmazonMQ_Broker) SetV__BrokerName(v string) *AWS_AmazonMQ_Broker {
	t.BrokerName = cfz.V(v)
	return t
}

// Set__Configuration updates property "Configuration".
func (t *AWS_AmazonMQ_Broker) Set__Configuration(v cfz.Expression[AWS_AmazonMQ_Broker_ConfigurationId]) *AWS_AmazonMQ_Broker {
	t.Configuration = v
	return t
}

// SetV__Configuration updates property "Configuration".
func (t *AWS_AmazonMQ_Broker) SetV__Configuration(v AWS_AmazonMQ_Broker_ConfigurationId) *AWS_AmazonMQ_Broker {
	t.Configuration = cfz.V(v)
	return t
}

// Set__DataReplicationMode updates property "DataReplicationMode".
func (t *AWS_AmazonMQ_Broker) Set__DataReplicationMode(v cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.DataReplicationMode = v
	return t
}

// SetV__DataReplicationMode updates property "DataReplicationMode".
func (t *AWS_AmazonMQ_Broker) SetV__DataReplicationMode(v string) *AWS_AmazonMQ_Broker {
	t.DataReplicationMode = cfz.V(v)
	return t
}

// Set__DataReplicationPrimaryBrokerArn updates property "DataReplicationPrimaryBrokerArn".
func (t *AWS_AmazonMQ_Broker) Set__DataReplicationPrimaryBrokerArn(v cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.DataReplicationPrimaryBrokerArn = v
	return t
}

// SetV__DataReplicationPrimaryBrokerArn updates property "DataReplicationPrimaryBrokerArn".
func (t *AWS_AmazonMQ_Broker) SetV__DataReplicationPrimaryBrokerArn(v string) *AWS_AmazonMQ_Broker {
	t.DataReplicationPrimaryBrokerArn = cfz.V(v)
	return t
}

// Set__DeploymentMode updates property "DeploymentMode".
func (t *AWS_AmazonMQ_Broker) Set__DeploymentMode(v cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.DeploymentMode = v
	return t
}

// SetV__DeploymentMode updates property "DeploymentMode".
func (t *AWS_AmazonMQ_Broker) SetV__DeploymentMode(v string) *AWS_AmazonMQ_Broker {
	t.DeploymentMode = cfz.V(v)
	return t
}

// Set__EncryptionOptions updates property "EncryptionOptions".
func (t *AWS_AmazonMQ_Broker) Set__EncryptionOptions(v cfz.Expression[AWS_AmazonMQ_Broker_EncryptionOptions]) *AWS_AmazonMQ_Broker {
	t.EncryptionOptions = v
	return t
}

// SetV__EncryptionOptions updates property "EncryptionOptions".
func (t *AWS_AmazonMQ_Broker) SetV__EncryptionOptions(v AWS_AmazonMQ_Broker_EncryptionOptions) *AWS_AmazonMQ_Broker {
	t.EncryptionOptions = cfz.V(v)
	return t
}

// Set__EngineType updates property "EngineType".
func (t *AWS_AmazonMQ_Broker) Set__EngineType(v cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.EngineType = v
	return t
}

// SetV__EngineType updates property "EngineType".
func (t *AWS_AmazonMQ_Broker) SetV__EngineType(v string) *AWS_AmazonMQ_Broker {
	t.EngineType = cfz.V(v)
	return t
}

// Set__EngineVersion updates property "EngineVersion".
func (t *AWS_AmazonMQ_Broker) Set__EngineVersion(v cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.EngineVersion = v
	return t
}

// SetV__EngineVersion updates property "EngineVersion".
func (t *AWS_AmazonMQ_Broker) SetV__EngineVersion(v string) *AWS_AmazonMQ_Broker {
	t.EngineVersion = cfz.V(v)
	return t
}

// Set__HostInstanceType updates property "HostInstanceType".
func (t *AWS_AmazonMQ_Broker) Set__HostInstanceType(v cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.HostInstanceType = v
	return t
}

// SetV__HostInstanceType updates property "HostInstanceType".
func (t *AWS_AmazonMQ_Broker) SetV__HostInstanceType(v string) *AWS_AmazonMQ_Broker {
	t.HostInstanceType = cfz.V(v)
	return t
}

// Set__LdapServerMetadata updates property "LdapServerMetadata".
func (t *AWS_AmazonMQ_Broker) Set__LdapServerMetadata(v cfz.Expression[AWS_AmazonMQ_Broker_LdapServerMetadata]) *AWS_AmazonMQ_Broker {
	t.LdapServerMetadata = v
	return t
}

// SetV__LdapServerMetadata updates property "LdapServerMetadata".
func (t *AWS_AmazonMQ_Broker) SetV__LdapServerMetadata(v AWS_AmazonMQ_Broker_LdapServerMetadata) *AWS_AmazonMQ_Broker {
	t.LdapServerMetadata = cfz.V(v)
	return t
}

// Set__Logs updates property "Logs".
func (t *AWS_AmazonMQ_Broker) Set__Logs(v cfz.Expression[AWS_AmazonMQ_Broker_LogList]) *AWS_AmazonMQ_Broker {
	t.Logs = v
	return t
}

// SetV__Logs updates property "Logs".
func (t *AWS_AmazonMQ_Broker) SetV__Logs(v AWS_AmazonMQ_Broker_LogList) *AWS_AmazonMQ_Broker {
	t.Logs = cfz.V(v)
	return t
}

// Set__MaintenanceWindowStartTime updates property "MaintenanceWindowStartTime".
func (t *AWS_AmazonMQ_Broker) Set__MaintenanceWindowStartTime(v cfz.Expression[AWS_AmazonMQ_Broker_MaintenanceWindow]) *AWS_AmazonMQ_Broker {
	t.MaintenanceWindowStartTime = v
	return t
}

// SetV__MaintenanceWindowStartTime updates property "MaintenanceWindowStartTime".
func (t *AWS_AmazonMQ_Broker) SetV__MaintenanceWindowStartTime(v AWS_AmazonMQ_Broker_MaintenanceWindow) *AWS_AmazonMQ_Broker {
	t.MaintenanceWindowStartTime = cfz.V(v)
	return t
}

// Set__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_AmazonMQ_Broker) Set__PubliclyAccessible(v cfz.Expression[bool]) *AWS_AmazonMQ_Broker {
	t.PubliclyAccessible = v
	return t
}

// SetV__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_AmazonMQ_Broker) SetV__PubliclyAccessible(v bool) *AWS_AmazonMQ_Broker {
	t.PubliclyAccessible = cfz.V(v)
	return t
}

// Set__SecurityGroups updates property "SecurityGroups".
func (t *AWS_AmazonMQ_Broker) Set__SecurityGroups(v cfz.ExpressionSlice[string]) *AWS_AmazonMQ_Broker {
	t.SecurityGroups = v
	return t
}

// SetS__SecurityGroups updates property "SecurityGroups".
func (t *AWS_AmazonMQ_Broker) SetS__SecurityGroups(v ...cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.SecurityGroups = cfz.S(v...)
	return t
}

// SetSV__SecurityGroups updates property "SecurityGroups".
func (t *AWS_AmazonMQ_Broker) SetSV__SecurityGroups(v ...string) *AWS_AmazonMQ_Broker {
	t.SecurityGroups = cfz.SV(v...)
	return t
}

// Set__StorageType updates property "StorageType".
func (t *AWS_AmazonMQ_Broker) Set__StorageType(v cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.StorageType = v
	return t
}

// SetV__StorageType updates property "StorageType".
func (t *AWS_AmazonMQ_Broker) SetV__StorageType(v string) *AWS_AmazonMQ_Broker {
	t.StorageType = cfz.V(v)
	return t
}

// Set__SubnetIds updates property "SubnetIds".
func (t *AWS_AmazonMQ_Broker) Set__SubnetIds(v cfz.ExpressionSlice[string]) *AWS_AmazonMQ_Broker {
	t.SubnetIds = v
	return t
}

// SetS__SubnetIds updates property "SubnetIds".
func (t *AWS_AmazonMQ_Broker) SetS__SubnetIds(v ...cfz.Expression[string]) *AWS_AmazonMQ_Broker {
	t.SubnetIds = cfz.S(v...)
	return t
}

// SetSV__SubnetIds updates property "SubnetIds".
func (t *AWS_AmazonMQ_Broker) SetSV__SubnetIds(v ...string) *AWS_AmazonMQ_Broker {
	t.SubnetIds = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_AmazonMQ_Broker) Set__Tags(v cfz.ExpressionSlice[AWS_AmazonMQ_Broker_TagsEntry]) *AWS_AmazonMQ_Broker {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_AmazonMQ_Broker) SetS__Tags(v ...cfz.Expression[AWS_AmazonMQ_Broker_TagsEntry]) *AWS_AmazonMQ_Broker {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_AmazonMQ_Broker) SetSV__Tags(v ...AWS_AmazonMQ_Broker_TagsEntry) *AWS_AmazonMQ_Broker {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Users updates property "Users".
func (t *AWS_AmazonMQ_Broker) Set__Users(v cfz.ExpressionSlice[AWS_AmazonMQ_Broker_User]) *AWS_AmazonMQ_Broker {
	t.Users = v
	return t
}

// SetS__Users updates property "Users".
func (t *AWS_AmazonMQ_Broker) SetS__Users(v ...cfz.Expression[AWS_AmazonMQ_Broker_User]) *AWS_AmazonMQ_Broker {
	t.Users = cfz.S(v...)
	return t
}

// SetSV__Users updates property "Users".
func (t *AWS_AmazonMQ_Broker) SetSV__Users(v ...AWS_AmazonMQ_Broker_User) *AWS_AmazonMQ_Broker {
	t.Users = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AmazonMQ_Broker) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAttSlice__AmqpEndpoints returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AmqpEndpoints
func (t *AWS_AmazonMQ_Broker) GetAttSlice__AmqpEndpoints() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AmazonMQ_Broker__AttributesMap.AmqpEndpoints))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_AmazonMQ_Broker) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AmazonMQ_Broker__AttributesMap.Arn))
}

// GetAtt__ConfigurationId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConfigurationId
func (t *AWS_AmazonMQ_Broker) GetAtt__ConfigurationId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AmazonMQ_Broker__AttributesMap.ConfigurationId))
}

// GetAtt__ConfigurationRevision returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConfigurationRevision
func (t *AWS_AmazonMQ_Broker) GetAtt__ConfigurationRevision() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AmazonMQ_Broker__AttributesMap.ConfigurationRevision))
}

// GetAttSlice__IpAddresses returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpAddresses
func (t *AWS_AmazonMQ_Broker) GetAttSlice__IpAddresses() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AmazonMQ_Broker__AttributesMap.IpAddresses))
}

// GetAttSlice__MqttEndpoints returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MqttEndpoints
func (t *AWS_AmazonMQ_Broker) GetAttSlice__MqttEndpoints() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AmazonMQ_Broker__AttributesMap.MqttEndpoints))
}

// GetAttSlice__OpenWireEndpoints returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OpenWireEndpoints
func (t *AWS_AmazonMQ_Broker) GetAttSlice__OpenWireEndpoints() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AmazonMQ_Broker__AttributesMap.OpenWireEndpoints))
}

// GetAttSlice__StompEndpoints returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StompEndpoints
func (t *AWS_AmazonMQ_Broker) GetAttSlice__StompEndpoints() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AmazonMQ_Broker__AttributesMap.StompEndpoints))
}

// GetAttSlice__WssEndpoints returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: WssEndpoints
func (t *AWS_AmazonMQ_Broker) GetAttSlice__WssEndpoints() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AmazonMQ_Broker__AttributesMap.WssEndpoints))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AmqpEndpoints returns a conventionally configured output for an attribute of this resource.
// Attribute: AmqpEndpoints
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputAtt__AmqpEndpoints(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAmqpEndpoints", t.GetAttSlice__AmqpEndpoints())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConfigurationId returns a conventionally configured output for an attribute of this resource.
// Attribute: ConfigurationId
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputAtt__ConfigurationId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConfigurationId", t.GetAtt__ConfigurationId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConfigurationRevision returns a conventionally configured output for an attribute of this resource.
// Attribute: ConfigurationRevision
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputAtt__ConfigurationRevision(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConfigurationRevision", t.GetAtt__ConfigurationRevision())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpAddresses returns a conventionally configured output for an attribute of this resource.
// Attribute: IpAddresses
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputAtt__IpAddresses(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpAddresses", t.GetAttSlice__IpAddresses())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MqttEndpoints returns a conventionally configured output for an attribute of this resource.
// Attribute: MqttEndpoints
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputAtt__MqttEndpoints(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMqttEndpoints", t.GetAttSlice__MqttEndpoints())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OpenWireEndpoints returns a conventionally configured output for an attribute of this resource.
// Attribute: OpenWireEndpoints
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputAtt__OpenWireEndpoints(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOpenWireEndpoints", t.GetAttSlice__OpenWireEndpoints())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StompEndpoints returns a conventionally configured output for an attribute of this resource.
// Attribute: StompEndpoints
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputAtt__StompEndpoints(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStompEndpoints", t.GetAttSlice__StompEndpoints())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__WssEndpoints returns a conventionally configured output for an attribute of this resource.
// Attribute: WssEndpoints
func (t *AWS_AmazonMQ_Broker) GetConventionalOutputAtt__WssEndpoints(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttWssEndpoints", t.GetAttSlice__WssEndpoints())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AmazonMQ_Broker) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AmazonMQ_Broker

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AmazonMQ_Broker) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
