// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_wisdom

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Wisdom_AIPrompt)(nil)
	_ cfz.Resource                   = (*AWS_Wisdom_AIPrompt)(nil)
)

const (
	// AWS_Wisdom_AIPrompt__Type is the CloudFormation type for AWS::Wisdom::AIPrompt.
	AWS_Wisdom_AIPrompt__Type = "AWS::Wisdom::AIPrompt"
)

var (
	// AWS_Wisdom_AIPrompt__AttributesMap reports all the CloudFormation attributes for AWS::Wisdom::AIPrompt.
	AWS_Wisdom_AIPrompt__AttributesMap = struct {
		AIPromptArn  string
		AIPromptId   string
		AssistantArn string
	}{
		AIPromptArn:  "AIPromptArn",
		AIPromptId:   "AIPromptId",
		AssistantArn: "AssistantArn",
	}

	// AWS_Wisdom_AIPrompt__AttributesSlice reports all the CloudFormation attributes for AWS::Wisdom::AIPrompt.
	AWS_Wisdom_AIPrompt__AttributesSlice = []string{
		AWS_Wisdom_AIPrompt__AttributesMap.AIPromptArn,
		AWS_Wisdom_AIPrompt__AttributesMap.AIPromptId,
		AWS_Wisdom_AIPrompt__AttributesMap.AssistantArn,
	}
)

var (
	// AWS_Wisdom_AIPrompt__PropertiesMap reports all the CloudFormation properties for AWS::Wisdom::AIPrompt.
	AWS_Wisdom_AIPrompt__PropertiesMap = struct {
		ApiFormat             string
		AssistantId           string
		Description           string
		ModelId               string
		Name                  string
		Tags                  string
		TemplateConfiguration string
		TemplateType          string
		Type                  string
	}{
		ApiFormat:             "ApiFormat",
		AssistantId:           "AssistantId",
		Description:           "Description",
		ModelId:               "ModelId",
		Name:                  "Name",
		Tags:                  "Tags",
		TemplateConfiguration: "TemplateConfiguration",
		TemplateType:          "TemplateType",
		Type:                  "Type",
	}

	// AWS_Wisdom_AIPrompt__PropertiesSlice reports all the CloudFormation properties for AWS::Wisdom::AIPrompt.
	AWS_Wisdom_AIPrompt__PropertiesSlice = []string{
		AWS_Wisdom_AIPrompt__PropertiesMap.ApiFormat,
		AWS_Wisdom_AIPrompt__PropertiesMap.AssistantId,
		AWS_Wisdom_AIPrompt__PropertiesMap.Description,
		AWS_Wisdom_AIPrompt__PropertiesMap.ModelId,
		AWS_Wisdom_AIPrompt__PropertiesMap.Name,
		AWS_Wisdom_AIPrompt__PropertiesMap.Tags,
		AWS_Wisdom_AIPrompt__PropertiesMap.TemplateConfiguration,
		AWS_Wisdom_AIPrompt__PropertiesMap.TemplateType,
		AWS_Wisdom_AIPrompt__PropertiesMap.Type,
	}
)

// AWS_Wisdom_AIPrompt is a binding for AWS::Wisdom::AIPrompt.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html
type AWS_Wisdom_AIPrompt struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApiFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-apiformat
	ApiFormat cfz.Expression[string] `json:"ApiFormat,omitempty"`

	// AssistantId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-assistantid
	AssistantId cfz.Expression[string] `json:"AssistantId,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// ModelId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-modelid
	ModelId cfz.Expression[string] `json:"ModelId,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// TemplateConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-templateconfiguration
	TemplateConfiguration cfz.Expression[AWS_Wisdom_AIPrompt_AIPromptTemplateConfiguration] `json:"TemplateConfiguration,omitempty"`

	// TemplateType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-templatetype
	TemplateType cfz.Expression[string] `json:"TemplateType,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiprompt.html#cfn-wisdom-aiprompt-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_Wisdom_AIPrompt initializes a new *AWS_Wisdom_AIPrompt.
func New__AWS_Wisdom_AIPrompt(logicalName string) *AWS_Wisdom_AIPrompt {
	return &AWS_Wisdom_AIPrompt{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Wisdom_AIPrompt) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Wisdom_AIPrompt) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Wisdom_AIPrompt) GetType() string {
	return AWS_Wisdom_AIPrompt__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Wisdom_AIPrompt) Set__LogicalName(v string) *AWS_Wisdom_AIPrompt {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Wisdom_AIPrompt) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Wisdom_AIPrompt {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Wisdom_AIPrompt) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Wisdom_AIPrompt {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Wisdom_AIPrompt) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Wisdom_AIPrompt {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Wisdom_AIPrompt) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Wisdom_AIPrompt {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Wisdom_AIPrompt) Set__RequestedOutputs(v []cfz.Output) *AWS_Wisdom_AIPrompt {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Wisdom_AIPrompt) Add__RequestedOutputs(v ...cfz.Output) *AWS_Wisdom_AIPrompt {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApiFormat updates property "ApiFormat".
func (t *AWS_Wisdom_AIPrompt) Set__ApiFormat(v cfz.Expression[string]) *AWS_Wisdom_AIPrompt {
	t.ApiFormat = v
	return t
}

// SetV__ApiFormat updates property "ApiFormat".
func (t *AWS_Wisdom_AIPrompt) SetV__ApiFormat(v string) *AWS_Wisdom_AIPrompt {
	t.ApiFormat = cfz.V(v)
	return t
}

// Set__AssistantId updates property "AssistantId".
func (t *AWS_Wisdom_AIPrompt) Set__AssistantId(v cfz.Expression[string]) *AWS_Wisdom_AIPrompt {
	t.AssistantId = v
	return t
}

// SetV__AssistantId updates property "AssistantId".
func (t *AWS_Wisdom_AIPrompt) SetV__AssistantId(v string) *AWS_Wisdom_AIPrompt {
	t.AssistantId = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Wisdom_AIPrompt) Set__Description(v cfz.Expression[string]) *AWS_Wisdom_AIPrompt {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Wisdom_AIPrompt) SetV__Description(v string) *AWS_Wisdom_AIPrompt {
	t.Description = cfz.V(v)
	return t
}

// Set__ModelId updates property "ModelId".
func (t *AWS_Wisdom_AIPrompt) Set__ModelId(v cfz.Expression[string]) *AWS_Wisdom_AIPrompt {
	t.ModelId = v
	return t
}

// SetV__ModelId updates property "ModelId".
func (t *AWS_Wisdom_AIPrompt) SetV__ModelId(v string) *AWS_Wisdom_AIPrompt {
	t.ModelId = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Wisdom_AIPrompt) Set__Name(v cfz.Expression[string]) *AWS_Wisdom_AIPrompt {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Wisdom_AIPrompt) SetV__Name(v string) *AWS_Wisdom_AIPrompt {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Wisdom_AIPrompt) Set__Tags(v cfz.ExpressionMap[string]) *AWS_Wisdom_AIPrompt {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_Wisdom_AIPrompt) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_Wisdom_AIPrompt {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_Wisdom_AIPrompt) SetMV__Tags(v ...map[string]string) *AWS_Wisdom_AIPrompt {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__TemplateConfiguration updates property "TemplateConfiguration".
func (t *AWS_Wisdom_AIPrompt) Set__TemplateConfiguration(v cfz.Expression[AWS_Wisdom_AIPrompt_AIPromptTemplateConfiguration]) *AWS_Wisdom_AIPrompt {
	t.TemplateConfiguration = v
	return t
}

// SetV__TemplateConfiguration updates property "TemplateConfiguration".
func (t *AWS_Wisdom_AIPrompt) SetV__TemplateConfiguration(v AWS_Wisdom_AIPrompt_AIPromptTemplateConfiguration) *AWS_Wisdom_AIPrompt {
	t.TemplateConfiguration = cfz.V(v)
	return t
}

// Set__TemplateType updates property "TemplateType".
func (t *AWS_Wisdom_AIPrompt) Set__TemplateType(v cfz.Expression[string]) *AWS_Wisdom_AIPrompt {
	t.TemplateType = v
	return t
}

// SetV__TemplateType updates property "TemplateType".
func (t *AWS_Wisdom_AIPrompt) SetV__TemplateType(v string) *AWS_Wisdom_AIPrompt {
	t.TemplateType = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_Wisdom_AIPrompt) Set__Type(v cfz.Expression[string]) *AWS_Wisdom_AIPrompt {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_Wisdom_AIPrompt) SetV__Type(v string) *AWS_Wisdom_AIPrompt {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Wisdom_AIPrompt) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AIPromptArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AIPromptArn
func (t *AWS_Wisdom_AIPrompt) GetAtt__AIPromptArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Wisdom_AIPrompt__AttributesMap.AIPromptArn))
}

// GetAtt__AIPromptId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AIPromptId
func (t *AWS_Wisdom_AIPrompt) GetAtt__AIPromptId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Wisdom_AIPrompt__AttributesMap.AIPromptId))
}

// GetAtt__AssistantArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AssistantArn
func (t *AWS_Wisdom_AIPrompt) GetAtt__AssistantArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Wisdom_AIPrompt__AttributesMap.AssistantArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Wisdom_AIPrompt) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AIPromptArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AIPromptArn
func (t *AWS_Wisdom_AIPrompt) GetConventionalOutputAtt__AIPromptArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAIPromptArn", t.GetAtt__AIPromptArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AIPromptId returns a conventionally configured output for an attribute of this resource.
// Attribute: AIPromptId
func (t *AWS_Wisdom_AIPrompt) GetConventionalOutputAtt__AIPromptId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAIPromptId", t.GetAtt__AIPromptId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AssistantArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AssistantArn
func (t *AWS_Wisdom_AIPrompt) GetConventionalOutputAtt__AssistantArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssistantArn", t.GetAtt__AssistantArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Wisdom_AIPrompt) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Wisdom_AIPrompt

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Wisdom_AIPrompt) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
