// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_wisdom

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Wisdom_AIAgent)(nil)
	_ cfz.Resource                   = (*AWS_Wisdom_AIAgent)(nil)
)

const (
	// AWS_Wisdom_AIAgent__Type is the CloudFormation type for AWS::Wisdom::AIAgent.
	AWS_Wisdom_AIAgent__Type = "AWS::Wisdom::AIAgent"
)

var (
	// AWS_Wisdom_AIAgent__AttributesMap reports all the CloudFormation attributes for AWS::Wisdom::AIAgent.
	AWS_Wisdom_AIAgent__AttributesMap = struct {
		AIAgentArn   string
		AIAgentId    string
		AssistantArn string
	}{
		AIAgentArn:   "AIAgentArn",
		AIAgentId:    "AIAgentId",
		AssistantArn: "AssistantArn",
	}

	// AWS_Wisdom_AIAgent__AttributesSlice reports all the CloudFormation attributes for AWS::Wisdom::AIAgent.
	AWS_Wisdom_AIAgent__AttributesSlice = []string{
		AWS_Wisdom_AIAgent__AttributesMap.AIAgentArn,
		AWS_Wisdom_AIAgent__AttributesMap.AIAgentId,
		AWS_Wisdom_AIAgent__AttributesMap.AssistantArn,
	}
)

var (
	// AWS_Wisdom_AIAgent__PropertiesMap reports all the CloudFormation properties for AWS::Wisdom::AIAgent.
	AWS_Wisdom_AIAgent__PropertiesMap = struct {
		AssistantId   string
		Configuration string
		Description   string
		Name          string
		Tags          string
		Type          string
	}{
		AssistantId:   "AssistantId",
		Configuration: "Configuration",
		Description:   "Description",
		Name:          "Name",
		Tags:          "Tags",
		Type:          "Type",
	}

	// AWS_Wisdom_AIAgent__PropertiesSlice reports all the CloudFormation properties for AWS::Wisdom::AIAgent.
	AWS_Wisdom_AIAgent__PropertiesSlice = []string{
		AWS_Wisdom_AIAgent__PropertiesMap.AssistantId,
		AWS_Wisdom_AIAgent__PropertiesMap.Configuration,
		AWS_Wisdom_AIAgent__PropertiesMap.Description,
		AWS_Wisdom_AIAgent__PropertiesMap.Name,
		AWS_Wisdom_AIAgent__PropertiesMap.Tags,
		AWS_Wisdom_AIAgent__PropertiesMap.Type,
	}
)

// AWS_Wisdom_AIAgent is a binding for AWS::Wisdom::AIAgent.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html
type AWS_Wisdom_AIAgent struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AssistantId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-assistantid
	AssistantId cfz.Expression[string] `json:"AssistantId,omitempty"`

	// Configuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-configuration
	Configuration cfz.Expression[AWS_Wisdom_AIAgent_AIAgentConfiguration] `json:"Configuration,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-aiagent.html#cfn-wisdom-aiagent-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_Wisdom_AIAgent initializes a new *AWS_Wisdom_AIAgent.
func New__AWS_Wisdom_AIAgent(logicalName string) *AWS_Wisdom_AIAgent {
	return &AWS_Wisdom_AIAgent{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Wisdom_AIAgent) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Wisdom_AIAgent) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Wisdom_AIAgent) GetType() string {
	return AWS_Wisdom_AIAgent__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Wisdom_AIAgent) Set__LogicalName(v string) *AWS_Wisdom_AIAgent {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Wisdom_AIAgent) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Wisdom_AIAgent {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Wisdom_AIAgent) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Wisdom_AIAgent {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Wisdom_AIAgent) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Wisdom_AIAgent {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Wisdom_AIAgent) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Wisdom_AIAgent {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Wisdom_AIAgent) Set__RequestedOutputs(v []cfz.Output) *AWS_Wisdom_AIAgent {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Wisdom_AIAgent) Add__RequestedOutputs(v ...cfz.Output) *AWS_Wisdom_AIAgent {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AssistantId updates property "AssistantId".
func (t *AWS_Wisdom_AIAgent) Set__AssistantId(v cfz.Expression[string]) *AWS_Wisdom_AIAgent {
	t.AssistantId = v
	return t
}

// SetV__AssistantId updates property "AssistantId".
func (t *AWS_Wisdom_AIAgent) SetV__AssistantId(v string) *AWS_Wisdom_AIAgent {
	t.AssistantId = cfz.V(v)
	return t
}

// Set__Configuration updates property "Configuration".
func (t *AWS_Wisdom_AIAgent) Set__Configuration(v cfz.Expression[AWS_Wisdom_AIAgent_AIAgentConfiguration]) *AWS_Wisdom_AIAgent {
	t.Configuration = v
	return t
}

// SetV__Configuration updates property "Configuration".
func (t *AWS_Wisdom_AIAgent) SetV__Configuration(v AWS_Wisdom_AIAgent_AIAgentConfiguration) *AWS_Wisdom_AIAgent {
	t.Configuration = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Wisdom_AIAgent) Set__Description(v cfz.Expression[string]) *AWS_Wisdom_AIAgent {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Wisdom_AIAgent) SetV__Description(v string) *AWS_Wisdom_AIAgent {
	t.Description = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Wisdom_AIAgent) Set__Name(v cfz.Expression[string]) *AWS_Wisdom_AIAgent {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Wisdom_AIAgent) SetV__Name(v string) *AWS_Wisdom_AIAgent {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Wisdom_AIAgent) Set__Tags(v cfz.ExpressionMap[string]) *AWS_Wisdom_AIAgent {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_Wisdom_AIAgent) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_Wisdom_AIAgent {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_Wisdom_AIAgent) SetMV__Tags(v ...map[string]string) *AWS_Wisdom_AIAgent {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_Wisdom_AIAgent) Set__Type(v cfz.Expression[string]) *AWS_Wisdom_AIAgent {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_Wisdom_AIAgent) SetV__Type(v string) *AWS_Wisdom_AIAgent {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Wisdom_AIAgent) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AIAgentArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AIAgentArn
func (t *AWS_Wisdom_AIAgent) GetAtt__AIAgentArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Wisdom_AIAgent__AttributesMap.AIAgentArn))
}

// GetAtt__AIAgentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AIAgentId
func (t *AWS_Wisdom_AIAgent) GetAtt__AIAgentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Wisdom_AIAgent__AttributesMap.AIAgentId))
}

// GetAtt__AssistantArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AssistantArn
func (t *AWS_Wisdom_AIAgent) GetAtt__AssistantArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Wisdom_AIAgent__AttributesMap.AssistantArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Wisdom_AIAgent) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AIAgentArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AIAgentArn
func (t *AWS_Wisdom_AIAgent) GetConventionalOutputAtt__AIAgentArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAIAgentArn", t.GetAtt__AIAgentArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AIAgentId returns a conventionally configured output for an attribute of this resource.
// Attribute: AIAgentId
func (t *AWS_Wisdom_AIAgent) GetConventionalOutputAtt__AIAgentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAIAgentId", t.GetAtt__AIAgentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AssistantArn returns a conventionally configured output for an attribute of this resource.
// Attribute: AssistantArn
func (t *AWS_Wisdom_AIAgent) GetConventionalOutputAtt__AssistantArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssistantArn", t.GetAtt__AssistantArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Wisdom_AIAgent) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Wisdom_AIAgent

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Wisdom_AIAgent) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
