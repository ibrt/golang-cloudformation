// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_wisdom

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Wisdom_MessageTemplate)(nil)
	_ cfz.Resource                   = (*AWS_Wisdom_MessageTemplate)(nil)
)

const (
	// AWS_Wisdom_MessageTemplate__Type is the CloudFormation type for AWS::Wisdom::MessageTemplate.
	AWS_Wisdom_MessageTemplate__Type = "AWS::Wisdom::MessageTemplate"
)

var (
	// AWS_Wisdom_MessageTemplate__AttributesMap reports all the CloudFormation attributes for AWS::Wisdom::MessageTemplate.
	AWS_Wisdom_MessageTemplate__AttributesMap = struct {
		MessageTemplateArn           string
		MessageTemplateContentSha256 string
		MessageTemplateId            string
	}{
		MessageTemplateArn:           "MessageTemplateArn",
		MessageTemplateContentSha256: "MessageTemplateContentSha256",
		MessageTemplateId:            "MessageTemplateId",
	}

	// AWS_Wisdom_MessageTemplate__AttributesSlice reports all the CloudFormation attributes for AWS::Wisdom::MessageTemplate.
	AWS_Wisdom_MessageTemplate__AttributesSlice = []string{
		AWS_Wisdom_MessageTemplate__AttributesMap.MessageTemplateArn,
		AWS_Wisdom_MessageTemplate__AttributesMap.MessageTemplateContentSha256,
		AWS_Wisdom_MessageTemplate__AttributesMap.MessageTemplateId,
	}
)

var (
	// AWS_Wisdom_MessageTemplate__PropertiesMap reports all the CloudFormation properties for AWS::Wisdom::MessageTemplate.
	AWS_Wisdom_MessageTemplate__PropertiesMap = struct {
		ChannelSubtype        string
		Content               string
		DefaultAttributes     string
		Description           string
		GroupingConfiguration string
		KnowledgeBaseArn      string
		Language              string
		Name                  string
		Tags                  string
	}{
		ChannelSubtype:        "ChannelSubtype",
		Content:               "Content",
		DefaultAttributes:     "DefaultAttributes",
		Description:           "Description",
		GroupingConfiguration: "GroupingConfiguration",
		KnowledgeBaseArn:      "KnowledgeBaseArn",
		Language:              "Language",
		Name:                  "Name",
		Tags:                  "Tags",
	}

	// AWS_Wisdom_MessageTemplate__PropertiesSlice reports all the CloudFormation properties for AWS::Wisdom::MessageTemplate.
	AWS_Wisdom_MessageTemplate__PropertiesSlice = []string{
		AWS_Wisdom_MessageTemplate__PropertiesMap.ChannelSubtype,
		AWS_Wisdom_MessageTemplate__PropertiesMap.Content,
		AWS_Wisdom_MessageTemplate__PropertiesMap.DefaultAttributes,
		AWS_Wisdom_MessageTemplate__PropertiesMap.Description,
		AWS_Wisdom_MessageTemplate__PropertiesMap.GroupingConfiguration,
		AWS_Wisdom_MessageTemplate__PropertiesMap.KnowledgeBaseArn,
		AWS_Wisdom_MessageTemplate__PropertiesMap.Language,
		AWS_Wisdom_MessageTemplate__PropertiesMap.Name,
		AWS_Wisdom_MessageTemplate__PropertiesMap.Tags,
	}
)

// AWS_Wisdom_MessageTemplate is a binding for AWS::Wisdom::MessageTemplate.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html
type AWS_Wisdom_MessageTemplate struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ChannelSubtype is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-channelsubtype
	ChannelSubtype cfz.Expression[string] `json:"ChannelSubtype,omitempty"`

	// Content is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-content
	Content cfz.Expression[AWS_Wisdom_MessageTemplate_Content] `json:"Content,omitempty"`

	// DefaultAttributes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-defaultattributes
	DefaultAttributes cfz.Expression[AWS_Wisdom_MessageTemplate_MessageTemplateAttributes] `json:"DefaultAttributes,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// GroupingConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-groupingconfiguration
	GroupingConfiguration cfz.Expression[AWS_Wisdom_MessageTemplate_GroupingConfiguration] `json:"GroupingConfiguration,omitempty"`

	// KnowledgeBaseArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-knowledgebasearn
	KnowledgeBaseArn cfz.Expression[string] `json:"KnowledgeBaseArn,omitempty"`

	// Language is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-language
	Language cfz.Expression[string] `json:"Language,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wisdom-messagetemplate.html#cfn-wisdom-messagetemplate-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Wisdom_MessageTemplate initializes a new *AWS_Wisdom_MessageTemplate.
func New__AWS_Wisdom_MessageTemplate(logicalName string) *AWS_Wisdom_MessageTemplate {
	return &AWS_Wisdom_MessageTemplate{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Wisdom_MessageTemplate) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Wisdom_MessageTemplate) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Wisdom_MessageTemplate) GetType() string {
	return AWS_Wisdom_MessageTemplate__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Wisdom_MessageTemplate) Set__LogicalName(v string) *AWS_Wisdom_MessageTemplate {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Wisdom_MessageTemplate) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Wisdom_MessageTemplate {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Wisdom_MessageTemplate) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Wisdom_MessageTemplate {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Wisdom_MessageTemplate) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Wisdom_MessageTemplate {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Wisdom_MessageTemplate) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Wisdom_MessageTemplate {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Wisdom_MessageTemplate) Set__RequestedOutputs(v []cfz.Output) *AWS_Wisdom_MessageTemplate {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Wisdom_MessageTemplate) Add__RequestedOutputs(v ...cfz.Output) *AWS_Wisdom_MessageTemplate {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ChannelSubtype updates property "ChannelSubtype".
func (t *AWS_Wisdom_MessageTemplate) Set__ChannelSubtype(v cfz.Expression[string]) *AWS_Wisdom_MessageTemplate {
	t.ChannelSubtype = v
	return t
}

// SetV__ChannelSubtype updates property "ChannelSubtype".
func (t *AWS_Wisdom_MessageTemplate) SetV__ChannelSubtype(v string) *AWS_Wisdom_MessageTemplate {
	t.ChannelSubtype = cfz.V(v)
	return t
}

// Set__Content updates property "Content".
func (t *AWS_Wisdom_MessageTemplate) Set__Content(v cfz.Expression[AWS_Wisdom_MessageTemplate_Content]) *AWS_Wisdom_MessageTemplate {
	t.Content = v
	return t
}

// SetV__Content updates property "Content".
func (t *AWS_Wisdom_MessageTemplate) SetV__Content(v AWS_Wisdom_MessageTemplate_Content) *AWS_Wisdom_MessageTemplate {
	t.Content = cfz.V(v)
	return t
}

// Set__DefaultAttributes updates property "DefaultAttributes".
func (t *AWS_Wisdom_MessageTemplate) Set__DefaultAttributes(v cfz.Expression[AWS_Wisdom_MessageTemplate_MessageTemplateAttributes]) *AWS_Wisdom_MessageTemplate {
	t.DefaultAttributes = v
	return t
}

// SetV__DefaultAttributes updates property "DefaultAttributes".
func (t *AWS_Wisdom_MessageTemplate) SetV__DefaultAttributes(v AWS_Wisdom_MessageTemplate_MessageTemplateAttributes) *AWS_Wisdom_MessageTemplate {
	t.DefaultAttributes = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Wisdom_MessageTemplate) Set__Description(v cfz.Expression[string]) *AWS_Wisdom_MessageTemplate {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Wisdom_MessageTemplate) SetV__Description(v string) *AWS_Wisdom_MessageTemplate {
	t.Description = cfz.V(v)
	return t
}

// Set__GroupingConfiguration updates property "GroupingConfiguration".
func (t *AWS_Wisdom_MessageTemplate) Set__GroupingConfiguration(v cfz.Expression[AWS_Wisdom_MessageTemplate_GroupingConfiguration]) *AWS_Wisdom_MessageTemplate {
	t.GroupingConfiguration = v
	return t
}

// SetV__GroupingConfiguration updates property "GroupingConfiguration".
func (t *AWS_Wisdom_MessageTemplate) SetV__GroupingConfiguration(v AWS_Wisdom_MessageTemplate_GroupingConfiguration) *AWS_Wisdom_MessageTemplate {
	t.GroupingConfiguration = cfz.V(v)
	return t
}

// Set__KnowledgeBaseArn updates property "KnowledgeBaseArn".
func (t *AWS_Wisdom_MessageTemplate) Set__KnowledgeBaseArn(v cfz.Expression[string]) *AWS_Wisdom_MessageTemplate {
	t.KnowledgeBaseArn = v
	return t
}

// SetV__KnowledgeBaseArn updates property "KnowledgeBaseArn".
func (t *AWS_Wisdom_MessageTemplate) SetV__KnowledgeBaseArn(v string) *AWS_Wisdom_MessageTemplate {
	t.KnowledgeBaseArn = cfz.V(v)
	return t
}

// Set__Language updates property "Language".
func (t *AWS_Wisdom_MessageTemplate) Set__Language(v cfz.Expression[string]) *AWS_Wisdom_MessageTemplate {
	t.Language = v
	return t
}

// SetV__Language updates property "Language".
func (t *AWS_Wisdom_MessageTemplate) SetV__Language(v string) *AWS_Wisdom_MessageTemplate {
	t.Language = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Wisdom_MessageTemplate) Set__Name(v cfz.Expression[string]) *AWS_Wisdom_MessageTemplate {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Wisdom_MessageTemplate) SetV__Name(v string) *AWS_Wisdom_MessageTemplate {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Wisdom_MessageTemplate) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Wisdom_MessageTemplate {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Wisdom_MessageTemplate) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Wisdom_MessageTemplate {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Wisdom_MessageTemplate) SetSV__Tags(v ...cfz.Tag) *AWS_Wisdom_MessageTemplate {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Wisdom_MessageTemplate) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__MessageTemplateArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MessageTemplateArn
func (t *AWS_Wisdom_MessageTemplate) GetAtt__MessageTemplateArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Wisdom_MessageTemplate__AttributesMap.MessageTemplateArn))
}

// GetAtt__MessageTemplateContentSha256 returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MessageTemplateContentSha256
func (t *AWS_Wisdom_MessageTemplate) GetAtt__MessageTemplateContentSha256() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Wisdom_MessageTemplate__AttributesMap.MessageTemplateContentSha256))
}

// GetAtt__MessageTemplateId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MessageTemplateId
func (t *AWS_Wisdom_MessageTemplate) GetAtt__MessageTemplateId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Wisdom_MessageTemplate__AttributesMap.MessageTemplateId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Wisdom_MessageTemplate) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MessageTemplateArn returns a conventionally configured output for an attribute of this resource.
// Attribute: MessageTemplateArn
func (t *AWS_Wisdom_MessageTemplate) GetConventionalOutputAtt__MessageTemplateArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMessageTemplateArn", t.GetAtt__MessageTemplateArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MessageTemplateContentSha256 returns a conventionally configured output for an attribute of this resource.
// Attribute: MessageTemplateContentSha256
func (t *AWS_Wisdom_MessageTemplate) GetConventionalOutputAtt__MessageTemplateContentSha256(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMessageTemplateContentSha256", t.GetAtt__MessageTemplateContentSha256())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MessageTemplateId returns a conventionally configured output for an attribute of this resource.
// Attribute: MessageTemplateId
func (t *AWS_Wisdom_MessageTemplate) GetConventionalOutputAtt__MessageTemplateId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMessageTemplateId", t.GetAtt__MessageTemplateId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Wisdom_MessageTemplate) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Wisdom_MessageTemplate

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Wisdom_MessageTemplate) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
