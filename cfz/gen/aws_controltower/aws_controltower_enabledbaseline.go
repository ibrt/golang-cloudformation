// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_controltower

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ControlTower_EnabledBaseline)(nil)
	_ cfz.Resource                   = (*AWS_ControlTower_EnabledBaseline)(nil)
)

const (
	// AWS_ControlTower_EnabledBaseline__Type is the CloudFormation type for AWS::ControlTower::EnabledBaseline.
	AWS_ControlTower_EnabledBaseline__Type = "AWS::ControlTower::EnabledBaseline"
)

var (
	// AWS_ControlTower_EnabledBaseline__AttributesMap reports all the CloudFormation attributes for AWS::ControlTower::EnabledBaseline.
	AWS_ControlTower_EnabledBaseline__AttributesMap = struct {
		EnabledBaselineIdentifier string
	}{
		EnabledBaselineIdentifier: "EnabledBaselineIdentifier",
	}

	// AWS_ControlTower_EnabledBaseline__AttributesSlice reports all the CloudFormation attributes for AWS::ControlTower::EnabledBaseline.
	AWS_ControlTower_EnabledBaseline__AttributesSlice = []string{
		AWS_ControlTower_EnabledBaseline__AttributesMap.EnabledBaselineIdentifier,
	}
)

var (
	// AWS_ControlTower_EnabledBaseline__PropertiesMap reports all the CloudFormation properties for AWS::ControlTower::EnabledBaseline.
	AWS_ControlTower_EnabledBaseline__PropertiesMap = struct {
		BaselineIdentifier string
		BaselineVersion    string
		Parameters         string
		Tags               string
		TargetIdentifier   string
	}{
		BaselineIdentifier: "BaselineIdentifier",
		BaselineVersion:    "BaselineVersion",
		Parameters:         "Parameters",
		Tags:               "Tags",
		TargetIdentifier:   "TargetIdentifier",
	}

	// AWS_ControlTower_EnabledBaseline__PropertiesSlice reports all the CloudFormation properties for AWS::ControlTower::EnabledBaseline.
	AWS_ControlTower_EnabledBaseline__PropertiesSlice = []string{
		AWS_ControlTower_EnabledBaseline__PropertiesMap.BaselineIdentifier,
		AWS_ControlTower_EnabledBaseline__PropertiesMap.BaselineVersion,
		AWS_ControlTower_EnabledBaseline__PropertiesMap.Parameters,
		AWS_ControlTower_EnabledBaseline__PropertiesMap.Tags,
		AWS_ControlTower_EnabledBaseline__PropertiesMap.TargetIdentifier,
	}
)

// AWS_ControlTower_EnabledBaseline is a binding for AWS::ControlTower::EnabledBaseline.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html
type AWS_ControlTower_EnabledBaseline struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// BaselineIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-baselineidentifier
	BaselineIdentifier cfz.Expression[string] `json:"BaselineIdentifier,omitempty"`

	// BaselineVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-baselineversion
	BaselineVersion cfz.Expression[string] `json:"BaselineVersion,omitempty"`

	// Parameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-parameters
	Parameters cfz.ExpressionSlice[AWS_ControlTower_EnabledBaseline_Parameter] `json:"Parameters,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TargetIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-controltower-enabledbaseline.html#cfn-controltower-enabledbaseline-targetidentifier
	TargetIdentifier cfz.Expression[string] `json:"TargetIdentifier,omitempty"`
}

// New__AWS_ControlTower_EnabledBaseline initializes a new *AWS_ControlTower_EnabledBaseline.
func New__AWS_ControlTower_EnabledBaseline(logicalName string) *AWS_ControlTower_EnabledBaseline {
	return &AWS_ControlTower_EnabledBaseline{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ControlTower_EnabledBaseline) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ControlTower_EnabledBaseline) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ControlTower_EnabledBaseline) GetType() string {
	return AWS_ControlTower_EnabledBaseline__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ControlTower_EnabledBaseline) Set__LogicalName(v string) *AWS_ControlTower_EnabledBaseline {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ControlTower_EnabledBaseline) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ControlTower_EnabledBaseline {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ControlTower_EnabledBaseline) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ControlTower_EnabledBaseline {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ControlTower_EnabledBaseline) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ControlTower_EnabledBaseline {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ControlTower_EnabledBaseline) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ControlTower_EnabledBaseline {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ControlTower_EnabledBaseline) Set__RequestedOutputs(v []cfz.Output) *AWS_ControlTower_EnabledBaseline {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ControlTower_EnabledBaseline) Add__RequestedOutputs(v ...cfz.Output) *AWS_ControlTower_EnabledBaseline {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__BaselineIdentifier updates property "BaselineIdentifier".
func (t *AWS_ControlTower_EnabledBaseline) Set__BaselineIdentifier(v cfz.Expression[string]) *AWS_ControlTower_EnabledBaseline {
	t.BaselineIdentifier = v
	return t
}

// SetV__BaselineIdentifier updates property "BaselineIdentifier".
func (t *AWS_ControlTower_EnabledBaseline) SetV__BaselineIdentifier(v string) *AWS_ControlTower_EnabledBaseline {
	t.BaselineIdentifier = cfz.V(v)
	return t
}

// Set__BaselineVersion updates property "BaselineVersion".
func (t *AWS_ControlTower_EnabledBaseline) Set__BaselineVersion(v cfz.Expression[string]) *AWS_ControlTower_EnabledBaseline {
	t.BaselineVersion = v
	return t
}

// SetV__BaselineVersion updates property "BaselineVersion".
func (t *AWS_ControlTower_EnabledBaseline) SetV__BaselineVersion(v string) *AWS_ControlTower_EnabledBaseline {
	t.BaselineVersion = cfz.V(v)
	return t
}

// Set__Parameters updates property "Parameters".
func (t *AWS_ControlTower_EnabledBaseline) Set__Parameters(v cfz.ExpressionSlice[AWS_ControlTower_EnabledBaseline_Parameter]) *AWS_ControlTower_EnabledBaseline {
	t.Parameters = v
	return t
}

// SetS__Parameters updates property "Parameters".
func (t *AWS_ControlTower_EnabledBaseline) SetS__Parameters(v ...cfz.Expression[AWS_ControlTower_EnabledBaseline_Parameter]) *AWS_ControlTower_EnabledBaseline {
	t.Parameters = cfz.S(v...)
	return t
}

// SetSV__Parameters updates property "Parameters".
func (t *AWS_ControlTower_EnabledBaseline) SetSV__Parameters(v ...AWS_ControlTower_EnabledBaseline_Parameter) *AWS_ControlTower_EnabledBaseline {
	t.Parameters = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ControlTower_EnabledBaseline) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ControlTower_EnabledBaseline {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ControlTower_EnabledBaseline) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ControlTower_EnabledBaseline {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ControlTower_EnabledBaseline) SetSV__Tags(v ...cfz.Tag) *AWS_ControlTower_EnabledBaseline {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TargetIdentifier updates property "TargetIdentifier".
func (t *AWS_ControlTower_EnabledBaseline) Set__TargetIdentifier(v cfz.Expression[string]) *AWS_ControlTower_EnabledBaseline {
	t.TargetIdentifier = v
	return t
}

// SetV__TargetIdentifier updates property "TargetIdentifier".
func (t *AWS_ControlTower_EnabledBaseline) SetV__TargetIdentifier(v string) *AWS_ControlTower_EnabledBaseline {
	t.TargetIdentifier = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ControlTower_EnabledBaseline) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__EnabledBaselineIdentifier returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EnabledBaselineIdentifier
func (t *AWS_ControlTower_EnabledBaseline) GetAtt__EnabledBaselineIdentifier() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ControlTower_EnabledBaseline__AttributesMap.EnabledBaselineIdentifier))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ControlTower_EnabledBaseline) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EnabledBaselineIdentifier returns a conventionally configured output for an attribute of this resource.
// Attribute: EnabledBaselineIdentifier
func (t *AWS_ControlTower_EnabledBaseline) GetConventionalOutputAtt__EnabledBaselineIdentifier(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEnabledBaselineIdentifier", t.GetAtt__EnabledBaselineIdentifier())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ControlTower_EnabledBaseline) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ControlTower_EnabledBaseline

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ControlTower_EnabledBaseline) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
