// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_fms

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_FMS_Policy)(nil)
	_ cfz.Resource                   = (*AWS_FMS_Policy)(nil)
)

const (
	// AWS_FMS_Policy__Type is the CloudFormation type for AWS::FMS::Policy.
	AWS_FMS_Policy__Type = "AWS::FMS::Policy"
)

var (
	// AWS_FMS_Policy__AttributesMap reports all the CloudFormation attributes for AWS::FMS::Policy.
	AWS_FMS_Policy__AttributesMap = struct {
		Arn string
		Id  string
	}{
		Arn: "Arn",
		Id:  "Id",
	}

	// AWS_FMS_Policy__AttributesSlice reports all the CloudFormation attributes for AWS::FMS::Policy.
	AWS_FMS_Policy__AttributesSlice = []string{
		AWS_FMS_Policy__AttributesMap.Arn,
		AWS_FMS_Policy__AttributesMap.Id,
	}
)

var (
	// AWS_FMS_Policy__PropertiesMap reports all the CloudFormation properties for AWS::FMS::Policy.
	AWS_FMS_Policy__PropertiesMap = struct {
		DeleteAllPolicyResources  string
		ExcludeMap                string
		ExcludeResourceTags       string
		IncludeMap                string
		PolicyDescription         string
		PolicyName                string
		RemediationEnabled        string
		ResourceSetIds            string
		ResourceTags              string
		ResourceType              string
		ResourceTypeList          string
		ResourcesCleanUp          string
		SecurityServicePolicyData string
		Tags                      string
	}{
		DeleteAllPolicyResources:  "DeleteAllPolicyResources",
		ExcludeMap:                "ExcludeMap",
		ExcludeResourceTags:       "ExcludeResourceTags",
		IncludeMap:                "IncludeMap",
		PolicyDescription:         "PolicyDescription",
		PolicyName:                "PolicyName",
		RemediationEnabled:        "RemediationEnabled",
		ResourceSetIds:            "ResourceSetIds",
		ResourceTags:              "ResourceTags",
		ResourceType:              "ResourceType",
		ResourceTypeList:          "ResourceTypeList",
		ResourcesCleanUp:          "ResourcesCleanUp",
		SecurityServicePolicyData: "SecurityServicePolicyData",
		Tags:                      "Tags",
	}

	// AWS_FMS_Policy__PropertiesSlice reports all the CloudFormation properties for AWS::FMS::Policy.
	AWS_FMS_Policy__PropertiesSlice = []string{
		AWS_FMS_Policy__PropertiesMap.DeleteAllPolicyResources,
		AWS_FMS_Policy__PropertiesMap.ExcludeMap,
		AWS_FMS_Policy__PropertiesMap.ExcludeResourceTags,
		AWS_FMS_Policy__PropertiesMap.IncludeMap,
		AWS_FMS_Policy__PropertiesMap.PolicyDescription,
		AWS_FMS_Policy__PropertiesMap.PolicyName,
		AWS_FMS_Policy__PropertiesMap.RemediationEnabled,
		AWS_FMS_Policy__PropertiesMap.ResourceSetIds,
		AWS_FMS_Policy__PropertiesMap.ResourceTags,
		AWS_FMS_Policy__PropertiesMap.ResourceType,
		AWS_FMS_Policy__PropertiesMap.ResourceTypeList,
		AWS_FMS_Policy__PropertiesMap.ResourcesCleanUp,
		AWS_FMS_Policy__PropertiesMap.SecurityServicePolicyData,
		AWS_FMS_Policy__PropertiesMap.Tags,
	}
)

// AWS_FMS_Policy is a binding for AWS::FMS::Policy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html
type AWS_FMS_Policy struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DeleteAllPolicyResources is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-deleteallpolicyresources
	DeleteAllPolicyResources cfz.Expression[bool] `json:"DeleteAllPolicyResources,omitempty"`

	// ExcludeMap is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-excludemap
	ExcludeMap cfz.Expression[AWS_FMS_Policy_IEMap] `json:"ExcludeMap,omitempty"`

	// ExcludeResourceTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-excluderesourcetags
	ExcludeResourceTags cfz.Expression[bool] `json:"ExcludeResourceTags,omitempty"`

	// IncludeMap is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-includemap
	IncludeMap cfz.Expression[AWS_FMS_Policy_IEMap] `json:"IncludeMap,omitempty"`

	// PolicyDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-policydescription
	PolicyDescription cfz.Expression[string] `json:"PolicyDescription,omitempty"`

	// PolicyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-policyname
	PolicyName cfz.Expression[string] `json:"PolicyName,omitempty"`

	// RemediationEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-remediationenabled
	RemediationEnabled cfz.Expression[bool] `json:"RemediationEnabled,omitempty"`

	// ResourceSetIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcesetids
	ResourceSetIds cfz.ExpressionSlice[string] `json:"ResourceSetIds,omitempty"`

	// ResourceTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetags
	ResourceTags cfz.ExpressionSlice[AWS_FMS_Policy_ResourceTag] `json:"ResourceTags,omitempty"`

	// ResourceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetype
	ResourceType cfz.Expression[string] `json:"ResourceType,omitempty"`

	// ResourceTypeList is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcetypelist
	ResourceTypeList cfz.ExpressionSlice[string] `json:"ResourceTypeList,omitempty"`

	// ResourcesCleanUp is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-resourcescleanup
	ResourcesCleanUp cfz.Expression[bool] `json:"ResourcesCleanUp,omitempty"`

	// SecurityServicePolicyData is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-securityservicepolicydata
	SecurityServicePolicyData cfz.Expression[AWS_FMS_Policy_SecurityServicePolicyData] `json:"SecurityServicePolicyData,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-fms-policy.html#cfn-fms-policy-tags
	Tags cfz.ExpressionSlice[AWS_FMS_Policy_PolicyTag] `json:"Tags,omitempty"`
}

// New__AWS_FMS_Policy initializes a new *AWS_FMS_Policy.
func New__AWS_FMS_Policy(logicalName string) *AWS_FMS_Policy {
	return &AWS_FMS_Policy{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_FMS_Policy) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_FMS_Policy) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_FMS_Policy) GetType() string {
	return AWS_FMS_Policy__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_FMS_Policy) Set__LogicalName(v string) *AWS_FMS_Policy {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_FMS_Policy) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_FMS_Policy {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_FMS_Policy) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_FMS_Policy {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_FMS_Policy) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_FMS_Policy {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_FMS_Policy) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_FMS_Policy {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_FMS_Policy) Set__RequestedOutputs(v []cfz.Output) *AWS_FMS_Policy {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_FMS_Policy) Add__RequestedOutputs(v ...cfz.Output) *AWS_FMS_Policy {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DeleteAllPolicyResources updates property "DeleteAllPolicyResources".
func (t *AWS_FMS_Policy) Set__DeleteAllPolicyResources(v cfz.Expression[bool]) *AWS_FMS_Policy {
	t.DeleteAllPolicyResources = v
	return t
}

// SetV__DeleteAllPolicyResources updates property "DeleteAllPolicyResources".
func (t *AWS_FMS_Policy) SetV__DeleteAllPolicyResources(v bool) *AWS_FMS_Policy {
	t.DeleteAllPolicyResources = cfz.V(v)
	return t
}

// Set__ExcludeMap updates property "ExcludeMap".
func (t *AWS_FMS_Policy) Set__ExcludeMap(v cfz.Expression[AWS_FMS_Policy_IEMap]) *AWS_FMS_Policy {
	t.ExcludeMap = v
	return t
}

// SetV__ExcludeMap updates property "ExcludeMap".
func (t *AWS_FMS_Policy) SetV__ExcludeMap(v AWS_FMS_Policy_IEMap) *AWS_FMS_Policy {
	t.ExcludeMap = cfz.V(v)
	return t
}

// Set__ExcludeResourceTags updates property "ExcludeResourceTags".
func (t *AWS_FMS_Policy) Set__ExcludeResourceTags(v cfz.Expression[bool]) *AWS_FMS_Policy {
	t.ExcludeResourceTags = v
	return t
}

// SetV__ExcludeResourceTags updates property "ExcludeResourceTags".
func (t *AWS_FMS_Policy) SetV__ExcludeResourceTags(v bool) *AWS_FMS_Policy {
	t.ExcludeResourceTags = cfz.V(v)
	return t
}

// Set__IncludeMap updates property "IncludeMap".
func (t *AWS_FMS_Policy) Set__IncludeMap(v cfz.Expression[AWS_FMS_Policy_IEMap]) *AWS_FMS_Policy {
	t.IncludeMap = v
	return t
}

// SetV__IncludeMap updates property "IncludeMap".
func (t *AWS_FMS_Policy) SetV__IncludeMap(v AWS_FMS_Policy_IEMap) *AWS_FMS_Policy {
	t.IncludeMap = cfz.V(v)
	return t
}

// Set__PolicyDescription updates property "PolicyDescription".
func (t *AWS_FMS_Policy) Set__PolicyDescription(v cfz.Expression[string]) *AWS_FMS_Policy {
	t.PolicyDescription = v
	return t
}

// SetV__PolicyDescription updates property "PolicyDescription".
func (t *AWS_FMS_Policy) SetV__PolicyDescription(v string) *AWS_FMS_Policy {
	t.PolicyDescription = cfz.V(v)
	return t
}

// Set__PolicyName updates property "PolicyName".
func (t *AWS_FMS_Policy) Set__PolicyName(v cfz.Expression[string]) *AWS_FMS_Policy {
	t.PolicyName = v
	return t
}

// SetV__PolicyName updates property "PolicyName".
func (t *AWS_FMS_Policy) SetV__PolicyName(v string) *AWS_FMS_Policy {
	t.PolicyName = cfz.V(v)
	return t
}

// Set__RemediationEnabled updates property "RemediationEnabled".
func (t *AWS_FMS_Policy) Set__RemediationEnabled(v cfz.Expression[bool]) *AWS_FMS_Policy {
	t.RemediationEnabled = v
	return t
}

// SetV__RemediationEnabled updates property "RemediationEnabled".
func (t *AWS_FMS_Policy) SetV__RemediationEnabled(v bool) *AWS_FMS_Policy {
	t.RemediationEnabled = cfz.V(v)
	return t
}

// Set__ResourceSetIds updates property "ResourceSetIds".
func (t *AWS_FMS_Policy) Set__ResourceSetIds(v cfz.ExpressionSlice[string]) *AWS_FMS_Policy {
	t.ResourceSetIds = v
	return t
}

// SetS__ResourceSetIds updates property "ResourceSetIds".
func (t *AWS_FMS_Policy) SetS__ResourceSetIds(v ...cfz.Expression[string]) *AWS_FMS_Policy {
	t.ResourceSetIds = cfz.S(v...)
	return t
}

// SetSV__ResourceSetIds updates property "ResourceSetIds".
func (t *AWS_FMS_Policy) SetSV__ResourceSetIds(v ...string) *AWS_FMS_Policy {
	t.ResourceSetIds = cfz.SV(v...)
	return t
}

// Set__ResourceTags updates property "ResourceTags".
func (t *AWS_FMS_Policy) Set__ResourceTags(v cfz.ExpressionSlice[AWS_FMS_Policy_ResourceTag]) *AWS_FMS_Policy {
	t.ResourceTags = v
	return t
}

// SetS__ResourceTags updates property "ResourceTags".
func (t *AWS_FMS_Policy) SetS__ResourceTags(v ...cfz.Expression[AWS_FMS_Policy_ResourceTag]) *AWS_FMS_Policy {
	t.ResourceTags = cfz.S(v...)
	return t
}

// SetSV__ResourceTags updates property "ResourceTags".
func (t *AWS_FMS_Policy) SetSV__ResourceTags(v ...AWS_FMS_Policy_ResourceTag) *AWS_FMS_Policy {
	t.ResourceTags = cfz.SV(v...)
	return t
}

// Set__ResourceType updates property "ResourceType".
func (t *AWS_FMS_Policy) Set__ResourceType(v cfz.Expression[string]) *AWS_FMS_Policy {
	t.ResourceType = v
	return t
}

// SetV__ResourceType updates property "ResourceType".
func (t *AWS_FMS_Policy) SetV__ResourceType(v string) *AWS_FMS_Policy {
	t.ResourceType = cfz.V(v)
	return t
}

// Set__ResourceTypeList updates property "ResourceTypeList".
func (t *AWS_FMS_Policy) Set__ResourceTypeList(v cfz.ExpressionSlice[string]) *AWS_FMS_Policy {
	t.ResourceTypeList = v
	return t
}

// SetS__ResourceTypeList updates property "ResourceTypeList".
func (t *AWS_FMS_Policy) SetS__ResourceTypeList(v ...cfz.Expression[string]) *AWS_FMS_Policy {
	t.ResourceTypeList = cfz.S(v...)
	return t
}

// SetSV__ResourceTypeList updates property "ResourceTypeList".
func (t *AWS_FMS_Policy) SetSV__ResourceTypeList(v ...string) *AWS_FMS_Policy {
	t.ResourceTypeList = cfz.SV(v...)
	return t
}

// Set__ResourcesCleanUp updates property "ResourcesCleanUp".
func (t *AWS_FMS_Policy) Set__ResourcesCleanUp(v cfz.Expression[bool]) *AWS_FMS_Policy {
	t.ResourcesCleanUp = v
	return t
}

// SetV__ResourcesCleanUp updates property "ResourcesCleanUp".
func (t *AWS_FMS_Policy) SetV__ResourcesCleanUp(v bool) *AWS_FMS_Policy {
	t.ResourcesCleanUp = cfz.V(v)
	return t
}

// Set__SecurityServicePolicyData updates property "SecurityServicePolicyData".
func (t *AWS_FMS_Policy) Set__SecurityServicePolicyData(v cfz.Expression[AWS_FMS_Policy_SecurityServicePolicyData]) *AWS_FMS_Policy {
	t.SecurityServicePolicyData = v
	return t
}

// SetV__SecurityServicePolicyData updates property "SecurityServicePolicyData".
func (t *AWS_FMS_Policy) SetV__SecurityServicePolicyData(v AWS_FMS_Policy_SecurityServicePolicyData) *AWS_FMS_Policy {
	t.SecurityServicePolicyData = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_FMS_Policy) Set__Tags(v cfz.ExpressionSlice[AWS_FMS_Policy_PolicyTag]) *AWS_FMS_Policy {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_FMS_Policy) SetS__Tags(v ...cfz.Expression[AWS_FMS_Policy_PolicyTag]) *AWS_FMS_Policy {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_FMS_Policy) SetSV__Tags(v ...AWS_FMS_Policy_PolicyTag) *AWS_FMS_Policy {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_FMS_Policy) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_FMS_Policy) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_FMS_Policy__AttributesMap.Arn))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_FMS_Policy) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_FMS_Policy__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_FMS_Policy) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_FMS_Policy) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_FMS_Policy) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_FMS_Policy) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_FMS_Policy

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_FMS_Policy) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
