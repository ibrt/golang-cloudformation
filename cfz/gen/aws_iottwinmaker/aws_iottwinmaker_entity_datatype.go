// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iottwinmaker

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoTTwinMaker_Entity_DataType__Type is the CloudFormation type for AWS::IoTTwinMaker::Entity.DataType.
	AWS_IoTTwinMaker_Entity_DataType__Type = "AWS::IoTTwinMaker::Entity.DataType"
)

var (
	// AWS_IoTTwinMaker_Entity_DataType__PropertiesMap reports all the CloudFormation properties for AWS::IoTTwinMaker::Entity.DataType.
	AWS_IoTTwinMaker_Entity_DataType__PropertiesMap = struct {
		AllowedValues string
		NestedType    string
		Relationship  string
		Type          string
		UnitOfMeasure string
	}{
		AllowedValues: "AllowedValues",
		NestedType:    "NestedType",
		Relationship:  "Relationship",
		Type:          "Type",
		UnitOfMeasure: "UnitOfMeasure",
	}

	// AWS_IoTTwinMaker_Entity_DataType__PropertiesSlice reports all the CloudFormation properties for AWS::IoTTwinMaker::Entity.DataType.
	AWS_IoTTwinMaker_Entity_DataType__PropertiesSlice = []string{
		AWS_IoTTwinMaker_Entity_DataType__PropertiesMap.AllowedValues,
		AWS_IoTTwinMaker_Entity_DataType__PropertiesMap.NestedType,
		AWS_IoTTwinMaker_Entity_DataType__PropertiesMap.Relationship,
		AWS_IoTTwinMaker_Entity_DataType__PropertiesMap.Type,
		AWS_IoTTwinMaker_Entity_DataType__PropertiesMap.UnitOfMeasure,
	}
)

// AWS_IoTTwinMaker_Entity_DataType is a binding for AWS::IoTTwinMaker::Entity.DataType.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datatype.html
type AWS_IoTTwinMaker_Entity_DataType struct {
	// AllowedValues is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datatype.html#cfn-iottwinmaker-entity-datatype-allowedvalues
	AllowedValues cfz.ExpressionSlice[AWS_IoTTwinMaker_Entity_DataValue] `json:"AllowedValues,omitempty"`

	// NestedType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datatype.html#cfn-iottwinmaker-entity-datatype-nestedtype
	NestedType cfz.Expression[AWS_IoTTwinMaker_Entity_DataType] `json:"NestedType,omitempty"`

	// Relationship is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datatype.html#cfn-iottwinmaker-entity-datatype-relationship
	Relationship cfz.Expression[AWS_IoTTwinMaker_Entity_Relationship] `json:"Relationship,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datatype.html#cfn-iottwinmaker-entity-datatype-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// UnitOfMeasure is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datatype.html#cfn-iottwinmaker-entity-datatype-unitofmeasure
	UnitOfMeasure cfz.Expression[string] `json:"UnitOfMeasure,omitempty"`
}

// New__AWS_IoTTwinMaker_Entity_DataType initializes a new AWS_IoTTwinMaker_Entity_DataType.
func New__AWS_IoTTwinMaker_Entity_DataType() AWS_IoTTwinMaker_Entity_DataType {
	return AWS_IoTTwinMaker_Entity_DataType{}
}

// GetType returns the CloudFormation type.
func (AWS_IoTTwinMaker_Entity_DataType) GetType() string {
	return AWS_IoTTwinMaker_Entity_DataType__Type
}

// Set__AllowedValues updates property "AllowedValues".
func (t AWS_IoTTwinMaker_Entity_DataType) Set__AllowedValues(v cfz.ExpressionSlice[AWS_IoTTwinMaker_Entity_DataValue]) AWS_IoTTwinMaker_Entity_DataType {
	t.AllowedValues = v
	return t
}

// SetS__AllowedValues updates property "AllowedValues".
func (t AWS_IoTTwinMaker_Entity_DataType) SetS__AllowedValues(v ...cfz.Expression[AWS_IoTTwinMaker_Entity_DataValue]) AWS_IoTTwinMaker_Entity_DataType {
	t.AllowedValues = cfz.S(v...)
	return t
}

// SetSV__AllowedValues updates property "AllowedValues".
func (t AWS_IoTTwinMaker_Entity_DataType) SetSV__AllowedValues(v ...AWS_IoTTwinMaker_Entity_DataValue) AWS_IoTTwinMaker_Entity_DataType {
	t.AllowedValues = cfz.SV(v...)
	return t
}

// Set__NestedType updates property "NestedType".
func (t AWS_IoTTwinMaker_Entity_DataType) Set__NestedType(v cfz.Expression[AWS_IoTTwinMaker_Entity_DataType]) AWS_IoTTwinMaker_Entity_DataType {
	t.NestedType = v
	return t
}

// SetV__NestedType updates property "NestedType".
func (t AWS_IoTTwinMaker_Entity_DataType) SetV__NestedType(v AWS_IoTTwinMaker_Entity_DataType) AWS_IoTTwinMaker_Entity_DataType {
	t.NestedType = cfz.V(v)
	return t
}

// Set__Relationship updates property "Relationship".
func (t AWS_IoTTwinMaker_Entity_DataType) Set__Relationship(v cfz.Expression[AWS_IoTTwinMaker_Entity_Relationship]) AWS_IoTTwinMaker_Entity_DataType {
	t.Relationship = v
	return t
}

// SetV__Relationship updates property "Relationship".
func (t AWS_IoTTwinMaker_Entity_DataType) SetV__Relationship(v AWS_IoTTwinMaker_Entity_Relationship) AWS_IoTTwinMaker_Entity_DataType {
	t.Relationship = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t AWS_IoTTwinMaker_Entity_DataType) Set__Type(v cfz.Expression[string]) AWS_IoTTwinMaker_Entity_DataType {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t AWS_IoTTwinMaker_Entity_DataType) SetV__Type(v string) AWS_IoTTwinMaker_Entity_DataType {
	t.Type = cfz.V(v)
	return t
}

// Set__UnitOfMeasure updates property "UnitOfMeasure".
func (t AWS_IoTTwinMaker_Entity_DataType) Set__UnitOfMeasure(v cfz.Expression[string]) AWS_IoTTwinMaker_Entity_DataType {
	t.UnitOfMeasure = v
	return t
}

// SetV__UnitOfMeasure updates property "UnitOfMeasure".
func (t AWS_IoTTwinMaker_Entity_DataType) SetV__UnitOfMeasure(v string) AWS_IoTTwinMaker_Entity_DataType {
	t.UnitOfMeasure = cfz.V(v)
	return t
}
