// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iottwinmaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IoTTwinMaker_Scene)(nil)
	_ cfz.Resource                   = (*AWS_IoTTwinMaker_Scene)(nil)
)

const (
	// AWS_IoTTwinMaker_Scene__Type is the CloudFormation type for AWS::IoTTwinMaker::Scene.
	AWS_IoTTwinMaker_Scene__Type = "AWS::IoTTwinMaker::Scene"
)

var (
	// AWS_IoTTwinMaker_Scene__AttributesMap reports all the CloudFormation attributes for AWS::IoTTwinMaker::Scene.
	AWS_IoTTwinMaker_Scene__AttributesMap = struct {
		Arn              string
		CreationDateTime string
		UpdateDateTime   string
	}{
		Arn:              "Arn",
		CreationDateTime: "CreationDateTime",
		UpdateDateTime:   "UpdateDateTime",
	}

	// AWS_IoTTwinMaker_Scene__AttributesSlice reports all the CloudFormation attributes for AWS::IoTTwinMaker::Scene.
	AWS_IoTTwinMaker_Scene__AttributesSlice = []string{
		AWS_IoTTwinMaker_Scene__AttributesMap.Arn,
		AWS_IoTTwinMaker_Scene__AttributesMap.CreationDateTime,
		AWS_IoTTwinMaker_Scene__AttributesMap.UpdateDateTime,
	}
)

var (
	// AWS_IoTTwinMaker_Scene__PropertiesMap reports all the CloudFormation properties for AWS::IoTTwinMaker::Scene.
	AWS_IoTTwinMaker_Scene__PropertiesMap = struct {
		Capabilities    string
		ContentLocation string
		Description     string
		SceneId         string
		SceneMetadata   string
		Tags            string
		WorkspaceId     string
	}{
		Capabilities:    "Capabilities",
		ContentLocation: "ContentLocation",
		Description:     "Description",
		SceneId:         "SceneId",
		SceneMetadata:   "SceneMetadata",
		Tags:            "Tags",
		WorkspaceId:     "WorkspaceId",
	}

	// AWS_IoTTwinMaker_Scene__PropertiesSlice reports all the CloudFormation properties for AWS::IoTTwinMaker::Scene.
	AWS_IoTTwinMaker_Scene__PropertiesSlice = []string{
		AWS_IoTTwinMaker_Scene__PropertiesMap.Capabilities,
		AWS_IoTTwinMaker_Scene__PropertiesMap.ContentLocation,
		AWS_IoTTwinMaker_Scene__PropertiesMap.Description,
		AWS_IoTTwinMaker_Scene__PropertiesMap.SceneId,
		AWS_IoTTwinMaker_Scene__PropertiesMap.SceneMetadata,
		AWS_IoTTwinMaker_Scene__PropertiesMap.Tags,
		AWS_IoTTwinMaker_Scene__PropertiesMap.WorkspaceId,
	}
)

// AWS_IoTTwinMaker_Scene is a binding for AWS::IoTTwinMaker::Scene.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html
type AWS_IoTTwinMaker_Scene struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Capabilities is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-capabilities
	Capabilities cfz.ExpressionSlice[string] `json:"Capabilities,omitempty"`

	// ContentLocation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-contentlocation
	ContentLocation cfz.Expression[string] `json:"ContentLocation,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// SceneId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-sceneid
	SceneId cfz.Expression[string] `json:"SceneId,omitempty"`

	// SceneMetadata is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-scenemetadata
	SceneMetadata cfz.ExpressionMap[string] `json:"SceneMetadata,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// WorkspaceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-workspaceid
	WorkspaceId cfz.Expression[string] `json:"WorkspaceId,omitempty"`
}

// New__AWS_IoTTwinMaker_Scene initializes a new *AWS_IoTTwinMaker_Scene.
func New__AWS_IoTTwinMaker_Scene(logicalName string) *AWS_IoTTwinMaker_Scene {
	return &AWS_IoTTwinMaker_Scene{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IoTTwinMaker_Scene) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IoTTwinMaker_Scene) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IoTTwinMaker_Scene) GetType() string {
	return AWS_IoTTwinMaker_Scene__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IoTTwinMaker_Scene) Set__LogicalName(v string) *AWS_IoTTwinMaker_Scene {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IoTTwinMaker_Scene) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IoTTwinMaker_Scene {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IoTTwinMaker_Scene) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IoTTwinMaker_Scene {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IoTTwinMaker_Scene) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IoTTwinMaker_Scene {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IoTTwinMaker_Scene) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IoTTwinMaker_Scene {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IoTTwinMaker_Scene) Set__RequestedOutputs(v []cfz.Output) *AWS_IoTTwinMaker_Scene {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IoTTwinMaker_Scene) Add__RequestedOutputs(v ...cfz.Output) *AWS_IoTTwinMaker_Scene {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Capabilities updates property "Capabilities".
func (t *AWS_IoTTwinMaker_Scene) Set__Capabilities(v cfz.ExpressionSlice[string]) *AWS_IoTTwinMaker_Scene {
	t.Capabilities = v
	return t
}

// SetS__Capabilities updates property "Capabilities".
func (t *AWS_IoTTwinMaker_Scene) SetS__Capabilities(v ...cfz.Expression[string]) *AWS_IoTTwinMaker_Scene {
	t.Capabilities = cfz.S(v...)
	return t
}

// SetSV__Capabilities updates property "Capabilities".
func (t *AWS_IoTTwinMaker_Scene) SetSV__Capabilities(v ...string) *AWS_IoTTwinMaker_Scene {
	t.Capabilities = cfz.SV(v...)
	return t
}

// Set__ContentLocation updates property "ContentLocation".
func (t *AWS_IoTTwinMaker_Scene) Set__ContentLocation(v cfz.Expression[string]) *AWS_IoTTwinMaker_Scene {
	t.ContentLocation = v
	return t
}

// SetV__ContentLocation updates property "ContentLocation".
func (t *AWS_IoTTwinMaker_Scene) SetV__ContentLocation(v string) *AWS_IoTTwinMaker_Scene {
	t.ContentLocation = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_IoTTwinMaker_Scene) Set__Description(v cfz.Expression[string]) *AWS_IoTTwinMaker_Scene {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_IoTTwinMaker_Scene) SetV__Description(v string) *AWS_IoTTwinMaker_Scene {
	t.Description = cfz.V(v)
	return t
}

// Set__SceneId updates property "SceneId".
func (t *AWS_IoTTwinMaker_Scene) Set__SceneId(v cfz.Expression[string]) *AWS_IoTTwinMaker_Scene {
	t.SceneId = v
	return t
}

// SetV__SceneId updates property "SceneId".
func (t *AWS_IoTTwinMaker_Scene) SetV__SceneId(v string) *AWS_IoTTwinMaker_Scene {
	t.SceneId = cfz.V(v)
	return t
}

// Set__SceneMetadata updates property "SceneMetadata".
func (t *AWS_IoTTwinMaker_Scene) Set__SceneMetadata(v cfz.ExpressionMap[string]) *AWS_IoTTwinMaker_Scene {
	t.SceneMetadata = v
	return t
}

// SetM__SceneMetadata updates property "SceneMetadata".
func (t *AWS_IoTTwinMaker_Scene) SetM__SceneMetadata(v ...map[string]cfz.Expression[string]) *AWS_IoTTwinMaker_Scene {
	t.SceneMetadata = cfz.M(v...)
	return t
}

// SetMV__SceneMetadata updates property "SceneMetadata".
func (t *AWS_IoTTwinMaker_Scene) SetMV__SceneMetadata(v ...map[string]string) *AWS_IoTTwinMaker_Scene {
	t.SceneMetadata = cfz.MV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IoTTwinMaker_Scene) Set__Tags(v cfz.ExpressionMap[string]) *AWS_IoTTwinMaker_Scene {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_IoTTwinMaker_Scene) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_IoTTwinMaker_Scene {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_IoTTwinMaker_Scene) SetMV__Tags(v ...map[string]string) *AWS_IoTTwinMaker_Scene {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__WorkspaceId updates property "WorkspaceId".
func (t *AWS_IoTTwinMaker_Scene) Set__WorkspaceId(v cfz.Expression[string]) *AWS_IoTTwinMaker_Scene {
	t.WorkspaceId = v
	return t
}

// SetV__WorkspaceId updates property "WorkspaceId".
func (t *AWS_IoTTwinMaker_Scene) SetV__WorkspaceId(v string) *AWS_IoTTwinMaker_Scene {
	t.WorkspaceId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IoTTwinMaker_Scene) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IoTTwinMaker_Scene) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_Scene__AttributesMap.Arn))
}

// GetAtt__CreationDateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationDateTime
func (t *AWS_IoTTwinMaker_Scene) GetAtt__CreationDateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_Scene__AttributesMap.CreationDateTime))
}

// GetAtt__UpdateDateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdateDateTime
func (t *AWS_IoTTwinMaker_Scene) GetAtt__UpdateDateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_Scene__AttributesMap.UpdateDateTime))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IoTTwinMaker_Scene) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IoTTwinMaker_Scene) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationDateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationDateTime
func (t *AWS_IoTTwinMaker_Scene) GetConventionalOutputAtt__CreationDateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationDateTime", t.GetAtt__CreationDateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdateDateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdateDateTime
func (t *AWS_IoTTwinMaker_Scene) GetConventionalOutputAtt__UpdateDateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdateDateTime", t.GetAtt__UpdateDateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IoTTwinMaker_Scene) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IoTTwinMaker_Scene

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IoTTwinMaker_Scene) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
