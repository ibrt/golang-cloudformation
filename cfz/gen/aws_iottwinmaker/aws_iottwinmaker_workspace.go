// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iottwinmaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IoTTwinMaker_Workspace)(nil)
	_ cfz.Resource                   = (*AWS_IoTTwinMaker_Workspace)(nil)
)

const (
	// AWS_IoTTwinMaker_Workspace__Type is the CloudFormation type for AWS::IoTTwinMaker::Workspace.
	AWS_IoTTwinMaker_Workspace__Type = "AWS::IoTTwinMaker::Workspace"
)

var (
	// AWS_IoTTwinMaker_Workspace__AttributesMap reports all the CloudFormation attributes for AWS::IoTTwinMaker::Workspace.
	AWS_IoTTwinMaker_Workspace__AttributesMap = struct {
		Arn              string
		CreationDateTime string
		UpdateDateTime   string
	}{
		Arn:              "Arn",
		CreationDateTime: "CreationDateTime",
		UpdateDateTime:   "UpdateDateTime",
	}

	// AWS_IoTTwinMaker_Workspace__AttributesSlice reports all the CloudFormation attributes for AWS::IoTTwinMaker::Workspace.
	AWS_IoTTwinMaker_Workspace__AttributesSlice = []string{
		AWS_IoTTwinMaker_Workspace__AttributesMap.Arn,
		AWS_IoTTwinMaker_Workspace__AttributesMap.CreationDateTime,
		AWS_IoTTwinMaker_Workspace__AttributesMap.UpdateDateTime,
	}
)

var (
	// AWS_IoTTwinMaker_Workspace__PropertiesMap reports all the CloudFormation properties for AWS::IoTTwinMaker::Workspace.
	AWS_IoTTwinMaker_Workspace__PropertiesMap = struct {
		Description string
		Role        string
		S3Location  string
		Tags        string
		WorkspaceId string
	}{
		Description: "Description",
		Role:        "Role",
		S3Location:  "S3Location",
		Tags:        "Tags",
		WorkspaceId: "WorkspaceId",
	}

	// AWS_IoTTwinMaker_Workspace__PropertiesSlice reports all the CloudFormation properties for AWS::IoTTwinMaker::Workspace.
	AWS_IoTTwinMaker_Workspace__PropertiesSlice = []string{
		AWS_IoTTwinMaker_Workspace__PropertiesMap.Description,
		AWS_IoTTwinMaker_Workspace__PropertiesMap.Role,
		AWS_IoTTwinMaker_Workspace__PropertiesMap.S3Location,
		AWS_IoTTwinMaker_Workspace__PropertiesMap.Tags,
		AWS_IoTTwinMaker_Workspace__PropertiesMap.WorkspaceId,
	}
)

// AWS_IoTTwinMaker_Workspace is a binding for AWS::IoTTwinMaker::Workspace.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html
type AWS_IoTTwinMaker_Workspace struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Role is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-role
	Role cfz.Expression[string] `json:"Role,omitempty"`

	// S3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-s3location
	S3Location cfz.Expression[string] `json:"S3Location,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// WorkspaceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-workspaceid
	WorkspaceId cfz.Expression[string] `json:"WorkspaceId,omitempty"`
}

// New__AWS_IoTTwinMaker_Workspace initializes a new *AWS_IoTTwinMaker_Workspace.
func New__AWS_IoTTwinMaker_Workspace(logicalName string) *AWS_IoTTwinMaker_Workspace {
	return &AWS_IoTTwinMaker_Workspace{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IoTTwinMaker_Workspace) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IoTTwinMaker_Workspace) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IoTTwinMaker_Workspace) GetType() string {
	return AWS_IoTTwinMaker_Workspace__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IoTTwinMaker_Workspace) Set__LogicalName(v string) *AWS_IoTTwinMaker_Workspace {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IoTTwinMaker_Workspace) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IoTTwinMaker_Workspace {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IoTTwinMaker_Workspace) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IoTTwinMaker_Workspace {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IoTTwinMaker_Workspace) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IoTTwinMaker_Workspace {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IoTTwinMaker_Workspace) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IoTTwinMaker_Workspace {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IoTTwinMaker_Workspace) Set__RequestedOutputs(v []cfz.Output) *AWS_IoTTwinMaker_Workspace {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IoTTwinMaker_Workspace) Add__RequestedOutputs(v ...cfz.Output) *AWS_IoTTwinMaker_Workspace {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_IoTTwinMaker_Workspace) Set__Description(v cfz.Expression[string]) *AWS_IoTTwinMaker_Workspace {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_IoTTwinMaker_Workspace) SetV__Description(v string) *AWS_IoTTwinMaker_Workspace {
	t.Description = cfz.V(v)
	return t
}

// Set__Role updates property "Role".
func (t *AWS_IoTTwinMaker_Workspace) Set__Role(v cfz.Expression[string]) *AWS_IoTTwinMaker_Workspace {
	t.Role = v
	return t
}

// SetV__Role updates property "Role".
func (t *AWS_IoTTwinMaker_Workspace) SetV__Role(v string) *AWS_IoTTwinMaker_Workspace {
	t.Role = cfz.V(v)
	return t
}

// Set__S3Location updates property "S3Location".
func (t *AWS_IoTTwinMaker_Workspace) Set__S3Location(v cfz.Expression[string]) *AWS_IoTTwinMaker_Workspace {
	t.S3Location = v
	return t
}

// SetV__S3Location updates property "S3Location".
func (t *AWS_IoTTwinMaker_Workspace) SetV__S3Location(v string) *AWS_IoTTwinMaker_Workspace {
	t.S3Location = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IoTTwinMaker_Workspace) Set__Tags(v cfz.ExpressionMap[string]) *AWS_IoTTwinMaker_Workspace {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_IoTTwinMaker_Workspace) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_IoTTwinMaker_Workspace {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_IoTTwinMaker_Workspace) SetMV__Tags(v ...map[string]string) *AWS_IoTTwinMaker_Workspace {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__WorkspaceId updates property "WorkspaceId".
func (t *AWS_IoTTwinMaker_Workspace) Set__WorkspaceId(v cfz.Expression[string]) *AWS_IoTTwinMaker_Workspace {
	t.WorkspaceId = v
	return t
}

// SetV__WorkspaceId updates property "WorkspaceId".
func (t *AWS_IoTTwinMaker_Workspace) SetV__WorkspaceId(v string) *AWS_IoTTwinMaker_Workspace {
	t.WorkspaceId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IoTTwinMaker_Workspace) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IoTTwinMaker_Workspace) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_Workspace__AttributesMap.Arn))
}

// GetAtt__CreationDateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationDateTime
func (t *AWS_IoTTwinMaker_Workspace) GetAtt__CreationDateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_Workspace__AttributesMap.CreationDateTime))
}

// GetAtt__UpdateDateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdateDateTime
func (t *AWS_IoTTwinMaker_Workspace) GetAtt__UpdateDateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_Workspace__AttributesMap.UpdateDateTime))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IoTTwinMaker_Workspace) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IoTTwinMaker_Workspace) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationDateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationDateTime
func (t *AWS_IoTTwinMaker_Workspace) GetConventionalOutputAtt__CreationDateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationDateTime", t.GetAtt__CreationDateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdateDateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdateDateTime
func (t *AWS_IoTTwinMaker_Workspace) GetConventionalOutputAtt__UpdateDateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdateDateTime", t.GetAtt__UpdateDateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IoTTwinMaker_Workspace) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IoTTwinMaker_Workspace

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IoTTwinMaker_Workspace) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
