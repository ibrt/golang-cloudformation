// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iottwinmaker

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IoTTwinMaker_ComponentType)(nil)
	_ cfz.Resource                   = (*AWS_IoTTwinMaker_ComponentType)(nil)
)

const (
	// AWS_IoTTwinMaker_ComponentType__Type is the CloudFormation type for AWS::IoTTwinMaker::ComponentType.
	AWS_IoTTwinMaker_ComponentType__Type = "AWS::IoTTwinMaker::ComponentType"
)

var (
	// AWS_IoTTwinMaker_ComponentType__AttributesMap reports all the CloudFormation attributes for AWS::IoTTwinMaker::ComponentType.
	AWS_IoTTwinMaker_ComponentType__AttributesMap = struct {
		Arn                  string
		CreationDateTime     string
		IsAbstract           string
		IsSchemaInitialized  string
		Status               string
		Status_Error         string
		Status_Error_Code    string
		Status_Error_Message string
		Status_State         string
		UpdateDateTime       string
	}{
		Arn:                  "Arn",
		CreationDateTime:     "CreationDateTime",
		IsAbstract:           "IsAbstract",
		IsSchemaInitialized:  "IsSchemaInitialized",
		Status:               "Status",
		Status_Error:         "Status.Error",
		Status_Error_Code:    "Status.Error.Code",
		Status_Error_Message: "Status.Error.Message",
		Status_State:         "Status.State",
		UpdateDateTime:       "UpdateDateTime",
	}

	// AWS_IoTTwinMaker_ComponentType__AttributesSlice reports all the CloudFormation attributes for AWS::IoTTwinMaker::ComponentType.
	AWS_IoTTwinMaker_ComponentType__AttributesSlice = []string{
		AWS_IoTTwinMaker_ComponentType__AttributesMap.Arn,
		AWS_IoTTwinMaker_ComponentType__AttributesMap.CreationDateTime,
		AWS_IoTTwinMaker_ComponentType__AttributesMap.IsAbstract,
		AWS_IoTTwinMaker_ComponentType__AttributesMap.IsSchemaInitialized,
		AWS_IoTTwinMaker_ComponentType__AttributesMap.Status,
		AWS_IoTTwinMaker_ComponentType__AttributesMap.Status_Error,
		AWS_IoTTwinMaker_ComponentType__AttributesMap.Status_Error_Code,
		AWS_IoTTwinMaker_ComponentType__AttributesMap.Status_Error_Message,
		AWS_IoTTwinMaker_ComponentType__AttributesMap.Status_State,
		AWS_IoTTwinMaker_ComponentType__AttributesMap.UpdateDateTime,
	}
)

var (
	// AWS_IoTTwinMaker_ComponentType__PropertiesMap reports all the CloudFormation properties for AWS::IoTTwinMaker::ComponentType.
	AWS_IoTTwinMaker_ComponentType__PropertiesMap = struct {
		ComponentTypeId         string
		CompositeComponentTypes string
		Description             string
		ExtendsFrom             string
		Functions               string
		IsSingleton             string
		PropertyDefinitions     string
		PropertyGroups          string
		Tags                    string
		WorkspaceId             string
	}{
		ComponentTypeId:         "ComponentTypeId",
		CompositeComponentTypes: "CompositeComponentTypes",
		Description:             "Description",
		ExtendsFrom:             "ExtendsFrom",
		Functions:               "Functions",
		IsSingleton:             "IsSingleton",
		PropertyDefinitions:     "PropertyDefinitions",
		PropertyGroups:          "PropertyGroups",
		Tags:                    "Tags",
		WorkspaceId:             "WorkspaceId",
	}

	// AWS_IoTTwinMaker_ComponentType__PropertiesSlice reports all the CloudFormation properties for AWS::IoTTwinMaker::ComponentType.
	AWS_IoTTwinMaker_ComponentType__PropertiesSlice = []string{
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.ComponentTypeId,
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.CompositeComponentTypes,
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.Description,
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.ExtendsFrom,
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.Functions,
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.IsSingleton,
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.PropertyDefinitions,
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.PropertyGroups,
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.Tags,
		AWS_IoTTwinMaker_ComponentType__PropertiesMap.WorkspaceId,
	}
)

// AWS_IoTTwinMaker_ComponentType is a binding for AWS::IoTTwinMaker::ComponentType.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html
type AWS_IoTTwinMaker_ComponentType struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ComponentTypeId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-componenttypeid
	ComponentTypeId cfz.Expression[string] `json:"ComponentTypeId,omitempty"`

	// CompositeComponentTypes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-compositecomponenttypes
	CompositeComponentTypes cfz.ExpressionMap[AWS_IoTTwinMaker_ComponentType_CompositeComponentType] `json:"CompositeComponentTypes,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// ExtendsFrom is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-extendsfrom
	ExtendsFrom cfz.ExpressionSlice[string] `json:"ExtendsFrom,omitempty"`

	// Functions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-functions
	Functions cfz.ExpressionMap[AWS_IoTTwinMaker_ComponentType_Function] `json:"Functions,omitempty"`

	// IsSingleton is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-issingleton
	IsSingleton cfz.Expression[bool] `json:"IsSingleton,omitempty"`

	// PropertyDefinitions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-propertydefinitions
	PropertyDefinitions cfz.ExpressionMap[AWS_IoTTwinMaker_ComponentType_PropertyDefinition] `json:"PropertyDefinitions,omitempty"`

	// PropertyGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-propertygroups
	PropertyGroups cfz.ExpressionMap[AWS_IoTTwinMaker_ComponentType_PropertyGroup] `json:"PropertyGroups,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`

	// WorkspaceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-workspaceid
	WorkspaceId cfz.Expression[string] `json:"WorkspaceId,omitempty"`
}

// New__AWS_IoTTwinMaker_ComponentType initializes a new *AWS_IoTTwinMaker_ComponentType.
func New__AWS_IoTTwinMaker_ComponentType(logicalName string) *AWS_IoTTwinMaker_ComponentType {
	return &AWS_IoTTwinMaker_ComponentType{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IoTTwinMaker_ComponentType) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IoTTwinMaker_ComponentType) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IoTTwinMaker_ComponentType) GetType() string {
	return AWS_IoTTwinMaker_ComponentType__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IoTTwinMaker_ComponentType) Set__LogicalName(v string) *AWS_IoTTwinMaker_ComponentType {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IoTTwinMaker_ComponentType) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IoTTwinMaker_ComponentType {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IoTTwinMaker_ComponentType) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IoTTwinMaker_ComponentType {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IoTTwinMaker_ComponentType) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IoTTwinMaker_ComponentType {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IoTTwinMaker_ComponentType) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IoTTwinMaker_ComponentType {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IoTTwinMaker_ComponentType) Set__RequestedOutputs(v []cfz.Output) *AWS_IoTTwinMaker_ComponentType {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IoTTwinMaker_ComponentType) Add__RequestedOutputs(v ...cfz.Output) *AWS_IoTTwinMaker_ComponentType {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ComponentTypeId updates property "ComponentTypeId".
func (t *AWS_IoTTwinMaker_ComponentType) Set__ComponentTypeId(v cfz.Expression[string]) *AWS_IoTTwinMaker_ComponentType {
	t.ComponentTypeId = v
	return t
}

// SetV__ComponentTypeId updates property "ComponentTypeId".
func (t *AWS_IoTTwinMaker_ComponentType) SetV__ComponentTypeId(v string) *AWS_IoTTwinMaker_ComponentType {
	t.ComponentTypeId = cfz.V(v)
	return t
}

// Set__CompositeComponentTypes updates property "CompositeComponentTypes".
func (t *AWS_IoTTwinMaker_ComponentType) Set__CompositeComponentTypes(v cfz.ExpressionMap[AWS_IoTTwinMaker_ComponentType_CompositeComponentType]) *AWS_IoTTwinMaker_ComponentType {
	t.CompositeComponentTypes = v
	return t
}

// SetM__CompositeComponentTypes updates property "CompositeComponentTypes".
func (t *AWS_IoTTwinMaker_ComponentType) SetM__CompositeComponentTypes(v ...map[string]cfz.Expression[AWS_IoTTwinMaker_ComponentType_CompositeComponentType]) *AWS_IoTTwinMaker_ComponentType {
	t.CompositeComponentTypes = cfz.M(v...)
	return t
}

// SetMV__CompositeComponentTypes updates property "CompositeComponentTypes".
func (t *AWS_IoTTwinMaker_ComponentType) SetMV__CompositeComponentTypes(v ...map[string]AWS_IoTTwinMaker_ComponentType_CompositeComponentType) *AWS_IoTTwinMaker_ComponentType {
	t.CompositeComponentTypes = cfz.MV(v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_IoTTwinMaker_ComponentType) Set__Description(v cfz.Expression[string]) *AWS_IoTTwinMaker_ComponentType {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_IoTTwinMaker_ComponentType) SetV__Description(v string) *AWS_IoTTwinMaker_ComponentType {
	t.Description = cfz.V(v)
	return t
}

// Set__ExtendsFrom updates property "ExtendsFrom".
func (t *AWS_IoTTwinMaker_ComponentType) Set__ExtendsFrom(v cfz.ExpressionSlice[string]) *AWS_IoTTwinMaker_ComponentType {
	t.ExtendsFrom = v
	return t
}

// SetS__ExtendsFrom updates property "ExtendsFrom".
func (t *AWS_IoTTwinMaker_ComponentType) SetS__ExtendsFrom(v ...cfz.Expression[string]) *AWS_IoTTwinMaker_ComponentType {
	t.ExtendsFrom = cfz.S(v...)
	return t
}

// SetSV__ExtendsFrom updates property "ExtendsFrom".
func (t *AWS_IoTTwinMaker_ComponentType) SetSV__ExtendsFrom(v ...string) *AWS_IoTTwinMaker_ComponentType {
	t.ExtendsFrom = cfz.SV(v...)
	return t
}

// Set__Functions updates property "Functions".
func (t *AWS_IoTTwinMaker_ComponentType) Set__Functions(v cfz.ExpressionMap[AWS_IoTTwinMaker_ComponentType_Function]) *AWS_IoTTwinMaker_ComponentType {
	t.Functions = v
	return t
}

// SetM__Functions updates property "Functions".
func (t *AWS_IoTTwinMaker_ComponentType) SetM__Functions(v ...map[string]cfz.Expression[AWS_IoTTwinMaker_ComponentType_Function]) *AWS_IoTTwinMaker_ComponentType {
	t.Functions = cfz.M(v...)
	return t
}

// SetMV__Functions updates property "Functions".
func (t *AWS_IoTTwinMaker_ComponentType) SetMV__Functions(v ...map[string]AWS_IoTTwinMaker_ComponentType_Function) *AWS_IoTTwinMaker_ComponentType {
	t.Functions = cfz.MV(v...)
	return t
}

// Set__IsSingleton updates property "IsSingleton".
func (t *AWS_IoTTwinMaker_ComponentType) Set__IsSingleton(v cfz.Expression[bool]) *AWS_IoTTwinMaker_ComponentType {
	t.IsSingleton = v
	return t
}

// SetV__IsSingleton updates property "IsSingleton".
func (t *AWS_IoTTwinMaker_ComponentType) SetV__IsSingleton(v bool) *AWS_IoTTwinMaker_ComponentType {
	t.IsSingleton = cfz.V(v)
	return t
}

// Set__PropertyDefinitions updates property "PropertyDefinitions".
func (t *AWS_IoTTwinMaker_ComponentType) Set__PropertyDefinitions(v cfz.ExpressionMap[AWS_IoTTwinMaker_ComponentType_PropertyDefinition]) *AWS_IoTTwinMaker_ComponentType {
	t.PropertyDefinitions = v
	return t
}

// SetM__PropertyDefinitions updates property "PropertyDefinitions".
func (t *AWS_IoTTwinMaker_ComponentType) SetM__PropertyDefinitions(v ...map[string]cfz.Expression[AWS_IoTTwinMaker_ComponentType_PropertyDefinition]) *AWS_IoTTwinMaker_ComponentType {
	t.PropertyDefinitions = cfz.M(v...)
	return t
}

// SetMV__PropertyDefinitions updates property "PropertyDefinitions".
func (t *AWS_IoTTwinMaker_ComponentType) SetMV__PropertyDefinitions(v ...map[string]AWS_IoTTwinMaker_ComponentType_PropertyDefinition) *AWS_IoTTwinMaker_ComponentType {
	t.PropertyDefinitions = cfz.MV(v...)
	return t
}

// Set__PropertyGroups updates property "PropertyGroups".
func (t *AWS_IoTTwinMaker_ComponentType) Set__PropertyGroups(v cfz.ExpressionMap[AWS_IoTTwinMaker_ComponentType_PropertyGroup]) *AWS_IoTTwinMaker_ComponentType {
	t.PropertyGroups = v
	return t
}

// SetM__PropertyGroups updates property "PropertyGroups".
func (t *AWS_IoTTwinMaker_ComponentType) SetM__PropertyGroups(v ...map[string]cfz.Expression[AWS_IoTTwinMaker_ComponentType_PropertyGroup]) *AWS_IoTTwinMaker_ComponentType {
	t.PropertyGroups = cfz.M(v...)
	return t
}

// SetMV__PropertyGroups updates property "PropertyGroups".
func (t *AWS_IoTTwinMaker_ComponentType) SetMV__PropertyGroups(v ...map[string]AWS_IoTTwinMaker_ComponentType_PropertyGroup) *AWS_IoTTwinMaker_ComponentType {
	t.PropertyGroups = cfz.MV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IoTTwinMaker_ComponentType) Set__Tags(v cfz.ExpressionMap[string]) *AWS_IoTTwinMaker_ComponentType {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_IoTTwinMaker_ComponentType) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_IoTTwinMaker_ComponentType {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_IoTTwinMaker_ComponentType) SetMV__Tags(v ...map[string]string) *AWS_IoTTwinMaker_ComponentType {
	t.Tags = cfz.MV(v...)
	return t
}

// Set__WorkspaceId updates property "WorkspaceId".
func (t *AWS_IoTTwinMaker_ComponentType) Set__WorkspaceId(v cfz.Expression[string]) *AWS_IoTTwinMaker_ComponentType {
	t.WorkspaceId = v
	return t
}

// SetV__WorkspaceId updates property "WorkspaceId".
func (t *AWS_IoTTwinMaker_ComponentType) SetV__WorkspaceId(v string) *AWS_IoTTwinMaker_ComponentType {
	t.WorkspaceId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IoTTwinMaker_ComponentType) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.Arn))
}

// GetAtt__CreationDateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationDateTime
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__CreationDateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.CreationDateTime))
}

// GetAtt__IsAbstract returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IsAbstract
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__IsAbstract() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.IsAbstract))
}

// GetAtt__IsSchemaInitialized returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IsSchemaInitialized
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__IsSchemaInitialized() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.IsSchemaInitialized))
}

// GetAtt__Status returns a $cfz.Expression[AWS_IoTTwinMaker_ComponentType_Status] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__Status() cfz.Expression[AWS_IoTTwinMaker_ComponentType_Status] {
	return cfz.GetAtt[AWS_IoTTwinMaker_ComponentType_Status](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.Status))
}

// GetAtt__Status_Error returns a $cfz.Expression[AWS_IoTTwinMaker_ComponentType_Error] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status.Error
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__Status_Error() cfz.Expression[AWS_IoTTwinMaker_ComponentType_Error] {
	return cfz.GetAtt[AWS_IoTTwinMaker_ComponentType_Error](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.Status_Error))
}

// GetAtt__Status_Error_Code returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status.Error.Code
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__Status_Error_Code() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.Status_Error_Code))
}

// GetAtt__Status_Error_Message returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status.Error.Message
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__Status_Error_Message() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.Status_Error_Message))
}

// GetAtt__Status_State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status.State
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__Status_State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.Status_State))
}

// GetAtt__UpdateDateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: UpdateDateTime
func (t *AWS_IoTTwinMaker_ComponentType) GetAtt__UpdateDateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoTTwinMaker_ComponentType__AttributesMap.UpdateDateTime))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationDateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationDateTime
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__CreationDateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationDateTime", t.GetAtt__CreationDateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IsAbstract returns a conventionally configured output for an attribute of this resource.
// Attribute: IsAbstract
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__IsAbstract(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIsAbstract", t.GetAtt__IsAbstract())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IsSchemaInitialized returns a conventionally configured output for an attribute of this resource.
// Attribute: IsSchemaInitialized
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__IsSchemaInitialized(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIsSchemaInitialized", t.GetAtt__IsSchemaInitialized())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status_Error returns a conventionally configured output for an attribute of this resource.
// Attribute: Status.Error
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__Status_Error(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatusError", t.GetAtt__Status_Error())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status_Error_Code returns a conventionally configured output for an attribute of this resource.
// Attribute: Status.Error.Code
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__Status_Error_Code(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatusErrorCode", t.GetAtt__Status_Error_Code())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status_Error_Message returns a conventionally configured output for an attribute of this resource.
// Attribute: Status.Error.Message
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__Status_Error_Message(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatusErrorMessage", t.GetAtt__Status_Error_Message())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status_State returns a conventionally configured output for an attribute of this resource.
// Attribute: Status.State
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__Status_State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatusState", t.GetAtt__Status_State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__UpdateDateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: UpdateDateTime
func (t *AWS_IoTTwinMaker_ComponentType) GetConventionalOutputAtt__UpdateDateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUpdateDateTime", t.GetAtt__UpdateDateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IoTTwinMaker_ComponentType) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IoTTwinMaker_ComponentType

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IoTTwinMaker_ComponentType) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
