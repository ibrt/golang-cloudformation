// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ecr

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ECR_Repository)(nil)
	_ cfz.Resource                   = (*AWS_ECR_Repository)(nil)
)

const (
	// AWS_ECR_Repository__Type is the CloudFormation type for AWS::ECR::Repository.
	AWS_ECR_Repository__Type = "AWS::ECR::Repository"
)

var (
	// AWS_ECR_Repository__AttributesMap reports all the CloudFormation attributes for AWS::ECR::Repository.
	AWS_ECR_Repository__AttributesMap = struct {
		Arn           string
		RepositoryUri string
	}{
		Arn:           "Arn",
		RepositoryUri: "RepositoryUri",
	}

	// AWS_ECR_Repository__AttributesSlice reports all the CloudFormation attributes for AWS::ECR::Repository.
	AWS_ECR_Repository__AttributesSlice = []string{
		AWS_ECR_Repository__AttributesMap.Arn,
		AWS_ECR_Repository__AttributesMap.RepositoryUri,
	}
)

var (
	// AWS_ECR_Repository__PropertiesMap reports all the CloudFormation properties for AWS::ECR::Repository.
	AWS_ECR_Repository__PropertiesMap = struct {
		EmptyOnDelete              string
		EncryptionConfiguration    string
		ImageScanningConfiguration string
		ImageTagMutability         string
		LifecyclePolicy            string
		RepositoryName             string
		RepositoryPolicyText       string
		Tags                       string
	}{
		EmptyOnDelete:              "EmptyOnDelete",
		EncryptionConfiguration:    "EncryptionConfiguration",
		ImageScanningConfiguration: "ImageScanningConfiguration",
		ImageTagMutability:         "ImageTagMutability",
		LifecyclePolicy:            "LifecyclePolicy",
		RepositoryName:             "RepositoryName",
		RepositoryPolicyText:       "RepositoryPolicyText",
		Tags:                       "Tags",
	}

	// AWS_ECR_Repository__PropertiesSlice reports all the CloudFormation properties for AWS::ECR::Repository.
	AWS_ECR_Repository__PropertiesSlice = []string{
		AWS_ECR_Repository__PropertiesMap.EmptyOnDelete,
		AWS_ECR_Repository__PropertiesMap.EncryptionConfiguration,
		AWS_ECR_Repository__PropertiesMap.ImageScanningConfiguration,
		AWS_ECR_Repository__PropertiesMap.ImageTagMutability,
		AWS_ECR_Repository__PropertiesMap.LifecyclePolicy,
		AWS_ECR_Repository__PropertiesMap.RepositoryName,
		AWS_ECR_Repository__PropertiesMap.RepositoryPolicyText,
		AWS_ECR_Repository__PropertiesMap.Tags,
	}
)

// AWS_ECR_Repository is a binding for AWS::ECR::Repository.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html
type AWS_ECR_Repository struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// EmptyOnDelete is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-emptyondelete
	EmptyOnDelete cfz.Expression[bool] `json:"EmptyOnDelete,omitempty"`

	// EncryptionConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-encryptionconfiguration
	EncryptionConfiguration cfz.Expression[AWS_ECR_Repository_EncryptionConfiguration] `json:"EncryptionConfiguration,omitempty"`

	// ImageScanningConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagescanningconfiguration
	ImageScanningConfiguration cfz.Expression[AWS_ECR_Repository_ImageScanningConfiguration] `json:"ImageScanningConfiguration,omitempty"`

	// ImageTagMutability is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-imagetagmutability
	ImageTagMutability cfz.Expression[string] `json:"ImageTagMutability,omitempty"`

	// LifecyclePolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy
	LifecyclePolicy cfz.Expression[AWS_ECR_Repository_LifecyclePolicy] `json:"LifecyclePolicy,omitempty"`

	// RepositoryName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname
	RepositoryName cfz.Expression[string] `json:"RepositoryName,omitempty"`

	// RepositoryPolicyText is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext
	RepositoryPolicyText cfz.Expression[json.RawMessage] `json:"RepositoryPolicyText,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_ECR_Repository initializes a new *AWS_ECR_Repository.
func New__AWS_ECR_Repository(logicalName string) *AWS_ECR_Repository {
	return &AWS_ECR_Repository{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ECR_Repository) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ECR_Repository) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ECR_Repository) GetType() string {
	return AWS_ECR_Repository__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ECR_Repository) Set__LogicalName(v string) *AWS_ECR_Repository {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ECR_Repository) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ECR_Repository {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ECR_Repository) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ECR_Repository {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ECR_Repository) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ECR_Repository {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ECR_Repository) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ECR_Repository {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ECR_Repository) Set__RequestedOutputs(v []cfz.Output) *AWS_ECR_Repository {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ECR_Repository) Add__RequestedOutputs(v ...cfz.Output) *AWS_ECR_Repository {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__EmptyOnDelete updates property "EmptyOnDelete".
func (t *AWS_ECR_Repository) Set__EmptyOnDelete(v cfz.Expression[bool]) *AWS_ECR_Repository {
	t.EmptyOnDelete = v
	return t
}

// SetV__EmptyOnDelete updates property "EmptyOnDelete".
func (t *AWS_ECR_Repository) SetV__EmptyOnDelete(v bool) *AWS_ECR_Repository {
	t.EmptyOnDelete = cfz.V(v)
	return t
}

// Set__EncryptionConfiguration updates property "EncryptionConfiguration".
func (t *AWS_ECR_Repository) Set__EncryptionConfiguration(v cfz.Expression[AWS_ECR_Repository_EncryptionConfiguration]) *AWS_ECR_Repository {
	t.EncryptionConfiguration = v
	return t
}

// SetV__EncryptionConfiguration updates property "EncryptionConfiguration".
func (t *AWS_ECR_Repository) SetV__EncryptionConfiguration(v AWS_ECR_Repository_EncryptionConfiguration) *AWS_ECR_Repository {
	t.EncryptionConfiguration = cfz.V(v)
	return t
}

// Set__ImageScanningConfiguration updates property "ImageScanningConfiguration".
func (t *AWS_ECR_Repository) Set__ImageScanningConfiguration(v cfz.Expression[AWS_ECR_Repository_ImageScanningConfiguration]) *AWS_ECR_Repository {
	t.ImageScanningConfiguration = v
	return t
}

// SetV__ImageScanningConfiguration updates property "ImageScanningConfiguration".
func (t *AWS_ECR_Repository) SetV__ImageScanningConfiguration(v AWS_ECR_Repository_ImageScanningConfiguration) *AWS_ECR_Repository {
	t.ImageScanningConfiguration = cfz.V(v)
	return t
}

// Set__ImageTagMutability updates property "ImageTagMutability".
func (t *AWS_ECR_Repository) Set__ImageTagMutability(v cfz.Expression[string]) *AWS_ECR_Repository {
	t.ImageTagMutability = v
	return t
}

// SetV__ImageTagMutability updates property "ImageTagMutability".
func (t *AWS_ECR_Repository) SetV__ImageTagMutability(v string) *AWS_ECR_Repository {
	t.ImageTagMutability = cfz.V(v)
	return t
}

// Set__LifecyclePolicy updates property "LifecyclePolicy".
func (t *AWS_ECR_Repository) Set__LifecyclePolicy(v cfz.Expression[AWS_ECR_Repository_LifecyclePolicy]) *AWS_ECR_Repository {
	t.LifecyclePolicy = v
	return t
}

// SetV__LifecyclePolicy updates property "LifecyclePolicy".
func (t *AWS_ECR_Repository) SetV__LifecyclePolicy(v AWS_ECR_Repository_LifecyclePolicy) *AWS_ECR_Repository {
	t.LifecyclePolicy = cfz.V(v)
	return t
}

// Set__RepositoryName updates property "RepositoryName".
func (t *AWS_ECR_Repository) Set__RepositoryName(v cfz.Expression[string]) *AWS_ECR_Repository {
	t.RepositoryName = v
	return t
}

// SetV__RepositoryName updates property "RepositoryName".
func (t *AWS_ECR_Repository) SetV__RepositoryName(v string) *AWS_ECR_Repository {
	t.RepositoryName = cfz.V(v)
	return t
}

// Set__RepositoryPolicyText updates property "RepositoryPolicyText".
func (t *AWS_ECR_Repository) Set__RepositoryPolicyText(v cfz.Expression[json.RawMessage]) *AWS_ECR_Repository {
	t.RepositoryPolicyText = v
	return t
}

// SetV__RepositoryPolicyText updates property "RepositoryPolicyText".
func (t *AWS_ECR_Repository) SetV__RepositoryPolicyText(v json.RawMessage) *AWS_ECR_Repository {
	t.RepositoryPolicyText = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ECR_Repository) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ECR_Repository {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ECR_Repository) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ECR_Repository {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ECR_Repository) SetSV__Tags(v ...cfz.Tag) *AWS_ECR_Repository {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ECR_Repository) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_ECR_Repository) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ECR_Repository__AttributesMap.Arn))
}

// GetAtt__RepositoryUri returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RepositoryUri
func (t *AWS_ECR_Repository) GetAtt__RepositoryUri() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ECR_Repository__AttributesMap.RepositoryUri))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ECR_Repository) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_ECR_Repository) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RepositoryUri returns a conventionally configured output for an attribute of this resource.
// Attribute: RepositoryUri
func (t *AWS_ECR_Repository) GetConventionalOutputAtt__RepositoryUri(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRepositoryUri", t.GetAtt__RepositoryUri())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ECR_Repository) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ECR_Repository

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ECR_Repository) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
