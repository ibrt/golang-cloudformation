// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cognito

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Cognito_UserPool_PasswordPolicy__Type is the CloudFormation type for AWS::Cognito::UserPool.PasswordPolicy.
	AWS_Cognito_UserPool_PasswordPolicy__Type = "AWS::Cognito::UserPool.PasswordPolicy"
)

var (
	// AWS_Cognito_UserPool_PasswordPolicy__PropertiesMap reports all the CloudFormation properties for AWS::Cognito::UserPool.PasswordPolicy.
	AWS_Cognito_UserPool_PasswordPolicy__PropertiesMap = struct {
		MinimumLength                 string
		PasswordHistorySize           string
		RequireLowercase              string
		RequireNumbers                string
		RequireSymbols                string
		RequireUppercase              string
		TemporaryPasswordValidityDays string
	}{
		MinimumLength:                 "MinimumLength",
		PasswordHistorySize:           "PasswordHistorySize",
		RequireLowercase:              "RequireLowercase",
		RequireNumbers:                "RequireNumbers",
		RequireSymbols:                "RequireSymbols",
		RequireUppercase:              "RequireUppercase",
		TemporaryPasswordValidityDays: "TemporaryPasswordValidityDays",
	}

	// AWS_Cognito_UserPool_PasswordPolicy__PropertiesSlice reports all the CloudFormation properties for AWS::Cognito::UserPool.PasswordPolicy.
	AWS_Cognito_UserPool_PasswordPolicy__PropertiesSlice = []string{
		AWS_Cognito_UserPool_PasswordPolicy__PropertiesMap.MinimumLength,
		AWS_Cognito_UserPool_PasswordPolicy__PropertiesMap.PasswordHistorySize,
		AWS_Cognito_UserPool_PasswordPolicy__PropertiesMap.RequireLowercase,
		AWS_Cognito_UserPool_PasswordPolicy__PropertiesMap.RequireNumbers,
		AWS_Cognito_UserPool_PasswordPolicy__PropertiesMap.RequireSymbols,
		AWS_Cognito_UserPool_PasswordPolicy__PropertiesMap.RequireUppercase,
		AWS_Cognito_UserPool_PasswordPolicy__PropertiesMap.TemporaryPasswordValidityDays,
	}
)

// AWS_Cognito_UserPool_PasswordPolicy is a binding for AWS::Cognito::UserPool.PasswordPolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html
type AWS_Cognito_UserPool_PasswordPolicy struct {
	// MinimumLength is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-minimumlength
	MinimumLength cfz.Expression[int32] `json:"MinimumLength,omitempty"`

	// PasswordHistorySize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-passwordhistorysize
	PasswordHistorySize cfz.Expression[int32] `json:"PasswordHistorySize,omitempty"`

	// RequireLowercase is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-requirelowercase
	RequireLowercase cfz.Expression[bool] `json:"RequireLowercase,omitempty"`

	// RequireNumbers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-requirenumbers
	RequireNumbers cfz.Expression[bool] `json:"RequireNumbers,omitempty"`

	// RequireSymbols is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-requiresymbols
	RequireSymbols cfz.Expression[bool] `json:"RequireSymbols,omitempty"`

	// RequireUppercase is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-requireuppercase
	RequireUppercase cfz.Expression[bool] `json:"RequireUppercase,omitempty"`

	// TemporaryPasswordValidityDays is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-userpool-passwordpolicy.html#cfn-cognito-userpool-passwordpolicy-temporarypasswordvaliditydays
	TemporaryPasswordValidityDays cfz.Expression[int32] `json:"TemporaryPasswordValidityDays,omitempty"`
}

// New__AWS_Cognito_UserPool_PasswordPolicy initializes a new AWS_Cognito_UserPool_PasswordPolicy.
func New__AWS_Cognito_UserPool_PasswordPolicy() AWS_Cognito_UserPool_PasswordPolicy {
	return AWS_Cognito_UserPool_PasswordPolicy{}
}

// GetType returns the CloudFormation type.
func (AWS_Cognito_UserPool_PasswordPolicy) GetType() string {
	return AWS_Cognito_UserPool_PasswordPolicy__Type
}

// Set__MinimumLength updates property "MinimumLength".
func (t AWS_Cognito_UserPool_PasswordPolicy) Set__MinimumLength(v cfz.Expression[int32]) AWS_Cognito_UserPool_PasswordPolicy {
	t.MinimumLength = v
	return t
}

// SetV__MinimumLength updates property "MinimumLength".
func (t AWS_Cognito_UserPool_PasswordPolicy) SetV__MinimumLength(v int32) AWS_Cognito_UserPool_PasswordPolicy {
	t.MinimumLength = cfz.V(v)
	return t
}

// Set__PasswordHistorySize updates property "PasswordHistorySize".
func (t AWS_Cognito_UserPool_PasswordPolicy) Set__PasswordHistorySize(v cfz.Expression[int32]) AWS_Cognito_UserPool_PasswordPolicy {
	t.PasswordHistorySize = v
	return t
}

// SetV__PasswordHistorySize updates property "PasswordHistorySize".
func (t AWS_Cognito_UserPool_PasswordPolicy) SetV__PasswordHistorySize(v int32) AWS_Cognito_UserPool_PasswordPolicy {
	t.PasswordHistorySize = cfz.V(v)
	return t
}

// Set__RequireLowercase updates property "RequireLowercase".
func (t AWS_Cognito_UserPool_PasswordPolicy) Set__RequireLowercase(v cfz.Expression[bool]) AWS_Cognito_UserPool_PasswordPolicy {
	t.RequireLowercase = v
	return t
}

// SetV__RequireLowercase updates property "RequireLowercase".
func (t AWS_Cognito_UserPool_PasswordPolicy) SetV__RequireLowercase(v bool) AWS_Cognito_UserPool_PasswordPolicy {
	t.RequireLowercase = cfz.V(v)
	return t
}

// Set__RequireNumbers updates property "RequireNumbers".
func (t AWS_Cognito_UserPool_PasswordPolicy) Set__RequireNumbers(v cfz.Expression[bool]) AWS_Cognito_UserPool_PasswordPolicy {
	t.RequireNumbers = v
	return t
}

// SetV__RequireNumbers updates property "RequireNumbers".
func (t AWS_Cognito_UserPool_PasswordPolicy) SetV__RequireNumbers(v bool) AWS_Cognito_UserPool_PasswordPolicy {
	t.RequireNumbers = cfz.V(v)
	return t
}

// Set__RequireSymbols updates property "RequireSymbols".
func (t AWS_Cognito_UserPool_PasswordPolicy) Set__RequireSymbols(v cfz.Expression[bool]) AWS_Cognito_UserPool_PasswordPolicy {
	t.RequireSymbols = v
	return t
}

// SetV__RequireSymbols updates property "RequireSymbols".
func (t AWS_Cognito_UserPool_PasswordPolicy) SetV__RequireSymbols(v bool) AWS_Cognito_UserPool_PasswordPolicy {
	t.RequireSymbols = cfz.V(v)
	return t
}

// Set__RequireUppercase updates property "RequireUppercase".
func (t AWS_Cognito_UserPool_PasswordPolicy) Set__RequireUppercase(v cfz.Expression[bool]) AWS_Cognito_UserPool_PasswordPolicy {
	t.RequireUppercase = v
	return t
}

// SetV__RequireUppercase updates property "RequireUppercase".
func (t AWS_Cognito_UserPool_PasswordPolicy) SetV__RequireUppercase(v bool) AWS_Cognito_UserPool_PasswordPolicy {
	t.RequireUppercase = cfz.V(v)
	return t
}

// Set__TemporaryPasswordValidityDays updates property "TemporaryPasswordValidityDays".
func (t AWS_Cognito_UserPool_PasswordPolicy) Set__TemporaryPasswordValidityDays(v cfz.Expression[int32]) AWS_Cognito_UserPool_PasswordPolicy {
	t.TemporaryPasswordValidityDays = v
	return t
}

// SetV__TemporaryPasswordValidityDays updates property "TemporaryPasswordValidityDays".
func (t AWS_Cognito_UserPool_PasswordPolicy) SetV__TemporaryPasswordValidityDays(v int32) AWS_Cognito_UserPool_PasswordPolicy {
	t.TemporaryPasswordValidityDays = cfz.V(v)
	return t
}
