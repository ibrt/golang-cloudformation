// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cognito

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Cognito_ManagedLoginBranding)(nil)
	_ cfz.Resource                   = (*AWS_Cognito_ManagedLoginBranding)(nil)
)

const (
	// AWS_Cognito_ManagedLoginBranding__Type is the CloudFormation type for AWS::Cognito::ManagedLoginBranding.
	AWS_Cognito_ManagedLoginBranding__Type = "AWS::Cognito::ManagedLoginBranding"
)

var (
	// AWS_Cognito_ManagedLoginBranding__AttributesMap reports all the CloudFormation attributes for AWS::Cognito::ManagedLoginBranding.
	AWS_Cognito_ManagedLoginBranding__AttributesMap = struct {
		ManagedLoginBrandingId string
	}{
		ManagedLoginBrandingId: "ManagedLoginBrandingId",
	}

	// AWS_Cognito_ManagedLoginBranding__AttributesSlice reports all the CloudFormation attributes for AWS::Cognito::ManagedLoginBranding.
	AWS_Cognito_ManagedLoginBranding__AttributesSlice = []string{
		AWS_Cognito_ManagedLoginBranding__AttributesMap.ManagedLoginBrandingId,
	}
)

var (
	// AWS_Cognito_ManagedLoginBranding__PropertiesMap reports all the CloudFormation properties for AWS::Cognito::ManagedLoginBranding.
	AWS_Cognito_ManagedLoginBranding__PropertiesMap = struct {
		Assets                   string
		ClientId                 string
		ReturnMergedResources    string
		Settings                 string
		UseCognitoProvidedValues string
		UserPoolId               string
	}{
		Assets:                   "Assets",
		ClientId:                 "ClientId",
		ReturnMergedResources:    "ReturnMergedResources",
		Settings:                 "Settings",
		UseCognitoProvidedValues: "UseCognitoProvidedValues",
		UserPoolId:               "UserPoolId",
	}

	// AWS_Cognito_ManagedLoginBranding__PropertiesSlice reports all the CloudFormation properties for AWS::Cognito::ManagedLoginBranding.
	AWS_Cognito_ManagedLoginBranding__PropertiesSlice = []string{
		AWS_Cognito_ManagedLoginBranding__PropertiesMap.Assets,
		AWS_Cognito_ManagedLoginBranding__PropertiesMap.ClientId,
		AWS_Cognito_ManagedLoginBranding__PropertiesMap.ReturnMergedResources,
		AWS_Cognito_ManagedLoginBranding__PropertiesMap.Settings,
		AWS_Cognito_ManagedLoginBranding__PropertiesMap.UseCognitoProvidedValues,
		AWS_Cognito_ManagedLoginBranding__PropertiesMap.UserPoolId,
	}
)

// AWS_Cognito_ManagedLoginBranding is a binding for AWS::Cognito::ManagedLoginBranding.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html
type AWS_Cognito_ManagedLoginBranding struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Assets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-assets
	Assets cfz.ExpressionSlice[AWS_Cognito_ManagedLoginBranding_AssetType] `json:"Assets,omitempty"`

	// ClientId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-clientid
	ClientId cfz.Expression[string] `json:"ClientId,omitempty"`

	// ReturnMergedResources is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-returnmergedresources
	ReturnMergedResources cfz.Expression[bool] `json:"ReturnMergedResources,omitempty"`

	// Settings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-settings
	Settings cfz.Expression[json.RawMessage] `json:"Settings,omitempty"`

	// UseCognitoProvidedValues is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-usecognitoprovidedvalues
	UseCognitoProvidedValues cfz.Expression[bool] `json:"UseCognitoProvidedValues,omitempty"`

	// UserPoolId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-managedloginbranding.html#cfn-cognito-managedloginbranding-userpoolid
	UserPoolId cfz.Expression[string] `json:"UserPoolId,omitempty"`
}

// New__AWS_Cognito_ManagedLoginBranding initializes a new *AWS_Cognito_ManagedLoginBranding.
func New__AWS_Cognito_ManagedLoginBranding(logicalName string) *AWS_Cognito_ManagedLoginBranding {
	return &AWS_Cognito_ManagedLoginBranding{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Cognito_ManagedLoginBranding) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Cognito_ManagedLoginBranding) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Cognito_ManagedLoginBranding) GetType() string {
	return AWS_Cognito_ManagedLoginBranding__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Cognito_ManagedLoginBranding) Set__LogicalName(v string) *AWS_Cognito_ManagedLoginBranding {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Cognito_ManagedLoginBranding) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Cognito_ManagedLoginBranding {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Cognito_ManagedLoginBranding) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Cognito_ManagedLoginBranding {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Cognito_ManagedLoginBranding) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Cognito_ManagedLoginBranding {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Cognito_ManagedLoginBranding) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Cognito_ManagedLoginBranding {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Cognito_ManagedLoginBranding) Set__RequestedOutputs(v []cfz.Output) *AWS_Cognito_ManagedLoginBranding {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Cognito_ManagedLoginBranding) Add__RequestedOutputs(v ...cfz.Output) *AWS_Cognito_ManagedLoginBranding {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Assets updates property "Assets".
func (t *AWS_Cognito_ManagedLoginBranding) Set__Assets(v cfz.ExpressionSlice[AWS_Cognito_ManagedLoginBranding_AssetType]) *AWS_Cognito_ManagedLoginBranding {
	t.Assets = v
	return t
}

// SetS__Assets updates property "Assets".
func (t *AWS_Cognito_ManagedLoginBranding) SetS__Assets(v ...cfz.Expression[AWS_Cognito_ManagedLoginBranding_AssetType]) *AWS_Cognito_ManagedLoginBranding {
	t.Assets = cfz.S(v...)
	return t
}

// SetSV__Assets updates property "Assets".
func (t *AWS_Cognito_ManagedLoginBranding) SetSV__Assets(v ...AWS_Cognito_ManagedLoginBranding_AssetType) *AWS_Cognito_ManagedLoginBranding {
	t.Assets = cfz.SV(v...)
	return t
}

// Set__ClientId updates property "ClientId".
func (t *AWS_Cognito_ManagedLoginBranding) Set__ClientId(v cfz.Expression[string]) *AWS_Cognito_ManagedLoginBranding {
	t.ClientId = v
	return t
}

// SetV__ClientId updates property "ClientId".
func (t *AWS_Cognito_ManagedLoginBranding) SetV__ClientId(v string) *AWS_Cognito_ManagedLoginBranding {
	t.ClientId = cfz.V(v)
	return t
}

// Set__ReturnMergedResources updates property "ReturnMergedResources".
func (t *AWS_Cognito_ManagedLoginBranding) Set__ReturnMergedResources(v cfz.Expression[bool]) *AWS_Cognito_ManagedLoginBranding {
	t.ReturnMergedResources = v
	return t
}

// SetV__ReturnMergedResources updates property "ReturnMergedResources".
func (t *AWS_Cognito_ManagedLoginBranding) SetV__ReturnMergedResources(v bool) *AWS_Cognito_ManagedLoginBranding {
	t.ReturnMergedResources = cfz.V(v)
	return t
}

// Set__Settings updates property "Settings".
func (t *AWS_Cognito_ManagedLoginBranding) Set__Settings(v cfz.Expression[json.RawMessage]) *AWS_Cognito_ManagedLoginBranding {
	t.Settings = v
	return t
}

// SetV__Settings updates property "Settings".
func (t *AWS_Cognito_ManagedLoginBranding) SetV__Settings(v json.RawMessage) *AWS_Cognito_ManagedLoginBranding {
	t.Settings = cfz.V(v)
	return t
}

// Set__UseCognitoProvidedValues updates property "UseCognitoProvidedValues".
func (t *AWS_Cognito_ManagedLoginBranding) Set__UseCognitoProvidedValues(v cfz.Expression[bool]) *AWS_Cognito_ManagedLoginBranding {
	t.UseCognitoProvidedValues = v
	return t
}

// SetV__UseCognitoProvidedValues updates property "UseCognitoProvidedValues".
func (t *AWS_Cognito_ManagedLoginBranding) SetV__UseCognitoProvidedValues(v bool) *AWS_Cognito_ManagedLoginBranding {
	t.UseCognitoProvidedValues = cfz.V(v)
	return t
}

// Set__UserPoolId updates property "UserPoolId".
func (t *AWS_Cognito_ManagedLoginBranding) Set__UserPoolId(v cfz.Expression[string]) *AWS_Cognito_ManagedLoginBranding {
	t.UserPoolId = v
	return t
}

// SetV__UserPoolId updates property "UserPoolId".
func (t *AWS_Cognito_ManagedLoginBranding) SetV__UserPoolId(v string) *AWS_Cognito_ManagedLoginBranding {
	t.UserPoolId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Cognito_ManagedLoginBranding) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ManagedLoginBrandingId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ManagedLoginBrandingId
func (t *AWS_Cognito_ManagedLoginBranding) GetAtt__ManagedLoginBrandingId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Cognito_ManagedLoginBranding__AttributesMap.ManagedLoginBrandingId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Cognito_ManagedLoginBranding) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ManagedLoginBrandingId returns a conventionally configured output for an attribute of this resource.
// Attribute: ManagedLoginBrandingId
func (t *AWS_Cognito_ManagedLoginBranding) GetConventionalOutputAtt__ManagedLoginBrandingId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttManagedLoginBrandingId", t.GetAtt__ManagedLoginBrandingId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Cognito_ManagedLoginBranding) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Cognito_ManagedLoginBranding

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Cognito_ManagedLoginBranding) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
