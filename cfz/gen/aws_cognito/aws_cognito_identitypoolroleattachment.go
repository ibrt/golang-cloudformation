// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cognito

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Cognito_IdentityPoolRoleAttachment)(nil)
	_ cfz.Resource                   = (*AWS_Cognito_IdentityPoolRoleAttachment)(nil)
)

const (
	// AWS_Cognito_IdentityPoolRoleAttachment__Type is the CloudFormation type for AWS::Cognito::IdentityPoolRoleAttachment.
	AWS_Cognito_IdentityPoolRoleAttachment__Type = "AWS::Cognito::IdentityPoolRoleAttachment"
)

var (
	// AWS_Cognito_IdentityPoolRoleAttachment__AttributesMap reports all the CloudFormation attributes for AWS::Cognito::IdentityPoolRoleAttachment.
	AWS_Cognito_IdentityPoolRoleAttachment__AttributesMap = struct {
		Id string
	}{
		Id: "Id",
	}

	// AWS_Cognito_IdentityPoolRoleAttachment__AttributesSlice reports all the CloudFormation attributes for AWS::Cognito::IdentityPoolRoleAttachment.
	AWS_Cognito_IdentityPoolRoleAttachment__AttributesSlice = []string{
		AWS_Cognito_IdentityPoolRoleAttachment__AttributesMap.Id,
	}
)

var (
	// AWS_Cognito_IdentityPoolRoleAttachment__PropertiesMap reports all the CloudFormation properties for AWS::Cognito::IdentityPoolRoleAttachment.
	AWS_Cognito_IdentityPoolRoleAttachment__PropertiesMap = struct {
		IdentityPoolId string
		RoleMappings   string
		Roles          string
	}{
		IdentityPoolId: "IdentityPoolId",
		RoleMappings:   "RoleMappings",
		Roles:          "Roles",
	}

	// AWS_Cognito_IdentityPoolRoleAttachment__PropertiesSlice reports all the CloudFormation properties for AWS::Cognito::IdentityPoolRoleAttachment.
	AWS_Cognito_IdentityPoolRoleAttachment__PropertiesSlice = []string{
		AWS_Cognito_IdentityPoolRoleAttachment__PropertiesMap.IdentityPoolId,
		AWS_Cognito_IdentityPoolRoleAttachment__PropertiesMap.RoleMappings,
		AWS_Cognito_IdentityPoolRoleAttachment__PropertiesMap.Roles,
	}
)

// AWS_Cognito_IdentityPoolRoleAttachment is a binding for AWS::Cognito::IdentityPoolRoleAttachment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html
type AWS_Cognito_IdentityPoolRoleAttachment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// IdentityPoolId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-identitypoolid
	IdentityPoolId cfz.Expression[string] `json:"IdentityPoolId,omitempty"`

	// RoleMappings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-rolemappings
	RoleMappings cfz.ExpressionMap[AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping] `json:"RoleMappings,omitempty"`

	// Roles is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypoolroleattachment.html#cfn-cognito-identitypoolroleattachment-roles
	Roles cfz.ExpressionMap[string] `json:"Roles,omitempty"`
}

// New__AWS_Cognito_IdentityPoolRoleAttachment initializes a new *AWS_Cognito_IdentityPoolRoleAttachment.
func New__AWS_Cognito_IdentityPoolRoleAttachment(logicalName string) *AWS_Cognito_IdentityPoolRoleAttachment {
	return &AWS_Cognito_IdentityPoolRoleAttachment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Cognito_IdentityPoolRoleAttachment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Cognito_IdentityPoolRoleAttachment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Cognito_IdentityPoolRoleAttachment) GetType() string {
	return AWS_Cognito_IdentityPoolRoleAttachment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Set__LogicalName(v string) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Set__RequestedOutputs(v []cfz.Output) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Add__RequestedOutputs(v ...cfz.Output) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__IdentityPoolId updates property "IdentityPoolId".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Set__IdentityPoolId(v cfz.Expression[string]) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.IdentityPoolId = v
	return t
}

// SetV__IdentityPoolId updates property "IdentityPoolId".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) SetV__IdentityPoolId(v string) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.IdentityPoolId = cfz.V(v)
	return t
}

// Set__RoleMappings updates property "RoleMappings".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Set__RoleMappings(v cfz.ExpressionMap[AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping]) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.RoleMappings = v
	return t
}

// SetM__RoleMappings updates property "RoleMappings".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) SetM__RoleMappings(v ...map[string]cfz.Expression[AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping]) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.RoleMappings = cfz.M(v...)
	return t
}

// SetMV__RoleMappings updates property "RoleMappings".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) SetMV__RoleMappings(v ...map[string]AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.RoleMappings = cfz.MV(v...)
	return t
}

// Set__Roles updates property "Roles".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Set__Roles(v cfz.ExpressionMap[string]) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.Roles = v
	return t
}

// SetM__Roles updates property "Roles".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) SetM__Roles(v ...map[string]cfz.Expression[string]) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.Roles = cfz.M(v...)
	return t
}

// SetMV__Roles updates property "Roles".
func (t *AWS_Cognito_IdentityPoolRoleAttachment) SetMV__Roles(v ...map[string]string) *AWS_Cognito_IdentityPoolRoleAttachment {
	t.Roles = cfz.MV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Cognito_IdentityPoolRoleAttachment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_Cognito_IdentityPoolRoleAttachment) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Cognito_IdentityPoolRoleAttachment__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Cognito_IdentityPoolRoleAttachment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_Cognito_IdentityPoolRoleAttachment) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Cognito_IdentityPoolRoleAttachment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Cognito_IdentityPoolRoleAttachment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Cognito_IdentityPoolRoleAttachment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
