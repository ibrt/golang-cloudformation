// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cognito

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__Type is the CloudFormation type for AWS::Cognito::IdentityPoolRoleAttachment.RoleMapping.
	AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__Type = "AWS::Cognito::IdentityPoolRoleAttachment.RoleMapping"
)

var (
	// AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__PropertiesMap reports all the CloudFormation properties for AWS::Cognito::IdentityPoolRoleAttachment.RoleMapping.
	AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__PropertiesMap = struct {
		AmbiguousRoleResolution string
		IdentityProvider        string
		RulesConfiguration      string
		Type                    string
	}{
		AmbiguousRoleResolution: "AmbiguousRoleResolution",
		IdentityProvider:        "IdentityProvider",
		RulesConfiguration:      "RulesConfiguration",
		Type:                    "Type",
	}

	// AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__PropertiesSlice reports all the CloudFormation properties for AWS::Cognito::IdentityPoolRoleAttachment.RoleMapping.
	AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__PropertiesSlice = []string{
		AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__PropertiesMap.AmbiguousRoleResolution,
		AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__PropertiesMap.IdentityProvider,
		AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__PropertiesMap.RulesConfiguration,
		AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__PropertiesMap.Type,
	}
)

// AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping is a binding for AWS::Cognito::IdentityPoolRoleAttachment.RoleMapping.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html
type AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping struct {
	// AmbiguousRoleResolution is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html#cfn-cognito-identitypoolroleattachment-rolemapping-ambiguousroleresolution
	AmbiguousRoleResolution cfz.Expression[string] `json:"AmbiguousRoleResolution,omitempty"`

	// IdentityProvider is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html#cfn-cognito-identitypoolroleattachment-rolemapping-identityprovider
	IdentityProvider cfz.Expression[string] `json:"IdentityProvider,omitempty"`

	// RulesConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html#cfn-cognito-identitypoolroleattachment-rolemapping-rulesconfiguration
	RulesConfiguration cfz.Expression[AWS_Cognito_IdentityPoolRoleAttachment_RulesConfigurationType] `json:"RulesConfiguration,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cognito-identitypoolroleattachment-rolemapping.html#cfn-cognito-identitypoolroleattachment-rolemapping-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping initializes a new AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping.
func New__AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping() AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping {
	return AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping{}
}

// GetType returns the CloudFormation type.
func (AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) GetType() string {
	return AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping__Type
}

// Set__AmbiguousRoleResolution updates property "AmbiguousRoleResolution".
func (t AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) Set__AmbiguousRoleResolution(v cfz.Expression[string]) AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping {
	t.AmbiguousRoleResolution = v
	return t
}

// SetV__AmbiguousRoleResolution updates property "AmbiguousRoleResolution".
func (t AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) SetV__AmbiguousRoleResolution(v string) AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping {
	t.AmbiguousRoleResolution = cfz.V(v)
	return t
}

// Set__IdentityProvider updates property "IdentityProvider".
func (t AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) Set__IdentityProvider(v cfz.Expression[string]) AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping {
	t.IdentityProvider = v
	return t
}

// SetV__IdentityProvider updates property "IdentityProvider".
func (t AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) SetV__IdentityProvider(v string) AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping {
	t.IdentityProvider = cfz.V(v)
	return t
}

// Set__RulesConfiguration updates property "RulesConfiguration".
func (t AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) Set__RulesConfiguration(v cfz.Expression[AWS_Cognito_IdentityPoolRoleAttachment_RulesConfigurationType]) AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping {
	t.RulesConfiguration = v
	return t
}

// SetV__RulesConfiguration updates property "RulesConfiguration".
func (t AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) SetV__RulesConfiguration(v AWS_Cognito_IdentityPoolRoleAttachment_RulesConfigurationType) AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping {
	t.RulesConfiguration = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) Set__Type(v cfz.Expression[string]) AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping) SetV__Type(v string) AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping {
	t.Type = cfz.V(v)
	return t
}
