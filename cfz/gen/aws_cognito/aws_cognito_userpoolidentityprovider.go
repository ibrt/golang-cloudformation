// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cognito

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Cognito_UserPoolIdentityProvider)(nil)
	_ cfz.Resource                   = (*AWS_Cognito_UserPoolIdentityProvider)(nil)
)

const (
	// AWS_Cognito_UserPoolIdentityProvider__Type is the CloudFormation type for AWS::Cognito::UserPoolIdentityProvider.
	AWS_Cognito_UserPoolIdentityProvider__Type = "AWS::Cognito::UserPoolIdentityProvider"
)

var (
	// AWS_Cognito_UserPoolIdentityProvider__PropertiesMap reports all the CloudFormation properties for AWS::Cognito::UserPoolIdentityProvider.
	AWS_Cognito_UserPoolIdentityProvider__PropertiesMap = struct {
		AttributeMapping string
		IdpIdentifiers   string
		ProviderDetails  string
		ProviderName     string
		ProviderType     string
		UserPoolId       string
	}{
		AttributeMapping: "AttributeMapping",
		IdpIdentifiers:   "IdpIdentifiers",
		ProviderDetails:  "ProviderDetails",
		ProviderName:     "ProviderName",
		ProviderType:     "ProviderType",
		UserPoolId:       "UserPoolId",
	}

	// AWS_Cognito_UserPoolIdentityProvider__PropertiesSlice reports all the CloudFormation properties for AWS::Cognito::UserPoolIdentityProvider.
	AWS_Cognito_UserPoolIdentityProvider__PropertiesSlice = []string{
		AWS_Cognito_UserPoolIdentityProvider__PropertiesMap.AttributeMapping,
		AWS_Cognito_UserPoolIdentityProvider__PropertiesMap.IdpIdentifiers,
		AWS_Cognito_UserPoolIdentityProvider__PropertiesMap.ProviderDetails,
		AWS_Cognito_UserPoolIdentityProvider__PropertiesMap.ProviderName,
		AWS_Cognito_UserPoolIdentityProvider__PropertiesMap.ProviderType,
		AWS_Cognito_UserPoolIdentityProvider__PropertiesMap.UserPoolId,
	}
)

// AWS_Cognito_UserPoolIdentityProvider is a binding for AWS::Cognito::UserPoolIdentityProvider.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html
type AWS_Cognito_UserPoolIdentityProvider struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AttributeMapping is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-attributemapping
	AttributeMapping cfz.ExpressionMap[string] `json:"AttributeMapping,omitempty"`

	// IdpIdentifiers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-idpidentifiers
	IdpIdentifiers cfz.ExpressionSlice[string] `json:"IdpIdentifiers,omitempty"`

	// ProviderDetails is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providerdetails
	ProviderDetails cfz.ExpressionMap[string] `json:"ProviderDetails,omitempty"`

	// ProviderName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providername
	ProviderName cfz.Expression[string] `json:"ProviderName,omitempty"`

	// ProviderType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-providertype
	ProviderType cfz.Expression[string] `json:"ProviderType,omitempty"`

	// UserPoolId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolidentityprovider.html#cfn-cognito-userpoolidentityprovider-userpoolid
	UserPoolId cfz.Expression[string] `json:"UserPoolId,omitempty"`
}

// New__AWS_Cognito_UserPoolIdentityProvider initializes a new *AWS_Cognito_UserPoolIdentityProvider.
func New__AWS_Cognito_UserPoolIdentityProvider(logicalName string) *AWS_Cognito_UserPoolIdentityProvider {
	return &AWS_Cognito_UserPoolIdentityProvider{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Cognito_UserPoolIdentityProvider) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Cognito_UserPoolIdentityProvider) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Cognito_UserPoolIdentityProvider) GetType() string {
	return AWS_Cognito_UserPoolIdentityProvider__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__LogicalName(v string) *AWS_Cognito_UserPoolIdentityProvider {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Cognito_UserPoolIdentityProvider {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Cognito_UserPoolIdentityProvider) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Cognito_UserPoolIdentityProvider {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Cognito_UserPoolIdentityProvider {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Cognito_UserPoolIdentityProvider {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__RequestedOutputs(v []cfz.Output) *AWS_Cognito_UserPoolIdentityProvider {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Cognito_UserPoolIdentityProvider) Add__RequestedOutputs(v ...cfz.Output) *AWS_Cognito_UserPoolIdentityProvider {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AttributeMapping updates property "AttributeMapping".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__AttributeMapping(v cfz.ExpressionMap[string]) *AWS_Cognito_UserPoolIdentityProvider {
	t.AttributeMapping = v
	return t
}

// SetM__AttributeMapping updates property "AttributeMapping".
func (t *AWS_Cognito_UserPoolIdentityProvider) SetM__AttributeMapping(v ...map[string]cfz.Expression[string]) *AWS_Cognito_UserPoolIdentityProvider {
	t.AttributeMapping = cfz.M(v...)
	return t
}

// SetMV__AttributeMapping updates property "AttributeMapping".
func (t *AWS_Cognito_UserPoolIdentityProvider) SetMV__AttributeMapping(v ...map[string]string) *AWS_Cognito_UserPoolIdentityProvider {
	t.AttributeMapping = cfz.MV(v...)
	return t
}

// Set__IdpIdentifiers updates property "IdpIdentifiers".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__IdpIdentifiers(v cfz.ExpressionSlice[string]) *AWS_Cognito_UserPoolIdentityProvider {
	t.IdpIdentifiers = v
	return t
}

// SetS__IdpIdentifiers updates property "IdpIdentifiers".
func (t *AWS_Cognito_UserPoolIdentityProvider) SetS__IdpIdentifiers(v ...cfz.Expression[string]) *AWS_Cognito_UserPoolIdentityProvider {
	t.IdpIdentifiers = cfz.S(v...)
	return t
}

// SetSV__IdpIdentifiers updates property "IdpIdentifiers".
func (t *AWS_Cognito_UserPoolIdentityProvider) SetSV__IdpIdentifiers(v ...string) *AWS_Cognito_UserPoolIdentityProvider {
	t.IdpIdentifiers = cfz.SV(v...)
	return t
}

// Set__ProviderDetails updates property "ProviderDetails".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__ProviderDetails(v cfz.ExpressionMap[string]) *AWS_Cognito_UserPoolIdentityProvider {
	t.ProviderDetails = v
	return t
}

// SetM__ProviderDetails updates property "ProviderDetails".
func (t *AWS_Cognito_UserPoolIdentityProvider) SetM__ProviderDetails(v ...map[string]cfz.Expression[string]) *AWS_Cognito_UserPoolIdentityProvider {
	t.ProviderDetails = cfz.M(v...)
	return t
}

// SetMV__ProviderDetails updates property "ProviderDetails".
func (t *AWS_Cognito_UserPoolIdentityProvider) SetMV__ProviderDetails(v ...map[string]string) *AWS_Cognito_UserPoolIdentityProvider {
	t.ProviderDetails = cfz.MV(v...)
	return t
}

// Set__ProviderName updates property "ProviderName".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__ProviderName(v cfz.Expression[string]) *AWS_Cognito_UserPoolIdentityProvider {
	t.ProviderName = v
	return t
}

// SetV__ProviderName updates property "ProviderName".
func (t *AWS_Cognito_UserPoolIdentityProvider) SetV__ProviderName(v string) *AWS_Cognito_UserPoolIdentityProvider {
	t.ProviderName = cfz.V(v)
	return t
}

// Set__ProviderType updates property "ProviderType".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__ProviderType(v cfz.Expression[string]) *AWS_Cognito_UserPoolIdentityProvider {
	t.ProviderType = v
	return t
}

// SetV__ProviderType updates property "ProviderType".
func (t *AWS_Cognito_UserPoolIdentityProvider) SetV__ProviderType(v string) *AWS_Cognito_UserPoolIdentityProvider {
	t.ProviderType = cfz.V(v)
	return t
}

// Set__UserPoolId updates property "UserPoolId".
func (t *AWS_Cognito_UserPoolIdentityProvider) Set__UserPoolId(v cfz.Expression[string]) *AWS_Cognito_UserPoolIdentityProvider {
	t.UserPoolId = v
	return t
}

// SetV__UserPoolId updates property "UserPoolId".
func (t *AWS_Cognito_UserPoolIdentityProvider) SetV__UserPoolId(v string) *AWS_Cognito_UserPoolIdentityProvider {
	t.UserPoolId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Cognito_UserPoolIdentityProvider) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Cognito_UserPoolIdentityProvider) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Cognito_UserPoolIdentityProvider) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Cognito_UserPoolIdentityProvider

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Cognito_UserPoolIdentityProvider) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
