// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_rds

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_RDS_DBShardGroup)(nil)
	_ cfz.Resource                   = (*AWS_RDS_DBShardGroup)(nil)
)

const (
	// AWS_RDS_DBShardGroup__Type is the CloudFormation type for AWS::RDS::DBShardGroup.
	AWS_RDS_DBShardGroup__Type = "AWS::RDS::DBShardGroup"
)

var (
	// AWS_RDS_DBShardGroup__AttributesMap reports all the CloudFormation attributes for AWS::RDS::DBShardGroup.
	AWS_RDS_DBShardGroup__AttributesMap = struct {
		DBShardGroupResourceId string
		Endpoint               string
	}{
		DBShardGroupResourceId: "DBShardGroupResourceId",
		Endpoint:               "Endpoint",
	}

	// AWS_RDS_DBShardGroup__AttributesSlice reports all the CloudFormation attributes for AWS::RDS::DBShardGroup.
	AWS_RDS_DBShardGroup__AttributesSlice = []string{
		AWS_RDS_DBShardGroup__AttributesMap.DBShardGroupResourceId,
		AWS_RDS_DBShardGroup__AttributesMap.Endpoint,
	}
)

var (
	// AWS_RDS_DBShardGroup__PropertiesMap reports all the CloudFormation properties for AWS::RDS::DBShardGroup.
	AWS_RDS_DBShardGroup__PropertiesMap = struct {
		ComputeRedundancy      string
		DBClusterIdentifier    string
		DBShardGroupIdentifier string
		MaxACU                 string
		MinACU                 string
		PubliclyAccessible     string
		Tags                   string
	}{
		ComputeRedundancy:      "ComputeRedundancy",
		DBClusterIdentifier:    "DBClusterIdentifier",
		DBShardGroupIdentifier: "DBShardGroupIdentifier",
		MaxACU:                 "MaxACU",
		MinACU:                 "MinACU",
		PubliclyAccessible:     "PubliclyAccessible",
		Tags:                   "Tags",
	}

	// AWS_RDS_DBShardGroup__PropertiesSlice reports all the CloudFormation properties for AWS::RDS::DBShardGroup.
	AWS_RDS_DBShardGroup__PropertiesSlice = []string{
		AWS_RDS_DBShardGroup__PropertiesMap.ComputeRedundancy,
		AWS_RDS_DBShardGroup__PropertiesMap.DBClusterIdentifier,
		AWS_RDS_DBShardGroup__PropertiesMap.DBShardGroupIdentifier,
		AWS_RDS_DBShardGroup__PropertiesMap.MaxACU,
		AWS_RDS_DBShardGroup__PropertiesMap.MinACU,
		AWS_RDS_DBShardGroup__PropertiesMap.PubliclyAccessible,
		AWS_RDS_DBShardGroup__PropertiesMap.Tags,
	}
)

// AWS_RDS_DBShardGroup is a binding for AWS::RDS::DBShardGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html
type AWS_RDS_DBShardGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ComputeRedundancy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-computeredundancy
	ComputeRedundancy cfz.Expression[int32] `json:"ComputeRedundancy,omitempty"`

	// DBClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-dbclusteridentifier
	DBClusterIdentifier cfz.Expression[string] `json:"DBClusterIdentifier,omitempty"`

	// DBShardGroupIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-dbshardgroupidentifier
	DBShardGroupIdentifier cfz.Expression[string] `json:"DBShardGroupIdentifier,omitempty"`

	// MaxACU is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-maxacu
	MaxACU cfz.Expression[float64] `json:"MaxACU,omitempty"`

	// MinACU is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-minacu
	MinACU cfz.Expression[float64] `json:"MinACU,omitempty"`

	// PubliclyAccessible is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-publiclyaccessible
	PubliclyAccessible cfz.Expression[bool] `json:"PubliclyAccessible,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbshardgroup.html#cfn-rds-dbshardgroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_RDS_DBShardGroup initializes a new *AWS_RDS_DBShardGroup.
func New__AWS_RDS_DBShardGroup(logicalName string) *AWS_RDS_DBShardGroup {
	return &AWS_RDS_DBShardGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_RDS_DBShardGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_RDS_DBShardGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_RDS_DBShardGroup) GetType() string {
	return AWS_RDS_DBShardGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_RDS_DBShardGroup) Set__LogicalName(v string) *AWS_RDS_DBShardGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_RDS_DBShardGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_RDS_DBShardGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_RDS_DBShardGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_RDS_DBShardGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_RDS_DBShardGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_RDS_DBShardGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_RDS_DBShardGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_RDS_DBShardGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_RDS_DBShardGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_RDS_DBShardGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_RDS_DBShardGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_RDS_DBShardGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ComputeRedundancy updates property "ComputeRedundancy".
func (t *AWS_RDS_DBShardGroup) Set__ComputeRedundancy(v cfz.Expression[int32]) *AWS_RDS_DBShardGroup {
	t.ComputeRedundancy = v
	return t
}

// SetV__ComputeRedundancy updates property "ComputeRedundancy".
func (t *AWS_RDS_DBShardGroup) SetV__ComputeRedundancy(v int32) *AWS_RDS_DBShardGroup {
	t.ComputeRedundancy = cfz.V(v)
	return t
}

// Set__DBClusterIdentifier updates property "DBClusterIdentifier".
func (t *AWS_RDS_DBShardGroup) Set__DBClusterIdentifier(v cfz.Expression[string]) *AWS_RDS_DBShardGroup {
	t.DBClusterIdentifier = v
	return t
}

// SetV__DBClusterIdentifier updates property "DBClusterIdentifier".
func (t *AWS_RDS_DBShardGroup) SetV__DBClusterIdentifier(v string) *AWS_RDS_DBShardGroup {
	t.DBClusterIdentifier = cfz.V(v)
	return t
}

// Set__DBShardGroupIdentifier updates property "DBShardGroupIdentifier".
func (t *AWS_RDS_DBShardGroup) Set__DBShardGroupIdentifier(v cfz.Expression[string]) *AWS_RDS_DBShardGroup {
	t.DBShardGroupIdentifier = v
	return t
}

// SetV__DBShardGroupIdentifier updates property "DBShardGroupIdentifier".
func (t *AWS_RDS_DBShardGroup) SetV__DBShardGroupIdentifier(v string) *AWS_RDS_DBShardGroup {
	t.DBShardGroupIdentifier = cfz.V(v)
	return t
}

// Set__MaxACU updates property "MaxACU".
func (t *AWS_RDS_DBShardGroup) Set__MaxACU(v cfz.Expression[float64]) *AWS_RDS_DBShardGroup {
	t.MaxACU = v
	return t
}

// SetV__MaxACU updates property "MaxACU".
func (t *AWS_RDS_DBShardGroup) SetV__MaxACU(v float64) *AWS_RDS_DBShardGroup {
	t.MaxACU = cfz.V(v)
	return t
}

// Set__MinACU updates property "MinACU".
func (t *AWS_RDS_DBShardGroup) Set__MinACU(v cfz.Expression[float64]) *AWS_RDS_DBShardGroup {
	t.MinACU = v
	return t
}

// SetV__MinACU updates property "MinACU".
func (t *AWS_RDS_DBShardGroup) SetV__MinACU(v float64) *AWS_RDS_DBShardGroup {
	t.MinACU = cfz.V(v)
	return t
}

// Set__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_RDS_DBShardGroup) Set__PubliclyAccessible(v cfz.Expression[bool]) *AWS_RDS_DBShardGroup {
	t.PubliclyAccessible = v
	return t
}

// SetV__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_RDS_DBShardGroup) SetV__PubliclyAccessible(v bool) *AWS_RDS_DBShardGroup {
	t.PubliclyAccessible = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_RDS_DBShardGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_RDS_DBShardGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_RDS_DBShardGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_RDS_DBShardGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_RDS_DBShardGroup) SetSV__Tags(v ...cfz.Tag) *AWS_RDS_DBShardGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_RDS_DBShardGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DBShardGroupResourceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DBShardGroupResourceId
func (t *AWS_RDS_DBShardGroup) GetAtt__DBShardGroupResourceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBShardGroup__AttributesMap.DBShardGroupResourceId))
}

// GetAtt__Endpoint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint
func (t *AWS_RDS_DBShardGroup) GetAtt__Endpoint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBShardGroup__AttributesMap.Endpoint))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_RDS_DBShardGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DBShardGroupResourceId returns a conventionally configured output for an attribute of this resource.
// Attribute: DBShardGroupResourceId
func (t *AWS_RDS_DBShardGroup) GetConventionalOutputAtt__DBShardGroupResourceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDBShardGroupResourceId", t.GetAtt__DBShardGroupResourceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint
func (t *AWS_RDS_DBShardGroup) GetConventionalOutputAtt__Endpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpoint", t.GetAtt__Endpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_RDS_DBShardGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_RDS_DBShardGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_RDS_DBShardGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
