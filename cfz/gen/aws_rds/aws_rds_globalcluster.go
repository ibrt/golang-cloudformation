// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_rds

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_RDS_GlobalCluster)(nil)
	_ cfz.Resource                   = (*AWS_RDS_GlobalCluster)(nil)
)

const (
	// AWS_RDS_GlobalCluster__Type is the CloudFormation type for AWS::RDS::GlobalCluster.
	AWS_RDS_GlobalCluster__Type = "AWS::RDS::GlobalCluster"
)

var (
	// AWS_RDS_GlobalCluster__PropertiesMap reports all the CloudFormation properties for AWS::RDS::GlobalCluster.
	AWS_RDS_GlobalCluster__PropertiesMap = struct {
		DeletionProtection        string
		Engine                    string
		EngineLifecycleSupport    string
		EngineVersion             string
		GlobalClusterIdentifier   string
		GlobalEndpoint            string
		SourceDBClusterIdentifier string
		StorageEncrypted          string
		Tags                      string
	}{
		DeletionProtection:        "DeletionProtection",
		Engine:                    "Engine",
		EngineLifecycleSupport:    "EngineLifecycleSupport",
		EngineVersion:             "EngineVersion",
		GlobalClusterIdentifier:   "GlobalClusterIdentifier",
		GlobalEndpoint:            "GlobalEndpoint",
		SourceDBClusterIdentifier: "SourceDBClusterIdentifier",
		StorageEncrypted:          "StorageEncrypted",
		Tags:                      "Tags",
	}

	// AWS_RDS_GlobalCluster__PropertiesSlice reports all the CloudFormation properties for AWS::RDS::GlobalCluster.
	AWS_RDS_GlobalCluster__PropertiesSlice = []string{
		AWS_RDS_GlobalCluster__PropertiesMap.DeletionProtection,
		AWS_RDS_GlobalCluster__PropertiesMap.Engine,
		AWS_RDS_GlobalCluster__PropertiesMap.EngineLifecycleSupport,
		AWS_RDS_GlobalCluster__PropertiesMap.EngineVersion,
		AWS_RDS_GlobalCluster__PropertiesMap.GlobalClusterIdentifier,
		AWS_RDS_GlobalCluster__PropertiesMap.GlobalEndpoint,
		AWS_RDS_GlobalCluster__PropertiesMap.SourceDBClusterIdentifier,
		AWS_RDS_GlobalCluster__PropertiesMap.StorageEncrypted,
		AWS_RDS_GlobalCluster__PropertiesMap.Tags,
	}
)

// AWS_RDS_GlobalCluster is a binding for AWS::RDS::GlobalCluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html
type AWS_RDS_GlobalCluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DeletionProtection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-deletionprotection
	DeletionProtection cfz.Expression[bool] `json:"DeletionProtection,omitempty"`

	// Engine is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-engine
	Engine cfz.Expression[string] `json:"Engine,omitempty"`

	// EngineLifecycleSupport is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-enginelifecyclesupport
	EngineLifecycleSupport cfz.Expression[string] `json:"EngineLifecycleSupport,omitempty"`

	// EngineVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-engineversion
	EngineVersion cfz.Expression[string] `json:"EngineVersion,omitempty"`

	// GlobalClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-globalclusteridentifier
	GlobalClusterIdentifier cfz.Expression[string] `json:"GlobalClusterIdentifier,omitempty"`

	// GlobalEndpoint is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-globalendpoint
	GlobalEndpoint cfz.Expression[AWS_RDS_GlobalCluster_GlobalEndpoint] `json:"GlobalEndpoint,omitempty"`

	// SourceDBClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-sourcedbclusteridentifier
	SourceDBClusterIdentifier cfz.Expression[string] `json:"SourceDBClusterIdentifier,omitempty"`

	// StorageEncrypted is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-storageencrypted
	StorageEncrypted cfz.Expression[bool] `json:"StorageEncrypted,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-globalcluster.html#cfn-rds-globalcluster-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_RDS_GlobalCluster initializes a new *AWS_RDS_GlobalCluster.
func New__AWS_RDS_GlobalCluster(logicalName string) *AWS_RDS_GlobalCluster {
	return &AWS_RDS_GlobalCluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_RDS_GlobalCluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_RDS_GlobalCluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_RDS_GlobalCluster) GetType() string {
	return AWS_RDS_GlobalCluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_RDS_GlobalCluster) Set__LogicalName(v string) *AWS_RDS_GlobalCluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_RDS_GlobalCluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_RDS_GlobalCluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_RDS_GlobalCluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_RDS_GlobalCluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_RDS_GlobalCluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_RDS_GlobalCluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_RDS_GlobalCluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_RDS_GlobalCluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_RDS_GlobalCluster) Set__RequestedOutputs(v []cfz.Output) *AWS_RDS_GlobalCluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_RDS_GlobalCluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_RDS_GlobalCluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DeletionProtection updates property "DeletionProtection".
func (t *AWS_RDS_GlobalCluster) Set__DeletionProtection(v cfz.Expression[bool]) *AWS_RDS_GlobalCluster {
	t.DeletionProtection = v
	return t
}

// SetV__DeletionProtection updates property "DeletionProtection".
func (t *AWS_RDS_GlobalCluster) SetV__DeletionProtection(v bool) *AWS_RDS_GlobalCluster {
	t.DeletionProtection = cfz.V(v)
	return t
}

// Set__Engine updates property "Engine".
func (t *AWS_RDS_GlobalCluster) Set__Engine(v cfz.Expression[string]) *AWS_RDS_GlobalCluster {
	t.Engine = v
	return t
}

// SetV__Engine updates property "Engine".
func (t *AWS_RDS_GlobalCluster) SetV__Engine(v string) *AWS_RDS_GlobalCluster {
	t.Engine = cfz.V(v)
	return t
}

// Set__EngineLifecycleSupport updates property "EngineLifecycleSupport".
func (t *AWS_RDS_GlobalCluster) Set__EngineLifecycleSupport(v cfz.Expression[string]) *AWS_RDS_GlobalCluster {
	t.EngineLifecycleSupport = v
	return t
}

// SetV__EngineLifecycleSupport updates property "EngineLifecycleSupport".
func (t *AWS_RDS_GlobalCluster) SetV__EngineLifecycleSupport(v string) *AWS_RDS_GlobalCluster {
	t.EngineLifecycleSupport = cfz.V(v)
	return t
}

// Set__EngineVersion updates property "EngineVersion".
func (t *AWS_RDS_GlobalCluster) Set__EngineVersion(v cfz.Expression[string]) *AWS_RDS_GlobalCluster {
	t.EngineVersion = v
	return t
}

// SetV__EngineVersion updates property "EngineVersion".
func (t *AWS_RDS_GlobalCluster) SetV__EngineVersion(v string) *AWS_RDS_GlobalCluster {
	t.EngineVersion = cfz.V(v)
	return t
}

// Set__GlobalClusterIdentifier updates property "GlobalClusterIdentifier".
func (t *AWS_RDS_GlobalCluster) Set__GlobalClusterIdentifier(v cfz.Expression[string]) *AWS_RDS_GlobalCluster {
	t.GlobalClusterIdentifier = v
	return t
}

// SetV__GlobalClusterIdentifier updates property "GlobalClusterIdentifier".
func (t *AWS_RDS_GlobalCluster) SetV__GlobalClusterIdentifier(v string) *AWS_RDS_GlobalCluster {
	t.GlobalClusterIdentifier = cfz.V(v)
	return t
}

// Set__GlobalEndpoint updates property "GlobalEndpoint".
func (t *AWS_RDS_GlobalCluster) Set__GlobalEndpoint(v cfz.Expression[AWS_RDS_GlobalCluster_GlobalEndpoint]) *AWS_RDS_GlobalCluster {
	t.GlobalEndpoint = v
	return t
}

// SetV__GlobalEndpoint updates property "GlobalEndpoint".
func (t *AWS_RDS_GlobalCluster) SetV__GlobalEndpoint(v AWS_RDS_GlobalCluster_GlobalEndpoint) *AWS_RDS_GlobalCluster {
	t.GlobalEndpoint = cfz.V(v)
	return t
}

// Set__SourceDBClusterIdentifier updates property "SourceDBClusterIdentifier".
func (t *AWS_RDS_GlobalCluster) Set__SourceDBClusterIdentifier(v cfz.Expression[string]) *AWS_RDS_GlobalCluster {
	t.SourceDBClusterIdentifier = v
	return t
}

// SetV__SourceDBClusterIdentifier updates property "SourceDBClusterIdentifier".
func (t *AWS_RDS_GlobalCluster) SetV__SourceDBClusterIdentifier(v string) *AWS_RDS_GlobalCluster {
	t.SourceDBClusterIdentifier = cfz.V(v)
	return t
}

// Set__StorageEncrypted updates property "StorageEncrypted".
func (t *AWS_RDS_GlobalCluster) Set__StorageEncrypted(v cfz.Expression[bool]) *AWS_RDS_GlobalCluster {
	t.StorageEncrypted = v
	return t
}

// SetV__StorageEncrypted updates property "StorageEncrypted".
func (t *AWS_RDS_GlobalCluster) SetV__StorageEncrypted(v bool) *AWS_RDS_GlobalCluster {
	t.StorageEncrypted = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_RDS_GlobalCluster) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_RDS_GlobalCluster {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_RDS_GlobalCluster) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_RDS_GlobalCluster {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_RDS_GlobalCluster) SetSV__Tags(v ...cfz.Tag) *AWS_RDS_GlobalCluster {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_RDS_GlobalCluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_RDS_GlobalCluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_RDS_GlobalCluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_RDS_GlobalCluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_RDS_GlobalCluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
