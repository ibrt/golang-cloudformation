// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_rds

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_RDS_DBCluster)(nil)
	_ cfz.Resource                   = (*AWS_RDS_DBCluster)(nil)
)

const (
	// AWS_RDS_DBCluster__Type is the CloudFormation type for AWS::RDS::DBCluster.
	AWS_RDS_DBCluster__Type = "AWS::RDS::DBCluster"
)

var (
	// AWS_RDS_DBCluster__AttributesMap reports all the CloudFormation attributes for AWS::RDS::DBCluster.
	AWS_RDS_DBCluster__AttributesMap = struct {
		DBClusterArn               string
		DBClusterResourceId        string
		Endpoint                   string
		Endpoint_Address           string
		Endpoint_Port              string
		MasterUserSecret_SecretArn string
		ReadEndpoint_Address       string
		StorageThroughput          string
	}{
		DBClusterArn:               "DBClusterArn",
		DBClusterResourceId:        "DBClusterResourceId",
		Endpoint:                   "Endpoint",
		Endpoint_Address:           "Endpoint.Address",
		Endpoint_Port:              "Endpoint.Port",
		MasterUserSecret_SecretArn: "MasterUserSecret.SecretArn",
		ReadEndpoint_Address:       "ReadEndpoint.Address",
		StorageThroughput:          "StorageThroughput",
	}

	// AWS_RDS_DBCluster__AttributesSlice reports all the CloudFormation attributes for AWS::RDS::DBCluster.
	AWS_RDS_DBCluster__AttributesSlice = []string{
		AWS_RDS_DBCluster__AttributesMap.DBClusterArn,
		AWS_RDS_DBCluster__AttributesMap.DBClusterResourceId,
		AWS_RDS_DBCluster__AttributesMap.Endpoint,
		AWS_RDS_DBCluster__AttributesMap.Endpoint_Address,
		AWS_RDS_DBCluster__AttributesMap.Endpoint_Port,
		AWS_RDS_DBCluster__AttributesMap.MasterUserSecret_SecretArn,
		AWS_RDS_DBCluster__AttributesMap.ReadEndpoint_Address,
		AWS_RDS_DBCluster__AttributesMap.StorageThroughput,
	}
)

var (
	// AWS_RDS_DBCluster__PropertiesMap reports all the CloudFormation properties for AWS::RDS::DBCluster.
	AWS_RDS_DBCluster__PropertiesMap = struct {
		AllocatedStorage                   string
		AssociatedRoles                    string
		AutoMinorVersionUpgrade            string
		AvailabilityZones                  string
		BacktrackWindow                    string
		BackupRetentionPeriod              string
		ClusterScalabilityType             string
		CopyTagsToSnapshot                 string
		DBClusterIdentifier                string
		DBClusterInstanceClass             string
		DBClusterParameterGroupName        string
		DBInstanceParameterGroupName       string
		DBSubnetGroupName                  string
		DBSystemId                         string
		DatabaseName                       string
		DeletionProtection                 string
		Domain                             string
		DomainIAMRoleName                  string
		EnableCloudwatchLogsExports        string
		EnableGlobalWriteForwarding        string
		EnableHttpEndpoint                 string
		EnableIAMDatabaseAuthentication    string
		EnableLocalWriteForwarding         string
		Engine                             string
		EngineLifecycleSupport             string
		EngineMode                         string
		EngineVersion                      string
		GlobalClusterIdentifier            string
		Iops                               string
		KmsKeyId                           string
		ManageMasterUserPassword           string
		MasterUserPassword                 string
		MasterUserSecret                   string
		MasterUsername                     string
		MonitoringInterval                 string
		MonitoringRoleArn                  string
		NetworkType                        string
		PerformanceInsightsEnabled         string
		PerformanceInsightsKmsKeyId        string
		PerformanceInsightsRetentionPeriod string
		Port                               string
		PreferredBackupWindow              string
		PreferredMaintenanceWindow         string
		PubliclyAccessible                 string
		ReplicationSourceIdentifier        string
		RestoreToTime                      string
		RestoreType                        string
		ScalingConfiguration               string
		ServerlessV2ScalingConfiguration   string
		SnapshotIdentifier                 string
		SourceDBClusterIdentifier          string
		SourceRegion                       string
		StorageEncrypted                   string
		StorageType                        string
		Tags                               string
		UseLatestRestorableTime            string
		VpcSecurityGroupIds                string
	}{
		AllocatedStorage:                   "AllocatedStorage",
		AssociatedRoles:                    "AssociatedRoles",
		AutoMinorVersionUpgrade:            "AutoMinorVersionUpgrade",
		AvailabilityZones:                  "AvailabilityZones",
		BacktrackWindow:                    "BacktrackWindow",
		BackupRetentionPeriod:              "BackupRetentionPeriod",
		ClusterScalabilityType:             "ClusterScalabilityType",
		CopyTagsToSnapshot:                 "CopyTagsToSnapshot",
		DBClusterIdentifier:                "DBClusterIdentifier",
		DBClusterInstanceClass:             "DBClusterInstanceClass",
		DBClusterParameterGroupName:        "DBClusterParameterGroupName",
		DBInstanceParameterGroupName:       "DBInstanceParameterGroupName",
		DBSubnetGroupName:                  "DBSubnetGroupName",
		DBSystemId:                         "DBSystemId",
		DatabaseName:                       "DatabaseName",
		DeletionProtection:                 "DeletionProtection",
		Domain:                             "Domain",
		DomainIAMRoleName:                  "DomainIAMRoleName",
		EnableCloudwatchLogsExports:        "EnableCloudwatchLogsExports",
		EnableGlobalWriteForwarding:        "EnableGlobalWriteForwarding",
		EnableHttpEndpoint:                 "EnableHttpEndpoint",
		EnableIAMDatabaseAuthentication:    "EnableIAMDatabaseAuthentication",
		EnableLocalWriteForwarding:         "EnableLocalWriteForwarding",
		Engine:                             "Engine",
		EngineLifecycleSupport:             "EngineLifecycleSupport",
		EngineMode:                         "EngineMode",
		EngineVersion:                      "EngineVersion",
		GlobalClusterIdentifier:            "GlobalClusterIdentifier",
		Iops:                               "Iops",
		KmsKeyId:                           "KmsKeyId",
		ManageMasterUserPassword:           "ManageMasterUserPassword",
		MasterUserPassword:                 "MasterUserPassword",
		MasterUserSecret:                   "MasterUserSecret",
		MasterUsername:                     "MasterUsername",
		MonitoringInterval:                 "MonitoringInterval",
		MonitoringRoleArn:                  "MonitoringRoleArn",
		NetworkType:                        "NetworkType",
		PerformanceInsightsEnabled:         "PerformanceInsightsEnabled",
		PerformanceInsightsKmsKeyId:        "PerformanceInsightsKmsKeyId",
		PerformanceInsightsRetentionPeriod: "PerformanceInsightsRetentionPeriod",
		Port:                               "Port",
		PreferredBackupWindow:              "PreferredBackupWindow",
		PreferredMaintenanceWindow:         "PreferredMaintenanceWindow",
		PubliclyAccessible:                 "PubliclyAccessible",
		ReplicationSourceIdentifier:        "ReplicationSourceIdentifier",
		RestoreToTime:                      "RestoreToTime",
		RestoreType:                        "RestoreType",
		ScalingConfiguration:               "ScalingConfiguration",
		ServerlessV2ScalingConfiguration:   "ServerlessV2ScalingConfiguration",
		SnapshotIdentifier:                 "SnapshotIdentifier",
		SourceDBClusterIdentifier:          "SourceDBClusterIdentifier",
		SourceRegion:                       "SourceRegion",
		StorageEncrypted:                   "StorageEncrypted",
		StorageType:                        "StorageType",
		Tags:                               "Tags",
		UseLatestRestorableTime:            "UseLatestRestorableTime",
		VpcSecurityGroupIds:                "VpcSecurityGroupIds",
	}

	// AWS_RDS_DBCluster__PropertiesSlice reports all the CloudFormation properties for AWS::RDS::DBCluster.
	AWS_RDS_DBCluster__PropertiesSlice = []string{
		AWS_RDS_DBCluster__PropertiesMap.AllocatedStorage,
		AWS_RDS_DBCluster__PropertiesMap.AssociatedRoles,
		AWS_RDS_DBCluster__PropertiesMap.AutoMinorVersionUpgrade,
		AWS_RDS_DBCluster__PropertiesMap.AvailabilityZones,
		AWS_RDS_DBCluster__PropertiesMap.BacktrackWindow,
		AWS_RDS_DBCluster__PropertiesMap.BackupRetentionPeriod,
		AWS_RDS_DBCluster__PropertiesMap.ClusterScalabilityType,
		AWS_RDS_DBCluster__PropertiesMap.CopyTagsToSnapshot,
		AWS_RDS_DBCluster__PropertiesMap.DBClusterIdentifier,
		AWS_RDS_DBCluster__PropertiesMap.DBClusterInstanceClass,
		AWS_RDS_DBCluster__PropertiesMap.DBClusterParameterGroupName,
		AWS_RDS_DBCluster__PropertiesMap.DBInstanceParameterGroupName,
		AWS_RDS_DBCluster__PropertiesMap.DBSubnetGroupName,
		AWS_RDS_DBCluster__PropertiesMap.DBSystemId,
		AWS_RDS_DBCluster__PropertiesMap.DatabaseName,
		AWS_RDS_DBCluster__PropertiesMap.DeletionProtection,
		AWS_RDS_DBCluster__PropertiesMap.Domain,
		AWS_RDS_DBCluster__PropertiesMap.DomainIAMRoleName,
		AWS_RDS_DBCluster__PropertiesMap.EnableCloudwatchLogsExports,
		AWS_RDS_DBCluster__PropertiesMap.EnableGlobalWriteForwarding,
		AWS_RDS_DBCluster__PropertiesMap.EnableHttpEndpoint,
		AWS_RDS_DBCluster__PropertiesMap.EnableIAMDatabaseAuthentication,
		AWS_RDS_DBCluster__PropertiesMap.EnableLocalWriteForwarding,
		AWS_RDS_DBCluster__PropertiesMap.Engine,
		AWS_RDS_DBCluster__PropertiesMap.EngineLifecycleSupport,
		AWS_RDS_DBCluster__PropertiesMap.EngineMode,
		AWS_RDS_DBCluster__PropertiesMap.EngineVersion,
		AWS_RDS_DBCluster__PropertiesMap.GlobalClusterIdentifier,
		AWS_RDS_DBCluster__PropertiesMap.Iops,
		AWS_RDS_DBCluster__PropertiesMap.KmsKeyId,
		AWS_RDS_DBCluster__PropertiesMap.ManageMasterUserPassword,
		AWS_RDS_DBCluster__PropertiesMap.MasterUserPassword,
		AWS_RDS_DBCluster__PropertiesMap.MasterUserSecret,
		AWS_RDS_DBCluster__PropertiesMap.MasterUsername,
		AWS_RDS_DBCluster__PropertiesMap.MonitoringInterval,
		AWS_RDS_DBCluster__PropertiesMap.MonitoringRoleArn,
		AWS_RDS_DBCluster__PropertiesMap.NetworkType,
		AWS_RDS_DBCluster__PropertiesMap.PerformanceInsightsEnabled,
		AWS_RDS_DBCluster__PropertiesMap.PerformanceInsightsKmsKeyId,
		AWS_RDS_DBCluster__PropertiesMap.PerformanceInsightsRetentionPeriod,
		AWS_RDS_DBCluster__PropertiesMap.Port,
		AWS_RDS_DBCluster__PropertiesMap.PreferredBackupWindow,
		AWS_RDS_DBCluster__PropertiesMap.PreferredMaintenanceWindow,
		AWS_RDS_DBCluster__PropertiesMap.PubliclyAccessible,
		AWS_RDS_DBCluster__PropertiesMap.ReplicationSourceIdentifier,
		AWS_RDS_DBCluster__PropertiesMap.RestoreToTime,
		AWS_RDS_DBCluster__PropertiesMap.RestoreType,
		AWS_RDS_DBCluster__PropertiesMap.ScalingConfiguration,
		AWS_RDS_DBCluster__PropertiesMap.ServerlessV2ScalingConfiguration,
		AWS_RDS_DBCluster__PropertiesMap.SnapshotIdentifier,
		AWS_RDS_DBCluster__PropertiesMap.SourceDBClusterIdentifier,
		AWS_RDS_DBCluster__PropertiesMap.SourceRegion,
		AWS_RDS_DBCluster__PropertiesMap.StorageEncrypted,
		AWS_RDS_DBCluster__PropertiesMap.StorageType,
		AWS_RDS_DBCluster__PropertiesMap.Tags,
		AWS_RDS_DBCluster__PropertiesMap.UseLatestRestorableTime,
		AWS_RDS_DBCluster__PropertiesMap.VpcSecurityGroupIds,
	}
)

// AWS_RDS_DBCluster is a binding for AWS::RDS::DBCluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html
type AWS_RDS_DBCluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AllocatedStorage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-allocatedstorage
	AllocatedStorage cfz.Expression[int32] `json:"AllocatedStorage,omitempty"`

	// AssociatedRoles is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-associatedroles
	AssociatedRoles cfz.ExpressionSlice[AWS_RDS_DBCluster_DBClusterRole] `json:"AssociatedRoles,omitempty"`

	// AutoMinorVersionUpgrade is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-autominorversionupgrade
	AutoMinorVersionUpgrade cfz.Expression[bool] `json:"AutoMinorVersionUpgrade,omitempty"`

	// AvailabilityZones is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-availabilityzones
	AvailabilityZones cfz.ExpressionSlice[string] `json:"AvailabilityZones,omitempty"`

	// BacktrackWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-backtrackwindow
	BacktrackWindow cfz.Expression[int32] `json:"BacktrackWindow,omitempty"`

	// BackupRetentionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-backupretentionperiod
	BackupRetentionPeriod cfz.Expression[int32] `json:"BackupRetentionPeriod,omitempty"`

	// ClusterScalabilityType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-clusterscalabilitytype
	ClusterScalabilityType cfz.Expression[string] `json:"ClusterScalabilityType,omitempty"`

	// CopyTagsToSnapshot is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-copytagstosnapshot
	CopyTagsToSnapshot cfz.Expression[bool] `json:"CopyTagsToSnapshot,omitempty"`

	// DBClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusteridentifier
	DBClusterIdentifier cfz.Expression[string] `json:"DBClusterIdentifier,omitempty"`

	// DBClusterInstanceClass is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusterinstanceclass
	DBClusterInstanceClass cfz.Expression[string] `json:"DBClusterInstanceClass,omitempty"`

	// DBClusterParameterGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbclusterparametergroupname
	DBClusterParameterGroupName cfz.Expression[string] `json:"DBClusterParameterGroupName,omitempty"`

	// DBInstanceParameterGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbinstanceparametergroupname
	DBInstanceParameterGroupName cfz.Expression[string] `json:"DBInstanceParameterGroupName,omitempty"`

	// DBSubnetGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbsubnetgroupname
	DBSubnetGroupName cfz.Expression[string] `json:"DBSubnetGroupName,omitempty"`

	// DBSystemId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-dbsystemid
	DBSystemId cfz.Expression[string] `json:"DBSystemId,omitempty"`

	// DatabaseName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-databasename
	DatabaseName cfz.Expression[string] `json:"DatabaseName,omitempty"`

	// DeletionProtection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-deletionprotection
	DeletionProtection cfz.Expression[bool] `json:"DeletionProtection,omitempty"`

	// Domain is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-domain
	Domain cfz.Expression[string] `json:"Domain,omitempty"`

	// DomainIAMRoleName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-domainiamrolename
	DomainIAMRoleName cfz.Expression[string] `json:"DomainIAMRoleName,omitempty"`

	// EnableCloudwatchLogsExports is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablecloudwatchlogsexports
	EnableCloudwatchLogsExports cfz.ExpressionSlice[string] `json:"EnableCloudwatchLogsExports,omitempty"`

	// EnableGlobalWriteForwarding is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enableglobalwriteforwarding
	EnableGlobalWriteForwarding cfz.Expression[bool] `json:"EnableGlobalWriteForwarding,omitempty"`

	// EnableHttpEndpoint is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablehttpendpoint
	EnableHttpEndpoint cfz.Expression[bool] `json:"EnableHttpEndpoint,omitempty"`

	// EnableIAMDatabaseAuthentication is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enableiamdatabaseauthentication
	EnableIAMDatabaseAuthentication cfz.Expression[bool] `json:"EnableIAMDatabaseAuthentication,omitempty"`

	// EnableLocalWriteForwarding is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enablelocalwriteforwarding
	EnableLocalWriteForwarding cfz.Expression[bool] `json:"EnableLocalWriteForwarding,omitempty"`

	// Engine is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engine
	Engine cfz.Expression[string] `json:"Engine,omitempty"`

	// EngineLifecycleSupport is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enginelifecyclesupport
	EngineLifecycleSupport cfz.Expression[string] `json:"EngineLifecycleSupport,omitempty"`

	// EngineMode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-enginemode
	EngineMode cfz.Expression[string] `json:"EngineMode,omitempty"`

	// EngineVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-engineversion
	EngineVersion cfz.Expression[string] `json:"EngineVersion,omitempty"`

	// GlobalClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-globalclusteridentifier
	GlobalClusterIdentifier cfz.Expression[string] `json:"GlobalClusterIdentifier,omitempty"`

	// Iops is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-iops
	Iops cfz.Expression[int32] `json:"Iops,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// ManageMasterUserPassword is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-managemasteruserpassword
	ManageMasterUserPassword cfz.Expression[bool] `json:"ManageMasterUserPassword,omitempty"`

	// MasterUserPassword is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masteruserpassword
	MasterUserPassword cfz.Expression[string] `json:"MasterUserPassword,omitempty"`

	// MasterUserSecret is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masterusersecret
	MasterUserSecret cfz.Expression[AWS_RDS_DBCluster_MasterUserSecret] `json:"MasterUserSecret,omitempty"`

	// MasterUsername is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-masterusername
	MasterUsername cfz.Expression[string] `json:"MasterUsername,omitempty"`

	// MonitoringInterval is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-monitoringinterval
	MonitoringInterval cfz.Expression[int32] `json:"MonitoringInterval,omitempty"`

	// MonitoringRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-monitoringrolearn
	MonitoringRoleArn cfz.Expression[string] `json:"MonitoringRoleArn,omitempty"`

	// NetworkType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-networktype
	NetworkType cfz.Expression[string] `json:"NetworkType,omitempty"`

	// PerformanceInsightsEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightsenabled
	PerformanceInsightsEnabled cfz.Expression[bool] `json:"PerformanceInsightsEnabled,omitempty"`

	// PerformanceInsightsKmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightskmskeyid
	PerformanceInsightsKmsKeyId cfz.Expression[string] `json:"PerformanceInsightsKmsKeyId,omitempty"`

	// PerformanceInsightsRetentionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-performanceinsightsretentionperiod
	PerformanceInsightsRetentionPeriod cfz.Expression[int32] `json:"PerformanceInsightsRetentionPeriod,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-port
	Port cfz.Expression[int32] `json:"Port,omitempty"`

	// PreferredBackupWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-preferredbackupwindow
	PreferredBackupWindow cfz.Expression[string] `json:"PreferredBackupWindow,omitempty"`

	// PreferredMaintenanceWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-preferredmaintenancewindow
	PreferredMaintenanceWindow cfz.Expression[string] `json:"PreferredMaintenanceWindow,omitempty"`

	// PubliclyAccessible is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-publiclyaccessible
	PubliclyAccessible cfz.Expression[bool] `json:"PubliclyAccessible,omitempty"`

	// ReplicationSourceIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-replicationsourceidentifier
	ReplicationSourceIdentifier cfz.Expression[string] `json:"ReplicationSourceIdentifier,omitempty"`

	// RestoreToTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-restoretotime
	RestoreToTime cfz.Expression[string] `json:"RestoreToTime,omitempty"`

	// RestoreType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-restoretype
	RestoreType cfz.Expression[string] `json:"RestoreType,omitempty"`

	// ScalingConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-scalingconfiguration
	ScalingConfiguration cfz.Expression[AWS_RDS_DBCluster_ScalingConfiguration] `json:"ScalingConfiguration,omitempty"`

	// ServerlessV2ScalingConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-serverlessv2scalingconfiguration
	ServerlessV2ScalingConfiguration cfz.Expression[AWS_RDS_DBCluster_ServerlessV2ScalingConfiguration] `json:"ServerlessV2ScalingConfiguration,omitempty"`

	// SnapshotIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-snapshotidentifier
	SnapshotIdentifier cfz.Expression[string] `json:"SnapshotIdentifier,omitempty"`

	// SourceDBClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-sourcedbclusteridentifier
	SourceDBClusterIdentifier cfz.Expression[string] `json:"SourceDBClusterIdentifier,omitempty"`

	// SourceRegion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-sourceregion
	SourceRegion cfz.Expression[string] `json:"SourceRegion,omitempty"`

	// StorageEncrypted is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-storageencrypted
	StorageEncrypted cfz.Expression[bool] `json:"StorageEncrypted,omitempty"`

	// StorageType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-storagetype
	StorageType cfz.Expression[string] `json:"StorageType,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UseLatestRestorableTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-uselatestrestorabletime
	UseLatestRestorableTime cfz.Expression[bool] `json:"UseLatestRestorableTime,omitempty"`

	// VpcSecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html#cfn-rds-dbcluster-vpcsecuritygroupids
	VpcSecurityGroupIds cfz.ExpressionSlice[string] `json:"VpcSecurityGroupIds,omitempty"`
}

// New__AWS_RDS_DBCluster initializes a new *AWS_RDS_DBCluster.
func New__AWS_RDS_DBCluster(logicalName string) *AWS_RDS_DBCluster {
	return &AWS_RDS_DBCluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_RDS_DBCluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_RDS_DBCluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_RDS_DBCluster) GetType() string {
	return AWS_RDS_DBCluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_RDS_DBCluster) Set__LogicalName(v string) *AWS_RDS_DBCluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_RDS_DBCluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_RDS_DBCluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_RDS_DBCluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_RDS_DBCluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_RDS_DBCluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_RDS_DBCluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_RDS_DBCluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_RDS_DBCluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_RDS_DBCluster) Set__RequestedOutputs(v []cfz.Output) *AWS_RDS_DBCluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_RDS_DBCluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_RDS_DBCluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AllocatedStorage updates property "AllocatedStorage".
func (t *AWS_RDS_DBCluster) Set__AllocatedStorage(v cfz.Expression[int32]) *AWS_RDS_DBCluster {
	t.AllocatedStorage = v
	return t
}

// SetV__AllocatedStorage updates property "AllocatedStorage".
func (t *AWS_RDS_DBCluster) SetV__AllocatedStorage(v int32) *AWS_RDS_DBCluster {
	t.AllocatedStorage = cfz.V(v)
	return t
}

// Set__AssociatedRoles updates property "AssociatedRoles".
func (t *AWS_RDS_DBCluster) Set__AssociatedRoles(v cfz.ExpressionSlice[AWS_RDS_DBCluster_DBClusterRole]) *AWS_RDS_DBCluster {
	t.AssociatedRoles = v
	return t
}

// SetS__AssociatedRoles updates property "AssociatedRoles".
func (t *AWS_RDS_DBCluster) SetS__AssociatedRoles(v ...cfz.Expression[AWS_RDS_DBCluster_DBClusterRole]) *AWS_RDS_DBCluster {
	t.AssociatedRoles = cfz.S(v...)
	return t
}

// SetSV__AssociatedRoles updates property "AssociatedRoles".
func (t *AWS_RDS_DBCluster) SetSV__AssociatedRoles(v ...AWS_RDS_DBCluster_DBClusterRole) *AWS_RDS_DBCluster {
	t.AssociatedRoles = cfz.SV(v...)
	return t
}

// Set__AutoMinorVersionUpgrade updates property "AutoMinorVersionUpgrade".
func (t *AWS_RDS_DBCluster) Set__AutoMinorVersionUpgrade(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.AutoMinorVersionUpgrade = v
	return t
}

// SetV__AutoMinorVersionUpgrade updates property "AutoMinorVersionUpgrade".
func (t *AWS_RDS_DBCluster) SetV__AutoMinorVersionUpgrade(v bool) *AWS_RDS_DBCluster {
	t.AutoMinorVersionUpgrade = cfz.V(v)
	return t
}

// Set__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_RDS_DBCluster) Set__AvailabilityZones(v cfz.ExpressionSlice[string]) *AWS_RDS_DBCluster {
	t.AvailabilityZones = v
	return t
}

// SetS__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_RDS_DBCluster) SetS__AvailabilityZones(v ...cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.AvailabilityZones = cfz.S(v...)
	return t
}

// SetSV__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_RDS_DBCluster) SetSV__AvailabilityZones(v ...string) *AWS_RDS_DBCluster {
	t.AvailabilityZones = cfz.SV(v...)
	return t
}

// Set__BacktrackWindow updates property "BacktrackWindow".
func (t *AWS_RDS_DBCluster) Set__BacktrackWindow(v cfz.Expression[int32]) *AWS_RDS_DBCluster {
	t.BacktrackWindow = v
	return t
}

// SetV__BacktrackWindow updates property "BacktrackWindow".
func (t *AWS_RDS_DBCluster) SetV__BacktrackWindow(v int32) *AWS_RDS_DBCluster {
	t.BacktrackWindow = cfz.V(v)
	return t
}

// Set__BackupRetentionPeriod updates property "BackupRetentionPeriod".
func (t *AWS_RDS_DBCluster) Set__BackupRetentionPeriod(v cfz.Expression[int32]) *AWS_RDS_DBCluster {
	t.BackupRetentionPeriod = v
	return t
}

// SetV__BackupRetentionPeriod updates property "BackupRetentionPeriod".
func (t *AWS_RDS_DBCluster) SetV__BackupRetentionPeriod(v int32) *AWS_RDS_DBCluster {
	t.BackupRetentionPeriod = cfz.V(v)
	return t
}

// Set__ClusterScalabilityType updates property "ClusterScalabilityType".
func (t *AWS_RDS_DBCluster) Set__ClusterScalabilityType(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.ClusterScalabilityType = v
	return t
}

// SetV__ClusterScalabilityType updates property "ClusterScalabilityType".
func (t *AWS_RDS_DBCluster) SetV__ClusterScalabilityType(v string) *AWS_RDS_DBCluster {
	t.ClusterScalabilityType = cfz.V(v)
	return t
}

// Set__CopyTagsToSnapshot updates property "CopyTagsToSnapshot".
func (t *AWS_RDS_DBCluster) Set__CopyTagsToSnapshot(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.CopyTagsToSnapshot = v
	return t
}

// SetV__CopyTagsToSnapshot updates property "CopyTagsToSnapshot".
func (t *AWS_RDS_DBCluster) SetV__CopyTagsToSnapshot(v bool) *AWS_RDS_DBCluster {
	t.CopyTagsToSnapshot = cfz.V(v)
	return t
}

// Set__DBClusterIdentifier updates property "DBClusterIdentifier".
func (t *AWS_RDS_DBCluster) Set__DBClusterIdentifier(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.DBClusterIdentifier = v
	return t
}

// SetV__DBClusterIdentifier updates property "DBClusterIdentifier".
func (t *AWS_RDS_DBCluster) SetV__DBClusterIdentifier(v string) *AWS_RDS_DBCluster {
	t.DBClusterIdentifier = cfz.V(v)
	return t
}

// Set__DBClusterInstanceClass updates property "DBClusterInstanceClass".
func (t *AWS_RDS_DBCluster) Set__DBClusterInstanceClass(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.DBClusterInstanceClass = v
	return t
}

// SetV__DBClusterInstanceClass updates property "DBClusterInstanceClass".
func (t *AWS_RDS_DBCluster) SetV__DBClusterInstanceClass(v string) *AWS_RDS_DBCluster {
	t.DBClusterInstanceClass = cfz.V(v)
	return t
}

// Set__DBClusterParameterGroupName updates property "DBClusterParameterGroupName".
func (t *AWS_RDS_DBCluster) Set__DBClusterParameterGroupName(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.DBClusterParameterGroupName = v
	return t
}

// SetV__DBClusterParameterGroupName updates property "DBClusterParameterGroupName".
func (t *AWS_RDS_DBCluster) SetV__DBClusterParameterGroupName(v string) *AWS_RDS_DBCluster {
	t.DBClusterParameterGroupName = cfz.V(v)
	return t
}

// Set__DBInstanceParameterGroupName updates property "DBInstanceParameterGroupName".
func (t *AWS_RDS_DBCluster) Set__DBInstanceParameterGroupName(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.DBInstanceParameterGroupName = v
	return t
}

// SetV__DBInstanceParameterGroupName updates property "DBInstanceParameterGroupName".
func (t *AWS_RDS_DBCluster) SetV__DBInstanceParameterGroupName(v string) *AWS_RDS_DBCluster {
	t.DBInstanceParameterGroupName = cfz.V(v)
	return t
}

// Set__DBSubnetGroupName updates property "DBSubnetGroupName".
func (t *AWS_RDS_DBCluster) Set__DBSubnetGroupName(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.DBSubnetGroupName = v
	return t
}

// SetV__DBSubnetGroupName updates property "DBSubnetGroupName".
func (t *AWS_RDS_DBCluster) SetV__DBSubnetGroupName(v string) *AWS_RDS_DBCluster {
	t.DBSubnetGroupName = cfz.V(v)
	return t
}

// Set__DBSystemId updates property "DBSystemId".
func (t *AWS_RDS_DBCluster) Set__DBSystemId(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.DBSystemId = v
	return t
}

// SetV__DBSystemId updates property "DBSystemId".
func (t *AWS_RDS_DBCluster) SetV__DBSystemId(v string) *AWS_RDS_DBCluster {
	t.DBSystemId = cfz.V(v)
	return t
}

// Set__DatabaseName updates property "DatabaseName".
func (t *AWS_RDS_DBCluster) Set__DatabaseName(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.DatabaseName = v
	return t
}

// SetV__DatabaseName updates property "DatabaseName".
func (t *AWS_RDS_DBCluster) SetV__DatabaseName(v string) *AWS_RDS_DBCluster {
	t.DatabaseName = cfz.V(v)
	return t
}

// Set__DeletionProtection updates property "DeletionProtection".
func (t *AWS_RDS_DBCluster) Set__DeletionProtection(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.DeletionProtection = v
	return t
}

// SetV__DeletionProtection updates property "DeletionProtection".
func (t *AWS_RDS_DBCluster) SetV__DeletionProtection(v bool) *AWS_RDS_DBCluster {
	t.DeletionProtection = cfz.V(v)
	return t
}

// Set__Domain updates property "Domain".
func (t *AWS_RDS_DBCluster) Set__Domain(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.Domain = v
	return t
}

// SetV__Domain updates property "Domain".
func (t *AWS_RDS_DBCluster) SetV__Domain(v string) *AWS_RDS_DBCluster {
	t.Domain = cfz.V(v)
	return t
}

// Set__DomainIAMRoleName updates property "DomainIAMRoleName".
func (t *AWS_RDS_DBCluster) Set__DomainIAMRoleName(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.DomainIAMRoleName = v
	return t
}

// SetV__DomainIAMRoleName updates property "DomainIAMRoleName".
func (t *AWS_RDS_DBCluster) SetV__DomainIAMRoleName(v string) *AWS_RDS_DBCluster {
	t.DomainIAMRoleName = cfz.V(v)
	return t
}

// Set__EnableCloudwatchLogsExports updates property "EnableCloudwatchLogsExports".
func (t *AWS_RDS_DBCluster) Set__EnableCloudwatchLogsExports(v cfz.ExpressionSlice[string]) *AWS_RDS_DBCluster {
	t.EnableCloudwatchLogsExports = v
	return t
}

// SetS__EnableCloudwatchLogsExports updates property "EnableCloudwatchLogsExports".
func (t *AWS_RDS_DBCluster) SetS__EnableCloudwatchLogsExports(v ...cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.EnableCloudwatchLogsExports = cfz.S(v...)
	return t
}

// SetSV__EnableCloudwatchLogsExports updates property "EnableCloudwatchLogsExports".
func (t *AWS_RDS_DBCluster) SetSV__EnableCloudwatchLogsExports(v ...string) *AWS_RDS_DBCluster {
	t.EnableCloudwatchLogsExports = cfz.SV(v...)
	return t
}

// Set__EnableGlobalWriteForwarding updates property "EnableGlobalWriteForwarding".
func (t *AWS_RDS_DBCluster) Set__EnableGlobalWriteForwarding(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.EnableGlobalWriteForwarding = v
	return t
}

// SetV__EnableGlobalWriteForwarding updates property "EnableGlobalWriteForwarding".
func (t *AWS_RDS_DBCluster) SetV__EnableGlobalWriteForwarding(v bool) *AWS_RDS_DBCluster {
	t.EnableGlobalWriteForwarding = cfz.V(v)
	return t
}

// Set__EnableHttpEndpoint updates property "EnableHttpEndpoint".
func (t *AWS_RDS_DBCluster) Set__EnableHttpEndpoint(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.EnableHttpEndpoint = v
	return t
}

// SetV__EnableHttpEndpoint updates property "EnableHttpEndpoint".
func (t *AWS_RDS_DBCluster) SetV__EnableHttpEndpoint(v bool) *AWS_RDS_DBCluster {
	t.EnableHttpEndpoint = cfz.V(v)
	return t
}

// Set__EnableIAMDatabaseAuthentication updates property "EnableIAMDatabaseAuthentication".
func (t *AWS_RDS_DBCluster) Set__EnableIAMDatabaseAuthentication(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.EnableIAMDatabaseAuthentication = v
	return t
}

// SetV__EnableIAMDatabaseAuthentication updates property "EnableIAMDatabaseAuthentication".
func (t *AWS_RDS_DBCluster) SetV__EnableIAMDatabaseAuthentication(v bool) *AWS_RDS_DBCluster {
	t.EnableIAMDatabaseAuthentication = cfz.V(v)
	return t
}

// Set__EnableLocalWriteForwarding updates property "EnableLocalWriteForwarding".
func (t *AWS_RDS_DBCluster) Set__EnableLocalWriteForwarding(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.EnableLocalWriteForwarding = v
	return t
}

// SetV__EnableLocalWriteForwarding updates property "EnableLocalWriteForwarding".
func (t *AWS_RDS_DBCluster) SetV__EnableLocalWriteForwarding(v bool) *AWS_RDS_DBCluster {
	t.EnableLocalWriteForwarding = cfz.V(v)
	return t
}

// Set__Engine updates property "Engine".
func (t *AWS_RDS_DBCluster) Set__Engine(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.Engine = v
	return t
}

// SetV__Engine updates property "Engine".
func (t *AWS_RDS_DBCluster) SetV__Engine(v string) *AWS_RDS_DBCluster {
	t.Engine = cfz.V(v)
	return t
}

// Set__EngineLifecycleSupport updates property "EngineLifecycleSupport".
func (t *AWS_RDS_DBCluster) Set__EngineLifecycleSupport(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.EngineLifecycleSupport = v
	return t
}

// SetV__EngineLifecycleSupport updates property "EngineLifecycleSupport".
func (t *AWS_RDS_DBCluster) SetV__EngineLifecycleSupport(v string) *AWS_RDS_DBCluster {
	t.EngineLifecycleSupport = cfz.V(v)
	return t
}

// Set__EngineMode updates property "EngineMode".
func (t *AWS_RDS_DBCluster) Set__EngineMode(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.EngineMode = v
	return t
}

// SetV__EngineMode updates property "EngineMode".
func (t *AWS_RDS_DBCluster) SetV__EngineMode(v string) *AWS_RDS_DBCluster {
	t.EngineMode = cfz.V(v)
	return t
}

// Set__EngineVersion updates property "EngineVersion".
func (t *AWS_RDS_DBCluster) Set__EngineVersion(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.EngineVersion = v
	return t
}

// SetV__EngineVersion updates property "EngineVersion".
func (t *AWS_RDS_DBCluster) SetV__EngineVersion(v string) *AWS_RDS_DBCluster {
	t.EngineVersion = cfz.V(v)
	return t
}

// Set__GlobalClusterIdentifier updates property "GlobalClusterIdentifier".
func (t *AWS_RDS_DBCluster) Set__GlobalClusterIdentifier(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.GlobalClusterIdentifier = v
	return t
}

// SetV__GlobalClusterIdentifier updates property "GlobalClusterIdentifier".
func (t *AWS_RDS_DBCluster) SetV__GlobalClusterIdentifier(v string) *AWS_RDS_DBCluster {
	t.GlobalClusterIdentifier = cfz.V(v)
	return t
}

// Set__Iops updates property "Iops".
func (t *AWS_RDS_DBCluster) Set__Iops(v cfz.Expression[int32]) *AWS_RDS_DBCluster {
	t.Iops = v
	return t
}

// SetV__Iops updates property "Iops".
func (t *AWS_RDS_DBCluster) SetV__Iops(v int32) *AWS_RDS_DBCluster {
	t.Iops = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_RDS_DBCluster) Set__KmsKeyId(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_RDS_DBCluster) SetV__KmsKeyId(v string) *AWS_RDS_DBCluster {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__ManageMasterUserPassword updates property "ManageMasterUserPassword".
func (t *AWS_RDS_DBCluster) Set__ManageMasterUserPassword(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.ManageMasterUserPassword = v
	return t
}

// SetV__ManageMasterUserPassword updates property "ManageMasterUserPassword".
func (t *AWS_RDS_DBCluster) SetV__ManageMasterUserPassword(v bool) *AWS_RDS_DBCluster {
	t.ManageMasterUserPassword = cfz.V(v)
	return t
}

// Set__MasterUserPassword updates property "MasterUserPassword".
func (t *AWS_RDS_DBCluster) Set__MasterUserPassword(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.MasterUserPassword = v
	return t
}

// SetV__MasterUserPassword updates property "MasterUserPassword".
func (t *AWS_RDS_DBCluster) SetV__MasterUserPassword(v string) *AWS_RDS_DBCluster {
	t.MasterUserPassword = cfz.V(v)
	return t
}

// Set__MasterUserSecret updates property "MasterUserSecret".
func (t *AWS_RDS_DBCluster) Set__MasterUserSecret(v cfz.Expression[AWS_RDS_DBCluster_MasterUserSecret]) *AWS_RDS_DBCluster {
	t.MasterUserSecret = v
	return t
}

// SetV__MasterUserSecret updates property "MasterUserSecret".
func (t *AWS_RDS_DBCluster) SetV__MasterUserSecret(v AWS_RDS_DBCluster_MasterUserSecret) *AWS_RDS_DBCluster {
	t.MasterUserSecret = cfz.V(v)
	return t
}

// Set__MasterUsername updates property "MasterUsername".
func (t *AWS_RDS_DBCluster) Set__MasterUsername(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.MasterUsername = v
	return t
}

// SetV__MasterUsername updates property "MasterUsername".
func (t *AWS_RDS_DBCluster) SetV__MasterUsername(v string) *AWS_RDS_DBCluster {
	t.MasterUsername = cfz.V(v)
	return t
}

// Set__MonitoringInterval updates property "MonitoringInterval".
func (t *AWS_RDS_DBCluster) Set__MonitoringInterval(v cfz.Expression[int32]) *AWS_RDS_DBCluster {
	t.MonitoringInterval = v
	return t
}

// SetV__MonitoringInterval updates property "MonitoringInterval".
func (t *AWS_RDS_DBCluster) SetV__MonitoringInterval(v int32) *AWS_RDS_DBCluster {
	t.MonitoringInterval = cfz.V(v)
	return t
}

// Set__MonitoringRoleArn updates property "MonitoringRoleArn".
func (t *AWS_RDS_DBCluster) Set__MonitoringRoleArn(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.MonitoringRoleArn = v
	return t
}

// SetV__MonitoringRoleArn updates property "MonitoringRoleArn".
func (t *AWS_RDS_DBCluster) SetV__MonitoringRoleArn(v string) *AWS_RDS_DBCluster {
	t.MonitoringRoleArn = cfz.V(v)
	return t
}

// Set__NetworkType updates property "NetworkType".
func (t *AWS_RDS_DBCluster) Set__NetworkType(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.NetworkType = v
	return t
}

// SetV__NetworkType updates property "NetworkType".
func (t *AWS_RDS_DBCluster) SetV__NetworkType(v string) *AWS_RDS_DBCluster {
	t.NetworkType = cfz.V(v)
	return t
}

// Set__PerformanceInsightsEnabled updates property "PerformanceInsightsEnabled".
func (t *AWS_RDS_DBCluster) Set__PerformanceInsightsEnabled(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.PerformanceInsightsEnabled = v
	return t
}

// SetV__PerformanceInsightsEnabled updates property "PerformanceInsightsEnabled".
func (t *AWS_RDS_DBCluster) SetV__PerformanceInsightsEnabled(v bool) *AWS_RDS_DBCluster {
	t.PerformanceInsightsEnabled = cfz.V(v)
	return t
}

// Set__PerformanceInsightsKmsKeyId updates property "PerformanceInsightsKmsKeyId".
func (t *AWS_RDS_DBCluster) Set__PerformanceInsightsKmsKeyId(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.PerformanceInsightsKmsKeyId = v
	return t
}

// SetV__PerformanceInsightsKmsKeyId updates property "PerformanceInsightsKmsKeyId".
func (t *AWS_RDS_DBCluster) SetV__PerformanceInsightsKmsKeyId(v string) *AWS_RDS_DBCluster {
	t.PerformanceInsightsKmsKeyId = cfz.V(v)
	return t
}

// Set__PerformanceInsightsRetentionPeriod updates property "PerformanceInsightsRetentionPeriod".
func (t *AWS_RDS_DBCluster) Set__PerformanceInsightsRetentionPeriod(v cfz.Expression[int32]) *AWS_RDS_DBCluster {
	t.PerformanceInsightsRetentionPeriod = v
	return t
}

// SetV__PerformanceInsightsRetentionPeriod updates property "PerformanceInsightsRetentionPeriod".
func (t *AWS_RDS_DBCluster) SetV__PerformanceInsightsRetentionPeriod(v int32) *AWS_RDS_DBCluster {
	t.PerformanceInsightsRetentionPeriod = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t *AWS_RDS_DBCluster) Set__Port(v cfz.Expression[int32]) *AWS_RDS_DBCluster {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t *AWS_RDS_DBCluster) SetV__Port(v int32) *AWS_RDS_DBCluster {
	t.Port = cfz.V(v)
	return t
}

// Set__PreferredBackupWindow updates property "PreferredBackupWindow".
func (t *AWS_RDS_DBCluster) Set__PreferredBackupWindow(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.PreferredBackupWindow = v
	return t
}

// SetV__PreferredBackupWindow updates property "PreferredBackupWindow".
func (t *AWS_RDS_DBCluster) SetV__PreferredBackupWindow(v string) *AWS_RDS_DBCluster {
	t.PreferredBackupWindow = cfz.V(v)
	return t
}

// Set__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_RDS_DBCluster) Set__PreferredMaintenanceWindow(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.PreferredMaintenanceWindow = v
	return t
}

// SetV__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_RDS_DBCluster) SetV__PreferredMaintenanceWindow(v string) *AWS_RDS_DBCluster {
	t.PreferredMaintenanceWindow = cfz.V(v)
	return t
}

// Set__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_RDS_DBCluster) Set__PubliclyAccessible(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.PubliclyAccessible = v
	return t
}

// SetV__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_RDS_DBCluster) SetV__PubliclyAccessible(v bool) *AWS_RDS_DBCluster {
	t.PubliclyAccessible = cfz.V(v)
	return t
}

// Set__ReplicationSourceIdentifier updates property "ReplicationSourceIdentifier".
func (t *AWS_RDS_DBCluster) Set__ReplicationSourceIdentifier(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.ReplicationSourceIdentifier = v
	return t
}

// SetV__ReplicationSourceIdentifier updates property "ReplicationSourceIdentifier".
func (t *AWS_RDS_DBCluster) SetV__ReplicationSourceIdentifier(v string) *AWS_RDS_DBCluster {
	t.ReplicationSourceIdentifier = cfz.V(v)
	return t
}

// Set__RestoreToTime updates property "RestoreToTime".
func (t *AWS_RDS_DBCluster) Set__RestoreToTime(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.RestoreToTime = v
	return t
}

// SetV__RestoreToTime updates property "RestoreToTime".
func (t *AWS_RDS_DBCluster) SetV__RestoreToTime(v string) *AWS_RDS_DBCluster {
	t.RestoreToTime = cfz.V(v)
	return t
}

// Set__RestoreType updates property "RestoreType".
func (t *AWS_RDS_DBCluster) Set__RestoreType(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.RestoreType = v
	return t
}

// SetV__RestoreType updates property "RestoreType".
func (t *AWS_RDS_DBCluster) SetV__RestoreType(v string) *AWS_RDS_DBCluster {
	t.RestoreType = cfz.V(v)
	return t
}

// Set__ScalingConfiguration updates property "ScalingConfiguration".
func (t *AWS_RDS_DBCluster) Set__ScalingConfiguration(v cfz.Expression[AWS_RDS_DBCluster_ScalingConfiguration]) *AWS_RDS_DBCluster {
	t.ScalingConfiguration = v
	return t
}

// SetV__ScalingConfiguration updates property "ScalingConfiguration".
func (t *AWS_RDS_DBCluster) SetV__ScalingConfiguration(v AWS_RDS_DBCluster_ScalingConfiguration) *AWS_RDS_DBCluster {
	t.ScalingConfiguration = cfz.V(v)
	return t
}

// Set__ServerlessV2ScalingConfiguration updates property "ServerlessV2ScalingConfiguration".
func (t *AWS_RDS_DBCluster) Set__ServerlessV2ScalingConfiguration(v cfz.Expression[AWS_RDS_DBCluster_ServerlessV2ScalingConfiguration]) *AWS_RDS_DBCluster {
	t.ServerlessV2ScalingConfiguration = v
	return t
}

// SetV__ServerlessV2ScalingConfiguration updates property "ServerlessV2ScalingConfiguration".
func (t *AWS_RDS_DBCluster) SetV__ServerlessV2ScalingConfiguration(v AWS_RDS_DBCluster_ServerlessV2ScalingConfiguration) *AWS_RDS_DBCluster {
	t.ServerlessV2ScalingConfiguration = cfz.V(v)
	return t
}

// Set__SnapshotIdentifier updates property "SnapshotIdentifier".
func (t *AWS_RDS_DBCluster) Set__SnapshotIdentifier(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.SnapshotIdentifier = v
	return t
}

// SetV__SnapshotIdentifier updates property "SnapshotIdentifier".
func (t *AWS_RDS_DBCluster) SetV__SnapshotIdentifier(v string) *AWS_RDS_DBCluster {
	t.SnapshotIdentifier = cfz.V(v)
	return t
}

// Set__SourceDBClusterIdentifier updates property "SourceDBClusterIdentifier".
func (t *AWS_RDS_DBCluster) Set__SourceDBClusterIdentifier(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.SourceDBClusterIdentifier = v
	return t
}

// SetV__SourceDBClusterIdentifier updates property "SourceDBClusterIdentifier".
func (t *AWS_RDS_DBCluster) SetV__SourceDBClusterIdentifier(v string) *AWS_RDS_DBCluster {
	t.SourceDBClusterIdentifier = cfz.V(v)
	return t
}

// Set__SourceRegion updates property "SourceRegion".
func (t *AWS_RDS_DBCluster) Set__SourceRegion(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.SourceRegion = v
	return t
}

// SetV__SourceRegion updates property "SourceRegion".
func (t *AWS_RDS_DBCluster) SetV__SourceRegion(v string) *AWS_RDS_DBCluster {
	t.SourceRegion = cfz.V(v)
	return t
}

// Set__StorageEncrypted updates property "StorageEncrypted".
func (t *AWS_RDS_DBCluster) Set__StorageEncrypted(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.StorageEncrypted = v
	return t
}

// SetV__StorageEncrypted updates property "StorageEncrypted".
func (t *AWS_RDS_DBCluster) SetV__StorageEncrypted(v bool) *AWS_RDS_DBCluster {
	t.StorageEncrypted = cfz.V(v)
	return t
}

// Set__StorageType updates property "StorageType".
func (t *AWS_RDS_DBCluster) Set__StorageType(v cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.StorageType = v
	return t
}

// SetV__StorageType updates property "StorageType".
func (t *AWS_RDS_DBCluster) SetV__StorageType(v string) *AWS_RDS_DBCluster {
	t.StorageType = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_RDS_DBCluster) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_RDS_DBCluster {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_RDS_DBCluster) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_RDS_DBCluster {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_RDS_DBCluster) SetSV__Tags(v ...cfz.Tag) *AWS_RDS_DBCluster {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UseLatestRestorableTime updates property "UseLatestRestorableTime".
func (t *AWS_RDS_DBCluster) Set__UseLatestRestorableTime(v cfz.Expression[bool]) *AWS_RDS_DBCluster {
	t.UseLatestRestorableTime = v
	return t
}

// SetV__UseLatestRestorableTime updates property "UseLatestRestorableTime".
func (t *AWS_RDS_DBCluster) SetV__UseLatestRestorableTime(v bool) *AWS_RDS_DBCluster {
	t.UseLatestRestorableTime = cfz.V(v)
	return t
}

// Set__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_RDS_DBCluster) Set__VpcSecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_RDS_DBCluster {
	t.VpcSecurityGroupIds = v
	return t
}

// SetS__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_RDS_DBCluster) SetS__VpcSecurityGroupIds(v ...cfz.Expression[string]) *AWS_RDS_DBCluster {
	t.VpcSecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_RDS_DBCluster) SetSV__VpcSecurityGroupIds(v ...string) *AWS_RDS_DBCluster {
	t.VpcSecurityGroupIds = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_RDS_DBCluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DBClusterArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DBClusterArn
func (t *AWS_RDS_DBCluster) GetAtt__DBClusterArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBCluster__AttributesMap.DBClusterArn))
}

// GetAtt__DBClusterResourceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DBClusterResourceId
func (t *AWS_RDS_DBCluster) GetAtt__DBClusterResourceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBCluster__AttributesMap.DBClusterResourceId))
}

// GetAtt__Endpoint returns a $cfz.Expression[AWS_RDS_DBCluster_Endpoint] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint
func (t *AWS_RDS_DBCluster) GetAtt__Endpoint() cfz.Expression[AWS_RDS_DBCluster_Endpoint] {
	return cfz.GetAtt[AWS_RDS_DBCluster_Endpoint](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBCluster__AttributesMap.Endpoint))
}

// GetAtt__Endpoint_Address returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint.Address
func (t *AWS_RDS_DBCluster) GetAtt__Endpoint_Address() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBCluster__AttributesMap.Endpoint_Address))
}

// GetAtt__Endpoint_Port returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint.Port
func (t *AWS_RDS_DBCluster) GetAtt__Endpoint_Port() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBCluster__AttributesMap.Endpoint_Port))
}

// GetAtt__MasterUserSecret_SecretArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MasterUserSecret.SecretArn
func (t *AWS_RDS_DBCluster) GetAtt__MasterUserSecret_SecretArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBCluster__AttributesMap.MasterUserSecret_SecretArn))
}

// GetAtt__ReadEndpoint_Address returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ReadEndpoint.Address
func (t *AWS_RDS_DBCluster) GetAtt__ReadEndpoint_Address() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBCluster__AttributesMap.ReadEndpoint_Address))
}

// GetAtt__StorageThroughput returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StorageThroughput
func (t *AWS_RDS_DBCluster) GetAtt__StorageThroughput() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RDS_DBCluster__AttributesMap.StorageThroughput))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_RDS_DBCluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DBClusterArn returns a conventionally configured output for an attribute of this resource.
// Attribute: DBClusterArn
func (t *AWS_RDS_DBCluster) GetConventionalOutputAtt__DBClusterArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDBClusterArn", t.GetAtt__DBClusterArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DBClusterResourceId returns a conventionally configured output for an attribute of this resource.
// Attribute: DBClusterResourceId
func (t *AWS_RDS_DBCluster) GetConventionalOutputAtt__DBClusterResourceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDBClusterResourceId", t.GetAtt__DBClusterResourceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint
func (t *AWS_RDS_DBCluster) GetConventionalOutputAtt__Endpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpoint", t.GetAtt__Endpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint_Address returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint.Address
func (t *AWS_RDS_DBCluster) GetConventionalOutputAtt__Endpoint_Address(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointAddress", t.GetAtt__Endpoint_Address())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint_Port returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint.Port
func (t *AWS_RDS_DBCluster) GetConventionalOutputAtt__Endpoint_Port(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointPort", t.GetAtt__Endpoint_Port())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MasterUserSecret_SecretArn returns a conventionally configured output for an attribute of this resource.
// Attribute: MasterUserSecret.SecretArn
func (t *AWS_RDS_DBCluster) GetConventionalOutputAtt__MasterUserSecret_SecretArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMasterUserSecretSecretArn", t.GetAtt__MasterUserSecret_SecretArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ReadEndpoint_Address returns a conventionally configured output for an attribute of this resource.
// Attribute: ReadEndpoint.Address
func (t *AWS_RDS_DBCluster) GetConventionalOutputAtt__ReadEndpoint_Address(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttReadEndpointAddress", t.GetAtt__ReadEndpoint_Address())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StorageThroughput returns a conventionally configured output for an attribute of this resource.
// Attribute: StorageThroughput
func (t *AWS_RDS_DBCluster) GetConventionalOutputAtt__StorageThroughput(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStorageThroughput", t.GetAtt__StorageThroughput())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_RDS_DBCluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_RDS_DBCluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_RDS_DBCluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
