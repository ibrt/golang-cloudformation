// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_codeartifact

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CodeArtifact_Repository)(nil)
	_ cfz.Resource                   = (*AWS_CodeArtifact_Repository)(nil)
)

const (
	// AWS_CodeArtifact_Repository__Type is the CloudFormation type for AWS::CodeArtifact::Repository.
	AWS_CodeArtifact_Repository__Type = "AWS::CodeArtifact::Repository"
)

var (
	// AWS_CodeArtifact_Repository__AttributesMap reports all the CloudFormation attributes for AWS::CodeArtifact::Repository.
	AWS_CodeArtifact_Repository__AttributesMap = struct {
		Arn         string
		DomainName  string
		DomainOwner string
		Name        string
	}{
		Arn:         "Arn",
		DomainName:  "DomainName",
		DomainOwner: "DomainOwner",
		Name:        "Name",
	}

	// AWS_CodeArtifact_Repository__AttributesSlice reports all the CloudFormation attributes for AWS::CodeArtifact::Repository.
	AWS_CodeArtifact_Repository__AttributesSlice = []string{
		AWS_CodeArtifact_Repository__AttributesMap.Arn,
		AWS_CodeArtifact_Repository__AttributesMap.DomainName,
		AWS_CodeArtifact_Repository__AttributesMap.DomainOwner,
		AWS_CodeArtifact_Repository__AttributesMap.Name,
	}
)

var (
	// AWS_CodeArtifact_Repository__PropertiesMap reports all the CloudFormation properties for AWS::CodeArtifact::Repository.
	AWS_CodeArtifact_Repository__PropertiesMap = struct {
		Description               string
		DomainName                string
		DomainOwner               string
		ExternalConnections       string
		PermissionsPolicyDocument string
		RepositoryName            string
		Tags                      string
		Upstreams                 string
	}{
		Description:               "Description",
		DomainName:                "DomainName",
		DomainOwner:               "DomainOwner",
		ExternalConnections:       "ExternalConnections",
		PermissionsPolicyDocument: "PermissionsPolicyDocument",
		RepositoryName:            "RepositoryName",
		Tags:                      "Tags",
		Upstreams:                 "Upstreams",
	}

	// AWS_CodeArtifact_Repository__PropertiesSlice reports all the CloudFormation properties for AWS::CodeArtifact::Repository.
	AWS_CodeArtifact_Repository__PropertiesSlice = []string{
		AWS_CodeArtifact_Repository__PropertiesMap.Description,
		AWS_CodeArtifact_Repository__PropertiesMap.DomainName,
		AWS_CodeArtifact_Repository__PropertiesMap.DomainOwner,
		AWS_CodeArtifact_Repository__PropertiesMap.ExternalConnections,
		AWS_CodeArtifact_Repository__PropertiesMap.PermissionsPolicyDocument,
		AWS_CodeArtifact_Repository__PropertiesMap.RepositoryName,
		AWS_CodeArtifact_Repository__PropertiesMap.Tags,
		AWS_CodeArtifact_Repository__PropertiesMap.Upstreams,
	}
)

// AWS_CodeArtifact_Repository is a binding for AWS::CodeArtifact::Repository.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html
type AWS_CodeArtifact_Repository struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DomainName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-domainname
	DomainName cfz.Expression[string] `json:"DomainName,omitempty"`

	// DomainOwner is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-domainowner
	DomainOwner cfz.Expression[string] `json:"DomainOwner,omitempty"`

	// ExternalConnections is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-externalconnections
	ExternalConnections cfz.ExpressionSlice[string] `json:"ExternalConnections,omitempty"`

	// PermissionsPolicyDocument is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-permissionspolicydocument
	PermissionsPolicyDocument cfz.Expression[json.RawMessage] `json:"PermissionsPolicyDocument,omitempty"`

	// RepositoryName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-repositoryname
	RepositoryName cfz.Expression[string] `json:"RepositoryName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Upstreams is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codeartifact-repository.html#cfn-codeartifact-repository-upstreams
	Upstreams cfz.ExpressionSlice[string] `json:"Upstreams,omitempty"`
}

// New__AWS_CodeArtifact_Repository initializes a new *AWS_CodeArtifact_Repository.
func New__AWS_CodeArtifact_Repository(logicalName string) *AWS_CodeArtifact_Repository {
	return &AWS_CodeArtifact_Repository{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CodeArtifact_Repository) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CodeArtifact_Repository) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CodeArtifact_Repository) GetType() string {
	return AWS_CodeArtifact_Repository__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CodeArtifact_Repository) Set__LogicalName(v string) *AWS_CodeArtifact_Repository {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CodeArtifact_Repository) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CodeArtifact_Repository {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CodeArtifact_Repository) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CodeArtifact_Repository {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CodeArtifact_Repository) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CodeArtifact_Repository {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CodeArtifact_Repository) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CodeArtifact_Repository {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CodeArtifact_Repository) Set__RequestedOutputs(v []cfz.Output) *AWS_CodeArtifact_Repository {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CodeArtifact_Repository) Add__RequestedOutputs(v ...cfz.Output) *AWS_CodeArtifact_Repository {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_CodeArtifact_Repository) Set__Description(v cfz.Expression[string]) *AWS_CodeArtifact_Repository {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_CodeArtifact_Repository) SetV__Description(v string) *AWS_CodeArtifact_Repository {
	t.Description = cfz.V(v)
	return t
}

// Set__DomainName updates property "DomainName".
func (t *AWS_CodeArtifact_Repository) Set__DomainName(v cfz.Expression[string]) *AWS_CodeArtifact_Repository {
	t.DomainName = v
	return t
}

// SetV__DomainName updates property "DomainName".
func (t *AWS_CodeArtifact_Repository) SetV__DomainName(v string) *AWS_CodeArtifact_Repository {
	t.DomainName = cfz.V(v)
	return t
}

// Set__DomainOwner updates property "DomainOwner".
func (t *AWS_CodeArtifact_Repository) Set__DomainOwner(v cfz.Expression[string]) *AWS_CodeArtifact_Repository {
	t.DomainOwner = v
	return t
}

// SetV__DomainOwner updates property "DomainOwner".
func (t *AWS_CodeArtifact_Repository) SetV__DomainOwner(v string) *AWS_CodeArtifact_Repository {
	t.DomainOwner = cfz.V(v)
	return t
}

// Set__ExternalConnections updates property "ExternalConnections".
func (t *AWS_CodeArtifact_Repository) Set__ExternalConnections(v cfz.ExpressionSlice[string]) *AWS_CodeArtifact_Repository {
	t.ExternalConnections = v
	return t
}

// SetS__ExternalConnections updates property "ExternalConnections".
func (t *AWS_CodeArtifact_Repository) SetS__ExternalConnections(v ...cfz.Expression[string]) *AWS_CodeArtifact_Repository {
	t.ExternalConnections = cfz.S(v...)
	return t
}

// SetSV__ExternalConnections updates property "ExternalConnections".
func (t *AWS_CodeArtifact_Repository) SetSV__ExternalConnections(v ...string) *AWS_CodeArtifact_Repository {
	t.ExternalConnections = cfz.SV(v...)
	return t
}

// Set__PermissionsPolicyDocument updates property "PermissionsPolicyDocument".
func (t *AWS_CodeArtifact_Repository) Set__PermissionsPolicyDocument(v cfz.Expression[json.RawMessage]) *AWS_CodeArtifact_Repository {
	t.PermissionsPolicyDocument = v
	return t
}

// SetV__PermissionsPolicyDocument updates property "PermissionsPolicyDocument".
func (t *AWS_CodeArtifact_Repository) SetV__PermissionsPolicyDocument(v json.RawMessage) *AWS_CodeArtifact_Repository {
	t.PermissionsPolicyDocument = cfz.V(v)
	return t
}

// Set__RepositoryName updates property "RepositoryName".
func (t *AWS_CodeArtifact_Repository) Set__RepositoryName(v cfz.Expression[string]) *AWS_CodeArtifact_Repository {
	t.RepositoryName = v
	return t
}

// SetV__RepositoryName updates property "RepositoryName".
func (t *AWS_CodeArtifact_Repository) SetV__RepositoryName(v string) *AWS_CodeArtifact_Repository {
	t.RepositoryName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CodeArtifact_Repository) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CodeArtifact_Repository {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CodeArtifact_Repository) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CodeArtifact_Repository {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CodeArtifact_Repository) SetSV__Tags(v ...cfz.Tag) *AWS_CodeArtifact_Repository {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Upstreams updates property "Upstreams".
func (t *AWS_CodeArtifact_Repository) Set__Upstreams(v cfz.ExpressionSlice[string]) *AWS_CodeArtifact_Repository {
	t.Upstreams = v
	return t
}

// SetS__Upstreams updates property "Upstreams".
func (t *AWS_CodeArtifact_Repository) SetS__Upstreams(v ...cfz.Expression[string]) *AWS_CodeArtifact_Repository {
	t.Upstreams = cfz.S(v...)
	return t
}

// SetSV__Upstreams updates property "Upstreams".
func (t *AWS_CodeArtifact_Repository) SetSV__Upstreams(v ...string) *AWS_CodeArtifact_Repository {
	t.Upstreams = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CodeArtifact_Repository) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_CodeArtifact_Repository) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeArtifact_Repository__AttributesMap.Arn))
}

// GetAtt__DomainName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DomainName
func (t *AWS_CodeArtifact_Repository) GetAtt__DomainName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeArtifact_Repository__AttributesMap.DomainName))
}

// GetAtt__DomainOwner returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DomainOwner
func (t *AWS_CodeArtifact_Repository) GetAtt__DomainOwner() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeArtifact_Repository__AttributesMap.DomainOwner))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_CodeArtifact_Repository) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CodeArtifact_Repository__AttributesMap.Name))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CodeArtifact_Repository) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_CodeArtifact_Repository) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DomainName returns a conventionally configured output for an attribute of this resource.
// Attribute: DomainName
func (t *AWS_CodeArtifact_Repository) GetConventionalOutputAtt__DomainName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDomainName", t.GetAtt__DomainName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DomainOwner returns a conventionally configured output for an attribute of this resource.
// Attribute: DomainOwner
func (t *AWS_CodeArtifact_Repository) GetConventionalOutputAtt__DomainOwner(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDomainOwner", t.GetAtt__DomainOwner())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_CodeArtifact_Repository) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CodeArtifact_Repository) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CodeArtifact_Repository

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CodeArtifact_Repository) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
