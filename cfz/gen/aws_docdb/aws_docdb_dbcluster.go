// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_docdb

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_DocDB_DBCluster)(nil)
	_ cfz.Resource                   = (*AWS_DocDB_DBCluster)(nil)
)

const (
	// AWS_DocDB_DBCluster__Type is the CloudFormation type for AWS::DocDB::DBCluster.
	AWS_DocDB_DBCluster__Type = "AWS::DocDB::DBCluster"
)

var (
	// AWS_DocDB_DBCluster__AttributesMap reports all the CloudFormation attributes for AWS::DocDB::DBCluster.
	AWS_DocDB_DBCluster__AttributesMap = struct {
		ClusterResourceId string
		Endpoint          string
		Port              string
		ReadEndpoint      string
	}{
		ClusterResourceId: "ClusterResourceId",
		Endpoint:          "Endpoint",
		Port:              "Port",
		ReadEndpoint:      "ReadEndpoint",
	}

	// AWS_DocDB_DBCluster__AttributesSlice reports all the CloudFormation attributes for AWS::DocDB::DBCluster.
	AWS_DocDB_DBCluster__AttributesSlice = []string{
		AWS_DocDB_DBCluster__AttributesMap.ClusterResourceId,
		AWS_DocDB_DBCluster__AttributesMap.Endpoint,
		AWS_DocDB_DBCluster__AttributesMap.Port,
		AWS_DocDB_DBCluster__AttributesMap.ReadEndpoint,
	}
)

var (
	// AWS_DocDB_DBCluster__PropertiesMap reports all the CloudFormation properties for AWS::DocDB::DBCluster.
	AWS_DocDB_DBCluster__PropertiesMap = struct {
		AvailabilityZones                string
		BackupRetentionPeriod            string
		CopyTagsToSnapshot               string
		DBClusterIdentifier              string
		DBClusterParameterGroupName      string
		DBSubnetGroupName                string
		DeletionProtection               string
		EnableCloudwatchLogsExports      string
		EngineVersion                    string
		KmsKeyId                         string
		MasterUserPassword               string
		MasterUsername                   string
		Port                             string
		PreferredBackupWindow            string
		PreferredMaintenanceWindow       string
		RestoreToTime                    string
		RestoreType                      string
		ServerlessV2ScalingConfiguration string
		SnapshotIdentifier               string
		SourceDBClusterIdentifier        string
		StorageEncrypted                 string
		StorageType                      string
		Tags                             string
		UseLatestRestorableTime          string
		VpcSecurityGroupIds              string
	}{
		AvailabilityZones:                "AvailabilityZones",
		BackupRetentionPeriod:            "BackupRetentionPeriod",
		CopyTagsToSnapshot:               "CopyTagsToSnapshot",
		DBClusterIdentifier:              "DBClusterIdentifier",
		DBClusterParameterGroupName:      "DBClusterParameterGroupName",
		DBSubnetGroupName:                "DBSubnetGroupName",
		DeletionProtection:               "DeletionProtection",
		EnableCloudwatchLogsExports:      "EnableCloudwatchLogsExports",
		EngineVersion:                    "EngineVersion",
		KmsKeyId:                         "KmsKeyId",
		MasterUserPassword:               "MasterUserPassword",
		MasterUsername:                   "MasterUsername",
		Port:                             "Port",
		PreferredBackupWindow:            "PreferredBackupWindow",
		PreferredMaintenanceWindow:       "PreferredMaintenanceWindow",
		RestoreToTime:                    "RestoreToTime",
		RestoreType:                      "RestoreType",
		ServerlessV2ScalingConfiguration: "ServerlessV2ScalingConfiguration",
		SnapshotIdentifier:               "SnapshotIdentifier",
		SourceDBClusterIdentifier:        "SourceDBClusterIdentifier",
		StorageEncrypted:                 "StorageEncrypted",
		StorageType:                      "StorageType",
		Tags:                             "Tags",
		UseLatestRestorableTime:          "UseLatestRestorableTime",
		VpcSecurityGroupIds:              "VpcSecurityGroupIds",
	}

	// AWS_DocDB_DBCluster__PropertiesSlice reports all the CloudFormation properties for AWS::DocDB::DBCluster.
	AWS_DocDB_DBCluster__PropertiesSlice = []string{
		AWS_DocDB_DBCluster__PropertiesMap.AvailabilityZones,
		AWS_DocDB_DBCluster__PropertiesMap.BackupRetentionPeriod,
		AWS_DocDB_DBCluster__PropertiesMap.CopyTagsToSnapshot,
		AWS_DocDB_DBCluster__PropertiesMap.DBClusterIdentifier,
		AWS_DocDB_DBCluster__PropertiesMap.DBClusterParameterGroupName,
		AWS_DocDB_DBCluster__PropertiesMap.DBSubnetGroupName,
		AWS_DocDB_DBCluster__PropertiesMap.DeletionProtection,
		AWS_DocDB_DBCluster__PropertiesMap.EnableCloudwatchLogsExports,
		AWS_DocDB_DBCluster__PropertiesMap.EngineVersion,
		AWS_DocDB_DBCluster__PropertiesMap.KmsKeyId,
		AWS_DocDB_DBCluster__PropertiesMap.MasterUserPassword,
		AWS_DocDB_DBCluster__PropertiesMap.MasterUsername,
		AWS_DocDB_DBCluster__PropertiesMap.Port,
		AWS_DocDB_DBCluster__PropertiesMap.PreferredBackupWindow,
		AWS_DocDB_DBCluster__PropertiesMap.PreferredMaintenanceWindow,
		AWS_DocDB_DBCluster__PropertiesMap.RestoreToTime,
		AWS_DocDB_DBCluster__PropertiesMap.RestoreType,
		AWS_DocDB_DBCluster__PropertiesMap.ServerlessV2ScalingConfiguration,
		AWS_DocDB_DBCluster__PropertiesMap.SnapshotIdentifier,
		AWS_DocDB_DBCluster__PropertiesMap.SourceDBClusterIdentifier,
		AWS_DocDB_DBCluster__PropertiesMap.StorageEncrypted,
		AWS_DocDB_DBCluster__PropertiesMap.StorageType,
		AWS_DocDB_DBCluster__PropertiesMap.Tags,
		AWS_DocDB_DBCluster__PropertiesMap.UseLatestRestorableTime,
		AWS_DocDB_DBCluster__PropertiesMap.VpcSecurityGroupIds,
	}
)

// AWS_DocDB_DBCluster is a binding for AWS::DocDB::DBCluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html
type AWS_DocDB_DBCluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AvailabilityZones is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-availabilityzones
	AvailabilityZones cfz.ExpressionSlice[string] `json:"AvailabilityZones,omitempty"`

	// BackupRetentionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-backupretentionperiod
	BackupRetentionPeriod cfz.Expression[int32] `json:"BackupRetentionPeriod,omitempty"`

	// CopyTagsToSnapshot is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-copytagstosnapshot
	CopyTagsToSnapshot cfz.Expression[bool] `json:"CopyTagsToSnapshot,omitempty"`

	// DBClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusteridentifier
	DBClusterIdentifier cfz.Expression[string] `json:"DBClusterIdentifier,omitempty"`

	// DBClusterParameterGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusterparametergroupname
	DBClusterParameterGroupName cfz.Expression[string] `json:"DBClusterParameterGroupName,omitempty"`

	// DBSubnetGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbsubnetgroupname
	DBSubnetGroupName cfz.Expression[string] `json:"DBSubnetGroupName,omitempty"`

	// DeletionProtection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-deletionprotection
	DeletionProtection cfz.Expression[bool] `json:"DeletionProtection,omitempty"`

	// EnableCloudwatchLogsExports is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-enablecloudwatchlogsexports
	EnableCloudwatchLogsExports cfz.ExpressionSlice[string] `json:"EnableCloudwatchLogsExports,omitempty"`

	// EngineVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-engineversion
	EngineVersion cfz.Expression[string] `json:"EngineVersion,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// MasterUserPassword is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masteruserpassword
	MasterUserPassword cfz.Expression[string] `json:"MasterUserPassword,omitempty"`

	// MasterUsername is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masterusername
	MasterUsername cfz.Expression[string] `json:"MasterUsername,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-port
	Port cfz.Expression[int32] `json:"Port,omitempty"`

	// PreferredBackupWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredbackupwindow
	PreferredBackupWindow cfz.Expression[string] `json:"PreferredBackupWindow,omitempty"`

	// PreferredMaintenanceWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredmaintenancewindow
	PreferredMaintenanceWindow cfz.Expression[string] `json:"PreferredMaintenanceWindow,omitempty"`

	// RestoreToTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-restoretotime
	RestoreToTime cfz.Expression[string] `json:"RestoreToTime,omitempty"`

	// RestoreType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-restoretype
	RestoreType cfz.Expression[string] `json:"RestoreType,omitempty"`

	// ServerlessV2ScalingConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-serverlessv2scalingconfiguration
	ServerlessV2ScalingConfiguration cfz.Expression[AWS_DocDB_DBCluster_ServerlessV2ScalingConfiguration] `json:"ServerlessV2ScalingConfiguration,omitempty"`

	// SnapshotIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-snapshotidentifier
	SnapshotIdentifier cfz.Expression[string] `json:"SnapshotIdentifier,omitempty"`

	// SourceDBClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-sourcedbclusteridentifier
	SourceDBClusterIdentifier cfz.Expression[string] `json:"SourceDBClusterIdentifier,omitempty"`

	// StorageEncrypted is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-storageencrypted
	StorageEncrypted cfz.Expression[bool] `json:"StorageEncrypted,omitempty"`

	// StorageType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-storagetype
	StorageType cfz.Expression[string] `json:"StorageType,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// UseLatestRestorableTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-uselatestrestorabletime
	UseLatestRestorableTime cfz.Expression[bool] `json:"UseLatestRestorableTime,omitempty"`

	// VpcSecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-vpcsecuritygroupids
	VpcSecurityGroupIds cfz.ExpressionSlice[string] `json:"VpcSecurityGroupIds,omitempty"`
}

// New__AWS_DocDB_DBCluster initializes a new *AWS_DocDB_DBCluster.
func New__AWS_DocDB_DBCluster(logicalName string) *AWS_DocDB_DBCluster {
	return &AWS_DocDB_DBCluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_DocDB_DBCluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_DocDB_DBCluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_DocDB_DBCluster) GetType() string {
	return AWS_DocDB_DBCluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_DocDB_DBCluster) Set__LogicalName(v string) *AWS_DocDB_DBCluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_DocDB_DBCluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_DocDB_DBCluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_DocDB_DBCluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_DocDB_DBCluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_DocDB_DBCluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_DocDB_DBCluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_DocDB_DBCluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_DocDB_DBCluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_DocDB_DBCluster) Set__RequestedOutputs(v []cfz.Output) *AWS_DocDB_DBCluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_DocDB_DBCluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_DocDB_DBCluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_DocDB_DBCluster) Set__AvailabilityZones(v cfz.ExpressionSlice[string]) *AWS_DocDB_DBCluster {
	t.AvailabilityZones = v
	return t
}

// SetS__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_DocDB_DBCluster) SetS__AvailabilityZones(v ...cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.AvailabilityZones = cfz.S(v...)
	return t
}

// SetSV__AvailabilityZones updates property "AvailabilityZones".
func (t *AWS_DocDB_DBCluster) SetSV__AvailabilityZones(v ...string) *AWS_DocDB_DBCluster {
	t.AvailabilityZones = cfz.SV(v...)
	return t
}

// Set__BackupRetentionPeriod updates property "BackupRetentionPeriod".
func (t *AWS_DocDB_DBCluster) Set__BackupRetentionPeriod(v cfz.Expression[int32]) *AWS_DocDB_DBCluster {
	t.BackupRetentionPeriod = v
	return t
}

// SetV__BackupRetentionPeriod updates property "BackupRetentionPeriod".
func (t *AWS_DocDB_DBCluster) SetV__BackupRetentionPeriod(v int32) *AWS_DocDB_DBCluster {
	t.BackupRetentionPeriod = cfz.V(v)
	return t
}

// Set__CopyTagsToSnapshot updates property "CopyTagsToSnapshot".
func (t *AWS_DocDB_DBCluster) Set__CopyTagsToSnapshot(v cfz.Expression[bool]) *AWS_DocDB_DBCluster {
	t.CopyTagsToSnapshot = v
	return t
}

// SetV__CopyTagsToSnapshot updates property "CopyTagsToSnapshot".
func (t *AWS_DocDB_DBCluster) SetV__CopyTagsToSnapshot(v bool) *AWS_DocDB_DBCluster {
	t.CopyTagsToSnapshot = cfz.V(v)
	return t
}

// Set__DBClusterIdentifier updates property "DBClusterIdentifier".
func (t *AWS_DocDB_DBCluster) Set__DBClusterIdentifier(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.DBClusterIdentifier = v
	return t
}

// SetV__DBClusterIdentifier updates property "DBClusterIdentifier".
func (t *AWS_DocDB_DBCluster) SetV__DBClusterIdentifier(v string) *AWS_DocDB_DBCluster {
	t.DBClusterIdentifier = cfz.V(v)
	return t
}

// Set__DBClusterParameterGroupName updates property "DBClusterParameterGroupName".
func (t *AWS_DocDB_DBCluster) Set__DBClusterParameterGroupName(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.DBClusterParameterGroupName = v
	return t
}

// SetV__DBClusterParameterGroupName updates property "DBClusterParameterGroupName".
func (t *AWS_DocDB_DBCluster) SetV__DBClusterParameterGroupName(v string) *AWS_DocDB_DBCluster {
	t.DBClusterParameterGroupName = cfz.V(v)
	return t
}

// Set__DBSubnetGroupName updates property "DBSubnetGroupName".
func (t *AWS_DocDB_DBCluster) Set__DBSubnetGroupName(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.DBSubnetGroupName = v
	return t
}

// SetV__DBSubnetGroupName updates property "DBSubnetGroupName".
func (t *AWS_DocDB_DBCluster) SetV__DBSubnetGroupName(v string) *AWS_DocDB_DBCluster {
	t.DBSubnetGroupName = cfz.V(v)
	return t
}

// Set__DeletionProtection updates property "DeletionProtection".
func (t *AWS_DocDB_DBCluster) Set__DeletionProtection(v cfz.Expression[bool]) *AWS_DocDB_DBCluster {
	t.DeletionProtection = v
	return t
}

// SetV__DeletionProtection updates property "DeletionProtection".
func (t *AWS_DocDB_DBCluster) SetV__DeletionProtection(v bool) *AWS_DocDB_DBCluster {
	t.DeletionProtection = cfz.V(v)
	return t
}

// Set__EnableCloudwatchLogsExports updates property "EnableCloudwatchLogsExports".
func (t *AWS_DocDB_DBCluster) Set__EnableCloudwatchLogsExports(v cfz.ExpressionSlice[string]) *AWS_DocDB_DBCluster {
	t.EnableCloudwatchLogsExports = v
	return t
}

// SetS__EnableCloudwatchLogsExports updates property "EnableCloudwatchLogsExports".
func (t *AWS_DocDB_DBCluster) SetS__EnableCloudwatchLogsExports(v ...cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.EnableCloudwatchLogsExports = cfz.S(v...)
	return t
}

// SetSV__EnableCloudwatchLogsExports updates property "EnableCloudwatchLogsExports".
func (t *AWS_DocDB_DBCluster) SetSV__EnableCloudwatchLogsExports(v ...string) *AWS_DocDB_DBCluster {
	t.EnableCloudwatchLogsExports = cfz.SV(v...)
	return t
}

// Set__EngineVersion updates property "EngineVersion".
func (t *AWS_DocDB_DBCluster) Set__EngineVersion(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.EngineVersion = v
	return t
}

// SetV__EngineVersion updates property "EngineVersion".
func (t *AWS_DocDB_DBCluster) SetV__EngineVersion(v string) *AWS_DocDB_DBCluster {
	t.EngineVersion = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_DocDB_DBCluster) Set__KmsKeyId(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_DocDB_DBCluster) SetV__KmsKeyId(v string) *AWS_DocDB_DBCluster {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__MasterUserPassword updates property "MasterUserPassword".
func (t *AWS_DocDB_DBCluster) Set__MasterUserPassword(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.MasterUserPassword = v
	return t
}

// SetV__MasterUserPassword updates property "MasterUserPassword".
func (t *AWS_DocDB_DBCluster) SetV__MasterUserPassword(v string) *AWS_DocDB_DBCluster {
	t.MasterUserPassword = cfz.V(v)
	return t
}

// Set__MasterUsername updates property "MasterUsername".
func (t *AWS_DocDB_DBCluster) Set__MasterUsername(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.MasterUsername = v
	return t
}

// SetV__MasterUsername updates property "MasterUsername".
func (t *AWS_DocDB_DBCluster) SetV__MasterUsername(v string) *AWS_DocDB_DBCluster {
	t.MasterUsername = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t *AWS_DocDB_DBCluster) Set__Port(v cfz.Expression[int32]) *AWS_DocDB_DBCluster {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t *AWS_DocDB_DBCluster) SetV__Port(v int32) *AWS_DocDB_DBCluster {
	t.Port = cfz.V(v)
	return t
}

// Set__PreferredBackupWindow updates property "PreferredBackupWindow".
func (t *AWS_DocDB_DBCluster) Set__PreferredBackupWindow(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.PreferredBackupWindow = v
	return t
}

// SetV__PreferredBackupWindow updates property "PreferredBackupWindow".
func (t *AWS_DocDB_DBCluster) SetV__PreferredBackupWindow(v string) *AWS_DocDB_DBCluster {
	t.PreferredBackupWindow = cfz.V(v)
	return t
}

// Set__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_DocDB_DBCluster) Set__PreferredMaintenanceWindow(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.PreferredMaintenanceWindow = v
	return t
}

// SetV__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_DocDB_DBCluster) SetV__PreferredMaintenanceWindow(v string) *AWS_DocDB_DBCluster {
	t.PreferredMaintenanceWindow = cfz.V(v)
	return t
}

// Set__RestoreToTime updates property "RestoreToTime".
func (t *AWS_DocDB_DBCluster) Set__RestoreToTime(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.RestoreToTime = v
	return t
}

// SetV__RestoreToTime updates property "RestoreToTime".
func (t *AWS_DocDB_DBCluster) SetV__RestoreToTime(v string) *AWS_DocDB_DBCluster {
	t.RestoreToTime = cfz.V(v)
	return t
}

// Set__RestoreType updates property "RestoreType".
func (t *AWS_DocDB_DBCluster) Set__RestoreType(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.RestoreType = v
	return t
}

// SetV__RestoreType updates property "RestoreType".
func (t *AWS_DocDB_DBCluster) SetV__RestoreType(v string) *AWS_DocDB_DBCluster {
	t.RestoreType = cfz.V(v)
	return t
}

// Set__ServerlessV2ScalingConfiguration updates property "ServerlessV2ScalingConfiguration".
func (t *AWS_DocDB_DBCluster) Set__ServerlessV2ScalingConfiguration(v cfz.Expression[AWS_DocDB_DBCluster_ServerlessV2ScalingConfiguration]) *AWS_DocDB_DBCluster {
	t.ServerlessV2ScalingConfiguration = v
	return t
}

// SetV__ServerlessV2ScalingConfiguration updates property "ServerlessV2ScalingConfiguration".
func (t *AWS_DocDB_DBCluster) SetV__ServerlessV2ScalingConfiguration(v AWS_DocDB_DBCluster_ServerlessV2ScalingConfiguration) *AWS_DocDB_DBCluster {
	t.ServerlessV2ScalingConfiguration = cfz.V(v)
	return t
}

// Set__SnapshotIdentifier updates property "SnapshotIdentifier".
func (t *AWS_DocDB_DBCluster) Set__SnapshotIdentifier(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.SnapshotIdentifier = v
	return t
}

// SetV__SnapshotIdentifier updates property "SnapshotIdentifier".
func (t *AWS_DocDB_DBCluster) SetV__SnapshotIdentifier(v string) *AWS_DocDB_DBCluster {
	t.SnapshotIdentifier = cfz.V(v)
	return t
}

// Set__SourceDBClusterIdentifier updates property "SourceDBClusterIdentifier".
func (t *AWS_DocDB_DBCluster) Set__SourceDBClusterIdentifier(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.SourceDBClusterIdentifier = v
	return t
}

// SetV__SourceDBClusterIdentifier updates property "SourceDBClusterIdentifier".
func (t *AWS_DocDB_DBCluster) SetV__SourceDBClusterIdentifier(v string) *AWS_DocDB_DBCluster {
	t.SourceDBClusterIdentifier = cfz.V(v)
	return t
}

// Set__StorageEncrypted updates property "StorageEncrypted".
func (t *AWS_DocDB_DBCluster) Set__StorageEncrypted(v cfz.Expression[bool]) *AWS_DocDB_DBCluster {
	t.StorageEncrypted = v
	return t
}

// SetV__StorageEncrypted updates property "StorageEncrypted".
func (t *AWS_DocDB_DBCluster) SetV__StorageEncrypted(v bool) *AWS_DocDB_DBCluster {
	t.StorageEncrypted = cfz.V(v)
	return t
}

// Set__StorageType updates property "StorageType".
func (t *AWS_DocDB_DBCluster) Set__StorageType(v cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.StorageType = v
	return t
}

// SetV__StorageType updates property "StorageType".
func (t *AWS_DocDB_DBCluster) SetV__StorageType(v string) *AWS_DocDB_DBCluster {
	t.StorageType = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_DocDB_DBCluster) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_DocDB_DBCluster {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_DocDB_DBCluster) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_DocDB_DBCluster {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_DocDB_DBCluster) SetSV__Tags(v ...cfz.Tag) *AWS_DocDB_DBCluster {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__UseLatestRestorableTime updates property "UseLatestRestorableTime".
func (t *AWS_DocDB_DBCluster) Set__UseLatestRestorableTime(v cfz.Expression[bool]) *AWS_DocDB_DBCluster {
	t.UseLatestRestorableTime = v
	return t
}

// SetV__UseLatestRestorableTime updates property "UseLatestRestorableTime".
func (t *AWS_DocDB_DBCluster) SetV__UseLatestRestorableTime(v bool) *AWS_DocDB_DBCluster {
	t.UseLatestRestorableTime = cfz.V(v)
	return t
}

// Set__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_DocDB_DBCluster) Set__VpcSecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_DocDB_DBCluster {
	t.VpcSecurityGroupIds = v
	return t
}

// SetS__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_DocDB_DBCluster) SetS__VpcSecurityGroupIds(v ...cfz.Expression[string]) *AWS_DocDB_DBCluster {
	t.VpcSecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_DocDB_DBCluster) SetSV__VpcSecurityGroupIds(v ...string) *AWS_DocDB_DBCluster {
	t.VpcSecurityGroupIds = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_DocDB_DBCluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ClusterResourceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ClusterResourceId
func (t *AWS_DocDB_DBCluster) GetAtt__ClusterResourceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DocDB_DBCluster__AttributesMap.ClusterResourceId))
}

// GetAtt__Endpoint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint
func (t *AWS_DocDB_DBCluster) GetAtt__Endpoint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DocDB_DBCluster__AttributesMap.Endpoint))
}

// GetAtt__Port returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Port
func (t *AWS_DocDB_DBCluster) GetAtt__Port() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DocDB_DBCluster__AttributesMap.Port))
}

// GetAtt__ReadEndpoint returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ReadEndpoint
func (t *AWS_DocDB_DBCluster) GetAtt__ReadEndpoint() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_DocDB_DBCluster__AttributesMap.ReadEndpoint))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_DocDB_DBCluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ClusterResourceId returns a conventionally configured output for an attribute of this resource.
// Attribute: ClusterResourceId
func (t *AWS_DocDB_DBCluster) GetConventionalOutputAtt__ClusterResourceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttClusterResourceId", t.GetAtt__ClusterResourceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint
func (t *AWS_DocDB_DBCluster) GetConventionalOutputAtt__Endpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpoint", t.GetAtt__Endpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Port returns a conventionally configured output for an attribute of this resource.
// Attribute: Port
func (t *AWS_DocDB_DBCluster) GetConventionalOutputAtt__Port(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPort", t.GetAtt__Port())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ReadEndpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: ReadEndpoint
func (t *AWS_DocDB_DBCluster) GetConventionalOutputAtt__ReadEndpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttReadEndpoint", t.GetAtt__ReadEndpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_DocDB_DBCluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_DocDB_DBCluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_DocDB_DBCluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
