// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_pipes

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Pipes_Pipe_Filter__Type is the CloudFormation type for AWS::Pipes::Pipe.Filter.
	AWS_Pipes_Pipe_Filter__Type = "AWS::Pipes::Pipe.Filter"
)

var (
	// AWS_Pipes_Pipe_Filter__PropertiesMap reports all the CloudFormation properties for AWS::Pipes::Pipe.Filter.
	AWS_Pipes_Pipe_Filter__PropertiesMap = struct {
		Pattern string
	}{
		Pattern: "Pattern",
	}

	// AWS_Pipes_Pipe_Filter__PropertiesSlice reports all the CloudFormation properties for AWS::Pipes::Pipe.Filter.
	AWS_Pipes_Pipe_Filter__PropertiesSlice = []string{
		AWS_Pipes_Pipe_Filter__PropertiesMap.Pattern,
	}
)

// AWS_Pipes_Pipe_Filter is a binding for AWS::Pipes::Pipe.Filter.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-filter.html
type AWS_Pipes_Pipe_Filter struct {
	// Pattern is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-filter.html#cfn-pipes-pipe-filter-pattern
	Pattern cfz.Expression[string] `json:"Pattern,omitempty"`
}

// New__AWS_Pipes_Pipe_Filter initializes a new AWS_Pipes_Pipe_Filter.
func New__AWS_Pipes_Pipe_Filter() AWS_Pipes_Pipe_Filter {
	return AWS_Pipes_Pipe_Filter{}
}

// GetType returns the CloudFormation type.
func (AWS_Pipes_Pipe_Filter) GetType() string {
	return AWS_Pipes_Pipe_Filter__Type
}

// Set__Pattern updates property "Pattern".
func (t AWS_Pipes_Pipe_Filter) Set__Pattern(v cfz.Expression[string]) AWS_Pipes_Pipe_Filter {
	t.Pattern = v
	return t
}

// SetV__Pattern updates property "Pattern".
func (t AWS_Pipes_Pipe_Filter) SetV__Pattern(v string) AWS_Pipes_Pipe_Filter {
	t.Pattern = cfz.V(v)
	return t
}
