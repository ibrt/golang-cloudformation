// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_pipes

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Pipes_Pipe_FilterCriteria__Type is the CloudFormation type for AWS::Pipes::Pipe.FilterCriteria.
	AWS_Pipes_Pipe_FilterCriteria__Type = "AWS::Pipes::Pipe.FilterCriteria"
)

var (
	// AWS_Pipes_Pipe_FilterCriteria__PropertiesMap reports all the CloudFormation properties for AWS::Pipes::Pipe.FilterCriteria.
	AWS_Pipes_Pipe_FilterCriteria__PropertiesMap = struct {
		Filters string
	}{
		Filters: "Filters",
	}

	// AWS_Pipes_Pipe_FilterCriteria__PropertiesSlice reports all the CloudFormation properties for AWS::Pipes::Pipe.FilterCriteria.
	AWS_Pipes_Pipe_FilterCriteria__PropertiesSlice = []string{
		AWS_Pipes_Pipe_FilterCriteria__PropertiesMap.Filters,
	}
)

// AWS_Pipes_Pipe_FilterCriteria is a binding for AWS::Pipes::Pipe.FilterCriteria.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-filtercriteria.html
type AWS_Pipes_Pipe_FilterCriteria struct {
	// Filters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-filtercriteria.html#cfn-pipes-pipe-filtercriteria-filters
	Filters cfz.ExpressionSlice[AWS_Pipes_Pipe_Filter] `json:"Filters,omitempty"`
}

// New__AWS_Pipes_Pipe_FilterCriteria initializes a new AWS_Pipes_Pipe_FilterCriteria.
func New__AWS_Pipes_Pipe_FilterCriteria() AWS_Pipes_Pipe_FilterCriteria {
	return AWS_Pipes_Pipe_FilterCriteria{}
}

// GetType returns the CloudFormation type.
func (AWS_Pipes_Pipe_FilterCriteria) GetType() string {
	return AWS_Pipes_Pipe_FilterCriteria__Type
}

// Set__Filters updates property "Filters".
func (t AWS_Pipes_Pipe_FilterCriteria) Set__Filters(v cfz.ExpressionSlice[AWS_Pipes_Pipe_Filter]) AWS_Pipes_Pipe_FilterCriteria {
	t.Filters = v
	return t
}

// SetS__Filters updates property "Filters".
func (t AWS_Pipes_Pipe_FilterCriteria) SetS__Filters(v ...cfz.Expression[AWS_Pipes_Pipe_Filter]) AWS_Pipes_Pipe_FilterCriteria {
	t.Filters = cfz.S(v...)
	return t
}

// SetSV__Filters updates property "Filters".
func (t AWS_Pipes_Pipe_FilterCriteria) SetSV__Filters(v ...AWS_Pipes_Pipe_Filter) AWS_Pipes_Pipe_FilterCriteria {
	t.Filters = cfz.SV(v...)
	return t
}
