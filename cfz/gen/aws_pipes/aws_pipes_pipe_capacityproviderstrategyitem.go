// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_pipes

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Pipes_Pipe_CapacityProviderStrategyItem__Type is the CloudFormation type for AWS::Pipes::Pipe.CapacityProviderStrategyItem.
	AWS_Pipes_Pipe_CapacityProviderStrategyItem__Type = "AWS::Pipes::Pipe.CapacityProviderStrategyItem"
)

var (
	// AWS_Pipes_Pipe_CapacityProviderStrategyItem__PropertiesMap reports all the CloudFormation properties for AWS::Pipes::Pipe.CapacityProviderStrategyItem.
	AWS_Pipes_Pipe_CapacityProviderStrategyItem__PropertiesMap = struct {
		Base             string
		CapacityProvider string
		Weight           string
	}{
		Base:             "Base",
		CapacityProvider: "CapacityProvider",
		Weight:           "Weight",
	}

	// AWS_Pipes_Pipe_CapacityProviderStrategyItem__PropertiesSlice reports all the CloudFormation properties for AWS::Pipes::Pipe.CapacityProviderStrategyItem.
	AWS_Pipes_Pipe_CapacityProviderStrategyItem__PropertiesSlice = []string{
		AWS_Pipes_Pipe_CapacityProviderStrategyItem__PropertiesMap.Base,
		AWS_Pipes_Pipe_CapacityProviderStrategyItem__PropertiesMap.CapacityProvider,
		AWS_Pipes_Pipe_CapacityProviderStrategyItem__PropertiesMap.Weight,
	}
)

// AWS_Pipes_Pipe_CapacityProviderStrategyItem is a binding for AWS::Pipes::Pipe.CapacityProviderStrategyItem.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-capacityproviderstrategyitem.html
type AWS_Pipes_Pipe_CapacityProviderStrategyItem struct {
	// Base is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-capacityproviderstrategyitem.html#cfn-pipes-pipe-capacityproviderstrategyitem-base
	Base cfz.Expression[int32] `json:"Base,omitempty"`

	// CapacityProvider is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-capacityproviderstrategyitem.html#cfn-pipes-pipe-capacityproviderstrategyitem-capacityprovider
	CapacityProvider cfz.Expression[string] `json:"CapacityProvider,omitempty"`

	// Weight is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-capacityproviderstrategyitem.html#cfn-pipes-pipe-capacityproviderstrategyitem-weight
	Weight cfz.Expression[int32] `json:"Weight,omitempty"`
}

// New__AWS_Pipes_Pipe_CapacityProviderStrategyItem initializes a new AWS_Pipes_Pipe_CapacityProviderStrategyItem.
func New__AWS_Pipes_Pipe_CapacityProviderStrategyItem() AWS_Pipes_Pipe_CapacityProviderStrategyItem {
	return AWS_Pipes_Pipe_CapacityProviderStrategyItem{}
}

// GetType returns the CloudFormation type.
func (AWS_Pipes_Pipe_CapacityProviderStrategyItem) GetType() string {
	return AWS_Pipes_Pipe_CapacityProviderStrategyItem__Type
}

// Set__Base updates property "Base".
func (t AWS_Pipes_Pipe_CapacityProviderStrategyItem) Set__Base(v cfz.Expression[int32]) AWS_Pipes_Pipe_CapacityProviderStrategyItem {
	t.Base = v
	return t
}

// SetV__Base updates property "Base".
func (t AWS_Pipes_Pipe_CapacityProviderStrategyItem) SetV__Base(v int32) AWS_Pipes_Pipe_CapacityProviderStrategyItem {
	t.Base = cfz.V(v)
	return t
}

// Set__CapacityProvider updates property "CapacityProvider".
func (t AWS_Pipes_Pipe_CapacityProviderStrategyItem) Set__CapacityProvider(v cfz.Expression[string]) AWS_Pipes_Pipe_CapacityProviderStrategyItem {
	t.CapacityProvider = v
	return t
}

// SetV__CapacityProvider updates property "CapacityProvider".
func (t AWS_Pipes_Pipe_CapacityProviderStrategyItem) SetV__CapacityProvider(v string) AWS_Pipes_Pipe_CapacityProviderStrategyItem {
	t.CapacityProvider = cfz.V(v)
	return t
}

// Set__Weight updates property "Weight".
func (t AWS_Pipes_Pipe_CapacityProviderStrategyItem) Set__Weight(v cfz.Expression[int32]) AWS_Pipes_Pipe_CapacityProviderStrategyItem {
	t.Weight = v
	return t
}

// SetV__Weight updates property "Weight".
func (t AWS_Pipes_Pipe_CapacityProviderStrategyItem) SetV__Weight(v int32) AWS_Pipes_Pipe_CapacityProviderStrategyItem {
	t.Weight = cfz.V(v)
	return t
}
