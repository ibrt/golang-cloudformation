// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_pipes

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Pipes_Pipe_MultiMeasureMapping__Type is the CloudFormation type for AWS::Pipes::Pipe.MultiMeasureMapping.
	AWS_Pipes_Pipe_MultiMeasureMapping__Type = "AWS::Pipes::Pipe.MultiMeasureMapping"
)

var (
	// AWS_Pipes_Pipe_MultiMeasureMapping__PropertiesMap reports all the CloudFormation properties for AWS::Pipes::Pipe.MultiMeasureMapping.
	AWS_Pipes_Pipe_MultiMeasureMapping__PropertiesMap = struct {
		MultiMeasureAttributeMappings string
		MultiMeasureName              string
	}{
		MultiMeasureAttributeMappings: "MultiMeasureAttributeMappings",
		MultiMeasureName:              "MultiMeasureName",
	}

	// AWS_Pipes_Pipe_MultiMeasureMapping__PropertiesSlice reports all the CloudFormation properties for AWS::Pipes::Pipe.MultiMeasureMapping.
	AWS_Pipes_Pipe_MultiMeasureMapping__PropertiesSlice = []string{
		AWS_Pipes_Pipe_MultiMeasureMapping__PropertiesMap.MultiMeasureAttributeMappings,
		AWS_Pipes_Pipe_MultiMeasureMapping__PropertiesMap.MultiMeasureName,
	}
)

// AWS_Pipes_Pipe_MultiMeasureMapping is a binding for AWS::Pipes::Pipe.MultiMeasureMapping.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-multimeasuremapping.html
type AWS_Pipes_Pipe_MultiMeasureMapping struct {
	// MultiMeasureAttributeMappings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-multimeasuremapping.html#cfn-pipes-pipe-multimeasuremapping-multimeasureattributemappings
	MultiMeasureAttributeMappings cfz.ExpressionSlice[AWS_Pipes_Pipe_MultiMeasureAttributeMapping] `json:"MultiMeasureAttributeMappings,omitempty"`

	// MultiMeasureName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-multimeasuremapping.html#cfn-pipes-pipe-multimeasuremapping-multimeasurename
	MultiMeasureName cfz.Expression[string] `json:"MultiMeasureName,omitempty"`
}

// New__AWS_Pipes_Pipe_MultiMeasureMapping initializes a new AWS_Pipes_Pipe_MultiMeasureMapping.
func New__AWS_Pipes_Pipe_MultiMeasureMapping() AWS_Pipes_Pipe_MultiMeasureMapping {
	return AWS_Pipes_Pipe_MultiMeasureMapping{}
}

// GetType returns the CloudFormation type.
func (AWS_Pipes_Pipe_MultiMeasureMapping) GetType() string {
	return AWS_Pipes_Pipe_MultiMeasureMapping__Type
}

// Set__MultiMeasureAttributeMappings updates property "MultiMeasureAttributeMappings".
func (t AWS_Pipes_Pipe_MultiMeasureMapping) Set__MultiMeasureAttributeMappings(v cfz.ExpressionSlice[AWS_Pipes_Pipe_MultiMeasureAttributeMapping]) AWS_Pipes_Pipe_MultiMeasureMapping {
	t.MultiMeasureAttributeMappings = v
	return t
}

// SetS__MultiMeasureAttributeMappings updates property "MultiMeasureAttributeMappings".
func (t AWS_Pipes_Pipe_MultiMeasureMapping) SetS__MultiMeasureAttributeMappings(v ...cfz.Expression[AWS_Pipes_Pipe_MultiMeasureAttributeMapping]) AWS_Pipes_Pipe_MultiMeasureMapping {
	t.MultiMeasureAttributeMappings = cfz.S(v...)
	return t
}

// SetSV__MultiMeasureAttributeMappings updates property "MultiMeasureAttributeMappings".
func (t AWS_Pipes_Pipe_MultiMeasureMapping) SetSV__MultiMeasureAttributeMappings(v ...AWS_Pipes_Pipe_MultiMeasureAttributeMapping) AWS_Pipes_Pipe_MultiMeasureMapping {
	t.MultiMeasureAttributeMappings = cfz.SV(v...)
	return t
}

// Set__MultiMeasureName updates property "MultiMeasureName".
func (t AWS_Pipes_Pipe_MultiMeasureMapping) Set__MultiMeasureName(v cfz.Expression[string]) AWS_Pipes_Pipe_MultiMeasureMapping {
	t.MultiMeasureName = v
	return t
}

// SetV__MultiMeasureName updates property "MultiMeasureName".
func (t AWS_Pipes_Pipe_MultiMeasureMapping) SetV__MultiMeasureName(v string) AWS_Pipes_Pipe_MultiMeasureMapping {
	t.MultiMeasureName = cfz.V(v)
	return t
}
