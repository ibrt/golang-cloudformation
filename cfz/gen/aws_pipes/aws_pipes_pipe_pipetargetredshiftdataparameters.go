// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_pipes

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__Type is the CloudFormation type for AWS::Pipes::Pipe.PipeTargetRedshiftDataParameters.
	AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__Type = "AWS::Pipes::Pipe.PipeTargetRedshiftDataParameters"
)

var (
	// AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesMap reports all the CloudFormation properties for AWS::Pipes::Pipe.PipeTargetRedshiftDataParameters.
	AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesMap = struct {
		Database         string
		DbUser           string
		SecretManagerArn string
		Sqls             string
		StatementName    string
		WithEvent        string
	}{
		Database:         "Database",
		DbUser:           "DbUser",
		SecretManagerArn: "SecretManagerArn",
		Sqls:             "Sqls",
		StatementName:    "StatementName",
		WithEvent:        "WithEvent",
	}

	// AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesSlice reports all the CloudFormation properties for AWS::Pipes::Pipe.PipeTargetRedshiftDataParameters.
	AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesSlice = []string{
		AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesMap.Database,
		AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesMap.DbUser,
		AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesMap.SecretManagerArn,
		AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesMap.Sqls,
		AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesMap.StatementName,
		AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__PropertiesMap.WithEvent,
	}
)

// AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters is a binding for AWS::Pipes::Pipe.PipeTargetRedshiftDataParameters.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-pipetargetredshiftdataparameters.html
type AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters struct {
	// Database is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-pipetargetredshiftdataparameters.html#cfn-pipes-pipe-pipetargetredshiftdataparameters-database
	Database cfz.Expression[string] `json:"Database,omitempty"`

	// DbUser is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-pipetargetredshiftdataparameters.html#cfn-pipes-pipe-pipetargetredshiftdataparameters-dbuser
	DbUser cfz.Expression[string] `json:"DbUser,omitempty"`

	// SecretManagerArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-pipetargetredshiftdataparameters.html#cfn-pipes-pipe-pipetargetredshiftdataparameters-secretmanagerarn
	SecretManagerArn cfz.Expression[string] `json:"SecretManagerArn,omitempty"`

	// Sqls is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-pipetargetredshiftdataparameters.html#cfn-pipes-pipe-pipetargetredshiftdataparameters-sqls
	Sqls cfz.ExpressionSlice[string] `json:"Sqls,omitempty"`

	// StatementName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-pipetargetredshiftdataparameters.html#cfn-pipes-pipe-pipetargetredshiftdataparameters-statementname
	StatementName cfz.Expression[string] `json:"StatementName,omitempty"`

	// WithEvent is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-pipes-pipe-pipetargetredshiftdataparameters.html#cfn-pipes-pipe-pipetargetredshiftdataparameters-withevent
	WithEvent cfz.Expression[bool] `json:"WithEvent,omitempty"`
}

// New__AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters initializes a new AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters.
func New__AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters() AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	return AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters{}
}

// GetType returns the CloudFormation type.
func (AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) GetType() string {
	return AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters__Type
}

// Set__Database updates property "Database".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) Set__Database(v cfz.Expression[string]) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.Database = v
	return t
}

// SetV__Database updates property "Database".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) SetV__Database(v string) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.Database = cfz.V(v)
	return t
}

// Set__DbUser updates property "DbUser".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) Set__DbUser(v cfz.Expression[string]) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.DbUser = v
	return t
}

// SetV__DbUser updates property "DbUser".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) SetV__DbUser(v string) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.DbUser = cfz.V(v)
	return t
}

// Set__SecretManagerArn updates property "SecretManagerArn".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) Set__SecretManagerArn(v cfz.Expression[string]) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.SecretManagerArn = v
	return t
}

// SetV__SecretManagerArn updates property "SecretManagerArn".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) SetV__SecretManagerArn(v string) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.SecretManagerArn = cfz.V(v)
	return t
}

// Set__Sqls updates property "Sqls".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) Set__Sqls(v cfz.ExpressionSlice[string]) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.Sqls = v
	return t
}

// SetS__Sqls updates property "Sqls".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) SetS__Sqls(v ...cfz.Expression[string]) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.Sqls = cfz.S(v...)
	return t
}

// SetSV__Sqls updates property "Sqls".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) SetSV__Sqls(v ...string) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.Sqls = cfz.SV(v...)
	return t
}

// Set__StatementName updates property "StatementName".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) Set__StatementName(v cfz.Expression[string]) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.StatementName = v
	return t
}

// SetV__StatementName updates property "StatementName".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) SetV__StatementName(v string) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.StatementName = cfz.V(v)
	return t
}

// Set__WithEvent updates property "WithEvent".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) Set__WithEvent(v cfz.Expression[bool]) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.WithEvent = v
	return t
}

// SetV__WithEvent updates property "WithEvent".
func (t AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters) SetV__WithEvent(v bool) AWS_Pipes_Pipe_PipeTargetRedshiftDataParameters {
	t.WithEvent = cfz.V(v)
	return t
}
