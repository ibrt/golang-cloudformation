// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iot

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoT_TopicRule_HttpAuthorization__Type is the CloudFormation type for AWS::IoT::TopicRule.HttpAuthorization.
	AWS_IoT_TopicRule_HttpAuthorization__Type = "AWS::IoT::TopicRule.HttpAuthorization"
)

var (
	// AWS_IoT_TopicRule_HttpAuthorization__PropertiesMap reports all the CloudFormation properties for AWS::IoT::TopicRule.HttpAuthorization.
	AWS_IoT_TopicRule_HttpAuthorization__PropertiesMap = struct {
		Sigv4 string
	}{
		Sigv4: "Sigv4",
	}

	// AWS_IoT_TopicRule_HttpAuthorization__PropertiesSlice reports all the CloudFormation properties for AWS::IoT::TopicRule.HttpAuthorization.
	AWS_IoT_TopicRule_HttpAuthorization__PropertiesSlice = []string{
		AWS_IoT_TopicRule_HttpAuthorization__PropertiesMap.Sigv4,
	}
)

// AWS_IoT_TopicRule_HttpAuthorization is a binding for AWS::IoT::TopicRule.HttpAuthorization.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-httpauthorization.html
type AWS_IoT_TopicRule_HttpAuthorization struct {
	// Sigv4 is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-httpauthorization.html#cfn-iot-topicrule-httpauthorization-sigv4
	Sigv4 cfz.Expression[AWS_IoT_TopicRule_SigV4Authorization] `json:"Sigv4,omitempty"`
}

// New__AWS_IoT_TopicRule_HttpAuthorization initializes a new AWS_IoT_TopicRule_HttpAuthorization.
func New__AWS_IoT_TopicRule_HttpAuthorization() AWS_IoT_TopicRule_HttpAuthorization {
	return AWS_IoT_TopicRule_HttpAuthorization{}
}

// GetType returns the CloudFormation type.
func (AWS_IoT_TopicRule_HttpAuthorization) GetType() string {
	return AWS_IoT_TopicRule_HttpAuthorization__Type
}

// Set__Sigv4 updates property "Sigv4".
func (t AWS_IoT_TopicRule_HttpAuthorization) Set__Sigv4(v cfz.Expression[AWS_IoT_TopicRule_SigV4Authorization]) AWS_IoT_TopicRule_HttpAuthorization {
	t.Sigv4 = v
	return t
}

// SetV__Sigv4 updates property "Sigv4".
func (t AWS_IoT_TopicRule_HttpAuthorization) SetV__Sigv4(v AWS_IoT_TopicRule_SigV4Authorization) AWS_IoT_TopicRule_HttpAuthorization {
	t.Sigv4 = cfz.V(v)
	return t
}
