// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iot

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoT_TopicRule_SigV4Authorization__Type is the CloudFormation type for AWS::IoT::TopicRule.SigV4Authorization.
	AWS_IoT_TopicRule_SigV4Authorization__Type = "AWS::IoT::TopicRule.SigV4Authorization"
)

var (
	// AWS_IoT_TopicRule_SigV4Authorization__PropertiesMap reports all the CloudFormation properties for AWS::IoT::TopicRule.SigV4Authorization.
	AWS_IoT_TopicRule_SigV4Authorization__PropertiesMap = struct {
		RoleArn       string
		ServiceName   string
		SigningRegion string
	}{
		RoleArn:       "RoleArn",
		ServiceName:   "ServiceName",
		SigningRegion: "SigningRegion",
	}

	// AWS_IoT_TopicRule_SigV4Authorization__PropertiesSlice reports all the CloudFormation properties for AWS::IoT::TopicRule.SigV4Authorization.
	AWS_IoT_TopicRule_SigV4Authorization__PropertiesSlice = []string{
		AWS_IoT_TopicRule_SigV4Authorization__PropertiesMap.RoleArn,
		AWS_IoT_TopicRule_SigV4Authorization__PropertiesMap.ServiceName,
		AWS_IoT_TopicRule_SigV4Authorization__PropertiesMap.SigningRegion,
	}
)

// AWS_IoT_TopicRule_SigV4Authorization is a binding for AWS::IoT::TopicRule.SigV4Authorization.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-sigv4authorization.html
type AWS_IoT_TopicRule_SigV4Authorization struct {
	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-sigv4authorization.html#cfn-iot-topicrule-sigv4authorization-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// ServiceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-sigv4authorization.html#cfn-iot-topicrule-sigv4authorization-servicename
	ServiceName cfz.Expression[string] `json:"ServiceName,omitempty"`

	// SigningRegion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-sigv4authorization.html#cfn-iot-topicrule-sigv4authorization-signingregion
	SigningRegion cfz.Expression[string] `json:"SigningRegion,omitempty"`
}

// New__AWS_IoT_TopicRule_SigV4Authorization initializes a new AWS_IoT_TopicRule_SigV4Authorization.
func New__AWS_IoT_TopicRule_SigV4Authorization() AWS_IoT_TopicRule_SigV4Authorization {
	return AWS_IoT_TopicRule_SigV4Authorization{}
}

// GetType returns the CloudFormation type.
func (AWS_IoT_TopicRule_SigV4Authorization) GetType() string {
	return AWS_IoT_TopicRule_SigV4Authorization__Type
}

// Set__RoleArn updates property "RoleArn".
func (t AWS_IoT_TopicRule_SigV4Authorization) Set__RoleArn(v cfz.Expression[string]) AWS_IoT_TopicRule_SigV4Authorization {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t AWS_IoT_TopicRule_SigV4Authorization) SetV__RoleArn(v string) AWS_IoT_TopicRule_SigV4Authorization {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__ServiceName updates property "ServiceName".
func (t AWS_IoT_TopicRule_SigV4Authorization) Set__ServiceName(v cfz.Expression[string]) AWS_IoT_TopicRule_SigV4Authorization {
	t.ServiceName = v
	return t
}

// SetV__ServiceName updates property "ServiceName".
func (t AWS_IoT_TopicRule_SigV4Authorization) SetV__ServiceName(v string) AWS_IoT_TopicRule_SigV4Authorization {
	t.ServiceName = cfz.V(v)
	return t
}

// Set__SigningRegion updates property "SigningRegion".
func (t AWS_IoT_TopicRule_SigV4Authorization) Set__SigningRegion(v cfz.Expression[string]) AWS_IoT_TopicRule_SigV4Authorization {
	t.SigningRegion = v
	return t
}

// SetV__SigningRegion updates property "SigningRegion".
func (t AWS_IoT_TopicRule_SigV4Authorization) SetV__SigningRegion(v string) AWS_IoT_TopicRule_SigV4Authorization {
	t.SigningRegion = cfz.V(v)
	return t
}
