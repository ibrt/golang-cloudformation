// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iot

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_IoT_DomainConfiguration)(nil)
	_ cfz.Resource                   = (*AWS_IoT_DomainConfiguration)(nil)
)

const (
	// AWS_IoT_DomainConfiguration__Type is the CloudFormation type for AWS::IoT::DomainConfiguration.
	AWS_IoT_DomainConfiguration__Type = "AWS::IoT::DomainConfiguration"
)

var (
	// AWS_IoT_DomainConfiguration__AttributesMap reports all the CloudFormation attributes for AWS::IoT::DomainConfiguration.
	AWS_IoT_DomainConfiguration__AttributesMap = struct {
		Arn                string
		DomainType         string
		ServerCertificates string
	}{
		Arn:                "Arn",
		DomainType:         "DomainType",
		ServerCertificates: "ServerCertificates",
	}

	// AWS_IoT_DomainConfiguration__AttributesSlice reports all the CloudFormation attributes for AWS::IoT::DomainConfiguration.
	AWS_IoT_DomainConfiguration__AttributesSlice = []string{
		AWS_IoT_DomainConfiguration__AttributesMap.Arn,
		AWS_IoT_DomainConfiguration__AttributesMap.DomainType,
		AWS_IoT_DomainConfiguration__AttributesMap.ServerCertificates,
	}
)

var (
	// AWS_IoT_DomainConfiguration__PropertiesMap reports all the CloudFormation properties for AWS::IoT::DomainConfiguration.
	AWS_IoT_DomainConfiguration__PropertiesMap = struct {
		ApplicationProtocol       string
		AuthenticationType        string
		AuthorizerConfig          string
		ClientCertificateConfig   string
		DomainConfigurationName   string
		DomainConfigurationStatus string
		DomainName                string
		ServerCertificateArns     string
		ServerCertificateConfig   string
		ServiceType               string
		Tags                      string
		TlsConfig                 string
		ValidationCertificateArn  string
	}{
		ApplicationProtocol:       "ApplicationProtocol",
		AuthenticationType:        "AuthenticationType",
		AuthorizerConfig:          "AuthorizerConfig",
		ClientCertificateConfig:   "ClientCertificateConfig",
		DomainConfigurationName:   "DomainConfigurationName",
		DomainConfigurationStatus: "DomainConfigurationStatus",
		DomainName:                "DomainName",
		ServerCertificateArns:     "ServerCertificateArns",
		ServerCertificateConfig:   "ServerCertificateConfig",
		ServiceType:               "ServiceType",
		Tags:                      "Tags",
		TlsConfig:                 "TlsConfig",
		ValidationCertificateArn:  "ValidationCertificateArn",
	}

	// AWS_IoT_DomainConfiguration__PropertiesSlice reports all the CloudFormation properties for AWS::IoT::DomainConfiguration.
	AWS_IoT_DomainConfiguration__PropertiesSlice = []string{
		AWS_IoT_DomainConfiguration__PropertiesMap.ApplicationProtocol,
		AWS_IoT_DomainConfiguration__PropertiesMap.AuthenticationType,
		AWS_IoT_DomainConfiguration__PropertiesMap.AuthorizerConfig,
		AWS_IoT_DomainConfiguration__PropertiesMap.ClientCertificateConfig,
		AWS_IoT_DomainConfiguration__PropertiesMap.DomainConfigurationName,
		AWS_IoT_DomainConfiguration__PropertiesMap.DomainConfigurationStatus,
		AWS_IoT_DomainConfiguration__PropertiesMap.DomainName,
		AWS_IoT_DomainConfiguration__PropertiesMap.ServerCertificateArns,
		AWS_IoT_DomainConfiguration__PropertiesMap.ServerCertificateConfig,
		AWS_IoT_DomainConfiguration__PropertiesMap.ServiceType,
		AWS_IoT_DomainConfiguration__PropertiesMap.Tags,
		AWS_IoT_DomainConfiguration__PropertiesMap.TlsConfig,
		AWS_IoT_DomainConfiguration__PropertiesMap.ValidationCertificateArn,
	}
)

// AWS_IoT_DomainConfiguration is a binding for AWS::IoT::DomainConfiguration.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html
type AWS_IoT_DomainConfiguration struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationProtocol is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-applicationprotocol
	ApplicationProtocol cfz.Expression[string] `json:"ApplicationProtocol,omitempty"`

	// AuthenticationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-authenticationtype
	AuthenticationType cfz.Expression[string] `json:"AuthenticationType,omitempty"`

	// AuthorizerConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-authorizerconfig
	AuthorizerConfig cfz.Expression[AWS_IoT_DomainConfiguration_AuthorizerConfig] `json:"AuthorizerConfig,omitempty"`

	// ClientCertificateConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-clientcertificateconfig
	ClientCertificateConfig cfz.Expression[AWS_IoT_DomainConfiguration_ClientCertificateConfig] `json:"ClientCertificateConfig,omitempty"`

	// DomainConfigurationName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-domainconfigurationname
	DomainConfigurationName cfz.Expression[string] `json:"DomainConfigurationName,omitempty"`

	// DomainConfigurationStatus is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-domainconfigurationstatus
	DomainConfigurationStatus cfz.Expression[string] `json:"DomainConfigurationStatus,omitempty"`

	// DomainName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-domainname
	DomainName cfz.Expression[string] `json:"DomainName,omitempty"`

	// ServerCertificateArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-servercertificatearns
	ServerCertificateArns cfz.ExpressionSlice[string] `json:"ServerCertificateArns,omitempty"`

	// ServerCertificateConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-servercertificateconfig
	ServerCertificateConfig cfz.Expression[AWS_IoT_DomainConfiguration_ServerCertificateConfig] `json:"ServerCertificateConfig,omitempty"`

	// ServiceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-servicetype
	ServiceType cfz.Expression[string] `json:"ServiceType,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TlsConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-tlsconfig
	TlsConfig cfz.Expression[AWS_IoT_DomainConfiguration_TlsConfig] `json:"TlsConfig,omitempty"`

	// ValidationCertificateArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-domainconfiguration.html#cfn-iot-domainconfiguration-validationcertificatearn
	ValidationCertificateArn cfz.Expression[string] `json:"ValidationCertificateArn,omitempty"`
}

// New__AWS_IoT_DomainConfiguration initializes a new *AWS_IoT_DomainConfiguration.
func New__AWS_IoT_DomainConfiguration(logicalName string) *AWS_IoT_DomainConfiguration {
	return &AWS_IoT_DomainConfiguration{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_IoT_DomainConfiguration) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_IoT_DomainConfiguration) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_IoT_DomainConfiguration) GetType() string {
	return AWS_IoT_DomainConfiguration__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_IoT_DomainConfiguration) Set__LogicalName(v string) *AWS_IoT_DomainConfiguration {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_IoT_DomainConfiguration) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_IoT_DomainConfiguration {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_IoT_DomainConfiguration) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_IoT_DomainConfiguration {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_IoT_DomainConfiguration) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_IoT_DomainConfiguration {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_IoT_DomainConfiguration) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_IoT_DomainConfiguration {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_IoT_DomainConfiguration) Set__RequestedOutputs(v []cfz.Output) *AWS_IoT_DomainConfiguration {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_IoT_DomainConfiguration) Add__RequestedOutputs(v ...cfz.Output) *AWS_IoT_DomainConfiguration {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationProtocol updates property "ApplicationProtocol".
func (t *AWS_IoT_DomainConfiguration) Set__ApplicationProtocol(v cfz.Expression[string]) *AWS_IoT_DomainConfiguration {
	t.ApplicationProtocol = v
	return t
}

// SetV__ApplicationProtocol updates property "ApplicationProtocol".
func (t *AWS_IoT_DomainConfiguration) SetV__ApplicationProtocol(v string) *AWS_IoT_DomainConfiguration {
	t.ApplicationProtocol = cfz.V(v)
	return t
}

// Set__AuthenticationType updates property "AuthenticationType".
func (t *AWS_IoT_DomainConfiguration) Set__AuthenticationType(v cfz.Expression[string]) *AWS_IoT_DomainConfiguration {
	t.AuthenticationType = v
	return t
}

// SetV__AuthenticationType updates property "AuthenticationType".
func (t *AWS_IoT_DomainConfiguration) SetV__AuthenticationType(v string) *AWS_IoT_DomainConfiguration {
	t.AuthenticationType = cfz.V(v)
	return t
}

// Set__AuthorizerConfig updates property "AuthorizerConfig".
func (t *AWS_IoT_DomainConfiguration) Set__AuthorizerConfig(v cfz.Expression[AWS_IoT_DomainConfiguration_AuthorizerConfig]) *AWS_IoT_DomainConfiguration {
	t.AuthorizerConfig = v
	return t
}

// SetV__AuthorizerConfig updates property "AuthorizerConfig".
func (t *AWS_IoT_DomainConfiguration) SetV__AuthorizerConfig(v AWS_IoT_DomainConfiguration_AuthorizerConfig) *AWS_IoT_DomainConfiguration {
	t.AuthorizerConfig = cfz.V(v)
	return t
}

// Set__ClientCertificateConfig updates property "ClientCertificateConfig".
func (t *AWS_IoT_DomainConfiguration) Set__ClientCertificateConfig(v cfz.Expression[AWS_IoT_DomainConfiguration_ClientCertificateConfig]) *AWS_IoT_DomainConfiguration {
	t.ClientCertificateConfig = v
	return t
}

// SetV__ClientCertificateConfig updates property "ClientCertificateConfig".
func (t *AWS_IoT_DomainConfiguration) SetV__ClientCertificateConfig(v AWS_IoT_DomainConfiguration_ClientCertificateConfig) *AWS_IoT_DomainConfiguration {
	t.ClientCertificateConfig = cfz.V(v)
	return t
}

// Set__DomainConfigurationName updates property "DomainConfigurationName".
func (t *AWS_IoT_DomainConfiguration) Set__DomainConfigurationName(v cfz.Expression[string]) *AWS_IoT_DomainConfiguration {
	t.DomainConfigurationName = v
	return t
}

// SetV__DomainConfigurationName updates property "DomainConfigurationName".
func (t *AWS_IoT_DomainConfiguration) SetV__DomainConfigurationName(v string) *AWS_IoT_DomainConfiguration {
	t.DomainConfigurationName = cfz.V(v)
	return t
}

// Set__DomainConfigurationStatus updates property "DomainConfigurationStatus".
func (t *AWS_IoT_DomainConfiguration) Set__DomainConfigurationStatus(v cfz.Expression[string]) *AWS_IoT_DomainConfiguration {
	t.DomainConfigurationStatus = v
	return t
}

// SetV__DomainConfigurationStatus updates property "DomainConfigurationStatus".
func (t *AWS_IoT_DomainConfiguration) SetV__DomainConfigurationStatus(v string) *AWS_IoT_DomainConfiguration {
	t.DomainConfigurationStatus = cfz.V(v)
	return t
}

// Set__DomainName updates property "DomainName".
func (t *AWS_IoT_DomainConfiguration) Set__DomainName(v cfz.Expression[string]) *AWS_IoT_DomainConfiguration {
	t.DomainName = v
	return t
}

// SetV__DomainName updates property "DomainName".
func (t *AWS_IoT_DomainConfiguration) SetV__DomainName(v string) *AWS_IoT_DomainConfiguration {
	t.DomainName = cfz.V(v)
	return t
}

// Set__ServerCertificateArns updates property "ServerCertificateArns".
func (t *AWS_IoT_DomainConfiguration) Set__ServerCertificateArns(v cfz.ExpressionSlice[string]) *AWS_IoT_DomainConfiguration {
	t.ServerCertificateArns = v
	return t
}

// SetS__ServerCertificateArns updates property "ServerCertificateArns".
func (t *AWS_IoT_DomainConfiguration) SetS__ServerCertificateArns(v ...cfz.Expression[string]) *AWS_IoT_DomainConfiguration {
	t.ServerCertificateArns = cfz.S(v...)
	return t
}

// SetSV__ServerCertificateArns updates property "ServerCertificateArns".
func (t *AWS_IoT_DomainConfiguration) SetSV__ServerCertificateArns(v ...string) *AWS_IoT_DomainConfiguration {
	t.ServerCertificateArns = cfz.SV(v...)
	return t
}

// Set__ServerCertificateConfig updates property "ServerCertificateConfig".
func (t *AWS_IoT_DomainConfiguration) Set__ServerCertificateConfig(v cfz.Expression[AWS_IoT_DomainConfiguration_ServerCertificateConfig]) *AWS_IoT_DomainConfiguration {
	t.ServerCertificateConfig = v
	return t
}

// SetV__ServerCertificateConfig updates property "ServerCertificateConfig".
func (t *AWS_IoT_DomainConfiguration) SetV__ServerCertificateConfig(v AWS_IoT_DomainConfiguration_ServerCertificateConfig) *AWS_IoT_DomainConfiguration {
	t.ServerCertificateConfig = cfz.V(v)
	return t
}

// Set__ServiceType updates property "ServiceType".
func (t *AWS_IoT_DomainConfiguration) Set__ServiceType(v cfz.Expression[string]) *AWS_IoT_DomainConfiguration {
	t.ServiceType = v
	return t
}

// SetV__ServiceType updates property "ServiceType".
func (t *AWS_IoT_DomainConfiguration) SetV__ServiceType(v string) *AWS_IoT_DomainConfiguration {
	t.ServiceType = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_IoT_DomainConfiguration) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_IoT_DomainConfiguration {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_IoT_DomainConfiguration) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_IoT_DomainConfiguration {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_IoT_DomainConfiguration) SetSV__Tags(v ...cfz.Tag) *AWS_IoT_DomainConfiguration {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TlsConfig updates property "TlsConfig".
func (t *AWS_IoT_DomainConfiguration) Set__TlsConfig(v cfz.Expression[AWS_IoT_DomainConfiguration_TlsConfig]) *AWS_IoT_DomainConfiguration {
	t.TlsConfig = v
	return t
}

// SetV__TlsConfig updates property "TlsConfig".
func (t *AWS_IoT_DomainConfiguration) SetV__TlsConfig(v AWS_IoT_DomainConfiguration_TlsConfig) *AWS_IoT_DomainConfiguration {
	t.TlsConfig = cfz.V(v)
	return t
}

// Set__ValidationCertificateArn updates property "ValidationCertificateArn".
func (t *AWS_IoT_DomainConfiguration) Set__ValidationCertificateArn(v cfz.Expression[string]) *AWS_IoT_DomainConfiguration {
	t.ValidationCertificateArn = v
	return t
}

// SetV__ValidationCertificateArn updates property "ValidationCertificateArn".
func (t *AWS_IoT_DomainConfiguration) SetV__ValidationCertificateArn(v string) *AWS_IoT_DomainConfiguration {
	t.ValidationCertificateArn = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_IoT_DomainConfiguration) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_IoT_DomainConfiguration) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoT_DomainConfiguration__AttributesMap.Arn))
}

// GetAtt__DomainType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DomainType
func (t *AWS_IoT_DomainConfiguration) GetAtt__DomainType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoT_DomainConfiguration__AttributesMap.DomainType))
}

// GetAttSlice__ServerCertificates returns a $cfz.ExpressionSlice[AWS_IoT_DomainConfiguration_ServerCertificateSummary] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ServerCertificates
func (t *AWS_IoT_DomainConfiguration) GetAttSlice__ServerCertificates() cfz.ExpressionSlice[AWS_IoT_DomainConfiguration_ServerCertificateSummary] {
	return cfz.GetAttSlice[AWS_IoT_DomainConfiguration_ServerCertificateSummary](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_IoT_DomainConfiguration__AttributesMap.ServerCertificates))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_IoT_DomainConfiguration) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_IoT_DomainConfiguration) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DomainType returns a conventionally configured output for an attribute of this resource.
// Attribute: DomainType
func (t *AWS_IoT_DomainConfiguration) GetConventionalOutputAtt__DomainType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDomainType", t.GetAtt__DomainType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ServerCertificates returns a conventionally configured output for an attribute of this resource.
// Attribute: ServerCertificates
func (t *AWS_IoT_DomainConfiguration) GetConventionalOutputAtt__ServerCertificates(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttServerCertificates", t.GetAttSlice__ServerCertificates())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_IoT_DomainConfiguration) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_IoT_DomainConfiguration

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_IoT_DomainConfiguration) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
