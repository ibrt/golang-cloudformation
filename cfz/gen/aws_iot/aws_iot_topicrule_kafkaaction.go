// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_iot

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_IoT_TopicRule_KafkaAction__Type is the CloudFormation type for AWS::IoT::TopicRule.KafkaAction.
	AWS_IoT_TopicRule_KafkaAction__Type = "AWS::IoT::TopicRule.KafkaAction"
)

var (
	// AWS_IoT_TopicRule_KafkaAction__PropertiesMap reports all the CloudFormation properties for AWS::IoT::TopicRule.KafkaAction.
	AWS_IoT_TopicRule_KafkaAction__PropertiesMap = struct {
		ClientProperties string
		DestinationArn   string
		Headers          string
		Key              string
		Partition        string
		Topic            string
	}{
		ClientProperties: "ClientProperties",
		DestinationArn:   "DestinationArn",
		Headers:          "Headers",
		Key:              "Key",
		Partition:        "Partition",
		Topic:            "Topic",
	}

	// AWS_IoT_TopicRule_KafkaAction__PropertiesSlice reports all the CloudFormation properties for AWS::IoT::TopicRule.KafkaAction.
	AWS_IoT_TopicRule_KafkaAction__PropertiesSlice = []string{
		AWS_IoT_TopicRule_KafkaAction__PropertiesMap.ClientProperties,
		AWS_IoT_TopicRule_KafkaAction__PropertiesMap.DestinationArn,
		AWS_IoT_TopicRule_KafkaAction__PropertiesMap.Headers,
		AWS_IoT_TopicRule_KafkaAction__PropertiesMap.Key,
		AWS_IoT_TopicRule_KafkaAction__PropertiesMap.Partition,
		AWS_IoT_TopicRule_KafkaAction__PropertiesMap.Topic,
	}
)

// AWS_IoT_TopicRule_KafkaAction is a binding for AWS::IoT::TopicRule.KafkaAction.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-kafkaaction.html
type AWS_IoT_TopicRule_KafkaAction struct {
	// ClientProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-kafkaaction.html#cfn-iot-topicrule-kafkaaction-clientproperties
	ClientProperties cfz.ExpressionMap[string] `json:"ClientProperties,omitempty"`

	// DestinationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-kafkaaction.html#cfn-iot-topicrule-kafkaaction-destinationarn
	DestinationArn cfz.Expression[string] `json:"DestinationArn,omitempty"`

	// Headers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-kafkaaction.html#cfn-iot-topicrule-kafkaaction-headers
	Headers cfz.ExpressionSlice[AWS_IoT_TopicRule_KafkaActionHeader] `json:"Headers,omitempty"`

	// Key is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-kafkaaction.html#cfn-iot-topicrule-kafkaaction-key
	Key cfz.Expression[string] `json:"Key,omitempty"`

	// Partition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-kafkaaction.html#cfn-iot-topicrule-kafkaaction-partition
	Partition cfz.Expression[string] `json:"Partition,omitempty"`

	// Topic is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iot-topicrule-kafkaaction.html#cfn-iot-topicrule-kafkaaction-topic
	Topic cfz.Expression[string] `json:"Topic,omitempty"`
}

// New__AWS_IoT_TopicRule_KafkaAction initializes a new AWS_IoT_TopicRule_KafkaAction.
func New__AWS_IoT_TopicRule_KafkaAction() AWS_IoT_TopicRule_KafkaAction {
	return AWS_IoT_TopicRule_KafkaAction{}
}

// GetType returns the CloudFormation type.
func (AWS_IoT_TopicRule_KafkaAction) GetType() string {
	return AWS_IoT_TopicRule_KafkaAction__Type
}

// Set__ClientProperties updates property "ClientProperties".
func (t AWS_IoT_TopicRule_KafkaAction) Set__ClientProperties(v cfz.ExpressionMap[string]) AWS_IoT_TopicRule_KafkaAction {
	t.ClientProperties = v
	return t
}

// SetM__ClientProperties updates property "ClientProperties".
func (t AWS_IoT_TopicRule_KafkaAction) SetM__ClientProperties(v ...map[string]cfz.Expression[string]) AWS_IoT_TopicRule_KafkaAction {
	t.ClientProperties = cfz.M(v...)
	return t
}

// SetMV__ClientProperties updates property "ClientProperties".
func (t AWS_IoT_TopicRule_KafkaAction) SetMV__ClientProperties(v ...map[string]string) AWS_IoT_TopicRule_KafkaAction {
	t.ClientProperties = cfz.MV(v...)
	return t
}

// Set__DestinationArn updates property "DestinationArn".
func (t AWS_IoT_TopicRule_KafkaAction) Set__DestinationArn(v cfz.Expression[string]) AWS_IoT_TopicRule_KafkaAction {
	t.DestinationArn = v
	return t
}

// SetV__DestinationArn updates property "DestinationArn".
func (t AWS_IoT_TopicRule_KafkaAction) SetV__DestinationArn(v string) AWS_IoT_TopicRule_KafkaAction {
	t.DestinationArn = cfz.V(v)
	return t
}

// Set__Headers updates property "Headers".
func (t AWS_IoT_TopicRule_KafkaAction) Set__Headers(v cfz.ExpressionSlice[AWS_IoT_TopicRule_KafkaActionHeader]) AWS_IoT_TopicRule_KafkaAction {
	t.Headers = v
	return t
}

// SetS__Headers updates property "Headers".
func (t AWS_IoT_TopicRule_KafkaAction) SetS__Headers(v ...cfz.Expression[AWS_IoT_TopicRule_KafkaActionHeader]) AWS_IoT_TopicRule_KafkaAction {
	t.Headers = cfz.S(v...)
	return t
}

// SetSV__Headers updates property "Headers".
func (t AWS_IoT_TopicRule_KafkaAction) SetSV__Headers(v ...AWS_IoT_TopicRule_KafkaActionHeader) AWS_IoT_TopicRule_KafkaAction {
	t.Headers = cfz.SV(v...)
	return t
}

// Set__Key updates property "Key".
func (t AWS_IoT_TopicRule_KafkaAction) Set__Key(v cfz.Expression[string]) AWS_IoT_TopicRule_KafkaAction {
	t.Key = v
	return t
}

// SetV__Key updates property "Key".
func (t AWS_IoT_TopicRule_KafkaAction) SetV__Key(v string) AWS_IoT_TopicRule_KafkaAction {
	t.Key = cfz.V(v)
	return t
}

// Set__Partition updates property "Partition".
func (t AWS_IoT_TopicRule_KafkaAction) Set__Partition(v cfz.Expression[string]) AWS_IoT_TopicRule_KafkaAction {
	t.Partition = v
	return t
}

// SetV__Partition updates property "Partition".
func (t AWS_IoT_TopicRule_KafkaAction) SetV__Partition(v string) AWS_IoT_TopicRule_KafkaAction {
	t.Partition = cfz.V(v)
	return t
}

// Set__Topic updates property "Topic".
func (t AWS_IoT_TopicRule_KafkaAction) Set__Topic(v cfz.Expression[string]) AWS_IoT_TopicRule_KafkaAction {
	t.Topic = v
	return t
}

// SetV__Topic updates property "Topic".
func (t AWS_IoT_TopicRule_KafkaAction) SetV__Topic(v string) AWS_IoT_TopicRule_KafkaAction {
	t.Topic = cfz.V(v)
	return t
}
