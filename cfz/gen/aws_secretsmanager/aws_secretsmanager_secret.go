// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_secretsmanager

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SecretsManager_Secret)(nil)
	_ cfz.Resource                   = (*AWS_SecretsManager_Secret)(nil)
)

const (
	// AWS_SecretsManager_Secret__Type is the CloudFormation type for AWS::SecretsManager::Secret.
	AWS_SecretsManager_Secret__Type = "AWS::SecretsManager::Secret"
)

var (
	// AWS_SecretsManager_Secret__AttributesMap reports all the CloudFormation attributes for AWS::SecretsManager::Secret.
	AWS_SecretsManager_Secret__AttributesMap = struct {
		Id string
	}{
		Id: "Id",
	}

	// AWS_SecretsManager_Secret__AttributesSlice reports all the CloudFormation attributes for AWS::SecretsManager::Secret.
	AWS_SecretsManager_Secret__AttributesSlice = []string{
		AWS_SecretsManager_Secret__AttributesMap.Id,
	}
)

var (
	// AWS_SecretsManager_Secret__PropertiesMap reports all the CloudFormation properties for AWS::SecretsManager::Secret.
	AWS_SecretsManager_Secret__PropertiesMap = struct {
		Description          string
		GenerateSecretString string
		KmsKeyId             string
		Name                 string
		ReplicaRegions       string
		SecretString         string
		Tags                 string
	}{
		Description:          "Description",
		GenerateSecretString: "GenerateSecretString",
		KmsKeyId:             "KmsKeyId",
		Name:                 "Name",
		ReplicaRegions:       "ReplicaRegions",
		SecretString:         "SecretString",
		Tags:                 "Tags",
	}

	// AWS_SecretsManager_Secret__PropertiesSlice reports all the CloudFormation properties for AWS::SecretsManager::Secret.
	AWS_SecretsManager_Secret__PropertiesSlice = []string{
		AWS_SecretsManager_Secret__PropertiesMap.Description,
		AWS_SecretsManager_Secret__PropertiesMap.GenerateSecretString,
		AWS_SecretsManager_Secret__PropertiesMap.KmsKeyId,
		AWS_SecretsManager_Secret__PropertiesMap.Name,
		AWS_SecretsManager_Secret__PropertiesMap.ReplicaRegions,
		AWS_SecretsManager_Secret__PropertiesMap.SecretString,
		AWS_SecretsManager_Secret__PropertiesMap.Tags,
	}
)

// AWS_SecretsManager_Secret is a binding for AWS::SecretsManager::Secret.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html
type AWS_SecretsManager_Secret struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// GenerateSecretString is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-generatesecretstring
	GenerateSecretString cfz.Expression[AWS_SecretsManager_Secret_GenerateSecretString] `json:"GenerateSecretString,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// ReplicaRegions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-replicaregions
	ReplicaRegions cfz.ExpressionSlice[AWS_SecretsManager_Secret_ReplicaRegion] `json:"ReplicaRegions,omitempty"`

	// SecretString is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-secretstring
	SecretString cfz.Expression[string] `json:"SecretString,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_SecretsManager_Secret initializes a new *AWS_SecretsManager_Secret.
func New__AWS_SecretsManager_Secret(logicalName string) *AWS_SecretsManager_Secret {
	return &AWS_SecretsManager_Secret{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SecretsManager_Secret) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SecretsManager_Secret) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SecretsManager_Secret) GetType() string {
	return AWS_SecretsManager_Secret__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SecretsManager_Secret) Set__LogicalName(v string) *AWS_SecretsManager_Secret {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SecretsManager_Secret) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SecretsManager_Secret {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SecretsManager_Secret) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SecretsManager_Secret {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SecretsManager_Secret) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SecretsManager_Secret {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SecretsManager_Secret) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SecretsManager_Secret {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SecretsManager_Secret) Set__RequestedOutputs(v []cfz.Output) *AWS_SecretsManager_Secret {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SecretsManager_Secret) Add__RequestedOutputs(v ...cfz.Output) *AWS_SecretsManager_Secret {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_SecretsManager_Secret) Set__Description(v cfz.Expression[string]) *AWS_SecretsManager_Secret {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_SecretsManager_Secret) SetV__Description(v string) *AWS_SecretsManager_Secret {
	t.Description = cfz.V(v)
	return t
}

// Set__GenerateSecretString updates property "GenerateSecretString".
func (t *AWS_SecretsManager_Secret) Set__GenerateSecretString(v cfz.Expression[AWS_SecretsManager_Secret_GenerateSecretString]) *AWS_SecretsManager_Secret {
	t.GenerateSecretString = v
	return t
}

// SetV__GenerateSecretString updates property "GenerateSecretString".
func (t *AWS_SecretsManager_Secret) SetV__GenerateSecretString(v AWS_SecretsManager_Secret_GenerateSecretString) *AWS_SecretsManager_Secret {
	t.GenerateSecretString = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_SecretsManager_Secret) Set__KmsKeyId(v cfz.Expression[string]) *AWS_SecretsManager_Secret {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_SecretsManager_Secret) SetV__KmsKeyId(v string) *AWS_SecretsManager_Secret {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_SecretsManager_Secret) Set__Name(v cfz.Expression[string]) *AWS_SecretsManager_Secret {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_SecretsManager_Secret) SetV__Name(v string) *AWS_SecretsManager_Secret {
	t.Name = cfz.V(v)
	return t
}

// Set__ReplicaRegions updates property "ReplicaRegions".
func (t *AWS_SecretsManager_Secret) Set__ReplicaRegions(v cfz.ExpressionSlice[AWS_SecretsManager_Secret_ReplicaRegion]) *AWS_SecretsManager_Secret {
	t.ReplicaRegions = v
	return t
}

// SetS__ReplicaRegions updates property "ReplicaRegions".
func (t *AWS_SecretsManager_Secret) SetS__ReplicaRegions(v ...cfz.Expression[AWS_SecretsManager_Secret_ReplicaRegion]) *AWS_SecretsManager_Secret {
	t.ReplicaRegions = cfz.S(v...)
	return t
}

// SetSV__ReplicaRegions updates property "ReplicaRegions".
func (t *AWS_SecretsManager_Secret) SetSV__ReplicaRegions(v ...AWS_SecretsManager_Secret_ReplicaRegion) *AWS_SecretsManager_Secret {
	t.ReplicaRegions = cfz.SV(v...)
	return t
}

// Set__SecretString updates property "SecretString".
func (t *AWS_SecretsManager_Secret) Set__SecretString(v cfz.Expression[string]) *AWS_SecretsManager_Secret {
	t.SecretString = v
	return t
}

// SetV__SecretString updates property "SecretString".
func (t *AWS_SecretsManager_Secret) SetV__SecretString(v string) *AWS_SecretsManager_Secret {
	t.SecretString = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SecretsManager_Secret) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SecretsManager_Secret {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SecretsManager_Secret) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SecretsManager_Secret {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SecretsManager_Secret) SetSV__Tags(v ...cfz.Tag) *AWS_SecretsManager_Secret {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SecretsManager_Secret) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_SecretsManager_Secret) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SecretsManager_Secret__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SecretsManager_Secret) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_SecretsManager_Secret) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SecretsManager_Secret) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SecretsManager_Secret

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SecretsManager_Secret) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
