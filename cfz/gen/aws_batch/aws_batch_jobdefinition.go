// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_batch

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Batch_JobDefinition)(nil)
	_ cfz.Resource                   = (*AWS_Batch_JobDefinition)(nil)
)

const (
	// AWS_Batch_JobDefinition__Type is the CloudFormation type for AWS::Batch::JobDefinition.
	AWS_Batch_JobDefinition__Type = "AWS::Batch::JobDefinition"
)

var (
	// AWS_Batch_JobDefinition__PropertiesMap reports all the CloudFormation properties for AWS::Batch::JobDefinition.
	AWS_Batch_JobDefinition__PropertiesMap = struct {
		ContainerProperties  string
		EcsProperties        string
		EksProperties        string
		JobDefinitionName    string
		NodeProperties       string
		Parameters           string
		PlatformCapabilities string
		PropagateTags        string
		RetryStrategy        string
		SchedulingPriority   string
		Tags                 string
		Timeout              string
		Type                 string
	}{
		ContainerProperties:  "ContainerProperties",
		EcsProperties:        "EcsProperties",
		EksProperties:        "EksProperties",
		JobDefinitionName:    "JobDefinitionName",
		NodeProperties:       "NodeProperties",
		Parameters:           "Parameters",
		PlatformCapabilities: "PlatformCapabilities",
		PropagateTags:        "PropagateTags",
		RetryStrategy:        "RetryStrategy",
		SchedulingPriority:   "SchedulingPriority",
		Tags:                 "Tags",
		Timeout:              "Timeout",
		Type:                 "Type",
	}

	// AWS_Batch_JobDefinition__PropertiesSlice reports all the CloudFormation properties for AWS::Batch::JobDefinition.
	AWS_Batch_JobDefinition__PropertiesSlice = []string{
		AWS_Batch_JobDefinition__PropertiesMap.ContainerProperties,
		AWS_Batch_JobDefinition__PropertiesMap.EcsProperties,
		AWS_Batch_JobDefinition__PropertiesMap.EksProperties,
		AWS_Batch_JobDefinition__PropertiesMap.JobDefinitionName,
		AWS_Batch_JobDefinition__PropertiesMap.NodeProperties,
		AWS_Batch_JobDefinition__PropertiesMap.Parameters,
		AWS_Batch_JobDefinition__PropertiesMap.PlatformCapabilities,
		AWS_Batch_JobDefinition__PropertiesMap.PropagateTags,
		AWS_Batch_JobDefinition__PropertiesMap.RetryStrategy,
		AWS_Batch_JobDefinition__PropertiesMap.SchedulingPriority,
		AWS_Batch_JobDefinition__PropertiesMap.Tags,
		AWS_Batch_JobDefinition__PropertiesMap.Timeout,
		AWS_Batch_JobDefinition__PropertiesMap.Type,
	}
)

// AWS_Batch_JobDefinition is a binding for AWS::Batch::JobDefinition.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html
type AWS_Batch_JobDefinition struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ContainerProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-containerproperties
	ContainerProperties cfz.Expression[AWS_Batch_JobDefinition_ContainerProperties] `json:"ContainerProperties,omitempty"`

	// EcsProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-ecsproperties
	EcsProperties cfz.Expression[AWS_Batch_JobDefinition_EcsProperties] `json:"EcsProperties,omitempty"`

	// EksProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-eksproperties
	EksProperties cfz.Expression[AWS_Batch_JobDefinition_EksProperties] `json:"EksProperties,omitempty"`

	// JobDefinitionName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-jobdefinitionname
	JobDefinitionName cfz.Expression[string] `json:"JobDefinitionName,omitempty"`

	// NodeProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-nodeproperties
	NodeProperties cfz.Expression[AWS_Batch_JobDefinition_NodeProperties] `json:"NodeProperties,omitempty"`

	// Parameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-parameters
	Parameters cfz.Expression[json.RawMessage] `json:"Parameters,omitempty"`

	// PlatformCapabilities is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-platformcapabilities
	PlatformCapabilities cfz.ExpressionSlice[string] `json:"PlatformCapabilities,omitempty"`

	// PropagateTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-propagatetags
	PropagateTags cfz.Expression[bool] `json:"PropagateTags,omitempty"`

	// RetryStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-retrystrategy
	RetryStrategy cfz.Expression[AWS_Batch_JobDefinition_RetryStrategy] `json:"RetryStrategy,omitempty"`

	// SchedulingPriority is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-schedulingpriority
	SchedulingPriority cfz.Expression[int32] `json:"SchedulingPriority,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-tags
	Tags cfz.Expression[json.RawMessage] `json:"Tags,omitempty"`

	// Timeout is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-timeout
	Timeout cfz.Expression[AWS_Batch_JobDefinition_Timeout] `json:"Timeout,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-jobdefinition.html#cfn-batch-jobdefinition-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_Batch_JobDefinition initializes a new *AWS_Batch_JobDefinition.
func New__AWS_Batch_JobDefinition(logicalName string) *AWS_Batch_JobDefinition {
	return &AWS_Batch_JobDefinition{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Batch_JobDefinition) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Batch_JobDefinition) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Batch_JobDefinition) GetType() string {
	return AWS_Batch_JobDefinition__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Batch_JobDefinition) Set__LogicalName(v string) *AWS_Batch_JobDefinition {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Batch_JobDefinition) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Batch_JobDefinition {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Batch_JobDefinition) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Batch_JobDefinition {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Batch_JobDefinition) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Batch_JobDefinition {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Batch_JobDefinition) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Batch_JobDefinition {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Batch_JobDefinition) Set__RequestedOutputs(v []cfz.Output) *AWS_Batch_JobDefinition {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Batch_JobDefinition) Add__RequestedOutputs(v ...cfz.Output) *AWS_Batch_JobDefinition {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ContainerProperties updates property "ContainerProperties".
func (t *AWS_Batch_JobDefinition) Set__ContainerProperties(v cfz.Expression[AWS_Batch_JobDefinition_ContainerProperties]) *AWS_Batch_JobDefinition {
	t.ContainerProperties = v
	return t
}

// SetV__ContainerProperties updates property "ContainerProperties".
func (t *AWS_Batch_JobDefinition) SetV__ContainerProperties(v AWS_Batch_JobDefinition_ContainerProperties) *AWS_Batch_JobDefinition {
	t.ContainerProperties = cfz.V(v)
	return t
}

// Set__EcsProperties updates property "EcsProperties".
func (t *AWS_Batch_JobDefinition) Set__EcsProperties(v cfz.Expression[AWS_Batch_JobDefinition_EcsProperties]) *AWS_Batch_JobDefinition {
	t.EcsProperties = v
	return t
}

// SetV__EcsProperties updates property "EcsProperties".
func (t *AWS_Batch_JobDefinition) SetV__EcsProperties(v AWS_Batch_JobDefinition_EcsProperties) *AWS_Batch_JobDefinition {
	t.EcsProperties = cfz.V(v)
	return t
}

// Set__EksProperties updates property "EksProperties".
func (t *AWS_Batch_JobDefinition) Set__EksProperties(v cfz.Expression[AWS_Batch_JobDefinition_EksProperties]) *AWS_Batch_JobDefinition {
	t.EksProperties = v
	return t
}

// SetV__EksProperties updates property "EksProperties".
func (t *AWS_Batch_JobDefinition) SetV__EksProperties(v AWS_Batch_JobDefinition_EksProperties) *AWS_Batch_JobDefinition {
	t.EksProperties = cfz.V(v)
	return t
}

// Set__JobDefinitionName updates property "JobDefinitionName".
func (t *AWS_Batch_JobDefinition) Set__JobDefinitionName(v cfz.Expression[string]) *AWS_Batch_JobDefinition {
	t.JobDefinitionName = v
	return t
}

// SetV__JobDefinitionName updates property "JobDefinitionName".
func (t *AWS_Batch_JobDefinition) SetV__JobDefinitionName(v string) *AWS_Batch_JobDefinition {
	t.JobDefinitionName = cfz.V(v)
	return t
}

// Set__NodeProperties updates property "NodeProperties".
func (t *AWS_Batch_JobDefinition) Set__NodeProperties(v cfz.Expression[AWS_Batch_JobDefinition_NodeProperties]) *AWS_Batch_JobDefinition {
	t.NodeProperties = v
	return t
}

// SetV__NodeProperties updates property "NodeProperties".
func (t *AWS_Batch_JobDefinition) SetV__NodeProperties(v AWS_Batch_JobDefinition_NodeProperties) *AWS_Batch_JobDefinition {
	t.NodeProperties = cfz.V(v)
	return t
}

// Set__Parameters updates property "Parameters".
func (t *AWS_Batch_JobDefinition) Set__Parameters(v cfz.Expression[json.RawMessage]) *AWS_Batch_JobDefinition {
	t.Parameters = v
	return t
}

// SetV__Parameters updates property "Parameters".
func (t *AWS_Batch_JobDefinition) SetV__Parameters(v json.RawMessage) *AWS_Batch_JobDefinition {
	t.Parameters = cfz.V(v)
	return t
}

// Set__PlatformCapabilities updates property "PlatformCapabilities".
func (t *AWS_Batch_JobDefinition) Set__PlatformCapabilities(v cfz.ExpressionSlice[string]) *AWS_Batch_JobDefinition {
	t.PlatformCapabilities = v
	return t
}

// SetS__PlatformCapabilities updates property "PlatformCapabilities".
func (t *AWS_Batch_JobDefinition) SetS__PlatformCapabilities(v ...cfz.Expression[string]) *AWS_Batch_JobDefinition {
	t.PlatformCapabilities = cfz.S(v...)
	return t
}

// SetSV__PlatformCapabilities updates property "PlatformCapabilities".
func (t *AWS_Batch_JobDefinition) SetSV__PlatformCapabilities(v ...string) *AWS_Batch_JobDefinition {
	t.PlatformCapabilities = cfz.SV(v...)
	return t
}

// Set__PropagateTags updates property "PropagateTags".
func (t *AWS_Batch_JobDefinition) Set__PropagateTags(v cfz.Expression[bool]) *AWS_Batch_JobDefinition {
	t.PropagateTags = v
	return t
}

// SetV__PropagateTags updates property "PropagateTags".
func (t *AWS_Batch_JobDefinition) SetV__PropagateTags(v bool) *AWS_Batch_JobDefinition {
	t.PropagateTags = cfz.V(v)
	return t
}

// Set__RetryStrategy updates property "RetryStrategy".
func (t *AWS_Batch_JobDefinition) Set__RetryStrategy(v cfz.Expression[AWS_Batch_JobDefinition_RetryStrategy]) *AWS_Batch_JobDefinition {
	t.RetryStrategy = v
	return t
}

// SetV__RetryStrategy updates property "RetryStrategy".
func (t *AWS_Batch_JobDefinition) SetV__RetryStrategy(v AWS_Batch_JobDefinition_RetryStrategy) *AWS_Batch_JobDefinition {
	t.RetryStrategy = cfz.V(v)
	return t
}

// Set__SchedulingPriority updates property "SchedulingPriority".
func (t *AWS_Batch_JobDefinition) Set__SchedulingPriority(v cfz.Expression[int32]) *AWS_Batch_JobDefinition {
	t.SchedulingPriority = v
	return t
}

// SetV__SchedulingPriority updates property "SchedulingPriority".
func (t *AWS_Batch_JobDefinition) SetV__SchedulingPriority(v int32) *AWS_Batch_JobDefinition {
	t.SchedulingPriority = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Batch_JobDefinition) Set__Tags(v cfz.Expression[json.RawMessage]) *AWS_Batch_JobDefinition {
	t.Tags = v
	return t
}

// SetV__Tags updates property "Tags".
func (t *AWS_Batch_JobDefinition) SetV__Tags(v json.RawMessage) *AWS_Batch_JobDefinition {
	t.Tags = cfz.V(v)
	return t
}

// Set__Timeout updates property "Timeout".
func (t *AWS_Batch_JobDefinition) Set__Timeout(v cfz.Expression[AWS_Batch_JobDefinition_Timeout]) *AWS_Batch_JobDefinition {
	t.Timeout = v
	return t
}

// SetV__Timeout updates property "Timeout".
func (t *AWS_Batch_JobDefinition) SetV__Timeout(v AWS_Batch_JobDefinition_Timeout) *AWS_Batch_JobDefinition {
	t.Timeout = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_Batch_JobDefinition) Set__Type(v cfz.Expression[string]) *AWS_Batch_JobDefinition {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_Batch_JobDefinition) SetV__Type(v string) *AWS_Batch_JobDefinition {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Batch_JobDefinition) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Batch_JobDefinition) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Batch_JobDefinition) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Batch_JobDefinition

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Batch_JobDefinition) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
