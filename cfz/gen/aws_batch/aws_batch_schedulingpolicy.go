// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_batch

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Batch_SchedulingPolicy)(nil)
	_ cfz.Resource                   = (*AWS_Batch_SchedulingPolicy)(nil)
)

const (
	// AWS_Batch_SchedulingPolicy__Type is the CloudFormation type for AWS::Batch::SchedulingPolicy.
	AWS_Batch_SchedulingPolicy__Type = "AWS::Batch::SchedulingPolicy"
)

var (
	// AWS_Batch_SchedulingPolicy__AttributesMap reports all the CloudFormation attributes for AWS::Batch::SchedulingPolicy.
	AWS_Batch_SchedulingPolicy__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_Batch_SchedulingPolicy__AttributesSlice reports all the CloudFormation attributes for AWS::Batch::SchedulingPolicy.
	AWS_Batch_SchedulingPolicy__AttributesSlice = []string{
		AWS_Batch_SchedulingPolicy__AttributesMap.Arn,
	}
)

var (
	// AWS_Batch_SchedulingPolicy__PropertiesMap reports all the CloudFormation properties for AWS::Batch::SchedulingPolicy.
	AWS_Batch_SchedulingPolicy__PropertiesMap = struct {
		FairsharePolicy string
		Name            string
		Tags            string
	}{
		FairsharePolicy: "FairsharePolicy",
		Name:            "Name",
		Tags:            "Tags",
	}

	// AWS_Batch_SchedulingPolicy__PropertiesSlice reports all the CloudFormation properties for AWS::Batch::SchedulingPolicy.
	AWS_Batch_SchedulingPolicy__PropertiesSlice = []string{
		AWS_Batch_SchedulingPolicy__PropertiesMap.FairsharePolicy,
		AWS_Batch_SchedulingPolicy__PropertiesMap.Name,
		AWS_Batch_SchedulingPolicy__PropertiesMap.Tags,
	}
)

// AWS_Batch_SchedulingPolicy is a binding for AWS::Batch::SchedulingPolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html
type AWS_Batch_SchedulingPolicy struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// FairsharePolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html#cfn-batch-schedulingpolicy-fairsharepolicy
	FairsharePolicy cfz.Expression[AWS_Batch_SchedulingPolicy_FairsharePolicy] `json:"FairsharePolicy,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html#cfn-batch-schedulingpolicy-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-schedulingpolicy.html#cfn-batch-schedulingpolicy-tags
	Tags cfz.ExpressionMap[string] `json:"Tags,omitempty"`
}

// New__AWS_Batch_SchedulingPolicy initializes a new *AWS_Batch_SchedulingPolicy.
func New__AWS_Batch_SchedulingPolicy(logicalName string) *AWS_Batch_SchedulingPolicy {
	return &AWS_Batch_SchedulingPolicy{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Batch_SchedulingPolicy) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Batch_SchedulingPolicy) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Batch_SchedulingPolicy) GetType() string {
	return AWS_Batch_SchedulingPolicy__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Batch_SchedulingPolicy) Set__LogicalName(v string) *AWS_Batch_SchedulingPolicy {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Batch_SchedulingPolicy) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Batch_SchedulingPolicy {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Batch_SchedulingPolicy) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Batch_SchedulingPolicy {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Batch_SchedulingPolicy) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Batch_SchedulingPolicy {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Batch_SchedulingPolicy) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Batch_SchedulingPolicy {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Batch_SchedulingPolicy) Set__RequestedOutputs(v []cfz.Output) *AWS_Batch_SchedulingPolicy {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Batch_SchedulingPolicy) Add__RequestedOutputs(v ...cfz.Output) *AWS_Batch_SchedulingPolicy {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__FairsharePolicy updates property "FairsharePolicy".
func (t *AWS_Batch_SchedulingPolicy) Set__FairsharePolicy(v cfz.Expression[AWS_Batch_SchedulingPolicy_FairsharePolicy]) *AWS_Batch_SchedulingPolicy {
	t.FairsharePolicy = v
	return t
}

// SetV__FairsharePolicy updates property "FairsharePolicy".
func (t *AWS_Batch_SchedulingPolicy) SetV__FairsharePolicy(v AWS_Batch_SchedulingPolicy_FairsharePolicy) *AWS_Batch_SchedulingPolicy {
	t.FairsharePolicy = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Batch_SchedulingPolicy) Set__Name(v cfz.Expression[string]) *AWS_Batch_SchedulingPolicy {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Batch_SchedulingPolicy) SetV__Name(v string) *AWS_Batch_SchedulingPolicy {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Batch_SchedulingPolicy) Set__Tags(v cfz.ExpressionMap[string]) *AWS_Batch_SchedulingPolicy {
	t.Tags = v
	return t
}

// SetM__Tags updates property "Tags".
func (t *AWS_Batch_SchedulingPolicy) SetM__Tags(v ...map[string]cfz.Expression[string]) *AWS_Batch_SchedulingPolicy {
	t.Tags = cfz.M(v...)
	return t
}

// SetMV__Tags updates property "Tags".
func (t *AWS_Batch_SchedulingPolicy) SetMV__Tags(v ...map[string]string) *AWS_Batch_SchedulingPolicy {
	t.Tags = cfz.MV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Batch_SchedulingPolicy) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Batch_SchedulingPolicy) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Batch_SchedulingPolicy__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Batch_SchedulingPolicy) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Batch_SchedulingPolicy) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Batch_SchedulingPolicy) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Batch_SchedulingPolicy

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Batch_SchedulingPolicy) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
