// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_resourcegroups

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ResourceGroups_Group)(nil)
	_ cfz.Resource                   = (*AWS_ResourceGroups_Group)(nil)
)

const (
	// AWS_ResourceGroups_Group__Type is the CloudFormation type for AWS::ResourceGroups::Group.
	AWS_ResourceGroups_Group__Type = "AWS::ResourceGroups::Group"
)

var (
	// AWS_ResourceGroups_Group__AttributesMap reports all the CloudFormation attributes for AWS::ResourceGroups::Group.
	AWS_ResourceGroups_Group__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_ResourceGroups_Group__AttributesSlice reports all the CloudFormation attributes for AWS::ResourceGroups::Group.
	AWS_ResourceGroups_Group__AttributesSlice = []string{
		AWS_ResourceGroups_Group__AttributesMap.Arn,
	}
)

var (
	// AWS_ResourceGroups_Group__PropertiesMap reports all the CloudFormation properties for AWS::ResourceGroups::Group.
	AWS_ResourceGroups_Group__PropertiesMap = struct {
		Configuration string
		Description   string
		Name          string
		ResourceQuery string
		Resources     string
		Tags          string
	}{
		Configuration: "Configuration",
		Description:   "Description",
		Name:          "Name",
		ResourceQuery: "ResourceQuery",
		Resources:     "Resources",
		Tags:          "Tags",
	}

	// AWS_ResourceGroups_Group__PropertiesSlice reports all the CloudFormation properties for AWS::ResourceGroups::Group.
	AWS_ResourceGroups_Group__PropertiesSlice = []string{
		AWS_ResourceGroups_Group__PropertiesMap.Configuration,
		AWS_ResourceGroups_Group__PropertiesMap.Description,
		AWS_ResourceGroups_Group__PropertiesMap.Name,
		AWS_ResourceGroups_Group__PropertiesMap.ResourceQuery,
		AWS_ResourceGroups_Group__PropertiesMap.Resources,
		AWS_ResourceGroups_Group__PropertiesMap.Tags,
	}
)

// AWS_ResourceGroups_Group is a binding for AWS::ResourceGroups::Group.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html
type AWS_ResourceGroups_Group struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Configuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-configuration
	Configuration cfz.ExpressionSlice[AWS_ResourceGroups_Group_ConfigurationItem] `json:"Configuration,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// ResourceQuery is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-resourcequery
	ResourceQuery cfz.Expression[AWS_ResourceGroups_Group_ResourceQuery] `json:"ResourceQuery,omitempty"`

	// Resources is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-resources
	Resources cfz.ExpressionSlice[string] `json:"Resources,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-resourcegroups-group.html#cfn-resourcegroups-group-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_ResourceGroups_Group initializes a new *AWS_ResourceGroups_Group.
func New__AWS_ResourceGroups_Group(logicalName string) *AWS_ResourceGroups_Group {
	return &AWS_ResourceGroups_Group{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ResourceGroups_Group) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ResourceGroups_Group) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ResourceGroups_Group) GetType() string {
	return AWS_ResourceGroups_Group__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ResourceGroups_Group) Set__LogicalName(v string) *AWS_ResourceGroups_Group {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ResourceGroups_Group) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ResourceGroups_Group {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ResourceGroups_Group) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ResourceGroups_Group {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ResourceGroups_Group) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ResourceGroups_Group {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ResourceGroups_Group) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ResourceGroups_Group {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ResourceGroups_Group) Set__RequestedOutputs(v []cfz.Output) *AWS_ResourceGroups_Group {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ResourceGroups_Group) Add__RequestedOutputs(v ...cfz.Output) *AWS_ResourceGroups_Group {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Configuration updates property "Configuration".
func (t *AWS_ResourceGroups_Group) Set__Configuration(v cfz.ExpressionSlice[AWS_ResourceGroups_Group_ConfigurationItem]) *AWS_ResourceGroups_Group {
	t.Configuration = v
	return t
}

// SetS__Configuration updates property "Configuration".
func (t *AWS_ResourceGroups_Group) SetS__Configuration(v ...cfz.Expression[AWS_ResourceGroups_Group_ConfigurationItem]) *AWS_ResourceGroups_Group {
	t.Configuration = cfz.S(v...)
	return t
}

// SetSV__Configuration updates property "Configuration".
func (t *AWS_ResourceGroups_Group) SetSV__Configuration(v ...AWS_ResourceGroups_Group_ConfigurationItem) *AWS_ResourceGroups_Group {
	t.Configuration = cfz.SV(v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_ResourceGroups_Group) Set__Description(v cfz.Expression[string]) *AWS_ResourceGroups_Group {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_ResourceGroups_Group) SetV__Description(v string) *AWS_ResourceGroups_Group {
	t.Description = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_ResourceGroups_Group) Set__Name(v cfz.Expression[string]) *AWS_ResourceGroups_Group {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_ResourceGroups_Group) SetV__Name(v string) *AWS_ResourceGroups_Group {
	t.Name = cfz.V(v)
	return t
}

// Set__ResourceQuery updates property "ResourceQuery".
func (t *AWS_ResourceGroups_Group) Set__ResourceQuery(v cfz.Expression[AWS_ResourceGroups_Group_ResourceQuery]) *AWS_ResourceGroups_Group {
	t.ResourceQuery = v
	return t
}

// SetV__ResourceQuery updates property "ResourceQuery".
func (t *AWS_ResourceGroups_Group) SetV__ResourceQuery(v AWS_ResourceGroups_Group_ResourceQuery) *AWS_ResourceGroups_Group {
	t.ResourceQuery = cfz.V(v)
	return t
}

// Set__Resources updates property "Resources".
func (t *AWS_ResourceGroups_Group) Set__Resources(v cfz.ExpressionSlice[string]) *AWS_ResourceGroups_Group {
	t.Resources = v
	return t
}

// SetS__Resources updates property "Resources".
func (t *AWS_ResourceGroups_Group) SetS__Resources(v ...cfz.Expression[string]) *AWS_ResourceGroups_Group {
	t.Resources = cfz.S(v...)
	return t
}

// SetSV__Resources updates property "Resources".
func (t *AWS_ResourceGroups_Group) SetSV__Resources(v ...string) *AWS_ResourceGroups_Group {
	t.Resources = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ResourceGroups_Group) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ResourceGroups_Group {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ResourceGroups_Group) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ResourceGroups_Group {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ResourceGroups_Group) SetSV__Tags(v ...cfz.Tag) *AWS_ResourceGroups_Group {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ResourceGroups_Group) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_ResourceGroups_Group) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ResourceGroups_Group__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ResourceGroups_Group) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_ResourceGroups_Group) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ResourceGroups_Group) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ResourceGroups_Group

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ResourceGroups_Group) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
