// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_elasticloadbalancingv2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ElasticLoadBalancingV2_TrustStore)(nil)
	_ cfz.Resource                   = (*AWS_ElasticLoadBalancingV2_TrustStore)(nil)
)

const (
	// AWS_ElasticLoadBalancingV2_TrustStore__Type is the CloudFormation type for AWS::ElasticLoadBalancingV2::TrustStore.
	AWS_ElasticLoadBalancingV2_TrustStore__Type = "AWS::ElasticLoadBalancingV2::TrustStore"
)

var (
	// AWS_ElasticLoadBalancingV2_TrustStore__AttributesMap reports all the CloudFormation attributes for AWS::ElasticLoadBalancingV2::TrustStore.
	AWS_ElasticLoadBalancingV2_TrustStore__AttributesMap = struct {
		NumberOfCaCertificates string
		Status                 string
		TrustStoreArn          string
	}{
		NumberOfCaCertificates: "NumberOfCaCertificates",
		Status:                 "Status",
		TrustStoreArn:          "TrustStoreArn",
	}

	// AWS_ElasticLoadBalancingV2_TrustStore__AttributesSlice reports all the CloudFormation attributes for AWS::ElasticLoadBalancingV2::TrustStore.
	AWS_ElasticLoadBalancingV2_TrustStore__AttributesSlice = []string{
		AWS_ElasticLoadBalancingV2_TrustStore__AttributesMap.NumberOfCaCertificates,
		AWS_ElasticLoadBalancingV2_TrustStore__AttributesMap.Status,
		AWS_ElasticLoadBalancingV2_TrustStore__AttributesMap.TrustStoreArn,
	}
)

var (
	// AWS_ElasticLoadBalancingV2_TrustStore__PropertiesMap reports all the CloudFormation properties for AWS::ElasticLoadBalancingV2::TrustStore.
	AWS_ElasticLoadBalancingV2_TrustStore__PropertiesMap = struct {
		CaCertificatesBundleS3Bucket        string
		CaCertificatesBundleS3Key           string
		CaCertificatesBundleS3ObjectVersion string
		Name                                string
		Tags                                string
	}{
		CaCertificatesBundleS3Bucket:        "CaCertificatesBundleS3Bucket",
		CaCertificatesBundleS3Key:           "CaCertificatesBundleS3Key",
		CaCertificatesBundleS3ObjectVersion: "CaCertificatesBundleS3ObjectVersion",
		Name:                                "Name",
		Tags:                                "Tags",
	}

	// AWS_ElasticLoadBalancingV2_TrustStore__PropertiesSlice reports all the CloudFormation properties for AWS::ElasticLoadBalancingV2::TrustStore.
	AWS_ElasticLoadBalancingV2_TrustStore__PropertiesSlice = []string{
		AWS_ElasticLoadBalancingV2_TrustStore__PropertiesMap.CaCertificatesBundleS3Bucket,
		AWS_ElasticLoadBalancingV2_TrustStore__PropertiesMap.CaCertificatesBundleS3Key,
		AWS_ElasticLoadBalancingV2_TrustStore__PropertiesMap.CaCertificatesBundleS3ObjectVersion,
		AWS_ElasticLoadBalancingV2_TrustStore__PropertiesMap.Name,
		AWS_ElasticLoadBalancingV2_TrustStore__PropertiesMap.Tags,
	}
)

// AWS_ElasticLoadBalancingV2_TrustStore is a binding for AWS::ElasticLoadBalancingV2::TrustStore.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html
type AWS_ElasticLoadBalancingV2_TrustStore struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CaCertificatesBundleS3Bucket is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-cacertificatesbundles3bucket
	CaCertificatesBundleS3Bucket cfz.Expression[string] `json:"CaCertificatesBundleS3Bucket,omitempty"`

	// CaCertificatesBundleS3Key is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-cacertificatesbundles3key
	CaCertificatesBundleS3Key cfz.Expression[string] `json:"CaCertificatesBundleS3Key,omitempty"`

	// CaCertificatesBundleS3ObjectVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-cacertificatesbundles3objectversion
	CaCertificatesBundleS3ObjectVersion cfz.Expression[string] `json:"CaCertificatesBundleS3ObjectVersion,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-truststore.html#cfn-elasticloadbalancingv2-truststore-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_ElasticLoadBalancingV2_TrustStore initializes a new *AWS_ElasticLoadBalancingV2_TrustStore.
func New__AWS_ElasticLoadBalancingV2_TrustStore(logicalName string) *AWS_ElasticLoadBalancingV2_TrustStore {
	return &AWS_ElasticLoadBalancingV2_TrustStore{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ElasticLoadBalancingV2_TrustStore) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ElasticLoadBalancingV2_TrustStore) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ElasticLoadBalancingV2_TrustStore) GetType() string {
	return AWS_ElasticLoadBalancingV2_TrustStore__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__LogicalName(v string) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__RequestedOutputs(v []cfz.Output) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Add__RequestedOutputs(v ...cfz.Output) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CaCertificatesBundleS3Bucket updates property "CaCertificatesBundleS3Bucket".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__CaCertificatesBundleS3Bucket(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.CaCertificatesBundleS3Bucket = v
	return t
}

// SetV__CaCertificatesBundleS3Bucket updates property "CaCertificatesBundleS3Bucket".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) SetV__CaCertificatesBundleS3Bucket(v string) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.CaCertificatesBundleS3Bucket = cfz.V(v)
	return t
}

// Set__CaCertificatesBundleS3Key updates property "CaCertificatesBundleS3Key".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__CaCertificatesBundleS3Key(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.CaCertificatesBundleS3Key = v
	return t
}

// SetV__CaCertificatesBundleS3Key updates property "CaCertificatesBundleS3Key".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) SetV__CaCertificatesBundleS3Key(v string) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.CaCertificatesBundleS3Key = cfz.V(v)
	return t
}

// Set__CaCertificatesBundleS3ObjectVersion updates property "CaCertificatesBundleS3ObjectVersion".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__CaCertificatesBundleS3ObjectVersion(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.CaCertificatesBundleS3ObjectVersion = v
	return t
}

// SetV__CaCertificatesBundleS3ObjectVersion updates property "CaCertificatesBundleS3ObjectVersion".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) SetV__CaCertificatesBundleS3ObjectVersion(v string) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.CaCertificatesBundleS3ObjectVersion = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__Name(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) SetV__Name(v string) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ElasticLoadBalancingV2_TrustStore) SetSV__Tags(v ...cfz.Tag) *AWS_ElasticLoadBalancingV2_TrustStore {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ElasticLoadBalancingV2_TrustStore) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__NumberOfCaCertificates returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NumberOfCaCertificates
func (t *AWS_ElasticLoadBalancingV2_TrustStore) GetAtt__NumberOfCaCertificates() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_TrustStore__AttributesMap.NumberOfCaCertificates))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_ElasticLoadBalancingV2_TrustStore) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_TrustStore__AttributesMap.Status))
}

// GetAtt__TrustStoreArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: TrustStoreArn
func (t *AWS_ElasticLoadBalancingV2_TrustStore) GetAtt__TrustStoreArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_TrustStore__AttributesMap.TrustStoreArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ElasticLoadBalancingV2_TrustStore) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NumberOfCaCertificates returns a conventionally configured output for an attribute of this resource.
// Attribute: NumberOfCaCertificates
func (t *AWS_ElasticLoadBalancingV2_TrustStore) GetConventionalOutputAtt__NumberOfCaCertificates(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNumberOfCaCertificates", t.GetAtt__NumberOfCaCertificates())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_ElasticLoadBalancingV2_TrustStore) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__TrustStoreArn returns a conventionally configured output for an attribute of this resource.
// Attribute: TrustStoreArn
func (t *AWS_ElasticLoadBalancingV2_TrustStore) GetConventionalOutputAtt__TrustStoreArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTrustStoreArn", t.GetAtt__TrustStoreArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ElasticLoadBalancingV2_TrustStore) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ElasticLoadBalancingV2_TrustStore

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ElasticLoadBalancingV2_TrustStore) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
