// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_elasticloadbalancingv2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ElasticLoadBalancingV2_ListenerRule)(nil)
	_ cfz.Resource                   = (*AWS_ElasticLoadBalancingV2_ListenerRule)(nil)
)

const (
	// AWS_ElasticLoadBalancingV2_ListenerRule__Type is the CloudFormation type for AWS::ElasticLoadBalancingV2::ListenerRule.
	AWS_ElasticLoadBalancingV2_ListenerRule__Type = "AWS::ElasticLoadBalancingV2::ListenerRule"
)

var (
	// AWS_ElasticLoadBalancingV2_ListenerRule__AttributesMap reports all the CloudFormation attributes for AWS::ElasticLoadBalancingV2::ListenerRule.
	AWS_ElasticLoadBalancingV2_ListenerRule__AttributesMap = struct {
		IsDefault string
		RuleArn   string
	}{
		IsDefault: "IsDefault",
		RuleArn:   "RuleArn",
	}

	// AWS_ElasticLoadBalancingV2_ListenerRule__AttributesSlice reports all the CloudFormation attributes for AWS::ElasticLoadBalancingV2::ListenerRule.
	AWS_ElasticLoadBalancingV2_ListenerRule__AttributesSlice = []string{
		AWS_ElasticLoadBalancingV2_ListenerRule__AttributesMap.IsDefault,
		AWS_ElasticLoadBalancingV2_ListenerRule__AttributesMap.RuleArn,
	}
)

var (
	// AWS_ElasticLoadBalancingV2_ListenerRule__PropertiesMap reports all the CloudFormation properties for AWS::ElasticLoadBalancingV2::ListenerRule.
	AWS_ElasticLoadBalancingV2_ListenerRule__PropertiesMap = struct {
		Actions     string
		Conditions  string
		ListenerArn string
		Priority    string
	}{
		Actions:     "Actions",
		Conditions:  "Conditions",
		ListenerArn: "ListenerArn",
		Priority:    "Priority",
	}

	// AWS_ElasticLoadBalancingV2_ListenerRule__PropertiesSlice reports all the CloudFormation properties for AWS::ElasticLoadBalancingV2::ListenerRule.
	AWS_ElasticLoadBalancingV2_ListenerRule__PropertiesSlice = []string{
		AWS_ElasticLoadBalancingV2_ListenerRule__PropertiesMap.Actions,
		AWS_ElasticLoadBalancingV2_ListenerRule__PropertiesMap.Conditions,
		AWS_ElasticLoadBalancingV2_ListenerRule__PropertiesMap.ListenerArn,
		AWS_ElasticLoadBalancingV2_ListenerRule__PropertiesMap.Priority,
	}
)

// AWS_ElasticLoadBalancingV2_ListenerRule is a binding for AWS::ElasticLoadBalancingV2::ListenerRule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html
type AWS_ElasticLoadBalancingV2_ListenerRule struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Actions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-actions
	Actions cfz.ExpressionSlice[AWS_ElasticLoadBalancingV2_ListenerRule_Action] `json:"Actions,omitempty"`

	// Conditions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-conditions
	Conditions cfz.ExpressionSlice[AWS_ElasticLoadBalancingV2_ListenerRule_RuleCondition] `json:"Conditions,omitempty"`

	// ListenerArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-listenerarn
	ListenerArn cfz.Expression[string] `json:"ListenerArn,omitempty"`

	// Priority is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html#cfn-elasticloadbalancingv2-listenerrule-priority
	Priority cfz.Expression[int32] `json:"Priority,omitempty"`
}

// New__AWS_ElasticLoadBalancingV2_ListenerRule initializes a new *AWS_ElasticLoadBalancingV2_ListenerRule.
func New__AWS_ElasticLoadBalancingV2_ListenerRule(logicalName string) *AWS_ElasticLoadBalancingV2_ListenerRule {
	return &AWS_ElasticLoadBalancingV2_ListenerRule{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ElasticLoadBalancingV2_ListenerRule) GetType() string {
	return AWS_ElasticLoadBalancingV2_ListenerRule__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Set__LogicalName(v string) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Set__RequestedOutputs(v []cfz.Output) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Add__RequestedOutputs(v ...cfz.Output) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Actions updates property "Actions".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Set__Actions(v cfz.ExpressionSlice[AWS_ElasticLoadBalancingV2_ListenerRule_Action]) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.Actions = v
	return t
}

// SetS__Actions updates property "Actions".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) SetS__Actions(v ...cfz.Expression[AWS_ElasticLoadBalancingV2_ListenerRule_Action]) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.Actions = cfz.S(v...)
	return t
}

// SetSV__Actions updates property "Actions".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) SetSV__Actions(v ...AWS_ElasticLoadBalancingV2_ListenerRule_Action) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.Actions = cfz.SV(v...)
	return t
}

// Set__Conditions updates property "Conditions".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Set__Conditions(v cfz.ExpressionSlice[AWS_ElasticLoadBalancingV2_ListenerRule_RuleCondition]) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.Conditions = v
	return t
}

// SetS__Conditions updates property "Conditions".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) SetS__Conditions(v ...cfz.Expression[AWS_ElasticLoadBalancingV2_ListenerRule_RuleCondition]) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.Conditions = cfz.S(v...)
	return t
}

// SetSV__Conditions updates property "Conditions".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) SetSV__Conditions(v ...AWS_ElasticLoadBalancingV2_ListenerRule_RuleCondition) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.Conditions = cfz.SV(v...)
	return t
}

// Set__ListenerArn updates property "ListenerArn".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Set__ListenerArn(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.ListenerArn = v
	return t
}

// SetV__ListenerArn updates property "ListenerArn".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) SetV__ListenerArn(v string) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.ListenerArn = cfz.V(v)
	return t
}

// Set__Priority updates property "Priority".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Set__Priority(v cfz.Expression[int32]) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.Priority = v
	return t
}

// SetV__Priority updates property "Priority".
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) SetV__Priority(v int32) *AWS_ElasticLoadBalancingV2_ListenerRule {
	t.Priority = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__IsDefault returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IsDefault
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) GetAtt__IsDefault() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_ListenerRule__AttributesMap.IsDefault))
}

// GetAtt__RuleArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RuleArn
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) GetAtt__RuleArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_ListenerRule__AttributesMap.RuleArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IsDefault returns a conventionally configured output for an attribute of this resource.
// Attribute: IsDefault
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) GetConventionalOutputAtt__IsDefault(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIsDefault", t.GetAtt__IsDefault())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RuleArn returns a conventionally configured output for an attribute of this resource.
// Attribute: RuleArn
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) GetConventionalOutputAtt__RuleArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRuleArn", t.GetAtt__RuleArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ElasticLoadBalancingV2_ListenerRule) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ElasticLoadBalancingV2_ListenerRule

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ElasticLoadBalancingV2_ListenerRule) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
