// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_elasticloadbalancingv2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_ElasticLoadBalancingV2_LoadBalancer)(nil)
	_ cfz.Resource                   = (*AWS_ElasticLoadBalancingV2_LoadBalancer)(nil)
)

const (
	// AWS_ElasticLoadBalancingV2_LoadBalancer__Type is the CloudFormation type for AWS::ElasticLoadBalancingV2::LoadBalancer.
	AWS_ElasticLoadBalancingV2_LoadBalancer__Type = "AWS::ElasticLoadBalancingV2::LoadBalancer"
)

var (
	// AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap reports all the CloudFormation attributes for AWS::ElasticLoadBalancingV2::LoadBalancer.
	AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap = struct {
		CanonicalHostedZoneID string
		DNSName               string
		LoadBalancerArn       string
		LoadBalancerFullName  string
		LoadBalancerName      string
		SecurityGroups        string
	}{
		CanonicalHostedZoneID: "CanonicalHostedZoneID",
		DNSName:               "DNSName",
		LoadBalancerArn:       "LoadBalancerArn",
		LoadBalancerFullName:  "LoadBalancerFullName",
		LoadBalancerName:      "LoadBalancerName",
		SecurityGroups:        "SecurityGroups",
	}

	// AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesSlice reports all the CloudFormation attributes for AWS::ElasticLoadBalancingV2::LoadBalancer.
	AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesSlice = []string{
		AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.CanonicalHostedZoneID,
		AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.DNSName,
		AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.LoadBalancerArn,
		AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.LoadBalancerFullName,
		AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.LoadBalancerName,
		AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.SecurityGroups,
	}
)

var (
	// AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap reports all the CloudFormation properties for AWS::ElasticLoadBalancingV2::LoadBalancer.
	AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap = struct {
		EnablePrefixForIpv6SourceNat                         string
		EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic string
		IpAddressType                                        string
		LoadBalancerAttributes                               string
		MinimumLoadBalancerCapacity                          string
		Name                                                 string
		Scheme                                               string
		SecurityGroups                                       string
		SubnetMappings                                       string
		Subnets                                              string
		Tags                                                 string
		Type                                                 string
	}{
		EnablePrefixForIpv6SourceNat:                         "EnablePrefixForIpv6SourceNat",
		EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic: "EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic",
		IpAddressType:               "IpAddressType",
		LoadBalancerAttributes:      "LoadBalancerAttributes",
		MinimumLoadBalancerCapacity: "MinimumLoadBalancerCapacity",
		Name:                        "Name",
		Scheme:                      "Scheme",
		SecurityGroups:              "SecurityGroups",
		SubnetMappings:              "SubnetMappings",
		Subnets:                     "Subnets",
		Tags:                        "Tags",
		Type:                        "Type",
	}

	// AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesSlice reports all the CloudFormation properties for AWS::ElasticLoadBalancingV2::LoadBalancer.
	AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesSlice = []string{
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.EnablePrefixForIpv6SourceNat,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.IpAddressType,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.LoadBalancerAttributes,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.MinimumLoadBalancerCapacity,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.Name,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.Scheme,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.SecurityGroups,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.SubnetMappings,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.Subnets,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.Tags,
		AWS_ElasticLoadBalancingV2_LoadBalancer__PropertiesMap.Type,
	}
)

// AWS_ElasticLoadBalancingV2_LoadBalancer is a binding for AWS::ElasticLoadBalancingV2::LoadBalancer.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
type AWS_ElasticLoadBalancingV2_LoadBalancer struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// EnablePrefixForIpv6SourceNat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-enableprefixforipv6sourcenat
	EnablePrefixForIpv6SourceNat cfz.Expression[string] `json:"EnablePrefixForIpv6SourceNat,omitempty"`

	// EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-enforcesecuritygroupinboundrulesonprivatelinktraffic
	EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic cfz.Expression[string] `json:"EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic,omitempty"`

	// IpAddressType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-ipaddresstype
	IpAddressType cfz.Expression[string] `json:"IpAddressType,omitempty"`

	// LoadBalancerAttributes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-loadbalancerattributes
	LoadBalancerAttributes cfz.ExpressionSlice[AWS_ElasticLoadBalancingV2_LoadBalancer_LoadBalancerAttribute] `json:"LoadBalancerAttributes,omitempty"`

	// MinimumLoadBalancerCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-minimumloadbalancercapacity
	MinimumLoadBalancerCapacity cfz.Expression[AWS_ElasticLoadBalancingV2_LoadBalancer_MinimumLoadBalancerCapacity] `json:"MinimumLoadBalancerCapacity,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Scheme is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-scheme
	Scheme cfz.Expression[string] `json:"Scheme,omitempty"`

	// SecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-securitygroups
	SecurityGroups cfz.ExpressionSlice[string] `json:"SecurityGroups,omitempty"`

	// SubnetMappings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmappings
	SubnetMappings cfz.ExpressionSlice[AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping] `json:"SubnetMappings,omitempty"`

	// Subnets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-subnets
	Subnets cfz.ExpressionSlice[string] `json:"Subnets,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html#cfn-elasticloadbalancingv2-loadbalancer-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_ElasticLoadBalancingV2_LoadBalancer initializes a new *AWS_ElasticLoadBalancingV2_LoadBalancer.
func New__AWS_ElasticLoadBalancingV2_LoadBalancer(logicalName string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	return &AWS_ElasticLoadBalancingV2_LoadBalancer{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_ElasticLoadBalancingV2_LoadBalancer) GetType() string {
	return AWS_ElasticLoadBalancingV2_LoadBalancer__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__LogicalName(v string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__RequestedOutputs(v []cfz.Output) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Add__RequestedOutputs(v ...cfz.Output) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__EnablePrefixForIpv6SourceNat updates property "EnablePrefixForIpv6SourceNat".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__EnablePrefixForIpv6SourceNat(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.EnablePrefixForIpv6SourceNat = v
	return t
}

// SetV__EnablePrefixForIpv6SourceNat updates property "EnablePrefixForIpv6SourceNat".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetV__EnablePrefixForIpv6SourceNat(v string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.EnablePrefixForIpv6SourceNat = cfz.V(v)
	return t
}

// Set__EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic updates property "EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic = v
	return t
}

// SetV__EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic updates property "EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetV__EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic(v string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic = cfz.V(v)
	return t
}

// Set__IpAddressType updates property "IpAddressType".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__IpAddressType(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.IpAddressType = v
	return t
}

// SetV__IpAddressType updates property "IpAddressType".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetV__IpAddressType(v string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.IpAddressType = cfz.V(v)
	return t
}

// Set__LoadBalancerAttributes updates property "LoadBalancerAttributes".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__LoadBalancerAttributes(v cfz.ExpressionSlice[AWS_ElasticLoadBalancingV2_LoadBalancer_LoadBalancerAttribute]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.LoadBalancerAttributes = v
	return t
}

// SetS__LoadBalancerAttributes updates property "LoadBalancerAttributes".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetS__LoadBalancerAttributes(v ...cfz.Expression[AWS_ElasticLoadBalancingV2_LoadBalancer_LoadBalancerAttribute]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.LoadBalancerAttributes = cfz.S(v...)
	return t
}

// SetSV__LoadBalancerAttributes updates property "LoadBalancerAttributes".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetSV__LoadBalancerAttributes(v ...AWS_ElasticLoadBalancingV2_LoadBalancer_LoadBalancerAttribute) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.LoadBalancerAttributes = cfz.SV(v...)
	return t
}

// Set__MinimumLoadBalancerCapacity updates property "MinimumLoadBalancerCapacity".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__MinimumLoadBalancerCapacity(v cfz.Expression[AWS_ElasticLoadBalancingV2_LoadBalancer_MinimumLoadBalancerCapacity]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.MinimumLoadBalancerCapacity = v
	return t
}

// SetV__MinimumLoadBalancerCapacity updates property "MinimumLoadBalancerCapacity".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetV__MinimumLoadBalancerCapacity(v AWS_ElasticLoadBalancingV2_LoadBalancer_MinimumLoadBalancerCapacity) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.MinimumLoadBalancerCapacity = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__Name(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetV__Name(v string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Name = cfz.V(v)
	return t
}

// Set__Scheme updates property "Scheme".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__Scheme(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Scheme = v
	return t
}

// SetV__Scheme updates property "Scheme".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetV__Scheme(v string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Scheme = cfz.V(v)
	return t
}

// Set__SecurityGroups updates property "SecurityGroups".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__SecurityGroups(v cfz.ExpressionSlice[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.SecurityGroups = v
	return t
}

// SetS__SecurityGroups updates property "SecurityGroups".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetS__SecurityGroups(v ...cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.SecurityGroups = cfz.S(v...)
	return t
}

// SetSV__SecurityGroups updates property "SecurityGroups".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetSV__SecurityGroups(v ...string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.SecurityGroups = cfz.SV(v...)
	return t
}

// Set__SubnetMappings updates property "SubnetMappings".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__SubnetMappings(v cfz.ExpressionSlice[AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.SubnetMappings = v
	return t
}

// SetS__SubnetMappings updates property "SubnetMappings".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetS__SubnetMappings(v ...cfz.Expression[AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.SubnetMappings = cfz.S(v...)
	return t
}

// SetSV__SubnetMappings updates property "SubnetMappings".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetSV__SubnetMappings(v ...AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.SubnetMappings = cfz.SV(v...)
	return t
}

// Set__Subnets updates property "Subnets".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__Subnets(v cfz.ExpressionSlice[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Subnets = v
	return t
}

// SetS__Subnets updates property "Subnets".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetS__Subnets(v ...cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Subnets = cfz.S(v...)
	return t
}

// SetSV__Subnets updates property "Subnets".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetSV__Subnets(v ...string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Subnets = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetSV__Tags(v ...cfz.Tag) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Set__Type(v cfz.Expression[string]) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) SetV__Type(v string) *AWS_ElasticLoadBalancingV2_LoadBalancer {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CanonicalHostedZoneID returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CanonicalHostedZoneID
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetAtt__CanonicalHostedZoneID() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.CanonicalHostedZoneID))
}

// GetAtt__DNSName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DNSName
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetAtt__DNSName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.DNSName))
}

// GetAtt__LoadBalancerArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoadBalancerArn
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetAtt__LoadBalancerArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.LoadBalancerArn))
}

// GetAtt__LoadBalancerFullName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoadBalancerFullName
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetAtt__LoadBalancerFullName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.LoadBalancerFullName))
}

// GetAtt__LoadBalancerName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LoadBalancerName
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetAtt__LoadBalancerName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.LoadBalancerName))
}

// GetAttSlice__SecurityGroups returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SecurityGroups
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetAttSlice__SecurityGroups() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_ElasticLoadBalancingV2_LoadBalancer__AttributesMap.SecurityGroups))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CanonicalHostedZoneID returns a conventionally configured output for an attribute of this resource.
// Attribute: CanonicalHostedZoneID
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetConventionalOutputAtt__CanonicalHostedZoneID(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCanonicalHostedZoneID", t.GetAtt__CanonicalHostedZoneID())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DNSName returns a conventionally configured output for an attribute of this resource.
// Attribute: DNSName
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetConventionalOutputAtt__DNSName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDNSName", t.GetAtt__DNSName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoadBalancerArn returns a conventionally configured output for an attribute of this resource.
// Attribute: LoadBalancerArn
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetConventionalOutputAtt__LoadBalancerArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoadBalancerArn", t.GetAtt__LoadBalancerArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoadBalancerFullName returns a conventionally configured output for an attribute of this resource.
// Attribute: LoadBalancerFullName
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetConventionalOutputAtt__LoadBalancerFullName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoadBalancerFullName", t.GetAtt__LoadBalancerFullName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LoadBalancerName returns a conventionally configured output for an attribute of this resource.
// Attribute: LoadBalancerName
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetConventionalOutputAtt__LoadBalancerName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLoadBalancerName", t.GetAtt__LoadBalancerName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SecurityGroups returns a conventionally configured output for an attribute of this resource.
// Attribute: SecurityGroups
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) GetConventionalOutputAtt__SecurityGroups(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSecurityGroups", t.GetAttSlice__SecurityGroups())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_ElasticLoadBalancingV2_LoadBalancer

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_ElasticLoadBalancingV2_LoadBalancer) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
