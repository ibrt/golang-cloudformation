// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_elasticloadbalancingv2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__Type is the CloudFormation type for AWS::ElasticLoadBalancingV2::LoadBalancer.SubnetMapping.
	AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__Type = "AWS::ElasticLoadBalancingV2::LoadBalancer.SubnetMapping"
)

var (
	// AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__PropertiesMap reports all the CloudFormation properties for AWS::ElasticLoadBalancingV2::LoadBalancer.SubnetMapping.
	AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__PropertiesMap = struct {
		AllocationId        string
		IPv6Address         string
		PrivateIPv4Address  string
		SourceNatIpv6Prefix string
		SubnetId            string
	}{
		AllocationId:        "AllocationId",
		IPv6Address:         "IPv6Address",
		PrivateIPv4Address:  "PrivateIPv4Address",
		SourceNatIpv6Prefix: "SourceNatIpv6Prefix",
		SubnetId:            "SubnetId",
	}

	// AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__PropertiesSlice reports all the CloudFormation properties for AWS::ElasticLoadBalancingV2::LoadBalancer.SubnetMapping.
	AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__PropertiesSlice = []string{
		AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__PropertiesMap.AllocationId,
		AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__PropertiesMap.IPv6Address,
		AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__PropertiesMap.PrivateIPv4Address,
		AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__PropertiesMap.SourceNatIpv6Prefix,
		AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__PropertiesMap.SubnetId,
	}
)

// AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping is a binding for AWS::ElasticLoadBalancingV2::LoadBalancer.SubnetMapping.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html
type AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping struct {
	// AllocationId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-allocationid
	AllocationId cfz.Expression[string] `json:"AllocationId,omitempty"`

	// IPv6Address is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-ipv6address
	IPv6Address cfz.Expression[string] `json:"IPv6Address,omitempty"`

	// PrivateIPv4Address is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-privateipv4address
	PrivateIPv4Address cfz.Expression[string] `json:"PrivateIPv4Address,omitempty"`

	// SourceNatIpv6Prefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-sourcenatipv6prefix
	SourceNatIpv6Prefix cfz.Expression[string] `json:"SourceNatIpv6Prefix,omitempty"`

	// SubnetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-subnetmapping.html#cfn-elasticloadbalancingv2-loadbalancer-subnetmapping-subnetid
	SubnetId cfz.Expression[string] `json:"SubnetId,omitempty"`
}

// New__AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping initializes a new AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping.
func New__AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping() AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	return AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping{}
}

// GetType returns the CloudFormation type.
func (AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) GetType() string {
	return AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping__Type
}

// Set__AllocationId updates property "AllocationId".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) Set__AllocationId(v cfz.Expression[string]) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.AllocationId = v
	return t
}

// SetV__AllocationId updates property "AllocationId".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) SetV__AllocationId(v string) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.AllocationId = cfz.V(v)
	return t
}

// Set__IPv6Address updates property "IPv6Address".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) Set__IPv6Address(v cfz.Expression[string]) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.IPv6Address = v
	return t
}

// SetV__IPv6Address updates property "IPv6Address".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) SetV__IPv6Address(v string) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.IPv6Address = cfz.V(v)
	return t
}

// Set__PrivateIPv4Address updates property "PrivateIPv4Address".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) Set__PrivateIPv4Address(v cfz.Expression[string]) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.PrivateIPv4Address = v
	return t
}

// SetV__PrivateIPv4Address updates property "PrivateIPv4Address".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) SetV__PrivateIPv4Address(v string) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.PrivateIPv4Address = cfz.V(v)
	return t
}

// Set__SourceNatIpv6Prefix updates property "SourceNatIpv6Prefix".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) Set__SourceNatIpv6Prefix(v cfz.Expression[string]) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.SourceNatIpv6Prefix = v
	return t
}

// SetV__SourceNatIpv6Prefix updates property "SourceNatIpv6Prefix".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) SetV__SourceNatIpv6Prefix(v string) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.SourceNatIpv6Prefix = cfz.V(v)
	return t
}

// Set__SubnetId updates property "SubnetId".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) Set__SubnetId(v cfz.Expression[string]) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.SubnetId = v
	return t
}

// SetV__SubnetId updates property "SubnetId".
func (t AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping) SetV__SubnetId(v string) AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping {
	t.SubnetId = cfz.V(v)
	return t
}
