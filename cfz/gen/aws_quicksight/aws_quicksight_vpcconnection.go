// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_quicksight

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_QuickSight_VPCConnection)(nil)
	_ cfz.Resource                   = (*AWS_QuickSight_VPCConnection)(nil)
)

const (
	// AWS_QuickSight_VPCConnection__Type is the CloudFormation type for AWS::QuickSight::VPCConnection.
	AWS_QuickSight_VPCConnection__Type = "AWS::QuickSight::VPCConnection"
)

var (
	// AWS_QuickSight_VPCConnection__AttributesMap reports all the CloudFormation attributes for AWS::QuickSight::VPCConnection.
	AWS_QuickSight_VPCConnection__AttributesMap = struct {
		Arn               string
		CreatedTime       string
		LastUpdatedTime   string
		NetworkInterfaces string
		Status            string
		VPCId             string
	}{
		Arn:               "Arn",
		CreatedTime:       "CreatedTime",
		LastUpdatedTime:   "LastUpdatedTime",
		NetworkInterfaces: "NetworkInterfaces",
		Status:            "Status",
		VPCId:             "VPCId",
	}

	// AWS_QuickSight_VPCConnection__AttributesSlice reports all the CloudFormation attributes for AWS::QuickSight::VPCConnection.
	AWS_QuickSight_VPCConnection__AttributesSlice = []string{
		AWS_QuickSight_VPCConnection__AttributesMap.Arn,
		AWS_QuickSight_VPCConnection__AttributesMap.CreatedTime,
		AWS_QuickSight_VPCConnection__AttributesMap.LastUpdatedTime,
		AWS_QuickSight_VPCConnection__AttributesMap.NetworkInterfaces,
		AWS_QuickSight_VPCConnection__AttributesMap.Status,
		AWS_QuickSight_VPCConnection__AttributesMap.VPCId,
	}
)

var (
	// AWS_QuickSight_VPCConnection__PropertiesMap reports all the CloudFormation properties for AWS::QuickSight::VPCConnection.
	AWS_QuickSight_VPCConnection__PropertiesMap = struct {
		AvailabilityStatus string
		AwsAccountId       string
		DnsResolvers       string
		Name               string
		RoleArn            string
		SecurityGroupIds   string
		SubnetIds          string
		Tags               string
		VPCConnectionId    string
	}{
		AvailabilityStatus: "AvailabilityStatus",
		AwsAccountId:       "AwsAccountId",
		DnsResolvers:       "DnsResolvers",
		Name:               "Name",
		RoleArn:            "RoleArn",
		SecurityGroupIds:   "SecurityGroupIds",
		SubnetIds:          "SubnetIds",
		Tags:               "Tags",
		VPCConnectionId:    "VPCConnectionId",
	}

	// AWS_QuickSight_VPCConnection__PropertiesSlice reports all the CloudFormation properties for AWS::QuickSight::VPCConnection.
	AWS_QuickSight_VPCConnection__PropertiesSlice = []string{
		AWS_QuickSight_VPCConnection__PropertiesMap.AvailabilityStatus,
		AWS_QuickSight_VPCConnection__PropertiesMap.AwsAccountId,
		AWS_QuickSight_VPCConnection__PropertiesMap.DnsResolvers,
		AWS_QuickSight_VPCConnection__PropertiesMap.Name,
		AWS_QuickSight_VPCConnection__PropertiesMap.RoleArn,
		AWS_QuickSight_VPCConnection__PropertiesMap.SecurityGroupIds,
		AWS_QuickSight_VPCConnection__PropertiesMap.SubnetIds,
		AWS_QuickSight_VPCConnection__PropertiesMap.Tags,
		AWS_QuickSight_VPCConnection__PropertiesMap.VPCConnectionId,
	}
)

// AWS_QuickSight_VPCConnection is a binding for AWS::QuickSight::VPCConnection.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html
type AWS_QuickSight_VPCConnection struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AvailabilityStatus is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-availabilitystatus
	AvailabilityStatus cfz.Expression[string] `json:"AvailabilityStatus,omitempty"`

	// AwsAccountId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-awsaccountid
	AwsAccountId cfz.Expression[string] `json:"AwsAccountId,omitempty"`

	// DnsResolvers is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-dnsresolvers
	DnsResolvers cfz.ExpressionSlice[string] `json:"DnsResolvers,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// SubnetIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-subnetids
	SubnetIds cfz.ExpressionSlice[string] `json:"SubnetIds,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VPCConnectionId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-vpcconnection.html#cfn-quicksight-vpcconnection-vpcconnectionid
	VPCConnectionId cfz.Expression[string] `json:"VPCConnectionId,omitempty"`
}

// New__AWS_QuickSight_VPCConnection initializes a new *AWS_QuickSight_VPCConnection.
func New__AWS_QuickSight_VPCConnection(logicalName string) *AWS_QuickSight_VPCConnection {
	return &AWS_QuickSight_VPCConnection{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_QuickSight_VPCConnection) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_QuickSight_VPCConnection) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_QuickSight_VPCConnection) GetType() string {
	return AWS_QuickSight_VPCConnection__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_QuickSight_VPCConnection) Set__LogicalName(v string) *AWS_QuickSight_VPCConnection {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_QuickSight_VPCConnection) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_QuickSight_VPCConnection {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_QuickSight_VPCConnection) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_QuickSight_VPCConnection {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_QuickSight_VPCConnection) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_QuickSight_VPCConnection {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_QuickSight_VPCConnection) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_QuickSight_VPCConnection {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_QuickSight_VPCConnection) Set__RequestedOutputs(v []cfz.Output) *AWS_QuickSight_VPCConnection {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_QuickSight_VPCConnection) Add__RequestedOutputs(v ...cfz.Output) *AWS_QuickSight_VPCConnection {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AvailabilityStatus updates property "AvailabilityStatus".
func (t *AWS_QuickSight_VPCConnection) Set__AvailabilityStatus(v cfz.Expression[string]) *AWS_QuickSight_VPCConnection {
	t.AvailabilityStatus = v
	return t
}

// SetV__AvailabilityStatus updates property "AvailabilityStatus".
func (t *AWS_QuickSight_VPCConnection) SetV__AvailabilityStatus(v string) *AWS_QuickSight_VPCConnection {
	t.AvailabilityStatus = cfz.V(v)
	return t
}

// Set__AwsAccountId updates property "AwsAccountId".
func (t *AWS_QuickSight_VPCConnection) Set__AwsAccountId(v cfz.Expression[string]) *AWS_QuickSight_VPCConnection {
	t.AwsAccountId = v
	return t
}

// SetV__AwsAccountId updates property "AwsAccountId".
func (t *AWS_QuickSight_VPCConnection) SetV__AwsAccountId(v string) *AWS_QuickSight_VPCConnection {
	t.AwsAccountId = cfz.V(v)
	return t
}

// Set__DnsResolvers updates property "DnsResolvers".
func (t *AWS_QuickSight_VPCConnection) Set__DnsResolvers(v cfz.ExpressionSlice[string]) *AWS_QuickSight_VPCConnection {
	t.DnsResolvers = v
	return t
}

// SetS__DnsResolvers updates property "DnsResolvers".
func (t *AWS_QuickSight_VPCConnection) SetS__DnsResolvers(v ...cfz.Expression[string]) *AWS_QuickSight_VPCConnection {
	t.DnsResolvers = cfz.S(v...)
	return t
}

// SetSV__DnsResolvers updates property "DnsResolvers".
func (t *AWS_QuickSight_VPCConnection) SetSV__DnsResolvers(v ...string) *AWS_QuickSight_VPCConnection {
	t.DnsResolvers = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_QuickSight_VPCConnection) Set__Name(v cfz.Expression[string]) *AWS_QuickSight_VPCConnection {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_QuickSight_VPCConnection) SetV__Name(v string) *AWS_QuickSight_VPCConnection {
	t.Name = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_QuickSight_VPCConnection) Set__RoleArn(v cfz.Expression[string]) *AWS_QuickSight_VPCConnection {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_QuickSight_VPCConnection) SetV__RoleArn(v string) *AWS_QuickSight_VPCConnection {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_QuickSight_VPCConnection) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_QuickSight_VPCConnection {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_QuickSight_VPCConnection) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_QuickSight_VPCConnection {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_QuickSight_VPCConnection) SetSV__SecurityGroupIds(v ...string) *AWS_QuickSight_VPCConnection {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__SubnetIds updates property "SubnetIds".
func (t *AWS_QuickSight_VPCConnection) Set__SubnetIds(v cfz.ExpressionSlice[string]) *AWS_QuickSight_VPCConnection {
	t.SubnetIds = v
	return t
}

// SetS__SubnetIds updates property "SubnetIds".
func (t *AWS_QuickSight_VPCConnection) SetS__SubnetIds(v ...cfz.Expression[string]) *AWS_QuickSight_VPCConnection {
	t.SubnetIds = cfz.S(v...)
	return t
}

// SetSV__SubnetIds updates property "SubnetIds".
func (t *AWS_QuickSight_VPCConnection) SetSV__SubnetIds(v ...string) *AWS_QuickSight_VPCConnection {
	t.SubnetIds = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_QuickSight_VPCConnection) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_QuickSight_VPCConnection {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_QuickSight_VPCConnection) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_QuickSight_VPCConnection {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_QuickSight_VPCConnection) SetSV__Tags(v ...cfz.Tag) *AWS_QuickSight_VPCConnection {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VPCConnectionId updates property "VPCConnectionId".
func (t *AWS_QuickSight_VPCConnection) Set__VPCConnectionId(v cfz.Expression[string]) *AWS_QuickSight_VPCConnection {
	t.VPCConnectionId = v
	return t
}

// SetV__VPCConnectionId updates property "VPCConnectionId".
func (t *AWS_QuickSight_VPCConnection) SetV__VPCConnectionId(v string) *AWS_QuickSight_VPCConnection {
	t.VPCConnectionId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_QuickSight_VPCConnection) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_QuickSight_VPCConnection) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_VPCConnection__AttributesMap.Arn))
}

// GetAtt__CreatedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedTime
func (t *AWS_QuickSight_VPCConnection) GetAtt__CreatedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_VPCConnection__AttributesMap.CreatedTime))
}

// GetAtt__LastUpdatedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastUpdatedTime
func (t *AWS_QuickSight_VPCConnection) GetAtt__LastUpdatedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_VPCConnection__AttributesMap.LastUpdatedTime))
}

// GetAttSlice__NetworkInterfaces returns a $cfz.ExpressionSlice[AWS_QuickSight_VPCConnection_NetworkInterface] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NetworkInterfaces
func (t *AWS_QuickSight_VPCConnection) GetAttSlice__NetworkInterfaces() cfz.ExpressionSlice[AWS_QuickSight_VPCConnection_NetworkInterface] {
	return cfz.GetAttSlice[AWS_QuickSight_VPCConnection_NetworkInterface](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_VPCConnection__AttributesMap.NetworkInterfaces))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_QuickSight_VPCConnection) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_VPCConnection__AttributesMap.Status))
}

// GetAtt__VPCId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VPCId
func (t *AWS_QuickSight_VPCConnection) GetAtt__VPCId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_VPCConnection__AttributesMap.VPCId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_QuickSight_VPCConnection) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_QuickSight_VPCConnection) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedTime
func (t *AWS_QuickSight_VPCConnection) GetConventionalOutputAtt__CreatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedTime", t.GetAtt__CreatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastUpdatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastUpdatedTime
func (t *AWS_QuickSight_VPCConnection) GetConventionalOutputAtt__LastUpdatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastUpdatedTime", t.GetAtt__LastUpdatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NetworkInterfaces returns a conventionally configured output for an attribute of this resource.
// Attribute: NetworkInterfaces
func (t *AWS_QuickSight_VPCConnection) GetConventionalOutputAtt__NetworkInterfaces(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNetworkInterfaces", t.GetAttSlice__NetworkInterfaces())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_QuickSight_VPCConnection) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VPCId returns a conventionally configured output for an attribute of this resource.
// Attribute: VPCId
func (t *AWS_QuickSight_VPCConnection) GetConventionalOutputAtt__VPCId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVPCId", t.GetAtt__VPCId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_QuickSight_VPCConnection) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_QuickSight_VPCConnection

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_QuickSight_VPCConnection) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
