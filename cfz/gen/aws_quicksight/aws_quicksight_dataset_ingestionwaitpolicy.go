// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_quicksight

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_QuickSight_DataSet_IngestionWaitPolicy__Type is the CloudFormation type for AWS::QuickSight::DataSet.IngestionWaitPolicy.
	AWS_QuickSight_DataSet_IngestionWaitPolicy__Type = "AWS::QuickSight::DataSet.IngestionWaitPolicy"
)

var (
	// AWS_QuickSight_DataSet_IngestionWaitPolicy__PropertiesMap reports all the CloudFormation properties for AWS::QuickSight::DataSet.IngestionWaitPolicy.
	AWS_QuickSight_DataSet_IngestionWaitPolicy__PropertiesMap = struct {
		IngestionWaitTimeInHours string
		WaitForSpiceIngestion    string
	}{
		IngestionWaitTimeInHours: "IngestionWaitTimeInHours",
		WaitForSpiceIngestion:    "WaitForSpiceIngestion",
	}

	// AWS_QuickSight_DataSet_IngestionWaitPolicy__PropertiesSlice reports all the CloudFormation properties for AWS::QuickSight::DataSet.IngestionWaitPolicy.
	AWS_QuickSight_DataSet_IngestionWaitPolicy__PropertiesSlice = []string{
		AWS_QuickSight_DataSet_IngestionWaitPolicy__PropertiesMap.IngestionWaitTimeInHours,
		AWS_QuickSight_DataSet_IngestionWaitPolicy__PropertiesMap.WaitForSpiceIngestion,
	}
)

// AWS_QuickSight_DataSet_IngestionWaitPolicy is a binding for AWS::QuickSight::DataSet.IngestionWaitPolicy.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html
type AWS_QuickSight_DataSet_IngestionWaitPolicy struct {
	// IngestionWaitTimeInHours is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-ingestionwaittimeinhours
	IngestionWaitTimeInHours cfz.Expression[float64] `json:"IngestionWaitTimeInHours,omitempty"`

	// WaitForSpiceIngestion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-ingestionwaitpolicy.html#cfn-quicksight-dataset-ingestionwaitpolicy-waitforspiceingestion
	WaitForSpiceIngestion cfz.Expression[bool] `json:"WaitForSpiceIngestion,omitempty"`
}

// New__AWS_QuickSight_DataSet_IngestionWaitPolicy initializes a new AWS_QuickSight_DataSet_IngestionWaitPolicy.
func New__AWS_QuickSight_DataSet_IngestionWaitPolicy() AWS_QuickSight_DataSet_IngestionWaitPolicy {
	return AWS_QuickSight_DataSet_IngestionWaitPolicy{}
}

// GetType returns the CloudFormation type.
func (AWS_QuickSight_DataSet_IngestionWaitPolicy) GetType() string {
	return AWS_QuickSight_DataSet_IngestionWaitPolicy__Type
}

// Set__IngestionWaitTimeInHours updates property "IngestionWaitTimeInHours".
func (t AWS_QuickSight_DataSet_IngestionWaitPolicy) Set__IngestionWaitTimeInHours(v cfz.Expression[float64]) AWS_QuickSight_DataSet_IngestionWaitPolicy {
	t.IngestionWaitTimeInHours = v
	return t
}

// SetV__IngestionWaitTimeInHours updates property "IngestionWaitTimeInHours".
func (t AWS_QuickSight_DataSet_IngestionWaitPolicy) SetV__IngestionWaitTimeInHours(v float64) AWS_QuickSight_DataSet_IngestionWaitPolicy {
	t.IngestionWaitTimeInHours = cfz.V(v)
	return t
}

// Set__WaitForSpiceIngestion updates property "WaitForSpiceIngestion".
func (t AWS_QuickSight_DataSet_IngestionWaitPolicy) Set__WaitForSpiceIngestion(v cfz.Expression[bool]) AWS_QuickSight_DataSet_IngestionWaitPolicy {
	t.WaitForSpiceIngestion = v
	return t
}

// SetV__WaitForSpiceIngestion updates property "WaitForSpiceIngestion".
func (t AWS_QuickSight_DataSet_IngestionWaitPolicy) SetV__WaitForSpiceIngestion(v bool) AWS_QuickSight_DataSet_IngestionWaitPolicy {
	t.WaitForSpiceIngestion = cfz.V(v)
	return t
}
