// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_quicksight

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_QuickSight_Topic_TopicColumn__Type is the CloudFormation type for AWS::QuickSight::Topic.TopicColumn.
	AWS_QuickSight_Topic_TopicColumn__Type = "AWS::QuickSight::Topic.TopicColumn"
)

var (
	// AWS_QuickSight_Topic_TopicColumn__PropertiesMap reports all the CloudFormation properties for AWS::QuickSight::Topic.TopicColumn.
	AWS_QuickSight_Topic_TopicColumn__PropertiesMap = struct {
		Aggregation            string
		AllowedAggregations    string
		CellValueSynonyms      string
		ColumnDataRole         string
		ColumnDescription      string
		ColumnFriendlyName     string
		ColumnName             string
		ColumnSynonyms         string
		ComparativeOrder       string
		DefaultFormatting      string
		DisableIndexing        string
		IsIncludedInTopic      string
		NeverAggregateInFilter string
		NonAdditive            string
		NotAllowedAggregations string
		SemanticType           string
		TimeGranularity        string
	}{
		Aggregation:            "Aggregation",
		AllowedAggregations:    "AllowedAggregations",
		CellValueSynonyms:      "CellValueSynonyms",
		ColumnDataRole:         "ColumnDataRole",
		ColumnDescription:      "ColumnDescription",
		ColumnFriendlyName:     "ColumnFriendlyName",
		ColumnName:             "ColumnName",
		ColumnSynonyms:         "ColumnSynonyms",
		ComparativeOrder:       "ComparativeOrder",
		DefaultFormatting:      "DefaultFormatting",
		DisableIndexing:        "DisableIndexing",
		IsIncludedInTopic:      "IsIncludedInTopic",
		NeverAggregateInFilter: "NeverAggregateInFilter",
		NonAdditive:            "NonAdditive",
		NotAllowedAggregations: "NotAllowedAggregations",
		SemanticType:           "SemanticType",
		TimeGranularity:        "TimeGranularity",
	}

	// AWS_QuickSight_Topic_TopicColumn__PropertiesSlice reports all the CloudFormation properties for AWS::QuickSight::Topic.TopicColumn.
	AWS_QuickSight_Topic_TopicColumn__PropertiesSlice = []string{
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.Aggregation,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.AllowedAggregations,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.CellValueSynonyms,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.ColumnDataRole,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.ColumnDescription,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.ColumnFriendlyName,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.ColumnName,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.ColumnSynonyms,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.ComparativeOrder,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.DefaultFormatting,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.DisableIndexing,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.IsIncludedInTopic,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.NeverAggregateInFilter,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.NonAdditive,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.NotAllowedAggregations,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.SemanticType,
		AWS_QuickSight_Topic_TopicColumn__PropertiesMap.TimeGranularity,
	}
)

// AWS_QuickSight_Topic_TopicColumn is a binding for AWS::QuickSight::Topic.TopicColumn.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html
type AWS_QuickSight_Topic_TopicColumn struct {
	// Aggregation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-aggregation
	Aggregation cfz.Expression[string] `json:"Aggregation,omitempty"`

	// AllowedAggregations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-allowedaggregations
	AllowedAggregations cfz.ExpressionSlice[string] `json:"AllowedAggregations,omitempty"`

	// CellValueSynonyms is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-cellvaluesynonyms
	CellValueSynonyms cfz.ExpressionSlice[AWS_QuickSight_Topic_CellValueSynonym] `json:"CellValueSynonyms,omitempty"`

	// ColumnDataRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-columndatarole
	ColumnDataRole cfz.Expression[string] `json:"ColumnDataRole,omitempty"`

	// ColumnDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-columndescription
	ColumnDescription cfz.Expression[string] `json:"ColumnDescription,omitempty"`

	// ColumnFriendlyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-columnfriendlyname
	ColumnFriendlyName cfz.Expression[string] `json:"ColumnFriendlyName,omitempty"`

	// ColumnName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-columnname
	ColumnName cfz.Expression[string] `json:"ColumnName,omitempty"`

	// ColumnSynonyms is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-columnsynonyms
	ColumnSynonyms cfz.ExpressionSlice[string] `json:"ColumnSynonyms,omitempty"`

	// ComparativeOrder is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-comparativeorder
	ComparativeOrder cfz.Expression[AWS_QuickSight_Topic_ComparativeOrder] `json:"ComparativeOrder,omitempty"`

	// DefaultFormatting is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-defaultformatting
	DefaultFormatting cfz.Expression[AWS_QuickSight_Topic_DefaultFormatting] `json:"DefaultFormatting,omitempty"`

	// DisableIndexing is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-disableindexing
	DisableIndexing cfz.Expression[bool] `json:"DisableIndexing,omitempty"`

	// IsIncludedInTopic is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-isincludedintopic
	IsIncludedInTopic cfz.Expression[bool] `json:"IsIncludedInTopic,omitempty"`

	// NeverAggregateInFilter is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-neveraggregateinfilter
	NeverAggregateInFilter cfz.Expression[bool] `json:"NeverAggregateInFilter,omitempty"`

	// NonAdditive is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-nonadditive
	NonAdditive cfz.Expression[bool] `json:"NonAdditive,omitempty"`

	// NotAllowedAggregations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-notallowedaggregations
	NotAllowedAggregations cfz.ExpressionSlice[string] `json:"NotAllowedAggregations,omitempty"`

	// SemanticType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-semantictype
	SemanticType cfz.Expression[AWS_QuickSight_Topic_SemanticType] `json:"SemanticType,omitempty"`

	// TimeGranularity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-topiccolumn.html#cfn-quicksight-topic-topiccolumn-timegranularity
	TimeGranularity cfz.Expression[string] `json:"TimeGranularity,omitempty"`
}

// New__AWS_QuickSight_Topic_TopicColumn initializes a new AWS_QuickSight_Topic_TopicColumn.
func New__AWS_QuickSight_Topic_TopicColumn() AWS_QuickSight_Topic_TopicColumn {
	return AWS_QuickSight_Topic_TopicColumn{}
}

// GetType returns the CloudFormation type.
func (AWS_QuickSight_Topic_TopicColumn) GetType() string {
	return AWS_QuickSight_Topic_TopicColumn__Type
}

// Set__Aggregation updates property "Aggregation".
func (t AWS_QuickSight_Topic_TopicColumn) Set__Aggregation(v cfz.Expression[string]) AWS_QuickSight_Topic_TopicColumn {
	t.Aggregation = v
	return t
}

// SetV__Aggregation updates property "Aggregation".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__Aggregation(v string) AWS_QuickSight_Topic_TopicColumn {
	t.Aggregation = cfz.V(v)
	return t
}

// Set__AllowedAggregations updates property "AllowedAggregations".
func (t AWS_QuickSight_Topic_TopicColumn) Set__AllowedAggregations(v cfz.ExpressionSlice[string]) AWS_QuickSight_Topic_TopicColumn {
	t.AllowedAggregations = v
	return t
}

// SetS__AllowedAggregations updates property "AllowedAggregations".
func (t AWS_QuickSight_Topic_TopicColumn) SetS__AllowedAggregations(v ...cfz.Expression[string]) AWS_QuickSight_Topic_TopicColumn {
	t.AllowedAggregations = cfz.S(v...)
	return t
}

// SetSV__AllowedAggregations updates property "AllowedAggregations".
func (t AWS_QuickSight_Topic_TopicColumn) SetSV__AllowedAggregations(v ...string) AWS_QuickSight_Topic_TopicColumn {
	t.AllowedAggregations = cfz.SV(v...)
	return t
}

// Set__CellValueSynonyms updates property "CellValueSynonyms".
func (t AWS_QuickSight_Topic_TopicColumn) Set__CellValueSynonyms(v cfz.ExpressionSlice[AWS_QuickSight_Topic_CellValueSynonym]) AWS_QuickSight_Topic_TopicColumn {
	t.CellValueSynonyms = v
	return t
}

// SetS__CellValueSynonyms updates property "CellValueSynonyms".
func (t AWS_QuickSight_Topic_TopicColumn) SetS__CellValueSynonyms(v ...cfz.Expression[AWS_QuickSight_Topic_CellValueSynonym]) AWS_QuickSight_Topic_TopicColumn {
	t.CellValueSynonyms = cfz.S(v...)
	return t
}

// SetSV__CellValueSynonyms updates property "CellValueSynonyms".
func (t AWS_QuickSight_Topic_TopicColumn) SetSV__CellValueSynonyms(v ...AWS_QuickSight_Topic_CellValueSynonym) AWS_QuickSight_Topic_TopicColumn {
	t.CellValueSynonyms = cfz.SV(v...)
	return t
}

// Set__ColumnDataRole updates property "ColumnDataRole".
func (t AWS_QuickSight_Topic_TopicColumn) Set__ColumnDataRole(v cfz.Expression[string]) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnDataRole = v
	return t
}

// SetV__ColumnDataRole updates property "ColumnDataRole".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__ColumnDataRole(v string) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnDataRole = cfz.V(v)
	return t
}

// Set__ColumnDescription updates property "ColumnDescription".
func (t AWS_QuickSight_Topic_TopicColumn) Set__ColumnDescription(v cfz.Expression[string]) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnDescription = v
	return t
}

// SetV__ColumnDescription updates property "ColumnDescription".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__ColumnDescription(v string) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnDescription = cfz.V(v)
	return t
}

// Set__ColumnFriendlyName updates property "ColumnFriendlyName".
func (t AWS_QuickSight_Topic_TopicColumn) Set__ColumnFriendlyName(v cfz.Expression[string]) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnFriendlyName = v
	return t
}

// SetV__ColumnFriendlyName updates property "ColumnFriendlyName".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__ColumnFriendlyName(v string) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnFriendlyName = cfz.V(v)
	return t
}

// Set__ColumnName updates property "ColumnName".
func (t AWS_QuickSight_Topic_TopicColumn) Set__ColumnName(v cfz.Expression[string]) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnName = v
	return t
}

// SetV__ColumnName updates property "ColumnName".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__ColumnName(v string) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnName = cfz.V(v)
	return t
}

// Set__ColumnSynonyms updates property "ColumnSynonyms".
func (t AWS_QuickSight_Topic_TopicColumn) Set__ColumnSynonyms(v cfz.ExpressionSlice[string]) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnSynonyms = v
	return t
}

// SetS__ColumnSynonyms updates property "ColumnSynonyms".
func (t AWS_QuickSight_Topic_TopicColumn) SetS__ColumnSynonyms(v ...cfz.Expression[string]) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnSynonyms = cfz.S(v...)
	return t
}

// SetSV__ColumnSynonyms updates property "ColumnSynonyms".
func (t AWS_QuickSight_Topic_TopicColumn) SetSV__ColumnSynonyms(v ...string) AWS_QuickSight_Topic_TopicColumn {
	t.ColumnSynonyms = cfz.SV(v...)
	return t
}

// Set__ComparativeOrder updates property "ComparativeOrder".
func (t AWS_QuickSight_Topic_TopicColumn) Set__ComparativeOrder(v cfz.Expression[AWS_QuickSight_Topic_ComparativeOrder]) AWS_QuickSight_Topic_TopicColumn {
	t.ComparativeOrder = v
	return t
}

// SetV__ComparativeOrder updates property "ComparativeOrder".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__ComparativeOrder(v AWS_QuickSight_Topic_ComparativeOrder) AWS_QuickSight_Topic_TopicColumn {
	t.ComparativeOrder = cfz.V(v)
	return t
}

// Set__DefaultFormatting updates property "DefaultFormatting".
func (t AWS_QuickSight_Topic_TopicColumn) Set__DefaultFormatting(v cfz.Expression[AWS_QuickSight_Topic_DefaultFormatting]) AWS_QuickSight_Topic_TopicColumn {
	t.DefaultFormatting = v
	return t
}

// SetV__DefaultFormatting updates property "DefaultFormatting".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__DefaultFormatting(v AWS_QuickSight_Topic_DefaultFormatting) AWS_QuickSight_Topic_TopicColumn {
	t.DefaultFormatting = cfz.V(v)
	return t
}

// Set__DisableIndexing updates property "DisableIndexing".
func (t AWS_QuickSight_Topic_TopicColumn) Set__DisableIndexing(v cfz.Expression[bool]) AWS_QuickSight_Topic_TopicColumn {
	t.DisableIndexing = v
	return t
}

// SetV__DisableIndexing updates property "DisableIndexing".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__DisableIndexing(v bool) AWS_QuickSight_Topic_TopicColumn {
	t.DisableIndexing = cfz.V(v)
	return t
}

// Set__IsIncludedInTopic updates property "IsIncludedInTopic".
func (t AWS_QuickSight_Topic_TopicColumn) Set__IsIncludedInTopic(v cfz.Expression[bool]) AWS_QuickSight_Topic_TopicColumn {
	t.IsIncludedInTopic = v
	return t
}

// SetV__IsIncludedInTopic updates property "IsIncludedInTopic".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__IsIncludedInTopic(v bool) AWS_QuickSight_Topic_TopicColumn {
	t.IsIncludedInTopic = cfz.V(v)
	return t
}

// Set__NeverAggregateInFilter updates property "NeverAggregateInFilter".
func (t AWS_QuickSight_Topic_TopicColumn) Set__NeverAggregateInFilter(v cfz.Expression[bool]) AWS_QuickSight_Topic_TopicColumn {
	t.NeverAggregateInFilter = v
	return t
}

// SetV__NeverAggregateInFilter updates property "NeverAggregateInFilter".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__NeverAggregateInFilter(v bool) AWS_QuickSight_Topic_TopicColumn {
	t.NeverAggregateInFilter = cfz.V(v)
	return t
}

// Set__NonAdditive updates property "NonAdditive".
func (t AWS_QuickSight_Topic_TopicColumn) Set__NonAdditive(v cfz.Expression[bool]) AWS_QuickSight_Topic_TopicColumn {
	t.NonAdditive = v
	return t
}

// SetV__NonAdditive updates property "NonAdditive".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__NonAdditive(v bool) AWS_QuickSight_Topic_TopicColumn {
	t.NonAdditive = cfz.V(v)
	return t
}

// Set__NotAllowedAggregations updates property "NotAllowedAggregations".
func (t AWS_QuickSight_Topic_TopicColumn) Set__NotAllowedAggregations(v cfz.ExpressionSlice[string]) AWS_QuickSight_Topic_TopicColumn {
	t.NotAllowedAggregations = v
	return t
}

// SetS__NotAllowedAggregations updates property "NotAllowedAggregations".
func (t AWS_QuickSight_Topic_TopicColumn) SetS__NotAllowedAggregations(v ...cfz.Expression[string]) AWS_QuickSight_Topic_TopicColumn {
	t.NotAllowedAggregations = cfz.S(v...)
	return t
}

// SetSV__NotAllowedAggregations updates property "NotAllowedAggregations".
func (t AWS_QuickSight_Topic_TopicColumn) SetSV__NotAllowedAggregations(v ...string) AWS_QuickSight_Topic_TopicColumn {
	t.NotAllowedAggregations = cfz.SV(v...)
	return t
}

// Set__SemanticType updates property "SemanticType".
func (t AWS_QuickSight_Topic_TopicColumn) Set__SemanticType(v cfz.Expression[AWS_QuickSight_Topic_SemanticType]) AWS_QuickSight_Topic_TopicColumn {
	t.SemanticType = v
	return t
}

// SetV__SemanticType updates property "SemanticType".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__SemanticType(v AWS_QuickSight_Topic_SemanticType) AWS_QuickSight_Topic_TopicColumn {
	t.SemanticType = cfz.V(v)
	return t
}

// Set__TimeGranularity updates property "TimeGranularity".
func (t AWS_QuickSight_Topic_TopicColumn) Set__TimeGranularity(v cfz.Expression[string]) AWS_QuickSight_Topic_TopicColumn {
	t.TimeGranularity = v
	return t
}

// SetV__TimeGranularity updates property "TimeGranularity".
func (t AWS_QuickSight_Topic_TopicColumn) SetV__TimeGranularity(v string) AWS_QuickSight_Topic_TopicColumn {
	t.TimeGranularity = cfz.V(v)
	return t
}
