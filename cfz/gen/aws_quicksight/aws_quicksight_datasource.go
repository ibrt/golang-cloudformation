// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_quicksight

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_QuickSight_DataSource)(nil)
	_ cfz.Resource                   = (*AWS_QuickSight_DataSource)(nil)
)

const (
	// AWS_QuickSight_DataSource__Type is the CloudFormation type for AWS::QuickSight::DataSource.
	AWS_QuickSight_DataSource__Type = "AWS::QuickSight::DataSource"
)

var (
	// AWS_QuickSight_DataSource__AttributesMap reports all the CloudFormation attributes for AWS::QuickSight::DataSource.
	AWS_QuickSight_DataSource__AttributesMap = struct {
		Arn             string
		CreatedTime     string
		LastUpdatedTime string
		Status          string
	}{
		Arn:             "Arn",
		CreatedTime:     "CreatedTime",
		LastUpdatedTime: "LastUpdatedTime",
		Status:          "Status",
	}

	// AWS_QuickSight_DataSource__AttributesSlice reports all the CloudFormation attributes for AWS::QuickSight::DataSource.
	AWS_QuickSight_DataSource__AttributesSlice = []string{
		AWS_QuickSight_DataSource__AttributesMap.Arn,
		AWS_QuickSight_DataSource__AttributesMap.CreatedTime,
		AWS_QuickSight_DataSource__AttributesMap.LastUpdatedTime,
		AWS_QuickSight_DataSource__AttributesMap.Status,
	}
)

var (
	// AWS_QuickSight_DataSource__PropertiesMap reports all the CloudFormation properties for AWS::QuickSight::DataSource.
	AWS_QuickSight_DataSource__PropertiesMap = struct {
		AlternateDataSourceParameters string
		AwsAccountId                  string
		Credentials                   string
		DataSourceId                  string
		DataSourceParameters          string
		ErrorInfo                     string
		FolderArns                    string
		Name                          string
		Permissions                   string
		SslProperties                 string
		Tags                          string
		Type                          string
		VpcConnectionProperties       string
	}{
		AlternateDataSourceParameters: "AlternateDataSourceParameters",
		AwsAccountId:                  "AwsAccountId",
		Credentials:                   "Credentials",
		DataSourceId:                  "DataSourceId",
		DataSourceParameters:          "DataSourceParameters",
		ErrorInfo:                     "ErrorInfo",
		FolderArns:                    "FolderArns",
		Name:                          "Name",
		Permissions:                   "Permissions",
		SslProperties:                 "SslProperties",
		Tags:                          "Tags",
		Type:                          "Type",
		VpcConnectionProperties:       "VpcConnectionProperties",
	}

	// AWS_QuickSight_DataSource__PropertiesSlice reports all the CloudFormation properties for AWS::QuickSight::DataSource.
	AWS_QuickSight_DataSource__PropertiesSlice = []string{
		AWS_QuickSight_DataSource__PropertiesMap.AlternateDataSourceParameters,
		AWS_QuickSight_DataSource__PropertiesMap.AwsAccountId,
		AWS_QuickSight_DataSource__PropertiesMap.Credentials,
		AWS_QuickSight_DataSource__PropertiesMap.DataSourceId,
		AWS_QuickSight_DataSource__PropertiesMap.DataSourceParameters,
		AWS_QuickSight_DataSource__PropertiesMap.ErrorInfo,
		AWS_QuickSight_DataSource__PropertiesMap.FolderArns,
		AWS_QuickSight_DataSource__PropertiesMap.Name,
		AWS_QuickSight_DataSource__PropertiesMap.Permissions,
		AWS_QuickSight_DataSource__PropertiesMap.SslProperties,
		AWS_QuickSight_DataSource__PropertiesMap.Tags,
		AWS_QuickSight_DataSource__PropertiesMap.Type,
		AWS_QuickSight_DataSource__PropertiesMap.VpcConnectionProperties,
	}
)

// AWS_QuickSight_DataSource is a binding for AWS::QuickSight::DataSource.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html
type AWS_QuickSight_DataSource struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AlternateDataSourceParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-alternatedatasourceparameters
	AlternateDataSourceParameters cfz.ExpressionSlice[AWS_QuickSight_DataSource_DataSourceParameters] `json:"AlternateDataSourceParameters,omitempty"`

	// AwsAccountId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-awsaccountid
	AwsAccountId cfz.Expression[string] `json:"AwsAccountId,omitempty"`

	// Credentials is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-credentials
	Credentials cfz.Expression[AWS_QuickSight_DataSource_DataSourceCredentials] `json:"Credentials,omitempty"`

	// DataSourceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-datasourceid
	DataSourceId cfz.Expression[string] `json:"DataSourceId,omitempty"`

	// DataSourceParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-datasourceparameters
	DataSourceParameters cfz.Expression[AWS_QuickSight_DataSource_DataSourceParameters] `json:"DataSourceParameters,omitempty"`

	// ErrorInfo is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-errorinfo
	ErrorInfo cfz.Expression[AWS_QuickSight_DataSource_DataSourceErrorInfo] `json:"ErrorInfo,omitempty"`

	// FolderArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-folderarns
	FolderArns cfz.ExpressionSlice[string] `json:"FolderArns,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Permissions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-permissions
	Permissions cfz.ExpressionSlice[AWS_QuickSight_DataSource_ResourcePermission] `json:"Permissions,omitempty"`

	// SslProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-sslproperties
	SslProperties cfz.Expression[AWS_QuickSight_DataSource_SslProperties] `json:"SslProperties,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// VpcConnectionProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-quicksight-datasource.html#cfn-quicksight-datasource-vpcconnectionproperties
	VpcConnectionProperties cfz.Expression[AWS_QuickSight_DataSource_VpcConnectionProperties] `json:"VpcConnectionProperties,omitempty"`
}

// New__AWS_QuickSight_DataSource initializes a new *AWS_QuickSight_DataSource.
func New__AWS_QuickSight_DataSource(logicalName string) *AWS_QuickSight_DataSource {
	return &AWS_QuickSight_DataSource{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_QuickSight_DataSource) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_QuickSight_DataSource) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_QuickSight_DataSource) GetType() string {
	return AWS_QuickSight_DataSource__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_QuickSight_DataSource) Set__LogicalName(v string) *AWS_QuickSight_DataSource {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_QuickSight_DataSource) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_QuickSight_DataSource {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_QuickSight_DataSource) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_QuickSight_DataSource {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_QuickSight_DataSource) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_QuickSight_DataSource {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_QuickSight_DataSource) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_QuickSight_DataSource {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_QuickSight_DataSource) Set__RequestedOutputs(v []cfz.Output) *AWS_QuickSight_DataSource {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_QuickSight_DataSource) Add__RequestedOutputs(v ...cfz.Output) *AWS_QuickSight_DataSource {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AlternateDataSourceParameters updates property "AlternateDataSourceParameters".
func (t *AWS_QuickSight_DataSource) Set__AlternateDataSourceParameters(v cfz.ExpressionSlice[AWS_QuickSight_DataSource_DataSourceParameters]) *AWS_QuickSight_DataSource {
	t.AlternateDataSourceParameters = v
	return t
}

// SetS__AlternateDataSourceParameters updates property "AlternateDataSourceParameters".
func (t *AWS_QuickSight_DataSource) SetS__AlternateDataSourceParameters(v ...cfz.Expression[AWS_QuickSight_DataSource_DataSourceParameters]) *AWS_QuickSight_DataSource {
	t.AlternateDataSourceParameters = cfz.S(v...)
	return t
}

// SetSV__AlternateDataSourceParameters updates property "AlternateDataSourceParameters".
func (t *AWS_QuickSight_DataSource) SetSV__AlternateDataSourceParameters(v ...AWS_QuickSight_DataSource_DataSourceParameters) *AWS_QuickSight_DataSource {
	t.AlternateDataSourceParameters = cfz.SV(v...)
	return t
}

// Set__AwsAccountId updates property "AwsAccountId".
func (t *AWS_QuickSight_DataSource) Set__AwsAccountId(v cfz.Expression[string]) *AWS_QuickSight_DataSource {
	t.AwsAccountId = v
	return t
}

// SetV__AwsAccountId updates property "AwsAccountId".
func (t *AWS_QuickSight_DataSource) SetV__AwsAccountId(v string) *AWS_QuickSight_DataSource {
	t.AwsAccountId = cfz.V(v)
	return t
}

// Set__Credentials updates property "Credentials".
func (t *AWS_QuickSight_DataSource) Set__Credentials(v cfz.Expression[AWS_QuickSight_DataSource_DataSourceCredentials]) *AWS_QuickSight_DataSource {
	t.Credentials = v
	return t
}

// SetV__Credentials updates property "Credentials".
func (t *AWS_QuickSight_DataSource) SetV__Credentials(v AWS_QuickSight_DataSource_DataSourceCredentials) *AWS_QuickSight_DataSource {
	t.Credentials = cfz.V(v)
	return t
}

// Set__DataSourceId updates property "DataSourceId".
func (t *AWS_QuickSight_DataSource) Set__DataSourceId(v cfz.Expression[string]) *AWS_QuickSight_DataSource {
	t.DataSourceId = v
	return t
}

// SetV__DataSourceId updates property "DataSourceId".
func (t *AWS_QuickSight_DataSource) SetV__DataSourceId(v string) *AWS_QuickSight_DataSource {
	t.DataSourceId = cfz.V(v)
	return t
}

// Set__DataSourceParameters updates property "DataSourceParameters".
func (t *AWS_QuickSight_DataSource) Set__DataSourceParameters(v cfz.Expression[AWS_QuickSight_DataSource_DataSourceParameters]) *AWS_QuickSight_DataSource {
	t.DataSourceParameters = v
	return t
}

// SetV__DataSourceParameters updates property "DataSourceParameters".
func (t *AWS_QuickSight_DataSource) SetV__DataSourceParameters(v AWS_QuickSight_DataSource_DataSourceParameters) *AWS_QuickSight_DataSource {
	t.DataSourceParameters = cfz.V(v)
	return t
}

// Set__ErrorInfo updates property "ErrorInfo".
func (t *AWS_QuickSight_DataSource) Set__ErrorInfo(v cfz.Expression[AWS_QuickSight_DataSource_DataSourceErrorInfo]) *AWS_QuickSight_DataSource {
	t.ErrorInfo = v
	return t
}

// SetV__ErrorInfo updates property "ErrorInfo".
func (t *AWS_QuickSight_DataSource) SetV__ErrorInfo(v AWS_QuickSight_DataSource_DataSourceErrorInfo) *AWS_QuickSight_DataSource {
	t.ErrorInfo = cfz.V(v)
	return t
}

// Set__FolderArns updates property "FolderArns".
func (t *AWS_QuickSight_DataSource) Set__FolderArns(v cfz.ExpressionSlice[string]) *AWS_QuickSight_DataSource {
	t.FolderArns = v
	return t
}

// SetS__FolderArns updates property "FolderArns".
func (t *AWS_QuickSight_DataSource) SetS__FolderArns(v ...cfz.Expression[string]) *AWS_QuickSight_DataSource {
	t.FolderArns = cfz.S(v...)
	return t
}

// SetSV__FolderArns updates property "FolderArns".
func (t *AWS_QuickSight_DataSource) SetSV__FolderArns(v ...string) *AWS_QuickSight_DataSource {
	t.FolderArns = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_QuickSight_DataSource) Set__Name(v cfz.Expression[string]) *AWS_QuickSight_DataSource {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_QuickSight_DataSource) SetV__Name(v string) *AWS_QuickSight_DataSource {
	t.Name = cfz.V(v)
	return t
}

// Set__Permissions updates property "Permissions".
func (t *AWS_QuickSight_DataSource) Set__Permissions(v cfz.ExpressionSlice[AWS_QuickSight_DataSource_ResourcePermission]) *AWS_QuickSight_DataSource {
	t.Permissions = v
	return t
}

// SetS__Permissions updates property "Permissions".
func (t *AWS_QuickSight_DataSource) SetS__Permissions(v ...cfz.Expression[AWS_QuickSight_DataSource_ResourcePermission]) *AWS_QuickSight_DataSource {
	t.Permissions = cfz.S(v...)
	return t
}

// SetSV__Permissions updates property "Permissions".
func (t *AWS_QuickSight_DataSource) SetSV__Permissions(v ...AWS_QuickSight_DataSource_ResourcePermission) *AWS_QuickSight_DataSource {
	t.Permissions = cfz.SV(v...)
	return t
}

// Set__SslProperties updates property "SslProperties".
func (t *AWS_QuickSight_DataSource) Set__SslProperties(v cfz.Expression[AWS_QuickSight_DataSource_SslProperties]) *AWS_QuickSight_DataSource {
	t.SslProperties = v
	return t
}

// SetV__SslProperties updates property "SslProperties".
func (t *AWS_QuickSight_DataSource) SetV__SslProperties(v AWS_QuickSight_DataSource_SslProperties) *AWS_QuickSight_DataSource {
	t.SslProperties = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_QuickSight_DataSource) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_QuickSight_DataSource {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_QuickSight_DataSource) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_QuickSight_DataSource {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_QuickSight_DataSource) SetSV__Tags(v ...cfz.Tag) *AWS_QuickSight_DataSource {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_QuickSight_DataSource) Set__Type(v cfz.Expression[string]) *AWS_QuickSight_DataSource {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_QuickSight_DataSource) SetV__Type(v string) *AWS_QuickSight_DataSource {
	t.Type = cfz.V(v)
	return t
}

// Set__VpcConnectionProperties updates property "VpcConnectionProperties".
func (t *AWS_QuickSight_DataSource) Set__VpcConnectionProperties(v cfz.Expression[AWS_QuickSight_DataSource_VpcConnectionProperties]) *AWS_QuickSight_DataSource {
	t.VpcConnectionProperties = v
	return t
}

// SetV__VpcConnectionProperties updates property "VpcConnectionProperties".
func (t *AWS_QuickSight_DataSource) SetV__VpcConnectionProperties(v AWS_QuickSight_DataSource_VpcConnectionProperties) *AWS_QuickSight_DataSource {
	t.VpcConnectionProperties = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_QuickSight_DataSource) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_QuickSight_DataSource) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_DataSource__AttributesMap.Arn))
}

// GetAtt__CreatedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedTime
func (t *AWS_QuickSight_DataSource) GetAtt__CreatedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_DataSource__AttributesMap.CreatedTime))
}

// GetAtt__LastUpdatedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastUpdatedTime
func (t *AWS_QuickSight_DataSource) GetAtt__LastUpdatedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_DataSource__AttributesMap.LastUpdatedTime))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_QuickSight_DataSource) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_QuickSight_DataSource__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_QuickSight_DataSource) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_QuickSight_DataSource) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedTime
func (t *AWS_QuickSight_DataSource) GetConventionalOutputAtt__CreatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedTime", t.GetAtt__CreatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastUpdatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastUpdatedTime
func (t *AWS_QuickSight_DataSource) GetConventionalOutputAtt__LastUpdatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastUpdatedTime", t.GetAtt__LastUpdatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_QuickSight_DataSource) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_QuickSight_DataSource) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_QuickSight_DataSource

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_QuickSight_DataSource) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
