// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_quicksight

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_QuickSight_Topic_DisplayFormatOptions__Type is the CloudFormation type for AWS::QuickSight::Topic.DisplayFormatOptions.
	AWS_QuickSight_Topic_DisplayFormatOptions__Type = "AWS::QuickSight::Topic.DisplayFormatOptions"
)

var (
	// AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap reports all the CloudFormation properties for AWS::QuickSight::Topic.DisplayFormatOptions.
	AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap = struct {
		BlankCellFormat    string
		CurrencySymbol     string
		DateFormat         string
		DecimalSeparator   string
		FractionDigits     string
		GroupingSeparator  string
		NegativeFormat     string
		Prefix             string
		Suffix             string
		UnitScaler         string
		UseBlankCellFormat string
		UseGrouping        string
	}{
		BlankCellFormat:    "BlankCellFormat",
		CurrencySymbol:     "CurrencySymbol",
		DateFormat:         "DateFormat",
		DecimalSeparator:   "DecimalSeparator",
		FractionDigits:     "FractionDigits",
		GroupingSeparator:  "GroupingSeparator",
		NegativeFormat:     "NegativeFormat",
		Prefix:             "Prefix",
		Suffix:             "Suffix",
		UnitScaler:         "UnitScaler",
		UseBlankCellFormat: "UseBlankCellFormat",
		UseGrouping:        "UseGrouping",
	}

	// AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesSlice reports all the CloudFormation properties for AWS::QuickSight::Topic.DisplayFormatOptions.
	AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesSlice = []string{
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.BlankCellFormat,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.CurrencySymbol,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.DateFormat,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.DecimalSeparator,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.FractionDigits,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.GroupingSeparator,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.NegativeFormat,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.Prefix,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.Suffix,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.UnitScaler,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.UseBlankCellFormat,
		AWS_QuickSight_Topic_DisplayFormatOptions__PropertiesMap.UseGrouping,
	}
)

// AWS_QuickSight_Topic_DisplayFormatOptions is a binding for AWS::QuickSight::Topic.DisplayFormatOptions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html
type AWS_QuickSight_Topic_DisplayFormatOptions struct {
	// BlankCellFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-blankcellformat
	BlankCellFormat cfz.Expression[string] `json:"BlankCellFormat,omitempty"`

	// CurrencySymbol is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-currencysymbol
	CurrencySymbol cfz.Expression[string] `json:"CurrencySymbol,omitempty"`

	// DateFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-dateformat
	DateFormat cfz.Expression[string] `json:"DateFormat,omitempty"`

	// DecimalSeparator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-decimalseparator
	DecimalSeparator cfz.Expression[string] `json:"DecimalSeparator,omitempty"`

	// FractionDigits is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-fractiondigits
	FractionDigits cfz.Expression[float64] `json:"FractionDigits,omitempty"`

	// GroupingSeparator is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-groupingseparator
	GroupingSeparator cfz.Expression[string] `json:"GroupingSeparator,omitempty"`

	// NegativeFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-negativeformat
	NegativeFormat cfz.Expression[AWS_QuickSight_Topic_NegativeFormat] `json:"NegativeFormat,omitempty"`

	// Prefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-prefix
	Prefix cfz.Expression[string] `json:"Prefix,omitempty"`

	// Suffix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-suffix
	Suffix cfz.Expression[string] `json:"Suffix,omitempty"`

	// UnitScaler is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-unitscaler
	UnitScaler cfz.Expression[string] `json:"UnitScaler,omitempty"`

	// UseBlankCellFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-useblankcellformat
	UseBlankCellFormat cfz.Expression[bool] `json:"UseBlankCellFormat,omitempty"`

	// UseGrouping is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-displayformatoptions.html#cfn-quicksight-topic-displayformatoptions-usegrouping
	UseGrouping cfz.Expression[bool] `json:"UseGrouping,omitempty"`
}

// New__AWS_QuickSight_Topic_DisplayFormatOptions initializes a new AWS_QuickSight_Topic_DisplayFormatOptions.
func New__AWS_QuickSight_Topic_DisplayFormatOptions() AWS_QuickSight_Topic_DisplayFormatOptions {
	return AWS_QuickSight_Topic_DisplayFormatOptions{}
}

// GetType returns the CloudFormation type.
func (AWS_QuickSight_Topic_DisplayFormatOptions) GetType() string {
	return AWS_QuickSight_Topic_DisplayFormatOptions__Type
}

// Set__BlankCellFormat updates property "BlankCellFormat".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__BlankCellFormat(v cfz.Expression[string]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.BlankCellFormat = v
	return t
}

// SetV__BlankCellFormat updates property "BlankCellFormat".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__BlankCellFormat(v string) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.BlankCellFormat = cfz.V(v)
	return t
}

// Set__CurrencySymbol updates property "CurrencySymbol".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__CurrencySymbol(v cfz.Expression[string]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.CurrencySymbol = v
	return t
}

// SetV__CurrencySymbol updates property "CurrencySymbol".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__CurrencySymbol(v string) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.CurrencySymbol = cfz.V(v)
	return t
}

// Set__DateFormat updates property "DateFormat".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__DateFormat(v cfz.Expression[string]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.DateFormat = v
	return t
}

// SetV__DateFormat updates property "DateFormat".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__DateFormat(v string) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.DateFormat = cfz.V(v)
	return t
}

// Set__DecimalSeparator updates property "DecimalSeparator".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__DecimalSeparator(v cfz.Expression[string]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.DecimalSeparator = v
	return t
}

// SetV__DecimalSeparator updates property "DecimalSeparator".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__DecimalSeparator(v string) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.DecimalSeparator = cfz.V(v)
	return t
}

// Set__FractionDigits updates property "FractionDigits".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__FractionDigits(v cfz.Expression[float64]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.FractionDigits = v
	return t
}

// SetV__FractionDigits updates property "FractionDigits".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__FractionDigits(v float64) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.FractionDigits = cfz.V(v)
	return t
}

// Set__GroupingSeparator updates property "GroupingSeparator".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__GroupingSeparator(v cfz.Expression[string]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.GroupingSeparator = v
	return t
}

// SetV__GroupingSeparator updates property "GroupingSeparator".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__GroupingSeparator(v string) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.GroupingSeparator = cfz.V(v)
	return t
}

// Set__NegativeFormat updates property "NegativeFormat".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__NegativeFormat(v cfz.Expression[AWS_QuickSight_Topic_NegativeFormat]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.NegativeFormat = v
	return t
}

// SetV__NegativeFormat updates property "NegativeFormat".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__NegativeFormat(v AWS_QuickSight_Topic_NegativeFormat) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.NegativeFormat = cfz.V(v)
	return t
}

// Set__Prefix updates property "Prefix".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__Prefix(v cfz.Expression[string]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.Prefix = v
	return t
}

// SetV__Prefix updates property "Prefix".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__Prefix(v string) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.Prefix = cfz.V(v)
	return t
}

// Set__Suffix updates property "Suffix".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__Suffix(v cfz.Expression[string]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.Suffix = v
	return t
}

// SetV__Suffix updates property "Suffix".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__Suffix(v string) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.Suffix = cfz.V(v)
	return t
}

// Set__UnitScaler updates property "UnitScaler".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__UnitScaler(v cfz.Expression[string]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.UnitScaler = v
	return t
}

// SetV__UnitScaler updates property "UnitScaler".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__UnitScaler(v string) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.UnitScaler = cfz.V(v)
	return t
}

// Set__UseBlankCellFormat updates property "UseBlankCellFormat".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__UseBlankCellFormat(v cfz.Expression[bool]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.UseBlankCellFormat = v
	return t
}

// SetV__UseBlankCellFormat updates property "UseBlankCellFormat".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__UseBlankCellFormat(v bool) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.UseBlankCellFormat = cfz.V(v)
	return t
}

// Set__UseGrouping updates property "UseGrouping".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) Set__UseGrouping(v cfz.Expression[bool]) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.UseGrouping = v
	return t
}

// SetV__UseGrouping updates property "UseGrouping".
func (t AWS_QuickSight_Topic_DisplayFormatOptions) SetV__UseGrouping(v bool) AWS_QuickSight_Topic_DisplayFormatOptions {
	t.UseGrouping = cfz.V(v)
	return t
}
