// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_quicksight

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_QuickSight_Topic_CellValueSynonym__Type is the CloudFormation type for AWS::QuickSight::Topic.CellValueSynonym.
	AWS_QuickSight_Topic_CellValueSynonym__Type = "AWS::QuickSight::Topic.CellValueSynonym"
)

var (
	// AWS_QuickSight_Topic_CellValueSynonym__PropertiesMap reports all the CloudFormation properties for AWS::QuickSight::Topic.CellValueSynonym.
	AWS_QuickSight_Topic_CellValueSynonym__PropertiesMap = struct {
		CellValue string
		Synonyms  string
	}{
		CellValue: "CellValue",
		Synonyms:  "Synonyms",
	}

	// AWS_QuickSight_Topic_CellValueSynonym__PropertiesSlice reports all the CloudFormation properties for AWS::QuickSight::Topic.CellValueSynonym.
	AWS_QuickSight_Topic_CellValueSynonym__PropertiesSlice = []string{
		AWS_QuickSight_Topic_CellValueSynonym__PropertiesMap.CellValue,
		AWS_QuickSight_Topic_CellValueSynonym__PropertiesMap.Synonyms,
	}
)

// AWS_QuickSight_Topic_CellValueSynonym is a binding for AWS::QuickSight::Topic.CellValueSynonym.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-cellvaluesynonym.html
type AWS_QuickSight_Topic_CellValueSynonym struct {
	// CellValue is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-cellvaluesynonym.html#cfn-quicksight-topic-cellvaluesynonym-cellvalue
	CellValue cfz.Expression[string] `json:"CellValue,omitempty"`

	// Synonyms is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-topic-cellvaluesynonym.html#cfn-quicksight-topic-cellvaluesynonym-synonyms
	Synonyms cfz.ExpressionSlice[string] `json:"Synonyms,omitempty"`
}

// New__AWS_QuickSight_Topic_CellValueSynonym initializes a new AWS_QuickSight_Topic_CellValueSynonym.
func New__AWS_QuickSight_Topic_CellValueSynonym() AWS_QuickSight_Topic_CellValueSynonym {
	return AWS_QuickSight_Topic_CellValueSynonym{}
}

// GetType returns the CloudFormation type.
func (AWS_QuickSight_Topic_CellValueSynonym) GetType() string {
	return AWS_QuickSight_Topic_CellValueSynonym__Type
}

// Set__CellValue updates property "CellValue".
func (t AWS_QuickSight_Topic_CellValueSynonym) Set__CellValue(v cfz.Expression[string]) AWS_QuickSight_Topic_CellValueSynonym {
	t.CellValue = v
	return t
}

// SetV__CellValue updates property "CellValue".
func (t AWS_QuickSight_Topic_CellValueSynonym) SetV__CellValue(v string) AWS_QuickSight_Topic_CellValueSynonym {
	t.CellValue = cfz.V(v)
	return t
}

// Set__Synonyms updates property "Synonyms".
func (t AWS_QuickSight_Topic_CellValueSynonym) Set__Synonyms(v cfz.ExpressionSlice[string]) AWS_QuickSight_Topic_CellValueSynonym {
	t.Synonyms = v
	return t
}

// SetS__Synonyms updates property "Synonyms".
func (t AWS_QuickSight_Topic_CellValueSynonym) SetS__Synonyms(v ...cfz.Expression[string]) AWS_QuickSight_Topic_CellValueSynonym {
	t.Synonyms = cfz.S(v...)
	return t
}

// SetSV__Synonyms updates property "Synonyms".
func (t AWS_QuickSight_Topic_CellValueSynonym) SetSV__Synonyms(v ...string) AWS_QuickSight_Topic_CellValueSynonym {
	t.Synonyms = cfz.SV(v...)
	return t
}
