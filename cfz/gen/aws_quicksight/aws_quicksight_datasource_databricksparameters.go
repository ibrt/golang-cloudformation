// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_quicksight

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_QuickSight_DataSource_DatabricksParameters__Type is the CloudFormation type for AWS::QuickSight::DataSource.DatabricksParameters.
	AWS_QuickSight_DataSource_DatabricksParameters__Type = "AWS::QuickSight::DataSource.DatabricksParameters"
)

var (
	// AWS_QuickSight_DataSource_DatabricksParameters__PropertiesMap reports all the CloudFormation properties for AWS::QuickSight::DataSource.DatabricksParameters.
	AWS_QuickSight_DataSource_DatabricksParameters__PropertiesMap = struct {
		Host            string
		Port            string
		SqlEndpointPath string
	}{
		Host:            "Host",
		Port:            "Port",
		SqlEndpointPath: "SqlEndpointPath",
	}

	// AWS_QuickSight_DataSource_DatabricksParameters__PropertiesSlice reports all the CloudFormation properties for AWS::QuickSight::DataSource.DatabricksParameters.
	AWS_QuickSight_DataSource_DatabricksParameters__PropertiesSlice = []string{
		AWS_QuickSight_DataSource_DatabricksParameters__PropertiesMap.Host,
		AWS_QuickSight_DataSource_DatabricksParameters__PropertiesMap.Port,
		AWS_QuickSight_DataSource_DatabricksParameters__PropertiesMap.SqlEndpointPath,
	}
)

// AWS_QuickSight_DataSource_DatabricksParameters is a binding for AWS::QuickSight::DataSource.DatabricksParameters.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-databricksparameters.html
type AWS_QuickSight_DataSource_DatabricksParameters struct {
	// Host is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-databricksparameters.html#cfn-quicksight-datasource-databricksparameters-host
	Host cfz.Expression[string] `json:"Host,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-databricksparameters.html#cfn-quicksight-datasource-databricksparameters-port
	Port cfz.Expression[float64] `json:"Port,omitempty"`

	// SqlEndpointPath is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-databricksparameters.html#cfn-quicksight-datasource-databricksparameters-sqlendpointpath
	SqlEndpointPath cfz.Expression[string] `json:"SqlEndpointPath,omitempty"`
}

// New__AWS_QuickSight_DataSource_DatabricksParameters initializes a new AWS_QuickSight_DataSource_DatabricksParameters.
func New__AWS_QuickSight_DataSource_DatabricksParameters() AWS_QuickSight_DataSource_DatabricksParameters {
	return AWS_QuickSight_DataSource_DatabricksParameters{}
}

// GetType returns the CloudFormation type.
func (AWS_QuickSight_DataSource_DatabricksParameters) GetType() string {
	return AWS_QuickSight_DataSource_DatabricksParameters__Type
}

// Set__Host updates property "Host".
func (t AWS_QuickSight_DataSource_DatabricksParameters) Set__Host(v cfz.Expression[string]) AWS_QuickSight_DataSource_DatabricksParameters {
	t.Host = v
	return t
}

// SetV__Host updates property "Host".
func (t AWS_QuickSight_DataSource_DatabricksParameters) SetV__Host(v string) AWS_QuickSight_DataSource_DatabricksParameters {
	t.Host = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t AWS_QuickSight_DataSource_DatabricksParameters) Set__Port(v cfz.Expression[float64]) AWS_QuickSight_DataSource_DatabricksParameters {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t AWS_QuickSight_DataSource_DatabricksParameters) SetV__Port(v float64) AWS_QuickSight_DataSource_DatabricksParameters {
	t.Port = cfz.V(v)
	return t
}

// Set__SqlEndpointPath updates property "SqlEndpointPath".
func (t AWS_QuickSight_DataSource_DatabricksParameters) Set__SqlEndpointPath(v cfz.Expression[string]) AWS_QuickSight_DataSource_DatabricksParameters {
	t.SqlEndpointPath = v
	return t
}

// SetV__SqlEndpointPath updates property "SqlEndpointPath".
func (t AWS_QuickSight_DataSource_DatabricksParameters) SetV__SqlEndpointPath(v string) AWS_QuickSight_DataSource_DatabricksParameters {
	t.SqlEndpointPath = cfz.V(v)
	return t
}
