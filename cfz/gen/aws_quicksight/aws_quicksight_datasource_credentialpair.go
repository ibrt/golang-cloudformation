// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_quicksight

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_QuickSight_DataSource_CredentialPair__Type is the CloudFormation type for AWS::QuickSight::DataSource.CredentialPair.
	AWS_QuickSight_DataSource_CredentialPair__Type = "AWS::QuickSight::DataSource.CredentialPair"
)

var (
	// AWS_QuickSight_DataSource_CredentialPair__PropertiesMap reports all the CloudFormation properties for AWS::QuickSight::DataSource.CredentialPair.
	AWS_QuickSight_DataSource_CredentialPair__PropertiesMap = struct {
		AlternateDataSourceParameters string
		Password                      string
		Username                      string
	}{
		AlternateDataSourceParameters: "AlternateDataSourceParameters",
		Password:                      "Password",
		Username:                      "Username",
	}

	// AWS_QuickSight_DataSource_CredentialPair__PropertiesSlice reports all the CloudFormation properties for AWS::QuickSight::DataSource.CredentialPair.
	AWS_QuickSight_DataSource_CredentialPair__PropertiesSlice = []string{
		AWS_QuickSight_DataSource_CredentialPair__PropertiesMap.AlternateDataSourceParameters,
		AWS_QuickSight_DataSource_CredentialPair__PropertiesMap.Password,
		AWS_QuickSight_DataSource_CredentialPair__PropertiesMap.Username,
	}
)

// AWS_QuickSight_DataSource_CredentialPair is a binding for AWS::QuickSight::DataSource.CredentialPair.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html
type AWS_QuickSight_DataSource_CredentialPair struct {
	// AlternateDataSourceParameters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-alternatedatasourceparameters
	AlternateDataSourceParameters cfz.ExpressionSlice[AWS_QuickSight_DataSource_DataSourceParameters] `json:"AlternateDataSourceParameters,omitempty"`

	// Password is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-password
	Password cfz.Expression[string] `json:"Password,omitempty"`

	// Username is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-datasource-credentialpair.html#cfn-quicksight-datasource-credentialpair-username
	Username cfz.Expression[string] `json:"Username,omitempty"`
}

// New__AWS_QuickSight_DataSource_CredentialPair initializes a new AWS_QuickSight_DataSource_CredentialPair.
func New__AWS_QuickSight_DataSource_CredentialPair() AWS_QuickSight_DataSource_CredentialPair {
	return AWS_QuickSight_DataSource_CredentialPair{}
}

// GetType returns the CloudFormation type.
func (AWS_QuickSight_DataSource_CredentialPair) GetType() string {
	return AWS_QuickSight_DataSource_CredentialPair__Type
}

// Set__AlternateDataSourceParameters updates property "AlternateDataSourceParameters".
func (t AWS_QuickSight_DataSource_CredentialPair) Set__AlternateDataSourceParameters(v cfz.ExpressionSlice[AWS_QuickSight_DataSource_DataSourceParameters]) AWS_QuickSight_DataSource_CredentialPair {
	t.AlternateDataSourceParameters = v
	return t
}

// SetS__AlternateDataSourceParameters updates property "AlternateDataSourceParameters".
func (t AWS_QuickSight_DataSource_CredentialPair) SetS__AlternateDataSourceParameters(v ...cfz.Expression[AWS_QuickSight_DataSource_DataSourceParameters]) AWS_QuickSight_DataSource_CredentialPair {
	t.AlternateDataSourceParameters = cfz.S(v...)
	return t
}

// SetSV__AlternateDataSourceParameters updates property "AlternateDataSourceParameters".
func (t AWS_QuickSight_DataSource_CredentialPair) SetSV__AlternateDataSourceParameters(v ...AWS_QuickSight_DataSource_DataSourceParameters) AWS_QuickSight_DataSource_CredentialPair {
	t.AlternateDataSourceParameters = cfz.SV(v...)
	return t
}

// Set__Password updates property "Password".
func (t AWS_QuickSight_DataSource_CredentialPair) Set__Password(v cfz.Expression[string]) AWS_QuickSight_DataSource_CredentialPair {
	t.Password = v
	return t
}

// SetV__Password updates property "Password".
func (t AWS_QuickSight_DataSource_CredentialPair) SetV__Password(v string) AWS_QuickSight_DataSource_CredentialPair {
	t.Password = cfz.V(v)
	return t
}

// Set__Username updates property "Username".
func (t AWS_QuickSight_DataSource_CredentialPair) Set__Username(v cfz.Expression[string]) AWS_QuickSight_DataSource_CredentialPair {
	t.Username = v
	return t
}

// SetV__Username updates property "Username".
func (t AWS_QuickSight_DataSource_CredentialPair) SetV__Username(v string) AWS_QuickSight_DataSource_CredentialPair {
	t.Username = cfz.V(v)
	return t
}
