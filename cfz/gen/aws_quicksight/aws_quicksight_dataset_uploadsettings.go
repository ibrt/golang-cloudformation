// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_quicksight

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_QuickSight_DataSet_UploadSettings__Type is the CloudFormation type for AWS::QuickSight::DataSet.UploadSettings.
	AWS_QuickSight_DataSet_UploadSettings__Type = "AWS::QuickSight::DataSet.UploadSettings"
)

var (
	// AWS_QuickSight_DataSet_UploadSettings__PropertiesMap reports all the CloudFormation properties for AWS::QuickSight::DataSet.UploadSettings.
	AWS_QuickSight_DataSet_UploadSettings__PropertiesMap = struct {
		ContainsHeader string
		Delimiter      string
		Format         string
		StartFromRow   string
		TextQualifier  string
	}{
		ContainsHeader: "ContainsHeader",
		Delimiter:      "Delimiter",
		Format:         "Format",
		StartFromRow:   "StartFromRow",
		TextQualifier:  "TextQualifier",
	}

	// AWS_QuickSight_DataSet_UploadSettings__PropertiesSlice reports all the CloudFormation properties for AWS::QuickSight::DataSet.UploadSettings.
	AWS_QuickSight_DataSet_UploadSettings__PropertiesSlice = []string{
		AWS_QuickSight_DataSet_UploadSettings__PropertiesMap.ContainsHeader,
		AWS_QuickSight_DataSet_UploadSettings__PropertiesMap.Delimiter,
		AWS_QuickSight_DataSet_UploadSettings__PropertiesMap.Format,
		AWS_QuickSight_DataSet_UploadSettings__PropertiesMap.StartFromRow,
		AWS_QuickSight_DataSet_UploadSettings__PropertiesMap.TextQualifier,
	}
)

// AWS_QuickSight_DataSet_UploadSettings is a binding for AWS::QuickSight::DataSet.UploadSettings.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html
type AWS_QuickSight_DataSet_UploadSettings struct {
	// ContainsHeader is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-containsheader
	ContainsHeader cfz.Expression[bool] `json:"ContainsHeader,omitempty"`

	// Delimiter is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-delimiter
	Delimiter cfz.Expression[string] `json:"Delimiter,omitempty"`

	// Format is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-format
	Format cfz.Expression[string] `json:"Format,omitempty"`

	// StartFromRow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-startfromrow
	StartFromRow cfz.Expression[float64] `json:"StartFromRow,omitempty"`

	// TextQualifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-quicksight-dataset-uploadsettings.html#cfn-quicksight-dataset-uploadsettings-textqualifier
	TextQualifier cfz.Expression[string] `json:"TextQualifier,omitempty"`
}

// New__AWS_QuickSight_DataSet_UploadSettings initializes a new AWS_QuickSight_DataSet_UploadSettings.
func New__AWS_QuickSight_DataSet_UploadSettings() AWS_QuickSight_DataSet_UploadSettings {
	return AWS_QuickSight_DataSet_UploadSettings{}
}

// GetType returns the CloudFormation type.
func (AWS_QuickSight_DataSet_UploadSettings) GetType() string {
	return AWS_QuickSight_DataSet_UploadSettings__Type
}

// Set__ContainsHeader updates property "ContainsHeader".
func (t AWS_QuickSight_DataSet_UploadSettings) Set__ContainsHeader(v cfz.Expression[bool]) AWS_QuickSight_DataSet_UploadSettings {
	t.ContainsHeader = v
	return t
}

// SetV__ContainsHeader updates property "ContainsHeader".
func (t AWS_QuickSight_DataSet_UploadSettings) SetV__ContainsHeader(v bool) AWS_QuickSight_DataSet_UploadSettings {
	t.ContainsHeader = cfz.V(v)
	return t
}

// Set__Delimiter updates property "Delimiter".
func (t AWS_QuickSight_DataSet_UploadSettings) Set__Delimiter(v cfz.Expression[string]) AWS_QuickSight_DataSet_UploadSettings {
	t.Delimiter = v
	return t
}

// SetV__Delimiter updates property "Delimiter".
func (t AWS_QuickSight_DataSet_UploadSettings) SetV__Delimiter(v string) AWS_QuickSight_DataSet_UploadSettings {
	t.Delimiter = cfz.V(v)
	return t
}

// Set__Format updates property "Format".
func (t AWS_QuickSight_DataSet_UploadSettings) Set__Format(v cfz.Expression[string]) AWS_QuickSight_DataSet_UploadSettings {
	t.Format = v
	return t
}

// SetV__Format updates property "Format".
func (t AWS_QuickSight_DataSet_UploadSettings) SetV__Format(v string) AWS_QuickSight_DataSet_UploadSettings {
	t.Format = cfz.V(v)
	return t
}

// Set__StartFromRow updates property "StartFromRow".
func (t AWS_QuickSight_DataSet_UploadSettings) Set__StartFromRow(v cfz.Expression[float64]) AWS_QuickSight_DataSet_UploadSettings {
	t.StartFromRow = v
	return t
}

// SetV__StartFromRow updates property "StartFromRow".
func (t AWS_QuickSight_DataSet_UploadSettings) SetV__StartFromRow(v float64) AWS_QuickSight_DataSet_UploadSettings {
	t.StartFromRow = cfz.V(v)
	return t
}

// Set__TextQualifier updates property "TextQualifier".
func (t AWS_QuickSight_DataSet_UploadSettings) Set__TextQualifier(v cfz.Expression[string]) AWS_QuickSight_DataSet_UploadSettings {
	t.TextQualifier = v
	return t
}

// SetV__TextQualifier updates property "TextQualifier".
func (t AWS_QuickSight_DataSet_UploadSettings) SetV__TextQualifier(v string) AWS_QuickSight_DataSet_UploadSettings {
	t.TextQualifier = cfz.V(v)
	return t
}
