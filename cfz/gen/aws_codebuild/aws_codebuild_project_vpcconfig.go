// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_codebuild

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_CodeBuild_Project_VpcConfig__Type is the CloudFormation type for AWS::CodeBuild::Project.VpcConfig.
	AWS_CodeBuild_Project_VpcConfig__Type = "AWS::CodeBuild::Project.VpcConfig"
)

var (
	// AWS_CodeBuild_Project_VpcConfig__PropertiesMap reports all the CloudFormation properties for AWS::CodeBuild::Project.VpcConfig.
	AWS_CodeBuild_Project_VpcConfig__PropertiesMap = struct {
		SecurityGroupIds string
		Subnets          string
		VpcId            string
	}{
		SecurityGroupIds: "SecurityGroupIds",
		Subnets:          "Subnets",
		VpcId:            "VpcId",
	}

	// AWS_CodeBuild_Project_VpcConfig__PropertiesSlice reports all the CloudFormation properties for AWS::CodeBuild::Project.VpcConfig.
	AWS_CodeBuild_Project_VpcConfig__PropertiesSlice = []string{
		AWS_CodeBuild_Project_VpcConfig__PropertiesMap.SecurityGroupIds,
		AWS_CodeBuild_Project_VpcConfig__PropertiesMap.Subnets,
		AWS_CodeBuild_Project_VpcConfig__PropertiesMap.VpcId,
	}
)

// AWS_CodeBuild_Project_VpcConfig is a binding for AWS::CodeBuild::Project.VpcConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-vpcconfig.html
type AWS_CodeBuild_Project_VpcConfig struct {
	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-vpcconfig.html#cfn-codebuild-project-vpcconfig-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// Subnets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-vpcconfig.html#cfn-codebuild-project-vpcconfig-subnets
	Subnets cfz.ExpressionSlice[string] `json:"Subnets,omitempty"`

	// VpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-vpcconfig.html#cfn-codebuild-project-vpcconfig-vpcid
	VpcId cfz.Expression[string] `json:"VpcId,omitempty"`
}

// New__AWS_CodeBuild_Project_VpcConfig initializes a new AWS_CodeBuild_Project_VpcConfig.
func New__AWS_CodeBuild_Project_VpcConfig() AWS_CodeBuild_Project_VpcConfig {
	return AWS_CodeBuild_Project_VpcConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_CodeBuild_Project_VpcConfig) GetType() string {
	return AWS_CodeBuild_Project_VpcConfig__Type
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t AWS_CodeBuild_Project_VpcConfig) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) AWS_CodeBuild_Project_VpcConfig {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t AWS_CodeBuild_Project_VpcConfig) SetS__SecurityGroupIds(v ...cfz.Expression[string]) AWS_CodeBuild_Project_VpcConfig {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t AWS_CodeBuild_Project_VpcConfig) SetSV__SecurityGroupIds(v ...string) AWS_CodeBuild_Project_VpcConfig {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__Subnets updates property "Subnets".
func (t AWS_CodeBuild_Project_VpcConfig) Set__Subnets(v cfz.ExpressionSlice[string]) AWS_CodeBuild_Project_VpcConfig {
	t.Subnets = v
	return t
}

// SetS__Subnets updates property "Subnets".
func (t AWS_CodeBuild_Project_VpcConfig) SetS__Subnets(v ...cfz.Expression[string]) AWS_CodeBuild_Project_VpcConfig {
	t.Subnets = cfz.S(v...)
	return t
}

// SetSV__Subnets updates property "Subnets".
func (t AWS_CodeBuild_Project_VpcConfig) SetSV__Subnets(v ...string) AWS_CodeBuild_Project_VpcConfig {
	t.Subnets = cfz.SV(v...)
	return t
}

// Set__VpcId updates property "VpcId".
func (t AWS_CodeBuild_Project_VpcConfig) Set__VpcId(v cfz.Expression[string]) AWS_CodeBuild_Project_VpcConfig {
	t.VpcId = v
	return t
}

// SetV__VpcId updates property "VpcId".
func (t AWS_CodeBuild_Project_VpcConfig) SetV__VpcId(v string) AWS_CodeBuild_Project_VpcConfig {
	t.VpcId = cfz.V(v)
	return t
}
