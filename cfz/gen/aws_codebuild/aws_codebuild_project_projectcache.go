// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_codebuild

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_CodeBuild_Project_ProjectCache__Type is the CloudFormation type for AWS::CodeBuild::Project.ProjectCache.
	AWS_CodeBuild_Project_ProjectCache__Type = "AWS::CodeBuild::Project.ProjectCache"
)

var (
	// AWS_CodeBuild_Project_ProjectCache__PropertiesMap reports all the CloudFormation properties for AWS::CodeBuild::Project.ProjectCache.
	AWS_CodeBuild_Project_ProjectCache__PropertiesMap = struct {
		Location string
		Modes    string
		Type     string
	}{
		Location: "Location",
		Modes:    "Modes",
		Type:     "Type",
	}

	// AWS_CodeBuild_Project_ProjectCache__PropertiesSlice reports all the CloudFormation properties for AWS::CodeBuild::Project.ProjectCache.
	AWS_CodeBuild_Project_ProjectCache__PropertiesSlice = []string{
		AWS_CodeBuild_Project_ProjectCache__PropertiesMap.Location,
		AWS_CodeBuild_Project_ProjectCache__PropertiesMap.Modes,
		AWS_CodeBuild_Project_ProjectCache__PropertiesMap.Type,
	}
)

// AWS_CodeBuild_Project_ProjectCache is a binding for AWS::CodeBuild::Project.ProjectCache.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectcache.html
type AWS_CodeBuild_Project_ProjectCache struct {
	// Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectcache.html#cfn-codebuild-project-projectcache-location
	Location cfz.Expression[string] `json:"Location,omitempty"`

	// Modes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectcache.html#cfn-codebuild-project-projectcache-modes
	Modes cfz.ExpressionSlice[string] `json:"Modes,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-projectcache.html#cfn-codebuild-project-projectcache-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_CodeBuild_Project_ProjectCache initializes a new AWS_CodeBuild_Project_ProjectCache.
func New__AWS_CodeBuild_Project_ProjectCache() AWS_CodeBuild_Project_ProjectCache {
	return AWS_CodeBuild_Project_ProjectCache{}
}

// GetType returns the CloudFormation type.
func (AWS_CodeBuild_Project_ProjectCache) GetType() string {
	return AWS_CodeBuild_Project_ProjectCache__Type
}

// Set__Location updates property "Location".
func (t AWS_CodeBuild_Project_ProjectCache) Set__Location(v cfz.Expression[string]) AWS_CodeBuild_Project_ProjectCache {
	t.Location = v
	return t
}

// SetV__Location updates property "Location".
func (t AWS_CodeBuild_Project_ProjectCache) SetV__Location(v string) AWS_CodeBuild_Project_ProjectCache {
	t.Location = cfz.V(v)
	return t
}

// Set__Modes updates property "Modes".
func (t AWS_CodeBuild_Project_ProjectCache) Set__Modes(v cfz.ExpressionSlice[string]) AWS_CodeBuild_Project_ProjectCache {
	t.Modes = v
	return t
}

// SetS__Modes updates property "Modes".
func (t AWS_CodeBuild_Project_ProjectCache) SetS__Modes(v ...cfz.Expression[string]) AWS_CodeBuild_Project_ProjectCache {
	t.Modes = cfz.S(v...)
	return t
}

// SetSV__Modes updates property "Modes".
func (t AWS_CodeBuild_Project_ProjectCache) SetSV__Modes(v ...string) AWS_CodeBuild_Project_ProjectCache {
	t.Modes = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t AWS_CodeBuild_Project_ProjectCache) Set__Type(v cfz.Expression[string]) AWS_CodeBuild_Project_ProjectCache {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t AWS_CodeBuild_Project_ProjectCache) SetV__Type(v string) AWS_CodeBuild_Project_ProjectCache {
	t.Type = cfz.V(v)
	return t
}
