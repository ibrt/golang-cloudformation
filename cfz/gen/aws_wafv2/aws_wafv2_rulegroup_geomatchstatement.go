// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_wafv2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_WAFv2_RuleGroup_GeoMatchStatement__Type is the CloudFormation type for AWS::WAFv2::RuleGroup.GeoMatchStatement.
	AWS_WAFv2_RuleGroup_GeoMatchStatement__Type = "AWS::WAFv2::RuleGroup.GeoMatchStatement"
)

var (
	// AWS_WAFv2_RuleGroup_GeoMatchStatement__PropertiesMap reports all the CloudFormation properties for AWS::WAFv2::RuleGroup.GeoMatchStatement.
	AWS_WAFv2_RuleGroup_GeoMatchStatement__PropertiesMap = struct {
		CountryCodes      string
		ForwardedIPConfig string
	}{
		CountryCodes:      "CountryCodes",
		ForwardedIPConfig: "ForwardedIPConfig",
	}

	// AWS_WAFv2_RuleGroup_GeoMatchStatement__PropertiesSlice reports all the CloudFormation properties for AWS::WAFv2::RuleGroup.GeoMatchStatement.
	AWS_WAFv2_RuleGroup_GeoMatchStatement__PropertiesSlice = []string{
		AWS_WAFv2_RuleGroup_GeoMatchStatement__PropertiesMap.CountryCodes,
		AWS_WAFv2_RuleGroup_GeoMatchStatement__PropertiesMap.ForwardedIPConfig,
	}
)

// AWS_WAFv2_RuleGroup_GeoMatchStatement is a binding for AWS::WAFv2::RuleGroup.GeoMatchStatement.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-geomatchstatement.html
type AWS_WAFv2_RuleGroup_GeoMatchStatement struct {
	// CountryCodes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-geomatchstatement.html#cfn-wafv2-rulegroup-geomatchstatement-countrycodes
	CountryCodes cfz.ExpressionSlice[string] `json:"CountryCodes,omitempty"`

	// ForwardedIPConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-rulegroup-geomatchstatement.html#cfn-wafv2-rulegroup-geomatchstatement-forwardedipconfig
	ForwardedIPConfig cfz.Expression[AWS_WAFv2_RuleGroup_ForwardedIPConfiguration] `json:"ForwardedIPConfig,omitempty"`
}

// New__AWS_WAFv2_RuleGroup_GeoMatchStatement initializes a new AWS_WAFv2_RuleGroup_GeoMatchStatement.
func New__AWS_WAFv2_RuleGroup_GeoMatchStatement() AWS_WAFv2_RuleGroup_GeoMatchStatement {
	return AWS_WAFv2_RuleGroup_GeoMatchStatement{}
}

// GetType returns the CloudFormation type.
func (AWS_WAFv2_RuleGroup_GeoMatchStatement) GetType() string {
	return AWS_WAFv2_RuleGroup_GeoMatchStatement__Type
}

// Set__CountryCodes updates property "CountryCodes".
func (t AWS_WAFv2_RuleGroup_GeoMatchStatement) Set__CountryCodes(v cfz.ExpressionSlice[string]) AWS_WAFv2_RuleGroup_GeoMatchStatement {
	t.CountryCodes = v
	return t
}

// SetS__CountryCodes updates property "CountryCodes".
func (t AWS_WAFv2_RuleGroup_GeoMatchStatement) SetS__CountryCodes(v ...cfz.Expression[string]) AWS_WAFv2_RuleGroup_GeoMatchStatement {
	t.CountryCodes = cfz.S(v...)
	return t
}

// SetSV__CountryCodes updates property "CountryCodes".
func (t AWS_WAFv2_RuleGroup_GeoMatchStatement) SetSV__CountryCodes(v ...string) AWS_WAFv2_RuleGroup_GeoMatchStatement {
	t.CountryCodes = cfz.SV(v...)
	return t
}

// Set__ForwardedIPConfig updates property "ForwardedIPConfig".
func (t AWS_WAFv2_RuleGroup_GeoMatchStatement) Set__ForwardedIPConfig(v cfz.Expression[AWS_WAFv2_RuleGroup_ForwardedIPConfiguration]) AWS_WAFv2_RuleGroup_GeoMatchStatement {
	t.ForwardedIPConfig = v
	return t
}

// SetV__ForwardedIPConfig updates property "ForwardedIPConfig".
func (t AWS_WAFv2_RuleGroup_GeoMatchStatement) SetV__ForwardedIPConfig(v AWS_WAFv2_RuleGroup_ForwardedIPConfiguration) AWS_WAFv2_RuleGroup_GeoMatchStatement {
	t.ForwardedIPConfig = cfz.V(v)
	return t
}
