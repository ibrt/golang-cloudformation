// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_wafv2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_WAFv2_RuleGroup)(nil)
	_ cfz.Resource                   = (*AWS_WAFv2_RuleGroup)(nil)
)

const (
	// AWS_WAFv2_RuleGroup__Type is the CloudFormation type for AWS::WAFv2::RuleGroup.
	AWS_WAFv2_RuleGroup__Type = "AWS::WAFv2::RuleGroup"
)

var (
	// AWS_WAFv2_RuleGroup__AttributesMap reports all the CloudFormation attributes for AWS::WAFv2::RuleGroup.
	AWS_WAFv2_RuleGroup__AttributesMap = struct {
		Arn            string
		Id             string
		LabelNamespace string
	}{
		Arn:            "Arn",
		Id:             "Id",
		LabelNamespace: "LabelNamespace",
	}

	// AWS_WAFv2_RuleGroup__AttributesSlice reports all the CloudFormation attributes for AWS::WAFv2::RuleGroup.
	AWS_WAFv2_RuleGroup__AttributesSlice = []string{
		AWS_WAFv2_RuleGroup__AttributesMap.Arn,
		AWS_WAFv2_RuleGroup__AttributesMap.Id,
		AWS_WAFv2_RuleGroup__AttributesMap.LabelNamespace,
	}
)

var (
	// AWS_WAFv2_RuleGroup__PropertiesMap reports all the CloudFormation properties for AWS::WAFv2::RuleGroup.
	AWS_WAFv2_RuleGroup__PropertiesMap = struct {
		AvailableLabels      string
		Capacity             string
		ConsumedLabels       string
		CustomResponseBodies string
		Description          string
		Name                 string
		Rules                string
		Scope                string
		Tags                 string
		VisibilityConfig     string
	}{
		AvailableLabels:      "AvailableLabels",
		Capacity:             "Capacity",
		ConsumedLabels:       "ConsumedLabels",
		CustomResponseBodies: "CustomResponseBodies",
		Description:          "Description",
		Name:                 "Name",
		Rules:                "Rules",
		Scope:                "Scope",
		Tags:                 "Tags",
		VisibilityConfig:     "VisibilityConfig",
	}

	// AWS_WAFv2_RuleGroup__PropertiesSlice reports all the CloudFormation properties for AWS::WAFv2::RuleGroup.
	AWS_WAFv2_RuleGroup__PropertiesSlice = []string{
		AWS_WAFv2_RuleGroup__PropertiesMap.AvailableLabels,
		AWS_WAFv2_RuleGroup__PropertiesMap.Capacity,
		AWS_WAFv2_RuleGroup__PropertiesMap.ConsumedLabels,
		AWS_WAFv2_RuleGroup__PropertiesMap.CustomResponseBodies,
		AWS_WAFv2_RuleGroup__PropertiesMap.Description,
		AWS_WAFv2_RuleGroup__PropertiesMap.Name,
		AWS_WAFv2_RuleGroup__PropertiesMap.Rules,
		AWS_WAFv2_RuleGroup__PropertiesMap.Scope,
		AWS_WAFv2_RuleGroup__PropertiesMap.Tags,
		AWS_WAFv2_RuleGroup__PropertiesMap.VisibilityConfig,
	}
)

// AWS_WAFv2_RuleGroup is a binding for AWS::WAFv2::RuleGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html
type AWS_WAFv2_RuleGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AvailableLabels is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-availablelabels
	AvailableLabels cfz.ExpressionSlice[AWS_WAFv2_RuleGroup_LabelSummary] `json:"AvailableLabels,omitempty"`

	// Capacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-capacity
	Capacity cfz.Expression[int32] `json:"Capacity,omitempty"`

	// ConsumedLabels is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-consumedlabels
	ConsumedLabels cfz.ExpressionSlice[AWS_WAFv2_RuleGroup_LabelSummary] `json:"ConsumedLabels,omitempty"`

	// CustomResponseBodies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-customresponsebodies
	CustomResponseBodies cfz.ExpressionMap[AWS_WAFv2_RuleGroup_CustomResponseBody] `json:"CustomResponseBodies,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Rules is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-rules
	Rules cfz.ExpressionSlice[AWS_WAFv2_RuleGroup_Rule] `json:"Rules,omitempty"`

	// Scope is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-scope
	Scope cfz.Expression[string] `json:"Scope,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VisibilityConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-rulegroup.html#cfn-wafv2-rulegroup-visibilityconfig
	VisibilityConfig cfz.Expression[AWS_WAFv2_RuleGroup_VisibilityConfig] `json:"VisibilityConfig,omitempty"`
}

// New__AWS_WAFv2_RuleGroup initializes a new *AWS_WAFv2_RuleGroup.
func New__AWS_WAFv2_RuleGroup(logicalName string) *AWS_WAFv2_RuleGroup {
	return &AWS_WAFv2_RuleGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_WAFv2_RuleGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_WAFv2_RuleGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_WAFv2_RuleGroup) GetType() string {
	return AWS_WAFv2_RuleGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_WAFv2_RuleGroup) Set__LogicalName(v string) *AWS_WAFv2_RuleGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_WAFv2_RuleGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_WAFv2_RuleGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_WAFv2_RuleGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_WAFv2_RuleGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_WAFv2_RuleGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_WAFv2_RuleGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_WAFv2_RuleGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_WAFv2_RuleGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_WAFv2_RuleGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_WAFv2_RuleGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_WAFv2_RuleGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_WAFv2_RuleGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AvailableLabels updates property "AvailableLabels".
func (t *AWS_WAFv2_RuleGroup) Set__AvailableLabels(v cfz.ExpressionSlice[AWS_WAFv2_RuleGroup_LabelSummary]) *AWS_WAFv2_RuleGroup {
	t.AvailableLabels = v
	return t
}

// SetS__AvailableLabels updates property "AvailableLabels".
func (t *AWS_WAFv2_RuleGroup) SetS__AvailableLabels(v ...cfz.Expression[AWS_WAFv2_RuleGroup_LabelSummary]) *AWS_WAFv2_RuleGroup {
	t.AvailableLabels = cfz.S(v...)
	return t
}

// SetSV__AvailableLabels updates property "AvailableLabels".
func (t *AWS_WAFv2_RuleGroup) SetSV__AvailableLabels(v ...AWS_WAFv2_RuleGroup_LabelSummary) *AWS_WAFv2_RuleGroup {
	t.AvailableLabels = cfz.SV(v...)
	return t
}

// Set__Capacity updates property "Capacity".
func (t *AWS_WAFv2_RuleGroup) Set__Capacity(v cfz.Expression[int32]) *AWS_WAFv2_RuleGroup {
	t.Capacity = v
	return t
}

// SetV__Capacity updates property "Capacity".
func (t *AWS_WAFv2_RuleGroup) SetV__Capacity(v int32) *AWS_WAFv2_RuleGroup {
	t.Capacity = cfz.V(v)
	return t
}

// Set__ConsumedLabels updates property "ConsumedLabels".
func (t *AWS_WAFv2_RuleGroup) Set__ConsumedLabels(v cfz.ExpressionSlice[AWS_WAFv2_RuleGroup_LabelSummary]) *AWS_WAFv2_RuleGroup {
	t.ConsumedLabels = v
	return t
}

// SetS__ConsumedLabels updates property "ConsumedLabels".
func (t *AWS_WAFv2_RuleGroup) SetS__ConsumedLabels(v ...cfz.Expression[AWS_WAFv2_RuleGroup_LabelSummary]) *AWS_WAFv2_RuleGroup {
	t.ConsumedLabels = cfz.S(v...)
	return t
}

// SetSV__ConsumedLabels updates property "ConsumedLabels".
func (t *AWS_WAFv2_RuleGroup) SetSV__ConsumedLabels(v ...AWS_WAFv2_RuleGroup_LabelSummary) *AWS_WAFv2_RuleGroup {
	t.ConsumedLabels = cfz.SV(v...)
	return t
}

// Set__CustomResponseBodies updates property "CustomResponseBodies".
func (t *AWS_WAFv2_RuleGroup) Set__CustomResponseBodies(v cfz.ExpressionMap[AWS_WAFv2_RuleGroup_CustomResponseBody]) *AWS_WAFv2_RuleGroup {
	t.CustomResponseBodies = v
	return t
}

// SetM__CustomResponseBodies updates property "CustomResponseBodies".
func (t *AWS_WAFv2_RuleGroup) SetM__CustomResponseBodies(v ...map[string]cfz.Expression[AWS_WAFv2_RuleGroup_CustomResponseBody]) *AWS_WAFv2_RuleGroup {
	t.CustomResponseBodies = cfz.M(v...)
	return t
}

// SetMV__CustomResponseBodies updates property "CustomResponseBodies".
func (t *AWS_WAFv2_RuleGroup) SetMV__CustomResponseBodies(v ...map[string]AWS_WAFv2_RuleGroup_CustomResponseBody) *AWS_WAFv2_RuleGroup {
	t.CustomResponseBodies = cfz.MV(v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_WAFv2_RuleGroup) Set__Description(v cfz.Expression[string]) *AWS_WAFv2_RuleGroup {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_WAFv2_RuleGroup) SetV__Description(v string) *AWS_WAFv2_RuleGroup {
	t.Description = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_WAFv2_RuleGroup) Set__Name(v cfz.Expression[string]) *AWS_WAFv2_RuleGroup {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_WAFv2_RuleGroup) SetV__Name(v string) *AWS_WAFv2_RuleGroup {
	t.Name = cfz.V(v)
	return t
}

// Set__Rules updates property "Rules".
func (t *AWS_WAFv2_RuleGroup) Set__Rules(v cfz.ExpressionSlice[AWS_WAFv2_RuleGroup_Rule]) *AWS_WAFv2_RuleGroup {
	t.Rules = v
	return t
}

// SetS__Rules updates property "Rules".
func (t *AWS_WAFv2_RuleGroup) SetS__Rules(v ...cfz.Expression[AWS_WAFv2_RuleGroup_Rule]) *AWS_WAFv2_RuleGroup {
	t.Rules = cfz.S(v...)
	return t
}

// SetSV__Rules updates property "Rules".
func (t *AWS_WAFv2_RuleGroup) SetSV__Rules(v ...AWS_WAFv2_RuleGroup_Rule) *AWS_WAFv2_RuleGroup {
	t.Rules = cfz.SV(v...)
	return t
}

// Set__Scope updates property "Scope".
func (t *AWS_WAFv2_RuleGroup) Set__Scope(v cfz.Expression[string]) *AWS_WAFv2_RuleGroup {
	t.Scope = v
	return t
}

// SetV__Scope updates property "Scope".
func (t *AWS_WAFv2_RuleGroup) SetV__Scope(v string) *AWS_WAFv2_RuleGroup {
	t.Scope = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_WAFv2_RuleGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_WAFv2_RuleGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_WAFv2_RuleGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_WAFv2_RuleGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_WAFv2_RuleGroup) SetSV__Tags(v ...cfz.Tag) *AWS_WAFv2_RuleGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VisibilityConfig updates property "VisibilityConfig".
func (t *AWS_WAFv2_RuleGroup) Set__VisibilityConfig(v cfz.Expression[AWS_WAFv2_RuleGroup_VisibilityConfig]) *AWS_WAFv2_RuleGroup {
	t.VisibilityConfig = v
	return t
}

// SetV__VisibilityConfig updates property "VisibilityConfig".
func (t *AWS_WAFv2_RuleGroup) SetV__VisibilityConfig(v AWS_WAFv2_RuleGroup_VisibilityConfig) *AWS_WAFv2_RuleGroup {
	t.VisibilityConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_WAFv2_RuleGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_WAFv2_RuleGroup) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WAFv2_RuleGroup__AttributesMap.Arn))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_WAFv2_RuleGroup) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WAFv2_RuleGroup__AttributesMap.Id))
}

// GetAtt__LabelNamespace returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LabelNamespace
func (t *AWS_WAFv2_RuleGroup) GetAtt__LabelNamespace() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WAFv2_RuleGroup__AttributesMap.LabelNamespace))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_WAFv2_RuleGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_WAFv2_RuleGroup) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_WAFv2_RuleGroup) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LabelNamespace returns a conventionally configured output for an attribute of this resource.
// Attribute: LabelNamespace
func (t *AWS_WAFv2_RuleGroup) GetConventionalOutputAtt__LabelNamespace(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLabelNamespace", t.GetAtt__LabelNamespace())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_WAFv2_RuleGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_WAFv2_RuleGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_WAFv2_RuleGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
