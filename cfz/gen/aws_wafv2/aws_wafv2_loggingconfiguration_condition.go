// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_wafv2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_WAFv2_LoggingConfiguration_Condition__Type is the CloudFormation type for AWS::WAFv2::LoggingConfiguration.Condition.
	AWS_WAFv2_LoggingConfiguration_Condition__Type = "AWS::WAFv2::LoggingConfiguration.Condition"
)

var (
	// AWS_WAFv2_LoggingConfiguration_Condition__PropertiesMap reports all the CloudFormation properties for AWS::WAFv2::LoggingConfiguration.Condition.
	AWS_WAFv2_LoggingConfiguration_Condition__PropertiesMap = struct {
		ActionCondition    string
		LabelNameCondition string
	}{
		ActionCondition:    "ActionCondition",
		LabelNameCondition: "LabelNameCondition",
	}

	// AWS_WAFv2_LoggingConfiguration_Condition__PropertiesSlice reports all the CloudFormation properties for AWS::WAFv2::LoggingConfiguration.Condition.
	AWS_WAFv2_LoggingConfiguration_Condition__PropertiesSlice = []string{
		AWS_WAFv2_LoggingConfiguration_Condition__PropertiesMap.ActionCondition,
		AWS_WAFv2_LoggingConfiguration_Condition__PropertiesMap.LabelNameCondition,
	}
)

// AWS_WAFv2_LoggingConfiguration_Condition is a binding for AWS::WAFv2::LoggingConfiguration.Condition.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-loggingconfiguration-condition.html
type AWS_WAFv2_LoggingConfiguration_Condition struct {
	// ActionCondition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-loggingconfiguration-condition.html#cfn-wafv2-loggingconfiguration-condition-actioncondition
	ActionCondition cfz.Expression[AWS_WAFv2_LoggingConfiguration_ActionCondition] `json:"ActionCondition,omitempty"`

	// LabelNameCondition is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-wafv2-loggingconfiguration-condition.html#cfn-wafv2-loggingconfiguration-condition-labelnamecondition
	LabelNameCondition cfz.Expression[AWS_WAFv2_LoggingConfiguration_LabelNameCondition] `json:"LabelNameCondition,omitempty"`
}

// New__AWS_WAFv2_LoggingConfiguration_Condition initializes a new AWS_WAFv2_LoggingConfiguration_Condition.
func New__AWS_WAFv2_LoggingConfiguration_Condition() AWS_WAFv2_LoggingConfiguration_Condition {
	return AWS_WAFv2_LoggingConfiguration_Condition{}
}

// GetType returns the CloudFormation type.
func (AWS_WAFv2_LoggingConfiguration_Condition) GetType() string {
	return AWS_WAFv2_LoggingConfiguration_Condition__Type
}

// Set__ActionCondition updates property "ActionCondition".
func (t AWS_WAFv2_LoggingConfiguration_Condition) Set__ActionCondition(v cfz.Expression[AWS_WAFv2_LoggingConfiguration_ActionCondition]) AWS_WAFv2_LoggingConfiguration_Condition {
	t.ActionCondition = v
	return t
}

// SetV__ActionCondition updates property "ActionCondition".
func (t AWS_WAFv2_LoggingConfiguration_Condition) SetV__ActionCondition(v AWS_WAFv2_LoggingConfiguration_ActionCondition) AWS_WAFv2_LoggingConfiguration_Condition {
	t.ActionCondition = cfz.V(v)
	return t
}

// Set__LabelNameCondition updates property "LabelNameCondition".
func (t AWS_WAFv2_LoggingConfiguration_Condition) Set__LabelNameCondition(v cfz.Expression[AWS_WAFv2_LoggingConfiguration_LabelNameCondition]) AWS_WAFv2_LoggingConfiguration_Condition {
	t.LabelNameCondition = v
	return t
}

// SetV__LabelNameCondition updates property "LabelNameCondition".
func (t AWS_WAFv2_LoggingConfiguration_Condition) SetV__LabelNameCondition(v AWS_WAFv2_LoggingConfiguration_LabelNameCondition) AWS_WAFv2_LoggingConfiguration_Condition {
	t.LabelNameCondition = cfz.V(v)
	return t
}
