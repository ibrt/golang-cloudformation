// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_efs

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EFS_AccessPoint)(nil)
	_ cfz.Resource                   = (*AWS_EFS_AccessPoint)(nil)
)

const (
	// AWS_EFS_AccessPoint__Type is the CloudFormation type for AWS::EFS::AccessPoint.
	AWS_EFS_AccessPoint__Type = "AWS::EFS::AccessPoint"
)

var (
	// AWS_EFS_AccessPoint__AttributesMap reports all the CloudFormation attributes for AWS::EFS::AccessPoint.
	AWS_EFS_AccessPoint__AttributesMap = struct {
		AccessPointId string
		Arn           string
	}{
		AccessPointId: "AccessPointId",
		Arn:           "Arn",
	}

	// AWS_EFS_AccessPoint__AttributesSlice reports all the CloudFormation attributes for AWS::EFS::AccessPoint.
	AWS_EFS_AccessPoint__AttributesSlice = []string{
		AWS_EFS_AccessPoint__AttributesMap.AccessPointId,
		AWS_EFS_AccessPoint__AttributesMap.Arn,
	}
)

var (
	// AWS_EFS_AccessPoint__PropertiesMap reports all the CloudFormation properties for AWS::EFS::AccessPoint.
	AWS_EFS_AccessPoint__PropertiesMap = struct {
		AccessPointTags string
		ClientToken     string
		FileSystemId    string
		PosixUser       string
		RootDirectory   string
	}{
		AccessPointTags: "AccessPointTags",
		ClientToken:     "ClientToken",
		FileSystemId:    "FileSystemId",
		PosixUser:       "PosixUser",
		RootDirectory:   "RootDirectory",
	}

	// AWS_EFS_AccessPoint__PropertiesSlice reports all the CloudFormation properties for AWS::EFS::AccessPoint.
	AWS_EFS_AccessPoint__PropertiesSlice = []string{
		AWS_EFS_AccessPoint__PropertiesMap.AccessPointTags,
		AWS_EFS_AccessPoint__PropertiesMap.ClientToken,
		AWS_EFS_AccessPoint__PropertiesMap.FileSystemId,
		AWS_EFS_AccessPoint__PropertiesMap.PosixUser,
		AWS_EFS_AccessPoint__PropertiesMap.RootDirectory,
	}
)

// AWS_EFS_AccessPoint is a binding for AWS::EFS::AccessPoint.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html
type AWS_EFS_AccessPoint struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessPointTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-accesspointtags
	AccessPointTags cfz.ExpressionSlice[AWS_EFS_AccessPoint_AccessPointTag] `json:"AccessPointTags,omitempty"`

	// ClientToken is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-clienttoken
	ClientToken cfz.Expression[string] `json:"ClientToken,omitempty"`

	// FileSystemId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-filesystemid
	FileSystemId cfz.Expression[string] `json:"FileSystemId,omitempty"`

	// PosixUser is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-posixuser
	PosixUser cfz.Expression[AWS_EFS_AccessPoint_PosixUser] `json:"PosixUser,omitempty"`

	// RootDirectory is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-efs-accesspoint.html#cfn-efs-accesspoint-rootdirectory
	RootDirectory cfz.Expression[AWS_EFS_AccessPoint_RootDirectory] `json:"RootDirectory,omitempty"`
}

// New__AWS_EFS_AccessPoint initializes a new *AWS_EFS_AccessPoint.
func New__AWS_EFS_AccessPoint(logicalName string) *AWS_EFS_AccessPoint {
	return &AWS_EFS_AccessPoint{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EFS_AccessPoint) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EFS_AccessPoint) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EFS_AccessPoint) GetType() string {
	return AWS_EFS_AccessPoint__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EFS_AccessPoint) Set__LogicalName(v string) *AWS_EFS_AccessPoint {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EFS_AccessPoint) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EFS_AccessPoint {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EFS_AccessPoint) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EFS_AccessPoint {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EFS_AccessPoint) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EFS_AccessPoint {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EFS_AccessPoint) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EFS_AccessPoint {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EFS_AccessPoint) Set__RequestedOutputs(v []cfz.Output) *AWS_EFS_AccessPoint {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EFS_AccessPoint) Add__RequestedOutputs(v ...cfz.Output) *AWS_EFS_AccessPoint {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessPointTags updates property "AccessPointTags".
func (t *AWS_EFS_AccessPoint) Set__AccessPointTags(v cfz.ExpressionSlice[AWS_EFS_AccessPoint_AccessPointTag]) *AWS_EFS_AccessPoint {
	t.AccessPointTags = v
	return t
}

// SetS__AccessPointTags updates property "AccessPointTags".
func (t *AWS_EFS_AccessPoint) SetS__AccessPointTags(v ...cfz.Expression[AWS_EFS_AccessPoint_AccessPointTag]) *AWS_EFS_AccessPoint {
	t.AccessPointTags = cfz.S(v...)
	return t
}

// SetSV__AccessPointTags updates property "AccessPointTags".
func (t *AWS_EFS_AccessPoint) SetSV__AccessPointTags(v ...AWS_EFS_AccessPoint_AccessPointTag) *AWS_EFS_AccessPoint {
	t.AccessPointTags = cfz.SV(v...)
	return t
}

// Set__ClientToken updates property "ClientToken".
func (t *AWS_EFS_AccessPoint) Set__ClientToken(v cfz.Expression[string]) *AWS_EFS_AccessPoint {
	t.ClientToken = v
	return t
}

// SetV__ClientToken updates property "ClientToken".
func (t *AWS_EFS_AccessPoint) SetV__ClientToken(v string) *AWS_EFS_AccessPoint {
	t.ClientToken = cfz.V(v)
	return t
}

// Set__FileSystemId updates property "FileSystemId".
func (t *AWS_EFS_AccessPoint) Set__FileSystemId(v cfz.Expression[string]) *AWS_EFS_AccessPoint {
	t.FileSystemId = v
	return t
}

// SetV__FileSystemId updates property "FileSystemId".
func (t *AWS_EFS_AccessPoint) SetV__FileSystemId(v string) *AWS_EFS_AccessPoint {
	t.FileSystemId = cfz.V(v)
	return t
}

// Set__PosixUser updates property "PosixUser".
func (t *AWS_EFS_AccessPoint) Set__PosixUser(v cfz.Expression[AWS_EFS_AccessPoint_PosixUser]) *AWS_EFS_AccessPoint {
	t.PosixUser = v
	return t
}

// SetV__PosixUser updates property "PosixUser".
func (t *AWS_EFS_AccessPoint) SetV__PosixUser(v AWS_EFS_AccessPoint_PosixUser) *AWS_EFS_AccessPoint {
	t.PosixUser = cfz.V(v)
	return t
}

// Set__RootDirectory updates property "RootDirectory".
func (t *AWS_EFS_AccessPoint) Set__RootDirectory(v cfz.Expression[AWS_EFS_AccessPoint_RootDirectory]) *AWS_EFS_AccessPoint {
	t.RootDirectory = v
	return t
}

// SetV__RootDirectory updates property "RootDirectory".
func (t *AWS_EFS_AccessPoint) SetV__RootDirectory(v AWS_EFS_AccessPoint_RootDirectory) *AWS_EFS_AccessPoint {
	t.RootDirectory = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EFS_AccessPoint) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AccessPointId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AccessPointId
func (t *AWS_EFS_AccessPoint) GetAtt__AccessPointId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EFS_AccessPoint__AttributesMap.AccessPointId))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_EFS_AccessPoint) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EFS_AccessPoint__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EFS_AccessPoint) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AccessPointId returns a conventionally configured output for an attribute of this resource.
// Attribute: AccessPointId
func (t *AWS_EFS_AccessPoint) GetConventionalOutputAtt__AccessPointId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAccessPointId", t.GetAtt__AccessPointId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_EFS_AccessPoint) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EFS_AccessPoint) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EFS_AccessPoint

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EFS_AccessPoint) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
