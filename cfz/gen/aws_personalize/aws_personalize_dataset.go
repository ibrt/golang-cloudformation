// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_personalize

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Personalize_Dataset)(nil)
	_ cfz.Resource                   = (*AWS_Personalize_Dataset)(nil)
)

const (
	// AWS_Personalize_Dataset__Type is the CloudFormation type for AWS::Personalize::Dataset.
	AWS_Personalize_Dataset__Type = "AWS::Personalize::Dataset"
)

var (
	// AWS_Personalize_Dataset__AttributesMap reports all the CloudFormation attributes for AWS::Personalize::Dataset.
	AWS_Personalize_Dataset__AttributesMap = struct {
		DatasetArn string
	}{
		DatasetArn: "DatasetArn",
	}

	// AWS_Personalize_Dataset__AttributesSlice reports all the CloudFormation attributes for AWS::Personalize::Dataset.
	AWS_Personalize_Dataset__AttributesSlice = []string{
		AWS_Personalize_Dataset__AttributesMap.DatasetArn,
	}
)

var (
	// AWS_Personalize_Dataset__PropertiesMap reports all the CloudFormation properties for AWS::Personalize::Dataset.
	AWS_Personalize_Dataset__PropertiesMap = struct {
		DatasetGroupArn  string
		DatasetImportJob string
		DatasetType      string
		Name             string
		SchemaArn        string
	}{
		DatasetGroupArn:  "DatasetGroupArn",
		DatasetImportJob: "DatasetImportJob",
		DatasetType:      "DatasetType",
		Name:             "Name",
		SchemaArn:        "SchemaArn",
	}

	// AWS_Personalize_Dataset__PropertiesSlice reports all the CloudFormation properties for AWS::Personalize::Dataset.
	AWS_Personalize_Dataset__PropertiesSlice = []string{
		AWS_Personalize_Dataset__PropertiesMap.DatasetGroupArn,
		AWS_Personalize_Dataset__PropertiesMap.DatasetImportJob,
		AWS_Personalize_Dataset__PropertiesMap.DatasetType,
		AWS_Personalize_Dataset__PropertiesMap.Name,
		AWS_Personalize_Dataset__PropertiesMap.SchemaArn,
	}
)

// AWS_Personalize_Dataset is a binding for AWS::Personalize::Dataset.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html
type AWS_Personalize_Dataset struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DatasetGroupArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-datasetgrouparn
	DatasetGroupArn cfz.Expression[string] `json:"DatasetGroupArn,omitempty"`

	// DatasetImportJob is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-datasetimportjob
	DatasetImportJob cfz.Expression[AWS_Personalize_Dataset_DatasetImportJob] `json:"DatasetImportJob,omitempty"`

	// DatasetType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-datasettype
	DatasetType cfz.Expression[string] `json:"DatasetType,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// SchemaArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-dataset.html#cfn-personalize-dataset-schemaarn
	SchemaArn cfz.Expression[string] `json:"SchemaArn,omitempty"`
}

// New__AWS_Personalize_Dataset initializes a new *AWS_Personalize_Dataset.
func New__AWS_Personalize_Dataset(logicalName string) *AWS_Personalize_Dataset {
	return &AWS_Personalize_Dataset{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Personalize_Dataset) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Personalize_Dataset) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Personalize_Dataset) GetType() string {
	return AWS_Personalize_Dataset__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Personalize_Dataset) Set__LogicalName(v string) *AWS_Personalize_Dataset {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Personalize_Dataset) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Personalize_Dataset {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Personalize_Dataset) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Personalize_Dataset {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Personalize_Dataset) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Personalize_Dataset {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Personalize_Dataset) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Personalize_Dataset {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Personalize_Dataset) Set__RequestedOutputs(v []cfz.Output) *AWS_Personalize_Dataset {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Personalize_Dataset) Add__RequestedOutputs(v ...cfz.Output) *AWS_Personalize_Dataset {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DatasetGroupArn updates property "DatasetGroupArn".
func (t *AWS_Personalize_Dataset) Set__DatasetGroupArn(v cfz.Expression[string]) *AWS_Personalize_Dataset {
	t.DatasetGroupArn = v
	return t
}

// SetV__DatasetGroupArn updates property "DatasetGroupArn".
func (t *AWS_Personalize_Dataset) SetV__DatasetGroupArn(v string) *AWS_Personalize_Dataset {
	t.DatasetGroupArn = cfz.V(v)
	return t
}

// Set__DatasetImportJob updates property "DatasetImportJob".
func (t *AWS_Personalize_Dataset) Set__DatasetImportJob(v cfz.Expression[AWS_Personalize_Dataset_DatasetImportJob]) *AWS_Personalize_Dataset {
	t.DatasetImportJob = v
	return t
}

// SetV__DatasetImportJob updates property "DatasetImportJob".
func (t *AWS_Personalize_Dataset) SetV__DatasetImportJob(v AWS_Personalize_Dataset_DatasetImportJob) *AWS_Personalize_Dataset {
	t.DatasetImportJob = cfz.V(v)
	return t
}

// Set__DatasetType updates property "DatasetType".
func (t *AWS_Personalize_Dataset) Set__DatasetType(v cfz.Expression[string]) *AWS_Personalize_Dataset {
	t.DatasetType = v
	return t
}

// SetV__DatasetType updates property "DatasetType".
func (t *AWS_Personalize_Dataset) SetV__DatasetType(v string) *AWS_Personalize_Dataset {
	t.DatasetType = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Personalize_Dataset) Set__Name(v cfz.Expression[string]) *AWS_Personalize_Dataset {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Personalize_Dataset) SetV__Name(v string) *AWS_Personalize_Dataset {
	t.Name = cfz.V(v)
	return t
}

// Set__SchemaArn updates property "SchemaArn".
func (t *AWS_Personalize_Dataset) Set__SchemaArn(v cfz.Expression[string]) *AWS_Personalize_Dataset {
	t.SchemaArn = v
	return t
}

// SetV__SchemaArn updates property "SchemaArn".
func (t *AWS_Personalize_Dataset) SetV__SchemaArn(v string) *AWS_Personalize_Dataset {
	t.SchemaArn = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Personalize_Dataset) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DatasetArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DatasetArn
func (t *AWS_Personalize_Dataset) GetAtt__DatasetArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Personalize_Dataset__AttributesMap.DatasetArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Personalize_Dataset) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DatasetArn returns a conventionally configured output for an attribute of this resource.
// Attribute: DatasetArn
func (t *AWS_Personalize_Dataset) GetConventionalOutputAtt__DatasetArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDatasetArn", t.GetAtt__DatasetArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Personalize_Dataset) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Personalize_Dataset

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Personalize_Dataset) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
