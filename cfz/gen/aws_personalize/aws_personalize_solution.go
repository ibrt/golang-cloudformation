// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_personalize

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Personalize_Solution)(nil)
	_ cfz.Resource                   = (*AWS_Personalize_Solution)(nil)
)

const (
	// AWS_Personalize_Solution__Type is the CloudFormation type for AWS::Personalize::Solution.
	AWS_Personalize_Solution__Type = "AWS::Personalize::Solution"
)

var (
	// AWS_Personalize_Solution__AttributesMap reports all the CloudFormation attributes for AWS::Personalize::Solution.
	AWS_Personalize_Solution__AttributesMap = struct {
		SolutionArn string
	}{
		SolutionArn: "SolutionArn",
	}

	// AWS_Personalize_Solution__AttributesSlice reports all the CloudFormation attributes for AWS::Personalize::Solution.
	AWS_Personalize_Solution__AttributesSlice = []string{
		AWS_Personalize_Solution__AttributesMap.SolutionArn,
	}
)

var (
	// AWS_Personalize_Solution__PropertiesMap reports all the CloudFormation properties for AWS::Personalize::Solution.
	AWS_Personalize_Solution__PropertiesMap = struct {
		DatasetGroupArn string
		EventType       string
		Name            string
		PerformAutoML   string
		PerformHPO      string
		RecipeArn       string
		SolutionConfig  string
	}{
		DatasetGroupArn: "DatasetGroupArn",
		EventType:       "EventType",
		Name:            "Name",
		PerformAutoML:   "PerformAutoML",
		PerformHPO:      "PerformHPO",
		RecipeArn:       "RecipeArn",
		SolutionConfig:  "SolutionConfig",
	}

	// AWS_Personalize_Solution__PropertiesSlice reports all the CloudFormation properties for AWS::Personalize::Solution.
	AWS_Personalize_Solution__PropertiesSlice = []string{
		AWS_Personalize_Solution__PropertiesMap.DatasetGroupArn,
		AWS_Personalize_Solution__PropertiesMap.EventType,
		AWS_Personalize_Solution__PropertiesMap.Name,
		AWS_Personalize_Solution__PropertiesMap.PerformAutoML,
		AWS_Personalize_Solution__PropertiesMap.PerformHPO,
		AWS_Personalize_Solution__PropertiesMap.RecipeArn,
		AWS_Personalize_Solution__PropertiesMap.SolutionConfig,
	}
)

// AWS_Personalize_Solution is a binding for AWS::Personalize::Solution.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html
type AWS_Personalize_Solution struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DatasetGroupArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-datasetgrouparn
	DatasetGroupArn cfz.Expression[string] `json:"DatasetGroupArn,omitempty"`

	// EventType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-eventtype
	EventType cfz.Expression[string] `json:"EventType,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// PerformAutoML is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-performautoml
	PerformAutoML cfz.Expression[bool] `json:"PerformAutoML,omitempty"`

	// PerformHPO is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-performhpo
	PerformHPO cfz.Expression[bool] `json:"PerformHPO,omitempty"`

	// RecipeArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-recipearn
	RecipeArn cfz.Expression[string] `json:"RecipeArn,omitempty"`

	// SolutionConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-personalize-solution.html#cfn-personalize-solution-solutionconfig
	SolutionConfig cfz.Expression[AWS_Personalize_Solution_SolutionConfig] `json:"SolutionConfig,omitempty"`
}

// New__AWS_Personalize_Solution initializes a new *AWS_Personalize_Solution.
func New__AWS_Personalize_Solution(logicalName string) *AWS_Personalize_Solution {
	return &AWS_Personalize_Solution{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Personalize_Solution) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Personalize_Solution) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Personalize_Solution) GetType() string {
	return AWS_Personalize_Solution__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Personalize_Solution) Set__LogicalName(v string) *AWS_Personalize_Solution {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Personalize_Solution) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Personalize_Solution {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Personalize_Solution) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Personalize_Solution {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Personalize_Solution) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Personalize_Solution {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Personalize_Solution) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Personalize_Solution {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Personalize_Solution) Set__RequestedOutputs(v []cfz.Output) *AWS_Personalize_Solution {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Personalize_Solution) Add__RequestedOutputs(v ...cfz.Output) *AWS_Personalize_Solution {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DatasetGroupArn updates property "DatasetGroupArn".
func (t *AWS_Personalize_Solution) Set__DatasetGroupArn(v cfz.Expression[string]) *AWS_Personalize_Solution {
	t.DatasetGroupArn = v
	return t
}

// SetV__DatasetGroupArn updates property "DatasetGroupArn".
func (t *AWS_Personalize_Solution) SetV__DatasetGroupArn(v string) *AWS_Personalize_Solution {
	t.DatasetGroupArn = cfz.V(v)
	return t
}

// Set__EventType updates property "EventType".
func (t *AWS_Personalize_Solution) Set__EventType(v cfz.Expression[string]) *AWS_Personalize_Solution {
	t.EventType = v
	return t
}

// SetV__EventType updates property "EventType".
func (t *AWS_Personalize_Solution) SetV__EventType(v string) *AWS_Personalize_Solution {
	t.EventType = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Personalize_Solution) Set__Name(v cfz.Expression[string]) *AWS_Personalize_Solution {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Personalize_Solution) SetV__Name(v string) *AWS_Personalize_Solution {
	t.Name = cfz.V(v)
	return t
}

// Set__PerformAutoML updates property "PerformAutoML".
func (t *AWS_Personalize_Solution) Set__PerformAutoML(v cfz.Expression[bool]) *AWS_Personalize_Solution {
	t.PerformAutoML = v
	return t
}

// SetV__PerformAutoML updates property "PerformAutoML".
func (t *AWS_Personalize_Solution) SetV__PerformAutoML(v bool) *AWS_Personalize_Solution {
	t.PerformAutoML = cfz.V(v)
	return t
}

// Set__PerformHPO updates property "PerformHPO".
func (t *AWS_Personalize_Solution) Set__PerformHPO(v cfz.Expression[bool]) *AWS_Personalize_Solution {
	t.PerformHPO = v
	return t
}

// SetV__PerformHPO updates property "PerformHPO".
func (t *AWS_Personalize_Solution) SetV__PerformHPO(v bool) *AWS_Personalize_Solution {
	t.PerformHPO = cfz.V(v)
	return t
}

// Set__RecipeArn updates property "RecipeArn".
func (t *AWS_Personalize_Solution) Set__RecipeArn(v cfz.Expression[string]) *AWS_Personalize_Solution {
	t.RecipeArn = v
	return t
}

// SetV__RecipeArn updates property "RecipeArn".
func (t *AWS_Personalize_Solution) SetV__RecipeArn(v string) *AWS_Personalize_Solution {
	t.RecipeArn = cfz.V(v)
	return t
}

// Set__SolutionConfig updates property "SolutionConfig".
func (t *AWS_Personalize_Solution) Set__SolutionConfig(v cfz.Expression[AWS_Personalize_Solution_SolutionConfig]) *AWS_Personalize_Solution {
	t.SolutionConfig = v
	return t
}

// SetV__SolutionConfig updates property "SolutionConfig".
func (t *AWS_Personalize_Solution) SetV__SolutionConfig(v AWS_Personalize_Solution_SolutionConfig) *AWS_Personalize_Solution {
	t.SolutionConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Personalize_Solution) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__SolutionArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SolutionArn
func (t *AWS_Personalize_Solution) GetAtt__SolutionArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Personalize_Solution__AttributesMap.SolutionArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Personalize_Solution) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SolutionArn returns a conventionally configured output for an attribute of this resource.
// Attribute: SolutionArn
func (t *AWS_Personalize_Solution) GetConventionalOutputAtt__SolutionArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSolutionArn", t.GetAtt__SolutionArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Personalize_Solution) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Personalize_Solution

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Personalize_Solution) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
