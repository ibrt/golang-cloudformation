// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_deadline

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Deadline_Monitor)(nil)
	_ cfz.Resource                   = (*AWS_Deadline_Monitor)(nil)
)

const (
	// AWS_Deadline_Monitor__Type is the CloudFormation type for AWS::Deadline::Monitor.
	AWS_Deadline_Monitor__Type = "AWS::Deadline::Monitor"
)

var (
	// AWS_Deadline_Monitor__AttributesMap reports all the CloudFormation attributes for AWS::Deadline::Monitor.
	AWS_Deadline_Monitor__AttributesMap = struct {
		Arn                          string
		IdentityCenterApplicationArn string
		MonitorId                    string
		Url                          string
	}{
		Arn:                          "Arn",
		IdentityCenterApplicationArn: "IdentityCenterApplicationArn",
		MonitorId:                    "MonitorId",
		Url:                          "Url",
	}

	// AWS_Deadline_Monitor__AttributesSlice reports all the CloudFormation attributes for AWS::Deadline::Monitor.
	AWS_Deadline_Monitor__AttributesSlice = []string{
		AWS_Deadline_Monitor__AttributesMap.Arn,
		AWS_Deadline_Monitor__AttributesMap.IdentityCenterApplicationArn,
		AWS_Deadline_Monitor__AttributesMap.MonitorId,
		AWS_Deadline_Monitor__AttributesMap.Url,
	}
)

var (
	// AWS_Deadline_Monitor__PropertiesMap reports all the CloudFormation properties for AWS::Deadline::Monitor.
	AWS_Deadline_Monitor__PropertiesMap = struct {
		DisplayName               string
		IdentityCenterInstanceArn string
		RoleArn                   string
		Subdomain                 string
	}{
		DisplayName:               "DisplayName",
		IdentityCenterInstanceArn: "IdentityCenterInstanceArn",
		RoleArn:                   "RoleArn",
		Subdomain:                 "Subdomain",
	}

	// AWS_Deadline_Monitor__PropertiesSlice reports all the CloudFormation properties for AWS::Deadline::Monitor.
	AWS_Deadline_Monitor__PropertiesSlice = []string{
		AWS_Deadline_Monitor__PropertiesMap.DisplayName,
		AWS_Deadline_Monitor__PropertiesMap.IdentityCenterInstanceArn,
		AWS_Deadline_Monitor__PropertiesMap.RoleArn,
		AWS_Deadline_Monitor__PropertiesMap.Subdomain,
	}
)

// AWS_Deadline_Monitor is a binding for AWS::Deadline::Monitor.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html
type AWS_Deadline_Monitor struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DisplayName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html#cfn-deadline-monitor-displayname
	DisplayName cfz.Expression[string] `json:"DisplayName,omitempty"`

	// IdentityCenterInstanceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html#cfn-deadline-monitor-identitycenterinstancearn
	IdentityCenterInstanceArn cfz.Expression[string] `json:"IdentityCenterInstanceArn,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html#cfn-deadline-monitor-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// Subdomain is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-monitor.html#cfn-deadline-monitor-subdomain
	Subdomain cfz.Expression[string] `json:"Subdomain,omitempty"`
}

// New__AWS_Deadline_Monitor initializes a new *AWS_Deadline_Monitor.
func New__AWS_Deadline_Monitor(logicalName string) *AWS_Deadline_Monitor {
	return &AWS_Deadline_Monitor{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Deadline_Monitor) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Deadline_Monitor) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Deadline_Monitor) GetType() string {
	return AWS_Deadline_Monitor__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Deadline_Monitor) Set__LogicalName(v string) *AWS_Deadline_Monitor {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Deadline_Monitor) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Deadline_Monitor {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Deadline_Monitor) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Deadline_Monitor {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Deadline_Monitor) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Deadline_Monitor {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Deadline_Monitor) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Deadline_Monitor {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Deadline_Monitor) Set__RequestedOutputs(v []cfz.Output) *AWS_Deadline_Monitor {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Deadline_Monitor) Add__RequestedOutputs(v ...cfz.Output) *AWS_Deadline_Monitor {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DisplayName updates property "DisplayName".
func (t *AWS_Deadline_Monitor) Set__DisplayName(v cfz.Expression[string]) *AWS_Deadline_Monitor {
	t.DisplayName = v
	return t
}

// SetV__DisplayName updates property "DisplayName".
func (t *AWS_Deadline_Monitor) SetV__DisplayName(v string) *AWS_Deadline_Monitor {
	t.DisplayName = cfz.V(v)
	return t
}

// Set__IdentityCenterInstanceArn updates property "IdentityCenterInstanceArn".
func (t *AWS_Deadline_Monitor) Set__IdentityCenterInstanceArn(v cfz.Expression[string]) *AWS_Deadline_Monitor {
	t.IdentityCenterInstanceArn = v
	return t
}

// SetV__IdentityCenterInstanceArn updates property "IdentityCenterInstanceArn".
func (t *AWS_Deadline_Monitor) SetV__IdentityCenterInstanceArn(v string) *AWS_Deadline_Monitor {
	t.IdentityCenterInstanceArn = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_Deadline_Monitor) Set__RoleArn(v cfz.Expression[string]) *AWS_Deadline_Monitor {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_Deadline_Monitor) SetV__RoleArn(v string) *AWS_Deadline_Monitor {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__Subdomain updates property "Subdomain".
func (t *AWS_Deadline_Monitor) Set__Subdomain(v cfz.Expression[string]) *AWS_Deadline_Monitor {
	t.Subdomain = v
	return t
}

// SetV__Subdomain updates property "Subdomain".
func (t *AWS_Deadline_Monitor) SetV__Subdomain(v string) *AWS_Deadline_Monitor {
	t.Subdomain = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Deadline_Monitor) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Deadline_Monitor) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Deadline_Monitor__AttributesMap.Arn))
}

// GetAtt__IdentityCenterApplicationArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IdentityCenterApplicationArn
func (t *AWS_Deadline_Monitor) GetAtt__IdentityCenterApplicationArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Deadline_Monitor__AttributesMap.IdentityCenterApplicationArn))
}

// GetAtt__MonitorId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MonitorId
func (t *AWS_Deadline_Monitor) GetAtt__MonitorId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Deadline_Monitor__AttributesMap.MonitorId))
}

// GetAtt__Url returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Url
func (t *AWS_Deadline_Monitor) GetAtt__Url() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Deadline_Monitor__AttributesMap.Url))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Deadline_Monitor) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Deadline_Monitor) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IdentityCenterApplicationArn returns a conventionally configured output for an attribute of this resource.
// Attribute: IdentityCenterApplicationArn
func (t *AWS_Deadline_Monitor) GetConventionalOutputAtt__IdentityCenterApplicationArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIdentityCenterApplicationArn", t.GetAtt__IdentityCenterApplicationArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MonitorId returns a conventionally configured output for an attribute of this resource.
// Attribute: MonitorId
func (t *AWS_Deadline_Monitor) GetConventionalOutputAtt__MonitorId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMonitorId", t.GetAtt__MonitorId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Url returns a conventionally configured output for an attribute of this resource.
// Attribute: Url
func (t *AWS_Deadline_Monitor) GetConventionalOutputAtt__Url(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUrl", t.GetAtt__Url())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Deadline_Monitor) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Deadline_Monitor

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Deadline_Monitor) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
