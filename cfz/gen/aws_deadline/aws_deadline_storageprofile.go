// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_deadline

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Deadline_StorageProfile)(nil)
	_ cfz.Resource                   = (*AWS_Deadline_StorageProfile)(nil)
)

const (
	// AWS_Deadline_StorageProfile__Type is the CloudFormation type for AWS::Deadline::StorageProfile.
	AWS_Deadline_StorageProfile__Type = "AWS::Deadline::StorageProfile"
)

var (
	// AWS_Deadline_StorageProfile__AttributesMap reports all the CloudFormation attributes for AWS::Deadline::StorageProfile.
	AWS_Deadline_StorageProfile__AttributesMap = struct {
		StorageProfileId string
	}{
		StorageProfileId: "StorageProfileId",
	}

	// AWS_Deadline_StorageProfile__AttributesSlice reports all the CloudFormation attributes for AWS::Deadline::StorageProfile.
	AWS_Deadline_StorageProfile__AttributesSlice = []string{
		AWS_Deadline_StorageProfile__AttributesMap.StorageProfileId,
	}
)

var (
	// AWS_Deadline_StorageProfile__PropertiesMap reports all the CloudFormation properties for AWS::Deadline::StorageProfile.
	AWS_Deadline_StorageProfile__PropertiesMap = struct {
		DisplayName         string
		FarmId              string
		FileSystemLocations string
		OsFamily            string
	}{
		DisplayName:         "DisplayName",
		FarmId:              "FarmId",
		FileSystemLocations: "FileSystemLocations",
		OsFamily:            "OsFamily",
	}

	// AWS_Deadline_StorageProfile__PropertiesSlice reports all the CloudFormation properties for AWS::Deadline::StorageProfile.
	AWS_Deadline_StorageProfile__PropertiesSlice = []string{
		AWS_Deadline_StorageProfile__PropertiesMap.DisplayName,
		AWS_Deadline_StorageProfile__PropertiesMap.FarmId,
		AWS_Deadline_StorageProfile__PropertiesMap.FileSystemLocations,
		AWS_Deadline_StorageProfile__PropertiesMap.OsFamily,
	}
)

// AWS_Deadline_StorageProfile is a binding for AWS::Deadline::StorageProfile.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html
type AWS_Deadline_StorageProfile struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DisplayName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html#cfn-deadline-storageprofile-displayname
	DisplayName cfz.Expression[string] `json:"DisplayName,omitempty"`

	// FarmId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html#cfn-deadline-storageprofile-farmid
	FarmId cfz.Expression[string] `json:"FarmId,omitempty"`

	// FileSystemLocations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html#cfn-deadline-storageprofile-filesystemlocations
	FileSystemLocations cfz.ExpressionSlice[AWS_Deadline_StorageProfile_FileSystemLocation] `json:"FileSystemLocations,omitempty"`

	// OsFamily is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-deadline-storageprofile.html#cfn-deadline-storageprofile-osfamily
	OsFamily cfz.Expression[string] `json:"OsFamily,omitempty"`
}

// New__AWS_Deadline_StorageProfile initializes a new *AWS_Deadline_StorageProfile.
func New__AWS_Deadline_StorageProfile(logicalName string) *AWS_Deadline_StorageProfile {
	return &AWS_Deadline_StorageProfile{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Deadline_StorageProfile) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Deadline_StorageProfile) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Deadline_StorageProfile) GetType() string {
	return AWS_Deadline_StorageProfile__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Deadline_StorageProfile) Set__LogicalName(v string) *AWS_Deadline_StorageProfile {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Deadline_StorageProfile) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Deadline_StorageProfile {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Deadline_StorageProfile) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Deadline_StorageProfile {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Deadline_StorageProfile) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Deadline_StorageProfile {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Deadline_StorageProfile) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Deadline_StorageProfile {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Deadline_StorageProfile) Set__RequestedOutputs(v []cfz.Output) *AWS_Deadline_StorageProfile {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Deadline_StorageProfile) Add__RequestedOutputs(v ...cfz.Output) *AWS_Deadline_StorageProfile {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DisplayName updates property "DisplayName".
func (t *AWS_Deadline_StorageProfile) Set__DisplayName(v cfz.Expression[string]) *AWS_Deadline_StorageProfile {
	t.DisplayName = v
	return t
}

// SetV__DisplayName updates property "DisplayName".
func (t *AWS_Deadline_StorageProfile) SetV__DisplayName(v string) *AWS_Deadline_StorageProfile {
	t.DisplayName = cfz.V(v)
	return t
}

// Set__FarmId updates property "FarmId".
func (t *AWS_Deadline_StorageProfile) Set__FarmId(v cfz.Expression[string]) *AWS_Deadline_StorageProfile {
	t.FarmId = v
	return t
}

// SetV__FarmId updates property "FarmId".
func (t *AWS_Deadline_StorageProfile) SetV__FarmId(v string) *AWS_Deadline_StorageProfile {
	t.FarmId = cfz.V(v)
	return t
}

// Set__FileSystemLocations updates property "FileSystemLocations".
func (t *AWS_Deadline_StorageProfile) Set__FileSystemLocations(v cfz.ExpressionSlice[AWS_Deadline_StorageProfile_FileSystemLocation]) *AWS_Deadline_StorageProfile {
	t.FileSystemLocations = v
	return t
}

// SetS__FileSystemLocations updates property "FileSystemLocations".
func (t *AWS_Deadline_StorageProfile) SetS__FileSystemLocations(v ...cfz.Expression[AWS_Deadline_StorageProfile_FileSystemLocation]) *AWS_Deadline_StorageProfile {
	t.FileSystemLocations = cfz.S(v...)
	return t
}

// SetSV__FileSystemLocations updates property "FileSystemLocations".
func (t *AWS_Deadline_StorageProfile) SetSV__FileSystemLocations(v ...AWS_Deadline_StorageProfile_FileSystemLocation) *AWS_Deadline_StorageProfile {
	t.FileSystemLocations = cfz.SV(v...)
	return t
}

// Set__OsFamily updates property "OsFamily".
func (t *AWS_Deadline_StorageProfile) Set__OsFamily(v cfz.Expression[string]) *AWS_Deadline_StorageProfile {
	t.OsFamily = v
	return t
}

// SetV__OsFamily updates property "OsFamily".
func (t *AWS_Deadline_StorageProfile) SetV__OsFamily(v string) *AWS_Deadline_StorageProfile {
	t.OsFamily = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Deadline_StorageProfile) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__StorageProfileId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StorageProfileId
func (t *AWS_Deadline_StorageProfile) GetAtt__StorageProfileId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Deadline_StorageProfile__AttributesMap.StorageProfileId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Deadline_StorageProfile) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StorageProfileId returns a conventionally configured output for an attribute of this resource.
// Attribute: StorageProfileId
func (t *AWS_Deadline_StorageProfile) GetConventionalOutputAtt__StorageProfileId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStorageProfileId", t.GetAtt__StorageProfileId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Deadline_StorageProfile) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Deadline_StorageProfile

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Deadline_StorageProfile) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
