// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_paymentcryptography

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_PaymentCryptography_Key_KeyModesOfUse__Type is the CloudFormation type for AWS::PaymentCryptography::Key.KeyModesOfUse.
	AWS_PaymentCryptography_Key_KeyModesOfUse__Type = "AWS::PaymentCryptography::Key.KeyModesOfUse"
)

var (
	// AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap reports all the CloudFormation properties for AWS::PaymentCryptography::Key.KeyModesOfUse.
	AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap = struct {
		Decrypt        string
		DeriveKey      string
		Encrypt        string
		Generate       string
		NoRestrictions string
		Sign           string
		Unwrap         string
		Verify         string
		Wrap           string
	}{
		Decrypt:        "Decrypt",
		DeriveKey:      "DeriveKey",
		Encrypt:        "Encrypt",
		Generate:       "Generate",
		NoRestrictions: "NoRestrictions",
		Sign:           "Sign",
		Unwrap:         "Unwrap",
		Verify:         "Verify",
		Wrap:           "Wrap",
	}

	// AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesSlice reports all the CloudFormation properties for AWS::PaymentCryptography::Key.KeyModesOfUse.
	AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesSlice = []string{
		AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap.Decrypt,
		AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap.DeriveKey,
		AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap.Encrypt,
		AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap.Generate,
		AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap.NoRestrictions,
		AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap.Sign,
		AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap.Unwrap,
		AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap.Verify,
		AWS_PaymentCryptography_Key_KeyModesOfUse__PropertiesMap.Wrap,
	}
)

// AWS_PaymentCryptography_Key_KeyModesOfUse is a binding for AWS::PaymentCryptography::Key.KeyModesOfUse.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html
type AWS_PaymentCryptography_Key_KeyModesOfUse struct {
	// Decrypt is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html#cfn-paymentcryptography-key-keymodesofuse-decrypt
	Decrypt cfz.Expression[bool] `json:"Decrypt,omitempty"`

	// DeriveKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html#cfn-paymentcryptography-key-keymodesofuse-derivekey
	DeriveKey cfz.Expression[bool] `json:"DeriveKey,omitempty"`

	// Encrypt is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html#cfn-paymentcryptography-key-keymodesofuse-encrypt
	Encrypt cfz.Expression[bool] `json:"Encrypt,omitempty"`

	// Generate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html#cfn-paymentcryptography-key-keymodesofuse-generate
	Generate cfz.Expression[bool] `json:"Generate,omitempty"`

	// NoRestrictions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html#cfn-paymentcryptography-key-keymodesofuse-norestrictions
	NoRestrictions cfz.Expression[bool] `json:"NoRestrictions,omitempty"`

	// Sign is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html#cfn-paymentcryptography-key-keymodesofuse-sign
	Sign cfz.Expression[bool] `json:"Sign,omitempty"`

	// Unwrap is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html#cfn-paymentcryptography-key-keymodesofuse-unwrap
	Unwrap cfz.Expression[bool] `json:"Unwrap,omitempty"`

	// Verify is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html#cfn-paymentcryptography-key-keymodesofuse-verify
	Verify cfz.Expression[bool] `json:"Verify,omitempty"`

	// Wrap is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-paymentcryptography-key-keymodesofuse.html#cfn-paymentcryptography-key-keymodesofuse-wrap
	Wrap cfz.Expression[bool] `json:"Wrap,omitempty"`
}

// New__AWS_PaymentCryptography_Key_KeyModesOfUse initializes a new AWS_PaymentCryptography_Key_KeyModesOfUse.
func New__AWS_PaymentCryptography_Key_KeyModesOfUse() AWS_PaymentCryptography_Key_KeyModesOfUse {
	return AWS_PaymentCryptography_Key_KeyModesOfUse{}
}

// GetType returns the CloudFormation type.
func (AWS_PaymentCryptography_Key_KeyModesOfUse) GetType() string {
	return AWS_PaymentCryptography_Key_KeyModesOfUse__Type
}

// Set__Decrypt updates property "Decrypt".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) Set__Decrypt(v cfz.Expression[bool]) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Decrypt = v
	return t
}

// SetV__Decrypt updates property "Decrypt".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) SetV__Decrypt(v bool) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Decrypt = cfz.V(v)
	return t
}

// Set__DeriveKey updates property "DeriveKey".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) Set__DeriveKey(v cfz.Expression[bool]) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.DeriveKey = v
	return t
}

// SetV__DeriveKey updates property "DeriveKey".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) SetV__DeriveKey(v bool) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.DeriveKey = cfz.V(v)
	return t
}

// Set__Encrypt updates property "Encrypt".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) Set__Encrypt(v cfz.Expression[bool]) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Encrypt = v
	return t
}

// SetV__Encrypt updates property "Encrypt".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) SetV__Encrypt(v bool) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Encrypt = cfz.V(v)
	return t
}

// Set__Generate updates property "Generate".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) Set__Generate(v cfz.Expression[bool]) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Generate = v
	return t
}

// SetV__Generate updates property "Generate".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) SetV__Generate(v bool) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Generate = cfz.V(v)
	return t
}

// Set__NoRestrictions updates property "NoRestrictions".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) Set__NoRestrictions(v cfz.Expression[bool]) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.NoRestrictions = v
	return t
}

// SetV__NoRestrictions updates property "NoRestrictions".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) SetV__NoRestrictions(v bool) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.NoRestrictions = cfz.V(v)
	return t
}

// Set__Sign updates property "Sign".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) Set__Sign(v cfz.Expression[bool]) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Sign = v
	return t
}

// SetV__Sign updates property "Sign".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) SetV__Sign(v bool) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Sign = cfz.V(v)
	return t
}

// Set__Unwrap updates property "Unwrap".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) Set__Unwrap(v cfz.Expression[bool]) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Unwrap = v
	return t
}

// SetV__Unwrap updates property "Unwrap".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) SetV__Unwrap(v bool) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Unwrap = cfz.V(v)
	return t
}

// Set__Verify updates property "Verify".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) Set__Verify(v cfz.Expression[bool]) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Verify = v
	return t
}

// SetV__Verify updates property "Verify".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) SetV__Verify(v bool) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Verify = cfz.V(v)
	return t
}

// Set__Wrap updates property "Wrap".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) Set__Wrap(v cfz.Expression[bool]) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Wrap = v
	return t
}

// SetV__Wrap updates property "Wrap".
func (t AWS_PaymentCryptography_Key_KeyModesOfUse) SetV__Wrap(v bool) AWS_PaymentCryptography_Key_KeyModesOfUse {
	t.Wrap = cfz.V(v)
	return t
}
