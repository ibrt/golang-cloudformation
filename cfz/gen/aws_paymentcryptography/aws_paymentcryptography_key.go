// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_paymentcryptography

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_PaymentCryptography_Key)(nil)
	_ cfz.Resource                   = (*AWS_PaymentCryptography_Key)(nil)
)

const (
	// AWS_PaymentCryptography_Key__Type is the CloudFormation type for AWS::PaymentCryptography::Key.
	AWS_PaymentCryptography_Key__Type = "AWS::PaymentCryptography::Key"
)

var (
	// AWS_PaymentCryptography_Key__AttributesMap reports all the CloudFormation attributes for AWS::PaymentCryptography::Key.
	AWS_PaymentCryptography_Key__AttributesMap = struct {
		KeyIdentifier string
		KeyOrigin     string
		KeyState      string
	}{
		KeyIdentifier: "KeyIdentifier",
		KeyOrigin:     "KeyOrigin",
		KeyState:      "KeyState",
	}

	// AWS_PaymentCryptography_Key__AttributesSlice reports all the CloudFormation attributes for AWS::PaymentCryptography::Key.
	AWS_PaymentCryptography_Key__AttributesSlice = []string{
		AWS_PaymentCryptography_Key__AttributesMap.KeyIdentifier,
		AWS_PaymentCryptography_Key__AttributesMap.KeyOrigin,
		AWS_PaymentCryptography_Key__AttributesMap.KeyState,
	}
)

var (
	// AWS_PaymentCryptography_Key__PropertiesMap reports all the CloudFormation properties for AWS::PaymentCryptography::Key.
	AWS_PaymentCryptography_Key__PropertiesMap = struct {
		Enabled                string
		Exportable             string
		KeyAttributes          string
		KeyCheckValueAlgorithm string
		Tags                   string
	}{
		Enabled:                "Enabled",
		Exportable:             "Exportable",
		KeyAttributes:          "KeyAttributes",
		KeyCheckValueAlgorithm: "KeyCheckValueAlgorithm",
		Tags:                   "Tags",
	}

	// AWS_PaymentCryptography_Key__PropertiesSlice reports all the CloudFormation properties for AWS::PaymentCryptography::Key.
	AWS_PaymentCryptography_Key__PropertiesSlice = []string{
		AWS_PaymentCryptography_Key__PropertiesMap.Enabled,
		AWS_PaymentCryptography_Key__PropertiesMap.Exportable,
		AWS_PaymentCryptography_Key__PropertiesMap.KeyAttributes,
		AWS_PaymentCryptography_Key__PropertiesMap.KeyCheckValueAlgorithm,
		AWS_PaymentCryptography_Key__PropertiesMap.Tags,
	}
)

// AWS_PaymentCryptography_Key is a binding for AWS::PaymentCryptography::Key.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html
type AWS_PaymentCryptography_Key struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Enabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-enabled
	Enabled cfz.Expression[bool] `json:"Enabled,omitempty"`

	// Exportable is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-exportable
	Exportable cfz.Expression[bool] `json:"Exportable,omitempty"`

	// KeyAttributes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-keyattributes
	KeyAttributes cfz.Expression[AWS_PaymentCryptography_Key_KeyAttributes] `json:"KeyAttributes,omitempty"`

	// KeyCheckValueAlgorithm is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-keycheckvaluealgorithm
	KeyCheckValueAlgorithm cfz.Expression[string] `json:"KeyCheckValueAlgorithm,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-paymentcryptography-key.html#cfn-paymentcryptography-key-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_PaymentCryptography_Key initializes a new *AWS_PaymentCryptography_Key.
func New__AWS_PaymentCryptography_Key(logicalName string) *AWS_PaymentCryptography_Key {
	return &AWS_PaymentCryptography_Key{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_PaymentCryptography_Key) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_PaymentCryptography_Key) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_PaymentCryptography_Key) GetType() string {
	return AWS_PaymentCryptography_Key__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_PaymentCryptography_Key) Set__LogicalName(v string) *AWS_PaymentCryptography_Key {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_PaymentCryptography_Key) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_PaymentCryptography_Key {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_PaymentCryptography_Key) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_PaymentCryptography_Key {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_PaymentCryptography_Key) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_PaymentCryptography_Key {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_PaymentCryptography_Key) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_PaymentCryptography_Key {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_PaymentCryptography_Key) Set__RequestedOutputs(v []cfz.Output) *AWS_PaymentCryptography_Key {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_PaymentCryptography_Key) Add__RequestedOutputs(v ...cfz.Output) *AWS_PaymentCryptography_Key {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Enabled updates property "Enabled".
func (t *AWS_PaymentCryptography_Key) Set__Enabled(v cfz.Expression[bool]) *AWS_PaymentCryptography_Key {
	t.Enabled = v
	return t
}

// SetV__Enabled updates property "Enabled".
func (t *AWS_PaymentCryptography_Key) SetV__Enabled(v bool) *AWS_PaymentCryptography_Key {
	t.Enabled = cfz.V(v)
	return t
}

// Set__Exportable updates property "Exportable".
func (t *AWS_PaymentCryptography_Key) Set__Exportable(v cfz.Expression[bool]) *AWS_PaymentCryptography_Key {
	t.Exportable = v
	return t
}

// SetV__Exportable updates property "Exportable".
func (t *AWS_PaymentCryptography_Key) SetV__Exportable(v bool) *AWS_PaymentCryptography_Key {
	t.Exportable = cfz.V(v)
	return t
}

// Set__KeyAttributes updates property "KeyAttributes".
func (t *AWS_PaymentCryptography_Key) Set__KeyAttributes(v cfz.Expression[AWS_PaymentCryptography_Key_KeyAttributes]) *AWS_PaymentCryptography_Key {
	t.KeyAttributes = v
	return t
}

// SetV__KeyAttributes updates property "KeyAttributes".
func (t *AWS_PaymentCryptography_Key) SetV__KeyAttributes(v AWS_PaymentCryptography_Key_KeyAttributes) *AWS_PaymentCryptography_Key {
	t.KeyAttributes = cfz.V(v)
	return t
}

// Set__KeyCheckValueAlgorithm updates property "KeyCheckValueAlgorithm".
func (t *AWS_PaymentCryptography_Key) Set__KeyCheckValueAlgorithm(v cfz.Expression[string]) *AWS_PaymentCryptography_Key {
	t.KeyCheckValueAlgorithm = v
	return t
}

// SetV__KeyCheckValueAlgorithm updates property "KeyCheckValueAlgorithm".
func (t *AWS_PaymentCryptography_Key) SetV__KeyCheckValueAlgorithm(v string) *AWS_PaymentCryptography_Key {
	t.KeyCheckValueAlgorithm = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_PaymentCryptography_Key) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_PaymentCryptography_Key {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_PaymentCryptography_Key) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_PaymentCryptography_Key {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_PaymentCryptography_Key) SetSV__Tags(v ...cfz.Tag) *AWS_PaymentCryptography_Key {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_PaymentCryptography_Key) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__KeyIdentifier returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: KeyIdentifier
func (t *AWS_PaymentCryptography_Key) GetAtt__KeyIdentifier() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PaymentCryptography_Key__AttributesMap.KeyIdentifier))
}

// GetAtt__KeyOrigin returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: KeyOrigin
func (t *AWS_PaymentCryptography_Key) GetAtt__KeyOrigin() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PaymentCryptography_Key__AttributesMap.KeyOrigin))
}

// GetAtt__KeyState returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: KeyState
func (t *AWS_PaymentCryptography_Key) GetAtt__KeyState() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_PaymentCryptography_Key__AttributesMap.KeyState))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_PaymentCryptography_Key) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__KeyIdentifier returns a conventionally configured output for an attribute of this resource.
// Attribute: KeyIdentifier
func (t *AWS_PaymentCryptography_Key) GetConventionalOutputAtt__KeyIdentifier(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttKeyIdentifier", t.GetAtt__KeyIdentifier())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__KeyOrigin returns a conventionally configured output for an attribute of this resource.
// Attribute: KeyOrigin
func (t *AWS_PaymentCryptography_Key) GetConventionalOutputAtt__KeyOrigin(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttKeyOrigin", t.GetAtt__KeyOrigin())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__KeyState returns a conventionally configured output for an attribute of this resource.
// Attribute: KeyState
func (t *AWS_PaymentCryptography_Key) GetConventionalOutputAtt__KeyState(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttKeyState", t.GetAtt__KeyState())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_PaymentCryptography_Key) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_PaymentCryptography_Key

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_PaymentCryptography_Key) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
