// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudwatch

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudWatch_CompositeAlarm)(nil)
	_ cfz.Resource                   = (*AWS_CloudWatch_CompositeAlarm)(nil)
)

const (
	// AWS_CloudWatch_CompositeAlarm__Type is the CloudFormation type for AWS::CloudWatch::CompositeAlarm.
	AWS_CloudWatch_CompositeAlarm__Type = "AWS::CloudWatch::CompositeAlarm"
)

var (
	// AWS_CloudWatch_CompositeAlarm__AttributesMap reports all the CloudFormation attributes for AWS::CloudWatch::CompositeAlarm.
	AWS_CloudWatch_CompositeAlarm__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_CloudWatch_CompositeAlarm__AttributesSlice reports all the CloudFormation attributes for AWS::CloudWatch::CompositeAlarm.
	AWS_CloudWatch_CompositeAlarm__AttributesSlice = []string{
		AWS_CloudWatch_CompositeAlarm__AttributesMap.Arn,
	}
)

var (
	// AWS_CloudWatch_CompositeAlarm__PropertiesMap reports all the CloudFormation properties for AWS::CloudWatch::CompositeAlarm.
	AWS_CloudWatch_CompositeAlarm__PropertiesMap = struct {
		ActionsEnabled                   string
		ActionsSuppressor                string
		ActionsSuppressorExtensionPeriod string
		ActionsSuppressorWaitPeriod      string
		AlarmActions                     string
		AlarmDescription                 string
		AlarmName                        string
		AlarmRule                        string
		InsufficientDataActions          string
		OKActions                        string
		Tags                             string
	}{
		ActionsEnabled:                   "ActionsEnabled",
		ActionsSuppressor:                "ActionsSuppressor",
		ActionsSuppressorExtensionPeriod: "ActionsSuppressorExtensionPeriod",
		ActionsSuppressorWaitPeriod:      "ActionsSuppressorWaitPeriod",
		AlarmActions:                     "AlarmActions",
		AlarmDescription:                 "AlarmDescription",
		AlarmName:                        "AlarmName",
		AlarmRule:                        "AlarmRule",
		InsufficientDataActions:          "InsufficientDataActions",
		OKActions:                        "OKActions",
		Tags:                             "Tags",
	}

	// AWS_CloudWatch_CompositeAlarm__PropertiesSlice reports all the CloudFormation properties for AWS::CloudWatch::CompositeAlarm.
	AWS_CloudWatch_CompositeAlarm__PropertiesSlice = []string{
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.ActionsEnabled,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.ActionsSuppressor,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.ActionsSuppressorExtensionPeriod,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.ActionsSuppressorWaitPeriod,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.AlarmActions,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.AlarmDescription,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.AlarmName,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.AlarmRule,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.InsufficientDataActions,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.OKActions,
		AWS_CloudWatch_CompositeAlarm__PropertiesMap.Tags,
	}
)

// AWS_CloudWatch_CompositeAlarm is a binding for AWS::CloudWatch::CompositeAlarm.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html
type AWS_CloudWatch_CompositeAlarm struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ActionsEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionsenabled
	ActionsEnabled cfz.Expression[bool] `json:"ActionsEnabled,omitempty"`

	// ActionsSuppressor is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionssuppressor
	ActionsSuppressor cfz.Expression[string] `json:"ActionsSuppressor,omitempty"`

	// ActionsSuppressorExtensionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionssuppressorextensionperiod
	ActionsSuppressorExtensionPeriod cfz.Expression[int32] `json:"ActionsSuppressorExtensionPeriod,omitempty"`

	// ActionsSuppressorWaitPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionssuppressorwaitperiod
	ActionsSuppressorWaitPeriod cfz.Expression[int32] `json:"ActionsSuppressorWaitPeriod,omitempty"`

	// AlarmActions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmactions
	AlarmActions cfz.ExpressionSlice[string] `json:"AlarmActions,omitempty"`

	// AlarmDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmdescription
	AlarmDescription cfz.Expression[string] `json:"AlarmDescription,omitempty"`

	// AlarmName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmname
	AlarmName cfz.Expression[string] `json:"AlarmName,omitempty"`

	// AlarmRule is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmrule
	AlarmRule cfz.Expression[string] `json:"AlarmRule,omitempty"`

	// InsufficientDataActions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-insufficientdataactions
	InsufficientDataActions cfz.ExpressionSlice[string] `json:"InsufficientDataActions,omitempty"`

	// OKActions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-okactions
	OKActions cfz.ExpressionSlice[string] `json:"OKActions,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_CloudWatch_CompositeAlarm initializes a new *AWS_CloudWatch_CompositeAlarm.
func New__AWS_CloudWatch_CompositeAlarm(logicalName string) *AWS_CloudWatch_CompositeAlarm {
	return &AWS_CloudWatch_CompositeAlarm{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudWatch_CompositeAlarm) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudWatch_CompositeAlarm) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudWatch_CompositeAlarm) GetType() string {
	return AWS_CloudWatch_CompositeAlarm__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudWatch_CompositeAlarm) Set__LogicalName(v string) *AWS_CloudWatch_CompositeAlarm {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudWatch_CompositeAlarm) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudWatch_CompositeAlarm {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudWatch_CompositeAlarm) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudWatch_CompositeAlarm {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudWatch_CompositeAlarm) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudWatch_CompositeAlarm {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudWatch_CompositeAlarm) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudWatch_CompositeAlarm {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudWatch_CompositeAlarm) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudWatch_CompositeAlarm {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudWatch_CompositeAlarm) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudWatch_CompositeAlarm {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ActionsEnabled updates property "ActionsEnabled".
func (t *AWS_CloudWatch_CompositeAlarm) Set__ActionsEnabled(v cfz.Expression[bool]) *AWS_CloudWatch_CompositeAlarm {
	t.ActionsEnabled = v
	return t
}

// SetV__ActionsEnabled updates property "ActionsEnabled".
func (t *AWS_CloudWatch_CompositeAlarm) SetV__ActionsEnabled(v bool) *AWS_CloudWatch_CompositeAlarm {
	t.ActionsEnabled = cfz.V(v)
	return t
}

// Set__ActionsSuppressor updates property "ActionsSuppressor".
func (t *AWS_CloudWatch_CompositeAlarm) Set__ActionsSuppressor(v cfz.Expression[string]) *AWS_CloudWatch_CompositeAlarm {
	t.ActionsSuppressor = v
	return t
}

// SetV__ActionsSuppressor updates property "ActionsSuppressor".
func (t *AWS_CloudWatch_CompositeAlarm) SetV__ActionsSuppressor(v string) *AWS_CloudWatch_CompositeAlarm {
	t.ActionsSuppressor = cfz.V(v)
	return t
}

// Set__ActionsSuppressorExtensionPeriod updates property "ActionsSuppressorExtensionPeriod".
func (t *AWS_CloudWatch_CompositeAlarm) Set__ActionsSuppressorExtensionPeriod(v cfz.Expression[int32]) *AWS_CloudWatch_CompositeAlarm {
	t.ActionsSuppressorExtensionPeriod = v
	return t
}

// SetV__ActionsSuppressorExtensionPeriod updates property "ActionsSuppressorExtensionPeriod".
func (t *AWS_CloudWatch_CompositeAlarm) SetV__ActionsSuppressorExtensionPeriod(v int32) *AWS_CloudWatch_CompositeAlarm {
	t.ActionsSuppressorExtensionPeriod = cfz.V(v)
	return t
}

// Set__ActionsSuppressorWaitPeriod updates property "ActionsSuppressorWaitPeriod".
func (t *AWS_CloudWatch_CompositeAlarm) Set__ActionsSuppressorWaitPeriod(v cfz.Expression[int32]) *AWS_CloudWatch_CompositeAlarm {
	t.ActionsSuppressorWaitPeriod = v
	return t
}

// SetV__ActionsSuppressorWaitPeriod updates property "ActionsSuppressorWaitPeriod".
func (t *AWS_CloudWatch_CompositeAlarm) SetV__ActionsSuppressorWaitPeriod(v int32) *AWS_CloudWatch_CompositeAlarm {
	t.ActionsSuppressorWaitPeriod = cfz.V(v)
	return t
}

// Set__AlarmActions updates property "AlarmActions".
func (t *AWS_CloudWatch_CompositeAlarm) Set__AlarmActions(v cfz.ExpressionSlice[string]) *AWS_CloudWatch_CompositeAlarm {
	t.AlarmActions = v
	return t
}

// SetS__AlarmActions updates property "AlarmActions".
func (t *AWS_CloudWatch_CompositeAlarm) SetS__AlarmActions(v ...cfz.Expression[string]) *AWS_CloudWatch_CompositeAlarm {
	t.AlarmActions = cfz.S(v...)
	return t
}

// SetSV__AlarmActions updates property "AlarmActions".
func (t *AWS_CloudWatch_CompositeAlarm) SetSV__AlarmActions(v ...string) *AWS_CloudWatch_CompositeAlarm {
	t.AlarmActions = cfz.SV(v...)
	return t
}

// Set__AlarmDescription updates property "AlarmDescription".
func (t *AWS_CloudWatch_CompositeAlarm) Set__AlarmDescription(v cfz.Expression[string]) *AWS_CloudWatch_CompositeAlarm {
	t.AlarmDescription = v
	return t
}

// SetV__AlarmDescription updates property "AlarmDescription".
func (t *AWS_CloudWatch_CompositeAlarm) SetV__AlarmDescription(v string) *AWS_CloudWatch_CompositeAlarm {
	t.AlarmDescription = cfz.V(v)
	return t
}

// Set__AlarmName updates property "AlarmName".
func (t *AWS_CloudWatch_CompositeAlarm) Set__AlarmName(v cfz.Expression[string]) *AWS_CloudWatch_CompositeAlarm {
	t.AlarmName = v
	return t
}

// SetV__AlarmName updates property "AlarmName".
func (t *AWS_CloudWatch_CompositeAlarm) SetV__AlarmName(v string) *AWS_CloudWatch_CompositeAlarm {
	t.AlarmName = cfz.V(v)
	return t
}

// Set__AlarmRule updates property "AlarmRule".
func (t *AWS_CloudWatch_CompositeAlarm) Set__AlarmRule(v cfz.Expression[string]) *AWS_CloudWatch_CompositeAlarm {
	t.AlarmRule = v
	return t
}

// SetV__AlarmRule updates property "AlarmRule".
func (t *AWS_CloudWatch_CompositeAlarm) SetV__AlarmRule(v string) *AWS_CloudWatch_CompositeAlarm {
	t.AlarmRule = cfz.V(v)
	return t
}

// Set__InsufficientDataActions updates property "InsufficientDataActions".
func (t *AWS_CloudWatch_CompositeAlarm) Set__InsufficientDataActions(v cfz.ExpressionSlice[string]) *AWS_CloudWatch_CompositeAlarm {
	t.InsufficientDataActions = v
	return t
}

// SetS__InsufficientDataActions updates property "InsufficientDataActions".
func (t *AWS_CloudWatch_CompositeAlarm) SetS__InsufficientDataActions(v ...cfz.Expression[string]) *AWS_CloudWatch_CompositeAlarm {
	t.InsufficientDataActions = cfz.S(v...)
	return t
}

// SetSV__InsufficientDataActions updates property "InsufficientDataActions".
func (t *AWS_CloudWatch_CompositeAlarm) SetSV__InsufficientDataActions(v ...string) *AWS_CloudWatch_CompositeAlarm {
	t.InsufficientDataActions = cfz.SV(v...)
	return t
}

// Set__OKActions updates property "OKActions".
func (t *AWS_CloudWatch_CompositeAlarm) Set__OKActions(v cfz.ExpressionSlice[string]) *AWS_CloudWatch_CompositeAlarm {
	t.OKActions = v
	return t
}

// SetS__OKActions updates property "OKActions".
func (t *AWS_CloudWatch_CompositeAlarm) SetS__OKActions(v ...cfz.Expression[string]) *AWS_CloudWatch_CompositeAlarm {
	t.OKActions = cfz.S(v...)
	return t
}

// SetSV__OKActions updates property "OKActions".
func (t *AWS_CloudWatch_CompositeAlarm) SetSV__OKActions(v ...string) *AWS_CloudWatch_CompositeAlarm {
	t.OKActions = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CloudWatch_CompositeAlarm) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CloudWatch_CompositeAlarm {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CloudWatch_CompositeAlarm) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CloudWatch_CompositeAlarm {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CloudWatch_CompositeAlarm) SetSV__Tags(v ...cfz.Tag) *AWS_CloudWatch_CompositeAlarm {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudWatch_CompositeAlarm) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_CloudWatch_CompositeAlarm) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudWatch_CompositeAlarm__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudWatch_CompositeAlarm) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_CloudWatch_CompositeAlarm) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudWatch_CompositeAlarm) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudWatch_CompositeAlarm

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudWatch_CompositeAlarm) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
