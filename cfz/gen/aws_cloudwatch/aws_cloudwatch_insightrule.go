// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_cloudwatch

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CloudWatch_InsightRule)(nil)
	_ cfz.Resource                   = (*AWS_CloudWatch_InsightRule)(nil)
)

const (
	// AWS_CloudWatch_InsightRule__Type is the CloudFormation type for AWS::CloudWatch::InsightRule.
	AWS_CloudWatch_InsightRule__Type = "AWS::CloudWatch::InsightRule"
)

var (
	// AWS_CloudWatch_InsightRule__AttributesMap reports all the CloudFormation attributes for AWS::CloudWatch::InsightRule.
	AWS_CloudWatch_InsightRule__AttributesMap = struct {
		Arn      string
		RuleName string
	}{
		Arn:      "Arn",
		RuleName: "RuleName",
	}

	// AWS_CloudWatch_InsightRule__AttributesSlice reports all the CloudFormation attributes for AWS::CloudWatch::InsightRule.
	AWS_CloudWatch_InsightRule__AttributesSlice = []string{
		AWS_CloudWatch_InsightRule__AttributesMap.Arn,
		AWS_CloudWatch_InsightRule__AttributesMap.RuleName,
	}
)

var (
	// AWS_CloudWatch_InsightRule__PropertiesMap reports all the CloudFormation properties for AWS::CloudWatch::InsightRule.
	AWS_CloudWatch_InsightRule__PropertiesMap = struct {
		RuleBody  string
		RuleName  string
		RuleState string
		Tags      string
	}{
		RuleBody:  "RuleBody",
		RuleName:  "RuleName",
		RuleState: "RuleState",
		Tags:      "Tags",
	}

	// AWS_CloudWatch_InsightRule__PropertiesSlice reports all the CloudFormation properties for AWS::CloudWatch::InsightRule.
	AWS_CloudWatch_InsightRule__PropertiesSlice = []string{
		AWS_CloudWatch_InsightRule__PropertiesMap.RuleBody,
		AWS_CloudWatch_InsightRule__PropertiesMap.RuleName,
		AWS_CloudWatch_InsightRule__PropertiesMap.RuleState,
		AWS_CloudWatch_InsightRule__PropertiesMap.Tags,
	}
)

// AWS_CloudWatch_InsightRule is a binding for AWS::CloudWatch::InsightRule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html
type AWS_CloudWatch_InsightRule struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// RuleBody is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulebody
	RuleBody cfz.Expression[string] `json:"RuleBody,omitempty"`

	// RuleName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulename
	RuleName cfz.Expression[string] `json:"RuleName,omitempty"`

	// RuleState is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-rulestate
	RuleState cfz.Expression[string] `json:"RuleState,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-insightrule.html#cfn-cloudwatch-insightrule-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_CloudWatch_InsightRule initializes a new *AWS_CloudWatch_InsightRule.
func New__AWS_CloudWatch_InsightRule(logicalName string) *AWS_CloudWatch_InsightRule {
	return &AWS_CloudWatch_InsightRule{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CloudWatch_InsightRule) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CloudWatch_InsightRule) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CloudWatch_InsightRule) GetType() string {
	return AWS_CloudWatch_InsightRule__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CloudWatch_InsightRule) Set__LogicalName(v string) *AWS_CloudWatch_InsightRule {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CloudWatch_InsightRule) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CloudWatch_InsightRule {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CloudWatch_InsightRule) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CloudWatch_InsightRule {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CloudWatch_InsightRule) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CloudWatch_InsightRule {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CloudWatch_InsightRule) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CloudWatch_InsightRule {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CloudWatch_InsightRule) Set__RequestedOutputs(v []cfz.Output) *AWS_CloudWatch_InsightRule {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CloudWatch_InsightRule) Add__RequestedOutputs(v ...cfz.Output) *AWS_CloudWatch_InsightRule {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__RuleBody updates property "RuleBody".
func (t *AWS_CloudWatch_InsightRule) Set__RuleBody(v cfz.Expression[string]) *AWS_CloudWatch_InsightRule {
	t.RuleBody = v
	return t
}

// SetV__RuleBody updates property "RuleBody".
func (t *AWS_CloudWatch_InsightRule) SetV__RuleBody(v string) *AWS_CloudWatch_InsightRule {
	t.RuleBody = cfz.V(v)
	return t
}

// Set__RuleName updates property "RuleName".
func (t *AWS_CloudWatch_InsightRule) Set__RuleName(v cfz.Expression[string]) *AWS_CloudWatch_InsightRule {
	t.RuleName = v
	return t
}

// SetV__RuleName updates property "RuleName".
func (t *AWS_CloudWatch_InsightRule) SetV__RuleName(v string) *AWS_CloudWatch_InsightRule {
	t.RuleName = cfz.V(v)
	return t
}

// Set__RuleState updates property "RuleState".
func (t *AWS_CloudWatch_InsightRule) Set__RuleState(v cfz.Expression[string]) *AWS_CloudWatch_InsightRule {
	t.RuleState = v
	return t
}

// SetV__RuleState updates property "RuleState".
func (t *AWS_CloudWatch_InsightRule) SetV__RuleState(v string) *AWS_CloudWatch_InsightRule {
	t.RuleState = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CloudWatch_InsightRule) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CloudWatch_InsightRule {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CloudWatch_InsightRule) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CloudWatch_InsightRule {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CloudWatch_InsightRule) SetSV__Tags(v ...cfz.Tag) *AWS_CloudWatch_InsightRule {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CloudWatch_InsightRule) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_CloudWatch_InsightRule) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudWatch_InsightRule__AttributesMap.Arn))
}

// GetAtt__RuleName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: RuleName
func (t *AWS_CloudWatch_InsightRule) GetAtt__RuleName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_CloudWatch_InsightRule__AttributesMap.RuleName))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CloudWatch_InsightRule) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_CloudWatch_InsightRule) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__RuleName returns a conventionally configured output for an attribute of this resource.
// Attribute: RuleName
func (t *AWS_CloudWatch_InsightRule) GetConventionalOutputAtt__RuleName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttRuleName", t.GetAtt__RuleName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CloudWatch_InsightRule) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CloudWatch_InsightRule

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CloudWatch_InsightRule) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
