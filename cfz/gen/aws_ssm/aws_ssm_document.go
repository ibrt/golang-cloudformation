// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ssm

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SSM_Document)(nil)
	_ cfz.Resource                   = (*AWS_SSM_Document)(nil)
)

const (
	// AWS_SSM_Document__Type is the CloudFormation type for AWS::SSM::Document.
	AWS_SSM_Document__Type = "AWS::SSM::Document"
)

var (
	// AWS_SSM_Document__PropertiesMap reports all the CloudFormation properties for AWS::SSM::Document.
	AWS_SSM_Document__PropertiesMap = struct {
		Attachments    string
		Content        string
		DocumentFormat string
		DocumentType   string
		Name           string
		Requires       string
		Tags           string
		TargetType     string
		UpdateMethod   string
		VersionName    string
	}{
		Attachments:    "Attachments",
		Content:        "Content",
		DocumentFormat: "DocumentFormat",
		DocumentType:   "DocumentType",
		Name:           "Name",
		Requires:       "Requires",
		Tags:           "Tags",
		TargetType:     "TargetType",
		UpdateMethod:   "UpdateMethod",
		VersionName:    "VersionName",
	}

	// AWS_SSM_Document__PropertiesSlice reports all the CloudFormation properties for AWS::SSM::Document.
	AWS_SSM_Document__PropertiesSlice = []string{
		AWS_SSM_Document__PropertiesMap.Attachments,
		AWS_SSM_Document__PropertiesMap.Content,
		AWS_SSM_Document__PropertiesMap.DocumentFormat,
		AWS_SSM_Document__PropertiesMap.DocumentType,
		AWS_SSM_Document__PropertiesMap.Name,
		AWS_SSM_Document__PropertiesMap.Requires,
		AWS_SSM_Document__PropertiesMap.Tags,
		AWS_SSM_Document__PropertiesMap.TargetType,
		AWS_SSM_Document__PropertiesMap.UpdateMethod,
		AWS_SSM_Document__PropertiesMap.VersionName,
	}
)

// AWS_SSM_Document is a binding for AWS::SSM::Document.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html
type AWS_SSM_Document struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Attachments is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-attachments
	Attachments cfz.ExpressionSlice[AWS_SSM_Document_AttachmentsSource] `json:"Attachments,omitempty"`

	// Content is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-content
	Content cfz.Expression[json.RawMessage] `json:"Content,omitempty"`

	// DocumentFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-documentformat
	DocumentFormat cfz.Expression[string] `json:"DocumentFormat,omitempty"`

	// DocumentType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-documenttype
	DocumentType cfz.Expression[string] `json:"DocumentType,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Requires is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-requires
	Requires cfz.ExpressionSlice[AWS_SSM_Document_DocumentRequires] `json:"Requires,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TargetType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-targettype
	TargetType cfz.Expression[string] `json:"TargetType,omitempty"`

	// UpdateMethod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-updatemethod
	UpdateMethod cfz.Expression[string] `json:"UpdateMethod,omitempty"`

	// VersionName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-document.html#cfn-ssm-document-versionname
	VersionName cfz.Expression[string] `json:"VersionName,omitempty"`
}

// New__AWS_SSM_Document initializes a new *AWS_SSM_Document.
func New__AWS_SSM_Document(logicalName string) *AWS_SSM_Document {
	return &AWS_SSM_Document{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SSM_Document) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SSM_Document) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SSM_Document) GetType() string {
	return AWS_SSM_Document__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SSM_Document) Set__LogicalName(v string) *AWS_SSM_Document {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SSM_Document) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SSM_Document {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SSM_Document) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SSM_Document {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SSM_Document) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SSM_Document {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SSM_Document) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SSM_Document {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SSM_Document) Set__RequestedOutputs(v []cfz.Output) *AWS_SSM_Document {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SSM_Document) Add__RequestedOutputs(v ...cfz.Output) *AWS_SSM_Document {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Attachments updates property "Attachments".
func (t *AWS_SSM_Document) Set__Attachments(v cfz.ExpressionSlice[AWS_SSM_Document_AttachmentsSource]) *AWS_SSM_Document {
	t.Attachments = v
	return t
}

// SetS__Attachments updates property "Attachments".
func (t *AWS_SSM_Document) SetS__Attachments(v ...cfz.Expression[AWS_SSM_Document_AttachmentsSource]) *AWS_SSM_Document {
	t.Attachments = cfz.S(v...)
	return t
}

// SetSV__Attachments updates property "Attachments".
func (t *AWS_SSM_Document) SetSV__Attachments(v ...AWS_SSM_Document_AttachmentsSource) *AWS_SSM_Document {
	t.Attachments = cfz.SV(v...)
	return t
}

// Set__Content updates property "Content".
func (t *AWS_SSM_Document) Set__Content(v cfz.Expression[json.RawMessage]) *AWS_SSM_Document {
	t.Content = v
	return t
}

// SetV__Content updates property "Content".
func (t *AWS_SSM_Document) SetV__Content(v json.RawMessage) *AWS_SSM_Document {
	t.Content = cfz.V(v)
	return t
}

// Set__DocumentFormat updates property "DocumentFormat".
func (t *AWS_SSM_Document) Set__DocumentFormat(v cfz.Expression[string]) *AWS_SSM_Document {
	t.DocumentFormat = v
	return t
}

// SetV__DocumentFormat updates property "DocumentFormat".
func (t *AWS_SSM_Document) SetV__DocumentFormat(v string) *AWS_SSM_Document {
	t.DocumentFormat = cfz.V(v)
	return t
}

// Set__DocumentType updates property "DocumentType".
func (t *AWS_SSM_Document) Set__DocumentType(v cfz.Expression[string]) *AWS_SSM_Document {
	t.DocumentType = v
	return t
}

// SetV__DocumentType updates property "DocumentType".
func (t *AWS_SSM_Document) SetV__DocumentType(v string) *AWS_SSM_Document {
	t.DocumentType = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_SSM_Document) Set__Name(v cfz.Expression[string]) *AWS_SSM_Document {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_SSM_Document) SetV__Name(v string) *AWS_SSM_Document {
	t.Name = cfz.V(v)
	return t
}

// Set__Requires updates property "Requires".
func (t *AWS_SSM_Document) Set__Requires(v cfz.ExpressionSlice[AWS_SSM_Document_DocumentRequires]) *AWS_SSM_Document {
	t.Requires = v
	return t
}

// SetS__Requires updates property "Requires".
func (t *AWS_SSM_Document) SetS__Requires(v ...cfz.Expression[AWS_SSM_Document_DocumentRequires]) *AWS_SSM_Document {
	t.Requires = cfz.S(v...)
	return t
}

// SetSV__Requires updates property "Requires".
func (t *AWS_SSM_Document) SetSV__Requires(v ...AWS_SSM_Document_DocumentRequires) *AWS_SSM_Document {
	t.Requires = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SSM_Document) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SSM_Document {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SSM_Document) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SSM_Document {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SSM_Document) SetSV__Tags(v ...cfz.Tag) *AWS_SSM_Document {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TargetType updates property "TargetType".
func (t *AWS_SSM_Document) Set__TargetType(v cfz.Expression[string]) *AWS_SSM_Document {
	t.TargetType = v
	return t
}

// SetV__TargetType updates property "TargetType".
func (t *AWS_SSM_Document) SetV__TargetType(v string) *AWS_SSM_Document {
	t.TargetType = cfz.V(v)
	return t
}

// Set__UpdateMethod updates property "UpdateMethod".
func (t *AWS_SSM_Document) Set__UpdateMethod(v cfz.Expression[string]) *AWS_SSM_Document {
	t.UpdateMethod = v
	return t
}

// SetV__UpdateMethod updates property "UpdateMethod".
func (t *AWS_SSM_Document) SetV__UpdateMethod(v string) *AWS_SSM_Document {
	t.UpdateMethod = cfz.V(v)
	return t
}

// Set__VersionName updates property "VersionName".
func (t *AWS_SSM_Document) Set__VersionName(v cfz.Expression[string]) *AWS_SSM_Document {
	t.VersionName = v
	return t
}

// SetV__VersionName updates property "VersionName".
func (t *AWS_SSM_Document) SetV__VersionName(v string) *AWS_SSM_Document {
	t.VersionName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SSM_Document) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SSM_Document) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SSM_Document) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SSM_Document

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SSM_Document) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
