// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ssm

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SSM_PatchBaseline)(nil)
	_ cfz.Resource                   = (*AWS_SSM_PatchBaseline)(nil)
)

const (
	// AWS_SSM_PatchBaseline__Type is the CloudFormation type for AWS::SSM::PatchBaseline.
	AWS_SSM_PatchBaseline__Type = "AWS::SSM::PatchBaseline"
)

var (
	// AWS_SSM_PatchBaseline__AttributesMap reports all the CloudFormation attributes for AWS::SSM::PatchBaseline.
	AWS_SSM_PatchBaseline__AttributesMap = struct {
		Id string
	}{
		Id: "Id",
	}

	// AWS_SSM_PatchBaseline__AttributesSlice reports all the CloudFormation attributes for AWS::SSM::PatchBaseline.
	AWS_SSM_PatchBaseline__AttributesSlice = []string{
		AWS_SSM_PatchBaseline__AttributesMap.Id,
	}
)

var (
	// AWS_SSM_PatchBaseline__PropertiesMap reports all the CloudFormation properties for AWS::SSM::PatchBaseline.
	AWS_SSM_PatchBaseline__PropertiesMap = struct {
		ApprovalRules                    string
		ApprovedPatches                  string
		ApprovedPatchesComplianceLevel   string
		ApprovedPatchesEnableNonSecurity string
		DefaultBaseline                  string
		Description                      string
		GlobalFilters                    string
		Name                             string
		OperatingSystem                  string
		PatchGroups                      string
		RejectedPatches                  string
		RejectedPatchesAction            string
		Sources                          string
		Tags                             string
	}{
		ApprovalRules:                    "ApprovalRules",
		ApprovedPatches:                  "ApprovedPatches",
		ApprovedPatchesComplianceLevel:   "ApprovedPatchesComplianceLevel",
		ApprovedPatchesEnableNonSecurity: "ApprovedPatchesEnableNonSecurity",
		DefaultBaseline:                  "DefaultBaseline",
		Description:                      "Description",
		GlobalFilters:                    "GlobalFilters",
		Name:                             "Name",
		OperatingSystem:                  "OperatingSystem",
		PatchGroups:                      "PatchGroups",
		RejectedPatches:                  "RejectedPatches",
		RejectedPatchesAction:            "RejectedPatchesAction",
		Sources:                          "Sources",
		Tags:                             "Tags",
	}

	// AWS_SSM_PatchBaseline__PropertiesSlice reports all the CloudFormation properties for AWS::SSM::PatchBaseline.
	AWS_SSM_PatchBaseline__PropertiesSlice = []string{
		AWS_SSM_PatchBaseline__PropertiesMap.ApprovalRules,
		AWS_SSM_PatchBaseline__PropertiesMap.ApprovedPatches,
		AWS_SSM_PatchBaseline__PropertiesMap.ApprovedPatchesComplianceLevel,
		AWS_SSM_PatchBaseline__PropertiesMap.ApprovedPatchesEnableNonSecurity,
		AWS_SSM_PatchBaseline__PropertiesMap.DefaultBaseline,
		AWS_SSM_PatchBaseline__PropertiesMap.Description,
		AWS_SSM_PatchBaseline__PropertiesMap.GlobalFilters,
		AWS_SSM_PatchBaseline__PropertiesMap.Name,
		AWS_SSM_PatchBaseline__PropertiesMap.OperatingSystem,
		AWS_SSM_PatchBaseline__PropertiesMap.PatchGroups,
		AWS_SSM_PatchBaseline__PropertiesMap.RejectedPatches,
		AWS_SSM_PatchBaseline__PropertiesMap.RejectedPatchesAction,
		AWS_SSM_PatchBaseline__PropertiesMap.Sources,
		AWS_SSM_PatchBaseline__PropertiesMap.Tags,
	}
)

// AWS_SSM_PatchBaseline is a binding for AWS::SSM::PatchBaseline.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html
type AWS_SSM_PatchBaseline struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApprovalRules is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-approvalrules
	ApprovalRules cfz.Expression[AWS_SSM_PatchBaseline_RuleGroup] `json:"ApprovalRules,omitempty"`

	// ApprovedPatches is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-approvedpatches
	ApprovedPatches cfz.ExpressionSlice[string] `json:"ApprovedPatches,omitempty"`

	// ApprovedPatchesComplianceLevel is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-approvedpatchescompliancelevel
	ApprovedPatchesComplianceLevel cfz.Expression[string] `json:"ApprovedPatchesComplianceLevel,omitempty"`

	// ApprovedPatchesEnableNonSecurity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-approvedpatchesenablenonsecurity
	ApprovedPatchesEnableNonSecurity cfz.Expression[bool] `json:"ApprovedPatchesEnableNonSecurity,omitempty"`

	// DefaultBaseline is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-defaultbaseline
	DefaultBaseline cfz.Expression[bool] `json:"DefaultBaseline,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// GlobalFilters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-globalfilters
	GlobalFilters cfz.Expression[AWS_SSM_PatchBaseline_PatchFilterGroup] `json:"GlobalFilters,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// OperatingSystem is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-operatingsystem
	OperatingSystem cfz.Expression[string] `json:"OperatingSystem,omitempty"`

	// PatchGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-patchgroups
	PatchGroups cfz.ExpressionSlice[string] `json:"PatchGroups,omitempty"`

	// RejectedPatches is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-rejectedpatches
	RejectedPatches cfz.ExpressionSlice[string] `json:"RejectedPatches,omitempty"`

	// RejectedPatchesAction is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-rejectedpatchesaction
	RejectedPatchesAction cfz.Expression[string] `json:"RejectedPatchesAction,omitempty"`

	// Sources is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-sources
	Sources cfz.ExpressionSlice[AWS_SSM_PatchBaseline_PatchSource] `json:"Sources,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html#cfn-ssm-patchbaseline-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_SSM_PatchBaseline initializes a new *AWS_SSM_PatchBaseline.
func New__AWS_SSM_PatchBaseline(logicalName string) *AWS_SSM_PatchBaseline {
	return &AWS_SSM_PatchBaseline{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SSM_PatchBaseline) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SSM_PatchBaseline) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SSM_PatchBaseline) GetType() string {
	return AWS_SSM_PatchBaseline__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SSM_PatchBaseline) Set__LogicalName(v string) *AWS_SSM_PatchBaseline {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SSM_PatchBaseline) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SSM_PatchBaseline {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SSM_PatchBaseline) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SSM_PatchBaseline {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SSM_PatchBaseline) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SSM_PatchBaseline {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SSM_PatchBaseline) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SSM_PatchBaseline {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SSM_PatchBaseline) Set__RequestedOutputs(v []cfz.Output) *AWS_SSM_PatchBaseline {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SSM_PatchBaseline) Add__RequestedOutputs(v ...cfz.Output) *AWS_SSM_PatchBaseline {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApprovalRules updates property "ApprovalRules".
func (t *AWS_SSM_PatchBaseline) Set__ApprovalRules(v cfz.Expression[AWS_SSM_PatchBaseline_RuleGroup]) *AWS_SSM_PatchBaseline {
	t.ApprovalRules = v
	return t
}

// SetV__ApprovalRules updates property "ApprovalRules".
func (t *AWS_SSM_PatchBaseline) SetV__ApprovalRules(v AWS_SSM_PatchBaseline_RuleGroup) *AWS_SSM_PatchBaseline {
	t.ApprovalRules = cfz.V(v)
	return t
}

// Set__ApprovedPatches updates property "ApprovedPatches".
func (t *AWS_SSM_PatchBaseline) Set__ApprovedPatches(v cfz.ExpressionSlice[string]) *AWS_SSM_PatchBaseline {
	t.ApprovedPatches = v
	return t
}

// SetS__ApprovedPatches updates property "ApprovedPatches".
func (t *AWS_SSM_PatchBaseline) SetS__ApprovedPatches(v ...cfz.Expression[string]) *AWS_SSM_PatchBaseline {
	t.ApprovedPatches = cfz.S(v...)
	return t
}

// SetSV__ApprovedPatches updates property "ApprovedPatches".
func (t *AWS_SSM_PatchBaseline) SetSV__ApprovedPatches(v ...string) *AWS_SSM_PatchBaseline {
	t.ApprovedPatches = cfz.SV(v...)
	return t
}

// Set__ApprovedPatchesComplianceLevel updates property "ApprovedPatchesComplianceLevel".
func (t *AWS_SSM_PatchBaseline) Set__ApprovedPatchesComplianceLevel(v cfz.Expression[string]) *AWS_SSM_PatchBaseline {
	t.ApprovedPatchesComplianceLevel = v
	return t
}

// SetV__ApprovedPatchesComplianceLevel updates property "ApprovedPatchesComplianceLevel".
func (t *AWS_SSM_PatchBaseline) SetV__ApprovedPatchesComplianceLevel(v string) *AWS_SSM_PatchBaseline {
	t.ApprovedPatchesComplianceLevel = cfz.V(v)
	return t
}

// Set__ApprovedPatchesEnableNonSecurity updates property "ApprovedPatchesEnableNonSecurity".
func (t *AWS_SSM_PatchBaseline) Set__ApprovedPatchesEnableNonSecurity(v cfz.Expression[bool]) *AWS_SSM_PatchBaseline {
	t.ApprovedPatchesEnableNonSecurity = v
	return t
}

// SetV__ApprovedPatchesEnableNonSecurity updates property "ApprovedPatchesEnableNonSecurity".
func (t *AWS_SSM_PatchBaseline) SetV__ApprovedPatchesEnableNonSecurity(v bool) *AWS_SSM_PatchBaseline {
	t.ApprovedPatchesEnableNonSecurity = cfz.V(v)
	return t
}

// Set__DefaultBaseline updates property "DefaultBaseline".
func (t *AWS_SSM_PatchBaseline) Set__DefaultBaseline(v cfz.Expression[bool]) *AWS_SSM_PatchBaseline {
	t.DefaultBaseline = v
	return t
}

// SetV__DefaultBaseline updates property "DefaultBaseline".
func (t *AWS_SSM_PatchBaseline) SetV__DefaultBaseline(v bool) *AWS_SSM_PatchBaseline {
	t.DefaultBaseline = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_SSM_PatchBaseline) Set__Description(v cfz.Expression[string]) *AWS_SSM_PatchBaseline {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_SSM_PatchBaseline) SetV__Description(v string) *AWS_SSM_PatchBaseline {
	t.Description = cfz.V(v)
	return t
}

// Set__GlobalFilters updates property "GlobalFilters".
func (t *AWS_SSM_PatchBaseline) Set__GlobalFilters(v cfz.Expression[AWS_SSM_PatchBaseline_PatchFilterGroup]) *AWS_SSM_PatchBaseline {
	t.GlobalFilters = v
	return t
}

// SetV__GlobalFilters updates property "GlobalFilters".
func (t *AWS_SSM_PatchBaseline) SetV__GlobalFilters(v AWS_SSM_PatchBaseline_PatchFilterGroup) *AWS_SSM_PatchBaseline {
	t.GlobalFilters = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_SSM_PatchBaseline) Set__Name(v cfz.Expression[string]) *AWS_SSM_PatchBaseline {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_SSM_PatchBaseline) SetV__Name(v string) *AWS_SSM_PatchBaseline {
	t.Name = cfz.V(v)
	return t
}

// Set__OperatingSystem updates property "OperatingSystem".
func (t *AWS_SSM_PatchBaseline) Set__OperatingSystem(v cfz.Expression[string]) *AWS_SSM_PatchBaseline {
	t.OperatingSystem = v
	return t
}

// SetV__OperatingSystem updates property "OperatingSystem".
func (t *AWS_SSM_PatchBaseline) SetV__OperatingSystem(v string) *AWS_SSM_PatchBaseline {
	t.OperatingSystem = cfz.V(v)
	return t
}

// Set__PatchGroups updates property "PatchGroups".
func (t *AWS_SSM_PatchBaseline) Set__PatchGroups(v cfz.ExpressionSlice[string]) *AWS_SSM_PatchBaseline {
	t.PatchGroups = v
	return t
}

// SetS__PatchGroups updates property "PatchGroups".
func (t *AWS_SSM_PatchBaseline) SetS__PatchGroups(v ...cfz.Expression[string]) *AWS_SSM_PatchBaseline {
	t.PatchGroups = cfz.S(v...)
	return t
}

// SetSV__PatchGroups updates property "PatchGroups".
func (t *AWS_SSM_PatchBaseline) SetSV__PatchGroups(v ...string) *AWS_SSM_PatchBaseline {
	t.PatchGroups = cfz.SV(v...)
	return t
}

// Set__RejectedPatches updates property "RejectedPatches".
func (t *AWS_SSM_PatchBaseline) Set__RejectedPatches(v cfz.ExpressionSlice[string]) *AWS_SSM_PatchBaseline {
	t.RejectedPatches = v
	return t
}

// SetS__RejectedPatches updates property "RejectedPatches".
func (t *AWS_SSM_PatchBaseline) SetS__RejectedPatches(v ...cfz.Expression[string]) *AWS_SSM_PatchBaseline {
	t.RejectedPatches = cfz.S(v...)
	return t
}

// SetSV__RejectedPatches updates property "RejectedPatches".
func (t *AWS_SSM_PatchBaseline) SetSV__RejectedPatches(v ...string) *AWS_SSM_PatchBaseline {
	t.RejectedPatches = cfz.SV(v...)
	return t
}

// Set__RejectedPatchesAction updates property "RejectedPatchesAction".
func (t *AWS_SSM_PatchBaseline) Set__RejectedPatchesAction(v cfz.Expression[string]) *AWS_SSM_PatchBaseline {
	t.RejectedPatchesAction = v
	return t
}

// SetV__RejectedPatchesAction updates property "RejectedPatchesAction".
func (t *AWS_SSM_PatchBaseline) SetV__RejectedPatchesAction(v string) *AWS_SSM_PatchBaseline {
	t.RejectedPatchesAction = cfz.V(v)
	return t
}

// Set__Sources updates property "Sources".
func (t *AWS_SSM_PatchBaseline) Set__Sources(v cfz.ExpressionSlice[AWS_SSM_PatchBaseline_PatchSource]) *AWS_SSM_PatchBaseline {
	t.Sources = v
	return t
}

// SetS__Sources updates property "Sources".
func (t *AWS_SSM_PatchBaseline) SetS__Sources(v ...cfz.Expression[AWS_SSM_PatchBaseline_PatchSource]) *AWS_SSM_PatchBaseline {
	t.Sources = cfz.S(v...)
	return t
}

// SetSV__Sources updates property "Sources".
func (t *AWS_SSM_PatchBaseline) SetSV__Sources(v ...AWS_SSM_PatchBaseline_PatchSource) *AWS_SSM_PatchBaseline {
	t.Sources = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_SSM_PatchBaseline) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_SSM_PatchBaseline {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_SSM_PatchBaseline) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_SSM_PatchBaseline {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_SSM_PatchBaseline) SetSV__Tags(v ...cfz.Tag) *AWS_SSM_PatchBaseline {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SSM_PatchBaseline) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_SSM_PatchBaseline) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SSM_PatchBaseline__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SSM_PatchBaseline) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_SSM_PatchBaseline) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SSM_PatchBaseline) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SSM_PatchBaseline

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SSM_PatchBaseline) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
