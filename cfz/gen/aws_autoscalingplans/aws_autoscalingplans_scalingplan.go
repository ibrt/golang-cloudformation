// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_autoscalingplans

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_AutoScalingPlans_ScalingPlan)(nil)
	_ cfz.Resource                   = (*AWS_AutoScalingPlans_ScalingPlan)(nil)
)

const (
	// AWS_AutoScalingPlans_ScalingPlan__Type is the CloudFormation type for AWS::AutoScalingPlans::ScalingPlan.
	AWS_AutoScalingPlans_ScalingPlan__Type = "AWS::AutoScalingPlans::ScalingPlan"
)

var (
	// AWS_AutoScalingPlans_ScalingPlan__AttributesMap reports all the CloudFormation attributes for AWS::AutoScalingPlans::ScalingPlan.
	AWS_AutoScalingPlans_ScalingPlan__AttributesMap = struct {
		ScalingPlanName    string
		ScalingPlanVersion string
	}{
		ScalingPlanName:    "ScalingPlanName",
		ScalingPlanVersion: "ScalingPlanVersion",
	}

	// AWS_AutoScalingPlans_ScalingPlan__AttributesSlice reports all the CloudFormation attributes for AWS::AutoScalingPlans::ScalingPlan.
	AWS_AutoScalingPlans_ScalingPlan__AttributesSlice = []string{
		AWS_AutoScalingPlans_ScalingPlan__AttributesMap.ScalingPlanName,
		AWS_AutoScalingPlans_ScalingPlan__AttributesMap.ScalingPlanVersion,
	}
)

var (
	// AWS_AutoScalingPlans_ScalingPlan__PropertiesMap reports all the CloudFormation properties for AWS::AutoScalingPlans::ScalingPlan.
	AWS_AutoScalingPlans_ScalingPlan__PropertiesMap = struct {
		ApplicationSource   string
		ScalingInstructions string
	}{
		ApplicationSource:   "ApplicationSource",
		ScalingInstructions: "ScalingInstructions",
	}

	// AWS_AutoScalingPlans_ScalingPlan__PropertiesSlice reports all the CloudFormation properties for AWS::AutoScalingPlans::ScalingPlan.
	AWS_AutoScalingPlans_ScalingPlan__PropertiesSlice = []string{
		AWS_AutoScalingPlans_ScalingPlan__PropertiesMap.ApplicationSource,
		AWS_AutoScalingPlans_ScalingPlan__PropertiesMap.ScalingInstructions,
	}
)

// AWS_AutoScalingPlans_ScalingPlan is a binding for AWS::AutoScalingPlans::ScalingPlan.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html
type AWS_AutoScalingPlans_ScalingPlan struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationSource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html#cfn-autoscalingplans-scalingplan-applicationsource
	ApplicationSource cfz.Expression[AWS_AutoScalingPlans_ScalingPlan_ApplicationSource] `json:"ApplicationSource,omitempty"`

	// ScalingInstructions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscalingplans-scalingplan.html#cfn-autoscalingplans-scalingplan-scalinginstructions
	ScalingInstructions cfz.ExpressionSlice[AWS_AutoScalingPlans_ScalingPlan_ScalingInstruction] `json:"ScalingInstructions,omitempty"`
}

// New__AWS_AutoScalingPlans_ScalingPlan initializes a new *AWS_AutoScalingPlans_ScalingPlan.
func New__AWS_AutoScalingPlans_ScalingPlan(logicalName string) *AWS_AutoScalingPlans_ScalingPlan {
	return &AWS_AutoScalingPlans_ScalingPlan{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_AutoScalingPlans_ScalingPlan) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_AutoScalingPlans_ScalingPlan) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_AutoScalingPlans_ScalingPlan) GetType() string {
	return AWS_AutoScalingPlans_ScalingPlan__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_AutoScalingPlans_ScalingPlan) Set__LogicalName(v string) *AWS_AutoScalingPlans_ScalingPlan {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_AutoScalingPlans_ScalingPlan) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_AutoScalingPlans_ScalingPlan {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_AutoScalingPlans_ScalingPlan) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_AutoScalingPlans_ScalingPlan {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_AutoScalingPlans_ScalingPlan) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_AutoScalingPlans_ScalingPlan {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_AutoScalingPlans_ScalingPlan) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_AutoScalingPlans_ScalingPlan {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_AutoScalingPlans_ScalingPlan) Set__RequestedOutputs(v []cfz.Output) *AWS_AutoScalingPlans_ScalingPlan {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_AutoScalingPlans_ScalingPlan) Add__RequestedOutputs(v ...cfz.Output) *AWS_AutoScalingPlans_ScalingPlan {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationSource updates property "ApplicationSource".
func (t *AWS_AutoScalingPlans_ScalingPlan) Set__ApplicationSource(v cfz.Expression[AWS_AutoScalingPlans_ScalingPlan_ApplicationSource]) *AWS_AutoScalingPlans_ScalingPlan {
	t.ApplicationSource = v
	return t
}

// SetV__ApplicationSource updates property "ApplicationSource".
func (t *AWS_AutoScalingPlans_ScalingPlan) SetV__ApplicationSource(v AWS_AutoScalingPlans_ScalingPlan_ApplicationSource) *AWS_AutoScalingPlans_ScalingPlan {
	t.ApplicationSource = cfz.V(v)
	return t
}

// Set__ScalingInstructions updates property "ScalingInstructions".
func (t *AWS_AutoScalingPlans_ScalingPlan) Set__ScalingInstructions(v cfz.ExpressionSlice[AWS_AutoScalingPlans_ScalingPlan_ScalingInstruction]) *AWS_AutoScalingPlans_ScalingPlan {
	t.ScalingInstructions = v
	return t
}

// SetS__ScalingInstructions updates property "ScalingInstructions".
func (t *AWS_AutoScalingPlans_ScalingPlan) SetS__ScalingInstructions(v ...cfz.Expression[AWS_AutoScalingPlans_ScalingPlan_ScalingInstruction]) *AWS_AutoScalingPlans_ScalingPlan {
	t.ScalingInstructions = cfz.S(v...)
	return t
}

// SetSV__ScalingInstructions updates property "ScalingInstructions".
func (t *AWS_AutoScalingPlans_ScalingPlan) SetSV__ScalingInstructions(v ...AWS_AutoScalingPlans_ScalingPlan_ScalingInstruction) *AWS_AutoScalingPlans_ScalingPlan {
	t.ScalingInstructions = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_AutoScalingPlans_ScalingPlan) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ScalingPlanName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ScalingPlanName
func (t *AWS_AutoScalingPlans_ScalingPlan) GetAtt__ScalingPlanName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AutoScalingPlans_ScalingPlan__AttributesMap.ScalingPlanName))
}

// GetAtt__ScalingPlanVersion returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ScalingPlanVersion
func (t *AWS_AutoScalingPlans_ScalingPlan) GetAtt__ScalingPlanVersion() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_AutoScalingPlans_ScalingPlan__AttributesMap.ScalingPlanVersion))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_AutoScalingPlans_ScalingPlan) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ScalingPlanName returns a conventionally configured output for an attribute of this resource.
// Attribute: ScalingPlanName
func (t *AWS_AutoScalingPlans_ScalingPlan) GetConventionalOutputAtt__ScalingPlanName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttScalingPlanName", t.GetAtt__ScalingPlanName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ScalingPlanVersion returns a conventionally configured output for an attribute of this resource.
// Attribute: ScalingPlanVersion
func (t *AWS_AutoScalingPlans_ScalingPlan) GetConventionalOutputAtt__ScalingPlanVersion(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttScalingPlanVersion", t.GetAtt__ScalingPlanVersion())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_AutoScalingPlans_ScalingPlan) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_AutoScalingPlans_ScalingPlan

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_AutoScalingPlans_ScalingPlan) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
