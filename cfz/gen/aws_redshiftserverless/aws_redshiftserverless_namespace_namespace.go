// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_redshiftserverless

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_RedshiftServerless_Namespace_Namespace__Type is the CloudFormation type for AWS::RedshiftServerless::Namespace.Namespace.
	AWS_RedshiftServerless_Namespace_Namespace__Type = "AWS::RedshiftServerless::Namespace.Namespace"
)

var (
	// AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap reports all the CloudFormation properties for AWS::RedshiftServerless::Namespace.Namespace.
	AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap = struct {
		AdminPasswordSecretArn      string
		AdminPasswordSecretKmsKeyId string
		AdminUsername               string
		CreationDate                string
		DbName                      string
		DefaultIamRoleArn           string
		IamRoles                    string
		KmsKeyId                    string
		LogExports                  string
		NamespaceArn                string
		NamespaceId                 string
		NamespaceName               string
		Status                      string
	}{
		AdminPasswordSecretArn:      "AdminPasswordSecretArn",
		AdminPasswordSecretKmsKeyId: "AdminPasswordSecretKmsKeyId",
		AdminUsername:               "AdminUsername",
		CreationDate:                "CreationDate",
		DbName:                      "DbName",
		DefaultIamRoleArn:           "DefaultIamRoleArn",
		IamRoles:                    "IamRoles",
		KmsKeyId:                    "KmsKeyId",
		LogExports:                  "LogExports",
		NamespaceArn:                "NamespaceArn",
		NamespaceId:                 "NamespaceId",
		NamespaceName:               "NamespaceName",
		Status:                      "Status",
	}

	// AWS_RedshiftServerless_Namespace_Namespace__PropertiesSlice reports all the CloudFormation properties for AWS::RedshiftServerless::Namespace.Namespace.
	AWS_RedshiftServerless_Namespace_Namespace__PropertiesSlice = []string{
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.AdminPasswordSecretArn,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.AdminPasswordSecretKmsKeyId,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.AdminUsername,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.CreationDate,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.DbName,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.DefaultIamRoleArn,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.IamRoles,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.KmsKeyId,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.LogExports,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.NamespaceArn,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.NamespaceId,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.NamespaceName,
		AWS_RedshiftServerless_Namespace_Namespace__PropertiesMap.Status,
	}
)

// AWS_RedshiftServerless_Namespace_Namespace is a binding for AWS::RedshiftServerless::Namespace.Namespace.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html
type AWS_RedshiftServerless_Namespace_Namespace struct {
	// AdminPasswordSecretArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-adminpasswordsecretarn
	AdminPasswordSecretArn cfz.Expression[string] `json:"AdminPasswordSecretArn,omitempty"`

	// AdminPasswordSecretKmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-adminpasswordsecretkmskeyid
	AdminPasswordSecretKmsKeyId cfz.Expression[string] `json:"AdminPasswordSecretKmsKeyId,omitempty"`

	// AdminUsername is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-adminusername
	AdminUsername cfz.Expression[string] `json:"AdminUsername,omitempty"`

	// CreationDate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-creationdate
	CreationDate cfz.Expression[string] `json:"CreationDate,omitempty"`

	// DbName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-dbname
	DbName cfz.Expression[string] `json:"DbName,omitempty"`

	// DefaultIamRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-defaultiamrolearn
	DefaultIamRoleArn cfz.Expression[string] `json:"DefaultIamRoleArn,omitempty"`

	// IamRoles is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-iamroles
	IamRoles cfz.ExpressionSlice[string] `json:"IamRoles,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// LogExports is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-logexports
	LogExports cfz.ExpressionSlice[string] `json:"LogExports,omitempty"`

	// NamespaceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-namespacearn
	NamespaceArn cfz.Expression[string] `json:"NamespaceArn,omitempty"`

	// NamespaceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-namespaceid
	NamespaceId cfz.Expression[string] `json:"NamespaceId,omitempty"`

	// NamespaceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-namespacename
	NamespaceName cfz.Expression[string] `json:"NamespaceName,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-namespace-namespace.html#cfn-redshiftserverless-namespace-namespace-status
	Status cfz.Expression[string] `json:"Status,omitempty"`
}

// New__AWS_RedshiftServerless_Namespace_Namespace initializes a new AWS_RedshiftServerless_Namespace_Namespace.
func New__AWS_RedshiftServerless_Namespace_Namespace() AWS_RedshiftServerless_Namespace_Namespace {
	return AWS_RedshiftServerless_Namespace_Namespace{}
}

// GetType returns the CloudFormation type.
func (AWS_RedshiftServerless_Namespace_Namespace) GetType() string {
	return AWS_RedshiftServerless_Namespace_Namespace__Type
}

// Set__AdminPasswordSecretArn updates property "AdminPasswordSecretArn".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__AdminPasswordSecretArn(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.AdminPasswordSecretArn = v
	return t
}

// SetV__AdminPasswordSecretArn updates property "AdminPasswordSecretArn".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__AdminPasswordSecretArn(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.AdminPasswordSecretArn = cfz.V(v)
	return t
}

// Set__AdminPasswordSecretKmsKeyId updates property "AdminPasswordSecretKmsKeyId".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__AdminPasswordSecretKmsKeyId(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.AdminPasswordSecretKmsKeyId = v
	return t
}

// SetV__AdminPasswordSecretKmsKeyId updates property "AdminPasswordSecretKmsKeyId".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__AdminPasswordSecretKmsKeyId(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.AdminPasswordSecretKmsKeyId = cfz.V(v)
	return t
}

// Set__AdminUsername updates property "AdminUsername".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__AdminUsername(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.AdminUsername = v
	return t
}

// SetV__AdminUsername updates property "AdminUsername".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__AdminUsername(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.AdminUsername = cfz.V(v)
	return t
}

// Set__CreationDate updates property "CreationDate".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__CreationDate(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.CreationDate = v
	return t
}

// SetV__CreationDate updates property "CreationDate".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__CreationDate(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.CreationDate = cfz.V(v)
	return t
}

// Set__DbName updates property "DbName".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__DbName(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.DbName = v
	return t
}

// SetV__DbName updates property "DbName".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__DbName(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.DbName = cfz.V(v)
	return t
}

// Set__DefaultIamRoleArn updates property "DefaultIamRoleArn".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__DefaultIamRoleArn(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.DefaultIamRoleArn = v
	return t
}

// SetV__DefaultIamRoleArn updates property "DefaultIamRoleArn".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__DefaultIamRoleArn(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.DefaultIamRoleArn = cfz.V(v)
	return t
}

// Set__IamRoles updates property "IamRoles".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__IamRoles(v cfz.ExpressionSlice[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.IamRoles = v
	return t
}

// SetS__IamRoles updates property "IamRoles".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetS__IamRoles(v ...cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.IamRoles = cfz.S(v...)
	return t
}

// SetSV__IamRoles updates property "IamRoles".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetSV__IamRoles(v ...string) AWS_RedshiftServerless_Namespace_Namespace {
	t.IamRoles = cfz.SV(v...)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__KmsKeyId(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__KmsKeyId(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__LogExports updates property "LogExports".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__LogExports(v cfz.ExpressionSlice[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.LogExports = v
	return t
}

// SetS__LogExports updates property "LogExports".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetS__LogExports(v ...cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.LogExports = cfz.S(v...)
	return t
}

// SetSV__LogExports updates property "LogExports".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetSV__LogExports(v ...string) AWS_RedshiftServerless_Namespace_Namespace {
	t.LogExports = cfz.SV(v...)
	return t
}

// Set__NamespaceArn updates property "NamespaceArn".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__NamespaceArn(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.NamespaceArn = v
	return t
}

// SetV__NamespaceArn updates property "NamespaceArn".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__NamespaceArn(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.NamespaceArn = cfz.V(v)
	return t
}

// Set__NamespaceId updates property "NamespaceId".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__NamespaceId(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.NamespaceId = v
	return t
}

// SetV__NamespaceId updates property "NamespaceId".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__NamespaceId(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.NamespaceId = cfz.V(v)
	return t
}

// Set__NamespaceName updates property "NamespaceName".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__NamespaceName(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.NamespaceName = v
	return t
}

// SetV__NamespaceName updates property "NamespaceName".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__NamespaceName(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.NamespaceName = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t AWS_RedshiftServerless_Namespace_Namespace) Set__Status(v cfz.Expression[string]) AWS_RedshiftServerless_Namespace_Namespace {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t AWS_RedshiftServerless_Namespace_Namespace) SetV__Status(v string) AWS_RedshiftServerless_Namespace_Namespace {
	t.Status = cfz.V(v)
	return t
}
