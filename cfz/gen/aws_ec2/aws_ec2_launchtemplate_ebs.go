// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_LaunchTemplate_Ebs__Type is the CloudFormation type for AWS::EC2::LaunchTemplate.Ebs.
	AWS_EC2_LaunchTemplate_Ebs__Type = "AWS::EC2::LaunchTemplate.Ebs"
)

var (
	// AWS_EC2_LaunchTemplate_Ebs__PropertiesMap reports all the CloudFormation properties for AWS::EC2::LaunchTemplate.Ebs.
	AWS_EC2_LaunchTemplate_Ebs__PropertiesMap = struct {
		DeleteOnTermination string
		Encrypted           string
		Iops                string
		KmsKeyId            string
		SnapshotId          string
		Throughput          string
		VolumeSize          string
		VolumeType          string
	}{
		DeleteOnTermination: "DeleteOnTermination",
		Encrypted:           "Encrypted",
		Iops:                "Iops",
		KmsKeyId:            "KmsKeyId",
		SnapshotId:          "SnapshotId",
		Throughput:          "Throughput",
		VolumeSize:          "VolumeSize",
		VolumeType:          "VolumeType",
	}

	// AWS_EC2_LaunchTemplate_Ebs__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::LaunchTemplate.Ebs.
	AWS_EC2_LaunchTemplate_Ebs__PropertiesSlice = []string{
		AWS_EC2_LaunchTemplate_Ebs__PropertiesMap.DeleteOnTermination,
		AWS_EC2_LaunchTemplate_Ebs__PropertiesMap.Encrypted,
		AWS_EC2_LaunchTemplate_Ebs__PropertiesMap.Iops,
		AWS_EC2_LaunchTemplate_Ebs__PropertiesMap.KmsKeyId,
		AWS_EC2_LaunchTemplate_Ebs__PropertiesMap.SnapshotId,
		AWS_EC2_LaunchTemplate_Ebs__PropertiesMap.Throughput,
		AWS_EC2_LaunchTemplate_Ebs__PropertiesMap.VolumeSize,
		AWS_EC2_LaunchTemplate_Ebs__PropertiesMap.VolumeType,
	}
)

// AWS_EC2_LaunchTemplate_Ebs is a binding for AWS::EC2::LaunchTemplate.Ebs.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html
type AWS_EC2_LaunchTemplate_Ebs struct {
	// DeleteOnTermination is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html#cfn-ec2-launchtemplate-ebs-deleteontermination
	DeleteOnTermination cfz.Expression[bool] `json:"DeleteOnTermination,omitempty"`

	// Encrypted is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html#cfn-ec2-launchtemplate-ebs-encrypted
	Encrypted cfz.Expression[bool] `json:"Encrypted,omitempty"`

	// Iops is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html#cfn-ec2-launchtemplate-ebs-iops
	Iops cfz.Expression[int32] `json:"Iops,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html#cfn-ec2-launchtemplate-ebs-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// SnapshotId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html#cfn-ec2-launchtemplate-ebs-snapshotid
	SnapshotId cfz.Expression[string] `json:"SnapshotId,omitempty"`

	// Throughput is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html#cfn-ec2-launchtemplate-ebs-throughput
	Throughput cfz.Expression[int32] `json:"Throughput,omitempty"`

	// VolumeSize is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html#cfn-ec2-launchtemplate-ebs-volumesize
	VolumeSize cfz.Expression[int32] `json:"VolumeSize,omitempty"`

	// VolumeType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ebs.html#cfn-ec2-launchtemplate-ebs-volumetype
	VolumeType cfz.Expression[string] `json:"VolumeType,omitempty"`
}

// New__AWS_EC2_LaunchTemplate_Ebs initializes a new AWS_EC2_LaunchTemplate_Ebs.
func New__AWS_EC2_LaunchTemplate_Ebs() AWS_EC2_LaunchTemplate_Ebs {
	return AWS_EC2_LaunchTemplate_Ebs{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_LaunchTemplate_Ebs) GetType() string {
	return AWS_EC2_LaunchTemplate_Ebs__Type
}

// Set__DeleteOnTermination updates property "DeleteOnTermination".
func (t AWS_EC2_LaunchTemplate_Ebs) Set__DeleteOnTermination(v cfz.Expression[bool]) AWS_EC2_LaunchTemplate_Ebs {
	t.DeleteOnTermination = v
	return t
}

// SetV__DeleteOnTermination updates property "DeleteOnTermination".
func (t AWS_EC2_LaunchTemplate_Ebs) SetV__DeleteOnTermination(v bool) AWS_EC2_LaunchTemplate_Ebs {
	t.DeleteOnTermination = cfz.V(v)
	return t
}

// Set__Encrypted updates property "Encrypted".
func (t AWS_EC2_LaunchTemplate_Ebs) Set__Encrypted(v cfz.Expression[bool]) AWS_EC2_LaunchTemplate_Ebs {
	t.Encrypted = v
	return t
}

// SetV__Encrypted updates property "Encrypted".
func (t AWS_EC2_LaunchTemplate_Ebs) SetV__Encrypted(v bool) AWS_EC2_LaunchTemplate_Ebs {
	t.Encrypted = cfz.V(v)
	return t
}

// Set__Iops updates property "Iops".
func (t AWS_EC2_LaunchTemplate_Ebs) Set__Iops(v cfz.Expression[int32]) AWS_EC2_LaunchTemplate_Ebs {
	t.Iops = v
	return t
}

// SetV__Iops updates property "Iops".
func (t AWS_EC2_LaunchTemplate_Ebs) SetV__Iops(v int32) AWS_EC2_LaunchTemplate_Ebs {
	t.Iops = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t AWS_EC2_LaunchTemplate_Ebs) Set__KmsKeyId(v cfz.Expression[string]) AWS_EC2_LaunchTemplate_Ebs {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t AWS_EC2_LaunchTemplate_Ebs) SetV__KmsKeyId(v string) AWS_EC2_LaunchTemplate_Ebs {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__SnapshotId updates property "SnapshotId".
func (t AWS_EC2_LaunchTemplate_Ebs) Set__SnapshotId(v cfz.Expression[string]) AWS_EC2_LaunchTemplate_Ebs {
	t.SnapshotId = v
	return t
}

// SetV__SnapshotId updates property "SnapshotId".
func (t AWS_EC2_LaunchTemplate_Ebs) SetV__SnapshotId(v string) AWS_EC2_LaunchTemplate_Ebs {
	t.SnapshotId = cfz.V(v)
	return t
}

// Set__Throughput updates property "Throughput".
func (t AWS_EC2_LaunchTemplate_Ebs) Set__Throughput(v cfz.Expression[int32]) AWS_EC2_LaunchTemplate_Ebs {
	t.Throughput = v
	return t
}

// SetV__Throughput updates property "Throughput".
func (t AWS_EC2_LaunchTemplate_Ebs) SetV__Throughput(v int32) AWS_EC2_LaunchTemplate_Ebs {
	t.Throughput = cfz.V(v)
	return t
}

// Set__VolumeSize updates property "VolumeSize".
func (t AWS_EC2_LaunchTemplate_Ebs) Set__VolumeSize(v cfz.Expression[int32]) AWS_EC2_LaunchTemplate_Ebs {
	t.VolumeSize = v
	return t
}

// SetV__VolumeSize updates property "VolumeSize".
func (t AWS_EC2_LaunchTemplate_Ebs) SetV__VolumeSize(v int32) AWS_EC2_LaunchTemplate_Ebs {
	t.VolumeSize = cfz.V(v)
	return t
}

// Set__VolumeType updates property "VolumeType".
func (t AWS_EC2_LaunchTemplate_Ebs) Set__VolumeType(v cfz.Expression[string]) AWS_EC2_LaunchTemplate_Ebs {
	t.VolumeType = v
	return t
}

// SetV__VolumeType updates property "VolumeType".
func (t AWS_EC2_LaunchTemplate_Ebs) SetV__VolumeType(v string) AWS_EC2_LaunchTemplate_Ebs {
	t.VolumeType = cfz.V(v)
	return t
}
