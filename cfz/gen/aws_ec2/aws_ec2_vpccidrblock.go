// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VPCCidrBlock)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VPCCidrBlock)(nil)
)

const (
	// AWS_EC2_VPCCidrBlock__Type is the CloudFormation type for AWS::EC2::VPCCidrBlock.
	AWS_EC2_VPCCidrBlock__Type = "AWS::EC2::VPCCidrBlock"
)

var (
	// AWS_EC2_VPCCidrBlock__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VPCCidrBlock.
	AWS_EC2_VPCCidrBlock__AttributesMap = struct {
		Id                   string
		IpSource             string
		Ipv6AddressAttribute string
	}{
		Id:                   "Id",
		IpSource:             "IpSource",
		Ipv6AddressAttribute: "Ipv6AddressAttribute",
	}

	// AWS_EC2_VPCCidrBlock__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VPCCidrBlock.
	AWS_EC2_VPCCidrBlock__AttributesSlice = []string{
		AWS_EC2_VPCCidrBlock__AttributesMap.Id,
		AWS_EC2_VPCCidrBlock__AttributesMap.IpSource,
		AWS_EC2_VPCCidrBlock__AttributesMap.Ipv6AddressAttribute,
	}
)

var (
	// AWS_EC2_VPCCidrBlock__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VPCCidrBlock.
	AWS_EC2_VPCCidrBlock__PropertiesMap = struct {
		AmazonProvidedIpv6CidrBlock string
		CidrBlock                   string
		Ipv4IpamPoolId              string
		Ipv4NetmaskLength           string
		Ipv6CidrBlock               string
		Ipv6IpamPoolId              string
		Ipv6NetmaskLength           string
		Ipv6Pool                    string
		VpcId                       string
	}{
		AmazonProvidedIpv6CidrBlock: "AmazonProvidedIpv6CidrBlock",
		CidrBlock:                   "CidrBlock",
		Ipv4IpamPoolId:              "Ipv4IpamPoolId",
		Ipv4NetmaskLength:           "Ipv4NetmaskLength",
		Ipv6CidrBlock:               "Ipv6CidrBlock",
		Ipv6IpamPoolId:              "Ipv6IpamPoolId",
		Ipv6NetmaskLength:           "Ipv6NetmaskLength",
		Ipv6Pool:                    "Ipv6Pool",
		VpcId:                       "VpcId",
	}

	// AWS_EC2_VPCCidrBlock__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VPCCidrBlock.
	AWS_EC2_VPCCidrBlock__PropertiesSlice = []string{
		AWS_EC2_VPCCidrBlock__PropertiesMap.AmazonProvidedIpv6CidrBlock,
		AWS_EC2_VPCCidrBlock__PropertiesMap.CidrBlock,
		AWS_EC2_VPCCidrBlock__PropertiesMap.Ipv4IpamPoolId,
		AWS_EC2_VPCCidrBlock__PropertiesMap.Ipv4NetmaskLength,
		AWS_EC2_VPCCidrBlock__PropertiesMap.Ipv6CidrBlock,
		AWS_EC2_VPCCidrBlock__PropertiesMap.Ipv6IpamPoolId,
		AWS_EC2_VPCCidrBlock__PropertiesMap.Ipv6NetmaskLength,
		AWS_EC2_VPCCidrBlock__PropertiesMap.Ipv6Pool,
		AWS_EC2_VPCCidrBlock__PropertiesMap.VpcId,
	}
)

// AWS_EC2_VPCCidrBlock is a binding for AWS::EC2::VPCCidrBlock.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html
type AWS_EC2_VPCCidrBlock struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AmazonProvidedIpv6CidrBlock is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-amazonprovidedipv6cidrblock
	AmazonProvidedIpv6CidrBlock cfz.Expression[bool] `json:"AmazonProvidedIpv6CidrBlock,omitempty"`

	// CidrBlock is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-cidrblock
	CidrBlock cfz.Expression[string] `json:"CidrBlock,omitempty"`

	// Ipv4IpamPoolId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4ipampoolid
	Ipv4IpamPoolId cfz.Expression[string] `json:"Ipv4IpamPoolId,omitempty"`

	// Ipv4NetmaskLength is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv4netmasklength
	Ipv4NetmaskLength cfz.Expression[int32] `json:"Ipv4NetmaskLength,omitempty"`

	// Ipv6CidrBlock is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6cidrblock
	Ipv6CidrBlock cfz.Expression[string] `json:"Ipv6CidrBlock,omitempty"`

	// Ipv6IpamPoolId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6ipampoolid
	Ipv6IpamPoolId cfz.Expression[string] `json:"Ipv6IpamPoolId,omitempty"`

	// Ipv6NetmaskLength is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6netmasklength
	Ipv6NetmaskLength cfz.Expression[int32] `json:"Ipv6NetmaskLength,omitempty"`

	// Ipv6Pool is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-ipv6pool
	Ipv6Pool cfz.Expression[string] `json:"Ipv6Pool,omitempty"`

	// VpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpccidrblock.html#cfn-ec2-vpccidrblock-vpcid
	VpcId cfz.Expression[string] `json:"VpcId,omitempty"`
}

// New__AWS_EC2_VPCCidrBlock initializes a new *AWS_EC2_VPCCidrBlock.
func New__AWS_EC2_VPCCidrBlock(logicalName string) *AWS_EC2_VPCCidrBlock {
	return &AWS_EC2_VPCCidrBlock{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VPCCidrBlock) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VPCCidrBlock) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VPCCidrBlock) GetType() string {
	return AWS_EC2_VPCCidrBlock__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VPCCidrBlock) Set__LogicalName(v string) *AWS_EC2_VPCCidrBlock {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VPCCidrBlock) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VPCCidrBlock {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VPCCidrBlock) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VPCCidrBlock {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VPCCidrBlock) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VPCCidrBlock {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VPCCidrBlock) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VPCCidrBlock {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VPCCidrBlock) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VPCCidrBlock {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VPCCidrBlock) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VPCCidrBlock {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AmazonProvidedIpv6CidrBlock updates property "AmazonProvidedIpv6CidrBlock".
func (t *AWS_EC2_VPCCidrBlock) Set__AmazonProvidedIpv6CidrBlock(v cfz.Expression[bool]) *AWS_EC2_VPCCidrBlock {
	t.AmazonProvidedIpv6CidrBlock = v
	return t
}

// SetV__AmazonProvidedIpv6CidrBlock updates property "AmazonProvidedIpv6CidrBlock".
func (t *AWS_EC2_VPCCidrBlock) SetV__AmazonProvidedIpv6CidrBlock(v bool) *AWS_EC2_VPCCidrBlock {
	t.AmazonProvidedIpv6CidrBlock = cfz.V(v)
	return t
}

// Set__CidrBlock updates property "CidrBlock".
func (t *AWS_EC2_VPCCidrBlock) Set__CidrBlock(v cfz.Expression[string]) *AWS_EC2_VPCCidrBlock {
	t.CidrBlock = v
	return t
}

// SetV__CidrBlock updates property "CidrBlock".
func (t *AWS_EC2_VPCCidrBlock) SetV__CidrBlock(v string) *AWS_EC2_VPCCidrBlock {
	t.CidrBlock = cfz.V(v)
	return t
}

// Set__Ipv4IpamPoolId updates property "Ipv4IpamPoolId".
func (t *AWS_EC2_VPCCidrBlock) Set__Ipv4IpamPoolId(v cfz.Expression[string]) *AWS_EC2_VPCCidrBlock {
	t.Ipv4IpamPoolId = v
	return t
}

// SetV__Ipv4IpamPoolId updates property "Ipv4IpamPoolId".
func (t *AWS_EC2_VPCCidrBlock) SetV__Ipv4IpamPoolId(v string) *AWS_EC2_VPCCidrBlock {
	t.Ipv4IpamPoolId = cfz.V(v)
	return t
}

// Set__Ipv4NetmaskLength updates property "Ipv4NetmaskLength".
func (t *AWS_EC2_VPCCidrBlock) Set__Ipv4NetmaskLength(v cfz.Expression[int32]) *AWS_EC2_VPCCidrBlock {
	t.Ipv4NetmaskLength = v
	return t
}

// SetV__Ipv4NetmaskLength updates property "Ipv4NetmaskLength".
func (t *AWS_EC2_VPCCidrBlock) SetV__Ipv4NetmaskLength(v int32) *AWS_EC2_VPCCidrBlock {
	t.Ipv4NetmaskLength = cfz.V(v)
	return t
}

// Set__Ipv6CidrBlock updates property "Ipv6CidrBlock".
func (t *AWS_EC2_VPCCidrBlock) Set__Ipv6CidrBlock(v cfz.Expression[string]) *AWS_EC2_VPCCidrBlock {
	t.Ipv6CidrBlock = v
	return t
}

// SetV__Ipv6CidrBlock updates property "Ipv6CidrBlock".
func (t *AWS_EC2_VPCCidrBlock) SetV__Ipv6CidrBlock(v string) *AWS_EC2_VPCCidrBlock {
	t.Ipv6CidrBlock = cfz.V(v)
	return t
}

// Set__Ipv6IpamPoolId updates property "Ipv6IpamPoolId".
func (t *AWS_EC2_VPCCidrBlock) Set__Ipv6IpamPoolId(v cfz.Expression[string]) *AWS_EC2_VPCCidrBlock {
	t.Ipv6IpamPoolId = v
	return t
}

// SetV__Ipv6IpamPoolId updates property "Ipv6IpamPoolId".
func (t *AWS_EC2_VPCCidrBlock) SetV__Ipv6IpamPoolId(v string) *AWS_EC2_VPCCidrBlock {
	t.Ipv6IpamPoolId = cfz.V(v)
	return t
}

// Set__Ipv6NetmaskLength updates property "Ipv6NetmaskLength".
func (t *AWS_EC2_VPCCidrBlock) Set__Ipv6NetmaskLength(v cfz.Expression[int32]) *AWS_EC2_VPCCidrBlock {
	t.Ipv6NetmaskLength = v
	return t
}

// SetV__Ipv6NetmaskLength updates property "Ipv6NetmaskLength".
func (t *AWS_EC2_VPCCidrBlock) SetV__Ipv6NetmaskLength(v int32) *AWS_EC2_VPCCidrBlock {
	t.Ipv6NetmaskLength = cfz.V(v)
	return t
}

// Set__Ipv6Pool updates property "Ipv6Pool".
func (t *AWS_EC2_VPCCidrBlock) Set__Ipv6Pool(v cfz.Expression[string]) *AWS_EC2_VPCCidrBlock {
	t.Ipv6Pool = v
	return t
}

// SetV__Ipv6Pool updates property "Ipv6Pool".
func (t *AWS_EC2_VPCCidrBlock) SetV__Ipv6Pool(v string) *AWS_EC2_VPCCidrBlock {
	t.Ipv6Pool = cfz.V(v)
	return t
}

// Set__VpcId updates property "VpcId".
func (t *AWS_EC2_VPCCidrBlock) Set__VpcId(v cfz.Expression[string]) *AWS_EC2_VPCCidrBlock {
	t.VpcId = v
	return t
}

// SetV__VpcId updates property "VpcId".
func (t *AWS_EC2_VPCCidrBlock) SetV__VpcId(v string) *AWS_EC2_VPCCidrBlock {
	t.VpcId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VPCCidrBlock) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_EC2_VPCCidrBlock) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCCidrBlock__AttributesMap.Id))
}

// GetAtt__IpSource returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpSource
func (t *AWS_EC2_VPCCidrBlock) GetAtt__IpSource() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCCidrBlock__AttributesMap.IpSource))
}

// GetAtt__Ipv6AddressAttribute returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Ipv6AddressAttribute
func (t *AWS_EC2_VPCCidrBlock) GetAtt__Ipv6AddressAttribute() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCCidrBlock__AttributesMap.Ipv6AddressAttribute))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VPCCidrBlock) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_EC2_VPCCidrBlock) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpSource returns a conventionally configured output for an attribute of this resource.
// Attribute: IpSource
func (t *AWS_EC2_VPCCidrBlock) GetConventionalOutputAtt__IpSource(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpSource", t.GetAtt__IpSource())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Ipv6AddressAttribute returns a conventionally configured output for an attribute of this resource.
// Attribute: Ipv6AddressAttribute
func (t *AWS_EC2_VPCCidrBlock) GetConventionalOutputAtt__Ipv6AddressAttribute(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpv6AddressAttribute", t.GetAtt__Ipv6AddressAttribute())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VPCCidrBlock) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VPCCidrBlock

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VPCCidrBlock) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
