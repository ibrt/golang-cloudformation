// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_TrafficMirrorFilterRule)(nil)
	_ cfz.Resource                   = (*AWS_EC2_TrafficMirrorFilterRule)(nil)
)

const (
	// AWS_EC2_TrafficMirrorFilterRule__Type is the CloudFormation type for AWS::EC2::TrafficMirrorFilterRule.
	AWS_EC2_TrafficMirrorFilterRule__Type = "AWS::EC2::TrafficMirrorFilterRule"
)

var (
	// AWS_EC2_TrafficMirrorFilterRule__PropertiesMap reports all the CloudFormation properties for AWS::EC2::TrafficMirrorFilterRule.
	AWS_EC2_TrafficMirrorFilterRule__PropertiesMap = struct {
		Description           string
		DestinationCidrBlock  string
		DestinationPortRange  string
		Protocol              string
		RuleAction            string
		RuleNumber            string
		SourceCidrBlock       string
		SourcePortRange       string
		Tags                  string
		TrafficDirection      string
		TrafficMirrorFilterId string
	}{
		Description:           "Description",
		DestinationCidrBlock:  "DestinationCidrBlock",
		DestinationPortRange:  "DestinationPortRange",
		Protocol:              "Protocol",
		RuleAction:            "RuleAction",
		RuleNumber:            "RuleNumber",
		SourceCidrBlock:       "SourceCidrBlock",
		SourcePortRange:       "SourcePortRange",
		Tags:                  "Tags",
		TrafficDirection:      "TrafficDirection",
		TrafficMirrorFilterId: "TrafficMirrorFilterId",
	}

	// AWS_EC2_TrafficMirrorFilterRule__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::TrafficMirrorFilterRule.
	AWS_EC2_TrafficMirrorFilterRule__PropertiesSlice = []string{
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.Description,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.DestinationCidrBlock,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.DestinationPortRange,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.Protocol,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.RuleAction,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.RuleNumber,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.SourceCidrBlock,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.SourcePortRange,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.Tags,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.TrafficDirection,
		AWS_EC2_TrafficMirrorFilterRule__PropertiesMap.TrafficMirrorFilterId,
	}
)

// AWS_EC2_TrafficMirrorFilterRule is a binding for AWS::EC2::TrafficMirrorFilterRule.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html
type AWS_EC2_TrafficMirrorFilterRule struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DestinationCidrBlock is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationcidrblock
	DestinationCidrBlock cfz.Expression[string] `json:"DestinationCidrBlock,omitempty"`

	// DestinationPortRange is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-destinationportrange
	DestinationPortRange cfz.Expression[AWS_EC2_TrafficMirrorFilterRule_TrafficMirrorPortRange] `json:"DestinationPortRange,omitempty"`

	// Protocol is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-protocol
	Protocol cfz.Expression[int32] `json:"Protocol,omitempty"`

	// RuleAction is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-ruleaction
	RuleAction cfz.Expression[string] `json:"RuleAction,omitempty"`

	// RuleNumber is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-rulenumber
	RuleNumber cfz.Expression[int32] `json:"RuleNumber,omitempty"`

	// SourceCidrBlock is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourcecidrblock
	SourceCidrBlock cfz.Expression[string] `json:"SourceCidrBlock,omitempty"`

	// SourcePortRange is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-sourceportrange
	SourcePortRange cfz.Expression[AWS_EC2_TrafficMirrorFilterRule_TrafficMirrorPortRange] `json:"SourcePortRange,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TrafficDirection is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficdirection
	TrafficDirection cfz.Expression[string] `json:"TrafficDirection,omitempty"`

	// TrafficMirrorFilterId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-trafficmirrorfilterrule.html#cfn-ec2-trafficmirrorfilterrule-trafficmirrorfilterid
	TrafficMirrorFilterId cfz.Expression[string] `json:"TrafficMirrorFilterId,omitempty"`
}

// New__AWS_EC2_TrafficMirrorFilterRule initializes a new *AWS_EC2_TrafficMirrorFilterRule.
func New__AWS_EC2_TrafficMirrorFilterRule(logicalName string) *AWS_EC2_TrafficMirrorFilterRule {
	return &AWS_EC2_TrafficMirrorFilterRule{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_TrafficMirrorFilterRule) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_TrafficMirrorFilterRule) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_TrafficMirrorFilterRule) GetType() string {
	return AWS_EC2_TrafficMirrorFilterRule__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__LogicalName(v string) *AWS_EC2_TrafficMirrorFilterRule {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_TrafficMirrorFilterRule {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_TrafficMirrorFilterRule) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_TrafficMirrorFilterRule {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_TrafficMirrorFilterRule {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_TrafficMirrorFilterRule {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_TrafficMirrorFilterRule {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_TrafficMirrorFilterRule) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_TrafficMirrorFilterRule {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__Description(v cfz.Expression[string]) *AWS_EC2_TrafficMirrorFilterRule {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__Description(v string) *AWS_EC2_TrafficMirrorFilterRule {
	t.Description = cfz.V(v)
	return t
}

// Set__DestinationCidrBlock updates property "DestinationCidrBlock".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__DestinationCidrBlock(v cfz.Expression[string]) *AWS_EC2_TrafficMirrorFilterRule {
	t.DestinationCidrBlock = v
	return t
}

// SetV__DestinationCidrBlock updates property "DestinationCidrBlock".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__DestinationCidrBlock(v string) *AWS_EC2_TrafficMirrorFilterRule {
	t.DestinationCidrBlock = cfz.V(v)
	return t
}

// Set__DestinationPortRange updates property "DestinationPortRange".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__DestinationPortRange(v cfz.Expression[AWS_EC2_TrafficMirrorFilterRule_TrafficMirrorPortRange]) *AWS_EC2_TrafficMirrorFilterRule {
	t.DestinationPortRange = v
	return t
}

// SetV__DestinationPortRange updates property "DestinationPortRange".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__DestinationPortRange(v AWS_EC2_TrafficMirrorFilterRule_TrafficMirrorPortRange) *AWS_EC2_TrafficMirrorFilterRule {
	t.DestinationPortRange = cfz.V(v)
	return t
}

// Set__Protocol updates property "Protocol".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__Protocol(v cfz.Expression[int32]) *AWS_EC2_TrafficMirrorFilterRule {
	t.Protocol = v
	return t
}

// SetV__Protocol updates property "Protocol".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__Protocol(v int32) *AWS_EC2_TrafficMirrorFilterRule {
	t.Protocol = cfz.V(v)
	return t
}

// Set__RuleAction updates property "RuleAction".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__RuleAction(v cfz.Expression[string]) *AWS_EC2_TrafficMirrorFilterRule {
	t.RuleAction = v
	return t
}

// SetV__RuleAction updates property "RuleAction".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__RuleAction(v string) *AWS_EC2_TrafficMirrorFilterRule {
	t.RuleAction = cfz.V(v)
	return t
}

// Set__RuleNumber updates property "RuleNumber".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__RuleNumber(v cfz.Expression[int32]) *AWS_EC2_TrafficMirrorFilterRule {
	t.RuleNumber = v
	return t
}

// SetV__RuleNumber updates property "RuleNumber".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__RuleNumber(v int32) *AWS_EC2_TrafficMirrorFilterRule {
	t.RuleNumber = cfz.V(v)
	return t
}

// Set__SourceCidrBlock updates property "SourceCidrBlock".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__SourceCidrBlock(v cfz.Expression[string]) *AWS_EC2_TrafficMirrorFilterRule {
	t.SourceCidrBlock = v
	return t
}

// SetV__SourceCidrBlock updates property "SourceCidrBlock".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__SourceCidrBlock(v string) *AWS_EC2_TrafficMirrorFilterRule {
	t.SourceCidrBlock = cfz.V(v)
	return t
}

// Set__SourcePortRange updates property "SourcePortRange".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__SourcePortRange(v cfz.Expression[AWS_EC2_TrafficMirrorFilterRule_TrafficMirrorPortRange]) *AWS_EC2_TrafficMirrorFilterRule {
	t.SourcePortRange = v
	return t
}

// SetV__SourcePortRange updates property "SourcePortRange".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__SourcePortRange(v AWS_EC2_TrafficMirrorFilterRule_TrafficMirrorPortRange) *AWS_EC2_TrafficMirrorFilterRule {
	t.SourcePortRange = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_TrafficMirrorFilterRule {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_TrafficMirrorFilterRule {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_TrafficMirrorFilterRule {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TrafficDirection updates property "TrafficDirection".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__TrafficDirection(v cfz.Expression[string]) *AWS_EC2_TrafficMirrorFilterRule {
	t.TrafficDirection = v
	return t
}

// SetV__TrafficDirection updates property "TrafficDirection".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__TrafficDirection(v string) *AWS_EC2_TrafficMirrorFilterRule {
	t.TrafficDirection = cfz.V(v)
	return t
}

// Set__TrafficMirrorFilterId updates property "TrafficMirrorFilterId".
func (t *AWS_EC2_TrafficMirrorFilterRule) Set__TrafficMirrorFilterId(v cfz.Expression[string]) *AWS_EC2_TrafficMirrorFilterRule {
	t.TrafficMirrorFilterId = v
	return t
}

// SetV__TrafficMirrorFilterId updates property "TrafficMirrorFilterId".
func (t *AWS_EC2_TrafficMirrorFilterRule) SetV__TrafficMirrorFilterId(v string) *AWS_EC2_TrafficMirrorFilterRule {
	t.TrafficMirrorFilterId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_TrafficMirrorFilterRule) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_TrafficMirrorFilterRule) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_TrafficMirrorFilterRule) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_TrafficMirrorFilterRule

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_TrafficMirrorFilterRule) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
