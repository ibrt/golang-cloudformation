// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_LocalGatewayRouteTable)(nil)
	_ cfz.Resource                   = (*AWS_EC2_LocalGatewayRouteTable)(nil)
)

const (
	// AWS_EC2_LocalGatewayRouteTable__Type is the CloudFormation type for AWS::EC2::LocalGatewayRouteTable.
	AWS_EC2_LocalGatewayRouteTable__Type = "AWS::EC2::LocalGatewayRouteTable"
)

var (
	// AWS_EC2_LocalGatewayRouteTable__AttributesMap reports all the CloudFormation attributes for AWS::EC2::LocalGatewayRouteTable.
	AWS_EC2_LocalGatewayRouteTable__AttributesMap = struct {
		LocalGatewayRouteTableArn string
		LocalGatewayRouteTableId  string
		OutpostArn                string
		OwnerId                   string
		State                     string
	}{
		LocalGatewayRouteTableArn: "LocalGatewayRouteTableArn",
		LocalGatewayRouteTableId:  "LocalGatewayRouteTableId",
		OutpostArn:                "OutpostArn",
		OwnerId:                   "OwnerId",
		State:                     "State",
	}

	// AWS_EC2_LocalGatewayRouteTable__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::LocalGatewayRouteTable.
	AWS_EC2_LocalGatewayRouteTable__AttributesSlice = []string{
		AWS_EC2_LocalGatewayRouteTable__AttributesMap.LocalGatewayRouteTableArn,
		AWS_EC2_LocalGatewayRouteTable__AttributesMap.LocalGatewayRouteTableId,
		AWS_EC2_LocalGatewayRouteTable__AttributesMap.OutpostArn,
		AWS_EC2_LocalGatewayRouteTable__AttributesMap.OwnerId,
		AWS_EC2_LocalGatewayRouteTable__AttributesMap.State,
	}
)

var (
	// AWS_EC2_LocalGatewayRouteTable__PropertiesMap reports all the CloudFormation properties for AWS::EC2::LocalGatewayRouteTable.
	AWS_EC2_LocalGatewayRouteTable__PropertiesMap = struct {
		LocalGatewayId string
		Mode           string
		Tags           string
	}{
		LocalGatewayId: "LocalGatewayId",
		Mode:           "Mode",
		Tags:           "Tags",
	}

	// AWS_EC2_LocalGatewayRouteTable__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::LocalGatewayRouteTable.
	AWS_EC2_LocalGatewayRouteTable__PropertiesSlice = []string{
		AWS_EC2_LocalGatewayRouteTable__PropertiesMap.LocalGatewayId,
		AWS_EC2_LocalGatewayRouteTable__PropertiesMap.Mode,
		AWS_EC2_LocalGatewayRouteTable__PropertiesMap.Tags,
	}
)

// AWS_EC2_LocalGatewayRouteTable is a binding for AWS::EC2::LocalGatewayRouteTable.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetable.html
type AWS_EC2_LocalGatewayRouteTable struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// LocalGatewayId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetable.html#cfn-ec2-localgatewayroutetable-localgatewayid
	LocalGatewayId cfz.Expression[string] `json:"LocalGatewayId,omitempty"`

	// Mode is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetable.html#cfn-ec2-localgatewayroutetable-mode
	Mode cfz.Expression[string] `json:"Mode,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroutetable.html#cfn-ec2-localgatewayroutetable-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_EC2_LocalGatewayRouteTable initializes a new *AWS_EC2_LocalGatewayRouteTable.
func New__AWS_EC2_LocalGatewayRouteTable(logicalName string) *AWS_EC2_LocalGatewayRouteTable {
	return &AWS_EC2_LocalGatewayRouteTable{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_LocalGatewayRouteTable) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_LocalGatewayRouteTable) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_LocalGatewayRouteTable) GetType() string {
	return AWS_EC2_LocalGatewayRouteTable__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_LocalGatewayRouteTable) Set__LogicalName(v string) *AWS_EC2_LocalGatewayRouteTable {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_LocalGatewayRouteTable) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_LocalGatewayRouteTable {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_LocalGatewayRouteTable) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_LocalGatewayRouteTable {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_LocalGatewayRouteTable) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_LocalGatewayRouteTable {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_LocalGatewayRouteTable) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_LocalGatewayRouteTable {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_LocalGatewayRouteTable) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_LocalGatewayRouteTable {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_LocalGatewayRouteTable) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_LocalGatewayRouteTable {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__LocalGatewayId updates property "LocalGatewayId".
func (t *AWS_EC2_LocalGatewayRouteTable) Set__LocalGatewayId(v cfz.Expression[string]) *AWS_EC2_LocalGatewayRouteTable {
	t.LocalGatewayId = v
	return t
}

// SetV__LocalGatewayId updates property "LocalGatewayId".
func (t *AWS_EC2_LocalGatewayRouteTable) SetV__LocalGatewayId(v string) *AWS_EC2_LocalGatewayRouteTable {
	t.LocalGatewayId = cfz.V(v)
	return t
}

// Set__Mode updates property "Mode".
func (t *AWS_EC2_LocalGatewayRouteTable) Set__Mode(v cfz.Expression[string]) *AWS_EC2_LocalGatewayRouteTable {
	t.Mode = v
	return t
}

// SetV__Mode updates property "Mode".
func (t *AWS_EC2_LocalGatewayRouteTable) SetV__Mode(v string) *AWS_EC2_LocalGatewayRouteTable {
	t.Mode = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_LocalGatewayRouteTable) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_LocalGatewayRouteTable {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_LocalGatewayRouteTable) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_LocalGatewayRouteTable {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_LocalGatewayRouteTable) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_LocalGatewayRouteTable {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_LocalGatewayRouteTable) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__LocalGatewayRouteTableArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LocalGatewayRouteTableArn
func (t *AWS_EC2_LocalGatewayRouteTable) GetAtt__LocalGatewayRouteTableArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_LocalGatewayRouteTable__AttributesMap.LocalGatewayRouteTableArn))
}

// GetAtt__LocalGatewayRouteTableId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LocalGatewayRouteTableId
func (t *AWS_EC2_LocalGatewayRouteTable) GetAtt__LocalGatewayRouteTableId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_LocalGatewayRouteTable__AttributesMap.LocalGatewayRouteTableId))
}

// GetAtt__OutpostArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OutpostArn
func (t *AWS_EC2_LocalGatewayRouteTable) GetAtt__OutpostArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_LocalGatewayRouteTable__AttributesMap.OutpostArn))
}

// GetAtt__OwnerId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OwnerId
func (t *AWS_EC2_LocalGatewayRouteTable) GetAtt__OwnerId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_LocalGatewayRouteTable__AttributesMap.OwnerId))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_EC2_LocalGatewayRouteTable) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_LocalGatewayRouteTable__AttributesMap.State))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_LocalGatewayRouteTable) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LocalGatewayRouteTableArn returns a conventionally configured output for an attribute of this resource.
// Attribute: LocalGatewayRouteTableArn
func (t *AWS_EC2_LocalGatewayRouteTable) GetConventionalOutputAtt__LocalGatewayRouteTableArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLocalGatewayRouteTableArn", t.GetAtt__LocalGatewayRouteTableArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LocalGatewayRouteTableId returns a conventionally configured output for an attribute of this resource.
// Attribute: LocalGatewayRouteTableId
func (t *AWS_EC2_LocalGatewayRouteTable) GetConventionalOutputAtt__LocalGatewayRouteTableId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLocalGatewayRouteTableId", t.GetAtt__LocalGatewayRouteTableId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OutpostArn returns a conventionally configured output for an attribute of this resource.
// Attribute: OutpostArn
func (t *AWS_EC2_LocalGatewayRouteTable) GetConventionalOutputAtt__OutpostArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOutpostArn", t.GetAtt__OutpostArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OwnerId returns a conventionally configured output for an attribute of this resource.
// Attribute: OwnerId
func (t *AWS_EC2_LocalGatewayRouteTable) GetConventionalOutputAtt__OwnerId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOwnerId", t.GetAtt__OwnerId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_EC2_LocalGatewayRouteTable) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_LocalGatewayRouteTable) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_LocalGatewayRouteTable

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_LocalGatewayRouteTable) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
