// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_IPAMResourceDiscovery)(nil)
	_ cfz.Resource                   = (*AWS_EC2_IPAMResourceDiscovery)(nil)
)

const (
	// AWS_EC2_IPAMResourceDiscovery__Type is the CloudFormation type for AWS::EC2::IPAMResourceDiscovery.
	AWS_EC2_IPAMResourceDiscovery__Type = "AWS::EC2::IPAMResourceDiscovery"
)

var (
	// AWS_EC2_IPAMResourceDiscovery__AttributesMap reports all the CloudFormation attributes for AWS::EC2::IPAMResourceDiscovery.
	AWS_EC2_IPAMResourceDiscovery__AttributesMap = struct {
		IpamResourceDiscoveryArn    string
		IpamResourceDiscoveryId     string
		IpamResourceDiscoveryRegion string
		IsDefault                   string
		OwnerId                     string
		State                       string
	}{
		IpamResourceDiscoveryArn:    "IpamResourceDiscoveryArn",
		IpamResourceDiscoveryId:     "IpamResourceDiscoveryId",
		IpamResourceDiscoveryRegion: "IpamResourceDiscoveryRegion",
		IsDefault:                   "IsDefault",
		OwnerId:                     "OwnerId",
		State:                       "State",
	}

	// AWS_EC2_IPAMResourceDiscovery__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::IPAMResourceDiscovery.
	AWS_EC2_IPAMResourceDiscovery__AttributesSlice = []string{
		AWS_EC2_IPAMResourceDiscovery__AttributesMap.IpamResourceDiscoveryArn,
		AWS_EC2_IPAMResourceDiscovery__AttributesMap.IpamResourceDiscoveryId,
		AWS_EC2_IPAMResourceDiscovery__AttributesMap.IpamResourceDiscoveryRegion,
		AWS_EC2_IPAMResourceDiscovery__AttributesMap.IsDefault,
		AWS_EC2_IPAMResourceDiscovery__AttributesMap.OwnerId,
		AWS_EC2_IPAMResourceDiscovery__AttributesMap.State,
	}
)

var (
	// AWS_EC2_IPAMResourceDiscovery__PropertiesMap reports all the CloudFormation properties for AWS::EC2::IPAMResourceDiscovery.
	AWS_EC2_IPAMResourceDiscovery__PropertiesMap = struct {
		Description      string
		OperatingRegions string
		Tags             string
	}{
		Description:      "Description",
		OperatingRegions: "OperatingRegions",
		Tags:             "Tags",
	}

	// AWS_EC2_IPAMResourceDiscovery__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::IPAMResourceDiscovery.
	AWS_EC2_IPAMResourceDiscovery__PropertiesSlice = []string{
		AWS_EC2_IPAMResourceDiscovery__PropertiesMap.Description,
		AWS_EC2_IPAMResourceDiscovery__PropertiesMap.OperatingRegions,
		AWS_EC2_IPAMResourceDiscovery__PropertiesMap.Tags,
	}
)

// AWS_EC2_IPAMResourceDiscovery is a binding for AWS::EC2::IPAMResourceDiscovery.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html
type AWS_EC2_IPAMResourceDiscovery struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html#cfn-ec2-ipamresourcediscovery-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// OperatingRegions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html#cfn-ec2-ipamresourcediscovery-operatingregions
	OperatingRegions cfz.ExpressionSlice[AWS_EC2_IPAMResourceDiscovery_IpamOperatingRegion] `json:"OperatingRegions,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipamresourcediscovery.html#cfn-ec2-ipamresourcediscovery-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_EC2_IPAMResourceDiscovery initializes a new *AWS_EC2_IPAMResourceDiscovery.
func New__AWS_EC2_IPAMResourceDiscovery(logicalName string) *AWS_EC2_IPAMResourceDiscovery {
	return &AWS_EC2_IPAMResourceDiscovery{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_IPAMResourceDiscovery) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_IPAMResourceDiscovery) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_IPAMResourceDiscovery) GetType() string {
	return AWS_EC2_IPAMResourceDiscovery__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_IPAMResourceDiscovery) Set__LogicalName(v string) *AWS_EC2_IPAMResourceDiscovery {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_IPAMResourceDiscovery) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_IPAMResourceDiscovery {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_IPAMResourceDiscovery) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_IPAMResourceDiscovery {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_IPAMResourceDiscovery) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_IPAMResourceDiscovery {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_IPAMResourceDiscovery) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_IPAMResourceDiscovery {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_IPAMResourceDiscovery) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_IPAMResourceDiscovery {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_IPAMResourceDiscovery) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_IPAMResourceDiscovery {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EC2_IPAMResourceDiscovery) Set__Description(v cfz.Expression[string]) *AWS_EC2_IPAMResourceDiscovery {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EC2_IPAMResourceDiscovery) SetV__Description(v string) *AWS_EC2_IPAMResourceDiscovery {
	t.Description = cfz.V(v)
	return t
}

// Set__OperatingRegions updates property "OperatingRegions".
func (t *AWS_EC2_IPAMResourceDiscovery) Set__OperatingRegions(v cfz.ExpressionSlice[AWS_EC2_IPAMResourceDiscovery_IpamOperatingRegion]) *AWS_EC2_IPAMResourceDiscovery {
	t.OperatingRegions = v
	return t
}

// SetS__OperatingRegions updates property "OperatingRegions".
func (t *AWS_EC2_IPAMResourceDiscovery) SetS__OperatingRegions(v ...cfz.Expression[AWS_EC2_IPAMResourceDiscovery_IpamOperatingRegion]) *AWS_EC2_IPAMResourceDiscovery {
	t.OperatingRegions = cfz.S(v...)
	return t
}

// SetSV__OperatingRegions updates property "OperatingRegions".
func (t *AWS_EC2_IPAMResourceDiscovery) SetSV__OperatingRegions(v ...AWS_EC2_IPAMResourceDiscovery_IpamOperatingRegion) *AWS_EC2_IPAMResourceDiscovery {
	t.OperatingRegions = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_IPAMResourceDiscovery) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_IPAMResourceDiscovery {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_IPAMResourceDiscovery) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_IPAMResourceDiscovery {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_IPAMResourceDiscovery) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_IPAMResourceDiscovery {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_IPAMResourceDiscovery) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__IpamResourceDiscoveryArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpamResourceDiscoveryArn
func (t *AWS_EC2_IPAMResourceDiscovery) GetAtt__IpamResourceDiscoveryArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMResourceDiscovery__AttributesMap.IpamResourceDiscoveryArn))
}

// GetAtt__IpamResourceDiscoveryId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpamResourceDiscoveryId
func (t *AWS_EC2_IPAMResourceDiscovery) GetAtt__IpamResourceDiscoveryId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMResourceDiscovery__AttributesMap.IpamResourceDiscoveryId))
}

// GetAtt__IpamResourceDiscoveryRegion returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpamResourceDiscoveryRegion
func (t *AWS_EC2_IPAMResourceDiscovery) GetAtt__IpamResourceDiscoveryRegion() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMResourceDiscovery__AttributesMap.IpamResourceDiscoveryRegion))
}

// GetAtt__IsDefault returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IsDefault
func (t *AWS_EC2_IPAMResourceDiscovery) GetAtt__IsDefault() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMResourceDiscovery__AttributesMap.IsDefault))
}

// GetAtt__OwnerId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: OwnerId
func (t *AWS_EC2_IPAMResourceDiscovery) GetAtt__OwnerId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMResourceDiscovery__AttributesMap.OwnerId))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_EC2_IPAMResourceDiscovery) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMResourceDiscovery__AttributesMap.State))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_IPAMResourceDiscovery) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpamResourceDiscoveryArn returns a conventionally configured output for an attribute of this resource.
// Attribute: IpamResourceDiscoveryArn
func (t *AWS_EC2_IPAMResourceDiscovery) GetConventionalOutputAtt__IpamResourceDiscoveryArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpamResourceDiscoveryArn", t.GetAtt__IpamResourceDiscoveryArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpamResourceDiscoveryId returns a conventionally configured output for an attribute of this resource.
// Attribute: IpamResourceDiscoveryId
func (t *AWS_EC2_IPAMResourceDiscovery) GetConventionalOutputAtt__IpamResourceDiscoveryId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpamResourceDiscoveryId", t.GetAtt__IpamResourceDiscoveryId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpamResourceDiscoveryRegion returns a conventionally configured output for an attribute of this resource.
// Attribute: IpamResourceDiscoveryRegion
func (t *AWS_EC2_IPAMResourceDiscovery) GetConventionalOutputAtt__IpamResourceDiscoveryRegion(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpamResourceDiscoveryRegion", t.GetAtt__IpamResourceDiscoveryRegion())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IsDefault returns a conventionally configured output for an attribute of this resource.
// Attribute: IsDefault
func (t *AWS_EC2_IPAMResourceDiscovery) GetConventionalOutputAtt__IsDefault(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIsDefault", t.GetAtt__IsDefault())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__OwnerId returns a conventionally configured output for an attribute of this resource.
// Attribute: OwnerId
func (t *AWS_EC2_IPAMResourceDiscovery) GetConventionalOutputAtt__OwnerId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOwnerId", t.GetAtt__OwnerId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_EC2_IPAMResourceDiscovery) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_IPAMResourceDiscovery) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_IPAMResourceDiscovery

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_IPAMResourceDiscovery) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
