// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_IPAMPoolCidr)(nil)
	_ cfz.Resource                   = (*AWS_EC2_IPAMPoolCidr)(nil)
)

const (
	// AWS_EC2_IPAMPoolCidr__Type is the CloudFormation type for AWS::EC2::IPAMPoolCidr.
	AWS_EC2_IPAMPoolCidr__Type = "AWS::EC2::IPAMPoolCidr"
)

var (
	// AWS_EC2_IPAMPoolCidr__AttributesMap reports all the CloudFormation attributes for AWS::EC2::IPAMPoolCidr.
	AWS_EC2_IPAMPoolCidr__AttributesMap = struct {
		IpamPoolCidrId string
		State          string
	}{
		IpamPoolCidrId: "IpamPoolCidrId",
		State:          "State",
	}

	// AWS_EC2_IPAMPoolCidr__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::IPAMPoolCidr.
	AWS_EC2_IPAMPoolCidr__AttributesSlice = []string{
		AWS_EC2_IPAMPoolCidr__AttributesMap.IpamPoolCidrId,
		AWS_EC2_IPAMPoolCidr__AttributesMap.State,
	}
)

var (
	// AWS_EC2_IPAMPoolCidr__PropertiesMap reports all the CloudFormation properties for AWS::EC2::IPAMPoolCidr.
	AWS_EC2_IPAMPoolCidr__PropertiesMap = struct {
		Cidr          string
		IpamPoolId    string
		NetmaskLength string
	}{
		Cidr:          "Cidr",
		IpamPoolId:    "IpamPoolId",
		NetmaskLength: "NetmaskLength",
	}

	// AWS_EC2_IPAMPoolCidr__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::IPAMPoolCidr.
	AWS_EC2_IPAMPoolCidr__PropertiesSlice = []string{
		AWS_EC2_IPAMPoolCidr__PropertiesMap.Cidr,
		AWS_EC2_IPAMPoolCidr__PropertiesMap.IpamPoolId,
		AWS_EC2_IPAMPoolCidr__PropertiesMap.NetmaskLength,
	}
)

// AWS_EC2_IPAMPoolCidr is a binding for AWS::EC2::IPAMPoolCidr.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampoolcidr.html
type AWS_EC2_IPAMPoolCidr struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Cidr is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampoolcidr.html#cfn-ec2-ipampoolcidr-cidr
	Cidr cfz.Expression[string] `json:"Cidr,omitempty"`

	// IpamPoolId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampoolcidr.html#cfn-ec2-ipampoolcidr-ipampoolid
	IpamPoolId cfz.Expression[string] `json:"IpamPoolId,omitempty"`

	// NetmaskLength is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampoolcidr.html#cfn-ec2-ipampoolcidr-netmasklength
	NetmaskLength cfz.Expression[int32] `json:"NetmaskLength,omitempty"`
}

// New__AWS_EC2_IPAMPoolCidr initializes a new *AWS_EC2_IPAMPoolCidr.
func New__AWS_EC2_IPAMPoolCidr(logicalName string) *AWS_EC2_IPAMPoolCidr {
	return &AWS_EC2_IPAMPoolCidr{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_IPAMPoolCidr) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_IPAMPoolCidr) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_IPAMPoolCidr) GetType() string {
	return AWS_EC2_IPAMPoolCidr__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_IPAMPoolCidr) Set__LogicalName(v string) *AWS_EC2_IPAMPoolCidr {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_IPAMPoolCidr) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_IPAMPoolCidr {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_IPAMPoolCidr) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_IPAMPoolCidr {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_IPAMPoolCidr) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_IPAMPoolCidr {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_IPAMPoolCidr) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_IPAMPoolCidr {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_IPAMPoolCidr) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_IPAMPoolCidr {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_IPAMPoolCidr) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_IPAMPoolCidr {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Cidr updates property "Cidr".
func (t *AWS_EC2_IPAMPoolCidr) Set__Cidr(v cfz.Expression[string]) *AWS_EC2_IPAMPoolCidr {
	t.Cidr = v
	return t
}

// SetV__Cidr updates property "Cidr".
func (t *AWS_EC2_IPAMPoolCidr) SetV__Cidr(v string) *AWS_EC2_IPAMPoolCidr {
	t.Cidr = cfz.V(v)
	return t
}

// Set__IpamPoolId updates property "IpamPoolId".
func (t *AWS_EC2_IPAMPoolCidr) Set__IpamPoolId(v cfz.Expression[string]) *AWS_EC2_IPAMPoolCidr {
	t.IpamPoolId = v
	return t
}

// SetV__IpamPoolId updates property "IpamPoolId".
func (t *AWS_EC2_IPAMPoolCidr) SetV__IpamPoolId(v string) *AWS_EC2_IPAMPoolCidr {
	t.IpamPoolId = cfz.V(v)
	return t
}

// Set__NetmaskLength updates property "NetmaskLength".
func (t *AWS_EC2_IPAMPoolCidr) Set__NetmaskLength(v cfz.Expression[int32]) *AWS_EC2_IPAMPoolCidr {
	t.NetmaskLength = v
	return t
}

// SetV__NetmaskLength updates property "NetmaskLength".
func (t *AWS_EC2_IPAMPoolCidr) SetV__NetmaskLength(v int32) *AWS_EC2_IPAMPoolCidr {
	t.NetmaskLength = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_IPAMPoolCidr) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__IpamPoolCidrId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpamPoolCidrId
func (t *AWS_EC2_IPAMPoolCidr) GetAtt__IpamPoolCidrId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPoolCidr__AttributesMap.IpamPoolCidrId))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_EC2_IPAMPoolCidr) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPoolCidr__AttributesMap.State))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_IPAMPoolCidr) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpamPoolCidrId returns a conventionally configured output for an attribute of this resource.
// Attribute: IpamPoolCidrId
func (t *AWS_EC2_IPAMPoolCidr) GetConventionalOutputAtt__IpamPoolCidrId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpamPoolCidrId", t.GetAtt__IpamPoolCidrId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_EC2_IPAMPoolCidr) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_IPAMPoolCidr) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_IPAMPoolCidr

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_IPAMPoolCidr) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
