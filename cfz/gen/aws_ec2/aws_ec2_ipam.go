// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_IPAM)(nil)
	_ cfz.Resource                   = (*AWS_EC2_IPAM)(nil)
)

const (
	// AWS_EC2_IPAM__Type is the CloudFormation type for AWS::EC2::IPAM.
	AWS_EC2_IPAM__Type = "AWS::EC2::IPAM"
)

var (
	// AWS_EC2_IPAM__AttributesMap reports all the CloudFormation attributes for AWS::EC2::IPAM.
	AWS_EC2_IPAM__AttributesMap = struct {
		Arn                                   string
		DefaultResourceDiscoveryAssociationId string
		DefaultResourceDiscoveryId            string
		IpamId                                string
		PrivateDefaultScopeId                 string
		PublicDefaultScopeId                  string
		ResourceDiscoveryAssociationCount     string
		ScopeCount                            string
	}{
		Arn:                                   "Arn",
		DefaultResourceDiscoveryAssociationId: "DefaultResourceDiscoveryAssociationId",
		DefaultResourceDiscoveryId:            "DefaultResourceDiscoveryId",
		IpamId:                                "IpamId",
		PrivateDefaultScopeId:                 "PrivateDefaultScopeId",
		PublicDefaultScopeId:                  "PublicDefaultScopeId",
		ResourceDiscoveryAssociationCount:     "ResourceDiscoveryAssociationCount",
		ScopeCount:                            "ScopeCount",
	}

	// AWS_EC2_IPAM__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::IPAM.
	AWS_EC2_IPAM__AttributesSlice = []string{
		AWS_EC2_IPAM__AttributesMap.Arn,
		AWS_EC2_IPAM__AttributesMap.DefaultResourceDiscoveryAssociationId,
		AWS_EC2_IPAM__AttributesMap.DefaultResourceDiscoveryId,
		AWS_EC2_IPAM__AttributesMap.IpamId,
		AWS_EC2_IPAM__AttributesMap.PrivateDefaultScopeId,
		AWS_EC2_IPAM__AttributesMap.PublicDefaultScopeId,
		AWS_EC2_IPAM__AttributesMap.ResourceDiscoveryAssociationCount,
		AWS_EC2_IPAM__AttributesMap.ScopeCount,
	}
)

var (
	// AWS_EC2_IPAM__PropertiesMap reports all the CloudFormation properties for AWS::EC2::IPAM.
	AWS_EC2_IPAM__PropertiesMap = struct {
		Description      string
		EnablePrivateGua string
		OperatingRegions string
		Tags             string
		Tier             string
	}{
		Description:      "Description",
		EnablePrivateGua: "EnablePrivateGua",
		OperatingRegions: "OperatingRegions",
		Tags:             "Tags",
		Tier:             "Tier",
	}

	// AWS_EC2_IPAM__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::IPAM.
	AWS_EC2_IPAM__PropertiesSlice = []string{
		AWS_EC2_IPAM__PropertiesMap.Description,
		AWS_EC2_IPAM__PropertiesMap.EnablePrivateGua,
		AWS_EC2_IPAM__PropertiesMap.OperatingRegions,
		AWS_EC2_IPAM__PropertiesMap.Tags,
		AWS_EC2_IPAM__PropertiesMap.Tier,
	}
)

// AWS_EC2_IPAM is a binding for AWS::EC2::IPAM.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html
type AWS_EC2_IPAM struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// EnablePrivateGua is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-enableprivategua
	EnablePrivateGua cfz.Expression[bool] `json:"EnablePrivateGua,omitempty"`

	// OperatingRegions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-operatingregions
	OperatingRegions cfz.ExpressionSlice[AWS_EC2_IPAM_IpamOperatingRegion] `json:"OperatingRegions,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Tier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipam.html#cfn-ec2-ipam-tier
	Tier cfz.Expression[string] `json:"Tier,omitempty"`
}

// New__AWS_EC2_IPAM initializes a new *AWS_EC2_IPAM.
func New__AWS_EC2_IPAM(logicalName string) *AWS_EC2_IPAM {
	return &AWS_EC2_IPAM{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_IPAM) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_IPAM) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_IPAM) GetType() string {
	return AWS_EC2_IPAM__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_IPAM) Set__LogicalName(v string) *AWS_EC2_IPAM {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_IPAM) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_IPAM {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_IPAM) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_IPAM {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_IPAM) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_IPAM {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_IPAM) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_IPAM {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_IPAM) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_IPAM {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_IPAM) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_IPAM {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EC2_IPAM) Set__Description(v cfz.Expression[string]) *AWS_EC2_IPAM {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EC2_IPAM) SetV__Description(v string) *AWS_EC2_IPAM {
	t.Description = cfz.V(v)
	return t
}

// Set__EnablePrivateGua updates property "EnablePrivateGua".
func (t *AWS_EC2_IPAM) Set__EnablePrivateGua(v cfz.Expression[bool]) *AWS_EC2_IPAM {
	t.EnablePrivateGua = v
	return t
}

// SetV__EnablePrivateGua updates property "EnablePrivateGua".
func (t *AWS_EC2_IPAM) SetV__EnablePrivateGua(v bool) *AWS_EC2_IPAM {
	t.EnablePrivateGua = cfz.V(v)
	return t
}

// Set__OperatingRegions updates property "OperatingRegions".
func (t *AWS_EC2_IPAM) Set__OperatingRegions(v cfz.ExpressionSlice[AWS_EC2_IPAM_IpamOperatingRegion]) *AWS_EC2_IPAM {
	t.OperatingRegions = v
	return t
}

// SetS__OperatingRegions updates property "OperatingRegions".
func (t *AWS_EC2_IPAM) SetS__OperatingRegions(v ...cfz.Expression[AWS_EC2_IPAM_IpamOperatingRegion]) *AWS_EC2_IPAM {
	t.OperatingRegions = cfz.S(v...)
	return t
}

// SetSV__OperatingRegions updates property "OperatingRegions".
func (t *AWS_EC2_IPAM) SetSV__OperatingRegions(v ...AWS_EC2_IPAM_IpamOperatingRegion) *AWS_EC2_IPAM {
	t.OperatingRegions = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_IPAM) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_IPAM {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_IPAM) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_IPAM {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_IPAM) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_IPAM {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Tier updates property "Tier".
func (t *AWS_EC2_IPAM) Set__Tier(v cfz.Expression[string]) *AWS_EC2_IPAM {
	t.Tier = v
	return t
}

// SetV__Tier updates property "Tier".
func (t *AWS_EC2_IPAM) SetV__Tier(v string) *AWS_EC2_IPAM {
	t.Tier = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_IPAM) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_EC2_IPAM) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAM__AttributesMap.Arn))
}

// GetAtt__DefaultResourceDiscoveryAssociationId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DefaultResourceDiscoveryAssociationId
func (t *AWS_EC2_IPAM) GetAtt__DefaultResourceDiscoveryAssociationId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAM__AttributesMap.DefaultResourceDiscoveryAssociationId))
}

// GetAtt__DefaultResourceDiscoveryId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DefaultResourceDiscoveryId
func (t *AWS_EC2_IPAM) GetAtt__DefaultResourceDiscoveryId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAM__AttributesMap.DefaultResourceDiscoveryId))
}

// GetAtt__IpamId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpamId
func (t *AWS_EC2_IPAM) GetAtt__IpamId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAM__AttributesMap.IpamId))
}

// GetAtt__PrivateDefaultScopeId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PrivateDefaultScopeId
func (t *AWS_EC2_IPAM) GetAtt__PrivateDefaultScopeId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAM__AttributesMap.PrivateDefaultScopeId))
}

// GetAtt__PublicDefaultScopeId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublicDefaultScopeId
func (t *AWS_EC2_IPAM) GetAtt__PublicDefaultScopeId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAM__AttributesMap.PublicDefaultScopeId))
}

// GetAtt__ResourceDiscoveryAssociationCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceDiscoveryAssociationCount
func (t *AWS_EC2_IPAM) GetAtt__ResourceDiscoveryAssociationCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAM__AttributesMap.ResourceDiscoveryAssociationCount))
}

// GetAtt__ScopeCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ScopeCount
func (t *AWS_EC2_IPAM) GetAtt__ScopeCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAM__AttributesMap.ScopeCount))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_IPAM) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_EC2_IPAM) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DefaultResourceDiscoveryAssociationId returns a conventionally configured output for an attribute of this resource.
// Attribute: DefaultResourceDiscoveryAssociationId
func (t *AWS_EC2_IPAM) GetConventionalOutputAtt__DefaultResourceDiscoveryAssociationId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDefaultResourceDiscoveryAssociationId", t.GetAtt__DefaultResourceDiscoveryAssociationId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DefaultResourceDiscoveryId returns a conventionally configured output for an attribute of this resource.
// Attribute: DefaultResourceDiscoveryId
func (t *AWS_EC2_IPAM) GetConventionalOutputAtt__DefaultResourceDiscoveryId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDefaultResourceDiscoveryId", t.GetAtt__DefaultResourceDiscoveryId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpamId returns a conventionally configured output for an attribute of this resource.
// Attribute: IpamId
func (t *AWS_EC2_IPAM) GetConventionalOutputAtt__IpamId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpamId", t.GetAtt__IpamId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PrivateDefaultScopeId returns a conventionally configured output for an attribute of this resource.
// Attribute: PrivateDefaultScopeId
func (t *AWS_EC2_IPAM) GetConventionalOutputAtt__PrivateDefaultScopeId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPrivateDefaultScopeId", t.GetAtt__PrivateDefaultScopeId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublicDefaultScopeId returns a conventionally configured output for an attribute of this resource.
// Attribute: PublicDefaultScopeId
func (t *AWS_EC2_IPAM) GetConventionalOutputAtt__PublicDefaultScopeId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublicDefaultScopeId", t.GetAtt__PublicDefaultScopeId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceDiscoveryAssociationCount returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceDiscoveryAssociationCount
func (t *AWS_EC2_IPAM) GetConventionalOutputAtt__ResourceDiscoveryAssociationCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceDiscoveryAssociationCount", t.GetAtt__ResourceDiscoveryAssociationCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ScopeCount returns a conventionally configured output for an attribute of this resource.
// Attribute: ScopeCount
func (t *AWS_EC2_IPAM) GetConventionalOutputAtt__ScopeCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttScopeCount", t.GetAtt__ScopeCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_IPAM) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_IPAM

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_IPAM) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
