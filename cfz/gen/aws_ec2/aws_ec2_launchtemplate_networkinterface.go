// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_LaunchTemplate_NetworkInterface__Type is the CloudFormation type for AWS::EC2::LaunchTemplate.NetworkInterface.
	AWS_EC2_LaunchTemplate_NetworkInterface__Type = "AWS::EC2::LaunchTemplate.NetworkInterface"
)

var (
	// AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap reports all the CloudFormation properties for AWS::EC2::LaunchTemplate.NetworkInterface.
	AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap = struct {
		AssociateCarrierIpAddress       string
		AssociatePublicIpAddress        string
		ConnectionTrackingSpecification string
		DeleteOnTermination             string
		Description                     string
		DeviceIndex                     string
		EnaSrdSpecification             string
		Groups                          string
		InterfaceType                   string
		Ipv4PrefixCount                 string
		Ipv4Prefixes                    string
		Ipv6AddressCount                string
		Ipv6Addresses                   string
		Ipv6PrefixCount                 string
		Ipv6Prefixes                    string
		NetworkCardIndex                string
		NetworkInterfaceId              string
		PrimaryIpv6                     string
		PrivateIpAddress                string
		PrivateIpAddresses              string
		SecondaryPrivateIpAddressCount  string
		SubnetId                        string
	}{
		AssociateCarrierIpAddress:       "AssociateCarrierIpAddress",
		AssociatePublicIpAddress:        "AssociatePublicIpAddress",
		ConnectionTrackingSpecification: "ConnectionTrackingSpecification",
		DeleteOnTermination:             "DeleteOnTermination",
		Description:                     "Description",
		DeviceIndex:                     "DeviceIndex",
		EnaSrdSpecification:             "EnaSrdSpecification",
		Groups:                          "Groups",
		InterfaceType:                   "InterfaceType",
		Ipv4PrefixCount:                 "Ipv4PrefixCount",
		Ipv4Prefixes:                    "Ipv4Prefixes",
		Ipv6AddressCount:                "Ipv6AddressCount",
		Ipv6Addresses:                   "Ipv6Addresses",
		Ipv6PrefixCount:                 "Ipv6PrefixCount",
		Ipv6Prefixes:                    "Ipv6Prefixes",
		NetworkCardIndex:                "NetworkCardIndex",
		NetworkInterfaceId:              "NetworkInterfaceId",
		PrimaryIpv6:                     "PrimaryIpv6",
		PrivateIpAddress:                "PrivateIpAddress",
		PrivateIpAddresses:              "PrivateIpAddresses",
		SecondaryPrivateIpAddressCount:  "SecondaryPrivateIpAddressCount",
		SubnetId:                        "SubnetId",
	}

	// AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::LaunchTemplate.NetworkInterface.
	AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesSlice = []string{
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.AssociateCarrierIpAddress,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.AssociatePublicIpAddress,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.ConnectionTrackingSpecification,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.DeleteOnTermination,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.Description,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.DeviceIndex,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.EnaSrdSpecification,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.Groups,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.InterfaceType,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.Ipv4PrefixCount,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.Ipv4Prefixes,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.Ipv6AddressCount,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.Ipv6Addresses,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.Ipv6PrefixCount,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.Ipv6Prefixes,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.NetworkCardIndex,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.NetworkInterfaceId,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.PrimaryIpv6,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.PrivateIpAddress,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.PrivateIpAddresses,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.SecondaryPrivateIpAddressCount,
		AWS_EC2_LaunchTemplate_NetworkInterface__PropertiesMap.SubnetId,
	}
)

// AWS_EC2_LaunchTemplate_NetworkInterface is a binding for AWS::EC2::LaunchTemplate.NetworkInterface.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html
type AWS_EC2_LaunchTemplate_NetworkInterface struct {
	// AssociateCarrierIpAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatecarrieripaddress
	AssociateCarrierIpAddress cfz.Expression[bool] `json:"AssociateCarrierIpAddress,omitempty"`

	// AssociatePublicIpAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-associatepublicipaddress
	AssociatePublicIpAddress cfz.Expression[bool] `json:"AssociatePublicIpAddress,omitempty"`

	// ConnectionTrackingSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-connectiontrackingspecification
	ConnectionTrackingSpecification cfz.Expression[AWS_EC2_LaunchTemplate_ConnectionTrackingSpecification] `json:"ConnectionTrackingSpecification,omitempty"`

	// DeleteOnTermination is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deleteontermination
	DeleteOnTermination cfz.Expression[bool] `json:"DeleteOnTermination,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DeviceIndex is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-deviceindex
	DeviceIndex cfz.Expression[int32] `json:"DeviceIndex,omitempty"`

	// EnaSrdSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-enasrdspecification
	EnaSrdSpecification cfz.Expression[AWS_EC2_LaunchTemplate_EnaSrdSpecification] `json:"EnaSrdSpecification,omitempty"`

	// Groups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-groups
	Groups cfz.ExpressionSlice[string] `json:"Groups,omitempty"`

	// InterfaceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-interfacetype
	InterfaceType cfz.Expression[string] `json:"InterfaceType,omitempty"`

	// Ipv4PrefixCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv4prefixcount
	Ipv4PrefixCount cfz.Expression[int32] `json:"Ipv4PrefixCount,omitempty"`

	// Ipv4Prefixes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv4prefixes
	Ipv4Prefixes cfz.ExpressionSlice[AWS_EC2_LaunchTemplate_Ipv4PrefixSpecification] `json:"Ipv4Prefixes,omitempty"`

	// Ipv6AddressCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresscount
	Ipv6AddressCount cfz.Expression[int32] `json:"Ipv6AddressCount,omitempty"`

	// Ipv6Addresses is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6addresses
	Ipv6Addresses cfz.ExpressionSlice[AWS_EC2_LaunchTemplate_Ipv6Add] `json:"Ipv6Addresses,omitempty"`

	// Ipv6PrefixCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6prefixcount
	Ipv6PrefixCount cfz.Expression[int32] `json:"Ipv6PrefixCount,omitempty"`

	// Ipv6Prefixes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-ipv6prefixes
	Ipv6Prefixes cfz.ExpressionSlice[AWS_EC2_LaunchTemplate_Ipv6PrefixSpecification] `json:"Ipv6Prefixes,omitempty"`

	// NetworkCardIndex is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkcardindex
	NetworkCardIndex cfz.Expression[int32] `json:"NetworkCardIndex,omitempty"`

	// NetworkInterfaceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-networkinterfaceid
	NetworkInterfaceId cfz.Expression[string] `json:"NetworkInterfaceId,omitempty"`

	// PrimaryIpv6 is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-primaryipv6
	PrimaryIpv6 cfz.Expression[bool] `json:"PrimaryIpv6,omitempty"`

	// PrivateIpAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddress
	PrivateIpAddress cfz.Expression[string] `json:"PrivateIpAddress,omitempty"`

	// PrivateIpAddresses is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-privateipaddresses
	PrivateIpAddresses cfz.ExpressionSlice[AWS_EC2_LaunchTemplate_PrivateIpAdd] `json:"PrivateIpAddresses,omitempty"`

	// SecondaryPrivateIpAddressCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-secondaryprivateipaddresscount
	SecondaryPrivateIpAddressCount cfz.Expression[int32] `json:"SecondaryPrivateIpAddressCount,omitempty"`

	// SubnetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-networkinterface.html#cfn-ec2-launchtemplate-networkinterface-subnetid
	SubnetId cfz.Expression[string] `json:"SubnetId,omitempty"`
}

// New__AWS_EC2_LaunchTemplate_NetworkInterface initializes a new AWS_EC2_LaunchTemplate_NetworkInterface.
func New__AWS_EC2_LaunchTemplate_NetworkInterface() AWS_EC2_LaunchTemplate_NetworkInterface {
	return AWS_EC2_LaunchTemplate_NetworkInterface{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_LaunchTemplate_NetworkInterface) GetType() string {
	return AWS_EC2_LaunchTemplate_NetworkInterface__Type
}

// Set__AssociateCarrierIpAddress updates property "AssociateCarrierIpAddress".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__AssociateCarrierIpAddress(v cfz.Expression[bool]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.AssociateCarrierIpAddress = v
	return t
}

// SetV__AssociateCarrierIpAddress updates property "AssociateCarrierIpAddress".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__AssociateCarrierIpAddress(v bool) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.AssociateCarrierIpAddress = cfz.V(v)
	return t
}

// Set__AssociatePublicIpAddress updates property "AssociatePublicIpAddress".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__AssociatePublicIpAddress(v cfz.Expression[bool]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.AssociatePublicIpAddress = v
	return t
}

// SetV__AssociatePublicIpAddress updates property "AssociatePublicIpAddress".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__AssociatePublicIpAddress(v bool) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.AssociatePublicIpAddress = cfz.V(v)
	return t
}

// Set__ConnectionTrackingSpecification updates property "ConnectionTrackingSpecification".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__ConnectionTrackingSpecification(v cfz.Expression[AWS_EC2_LaunchTemplate_ConnectionTrackingSpecification]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.ConnectionTrackingSpecification = v
	return t
}

// SetV__ConnectionTrackingSpecification updates property "ConnectionTrackingSpecification".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__ConnectionTrackingSpecification(v AWS_EC2_LaunchTemplate_ConnectionTrackingSpecification) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.ConnectionTrackingSpecification = cfz.V(v)
	return t
}

// Set__DeleteOnTermination updates property "DeleteOnTermination".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__DeleteOnTermination(v cfz.Expression[bool]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.DeleteOnTermination = v
	return t
}

// SetV__DeleteOnTermination updates property "DeleteOnTermination".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__DeleteOnTermination(v bool) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.DeleteOnTermination = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__Description(v cfz.Expression[string]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__Description(v string) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Description = cfz.V(v)
	return t
}

// Set__DeviceIndex updates property "DeviceIndex".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__DeviceIndex(v cfz.Expression[int32]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.DeviceIndex = v
	return t
}

// SetV__DeviceIndex updates property "DeviceIndex".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__DeviceIndex(v int32) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.DeviceIndex = cfz.V(v)
	return t
}

// Set__EnaSrdSpecification updates property "EnaSrdSpecification".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__EnaSrdSpecification(v cfz.Expression[AWS_EC2_LaunchTemplate_EnaSrdSpecification]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.EnaSrdSpecification = v
	return t
}

// SetV__EnaSrdSpecification updates property "EnaSrdSpecification".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__EnaSrdSpecification(v AWS_EC2_LaunchTemplate_EnaSrdSpecification) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.EnaSrdSpecification = cfz.V(v)
	return t
}

// Set__Groups updates property "Groups".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__Groups(v cfz.ExpressionSlice[string]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Groups = v
	return t
}

// SetS__Groups updates property "Groups".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetS__Groups(v ...cfz.Expression[string]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Groups = cfz.S(v...)
	return t
}

// SetSV__Groups updates property "Groups".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetSV__Groups(v ...string) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Groups = cfz.SV(v...)
	return t
}

// Set__InterfaceType updates property "InterfaceType".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__InterfaceType(v cfz.Expression[string]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.InterfaceType = v
	return t
}

// SetV__InterfaceType updates property "InterfaceType".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__InterfaceType(v string) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.InterfaceType = cfz.V(v)
	return t
}

// Set__Ipv4PrefixCount updates property "Ipv4PrefixCount".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__Ipv4PrefixCount(v cfz.Expression[int32]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv4PrefixCount = v
	return t
}

// SetV__Ipv4PrefixCount updates property "Ipv4PrefixCount".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__Ipv4PrefixCount(v int32) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv4PrefixCount = cfz.V(v)
	return t
}

// Set__Ipv4Prefixes updates property "Ipv4Prefixes".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__Ipv4Prefixes(v cfz.ExpressionSlice[AWS_EC2_LaunchTemplate_Ipv4PrefixSpecification]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv4Prefixes = v
	return t
}

// SetS__Ipv4Prefixes updates property "Ipv4Prefixes".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetS__Ipv4Prefixes(v ...cfz.Expression[AWS_EC2_LaunchTemplate_Ipv4PrefixSpecification]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv4Prefixes = cfz.S(v...)
	return t
}

// SetSV__Ipv4Prefixes updates property "Ipv4Prefixes".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetSV__Ipv4Prefixes(v ...AWS_EC2_LaunchTemplate_Ipv4PrefixSpecification) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv4Prefixes = cfz.SV(v...)
	return t
}

// Set__Ipv6AddressCount updates property "Ipv6AddressCount".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__Ipv6AddressCount(v cfz.Expression[int32]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6AddressCount = v
	return t
}

// SetV__Ipv6AddressCount updates property "Ipv6AddressCount".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__Ipv6AddressCount(v int32) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6AddressCount = cfz.V(v)
	return t
}

// Set__Ipv6Addresses updates property "Ipv6Addresses".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__Ipv6Addresses(v cfz.ExpressionSlice[AWS_EC2_LaunchTemplate_Ipv6Add]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6Addresses = v
	return t
}

// SetS__Ipv6Addresses updates property "Ipv6Addresses".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetS__Ipv6Addresses(v ...cfz.Expression[AWS_EC2_LaunchTemplate_Ipv6Add]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6Addresses = cfz.S(v...)
	return t
}

// SetSV__Ipv6Addresses updates property "Ipv6Addresses".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetSV__Ipv6Addresses(v ...AWS_EC2_LaunchTemplate_Ipv6Add) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6Addresses = cfz.SV(v...)
	return t
}

// Set__Ipv6PrefixCount updates property "Ipv6PrefixCount".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__Ipv6PrefixCount(v cfz.Expression[int32]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6PrefixCount = v
	return t
}

// SetV__Ipv6PrefixCount updates property "Ipv6PrefixCount".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__Ipv6PrefixCount(v int32) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6PrefixCount = cfz.V(v)
	return t
}

// Set__Ipv6Prefixes updates property "Ipv6Prefixes".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__Ipv6Prefixes(v cfz.ExpressionSlice[AWS_EC2_LaunchTemplate_Ipv6PrefixSpecification]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6Prefixes = v
	return t
}

// SetS__Ipv6Prefixes updates property "Ipv6Prefixes".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetS__Ipv6Prefixes(v ...cfz.Expression[AWS_EC2_LaunchTemplate_Ipv6PrefixSpecification]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6Prefixes = cfz.S(v...)
	return t
}

// SetSV__Ipv6Prefixes updates property "Ipv6Prefixes".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetSV__Ipv6Prefixes(v ...AWS_EC2_LaunchTemplate_Ipv6PrefixSpecification) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.Ipv6Prefixes = cfz.SV(v...)
	return t
}

// Set__NetworkCardIndex updates property "NetworkCardIndex".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__NetworkCardIndex(v cfz.Expression[int32]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.NetworkCardIndex = v
	return t
}

// SetV__NetworkCardIndex updates property "NetworkCardIndex".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__NetworkCardIndex(v int32) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.NetworkCardIndex = cfz.V(v)
	return t
}

// Set__NetworkInterfaceId updates property "NetworkInterfaceId".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__NetworkInterfaceId(v cfz.Expression[string]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.NetworkInterfaceId = v
	return t
}

// SetV__NetworkInterfaceId updates property "NetworkInterfaceId".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__NetworkInterfaceId(v string) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.NetworkInterfaceId = cfz.V(v)
	return t
}

// Set__PrimaryIpv6 updates property "PrimaryIpv6".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__PrimaryIpv6(v cfz.Expression[bool]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.PrimaryIpv6 = v
	return t
}

// SetV__PrimaryIpv6 updates property "PrimaryIpv6".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__PrimaryIpv6(v bool) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.PrimaryIpv6 = cfz.V(v)
	return t
}

// Set__PrivateIpAddress updates property "PrivateIpAddress".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__PrivateIpAddress(v cfz.Expression[string]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.PrivateIpAddress = v
	return t
}

// SetV__PrivateIpAddress updates property "PrivateIpAddress".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__PrivateIpAddress(v string) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.PrivateIpAddress = cfz.V(v)
	return t
}

// Set__PrivateIpAddresses updates property "PrivateIpAddresses".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__PrivateIpAddresses(v cfz.ExpressionSlice[AWS_EC2_LaunchTemplate_PrivateIpAdd]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.PrivateIpAddresses = v
	return t
}

// SetS__PrivateIpAddresses updates property "PrivateIpAddresses".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetS__PrivateIpAddresses(v ...cfz.Expression[AWS_EC2_LaunchTemplate_PrivateIpAdd]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.PrivateIpAddresses = cfz.S(v...)
	return t
}

// SetSV__PrivateIpAddresses updates property "PrivateIpAddresses".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetSV__PrivateIpAddresses(v ...AWS_EC2_LaunchTemplate_PrivateIpAdd) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.PrivateIpAddresses = cfz.SV(v...)
	return t
}

// Set__SecondaryPrivateIpAddressCount updates property "SecondaryPrivateIpAddressCount".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__SecondaryPrivateIpAddressCount(v cfz.Expression[int32]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.SecondaryPrivateIpAddressCount = v
	return t
}

// SetV__SecondaryPrivateIpAddressCount updates property "SecondaryPrivateIpAddressCount".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__SecondaryPrivateIpAddressCount(v int32) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.SecondaryPrivateIpAddressCount = cfz.V(v)
	return t
}

// Set__SubnetId updates property "SubnetId".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) Set__SubnetId(v cfz.Expression[string]) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.SubnetId = v
	return t
}

// SetV__SubnetId updates property "SubnetId".
func (t AWS_EC2_LaunchTemplate_NetworkInterface) SetV__SubnetId(v string) AWS_EC2_LaunchTemplate_NetworkInterface {
	t.SubnetId = cfz.V(v)
	return t
}
