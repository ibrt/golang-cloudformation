// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_SpotFleet_SpotFleetRequestConfigData__Type is the CloudFormation type for AWS::EC2::SpotFleet.SpotFleetRequestConfigData.
	AWS_EC2_SpotFleet_SpotFleetRequestConfigData__Type = "AWS::EC2::SpotFleet.SpotFleetRequestConfigData"
)

var (
	// AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap reports all the CloudFormation properties for AWS::EC2::SpotFleet.SpotFleetRequestConfigData.
	AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap = struct {
		AllocationStrategy               string
		Context                          string
		ExcessCapacityTerminationPolicy  string
		IamFleetRole                     string
		InstanceInterruptionBehavior     string
		InstancePoolsToUseCount          string
		LaunchSpecifications             string
		LaunchTemplateConfigs            string
		LoadBalancersConfig              string
		OnDemandAllocationStrategy       string
		OnDemandMaxTotalPrice            string
		OnDemandTargetCapacity           string
		ReplaceUnhealthyInstances        string
		SpotMaintenanceStrategies        string
		SpotMaxTotalPrice                string
		SpotPrice                        string
		TagSpecifications                string
		TargetCapacity                   string
		TargetCapacityUnitType           string
		TerminateInstancesWithExpiration string
		Type                             string
		ValidFrom                        string
		ValidUntil                       string
	}{
		AllocationStrategy:               "AllocationStrategy",
		Context:                          "Context",
		ExcessCapacityTerminationPolicy:  "ExcessCapacityTerminationPolicy",
		IamFleetRole:                     "IamFleetRole",
		InstanceInterruptionBehavior:     "InstanceInterruptionBehavior",
		InstancePoolsToUseCount:          "InstancePoolsToUseCount",
		LaunchSpecifications:             "LaunchSpecifications",
		LaunchTemplateConfigs:            "LaunchTemplateConfigs",
		LoadBalancersConfig:              "LoadBalancersConfig",
		OnDemandAllocationStrategy:       "OnDemandAllocationStrategy",
		OnDemandMaxTotalPrice:            "OnDemandMaxTotalPrice",
		OnDemandTargetCapacity:           "OnDemandTargetCapacity",
		ReplaceUnhealthyInstances:        "ReplaceUnhealthyInstances",
		SpotMaintenanceStrategies:        "SpotMaintenanceStrategies",
		SpotMaxTotalPrice:                "SpotMaxTotalPrice",
		SpotPrice:                        "SpotPrice",
		TagSpecifications:                "TagSpecifications",
		TargetCapacity:                   "TargetCapacity",
		TargetCapacityUnitType:           "TargetCapacityUnitType",
		TerminateInstancesWithExpiration: "TerminateInstancesWithExpiration",
		Type:                             "Type",
		ValidFrom:                        "ValidFrom",
		ValidUntil:                       "ValidUntil",
	}

	// AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::SpotFleet.SpotFleetRequestConfigData.
	AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesSlice = []string{
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.AllocationStrategy,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.Context,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.ExcessCapacityTerminationPolicy,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.IamFleetRole,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.InstanceInterruptionBehavior,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.InstancePoolsToUseCount,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.LaunchSpecifications,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.LaunchTemplateConfigs,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.LoadBalancersConfig,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.OnDemandAllocationStrategy,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.OnDemandMaxTotalPrice,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.OnDemandTargetCapacity,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.ReplaceUnhealthyInstances,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.SpotMaintenanceStrategies,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.SpotMaxTotalPrice,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.SpotPrice,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.TagSpecifications,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.TargetCapacity,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.TargetCapacityUnitType,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.TerminateInstancesWithExpiration,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.Type,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.ValidFrom,
		AWS_EC2_SpotFleet_SpotFleetRequestConfigData__PropertiesMap.ValidUntil,
	}
)

// AWS_EC2_SpotFleet_SpotFleetRequestConfigData is a binding for AWS::EC2::SpotFleet.SpotFleetRequestConfigData.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html
type AWS_EC2_SpotFleet_SpotFleetRequestConfigData struct {
	// AllocationStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-allocationstrategy
	AllocationStrategy cfz.Expression[string] `json:"AllocationStrategy,omitempty"`

	// Context is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-context
	Context cfz.Expression[string] `json:"Context,omitempty"`

	// ExcessCapacityTerminationPolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-excesscapacityterminationpolicy
	ExcessCapacityTerminationPolicy cfz.Expression[string] `json:"ExcessCapacityTerminationPolicy,omitempty"`

	// IamFleetRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-iamfleetrole
	IamFleetRole cfz.Expression[string] `json:"IamFleetRole,omitempty"`

	// InstanceInterruptionBehavior is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instanceinterruptionbehavior
	InstanceInterruptionBehavior cfz.Expression[string] `json:"InstanceInterruptionBehavior,omitempty"`

	// InstancePoolsToUseCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-instancepoolstousecount
	InstancePoolsToUseCount cfz.Expression[int32] `json:"InstancePoolsToUseCount,omitempty"`

	// LaunchSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchspecifications
	LaunchSpecifications cfz.ExpressionSlice[AWS_EC2_SpotFleet_SpotFleetLaunchSpecification] `json:"LaunchSpecifications,omitempty"`

	// LaunchTemplateConfigs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-launchtemplateconfigs
	LaunchTemplateConfigs cfz.ExpressionSlice[AWS_EC2_SpotFleet_LaunchTemplateConfig] `json:"LaunchTemplateConfigs,omitempty"`

	// LoadBalancersConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-loadbalancersconfig
	LoadBalancersConfig cfz.Expression[AWS_EC2_SpotFleet_LoadBalancersConfig] `json:"LoadBalancersConfig,omitempty"`

	// OnDemandAllocationStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandallocationstrategy
	OnDemandAllocationStrategy cfz.Expression[string] `json:"OnDemandAllocationStrategy,omitempty"`

	// OnDemandMaxTotalPrice is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandmaxtotalprice
	OnDemandMaxTotalPrice cfz.Expression[string] `json:"OnDemandMaxTotalPrice,omitempty"`

	// OnDemandTargetCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-ondemandtargetcapacity
	OnDemandTargetCapacity cfz.Expression[int32] `json:"OnDemandTargetCapacity,omitempty"`

	// ReplaceUnhealthyInstances is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-replaceunhealthyinstances
	ReplaceUnhealthyInstances cfz.Expression[bool] `json:"ReplaceUnhealthyInstances,omitempty"`

	// SpotMaintenanceStrategies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotmaintenancestrategies
	SpotMaintenanceStrategies cfz.Expression[AWS_EC2_SpotFleet_SpotMaintenanceStrategies] `json:"SpotMaintenanceStrategies,omitempty"`

	// SpotMaxTotalPrice is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotmaxtotalprice
	SpotMaxTotalPrice cfz.Expression[string] `json:"SpotMaxTotalPrice,omitempty"`

	// SpotPrice is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-spotprice
	SpotPrice cfz.Expression[string] `json:"SpotPrice,omitempty"`

	// TagSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-tagspecifications
	TagSpecifications cfz.ExpressionSlice[AWS_EC2_SpotFleet_SpotFleetTagSpecification] `json:"TagSpecifications,omitempty"`

	// TargetCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacity
	TargetCapacity cfz.Expression[int32] `json:"TargetCapacity,omitempty"`

	// TargetCapacityUnitType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-targetcapacityunittype
	TargetCapacityUnitType cfz.Expression[string] `json:"TargetCapacityUnitType,omitempty"`

	// TerminateInstancesWithExpiration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-terminateinstanceswithexpiration
	TerminateInstancesWithExpiration cfz.Expression[bool] `json:"TerminateInstancesWithExpiration,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// ValidFrom is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validfrom
	ValidFrom cfz.Expression[string] `json:"ValidFrom,omitempty"`

	// ValidUntil is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetrequestconfigdata.html#cfn-ec2-spotfleet-spotfleetrequestconfigdata-validuntil
	ValidUntil cfz.Expression[string] `json:"ValidUntil,omitempty"`
}

// New__AWS_EC2_SpotFleet_SpotFleetRequestConfigData initializes a new AWS_EC2_SpotFleet_SpotFleetRequestConfigData.
func New__AWS_EC2_SpotFleet_SpotFleetRequestConfigData() AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	return AWS_EC2_SpotFleet_SpotFleetRequestConfigData{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_SpotFleet_SpotFleetRequestConfigData) GetType() string {
	return AWS_EC2_SpotFleet_SpotFleetRequestConfigData__Type
}

// Set__AllocationStrategy updates property "AllocationStrategy".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__AllocationStrategy(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.AllocationStrategy = v
	return t
}

// SetV__AllocationStrategy updates property "AllocationStrategy".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__AllocationStrategy(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.AllocationStrategy = cfz.V(v)
	return t
}

// Set__Context updates property "Context".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__Context(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.Context = v
	return t
}

// SetV__Context updates property "Context".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__Context(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.Context = cfz.V(v)
	return t
}

// Set__ExcessCapacityTerminationPolicy updates property "ExcessCapacityTerminationPolicy".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__ExcessCapacityTerminationPolicy(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.ExcessCapacityTerminationPolicy = v
	return t
}

// SetV__ExcessCapacityTerminationPolicy updates property "ExcessCapacityTerminationPolicy".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__ExcessCapacityTerminationPolicy(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.ExcessCapacityTerminationPolicy = cfz.V(v)
	return t
}

// Set__IamFleetRole updates property "IamFleetRole".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__IamFleetRole(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.IamFleetRole = v
	return t
}

// SetV__IamFleetRole updates property "IamFleetRole".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__IamFleetRole(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.IamFleetRole = cfz.V(v)
	return t
}

// Set__InstanceInterruptionBehavior updates property "InstanceInterruptionBehavior".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__InstanceInterruptionBehavior(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.InstanceInterruptionBehavior = v
	return t
}

// SetV__InstanceInterruptionBehavior updates property "InstanceInterruptionBehavior".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__InstanceInterruptionBehavior(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.InstanceInterruptionBehavior = cfz.V(v)
	return t
}

// Set__InstancePoolsToUseCount updates property "InstancePoolsToUseCount".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__InstancePoolsToUseCount(v cfz.Expression[int32]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.InstancePoolsToUseCount = v
	return t
}

// SetV__InstancePoolsToUseCount updates property "InstancePoolsToUseCount".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__InstancePoolsToUseCount(v int32) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.InstancePoolsToUseCount = cfz.V(v)
	return t
}

// Set__LaunchSpecifications updates property "LaunchSpecifications".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__LaunchSpecifications(v cfz.ExpressionSlice[AWS_EC2_SpotFleet_SpotFleetLaunchSpecification]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.LaunchSpecifications = v
	return t
}

// SetS__LaunchSpecifications updates property "LaunchSpecifications".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetS__LaunchSpecifications(v ...cfz.Expression[AWS_EC2_SpotFleet_SpotFleetLaunchSpecification]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.LaunchSpecifications = cfz.S(v...)
	return t
}

// SetSV__LaunchSpecifications updates property "LaunchSpecifications".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetSV__LaunchSpecifications(v ...AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.LaunchSpecifications = cfz.SV(v...)
	return t
}

// Set__LaunchTemplateConfigs updates property "LaunchTemplateConfigs".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__LaunchTemplateConfigs(v cfz.ExpressionSlice[AWS_EC2_SpotFleet_LaunchTemplateConfig]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.LaunchTemplateConfigs = v
	return t
}

// SetS__LaunchTemplateConfigs updates property "LaunchTemplateConfigs".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetS__LaunchTemplateConfigs(v ...cfz.Expression[AWS_EC2_SpotFleet_LaunchTemplateConfig]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.LaunchTemplateConfigs = cfz.S(v...)
	return t
}

// SetSV__LaunchTemplateConfigs updates property "LaunchTemplateConfigs".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetSV__LaunchTemplateConfigs(v ...AWS_EC2_SpotFleet_LaunchTemplateConfig) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.LaunchTemplateConfigs = cfz.SV(v...)
	return t
}

// Set__LoadBalancersConfig updates property "LoadBalancersConfig".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__LoadBalancersConfig(v cfz.Expression[AWS_EC2_SpotFleet_LoadBalancersConfig]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.LoadBalancersConfig = v
	return t
}

// SetV__LoadBalancersConfig updates property "LoadBalancersConfig".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__LoadBalancersConfig(v AWS_EC2_SpotFleet_LoadBalancersConfig) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.LoadBalancersConfig = cfz.V(v)
	return t
}

// Set__OnDemandAllocationStrategy updates property "OnDemandAllocationStrategy".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__OnDemandAllocationStrategy(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.OnDemandAllocationStrategy = v
	return t
}

// SetV__OnDemandAllocationStrategy updates property "OnDemandAllocationStrategy".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__OnDemandAllocationStrategy(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.OnDemandAllocationStrategy = cfz.V(v)
	return t
}

// Set__OnDemandMaxTotalPrice updates property "OnDemandMaxTotalPrice".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__OnDemandMaxTotalPrice(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.OnDemandMaxTotalPrice = v
	return t
}

// SetV__OnDemandMaxTotalPrice updates property "OnDemandMaxTotalPrice".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__OnDemandMaxTotalPrice(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.OnDemandMaxTotalPrice = cfz.V(v)
	return t
}

// Set__OnDemandTargetCapacity updates property "OnDemandTargetCapacity".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__OnDemandTargetCapacity(v cfz.Expression[int32]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.OnDemandTargetCapacity = v
	return t
}

// SetV__OnDemandTargetCapacity updates property "OnDemandTargetCapacity".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__OnDemandTargetCapacity(v int32) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.OnDemandTargetCapacity = cfz.V(v)
	return t
}

// Set__ReplaceUnhealthyInstances updates property "ReplaceUnhealthyInstances".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__ReplaceUnhealthyInstances(v cfz.Expression[bool]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.ReplaceUnhealthyInstances = v
	return t
}

// SetV__ReplaceUnhealthyInstances updates property "ReplaceUnhealthyInstances".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__ReplaceUnhealthyInstances(v bool) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.ReplaceUnhealthyInstances = cfz.V(v)
	return t
}

// Set__SpotMaintenanceStrategies updates property "SpotMaintenanceStrategies".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__SpotMaintenanceStrategies(v cfz.Expression[AWS_EC2_SpotFleet_SpotMaintenanceStrategies]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.SpotMaintenanceStrategies = v
	return t
}

// SetV__SpotMaintenanceStrategies updates property "SpotMaintenanceStrategies".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__SpotMaintenanceStrategies(v AWS_EC2_SpotFleet_SpotMaintenanceStrategies) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.SpotMaintenanceStrategies = cfz.V(v)
	return t
}

// Set__SpotMaxTotalPrice updates property "SpotMaxTotalPrice".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__SpotMaxTotalPrice(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.SpotMaxTotalPrice = v
	return t
}

// SetV__SpotMaxTotalPrice updates property "SpotMaxTotalPrice".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__SpotMaxTotalPrice(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.SpotMaxTotalPrice = cfz.V(v)
	return t
}

// Set__SpotPrice updates property "SpotPrice".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__SpotPrice(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.SpotPrice = v
	return t
}

// SetV__SpotPrice updates property "SpotPrice".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__SpotPrice(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.SpotPrice = cfz.V(v)
	return t
}

// Set__TagSpecifications updates property "TagSpecifications".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__TagSpecifications(v cfz.ExpressionSlice[AWS_EC2_SpotFleet_SpotFleetTagSpecification]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.TagSpecifications = v
	return t
}

// SetS__TagSpecifications updates property "TagSpecifications".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetS__TagSpecifications(v ...cfz.Expression[AWS_EC2_SpotFleet_SpotFleetTagSpecification]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.TagSpecifications = cfz.S(v...)
	return t
}

// SetSV__TagSpecifications updates property "TagSpecifications".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetSV__TagSpecifications(v ...AWS_EC2_SpotFleet_SpotFleetTagSpecification) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.TagSpecifications = cfz.SV(v...)
	return t
}

// Set__TargetCapacity updates property "TargetCapacity".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__TargetCapacity(v cfz.Expression[int32]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.TargetCapacity = v
	return t
}

// SetV__TargetCapacity updates property "TargetCapacity".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__TargetCapacity(v int32) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.TargetCapacity = cfz.V(v)
	return t
}

// Set__TargetCapacityUnitType updates property "TargetCapacityUnitType".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__TargetCapacityUnitType(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.TargetCapacityUnitType = v
	return t
}

// SetV__TargetCapacityUnitType updates property "TargetCapacityUnitType".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__TargetCapacityUnitType(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.TargetCapacityUnitType = cfz.V(v)
	return t
}

// Set__TerminateInstancesWithExpiration updates property "TerminateInstancesWithExpiration".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__TerminateInstancesWithExpiration(v cfz.Expression[bool]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.TerminateInstancesWithExpiration = v
	return t
}

// SetV__TerminateInstancesWithExpiration updates property "TerminateInstancesWithExpiration".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__TerminateInstancesWithExpiration(v bool) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.TerminateInstancesWithExpiration = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__Type(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__Type(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.Type = cfz.V(v)
	return t
}

// Set__ValidFrom updates property "ValidFrom".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__ValidFrom(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.ValidFrom = v
	return t
}

// SetV__ValidFrom updates property "ValidFrom".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__ValidFrom(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.ValidFrom = cfz.V(v)
	return t
}

// Set__ValidUntil updates property "ValidUntil".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) Set__ValidUntil(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.ValidUntil = v
	return t
}

// SetV__ValidUntil updates property "ValidUntil".
func (t AWS_EC2_SpotFleet_SpotFleetRequestConfigData) SetV__ValidUntil(v string) AWS_EC2_SpotFleet_SpotFleetRequestConfigData {
	t.ValidUntil = cfz.V(v)
	return t
}
