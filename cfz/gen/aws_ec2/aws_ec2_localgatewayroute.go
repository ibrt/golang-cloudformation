// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_LocalGatewayRoute)(nil)
	_ cfz.Resource                   = (*AWS_EC2_LocalGatewayRoute)(nil)
)

const (
	// AWS_EC2_LocalGatewayRoute__Type is the CloudFormation type for AWS::EC2::LocalGatewayRoute.
	AWS_EC2_LocalGatewayRoute__Type = "AWS::EC2::LocalGatewayRoute"
)

var (
	// AWS_EC2_LocalGatewayRoute__AttributesMap reports all the CloudFormation attributes for AWS::EC2::LocalGatewayRoute.
	AWS_EC2_LocalGatewayRoute__AttributesMap = struct {
		State string
		Type  string
	}{
		State: "State",
		Type:  "Type",
	}

	// AWS_EC2_LocalGatewayRoute__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::LocalGatewayRoute.
	AWS_EC2_LocalGatewayRoute__AttributesSlice = []string{
		AWS_EC2_LocalGatewayRoute__AttributesMap.State,
		AWS_EC2_LocalGatewayRoute__AttributesMap.Type,
	}
)

var (
	// AWS_EC2_LocalGatewayRoute__PropertiesMap reports all the CloudFormation properties for AWS::EC2::LocalGatewayRoute.
	AWS_EC2_LocalGatewayRoute__PropertiesMap = struct {
		DestinationCidrBlock                string
		LocalGatewayRouteTableId            string
		LocalGatewayVirtualInterfaceGroupId string
		NetworkInterfaceId                  string
	}{
		DestinationCidrBlock:                "DestinationCidrBlock",
		LocalGatewayRouteTableId:            "LocalGatewayRouteTableId",
		LocalGatewayVirtualInterfaceGroupId: "LocalGatewayVirtualInterfaceGroupId",
		NetworkInterfaceId:                  "NetworkInterfaceId",
	}

	// AWS_EC2_LocalGatewayRoute__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::LocalGatewayRoute.
	AWS_EC2_LocalGatewayRoute__PropertiesSlice = []string{
		AWS_EC2_LocalGatewayRoute__PropertiesMap.DestinationCidrBlock,
		AWS_EC2_LocalGatewayRoute__PropertiesMap.LocalGatewayRouteTableId,
		AWS_EC2_LocalGatewayRoute__PropertiesMap.LocalGatewayVirtualInterfaceGroupId,
		AWS_EC2_LocalGatewayRoute__PropertiesMap.NetworkInterfaceId,
	}
)

// AWS_EC2_LocalGatewayRoute is a binding for AWS::EC2::LocalGatewayRoute.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html
type AWS_EC2_LocalGatewayRoute struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DestinationCidrBlock is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-destinationcidrblock
	DestinationCidrBlock cfz.Expression[string] `json:"DestinationCidrBlock,omitempty"`

	// LocalGatewayRouteTableId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayroutetableid
	LocalGatewayRouteTableId cfz.Expression[string] `json:"LocalGatewayRouteTableId,omitempty"`

	// LocalGatewayVirtualInterfaceGroupId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-localgatewayvirtualinterfacegroupid
	LocalGatewayVirtualInterfaceGroupId cfz.Expression[string] `json:"LocalGatewayVirtualInterfaceGroupId,omitempty"`

	// NetworkInterfaceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-localgatewayroute.html#cfn-ec2-localgatewayroute-networkinterfaceid
	NetworkInterfaceId cfz.Expression[string] `json:"NetworkInterfaceId,omitempty"`
}

// New__AWS_EC2_LocalGatewayRoute initializes a new *AWS_EC2_LocalGatewayRoute.
func New__AWS_EC2_LocalGatewayRoute(logicalName string) *AWS_EC2_LocalGatewayRoute {
	return &AWS_EC2_LocalGatewayRoute{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_LocalGatewayRoute) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_LocalGatewayRoute) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_LocalGatewayRoute) GetType() string {
	return AWS_EC2_LocalGatewayRoute__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_LocalGatewayRoute) Set__LogicalName(v string) *AWS_EC2_LocalGatewayRoute {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_LocalGatewayRoute) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_LocalGatewayRoute {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_LocalGatewayRoute) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_LocalGatewayRoute {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_LocalGatewayRoute) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_LocalGatewayRoute {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_LocalGatewayRoute) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_LocalGatewayRoute {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_LocalGatewayRoute) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_LocalGatewayRoute {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_LocalGatewayRoute) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_LocalGatewayRoute {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DestinationCidrBlock updates property "DestinationCidrBlock".
func (t *AWS_EC2_LocalGatewayRoute) Set__DestinationCidrBlock(v cfz.Expression[string]) *AWS_EC2_LocalGatewayRoute {
	t.DestinationCidrBlock = v
	return t
}

// SetV__DestinationCidrBlock updates property "DestinationCidrBlock".
func (t *AWS_EC2_LocalGatewayRoute) SetV__DestinationCidrBlock(v string) *AWS_EC2_LocalGatewayRoute {
	t.DestinationCidrBlock = cfz.V(v)
	return t
}

// Set__LocalGatewayRouteTableId updates property "LocalGatewayRouteTableId".
func (t *AWS_EC2_LocalGatewayRoute) Set__LocalGatewayRouteTableId(v cfz.Expression[string]) *AWS_EC2_LocalGatewayRoute {
	t.LocalGatewayRouteTableId = v
	return t
}

// SetV__LocalGatewayRouteTableId updates property "LocalGatewayRouteTableId".
func (t *AWS_EC2_LocalGatewayRoute) SetV__LocalGatewayRouteTableId(v string) *AWS_EC2_LocalGatewayRoute {
	t.LocalGatewayRouteTableId = cfz.V(v)
	return t
}

// Set__LocalGatewayVirtualInterfaceGroupId updates property "LocalGatewayVirtualInterfaceGroupId".
func (t *AWS_EC2_LocalGatewayRoute) Set__LocalGatewayVirtualInterfaceGroupId(v cfz.Expression[string]) *AWS_EC2_LocalGatewayRoute {
	t.LocalGatewayVirtualInterfaceGroupId = v
	return t
}

// SetV__LocalGatewayVirtualInterfaceGroupId updates property "LocalGatewayVirtualInterfaceGroupId".
func (t *AWS_EC2_LocalGatewayRoute) SetV__LocalGatewayVirtualInterfaceGroupId(v string) *AWS_EC2_LocalGatewayRoute {
	t.LocalGatewayVirtualInterfaceGroupId = cfz.V(v)
	return t
}

// Set__NetworkInterfaceId updates property "NetworkInterfaceId".
func (t *AWS_EC2_LocalGatewayRoute) Set__NetworkInterfaceId(v cfz.Expression[string]) *AWS_EC2_LocalGatewayRoute {
	t.NetworkInterfaceId = v
	return t
}

// SetV__NetworkInterfaceId updates property "NetworkInterfaceId".
func (t *AWS_EC2_LocalGatewayRoute) SetV__NetworkInterfaceId(v string) *AWS_EC2_LocalGatewayRoute {
	t.NetworkInterfaceId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_LocalGatewayRoute) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_EC2_LocalGatewayRoute) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_LocalGatewayRoute__AttributesMap.State))
}

// GetAtt__Type returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Type
func (t *AWS_EC2_LocalGatewayRoute) GetAtt__Type() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_LocalGatewayRoute__AttributesMap.Type))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_LocalGatewayRoute) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_EC2_LocalGatewayRoute) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Type returns a conventionally configured output for an attribute of this resource.
// Attribute: Type
func (t *AWS_EC2_LocalGatewayRoute) GetConventionalOutputAtt__Type(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttType", t.GetAtt__Type())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_LocalGatewayRoute) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_LocalGatewayRoute

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_LocalGatewayRoute) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
