// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_Host)(nil)
	_ cfz.Resource                   = (*AWS_EC2_Host)(nil)
)

const (
	// AWS_EC2_Host__Type is the CloudFormation type for AWS::EC2::Host.
	AWS_EC2_Host__Type = "AWS::EC2::Host"
)

var (
	// AWS_EC2_Host__AttributesMap reports all the CloudFormation attributes for AWS::EC2::Host.
	AWS_EC2_Host__AttributesMap = struct {
		HostId string
	}{
		HostId: "HostId",
	}

	// AWS_EC2_Host__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::Host.
	AWS_EC2_Host__AttributesSlice = []string{
		AWS_EC2_Host__AttributesMap.HostId,
	}
)

var (
	// AWS_EC2_Host__PropertiesMap reports all the CloudFormation properties for AWS::EC2::Host.
	AWS_EC2_Host__PropertiesMap = struct {
		AssetId          string
		AutoPlacement    string
		AvailabilityZone string
		HostMaintenance  string
		HostRecovery     string
		InstanceFamily   string
		InstanceType     string
		OutpostArn       string
	}{
		AssetId:          "AssetId",
		AutoPlacement:    "AutoPlacement",
		AvailabilityZone: "AvailabilityZone",
		HostMaintenance:  "HostMaintenance",
		HostRecovery:     "HostRecovery",
		InstanceFamily:   "InstanceFamily",
		InstanceType:     "InstanceType",
		OutpostArn:       "OutpostArn",
	}

	// AWS_EC2_Host__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::Host.
	AWS_EC2_Host__PropertiesSlice = []string{
		AWS_EC2_Host__PropertiesMap.AssetId,
		AWS_EC2_Host__PropertiesMap.AutoPlacement,
		AWS_EC2_Host__PropertiesMap.AvailabilityZone,
		AWS_EC2_Host__PropertiesMap.HostMaintenance,
		AWS_EC2_Host__PropertiesMap.HostRecovery,
		AWS_EC2_Host__PropertiesMap.InstanceFamily,
		AWS_EC2_Host__PropertiesMap.InstanceType,
		AWS_EC2_Host__PropertiesMap.OutpostArn,
	}
)

// AWS_EC2_Host is a binding for AWS::EC2::Host.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html
type AWS_EC2_Host struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AssetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-assetid
	AssetId cfz.Expression[string] `json:"AssetId,omitempty"`

	// AutoPlacement is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-autoplacement
	AutoPlacement cfz.Expression[string] `json:"AutoPlacement,omitempty"`

	// AvailabilityZone is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-availabilityzone
	AvailabilityZone cfz.Expression[string] `json:"AvailabilityZone,omitempty"`

	// HostMaintenance is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostmaintenance
	HostMaintenance cfz.Expression[string] `json:"HostMaintenance,omitempty"`

	// HostRecovery is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-hostrecovery
	HostRecovery cfz.Expression[string] `json:"HostRecovery,omitempty"`

	// InstanceFamily is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancefamily
	InstanceFamily cfz.Expression[string] `json:"InstanceFamily,omitempty"`

	// InstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-instancetype
	InstanceType cfz.Expression[string] `json:"InstanceType,omitempty"`

	// OutpostArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-host.html#cfn-ec2-host-outpostarn
	OutpostArn cfz.Expression[string] `json:"OutpostArn,omitempty"`
}

// New__AWS_EC2_Host initializes a new *AWS_EC2_Host.
func New__AWS_EC2_Host(logicalName string) *AWS_EC2_Host {
	return &AWS_EC2_Host{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_Host) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_Host) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_Host) GetType() string {
	return AWS_EC2_Host__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_Host) Set__LogicalName(v string) *AWS_EC2_Host {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_Host) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_Host {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_Host) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_Host {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_Host) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_Host {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_Host) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_Host {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_Host) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_Host {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_Host) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_Host {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AssetId updates property "AssetId".
func (t *AWS_EC2_Host) Set__AssetId(v cfz.Expression[string]) *AWS_EC2_Host {
	t.AssetId = v
	return t
}

// SetV__AssetId updates property "AssetId".
func (t *AWS_EC2_Host) SetV__AssetId(v string) *AWS_EC2_Host {
	t.AssetId = cfz.V(v)
	return t
}

// Set__AutoPlacement updates property "AutoPlacement".
func (t *AWS_EC2_Host) Set__AutoPlacement(v cfz.Expression[string]) *AWS_EC2_Host {
	t.AutoPlacement = v
	return t
}

// SetV__AutoPlacement updates property "AutoPlacement".
func (t *AWS_EC2_Host) SetV__AutoPlacement(v string) *AWS_EC2_Host {
	t.AutoPlacement = cfz.V(v)
	return t
}

// Set__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_EC2_Host) Set__AvailabilityZone(v cfz.Expression[string]) *AWS_EC2_Host {
	t.AvailabilityZone = v
	return t
}

// SetV__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_EC2_Host) SetV__AvailabilityZone(v string) *AWS_EC2_Host {
	t.AvailabilityZone = cfz.V(v)
	return t
}

// Set__HostMaintenance updates property "HostMaintenance".
func (t *AWS_EC2_Host) Set__HostMaintenance(v cfz.Expression[string]) *AWS_EC2_Host {
	t.HostMaintenance = v
	return t
}

// SetV__HostMaintenance updates property "HostMaintenance".
func (t *AWS_EC2_Host) SetV__HostMaintenance(v string) *AWS_EC2_Host {
	t.HostMaintenance = cfz.V(v)
	return t
}

// Set__HostRecovery updates property "HostRecovery".
func (t *AWS_EC2_Host) Set__HostRecovery(v cfz.Expression[string]) *AWS_EC2_Host {
	t.HostRecovery = v
	return t
}

// SetV__HostRecovery updates property "HostRecovery".
func (t *AWS_EC2_Host) SetV__HostRecovery(v string) *AWS_EC2_Host {
	t.HostRecovery = cfz.V(v)
	return t
}

// Set__InstanceFamily updates property "InstanceFamily".
func (t *AWS_EC2_Host) Set__InstanceFamily(v cfz.Expression[string]) *AWS_EC2_Host {
	t.InstanceFamily = v
	return t
}

// SetV__InstanceFamily updates property "InstanceFamily".
func (t *AWS_EC2_Host) SetV__InstanceFamily(v string) *AWS_EC2_Host {
	t.InstanceFamily = cfz.V(v)
	return t
}

// Set__InstanceType updates property "InstanceType".
func (t *AWS_EC2_Host) Set__InstanceType(v cfz.Expression[string]) *AWS_EC2_Host {
	t.InstanceType = v
	return t
}

// SetV__InstanceType updates property "InstanceType".
func (t *AWS_EC2_Host) SetV__InstanceType(v string) *AWS_EC2_Host {
	t.InstanceType = cfz.V(v)
	return t
}

// Set__OutpostArn updates property "OutpostArn".
func (t *AWS_EC2_Host) Set__OutpostArn(v cfz.Expression[string]) *AWS_EC2_Host {
	t.OutpostArn = v
	return t
}

// SetV__OutpostArn updates property "OutpostArn".
func (t *AWS_EC2_Host) SetV__OutpostArn(v string) *AWS_EC2_Host {
	t.OutpostArn = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_Host) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__HostId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: HostId
func (t *AWS_EC2_Host) GetAtt__HostId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Host__AttributesMap.HostId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_Host) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__HostId returns a conventionally configured output for an attribute of this resource.
// Attribute: HostId
func (t *AWS_EC2_Host) GetConventionalOutputAtt__HostId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttHostId", t.GetAtt__HostId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_Host) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_Host

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_Host) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
