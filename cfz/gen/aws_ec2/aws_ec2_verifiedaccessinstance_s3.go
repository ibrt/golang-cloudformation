// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_VerifiedAccessInstance_S3__Type is the CloudFormation type for AWS::EC2::VerifiedAccessInstance.S3.
	AWS_EC2_VerifiedAccessInstance_S3__Type = "AWS::EC2::VerifiedAccessInstance.S3"
)

var (
	// AWS_EC2_VerifiedAccessInstance_S3__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VerifiedAccessInstance.S3.
	AWS_EC2_VerifiedAccessInstance_S3__PropertiesMap = struct {
		BucketName  string
		BucketOwner string
		Enabled     string
		Prefix      string
	}{
		BucketName:  "BucketName",
		BucketOwner: "BucketOwner",
		Enabled:     "Enabled",
		Prefix:      "Prefix",
	}

	// AWS_EC2_VerifiedAccessInstance_S3__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VerifiedAccessInstance.S3.
	AWS_EC2_VerifiedAccessInstance_S3__PropertiesSlice = []string{
		AWS_EC2_VerifiedAccessInstance_S3__PropertiesMap.BucketName,
		AWS_EC2_VerifiedAccessInstance_S3__PropertiesMap.BucketOwner,
		AWS_EC2_VerifiedAccessInstance_S3__PropertiesMap.Enabled,
		AWS_EC2_VerifiedAccessInstance_S3__PropertiesMap.Prefix,
	}
)

// AWS_EC2_VerifiedAccessInstance_S3 is a binding for AWS::EC2::VerifiedAccessInstance.S3.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-verifiedaccessinstance-s3.html
type AWS_EC2_VerifiedAccessInstance_S3 struct {
	// BucketName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-verifiedaccessinstance-s3.html#cfn-ec2-verifiedaccessinstance-s3-bucketname
	BucketName cfz.Expression[string] `json:"BucketName,omitempty"`

	// BucketOwner is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-verifiedaccessinstance-s3.html#cfn-ec2-verifiedaccessinstance-s3-bucketowner
	BucketOwner cfz.Expression[string] `json:"BucketOwner,omitempty"`

	// Enabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-verifiedaccessinstance-s3.html#cfn-ec2-verifiedaccessinstance-s3-enabled
	Enabled cfz.Expression[bool] `json:"Enabled,omitempty"`

	// Prefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-verifiedaccessinstance-s3.html#cfn-ec2-verifiedaccessinstance-s3-prefix
	Prefix cfz.Expression[string] `json:"Prefix,omitempty"`
}

// New__AWS_EC2_VerifiedAccessInstance_S3 initializes a new AWS_EC2_VerifiedAccessInstance_S3.
func New__AWS_EC2_VerifiedAccessInstance_S3() AWS_EC2_VerifiedAccessInstance_S3 {
	return AWS_EC2_VerifiedAccessInstance_S3{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_VerifiedAccessInstance_S3) GetType() string {
	return AWS_EC2_VerifiedAccessInstance_S3__Type
}

// Set__BucketName updates property "BucketName".
func (t AWS_EC2_VerifiedAccessInstance_S3) Set__BucketName(v cfz.Expression[string]) AWS_EC2_VerifiedAccessInstance_S3 {
	t.BucketName = v
	return t
}

// SetV__BucketName updates property "BucketName".
func (t AWS_EC2_VerifiedAccessInstance_S3) SetV__BucketName(v string) AWS_EC2_VerifiedAccessInstance_S3 {
	t.BucketName = cfz.V(v)
	return t
}

// Set__BucketOwner updates property "BucketOwner".
func (t AWS_EC2_VerifiedAccessInstance_S3) Set__BucketOwner(v cfz.Expression[string]) AWS_EC2_VerifiedAccessInstance_S3 {
	t.BucketOwner = v
	return t
}

// SetV__BucketOwner updates property "BucketOwner".
func (t AWS_EC2_VerifiedAccessInstance_S3) SetV__BucketOwner(v string) AWS_EC2_VerifiedAccessInstance_S3 {
	t.BucketOwner = cfz.V(v)
	return t
}

// Set__Enabled updates property "Enabled".
func (t AWS_EC2_VerifiedAccessInstance_S3) Set__Enabled(v cfz.Expression[bool]) AWS_EC2_VerifiedAccessInstance_S3 {
	t.Enabled = v
	return t
}

// SetV__Enabled updates property "Enabled".
func (t AWS_EC2_VerifiedAccessInstance_S3) SetV__Enabled(v bool) AWS_EC2_VerifiedAccessInstance_S3 {
	t.Enabled = cfz.V(v)
	return t
}

// Set__Prefix updates property "Prefix".
func (t AWS_EC2_VerifiedAccessInstance_S3) Set__Prefix(v cfz.Expression[string]) AWS_EC2_VerifiedAccessInstance_S3 {
	t.Prefix = v
	return t
}

// SetV__Prefix updates property "Prefix".
func (t AWS_EC2_VerifiedAccessInstance_S3) SetV__Prefix(v string) AWS_EC2_VerifiedAccessInstance_S3 {
	t.Prefix = cfz.V(v)
	return t
}
