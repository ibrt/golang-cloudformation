// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_CapacityReservationFleet)(nil)
	_ cfz.Resource                   = (*AWS_EC2_CapacityReservationFleet)(nil)
)

const (
	// AWS_EC2_CapacityReservationFleet__Type is the CloudFormation type for AWS::EC2::CapacityReservationFleet.
	AWS_EC2_CapacityReservationFleet__Type = "AWS::EC2::CapacityReservationFleet"
)

var (
	// AWS_EC2_CapacityReservationFleet__AttributesMap reports all the CloudFormation attributes for AWS::EC2::CapacityReservationFleet.
	AWS_EC2_CapacityReservationFleet__AttributesMap = struct {
		CapacityReservationFleetId string
	}{
		CapacityReservationFleetId: "CapacityReservationFleetId",
	}

	// AWS_EC2_CapacityReservationFleet__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::CapacityReservationFleet.
	AWS_EC2_CapacityReservationFleet__AttributesSlice = []string{
		AWS_EC2_CapacityReservationFleet__AttributesMap.CapacityReservationFleetId,
	}
)

var (
	// AWS_EC2_CapacityReservationFleet__PropertiesMap reports all the CloudFormation properties for AWS::EC2::CapacityReservationFleet.
	AWS_EC2_CapacityReservationFleet__PropertiesMap = struct {
		AllocationStrategy         string
		EndDate                    string
		InstanceMatchCriteria      string
		InstanceTypeSpecifications string
		NoRemoveEndDate            string
		RemoveEndDate              string
		TagSpecifications          string
		Tenancy                    string
		TotalTargetCapacity        string
	}{
		AllocationStrategy:         "AllocationStrategy",
		EndDate:                    "EndDate",
		InstanceMatchCriteria:      "InstanceMatchCriteria",
		InstanceTypeSpecifications: "InstanceTypeSpecifications",
		NoRemoveEndDate:            "NoRemoveEndDate",
		RemoveEndDate:              "RemoveEndDate",
		TagSpecifications:          "TagSpecifications",
		Tenancy:                    "Tenancy",
		TotalTargetCapacity:        "TotalTargetCapacity",
	}

	// AWS_EC2_CapacityReservationFleet__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::CapacityReservationFleet.
	AWS_EC2_CapacityReservationFleet__PropertiesSlice = []string{
		AWS_EC2_CapacityReservationFleet__PropertiesMap.AllocationStrategy,
		AWS_EC2_CapacityReservationFleet__PropertiesMap.EndDate,
		AWS_EC2_CapacityReservationFleet__PropertiesMap.InstanceMatchCriteria,
		AWS_EC2_CapacityReservationFleet__PropertiesMap.InstanceTypeSpecifications,
		AWS_EC2_CapacityReservationFleet__PropertiesMap.NoRemoveEndDate,
		AWS_EC2_CapacityReservationFleet__PropertiesMap.RemoveEndDate,
		AWS_EC2_CapacityReservationFleet__PropertiesMap.TagSpecifications,
		AWS_EC2_CapacityReservationFleet__PropertiesMap.Tenancy,
		AWS_EC2_CapacityReservationFleet__PropertiesMap.TotalTargetCapacity,
	}
)

// AWS_EC2_CapacityReservationFleet is a binding for AWS::EC2::CapacityReservationFleet.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html
type AWS_EC2_CapacityReservationFleet struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AllocationStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-allocationstrategy
	AllocationStrategy cfz.Expression[string] `json:"AllocationStrategy,omitempty"`

	// EndDate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-enddate
	EndDate cfz.Expression[string] `json:"EndDate,omitempty"`

	// InstanceMatchCriteria is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancematchcriteria
	InstanceMatchCriteria cfz.Expression[string] `json:"InstanceMatchCriteria,omitempty"`

	// InstanceTypeSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-instancetypespecifications
	InstanceTypeSpecifications cfz.ExpressionSlice[AWS_EC2_CapacityReservationFleet_InstanceTypeSpecification] `json:"InstanceTypeSpecifications,omitempty"`

	// NoRemoveEndDate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-noremoveenddate
	NoRemoveEndDate cfz.Expression[bool] `json:"NoRemoveEndDate,omitempty"`

	// RemoveEndDate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-removeenddate
	RemoveEndDate cfz.Expression[bool] `json:"RemoveEndDate,omitempty"`

	// TagSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tagspecifications
	TagSpecifications cfz.ExpressionSlice[AWS_EC2_CapacityReservationFleet_TagSpecification] `json:"TagSpecifications,omitempty"`

	// Tenancy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-tenancy
	Tenancy cfz.Expression[string] `json:"Tenancy,omitempty"`

	// TotalTargetCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservationfleet.html#cfn-ec2-capacityreservationfleet-totaltargetcapacity
	TotalTargetCapacity cfz.Expression[int32] `json:"TotalTargetCapacity,omitempty"`
}

// New__AWS_EC2_CapacityReservationFleet initializes a new *AWS_EC2_CapacityReservationFleet.
func New__AWS_EC2_CapacityReservationFleet(logicalName string) *AWS_EC2_CapacityReservationFleet {
	return &AWS_EC2_CapacityReservationFleet{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_CapacityReservationFleet) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_CapacityReservationFleet) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_CapacityReservationFleet) GetType() string {
	return AWS_EC2_CapacityReservationFleet__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_CapacityReservationFleet) Set__LogicalName(v string) *AWS_EC2_CapacityReservationFleet {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_CapacityReservationFleet) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_CapacityReservationFleet {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_CapacityReservationFleet) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_CapacityReservationFleet {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_CapacityReservationFleet) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_CapacityReservationFleet {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_CapacityReservationFleet) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_CapacityReservationFleet {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_CapacityReservationFleet) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_CapacityReservationFleet {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_CapacityReservationFleet) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_CapacityReservationFleet {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AllocationStrategy updates property "AllocationStrategy".
func (t *AWS_EC2_CapacityReservationFleet) Set__AllocationStrategy(v cfz.Expression[string]) *AWS_EC2_CapacityReservationFleet {
	t.AllocationStrategy = v
	return t
}

// SetV__AllocationStrategy updates property "AllocationStrategy".
func (t *AWS_EC2_CapacityReservationFleet) SetV__AllocationStrategy(v string) *AWS_EC2_CapacityReservationFleet {
	t.AllocationStrategy = cfz.V(v)
	return t
}

// Set__EndDate updates property "EndDate".
func (t *AWS_EC2_CapacityReservationFleet) Set__EndDate(v cfz.Expression[string]) *AWS_EC2_CapacityReservationFleet {
	t.EndDate = v
	return t
}

// SetV__EndDate updates property "EndDate".
func (t *AWS_EC2_CapacityReservationFleet) SetV__EndDate(v string) *AWS_EC2_CapacityReservationFleet {
	t.EndDate = cfz.V(v)
	return t
}

// Set__InstanceMatchCriteria updates property "InstanceMatchCriteria".
func (t *AWS_EC2_CapacityReservationFleet) Set__InstanceMatchCriteria(v cfz.Expression[string]) *AWS_EC2_CapacityReservationFleet {
	t.InstanceMatchCriteria = v
	return t
}

// SetV__InstanceMatchCriteria updates property "InstanceMatchCriteria".
func (t *AWS_EC2_CapacityReservationFleet) SetV__InstanceMatchCriteria(v string) *AWS_EC2_CapacityReservationFleet {
	t.InstanceMatchCriteria = cfz.V(v)
	return t
}

// Set__InstanceTypeSpecifications updates property "InstanceTypeSpecifications".
func (t *AWS_EC2_CapacityReservationFleet) Set__InstanceTypeSpecifications(v cfz.ExpressionSlice[AWS_EC2_CapacityReservationFleet_InstanceTypeSpecification]) *AWS_EC2_CapacityReservationFleet {
	t.InstanceTypeSpecifications = v
	return t
}

// SetS__InstanceTypeSpecifications updates property "InstanceTypeSpecifications".
func (t *AWS_EC2_CapacityReservationFleet) SetS__InstanceTypeSpecifications(v ...cfz.Expression[AWS_EC2_CapacityReservationFleet_InstanceTypeSpecification]) *AWS_EC2_CapacityReservationFleet {
	t.InstanceTypeSpecifications = cfz.S(v...)
	return t
}

// SetSV__InstanceTypeSpecifications updates property "InstanceTypeSpecifications".
func (t *AWS_EC2_CapacityReservationFleet) SetSV__InstanceTypeSpecifications(v ...AWS_EC2_CapacityReservationFleet_InstanceTypeSpecification) *AWS_EC2_CapacityReservationFleet {
	t.InstanceTypeSpecifications = cfz.SV(v...)
	return t
}

// Set__NoRemoveEndDate updates property "NoRemoveEndDate".
func (t *AWS_EC2_CapacityReservationFleet) Set__NoRemoveEndDate(v cfz.Expression[bool]) *AWS_EC2_CapacityReservationFleet {
	t.NoRemoveEndDate = v
	return t
}

// SetV__NoRemoveEndDate updates property "NoRemoveEndDate".
func (t *AWS_EC2_CapacityReservationFleet) SetV__NoRemoveEndDate(v bool) *AWS_EC2_CapacityReservationFleet {
	t.NoRemoveEndDate = cfz.V(v)
	return t
}

// Set__RemoveEndDate updates property "RemoveEndDate".
func (t *AWS_EC2_CapacityReservationFleet) Set__RemoveEndDate(v cfz.Expression[bool]) *AWS_EC2_CapacityReservationFleet {
	t.RemoveEndDate = v
	return t
}

// SetV__RemoveEndDate updates property "RemoveEndDate".
func (t *AWS_EC2_CapacityReservationFleet) SetV__RemoveEndDate(v bool) *AWS_EC2_CapacityReservationFleet {
	t.RemoveEndDate = cfz.V(v)
	return t
}

// Set__TagSpecifications updates property "TagSpecifications".
func (t *AWS_EC2_CapacityReservationFleet) Set__TagSpecifications(v cfz.ExpressionSlice[AWS_EC2_CapacityReservationFleet_TagSpecification]) *AWS_EC2_CapacityReservationFleet {
	t.TagSpecifications = v
	return t
}

// SetS__TagSpecifications updates property "TagSpecifications".
func (t *AWS_EC2_CapacityReservationFleet) SetS__TagSpecifications(v ...cfz.Expression[AWS_EC2_CapacityReservationFleet_TagSpecification]) *AWS_EC2_CapacityReservationFleet {
	t.TagSpecifications = cfz.S(v...)
	return t
}

// SetSV__TagSpecifications updates property "TagSpecifications".
func (t *AWS_EC2_CapacityReservationFleet) SetSV__TagSpecifications(v ...AWS_EC2_CapacityReservationFleet_TagSpecification) *AWS_EC2_CapacityReservationFleet {
	t.TagSpecifications = cfz.SV(v...)
	return t
}

// Set__Tenancy updates property "Tenancy".
func (t *AWS_EC2_CapacityReservationFleet) Set__Tenancy(v cfz.Expression[string]) *AWS_EC2_CapacityReservationFleet {
	t.Tenancy = v
	return t
}

// SetV__Tenancy updates property "Tenancy".
func (t *AWS_EC2_CapacityReservationFleet) SetV__Tenancy(v string) *AWS_EC2_CapacityReservationFleet {
	t.Tenancy = cfz.V(v)
	return t
}

// Set__TotalTargetCapacity updates property "TotalTargetCapacity".
func (t *AWS_EC2_CapacityReservationFleet) Set__TotalTargetCapacity(v cfz.Expression[int32]) *AWS_EC2_CapacityReservationFleet {
	t.TotalTargetCapacity = v
	return t
}

// SetV__TotalTargetCapacity updates property "TotalTargetCapacity".
func (t *AWS_EC2_CapacityReservationFleet) SetV__TotalTargetCapacity(v int32) *AWS_EC2_CapacityReservationFleet {
	t.TotalTargetCapacity = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_CapacityReservationFleet) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CapacityReservationFleetId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CapacityReservationFleetId
func (t *AWS_EC2_CapacityReservationFleet) GetAtt__CapacityReservationFleetId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_CapacityReservationFleet__AttributesMap.CapacityReservationFleetId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_CapacityReservationFleet) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CapacityReservationFleetId returns a conventionally configured output for an attribute of this resource.
// Attribute: CapacityReservationFleetId
func (t *AWS_EC2_CapacityReservationFleet) GetConventionalOutputAtt__CapacityReservationFleetId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCapacityReservationFleetId", t.GetAtt__CapacityReservationFleetId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_CapacityReservationFleet) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_CapacityReservationFleet

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_CapacityReservationFleet) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
