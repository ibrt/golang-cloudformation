// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VPNConnection)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VPNConnection)(nil)
)

const (
	// AWS_EC2_VPNConnection__Type is the CloudFormation type for AWS::EC2::VPNConnection.
	AWS_EC2_VPNConnection__Type = "AWS::EC2::VPNConnection"
)

var (
	// AWS_EC2_VPNConnection__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VPNConnection.
	AWS_EC2_VPNConnection__AttributesMap = struct {
		VpnConnectionId string
	}{
		VpnConnectionId: "VpnConnectionId",
	}

	// AWS_EC2_VPNConnection__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VPNConnection.
	AWS_EC2_VPNConnection__AttributesSlice = []string{
		AWS_EC2_VPNConnection__AttributesMap.VpnConnectionId,
	}
)

var (
	// AWS_EC2_VPNConnection__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VPNConnection.
	AWS_EC2_VPNConnection__PropertiesMap = struct {
		CustomerGatewayId                   string
		EnableAcceleration                  string
		LocalIpv4NetworkCidr                string
		LocalIpv6NetworkCidr                string
		OutsideIpAddressType                string
		RemoteIpv4NetworkCidr               string
		RemoteIpv6NetworkCidr               string
		StaticRoutesOnly                    string
		Tags                                string
		TransitGatewayId                    string
		TransportTransitGatewayAttachmentId string
		TunnelInsideIpVersion               string
		Type                                string
		VpnGatewayId                        string
		VpnTunnelOptionsSpecifications      string
	}{
		CustomerGatewayId:                   "CustomerGatewayId",
		EnableAcceleration:                  "EnableAcceleration",
		LocalIpv4NetworkCidr:                "LocalIpv4NetworkCidr",
		LocalIpv6NetworkCidr:                "LocalIpv6NetworkCidr",
		OutsideIpAddressType:                "OutsideIpAddressType",
		RemoteIpv4NetworkCidr:               "RemoteIpv4NetworkCidr",
		RemoteIpv6NetworkCidr:               "RemoteIpv6NetworkCidr",
		StaticRoutesOnly:                    "StaticRoutesOnly",
		Tags:                                "Tags",
		TransitGatewayId:                    "TransitGatewayId",
		TransportTransitGatewayAttachmentId: "TransportTransitGatewayAttachmentId",
		TunnelInsideIpVersion:               "TunnelInsideIpVersion",
		Type:                                "Type",
		VpnGatewayId:                        "VpnGatewayId",
		VpnTunnelOptionsSpecifications:      "VpnTunnelOptionsSpecifications",
	}

	// AWS_EC2_VPNConnection__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VPNConnection.
	AWS_EC2_VPNConnection__PropertiesSlice = []string{
		AWS_EC2_VPNConnection__PropertiesMap.CustomerGatewayId,
		AWS_EC2_VPNConnection__PropertiesMap.EnableAcceleration,
		AWS_EC2_VPNConnection__PropertiesMap.LocalIpv4NetworkCidr,
		AWS_EC2_VPNConnection__PropertiesMap.LocalIpv6NetworkCidr,
		AWS_EC2_VPNConnection__PropertiesMap.OutsideIpAddressType,
		AWS_EC2_VPNConnection__PropertiesMap.RemoteIpv4NetworkCidr,
		AWS_EC2_VPNConnection__PropertiesMap.RemoteIpv6NetworkCidr,
		AWS_EC2_VPNConnection__PropertiesMap.StaticRoutesOnly,
		AWS_EC2_VPNConnection__PropertiesMap.Tags,
		AWS_EC2_VPNConnection__PropertiesMap.TransitGatewayId,
		AWS_EC2_VPNConnection__PropertiesMap.TransportTransitGatewayAttachmentId,
		AWS_EC2_VPNConnection__PropertiesMap.TunnelInsideIpVersion,
		AWS_EC2_VPNConnection__PropertiesMap.Type,
		AWS_EC2_VPNConnection__PropertiesMap.VpnGatewayId,
		AWS_EC2_VPNConnection__PropertiesMap.VpnTunnelOptionsSpecifications,
	}
)

// AWS_EC2_VPNConnection is a binding for AWS::EC2::VPNConnection.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html
type AWS_EC2_VPNConnection struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// CustomerGatewayId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-customergatewayid
	CustomerGatewayId cfz.Expression[string] `json:"CustomerGatewayId,omitempty"`

	// EnableAcceleration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-enableacceleration
	EnableAcceleration cfz.Expression[bool] `json:"EnableAcceleration,omitempty"`

	// LocalIpv4NetworkCidr is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-localipv4networkcidr
	LocalIpv4NetworkCidr cfz.Expression[string] `json:"LocalIpv4NetworkCidr,omitempty"`

	// LocalIpv6NetworkCidr is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-localipv6networkcidr
	LocalIpv6NetworkCidr cfz.Expression[string] `json:"LocalIpv6NetworkCidr,omitempty"`

	// OutsideIpAddressType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-outsideipaddresstype
	OutsideIpAddressType cfz.Expression[string] `json:"OutsideIpAddressType,omitempty"`

	// RemoteIpv4NetworkCidr is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-remoteipv4networkcidr
	RemoteIpv4NetworkCidr cfz.Expression[string] `json:"RemoteIpv4NetworkCidr,omitempty"`

	// RemoteIpv6NetworkCidr is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-remoteipv6networkcidr
	RemoteIpv6NetworkCidr cfz.Expression[string] `json:"RemoteIpv6NetworkCidr,omitempty"`

	// StaticRoutesOnly is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-staticroutesonly
	StaticRoutesOnly cfz.Expression[bool] `json:"StaticRoutesOnly,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TransitGatewayId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-transitgatewayid
	TransitGatewayId cfz.Expression[string] `json:"TransitGatewayId,omitempty"`

	// TransportTransitGatewayAttachmentId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-transporttransitgatewayattachmentid
	TransportTransitGatewayAttachmentId cfz.Expression[string] `json:"TransportTransitGatewayAttachmentId,omitempty"`

	// TunnelInsideIpVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-tunnelinsideipversion
	TunnelInsideIpVersion cfz.Expression[string] `json:"TunnelInsideIpVersion,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// VpnGatewayId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-vpngatewayid
	VpnGatewayId cfz.Expression[string] `json:"VpnGatewayId,omitempty"`

	// VpnTunnelOptionsSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpnconnection.html#cfn-ec2-vpnconnection-vpntunneloptionsspecifications
	VpnTunnelOptionsSpecifications cfz.ExpressionSlice[AWS_EC2_VPNConnection_VpnTunnelOptionsSpecification] `json:"VpnTunnelOptionsSpecifications,omitempty"`
}

// New__AWS_EC2_VPNConnection initializes a new *AWS_EC2_VPNConnection.
func New__AWS_EC2_VPNConnection(logicalName string) *AWS_EC2_VPNConnection {
	return &AWS_EC2_VPNConnection{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VPNConnection) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VPNConnection) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VPNConnection) GetType() string {
	return AWS_EC2_VPNConnection__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VPNConnection) Set__LogicalName(v string) *AWS_EC2_VPNConnection {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VPNConnection) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VPNConnection {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VPNConnection) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VPNConnection {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VPNConnection) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VPNConnection {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VPNConnection) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VPNConnection {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VPNConnection) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VPNConnection {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VPNConnection) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VPNConnection {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__CustomerGatewayId updates property "CustomerGatewayId".
func (t *AWS_EC2_VPNConnection) Set__CustomerGatewayId(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.CustomerGatewayId = v
	return t
}

// SetV__CustomerGatewayId updates property "CustomerGatewayId".
func (t *AWS_EC2_VPNConnection) SetV__CustomerGatewayId(v string) *AWS_EC2_VPNConnection {
	t.CustomerGatewayId = cfz.V(v)
	return t
}

// Set__EnableAcceleration updates property "EnableAcceleration".
func (t *AWS_EC2_VPNConnection) Set__EnableAcceleration(v cfz.Expression[bool]) *AWS_EC2_VPNConnection {
	t.EnableAcceleration = v
	return t
}

// SetV__EnableAcceleration updates property "EnableAcceleration".
func (t *AWS_EC2_VPNConnection) SetV__EnableAcceleration(v bool) *AWS_EC2_VPNConnection {
	t.EnableAcceleration = cfz.V(v)
	return t
}

// Set__LocalIpv4NetworkCidr updates property "LocalIpv4NetworkCidr".
func (t *AWS_EC2_VPNConnection) Set__LocalIpv4NetworkCidr(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.LocalIpv4NetworkCidr = v
	return t
}

// SetV__LocalIpv4NetworkCidr updates property "LocalIpv4NetworkCidr".
func (t *AWS_EC2_VPNConnection) SetV__LocalIpv4NetworkCidr(v string) *AWS_EC2_VPNConnection {
	t.LocalIpv4NetworkCidr = cfz.V(v)
	return t
}

// Set__LocalIpv6NetworkCidr updates property "LocalIpv6NetworkCidr".
func (t *AWS_EC2_VPNConnection) Set__LocalIpv6NetworkCidr(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.LocalIpv6NetworkCidr = v
	return t
}

// SetV__LocalIpv6NetworkCidr updates property "LocalIpv6NetworkCidr".
func (t *AWS_EC2_VPNConnection) SetV__LocalIpv6NetworkCidr(v string) *AWS_EC2_VPNConnection {
	t.LocalIpv6NetworkCidr = cfz.V(v)
	return t
}

// Set__OutsideIpAddressType updates property "OutsideIpAddressType".
func (t *AWS_EC2_VPNConnection) Set__OutsideIpAddressType(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.OutsideIpAddressType = v
	return t
}

// SetV__OutsideIpAddressType updates property "OutsideIpAddressType".
func (t *AWS_EC2_VPNConnection) SetV__OutsideIpAddressType(v string) *AWS_EC2_VPNConnection {
	t.OutsideIpAddressType = cfz.V(v)
	return t
}

// Set__RemoteIpv4NetworkCidr updates property "RemoteIpv4NetworkCidr".
func (t *AWS_EC2_VPNConnection) Set__RemoteIpv4NetworkCidr(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.RemoteIpv4NetworkCidr = v
	return t
}

// SetV__RemoteIpv4NetworkCidr updates property "RemoteIpv4NetworkCidr".
func (t *AWS_EC2_VPNConnection) SetV__RemoteIpv4NetworkCidr(v string) *AWS_EC2_VPNConnection {
	t.RemoteIpv4NetworkCidr = cfz.V(v)
	return t
}

// Set__RemoteIpv6NetworkCidr updates property "RemoteIpv6NetworkCidr".
func (t *AWS_EC2_VPNConnection) Set__RemoteIpv6NetworkCidr(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.RemoteIpv6NetworkCidr = v
	return t
}

// SetV__RemoteIpv6NetworkCidr updates property "RemoteIpv6NetworkCidr".
func (t *AWS_EC2_VPNConnection) SetV__RemoteIpv6NetworkCidr(v string) *AWS_EC2_VPNConnection {
	t.RemoteIpv6NetworkCidr = cfz.V(v)
	return t
}

// Set__StaticRoutesOnly updates property "StaticRoutesOnly".
func (t *AWS_EC2_VPNConnection) Set__StaticRoutesOnly(v cfz.Expression[bool]) *AWS_EC2_VPNConnection {
	t.StaticRoutesOnly = v
	return t
}

// SetV__StaticRoutesOnly updates property "StaticRoutesOnly".
func (t *AWS_EC2_VPNConnection) SetV__StaticRoutesOnly(v bool) *AWS_EC2_VPNConnection {
	t.StaticRoutesOnly = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_VPNConnection) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_VPNConnection {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_VPNConnection) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_VPNConnection {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_VPNConnection) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_VPNConnection {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TransitGatewayId updates property "TransitGatewayId".
func (t *AWS_EC2_VPNConnection) Set__TransitGatewayId(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.TransitGatewayId = v
	return t
}

// SetV__TransitGatewayId updates property "TransitGatewayId".
func (t *AWS_EC2_VPNConnection) SetV__TransitGatewayId(v string) *AWS_EC2_VPNConnection {
	t.TransitGatewayId = cfz.V(v)
	return t
}

// Set__TransportTransitGatewayAttachmentId updates property "TransportTransitGatewayAttachmentId".
func (t *AWS_EC2_VPNConnection) Set__TransportTransitGatewayAttachmentId(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.TransportTransitGatewayAttachmentId = v
	return t
}

// SetV__TransportTransitGatewayAttachmentId updates property "TransportTransitGatewayAttachmentId".
func (t *AWS_EC2_VPNConnection) SetV__TransportTransitGatewayAttachmentId(v string) *AWS_EC2_VPNConnection {
	t.TransportTransitGatewayAttachmentId = cfz.V(v)
	return t
}

// Set__TunnelInsideIpVersion updates property "TunnelInsideIpVersion".
func (t *AWS_EC2_VPNConnection) Set__TunnelInsideIpVersion(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.TunnelInsideIpVersion = v
	return t
}

// SetV__TunnelInsideIpVersion updates property "TunnelInsideIpVersion".
func (t *AWS_EC2_VPNConnection) SetV__TunnelInsideIpVersion(v string) *AWS_EC2_VPNConnection {
	t.TunnelInsideIpVersion = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_EC2_VPNConnection) Set__Type(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_EC2_VPNConnection) SetV__Type(v string) *AWS_EC2_VPNConnection {
	t.Type = cfz.V(v)
	return t
}

// Set__VpnGatewayId updates property "VpnGatewayId".
func (t *AWS_EC2_VPNConnection) Set__VpnGatewayId(v cfz.Expression[string]) *AWS_EC2_VPNConnection {
	t.VpnGatewayId = v
	return t
}

// SetV__VpnGatewayId updates property "VpnGatewayId".
func (t *AWS_EC2_VPNConnection) SetV__VpnGatewayId(v string) *AWS_EC2_VPNConnection {
	t.VpnGatewayId = cfz.V(v)
	return t
}

// Set__VpnTunnelOptionsSpecifications updates property "VpnTunnelOptionsSpecifications".
func (t *AWS_EC2_VPNConnection) Set__VpnTunnelOptionsSpecifications(v cfz.ExpressionSlice[AWS_EC2_VPNConnection_VpnTunnelOptionsSpecification]) *AWS_EC2_VPNConnection {
	t.VpnTunnelOptionsSpecifications = v
	return t
}

// SetS__VpnTunnelOptionsSpecifications updates property "VpnTunnelOptionsSpecifications".
func (t *AWS_EC2_VPNConnection) SetS__VpnTunnelOptionsSpecifications(v ...cfz.Expression[AWS_EC2_VPNConnection_VpnTunnelOptionsSpecification]) *AWS_EC2_VPNConnection {
	t.VpnTunnelOptionsSpecifications = cfz.S(v...)
	return t
}

// SetSV__VpnTunnelOptionsSpecifications updates property "VpnTunnelOptionsSpecifications".
func (t *AWS_EC2_VPNConnection) SetSV__VpnTunnelOptionsSpecifications(v ...AWS_EC2_VPNConnection_VpnTunnelOptionsSpecification) *AWS_EC2_VPNConnection {
	t.VpnTunnelOptionsSpecifications = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VPNConnection) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__VpnConnectionId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpnConnectionId
func (t *AWS_EC2_VPNConnection) GetAtt__VpnConnectionId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPNConnection__AttributesMap.VpnConnectionId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VPNConnection) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpnConnectionId returns a conventionally configured output for an attribute of this resource.
// Attribute: VpnConnectionId
func (t *AWS_EC2_VPNConnection) GetConventionalOutputAtt__VpnConnectionId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpnConnectionId", t.GetAtt__VpnConnectionId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VPNConnection) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VPNConnection

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VPNConnection) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
