// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_EC2Fleet_SpotOptionsRequest__Type is the CloudFormation type for AWS::EC2::EC2Fleet.SpotOptionsRequest.
	AWS_EC2_EC2Fleet_SpotOptionsRequest__Type = "AWS::EC2::EC2Fleet.SpotOptionsRequest"
)

var (
	// AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap reports all the CloudFormation properties for AWS::EC2::EC2Fleet.SpotOptionsRequest.
	AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap = struct {
		AllocationStrategy           string
		InstanceInterruptionBehavior string
		InstancePoolsToUseCount      string
		MaintenanceStrategies        string
		MaxTotalPrice                string
		MinTargetCapacity            string
		SingleAvailabilityZone       string
		SingleInstanceType           string
	}{
		AllocationStrategy:           "AllocationStrategy",
		InstanceInterruptionBehavior: "InstanceInterruptionBehavior",
		InstancePoolsToUseCount:      "InstancePoolsToUseCount",
		MaintenanceStrategies:        "MaintenanceStrategies",
		MaxTotalPrice:                "MaxTotalPrice",
		MinTargetCapacity:            "MinTargetCapacity",
		SingleAvailabilityZone:       "SingleAvailabilityZone",
		SingleInstanceType:           "SingleInstanceType",
	}

	// AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::EC2Fleet.SpotOptionsRequest.
	AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesSlice = []string{
		AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap.AllocationStrategy,
		AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap.InstanceInterruptionBehavior,
		AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap.InstancePoolsToUseCount,
		AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap.MaintenanceStrategies,
		AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap.MaxTotalPrice,
		AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap.MinTargetCapacity,
		AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap.SingleAvailabilityZone,
		AWS_EC2_EC2Fleet_SpotOptionsRequest__PropertiesMap.SingleInstanceType,
	}
)

// AWS_EC2_EC2Fleet_SpotOptionsRequest is a binding for AWS::EC2::EC2Fleet.SpotOptionsRequest.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html
type AWS_EC2_EC2Fleet_SpotOptionsRequest struct {
	// AllocationStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-allocationstrategy
	AllocationStrategy cfz.Expression[string] `json:"AllocationStrategy,omitempty"`

	// InstanceInterruptionBehavior is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instanceinterruptionbehavior
	InstanceInterruptionBehavior cfz.Expression[string] `json:"InstanceInterruptionBehavior,omitempty"`

	// InstancePoolsToUseCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-instancepoolstousecount
	InstancePoolsToUseCount cfz.Expression[int32] `json:"InstancePoolsToUseCount,omitempty"`

	// MaintenanceStrategies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-maintenancestrategies
	MaintenanceStrategies cfz.Expression[AWS_EC2_EC2Fleet_MaintenanceStrategies] `json:"MaintenanceStrategies,omitempty"`

	// MaxTotalPrice is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-maxtotalprice
	MaxTotalPrice cfz.Expression[string] `json:"MaxTotalPrice,omitempty"`

	// MinTargetCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-mintargetcapacity
	MinTargetCapacity cfz.Expression[int32] `json:"MinTargetCapacity,omitempty"`

	// SingleAvailabilityZone is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-singleavailabilityzone
	SingleAvailabilityZone cfz.Expression[bool] `json:"SingleAvailabilityZone,omitempty"`

	// SingleInstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ec2fleet-spotoptionsrequest.html#cfn-ec2-ec2fleet-spotoptionsrequest-singleinstancetype
	SingleInstanceType cfz.Expression[bool] `json:"SingleInstanceType,omitempty"`
}

// New__AWS_EC2_EC2Fleet_SpotOptionsRequest initializes a new AWS_EC2_EC2Fleet_SpotOptionsRequest.
func New__AWS_EC2_EC2Fleet_SpotOptionsRequest() AWS_EC2_EC2Fleet_SpotOptionsRequest {
	return AWS_EC2_EC2Fleet_SpotOptionsRequest{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_EC2Fleet_SpotOptionsRequest) GetType() string {
	return AWS_EC2_EC2Fleet_SpotOptionsRequest__Type
}

// Set__AllocationStrategy updates property "AllocationStrategy".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) Set__AllocationStrategy(v cfz.Expression[string]) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.AllocationStrategy = v
	return t
}

// SetV__AllocationStrategy updates property "AllocationStrategy".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) SetV__AllocationStrategy(v string) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.AllocationStrategy = cfz.V(v)
	return t
}

// Set__InstanceInterruptionBehavior updates property "InstanceInterruptionBehavior".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) Set__InstanceInterruptionBehavior(v cfz.Expression[string]) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.InstanceInterruptionBehavior = v
	return t
}

// SetV__InstanceInterruptionBehavior updates property "InstanceInterruptionBehavior".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) SetV__InstanceInterruptionBehavior(v string) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.InstanceInterruptionBehavior = cfz.V(v)
	return t
}

// Set__InstancePoolsToUseCount updates property "InstancePoolsToUseCount".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) Set__InstancePoolsToUseCount(v cfz.Expression[int32]) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.InstancePoolsToUseCount = v
	return t
}

// SetV__InstancePoolsToUseCount updates property "InstancePoolsToUseCount".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) SetV__InstancePoolsToUseCount(v int32) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.InstancePoolsToUseCount = cfz.V(v)
	return t
}

// Set__MaintenanceStrategies updates property "MaintenanceStrategies".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) Set__MaintenanceStrategies(v cfz.Expression[AWS_EC2_EC2Fleet_MaintenanceStrategies]) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.MaintenanceStrategies = v
	return t
}

// SetV__MaintenanceStrategies updates property "MaintenanceStrategies".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) SetV__MaintenanceStrategies(v AWS_EC2_EC2Fleet_MaintenanceStrategies) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.MaintenanceStrategies = cfz.V(v)
	return t
}

// Set__MaxTotalPrice updates property "MaxTotalPrice".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) Set__MaxTotalPrice(v cfz.Expression[string]) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.MaxTotalPrice = v
	return t
}

// SetV__MaxTotalPrice updates property "MaxTotalPrice".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) SetV__MaxTotalPrice(v string) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.MaxTotalPrice = cfz.V(v)
	return t
}

// Set__MinTargetCapacity updates property "MinTargetCapacity".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) Set__MinTargetCapacity(v cfz.Expression[int32]) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.MinTargetCapacity = v
	return t
}

// SetV__MinTargetCapacity updates property "MinTargetCapacity".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) SetV__MinTargetCapacity(v int32) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.MinTargetCapacity = cfz.V(v)
	return t
}

// Set__SingleAvailabilityZone updates property "SingleAvailabilityZone".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) Set__SingleAvailabilityZone(v cfz.Expression[bool]) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.SingleAvailabilityZone = v
	return t
}

// SetV__SingleAvailabilityZone updates property "SingleAvailabilityZone".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) SetV__SingleAvailabilityZone(v bool) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.SingleAvailabilityZone = cfz.V(v)
	return t
}

// Set__SingleInstanceType updates property "SingleInstanceType".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) Set__SingleInstanceType(v cfz.Expression[bool]) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.SingleInstanceType = v
	return t
}

// SetV__SingleInstanceType updates property "SingleInstanceType".
func (t AWS_EC2_EC2Fleet_SpotOptionsRequest) SetV__SingleInstanceType(v bool) AWS_EC2_EC2Fleet_SpotOptionsRequest {
	t.SingleInstanceType = cfz.V(v)
	return t
}
