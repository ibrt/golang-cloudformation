// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_SecurityGroup)(nil)
	_ cfz.Resource                   = (*AWS_EC2_SecurityGroup)(nil)
)

const (
	// AWS_EC2_SecurityGroup__Type is the CloudFormation type for AWS::EC2::SecurityGroup.
	AWS_EC2_SecurityGroup__Type = "AWS::EC2::SecurityGroup"
)

var (
	// AWS_EC2_SecurityGroup__AttributesMap reports all the CloudFormation attributes for AWS::EC2::SecurityGroup.
	AWS_EC2_SecurityGroup__AttributesMap = struct {
		GroupId string
		Id      string
		VpcId   string
	}{
		GroupId: "GroupId",
		Id:      "Id",
		VpcId:   "VpcId",
	}

	// AWS_EC2_SecurityGroup__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::SecurityGroup.
	AWS_EC2_SecurityGroup__AttributesSlice = []string{
		AWS_EC2_SecurityGroup__AttributesMap.GroupId,
		AWS_EC2_SecurityGroup__AttributesMap.Id,
		AWS_EC2_SecurityGroup__AttributesMap.VpcId,
	}
)

var (
	// AWS_EC2_SecurityGroup__PropertiesMap reports all the CloudFormation properties for AWS::EC2::SecurityGroup.
	AWS_EC2_SecurityGroup__PropertiesMap = struct {
		GroupDescription     string
		GroupName            string
		SecurityGroupEgress  string
		SecurityGroupIngress string
		Tags                 string
		VpcId                string
	}{
		GroupDescription:     "GroupDescription",
		GroupName:            "GroupName",
		SecurityGroupEgress:  "SecurityGroupEgress",
		SecurityGroupIngress: "SecurityGroupIngress",
		Tags:                 "Tags",
		VpcId:                "VpcId",
	}

	// AWS_EC2_SecurityGroup__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::SecurityGroup.
	AWS_EC2_SecurityGroup__PropertiesSlice = []string{
		AWS_EC2_SecurityGroup__PropertiesMap.GroupDescription,
		AWS_EC2_SecurityGroup__PropertiesMap.GroupName,
		AWS_EC2_SecurityGroup__PropertiesMap.SecurityGroupEgress,
		AWS_EC2_SecurityGroup__PropertiesMap.SecurityGroupIngress,
		AWS_EC2_SecurityGroup__PropertiesMap.Tags,
		AWS_EC2_SecurityGroup__PropertiesMap.VpcId,
	}
)

// AWS_EC2_SecurityGroup is a binding for AWS::EC2::SecurityGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html
type AWS_EC2_SecurityGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// GroupDescription is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-groupdescription
	GroupDescription cfz.Expression[string] `json:"GroupDescription,omitempty"`

	// GroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-groupname
	GroupName cfz.Expression[string] `json:"GroupName,omitempty"`

	// SecurityGroupEgress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-securitygroupegress
	SecurityGroupEgress cfz.ExpressionSlice[AWS_EC2_SecurityGroup_Egress] `json:"SecurityGroupEgress,omitempty"`

	// SecurityGroupIngress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-securitygroupingress
	SecurityGroupIngress cfz.ExpressionSlice[AWS_EC2_SecurityGroup_Ingress] `json:"SecurityGroupIngress,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroup.html#cfn-ec2-securitygroup-vpcid
	VpcId cfz.Expression[string] `json:"VpcId,omitempty"`
}

// New__AWS_EC2_SecurityGroup initializes a new *AWS_EC2_SecurityGroup.
func New__AWS_EC2_SecurityGroup(logicalName string) *AWS_EC2_SecurityGroup {
	return &AWS_EC2_SecurityGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_SecurityGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_SecurityGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_SecurityGroup) GetType() string {
	return AWS_EC2_SecurityGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_SecurityGroup) Set__LogicalName(v string) *AWS_EC2_SecurityGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_SecurityGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_SecurityGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_SecurityGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_SecurityGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_SecurityGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_SecurityGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_SecurityGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_SecurityGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_SecurityGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_SecurityGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_SecurityGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_SecurityGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__GroupDescription updates property "GroupDescription".
func (t *AWS_EC2_SecurityGroup) Set__GroupDescription(v cfz.Expression[string]) *AWS_EC2_SecurityGroup {
	t.GroupDescription = v
	return t
}

// SetV__GroupDescription updates property "GroupDescription".
func (t *AWS_EC2_SecurityGroup) SetV__GroupDescription(v string) *AWS_EC2_SecurityGroup {
	t.GroupDescription = cfz.V(v)
	return t
}

// Set__GroupName updates property "GroupName".
func (t *AWS_EC2_SecurityGroup) Set__GroupName(v cfz.Expression[string]) *AWS_EC2_SecurityGroup {
	t.GroupName = v
	return t
}

// SetV__GroupName updates property "GroupName".
func (t *AWS_EC2_SecurityGroup) SetV__GroupName(v string) *AWS_EC2_SecurityGroup {
	t.GroupName = cfz.V(v)
	return t
}

// Set__SecurityGroupEgress updates property "SecurityGroupEgress".
func (t *AWS_EC2_SecurityGroup) Set__SecurityGroupEgress(v cfz.ExpressionSlice[AWS_EC2_SecurityGroup_Egress]) *AWS_EC2_SecurityGroup {
	t.SecurityGroupEgress = v
	return t
}

// SetS__SecurityGroupEgress updates property "SecurityGroupEgress".
func (t *AWS_EC2_SecurityGroup) SetS__SecurityGroupEgress(v ...cfz.Expression[AWS_EC2_SecurityGroup_Egress]) *AWS_EC2_SecurityGroup {
	t.SecurityGroupEgress = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupEgress updates property "SecurityGroupEgress".
func (t *AWS_EC2_SecurityGroup) SetSV__SecurityGroupEgress(v ...AWS_EC2_SecurityGroup_Egress) *AWS_EC2_SecurityGroup {
	t.SecurityGroupEgress = cfz.SV(v...)
	return t
}

// Set__SecurityGroupIngress updates property "SecurityGroupIngress".
func (t *AWS_EC2_SecurityGroup) Set__SecurityGroupIngress(v cfz.ExpressionSlice[AWS_EC2_SecurityGroup_Ingress]) *AWS_EC2_SecurityGroup {
	t.SecurityGroupIngress = v
	return t
}

// SetS__SecurityGroupIngress updates property "SecurityGroupIngress".
func (t *AWS_EC2_SecurityGroup) SetS__SecurityGroupIngress(v ...cfz.Expression[AWS_EC2_SecurityGroup_Ingress]) *AWS_EC2_SecurityGroup {
	t.SecurityGroupIngress = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIngress updates property "SecurityGroupIngress".
func (t *AWS_EC2_SecurityGroup) SetSV__SecurityGroupIngress(v ...AWS_EC2_SecurityGroup_Ingress) *AWS_EC2_SecurityGroup {
	t.SecurityGroupIngress = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_SecurityGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_SecurityGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_SecurityGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_SecurityGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_SecurityGroup) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_SecurityGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcId updates property "VpcId".
func (t *AWS_EC2_SecurityGroup) Set__VpcId(v cfz.Expression[string]) *AWS_EC2_SecurityGroup {
	t.VpcId = v
	return t
}

// SetV__VpcId updates property "VpcId".
func (t *AWS_EC2_SecurityGroup) SetV__VpcId(v string) *AWS_EC2_SecurityGroup {
	t.VpcId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_SecurityGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__GroupId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: GroupId
func (t *AWS_EC2_SecurityGroup) GetAtt__GroupId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_SecurityGroup__AttributesMap.GroupId))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_EC2_SecurityGroup) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_SecurityGroup__AttributesMap.Id))
}

// GetAtt__VpcId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcId
func (t *AWS_EC2_SecurityGroup) GetAtt__VpcId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_SecurityGroup__AttributesMap.VpcId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_SecurityGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__GroupId returns a conventionally configured output for an attribute of this resource.
// Attribute: GroupId
func (t *AWS_EC2_SecurityGroup) GetConventionalOutputAtt__GroupId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGroupId", t.GetAtt__GroupId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_EC2_SecurityGroup) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcId returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcId
func (t *AWS_EC2_SecurityGroup) GetConventionalOutputAtt__VpcId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcId", t.GetAtt__VpcId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_SecurityGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_SecurityGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_SecurityGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
