// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VPCPeeringConnection)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VPCPeeringConnection)(nil)
)

const (
	// AWS_EC2_VPCPeeringConnection__Type is the CloudFormation type for AWS::EC2::VPCPeeringConnection.
	AWS_EC2_VPCPeeringConnection__Type = "AWS::EC2::VPCPeeringConnection"
)

var (
	// AWS_EC2_VPCPeeringConnection__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VPCPeeringConnection.
	AWS_EC2_VPCPeeringConnection__AttributesMap = struct {
		Id string
	}{
		Id: "Id",
	}

	// AWS_EC2_VPCPeeringConnection__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VPCPeeringConnection.
	AWS_EC2_VPCPeeringConnection__AttributesSlice = []string{
		AWS_EC2_VPCPeeringConnection__AttributesMap.Id,
	}
)

var (
	// AWS_EC2_VPCPeeringConnection__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VPCPeeringConnection.
	AWS_EC2_VPCPeeringConnection__PropertiesMap = struct {
		PeerOwnerId string
		PeerRegion  string
		PeerRoleArn string
		PeerVpcId   string
		Tags        string
		VpcId       string
	}{
		PeerOwnerId: "PeerOwnerId",
		PeerRegion:  "PeerRegion",
		PeerRoleArn: "PeerRoleArn",
		PeerVpcId:   "PeerVpcId",
		Tags:        "Tags",
		VpcId:       "VpcId",
	}

	// AWS_EC2_VPCPeeringConnection__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VPCPeeringConnection.
	AWS_EC2_VPCPeeringConnection__PropertiesSlice = []string{
		AWS_EC2_VPCPeeringConnection__PropertiesMap.PeerOwnerId,
		AWS_EC2_VPCPeeringConnection__PropertiesMap.PeerRegion,
		AWS_EC2_VPCPeeringConnection__PropertiesMap.PeerRoleArn,
		AWS_EC2_VPCPeeringConnection__PropertiesMap.PeerVpcId,
		AWS_EC2_VPCPeeringConnection__PropertiesMap.Tags,
		AWS_EC2_VPCPeeringConnection__PropertiesMap.VpcId,
	}
)

// AWS_EC2_VPCPeeringConnection is a binding for AWS::EC2::VPCPeeringConnection.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html
type AWS_EC2_VPCPeeringConnection struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// PeerOwnerId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid
	PeerOwnerId cfz.Expression[string] `json:"PeerOwnerId,omitempty"`

	// PeerRegion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion
	PeerRegion cfz.Expression[string] `json:"PeerRegion,omitempty"`

	// PeerRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn
	PeerRoleArn cfz.Expression[string] `json:"PeerRoleArn,omitempty"`

	// PeerVpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid
	PeerVpcId cfz.Expression[string] `json:"PeerVpcId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid
	VpcId cfz.Expression[string] `json:"VpcId,omitempty"`
}

// New__AWS_EC2_VPCPeeringConnection initializes a new *AWS_EC2_VPCPeeringConnection.
func New__AWS_EC2_VPCPeeringConnection(logicalName string) *AWS_EC2_VPCPeeringConnection {
	return &AWS_EC2_VPCPeeringConnection{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VPCPeeringConnection) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VPCPeeringConnection) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VPCPeeringConnection) GetType() string {
	return AWS_EC2_VPCPeeringConnection__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VPCPeeringConnection) Set__LogicalName(v string) *AWS_EC2_VPCPeeringConnection {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VPCPeeringConnection) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VPCPeeringConnection {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VPCPeeringConnection) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VPCPeeringConnection {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VPCPeeringConnection) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VPCPeeringConnection {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VPCPeeringConnection) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VPCPeeringConnection {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VPCPeeringConnection) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VPCPeeringConnection {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VPCPeeringConnection) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VPCPeeringConnection {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__PeerOwnerId updates property "PeerOwnerId".
func (t *AWS_EC2_VPCPeeringConnection) Set__PeerOwnerId(v cfz.Expression[string]) *AWS_EC2_VPCPeeringConnection {
	t.PeerOwnerId = v
	return t
}

// SetV__PeerOwnerId updates property "PeerOwnerId".
func (t *AWS_EC2_VPCPeeringConnection) SetV__PeerOwnerId(v string) *AWS_EC2_VPCPeeringConnection {
	t.PeerOwnerId = cfz.V(v)
	return t
}

// Set__PeerRegion updates property "PeerRegion".
func (t *AWS_EC2_VPCPeeringConnection) Set__PeerRegion(v cfz.Expression[string]) *AWS_EC2_VPCPeeringConnection {
	t.PeerRegion = v
	return t
}

// SetV__PeerRegion updates property "PeerRegion".
func (t *AWS_EC2_VPCPeeringConnection) SetV__PeerRegion(v string) *AWS_EC2_VPCPeeringConnection {
	t.PeerRegion = cfz.V(v)
	return t
}

// Set__PeerRoleArn updates property "PeerRoleArn".
func (t *AWS_EC2_VPCPeeringConnection) Set__PeerRoleArn(v cfz.Expression[string]) *AWS_EC2_VPCPeeringConnection {
	t.PeerRoleArn = v
	return t
}

// SetV__PeerRoleArn updates property "PeerRoleArn".
func (t *AWS_EC2_VPCPeeringConnection) SetV__PeerRoleArn(v string) *AWS_EC2_VPCPeeringConnection {
	t.PeerRoleArn = cfz.V(v)
	return t
}

// Set__PeerVpcId updates property "PeerVpcId".
func (t *AWS_EC2_VPCPeeringConnection) Set__PeerVpcId(v cfz.Expression[string]) *AWS_EC2_VPCPeeringConnection {
	t.PeerVpcId = v
	return t
}

// SetV__PeerVpcId updates property "PeerVpcId".
func (t *AWS_EC2_VPCPeeringConnection) SetV__PeerVpcId(v string) *AWS_EC2_VPCPeeringConnection {
	t.PeerVpcId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_VPCPeeringConnection) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_VPCPeeringConnection {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_VPCPeeringConnection) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_VPCPeeringConnection {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_VPCPeeringConnection) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_VPCPeeringConnection {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcId updates property "VpcId".
func (t *AWS_EC2_VPCPeeringConnection) Set__VpcId(v cfz.Expression[string]) *AWS_EC2_VPCPeeringConnection {
	t.VpcId = v
	return t
}

// SetV__VpcId updates property "VpcId".
func (t *AWS_EC2_VPCPeeringConnection) SetV__VpcId(v string) *AWS_EC2_VPCPeeringConnection {
	t.VpcId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VPCPeeringConnection) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_EC2_VPCPeeringConnection) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCPeeringConnection__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VPCPeeringConnection) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_EC2_VPCPeeringConnection) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VPCPeeringConnection) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VPCPeeringConnection

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VPCPeeringConnection) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
