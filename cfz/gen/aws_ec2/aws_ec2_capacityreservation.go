// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_CapacityReservation)(nil)
	_ cfz.Resource                   = (*AWS_EC2_CapacityReservation)(nil)
)

const (
	// AWS_EC2_CapacityReservation__Type is the CloudFormation type for AWS::EC2::CapacityReservation.
	AWS_EC2_CapacityReservation__Type = "AWS::EC2::CapacityReservation"
)

var (
	// AWS_EC2_CapacityReservation__AttributesMap reports all the CloudFormation attributes for AWS::EC2::CapacityReservation.
	AWS_EC2_CapacityReservation__AttributesMap = struct {
		AvailabilityZone       string
		AvailableInstanceCount string
		Id                     string
		InstanceType           string
		Tenancy                string
		TotalInstanceCount     string
	}{
		AvailabilityZone:       "AvailabilityZone",
		AvailableInstanceCount: "AvailableInstanceCount",
		Id:                     "Id",
		InstanceType:           "InstanceType",
		Tenancy:                "Tenancy",
		TotalInstanceCount:     "TotalInstanceCount",
	}

	// AWS_EC2_CapacityReservation__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::CapacityReservation.
	AWS_EC2_CapacityReservation__AttributesSlice = []string{
		AWS_EC2_CapacityReservation__AttributesMap.AvailabilityZone,
		AWS_EC2_CapacityReservation__AttributesMap.AvailableInstanceCount,
		AWS_EC2_CapacityReservation__AttributesMap.Id,
		AWS_EC2_CapacityReservation__AttributesMap.InstanceType,
		AWS_EC2_CapacityReservation__AttributesMap.Tenancy,
		AWS_EC2_CapacityReservation__AttributesMap.TotalInstanceCount,
	}
)

var (
	// AWS_EC2_CapacityReservation__PropertiesMap reports all the CloudFormation properties for AWS::EC2::CapacityReservation.
	AWS_EC2_CapacityReservation__PropertiesMap = struct {
		AvailabilityZone                string
		EbsOptimized                    string
		EndDate                         string
		EndDateType                     string
		EphemeralStorage                string
		InstanceCount                   string
		InstanceMatchCriteria           string
		InstancePlatform                string
		InstanceType                    string
		OutPostArn                      string
		PlacementGroupArn               string
		TagSpecifications               string
		Tenancy                         string
		UnusedReservationBillingOwnerId string
	}{
		AvailabilityZone:                "AvailabilityZone",
		EbsOptimized:                    "EbsOptimized",
		EndDate:                         "EndDate",
		EndDateType:                     "EndDateType",
		EphemeralStorage:                "EphemeralStorage",
		InstanceCount:                   "InstanceCount",
		InstanceMatchCriteria:           "InstanceMatchCriteria",
		InstancePlatform:                "InstancePlatform",
		InstanceType:                    "InstanceType",
		OutPostArn:                      "OutPostArn",
		PlacementGroupArn:               "PlacementGroupArn",
		TagSpecifications:               "TagSpecifications",
		Tenancy:                         "Tenancy",
		UnusedReservationBillingOwnerId: "UnusedReservationBillingOwnerId",
	}

	// AWS_EC2_CapacityReservation__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::CapacityReservation.
	AWS_EC2_CapacityReservation__PropertiesSlice = []string{
		AWS_EC2_CapacityReservation__PropertiesMap.AvailabilityZone,
		AWS_EC2_CapacityReservation__PropertiesMap.EbsOptimized,
		AWS_EC2_CapacityReservation__PropertiesMap.EndDate,
		AWS_EC2_CapacityReservation__PropertiesMap.EndDateType,
		AWS_EC2_CapacityReservation__PropertiesMap.EphemeralStorage,
		AWS_EC2_CapacityReservation__PropertiesMap.InstanceCount,
		AWS_EC2_CapacityReservation__PropertiesMap.InstanceMatchCriteria,
		AWS_EC2_CapacityReservation__PropertiesMap.InstancePlatform,
		AWS_EC2_CapacityReservation__PropertiesMap.InstanceType,
		AWS_EC2_CapacityReservation__PropertiesMap.OutPostArn,
		AWS_EC2_CapacityReservation__PropertiesMap.PlacementGroupArn,
		AWS_EC2_CapacityReservation__PropertiesMap.TagSpecifications,
		AWS_EC2_CapacityReservation__PropertiesMap.Tenancy,
		AWS_EC2_CapacityReservation__PropertiesMap.UnusedReservationBillingOwnerId,
	}
)

// AWS_EC2_CapacityReservation is a binding for AWS::EC2::CapacityReservation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html
type AWS_EC2_CapacityReservation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AvailabilityZone is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone
	AvailabilityZone cfz.Expression[string] `json:"AvailabilityZone,omitempty"`

	// EbsOptimized is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized
	EbsOptimized cfz.Expression[bool] `json:"EbsOptimized,omitempty"`

	// EndDate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate
	EndDate cfz.Expression[string] `json:"EndDate,omitempty"`

	// EndDateType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype
	EndDateType cfz.Expression[string] `json:"EndDateType,omitempty"`

	// EphemeralStorage is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage
	EphemeralStorage cfz.Expression[bool] `json:"EphemeralStorage,omitempty"`

	// InstanceCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount
	InstanceCount cfz.Expression[int32] `json:"InstanceCount,omitempty"`

	// InstanceMatchCriteria is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria
	InstanceMatchCriteria cfz.Expression[string] `json:"InstanceMatchCriteria,omitempty"`

	// InstancePlatform is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform
	InstancePlatform cfz.Expression[string] `json:"InstancePlatform,omitempty"`

	// InstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype
	InstanceType cfz.Expression[string] `json:"InstanceType,omitempty"`

	// OutPostArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-outpostarn
	OutPostArn cfz.Expression[string] `json:"OutPostArn,omitempty"`

	// PlacementGroupArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-placementgrouparn
	PlacementGroupArn cfz.Expression[string] `json:"PlacementGroupArn,omitempty"`

	// TagSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications
	TagSpecifications cfz.ExpressionSlice[AWS_EC2_CapacityReservation_TagSpecification] `json:"TagSpecifications,omitempty"`

	// Tenancy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy
	Tenancy cfz.Expression[string] `json:"Tenancy,omitempty"`

	// UnusedReservationBillingOwnerId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-unusedreservationbillingownerid
	UnusedReservationBillingOwnerId cfz.Expression[string] `json:"UnusedReservationBillingOwnerId,omitempty"`
}

// New__AWS_EC2_CapacityReservation initializes a new *AWS_EC2_CapacityReservation.
func New__AWS_EC2_CapacityReservation(logicalName string) *AWS_EC2_CapacityReservation {
	return &AWS_EC2_CapacityReservation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_CapacityReservation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_CapacityReservation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_CapacityReservation) GetType() string {
	return AWS_EC2_CapacityReservation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_CapacityReservation) Set__LogicalName(v string) *AWS_EC2_CapacityReservation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_CapacityReservation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_CapacityReservation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_CapacityReservation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_CapacityReservation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_CapacityReservation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_CapacityReservation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_CapacityReservation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_CapacityReservation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_CapacityReservation) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_CapacityReservation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_CapacityReservation) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_CapacityReservation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_EC2_CapacityReservation) Set__AvailabilityZone(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.AvailabilityZone = v
	return t
}

// SetV__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_EC2_CapacityReservation) SetV__AvailabilityZone(v string) *AWS_EC2_CapacityReservation {
	t.AvailabilityZone = cfz.V(v)
	return t
}

// Set__EbsOptimized updates property "EbsOptimized".
func (t *AWS_EC2_CapacityReservation) Set__EbsOptimized(v cfz.Expression[bool]) *AWS_EC2_CapacityReservation {
	t.EbsOptimized = v
	return t
}

// SetV__EbsOptimized updates property "EbsOptimized".
func (t *AWS_EC2_CapacityReservation) SetV__EbsOptimized(v bool) *AWS_EC2_CapacityReservation {
	t.EbsOptimized = cfz.V(v)
	return t
}

// Set__EndDate updates property "EndDate".
func (t *AWS_EC2_CapacityReservation) Set__EndDate(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.EndDate = v
	return t
}

// SetV__EndDate updates property "EndDate".
func (t *AWS_EC2_CapacityReservation) SetV__EndDate(v string) *AWS_EC2_CapacityReservation {
	t.EndDate = cfz.V(v)
	return t
}

// Set__EndDateType updates property "EndDateType".
func (t *AWS_EC2_CapacityReservation) Set__EndDateType(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.EndDateType = v
	return t
}

// SetV__EndDateType updates property "EndDateType".
func (t *AWS_EC2_CapacityReservation) SetV__EndDateType(v string) *AWS_EC2_CapacityReservation {
	t.EndDateType = cfz.V(v)
	return t
}

// Set__EphemeralStorage updates property "EphemeralStorage".
func (t *AWS_EC2_CapacityReservation) Set__EphemeralStorage(v cfz.Expression[bool]) *AWS_EC2_CapacityReservation {
	t.EphemeralStorage = v
	return t
}

// SetV__EphemeralStorage updates property "EphemeralStorage".
func (t *AWS_EC2_CapacityReservation) SetV__EphemeralStorage(v bool) *AWS_EC2_CapacityReservation {
	t.EphemeralStorage = cfz.V(v)
	return t
}

// Set__InstanceCount updates property "InstanceCount".
func (t *AWS_EC2_CapacityReservation) Set__InstanceCount(v cfz.Expression[int32]) *AWS_EC2_CapacityReservation {
	t.InstanceCount = v
	return t
}

// SetV__InstanceCount updates property "InstanceCount".
func (t *AWS_EC2_CapacityReservation) SetV__InstanceCount(v int32) *AWS_EC2_CapacityReservation {
	t.InstanceCount = cfz.V(v)
	return t
}

// Set__InstanceMatchCriteria updates property "InstanceMatchCriteria".
func (t *AWS_EC2_CapacityReservation) Set__InstanceMatchCriteria(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.InstanceMatchCriteria = v
	return t
}

// SetV__InstanceMatchCriteria updates property "InstanceMatchCriteria".
func (t *AWS_EC2_CapacityReservation) SetV__InstanceMatchCriteria(v string) *AWS_EC2_CapacityReservation {
	t.InstanceMatchCriteria = cfz.V(v)
	return t
}

// Set__InstancePlatform updates property "InstancePlatform".
func (t *AWS_EC2_CapacityReservation) Set__InstancePlatform(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.InstancePlatform = v
	return t
}

// SetV__InstancePlatform updates property "InstancePlatform".
func (t *AWS_EC2_CapacityReservation) SetV__InstancePlatform(v string) *AWS_EC2_CapacityReservation {
	t.InstancePlatform = cfz.V(v)
	return t
}

// Set__InstanceType updates property "InstanceType".
func (t *AWS_EC2_CapacityReservation) Set__InstanceType(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.InstanceType = v
	return t
}

// SetV__InstanceType updates property "InstanceType".
func (t *AWS_EC2_CapacityReservation) SetV__InstanceType(v string) *AWS_EC2_CapacityReservation {
	t.InstanceType = cfz.V(v)
	return t
}

// Set__OutPostArn updates property "OutPostArn".
func (t *AWS_EC2_CapacityReservation) Set__OutPostArn(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.OutPostArn = v
	return t
}

// SetV__OutPostArn updates property "OutPostArn".
func (t *AWS_EC2_CapacityReservation) SetV__OutPostArn(v string) *AWS_EC2_CapacityReservation {
	t.OutPostArn = cfz.V(v)
	return t
}

// Set__PlacementGroupArn updates property "PlacementGroupArn".
func (t *AWS_EC2_CapacityReservation) Set__PlacementGroupArn(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.PlacementGroupArn = v
	return t
}

// SetV__PlacementGroupArn updates property "PlacementGroupArn".
func (t *AWS_EC2_CapacityReservation) SetV__PlacementGroupArn(v string) *AWS_EC2_CapacityReservation {
	t.PlacementGroupArn = cfz.V(v)
	return t
}

// Set__TagSpecifications updates property "TagSpecifications".
func (t *AWS_EC2_CapacityReservation) Set__TagSpecifications(v cfz.ExpressionSlice[AWS_EC2_CapacityReservation_TagSpecification]) *AWS_EC2_CapacityReservation {
	t.TagSpecifications = v
	return t
}

// SetS__TagSpecifications updates property "TagSpecifications".
func (t *AWS_EC2_CapacityReservation) SetS__TagSpecifications(v ...cfz.Expression[AWS_EC2_CapacityReservation_TagSpecification]) *AWS_EC2_CapacityReservation {
	t.TagSpecifications = cfz.S(v...)
	return t
}

// SetSV__TagSpecifications updates property "TagSpecifications".
func (t *AWS_EC2_CapacityReservation) SetSV__TagSpecifications(v ...AWS_EC2_CapacityReservation_TagSpecification) *AWS_EC2_CapacityReservation {
	t.TagSpecifications = cfz.SV(v...)
	return t
}

// Set__Tenancy updates property "Tenancy".
func (t *AWS_EC2_CapacityReservation) Set__Tenancy(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.Tenancy = v
	return t
}

// SetV__Tenancy updates property "Tenancy".
func (t *AWS_EC2_CapacityReservation) SetV__Tenancy(v string) *AWS_EC2_CapacityReservation {
	t.Tenancy = cfz.V(v)
	return t
}

// Set__UnusedReservationBillingOwnerId updates property "UnusedReservationBillingOwnerId".
func (t *AWS_EC2_CapacityReservation) Set__UnusedReservationBillingOwnerId(v cfz.Expression[string]) *AWS_EC2_CapacityReservation {
	t.UnusedReservationBillingOwnerId = v
	return t
}

// SetV__UnusedReservationBillingOwnerId updates property "UnusedReservationBillingOwnerId".
func (t *AWS_EC2_CapacityReservation) SetV__UnusedReservationBillingOwnerId(v string) *AWS_EC2_CapacityReservation {
	t.UnusedReservationBillingOwnerId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_CapacityReservation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AvailabilityZone returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AvailabilityZone
func (t *AWS_EC2_CapacityReservation) GetAtt__AvailabilityZone() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_CapacityReservation__AttributesMap.AvailabilityZone))
}

// GetAtt__AvailableInstanceCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AvailableInstanceCount
func (t *AWS_EC2_CapacityReservation) GetAtt__AvailableInstanceCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_CapacityReservation__AttributesMap.AvailableInstanceCount))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_EC2_CapacityReservation) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_CapacityReservation__AttributesMap.Id))
}

// GetAtt__InstanceType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: InstanceType
func (t *AWS_EC2_CapacityReservation) GetAtt__InstanceType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_CapacityReservation__AttributesMap.InstanceType))
}

// GetAtt__Tenancy returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Tenancy
func (t *AWS_EC2_CapacityReservation) GetAtt__Tenancy() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_CapacityReservation__AttributesMap.Tenancy))
}

// GetAtt__TotalInstanceCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: TotalInstanceCount
func (t *AWS_EC2_CapacityReservation) GetAtt__TotalInstanceCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_CapacityReservation__AttributesMap.TotalInstanceCount))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_CapacityReservation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AvailabilityZone returns a conventionally configured output for an attribute of this resource.
// Attribute: AvailabilityZone
func (t *AWS_EC2_CapacityReservation) GetConventionalOutputAtt__AvailabilityZone(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAvailabilityZone", t.GetAtt__AvailabilityZone())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AvailableInstanceCount returns a conventionally configured output for an attribute of this resource.
// Attribute: AvailableInstanceCount
func (t *AWS_EC2_CapacityReservation) GetConventionalOutputAtt__AvailableInstanceCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAvailableInstanceCount", t.GetAtt__AvailableInstanceCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_EC2_CapacityReservation) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__InstanceType returns a conventionally configured output for an attribute of this resource.
// Attribute: InstanceType
func (t *AWS_EC2_CapacityReservation) GetConventionalOutputAtt__InstanceType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttInstanceType", t.GetAtt__InstanceType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Tenancy returns a conventionally configured output for an attribute of this resource.
// Attribute: Tenancy
func (t *AWS_EC2_CapacityReservation) GetConventionalOutputAtt__Tenancy(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTenancy", t.GetAtt__Tenancy())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__TotalInstanceCount returns a conventionally configured output for an attribute of this resource.
// Attribute: TotalInstanceCount
func (t *AWS_EC2_CapacityReservation) GetConventionalOutputAtt__TotalInstanceCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTotalInstanceCount", t.GetAtt__TotalInstanceCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_CapacityReservation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_CapacityReservation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_CapacityReservation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
