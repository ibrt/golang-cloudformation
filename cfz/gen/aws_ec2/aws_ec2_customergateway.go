// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_CustomerGateway)(nil)
	_ cfz.Resource                   = (*AWS_EC2_CustomerGateway)(nil)
)

const (
	// AWS_EC2_CustomerGateway__Type is the CloudFormation type for AWS::EC2::CustomerGateway.
	AWS_EC2_CustomerGateway__Type = "AWS::EC2::CustomerGateway"
)

var (
	// AWS_EC2_CustomerGateway__AttributesMap reports all the CloudFormation attributes for AWS::EC2::CustomerGateway.
	AWS_EC2_CustomerGateway__AttributesMap = struct {
		CustomerGatewayId string
	}{
		CustomerGatewayId: "CustomerGatewayId",
	}

	// AWS_EC2_CustomerGateway__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::CustomerGateway.
	AWS_EC2_CustomerGateway__AttributesSlice = []string{
		AWS_EC2_CustomerGateway__AttributesMap.CustomerGatewayId,
	}
)

var (
	// AWS_EC2_CustomerGateway__PropertiesMap reports all the CloudFormation properties for AWS::EC2::CustomerGateway.
	AWS_EC2_CustomerGateway__PropertiesMap = struct {
		BgpAsn         string
		BgpAsnExtended string
		CertificateArn string
		DeviceName     string
		IpAddress      string
		Tags           string
		Type           string
	}{
		BgpAsn:         "BgpAsn",
		BgpAsnExtended: "BgpAsnExtended",
		CertificateArn: "CertificateArn",
		DeviceName:     "DeviceName",
		IpAddress:      "IpAddress",
		Tags:           "Tags",
		Type:           "Type",
	}

	// AWS_EC2_CustomerGateway__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::CustomerGateway.
	AWS_EC2_CustomerGateway__PropertiesSlice = []string{
		AWS_EC2_CustomerGateway__PropertiesMap.BgpAsn,
		AWS_EC2_CustomerGateway__PropertiesMap.BgpAsnExtended,
		AWS_EC2_CustomerGateway__PropertiesMap.CertificateArn,
		AWS_EC2_CustomerGateway__PropertiesMap.DeviceName,
		AWS_EC2_CustomerGateway__PropertiesMap.IpAddress,
		AWS_EC2_CustomerGateway__PropertiesMap.Tags,
		AWS_EC2_CustomerGateway__PropertiesMap.Type,
	}
)

// AWS_EC2_CustomerGateway is a binding for AWS::EC2::CustomerGateway.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html
type AWS_EC2_CustomerGateway struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// BgpAsn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-bgpasn
	BgpAsn cfz.Expression[int32] `json:"BgpAsn,omitempty"`

	// BgpAsnExtended is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-bgpasnextended
	BgpAsnExtended cfz.Expression[float64] `json:"BgpAsnExtended,omitempty"`

	// CertificateArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-certificatearn
	CertificateArn cfz.Expression[string] `json:"CertificateArn,omitempty"`

	// DeviceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-devicename
	DeviceName cfz.Expression[string] `json:"DeviceName,omitempty"`

	// IpAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-ipaddress
	IpAddress cfz.Expression[string] `json:"IpAddress,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-customergateway.html#cfn-ec2-customergateway-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_EC2_CustomerGateway initializes a new *AWS_EC2_CustomerGateway.
func New__AWS_EC2_CustomerGateway(logicalName string) *AWS_EC2_CustomerGateway {
	return &AWS_EC2_CustomerGateway{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_CustomerGateway) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_CustomerGateway) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_CustomerGateway) GetType() string {
	return AWS_EC2_CustomerGateway__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_CustomerGateway) Set__LogicalName(v string) *AWS_EC2_CustomerGateway {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_CustomerGateway) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_CustomerGateway {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_CustomerGateway) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_CustomerGateway {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_CustomerGateway) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_CustomerGateway {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_CustomerGateway) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_CustomerGateway {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_CustomerGateway) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_CustomerGateway {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_CustomerGateway) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_CustomerGateway {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__BgpAsn updates property "BgpAsn".
func (t *AWS_EC2_CustomerGateway) Set__BgpAsn(v cfz.Expression[int32]) *AWS_EC2_CustomerGateway {
	t.BgpAsn = v
	return t
}

// SetV__BgpAsn updates property "BgpAsn".
func (t *AWS_EC2_CustomerGateway) SetV__BgpAsn(v int32) *AWS_EC2_CustomerGateway {
	t.BgpAsn = cfz.V(v)
	return t
}

// Set__BgpAsnExtended updates property "BgpAsnExtended".
func (t *AWS_EC2_CustomerGateway) Set__BgpAsnExtended(v cfz.Expression[float64]) *AWS_EC2_CustomerGateway {
	t.BgpAsnExtended = v
	return t
}

// SetV__BgpAsnExtended updates property "BgpAsnExtended".
func (t *AWS_EC2_CustomerGateway) SetV__BgpAsnExtended(v float64) *AWS_EC2_CustomerGateway {
	t.BgpAsnExtended = cfz.V(v)
	return t
}

// Set__CertificateArn updates property "CertificateArn".
func (t *AWS_EC2_CustomerGateway) Set__CertificateArn(v cfz.Expression[string]) *AWS_EC2_CustomerGateway {
	t.CertificateArn = v
	return t
}

// SetV__CertificateArn updates property "CertificateArn".
func (t *AWS_EC2_CustomerGateway) SetV__CertificateArn(v string) *AWS_EC2_CustomerGateway {
	t.CertificateArn = cfz.V(v)
	return t
}

// Set__DeviceName updates property "DeviceName".
func (t *AWS_EC2_CustomerGateway) Set__DeviceName(v cfz.Expression[string]) *AWS_EC2_CustomerGateway {
	t.DeviceName = v
	return t
}

// SetV__DeviceName updates property "DeviceName".
func (t *AWS_EC2_CustomerGateway) SetV__DeviceName(v string) *AWS_EC2_CustomerGateway {
	t.DeviceName = cfz.V(v)
	return t
}

// Set__IpAddress updates property "IpAddress".
func (t *AWS_EC2_CustomerGateway) Set__IpAddress(v cfz.Expression[string]) *AWS_EC2_CustomerGateway {
	t.IpAddress = v
	return t
}

// SetV__IpAddress updates property "IpAddress".
func (t *AWS_EC2_CustomerGateway) SetV__IpAddress(v string) *AWS_EC2_CustomerGateway {
	t.IpAddress = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_CustomerGateway) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_CustomerGateway {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_CustomerGateway) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_CustomerGateway {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_CustomerGateway) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_CustomerGateway {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_EC2_CustomerGateway) Set__Type(v cfz.Expression[string]) *AWS_EC2_CustomerGateway {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_EC2_CustomerGateway) SetV__Type(v string) *AWS_EC2_CustomerGateway {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_CustomerGateway) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CustomerGatewayId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CustomerGatewayId
func (t *AWS_EC2_CustomerGateway) GetAtt__CustomerGatewayId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_CustomerGateway__AttributesMap.CustomerGatewayId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_CustomerGateway) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CustomerGatewayId returns a conventionally configured output for an attribute of this resource.
// Attribute: CustomerGatewayId
func (t *AWS_EC2_CustomerGateway) GetConventionalOutputAtt__CustomerGatewayId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCustomerGatewayId", t.GetAtt__CustomerGatewayId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_CustomerGateway) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_CustomerGateway

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_CustomerGateway) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
