// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_Instance)(nil)
	_ cfz.Resource                   = (*AWS_EC2_Instance)(nil)
)

const (
	// AWS_EC2_Instance__Type is the CloudFormation type for AWS::EC2::Instance.
	AWS_EC2_Instance__Type = "AWS::EC2::Instance"
)

var (
	// AWS_EC2_Instance__AttributesMap reports all the CloudFormation attributes for AWS::EC2::Instance.
	AWS_EC2_Instance__AttributesMap = struct {
		AvailabilityZone string
		InstanceId       string
		PrivateDnsName   string
		PrivateIp        string
		PublicDnsName    string
		PublicIp         string
		State            string
		State_Code       string
		State_Name       string
		VpcId            string
	}{
		AvailabilityZone: "AvailabilityZone",
		InstanceId:       "InstanceId",
		PrivateDnsName:   "PrivateDnsName",
		PrivateIp:        "PrivateIp",
		PublicDnsName:    "PublicDnsName",
		PublicIp:         "PublicIp",
		State:            "State",
		State_Code:       "State.Code",
		State_Name:       "State.Name",
		VpcId:            "VpcId",
	}

	// AWS_EC2_Instance__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::Instance.
	AWS_EC2_Instance__AttributesSlice = []string{
		AWS_EC2_Instance__AttributesMap.AvailabilityZone,
		AWS_EC2_Instance__AttributesMap.InstanceId,
		AWS_EC2_Instance__AttributesMap.PrivateDnsName,
		AWS_EC2_Instance__AttributesMap.PrivateIp,
		AWS_EC2_Instance__AttributesMap.PublicDnsName,
		AWS_EC2_Instance__AttributesMap.PublicIp,
		AWS_EC2_Instance__AttributesMap.State,
		AWS_EC2_Instance__AttributesMap.State_Code,
		AWS_EC2_Instance__AttributesMap.State_Name,
		AWS_EC2_Instance__AttributesMap.VpcId,
	}
)

var (
	// AWS_EC2_Instance__PropertiesMap reports all the CloudFormation properties for AWS::EC2::Instance.
	AWS_EC2_Instance__PropertiesMap = struct {
		AdditionalInfo                    string
		Affinity                          string
		AvailabilityZone                  string
		BlockDeviceMappings               string
		CpuOptions                        string
		CreditSpecification               string
		DisableApiTermination             string
		EbsOptimized                      string
		ElasticGpuSpecifications          string
		ElasticInferenceAccelerators      string
		EnclaveOptions                    string
		HibernationOptions                string
		HostId                            string
		HostResourceGroupArn              string
		IamInstanceProfile                string
		ImageId                           string
		InstanceInitiatedShutdownBehavior string
		InstanceType                      string
		Ipv6AddressCount                  string
		Ipv6Addresses                     string
		KernelId                          string
		KeyName                           string
		LaunchTemplate                    string
		LicenseSpecifications             string
		Monitoring                        string
		NetworkInterfaces                 string
		PlacementGroupName                string
		PrivateDnsNameOptions             string
		PrivateIpAddress                  string
		PropagateTagsToVolumeOnCreation   string
		RamdiskId                         string
		SecurityGroupIds                  string
		SecurityGroups                    string
		SourceDestCheck                   string
		SsmAssociations                   string
		SubnetId                          string
		Tags                              string
		Tenancy                           string
		UserData                          string
		Volumes                           string
	}{
		AdditionalInfo:                    "AdditionalInfo",
		Affinity:                          "Affinity",
		AvailabilityZone:                  "AvailabilityZone",
		BlockDeviceMappings:               "BlockDeviceMappings",
		CpuOptions:                        "CpuOptions",
		CreditSpecification:               "CreditSpecification",
		DisableApiTermination:             "DisableApiTermination",
		EbsOptimized:                      "EbsOptimized",
		ElasticGpuSpecifications:          "ElasticGpuSpecifications",
		ElasticInferenceAccelerators:      "ElasticInferenceAccelerators",
		EnclaveOptions:                    "EnclaveOptions",
		HibernationOptions:                "HibernationOptions",
		HostId:                            "HostId",
		HostResourceGroupArn:              "HostResourceGroupArn",
		IamInstanceProfile:                "IamInstanceProfile",
		ImageId:                           "ImageId",
		InstanceInitiatedShutdownBehavior: "InstanceInitiatedShutdownBehavior",
		InstanceType:                      "InstanceType",
		Ipv6AddressCount:                  "Ipv6AddressCount",
		Ipv6Addresses:                     "Ipv6Addresses",
		KernelId:                          "KernelId",
		KeyName:                           "KeyName",
		LaunchTemplate:                    "LaunchTemplate",
		LicenseSpecifications:             "LicenseSpecifications",
		Monitoring:                        "Monitoring",
		NetworkInterfaces:                 "NetworkInterfaces",
		PlacementGroupName:                "PlacementGroupName",
		PrivateDnsNameOptions:             "PrivateDnsNameOptions",
		PrivateIpAddress:                  "PrivateIpAddress",
		PropagateTagsToVolumeOnCreation:   "PropagateTagsToVolumeOnCreation",
		RamdiskId:                         "RamdiskId",
		SecurityGroupIds:                  "SecurityGroupIds",
		SecurityGroups:                    "SecurityGroups",
		SourceDestCheck:                   "SourceDestCheck",
		SsmAssociations:                   "SsmAssociations",
		SubnetId:                          "SubnetId",
		Tags:                              "Tags",
		Tenancy:                           "Tenancy",
		UserData:                          "UserData",
		Volumes:                           "Volumes",
	}

	// AWS_EC2_Instance__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::Instance.
	AWS_EC2_Instance__PropertiesSlice = []string{
		AWS_EC2_Instance__PropertiesMap.AdditionalInfo,
		AWS_EC2_Instance__PropertiesMap.Affinity,
		AWS_EC2_Instance__PropertiesMap.AvailabilityZone,
		AWS_EC2_Instance__PropertiesMap.BlockDeviceMappings,
		AWS_EC2_Instance__PropertiesMap.CpuOptions,
		AWS_EC2_Instance__PropertiesMap.CreditSpecification,
		AWS_EC2_Instance__PropertiesMap.DisableApiTermination,
		AWS_EC2_Instance__PropertiesMap.EbsOptimized,
		AWS_EC2_Instance__PropertiesMap.ElasticGpuSpecifications,
		AWS_EC2_Instance__PropertiesMap.ElasticInferenceAccelerators,
		AWS_EC2_Instance__PropertiesMap.EnclaveOptions,
		AWS_EC2_Instance__PropertiesMap.HibernationOptions,
		AWS_EC2_Instance__PropertiesMap.HostId,
		AWS_EC2_Instance__PropertiesMap.HostResourceGroupArn,
		AWS_EC2_Instance__PropertiesMap.IamInstanceProfile,
		AWS_EC2_Instance__PropertiesMap.ImageId,
		AWS_EC2_Instance__PropertiesMap.InstanceInitiatedShutdownBehavior,
		AWS_EC2_Instance__PropertiesMap.InstanceType,
		AWS_EC2_Instance__PropertiesMap.Ipv6AddressCount,
		AWS_EC2_Instance__PropertiesMap.Ipv6Addresses,
		AWS_EC2_Instance__PropertiesMap.KernelId,
		AWS_EC2_Instance__PropertiesMap.KeyName,
		AWS_EC2_Instance__PropertiesMap.LaunchTemplate,
		AWS_EC2_Instance__PropertiesMap.LicenseSpecifications,
		AWS_EC2_Instance__PropertiesMap.Monitoring,
		AWS_EC2_Instance__PropertiesMap.NetworkInterfaces,
		AWS_EC2_Instance__PropertiesMap.PlacementGroupName,
		AWS_EC2_Instance__PropertiesMap.PrivateDnsNameOptions,
		AWS_EC2_Instance__PropertiesMap.PrivateIpAddress,
		AWS_EC2_Instance__PropertiesMap.PropagateTagsToVolumeOnCreation,
		AWS_EC2_Instance__PropertiesMap.RamdiskId,
		AWS_EC2_Instance__PropertiesMap.SecurityGroupIds,
		AWS_EC2_Instance__PropertiesMap.SecurityGroups,
		AWS_EC2_Instance__PropertiesMap.SourceDestCheck,
		AWS_EC2_Instance__PropertiesMap.SsmAssociations,
		AWS_EC2_Instance__PropertiesMap.SubnetId,
		AWS_EC2_Instance__PropertiesMap.Tags,
		AWS_EC2_Instance__PropertiesMap.Tenancy,
		AWS_EC2_Instance__PropertiesMap.UserData,
		AWS_EC2_Instance__PropertiesMap.Volumes,
	}
)

// AWS_EC2_Instance is a binding for AWS::EC2::Instance.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html
type AWS_EC2_Instance struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AdditionalInfo is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-additionalinfo
	AdditionalInfo cfz.Expression[string] `json:"AdditionalInfo,omitempty"`

	// Affinity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-affinity
	Affinity cfz.Expression[string] `json:"Affinity,omitempty"`

	// AvailabilityZone is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-availabilityzone
	AvailabilityZone cfz.Expression[string] `json:"AvailabilityZone,omitempty"`

	// BlockDeviceMappings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-blockdevicemappings
	BlockDeviceMappings cfz.ExpressionSlice[AWS_EC2_Instance_BlockDeviceMapping] `json:"BlockDeviceMappings,omitempty"`

	// CpuOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-cpuoptions
	CpuOptions cfz.Expression[AWS_EC2_Instance_CpuOptions] `json:"CpuOptions,omitempty"`

	// CreditSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-creditspecification
	CreditSpecification cfz.Expression[AWS_EC2_Instance_CreditSpecification] `json:"CreditSpecification,omitempty"`

	// DisableApiTermination is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-disableapitermination
	DisableApiTermination cfz.Expression[bool] `json:"DisableApiTermination,omitempty"`

	// EbsOptimized is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ebsoptimized
	EbsOptimized cfz.Expression[bool] `json:"EbsOptimized,omitempty"`

	// ElasticGpuSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-elasticgpuspecifications
	ElasticGpuSpecifications cfz.ExpressionSlice[AWS_EC2_Instance_ElasticGpuSpecification] `json:"ElasticGpuSpecifications,omitempty"`

	// ElasticInferenceAccelerators is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-elasticinferenceaccelerators
	ElasticInferenceAccelerators cfz.ExpressionSlice[AWS_EC2_Instance_ElasticInferenceAccelerator] `json:"ElasticInferenceAccelerators,omitempty"`

	// EnclaveOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-enclaveoptions
	EnclaveOptions cfz.Expression[AWS_EC2_Instance_EnclaveOptions] `json:"EnclaveOptions,omitempty"`

	// HibernationOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-hibernationoptions
	HibernationOptions cfz.Expression[AWS_EC2_Instance_HibernationOptions] `json:"HibernationOptions,omitempty"`

	// HostId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-hostid
	HostId cfz.Expression[string] `json:"HostId,omitempty"`

	// HostResourceGroupArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-hostresourcegrouparn
	HostResourceGroupArn cfz.Expression[string] `json:"HostResourceGroupArn,omitempty"`

	// IamInstanceProfile is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-iaminstanceprofile
	IamInstanceProfile cfz.Expression[string] `json:"IamInstanceProfile,omitempty"`

	// ImageId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-imageid
	ImageId cfz.Expression[string] `json:"ImageId,omitempty"`

	// InstanceInitiatedShutdownBehavior is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-instanceinitiatedshutdownbehavior
	InstanceInitiatedShutdownBehavior cfz.Expression[string] `json:"InstanceInitiatedShutdownBehavior,omitempty"`

	// InstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-instancetype
	InstanceType cfz.Expression[string] `json:"InstanceType,omitempty"`

	// Ipv6AddressCount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ipv6addresscount
	Ipv6AddressCount cfz.Expression[int32] `json:"Ipv6AddressCount,omitempty"`

	// Ipv6Addresses is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ipv6addresses
	Ipv6Addresses cfz.ExpressionSlice[AWS_EC2_Instance_InstanceIpv6Address] `json:"Ipv6Addresses,omitempty"`

	// KernelId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-kernelid
	KernelId cfz.Expression[string] `json:"KernelId,omitempty"`

	// KeyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-keyname
	KeyName cfz.Expression[string] `json:"KeyName,omitempty"`

	// LaunchTemplate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-launchtemplate
	LaunchTemplate cfz.Expression[AWS_EC2_Instance_LaunchTemplateSpecification] `json:"LaunchTemplate,omitempty"`

	// LicenseSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-licensespecifications
	LicenseSpecifications cfz.ExpressionSlice[AWS_EC2_Instance_LicenseSpecification] `json:"LicenseSpecifications,omitempty"`

	// Monitoring is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-monitoring
	Monitoring cfz.Expression[bool] `json:"Monitoring,omitempty"`

	// NetworkInterfaces is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-networkinterfaces
	NetworkInterfaces cfz.ExpressionSlice[AWS_EC2_Instance_NetworkInterface] `json:"NetworkInterfaces,omitempty"`

	// PlacementGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-placementgroupname
	PlacementGroupName cfz.Expression[string] `json:"PlacementGroupName,omitempty"`

	// PrivateDnsNameOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-privatednsnameoptions
	PrivateDnsNameOptions cfz.Expression[AWS_EC2_Instance_PrivateDnsNameOptions] `json:"PrivateDnsNameOptions,omitempty"`

	// PrivateIpAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-privateipaddress
	PrivateIpAddress cfz.Expression[string] `json:"PrivateIpAddress,omitempty"`

	// PropagateTagsToVolumeOnCreation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-propagatetagstovolumeoncreation
	PropagateTagsToVolumeOnCreation cfz.Expression[bool] `json:"PropagateTagsToVolumeOnCreation,omitempty"`

	// RamdiskId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ramdiskid
	RamdiskId cfz.Expression[string] `json:"RamdiskId,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// SecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-securitygroups
	SecurityGroups cfz.ExpressionSlice[string] `json:"SecurityGroups,omitempty"`

	// SourceDestCheck is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-sourcedestcheck
	SourceDestCheck cfz.Expression[bool] `json:"SourceDestCheck,omitempty"`

	// SsmAssociations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-ssmassociations
	SsmAssociations cfz.ExpressionSlice[AWS_EC2_Instance_SsmAssociation] `json:"SsmAssociations,omitempty"`

	// SubnetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-subnetid
	SubnetId cfz.Expression[string] `json:"SubnetId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Tenancy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-tenancy
	Tenancy cfz.Expression[string] `json:"Tenancy,omitempty"`

	// UserData is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-userdata
	UserData cfz.Expression[string] `json:"UserData,omitempty"`

	// Volumes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-instance.html#cfn-ec2-instance-volumes
	Volumes cfz.ExpressionSlice[AWS_EC2_Instance_Volume] `json:"Volumes,omitempty"`
}

// New__AWS_EC2_Instance initializes a new *AWS_EC2_Instance.
func New__AWS_EC2_Instance(logicalName string) *AWS_EC2_Instance {
	return &AWS_EC2_Instance{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_Instance) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_Instance) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_Instance) GetType() string {
	return AWS_EC2_Instance__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_Instance) Set__LogicalName(v string) *AWS_EC2_Instance {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_Instance) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_Instance {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_Instance) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_Instance {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_Instance) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_Instance {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_Instance) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_Instance {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_Instance) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_Instance {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_Instance) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_Instance {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AdditionalInfo updates property "AdditionalInfo".
func (t *AWS_EC2_Instance) Set__AdditionalInfo(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.AdditionalInfo = v
	return t
}

// SetV__AdditionalInfo updates property "AdditionalInfo".
func (t *AWS_EC2_Instance) SetV__AdditionalInfo(v string) *AWS_EC2_Instance {
	t.AdditionalInfo = cfz.V(v)
	return t
}

// Set__Affinity updates property "Affinity".
func (t *AWS_EC2_Instance) Set__Affinity(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.Affinity = v
	return t
}

// SetV__Affinity updates property "Affinity".
func (t *AWS_EC2_Instance) SetV__Affinity(v string) *AWS_EC2_Instance {
	t.Affinity = cfz.V(v)
	return t
}

// Set__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_EC2_Instance) Set__AvailabilityZone(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.AvailabilityZone = v
	return t
}

// SetV__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_EC2_Instance) SetV__AvailabilityZone(v string) *AWS_EC2_Instance {
	t.AvailabilityZone = cfz.V(v)
	return t
}

// Set__BlockDeviceMappings updates property "BlockDeviceMappings".
func (t *AWS_EC2_Instance) Set__BlockDeviceMappings(v cfz.ExpressionSlice[AWS_EC2_Instance_BlockDeviceMapping]) *AWS_EC2_Instance {
	t.BlockDeviceMappings = v
	return t
}

// SetS__BlockDeviceMappings updates property "BlockDeviceMappings".
func (t *AWS_EC2_Instance) SetS__BlockDeviceMappings(v ...cfz.Expression[AWS_EC2_Instance_BlockDeviceMapping]) *AWS_EC2_Instance {
	t.BlockDeviceMappings = cfz.S(v...)
	return t
}

// SetSV__BlockDeviceMappings updates property "BlockDeviceMappings".
func (t *AWS_EC2_Instance) SetSV__BlockDeviceMappings(v ...AWS_EC2_Instance_BlockDeviceMapping) *AWS_EC2_Instance {
	t.BlockDeviceMappings = cfz.SV(v...)
	return t
}

// Set__CpuOptions updates property "CpuOptions".
func (t *AWS_EC2_Instance) Set__CpuOptions(v cfz.Expression[AWS_EC2_Instance_CpuOptions]) *AWS_EC2_Instance {
	t.CpuOptions = v
	return t
}

// SetV__CpuOptions updates property "CpuOptions".
func (t *AWS_EC2_Instance) SetV__CpuOptions(v AWS_EC2_Instance_CpuOptions) *AWS_EC2_Instance {
	t.CpuOptions = cfz.V(v)
	return t
}

// Set__CreditSpecification updates property "CreditSpecification".
func (t *AWS_EC2_Instance) Set__CreditSpecification(v cfz.Expression[AWS_EC2_Instance_CreditSpecification]) *AWS_EC2_Instance {
	t.CreditSpecification = v
	return t
}

// SetV__CreditSpecification updates property "CreditSpecification".
func (t *AWS_EC2_Instance) SetV__CreditSpecification(v AWS_EC2_Instance_CreditSpecification) *AWS_EC2_Instance {
	t.CreditSpecification = cfz.V(v)
	return t
}

// Set__DisableApiTermination updates property "DisableApiTermination".
func (t *AWS_EC2_Instance) Set__DisableApiTermination(v cfz.Expression[bool]) *AWS_EC2_Instance {
	t.DisableApiTermination = v
	return t
}

// SetV__DisableApiTermination updates property "DisableApiTermination".
func (t *AWS_EC2_Instance) SetV__DisableApiTermination(v bool) *AWS_EC2_Instance {
	t.DisableApiTermination = cfz.V(v)
	return t
}

// Set__EbsOptimized updates property "EbsOptimized".
func (t *AWS_EC2_Instance) Set__EbsOptimized(v cfz.Expression[bool]) *AWS_EC2_Instance {
	t.EbsOptimized = v
	return t
}

// SetV__EbsOptimized updates property "EbsOptimized".
func (t *AWS_EC2_Instance) SetV__EbsOptimized(v bool) *AWS_EC2_Instance {
	t.EbsOptimized = cfz.V(v)
	return t
}

// Set__ElasticGpuSpecifications updates property "ElasticGpuSpecifications".
func (t *AWS_EC2_Instance) Set__ElasticGpuSpecifications(v cfz.ExpressionSlice[AWS_EC2_Instance_ElasticGpuSpecification]) *AWS_EC2_Instance {
	t.ElasticGpuSpecifications = v
	return t
}

// SetS__ElasticGpuSpecifications updates property "ElasticGpuSpecifications".
func (t *AWS_EC2_Instance) SetS__ElasticGpuSpecifications(v ...cfz.Expression[AWS_EC2_Instance_ElasticGpuSpecification]) *AWS_EC2_Instance {
	t.ElasticGpuSpecifications = cfz.S(v...)
	return t
}

// SetSV__ElasticGpuSpecifications updates property "ElasticGpuSpecifications".
func (t *AWS_EC2_Instance) SetSV__ElasticGpuSpecifications(v ...AWS_EC2_Instance_ElasticGpuSpecification) *AWS_EC2_Instance {
	t.ElasticGpuSpecifications = cfz.SV(v...)
	return t
}

// Set__ElasticInferenceAccelerators updates property "ElasticInferenceAccelerators".
func (t *AWS_EC2_Instance) Set__ElasticInferenceAccelerators(v cfz.ExpressionSlice[AWS_EC2_Instance_ElasticInferenceAccelerator]) *AWS_EC2_Instance {
	t.ElasticInferenceAccelerators = v
	return t
}

// SetS__ElasticInferenceAccelerators updates property "ElasticInferenceAccelerators".
func (t *AWS_EC2_Instance) SetS__ElasticInferenceAccelerators(v ...cfz.Expression[AWS_EC2_Instance_ElasticInferenceAccelerator]) *AWS_EC2_Instance {
	t.ElasticInferenceAccelerators = cfz.S(v...)
	return t
}

// SetSV__ElasticInferenceAccelerators updates property "ElasticInferenceAccelerators".
func (t *AWS_EC2_Instance) SetSV__ElasticInferenceAccelerators(v ...AWS_EC2_Instance_ElasticInferenceAccelerator) *AWS_EC2_Instance {
	t.ElasticInferenceAccelerators = cfz.SV(v...)
	return t
}

// Set__EnclaveOptions updates property "EnclaveOptions".
func (t *AWS_EC2_Instance) Set__EnclaveOptions(v cfz.Expression[AWS_EC2_Instance_EnclaveOptions]) *AWS_EC2_Instance {
	t.EnclaveOptions = v
	return t
}

// SetV__EnclaveOptions updates property "EnclaveOptions".
func (t *AWS_EC2_Instance) SetV__EnclaveOptions(v AWS_EC2_Instance_EnclaveOptions) *AWS_EC2_Instance {
	t.EnclaveOptions = cfz.V(v)
	return t
}

// Set__HibernationOptions updates property "HibernationOptions".
func (t *AWS_EC2_Instance) Set__HibernationOptions(v cfz.Expression[AWS_EC2_Instance_HibernationOptions]) *AWS_EC2_Instance {
	t.HibernationOptions = v
	return t
}

// SetV__HibernationOptions updates property "HibernationOptions".
func (t *AWS_EC2_Instance) SetV__HibernationOptions(v AWS_EC2_Instance_HibernationOptions) *AWS_EC2_Instance {
	t.HibernationOptions = cfz.V(v)
	return t
}

// Set__HostId updates property "HostId".
func (t *AWS_EC2_Instance) Set__HostId(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.HostId = v
	return t
}

// SetV__HostId updates property "HostId".
func (t *AWS_EC2_Instance) SetV__HostId(v string) *AWS_EC2_Instance {
	t.HostId = cfz.V(v)
	return t
}

// Set__HostResourceGroupArn updates property "HostResourceGroupArn".
func (t *AWS_EC2_Instance) Set__HostResourceGroupArn(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.HostResourceGroupArn = v
	return t
}

// SetV__HostResourceGroupArn updates property "HostResourceGroupArn".
func (t *AWS_EC2_Instance) SetV__HostResourceGroupArn(v string) *AWS_EC2_Instance {
	t.HostResourceGroupArn = cfz.V(v)
	return t
}

// Set__IamInstanceProfile updates property "IamInstanceProfile".
func (t *AWS_EC2_Instance) Set__IamInstanceProfile(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.IamInstanceProfile = v
	return t
}

// SetV__IamInstanceProfile updates property "IamInstanceProfile".
func (t *AWS_EC2_Instance) SetV__IamInstanceProfile(v string) *AWS_EC2_Instance {
	t.IamInstanceProfile = cfz.V(v)
	return t
}

// Set__ImageId updates property "ImageId".
func (t *AWS_EC2_Instance) Set__ImageId(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.ImageId = v
	return t
}

// SetV__ImageId updates property "ImageId".
func (t *AWS_EC2_Instance) SetV__ImageId(v string) *AWS_EC2_Instance {
	t.ImageId = cfz.V(v)
	return t
}

// Set__InstanceInitiatedShutdownBehavior updates property "InstanceInitiatedShutdownBehavior".
func (t *AWS_EC2_Instance) Set__InstanceInitiatedShutdownBehavior(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.InstanceInitiatedShutdownBehavior = v
	return t
}

// SetV__InstanceInitiatedShutdownBehavior updates property "InstanceInitiatedShutdownBehavior".
func (t *AWS_EC2_Instance) SetV__InstanceInitiatedShutdownBehavior(v string) *AWS_EC2_Instance {
	t.InstanceInitiatedShutdownBehavior = cfz.V(v)
	return t
}

// Set__InstanceType updates property "InstanceType".
func (t *AWS_EC2_Instance) Set__InstanceType(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.InstanceType = v
	return t
}

// SetV__InstanceType updates property "InstanceType".
func (t *AWS_EC2_Instance) SetV__InstanceType(v string) *AWS_EC2_Instance {
	t.InstanceType = cfz.V(v)
	return t
}

// Set__Ipv6AddressCount updates property "Ipv6AddressCount".
func (t *AWS_EC2_Instance) Set__Ipv6AddressCount(v cfz.Expression[int32]) *AWS_EC2_Instance {
	t.Ipv6AddressCount = v
	return t
}

// SetV__Ipv6AddressCount updates property "Ipv6AddressCount".
func (t *AWS_EC2_Instance) SetV__Ipv6AddressCount(v int32) *AWS_EC2_Instance {
	t.Ipv6AddressCount = cfz.V(v)
	return t
}

// Set__Ipv6Addresses updates property "Ipv6Addresses".
func (t *AWS_EC2_Instance) Set__Ipv6Addresses(v cfz.ExpressionSlice[AWS_EC2_Instance_InstanceIpv6Address]) *AWS_EC2_Instance {
	t.Ipv6Addresses = v
	return t
}

// SetS__Ipv6Addresses updates property "Ipv6Addresses".
func (t *AWS_EC2_Instance) SetS__Ipv6Addresses(v ...cfz.Expression[AWS_EC2_Instance_InstanceIpv6Address]) *AWS_EC2_Instance {
	t.Ipv6Addresses = cfz.S(v...)
	return t
}

// SetSV__Ipv6Addresses updates property "Ipv6Addresses".
func (t *AWS_EC2_Instance) SetSV__Ipv6Addresses(v ...AWS_EC2_Instance_InstanceIpv6Address) *AWS_EC2_Instance {
	t.Ipv6Addresses = cfz.SV(v...)
	return t
}

// Set__KernelId updates property "KernelId".
func (t *AWS_EC2_Instance) Set__KernelId(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.KernelId = v
	return t
}

// SetV__KernelId updates property "KernelId".
func (t *AWS_EC2_Instance) SetV__KernelId(v string) *AWS_EC2_Instance {
	t.KernelId = cfz.V(v)
	return t
}

// Set__KeyName updates property "KeyName".
func (t *AWS_EC2_Instance) Set__KeyName(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.KeyName = v
	return t
}

// SetV__KeyName updates property "KeyName".
func (t *AWS_EC2_Instance) SetV__KeyName(v string) *AWS_EC2_Instance {
	t.KeyName = cfz.V(v)
	return t
}

// Set__LaunchTemplate updates property "LaunchTemplate".
func (t *AWS_EC2_Instance) Set__LaunchTemplate(v cfz.Expression[AWS_EC2_Instance_LaunchTemplateSpecification]) *AWS_EC2_Instance {
	t.LaunchTemplate = v
	return t
}

// SetV__LaunchTemplate updates property "LaunchTemplate".
func (t *AWS_EC2_Instance) SetV__LaunchTemplate(v AWS_EC2_Instance_LaunchTemplateSpecification) *AWS_EC2_Instance {
	t.LaunchTemplate = cfz.V(v)
	return t
}

// Set__LicenseSpecifications updates property "LicenseSpecifications".
func (t *AWS_EC2_Instance) Set__LicenseSpecifications(v cfz.ExpressionSlice[AWS_EC2_Instance_LicenseSpecification]) *AWS_EC2_Instance {
	t.LicenseSpecifications = v
	return t
}

// SetS__LicenseSpecifications updates property "LicenseSpecifications".
func (t *AWS_EC2_Instance) SetS__LicenseSpecifications(v ...cfz.Expression[AWS_EC2_Instance_LicenseSpecification]) *AWS_EC2_Instance {
	t.LicenseSpecifications = cfz.S(v...)
	return t
}

// SetSV__LicenseSpecifications updates property "LicenseSpecifications".
func (t *AWS_EC2_Instance) SetSV__LicenseSpecifications(v ...AWS_EC2_Instance_LicenseSpecification) *AWS_EC2_Instance {
	t.LicenseSpecifications = cfz.SV(v...)
	return t
}

// Set__Monitoring updates property "Monitoring".
func (t *AWS_EC2_Instance) Set__Monitoring(v cfz.Expression[bool]) *AWS_EC2_Instance {
	t.Monitoring = v
	return t
}

// SetV__Monitoring updates property "Monitoring".
func (t *AWS_EC2_Instance) SetV__Monitoring(v bool) *AWS_EC2_Instance {
	t.Monitoring = cfz.V(v)
	return t
}

// Set__NetworkInterfaces updates property "NetworkInterfaces".
func (t *AWS_EC2_Instance) Set__NetworkInterfaces(v cfz.ExpressionSlice[AWS_EC2_Instance_NetworkInterface]) *AWS_EC2_Instance {
	t.NetworkInterfaces = v
	return t
}

// SetS__NetworkInterfaces updates property "NetworkInterfaces".
func (t *AWS_EC2_Instance) SetS__NetworkInterfaces(v ...cfz.Expression[AWS_EC2_Instance_NetworkInterface]) *AWS_EC2_Instance {
	t.NetworkInterfaces = cfz.S(v...)
	return t
}

// SetSV__NetworkInterfaces updates property "NetworkInterfaces".
func (t *AWS_EC2_Instance) SetSV__NetworkInterfaces(v ...AWS_EC2_Instance_NetworkInterface) *AWS_EC2_Instance {
	t.NetworkInterfaces = cfz.SV(v...)
	return t
}

// Set__PlacementGroupName updates property "PlacementGroupName".
func (t *AWS_EC2_Instance) Set__PlacementGroupName(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.PlacementGroupName = v
	return t
}

// SetV__PlacementGroupName updates property "PlacementGroupName".
func (t *AWS_EC2_Instance) SetV__PlacementGroupName(v string) *AWS_EC2_Instance {
	t.PlacementGroupName = cfz.V(v)
	return t
}

// Set__PrivateDnsNameOptions updates property "PrivateDnsNameOptions".
func (t *AWS_EC2_Instance) Set__PrivateDnsNameOptions(v cfz.Expression[AWS_EC2_Instance_PrivateDnsNameOptions]) *AWS_EC2_Instance {
	t.PrivateDnsNameOptions = v
	return t
}

// SetV__PrivateDnsNameOptions updates property "PrivateDnsNameOptions".
func (t *AWS_EC2_Instance) SetV__PrivateDnsNameOptions(v AWS_EC2_Instance_PrivateDnsNameOptions) *AWS_EC2_Instance {
	t.PrivateDnsNameOptions = cfz.V(v)
	return t
}

// Set__PrivateIpAddress updates property "PrivateIpAddress".
func (t *AWS_EC2_Instance) Set__PrivateIpAddress(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.PrivateIpAddress = v
	return t
}

// SetV__PrivateIpAddress updates property "PrivateIpAddress".
func (t *AWS_EC2_Instance) SetV__PrivateIpAddress(v string) *AWS_EC2_Instance {
	t.PrivateIpAddress = cfz.V(v)
	return t
}

// Set__PropagateTagsToVolumeOnCreation updates property "PropagateTagsToVolumeOnCreation".
func (t *AWS_EC2_Instance) Set__PropagateTagsToVolumeOnCreation(v cfz.Expression[bool]) *AWS_EC2_Instance {
	t.PropagateTagsToVolumeOnCreation = v
	return t
}

// SetV__PropagateTagsToVolumeOnCreation updates property "PropagateTagsToVolumeOnCreation".
func (t *AWS_EC2_Instance) SetV__PropagateTagsToVolumeOnCreation(v bool) *AWS_EC2_Instance {
	t.PropagateTagsToVolumeOnCreation = cfz.V(v)
	return t
}

// Set__RamdiskId updates property "RamdiskId".
func (t *AWS_EC2_Instance) Set__RamdiskId(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.RamdiskId = v
	return t
}

// SetV__RamdiskId updates property "RamdiskId".
func (t *AWS_EC2_Instance) SetV__RamdiskId(v string) *AWS_EC2_Instance {
	t.RamdiskId = cfz.V(v)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_EC2_Instance) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_EC2_Instance {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_EC2_Instance) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_EC2_Instance {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_EC2_Instance) SetSV__SecurityGroupIds(v ...string) *AWS_EC2_Instance {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__SecurityGroups updates property "SecurityGroups".
func (t *AWS_EC2_Instance) Set__SecurityGroups(v cfz.ExpressionSlice[string]) *AWS_EC2_Instance {
	t.SecurityGroups = v
	return t
}

// SetS__SecurityGroups updates property "SecurityGroups".
func (t *AWS_EC2_Instance) SetS__SecurityGroups(v ...cfz.Expression[string]) *AWS_EC2_Instance {
	t.SecurityGroups = cfz.S(v...)
	return t
}

// SetSV__SecurityGroups updates property "SecurityGroups".
func (t *AWS_EC2_Instance) SetSV__SecurityGroups(v ...string) *AWS_EC2_Instance {
	t.SecurityGroups = cfz.SV(v...)
	return t
}

// Set__SourceDestCheck updates property "SourceDestCheck".
func (t *AWS_EC2_Instance) Set__SourceDestCheck(v cfz.Expression[bool]) *AWS_EC2_Instance {
	t.SourceDestCheck = v
	return t
}

// SetV__SourceDestCheck updates property "SourceDestCheck".
func (t *AWS_EC2_Instance) SetV__SourceDestCheck(v bool) *AWS_EC2_Instance {
	t.SourceDestCheck = cfz.V(v)
	return t
}

// Set__SsmAssociations updates property "SsmAssociations".
func (t *AWS_EC2_Instance) Set__SsmAssociations(v cfz.ExpressionSlice[AWS_EC2_Instance_SsmAssociation]) *AWS_EC2_Instance {
	t.SsmAssociations = v
	return t
}

// SetS__SsmAssociations updates property "SsmAssociations".
func (t *AWS_EC2_Instance) SetS__SsmAssociations(v ...cfz.Expression[AWS_EC2_Instance_SsmAssociation]) *AWS_EC2_Instance {
	t.SsmAssociations = cfz.S(v...)
	return t
}

// SetSV__SsmAssociations updates property "SsmAssociations".
func (t *AWS_EC2_Instance) SetSV__SsmAssociations(v ...AWS_EC2_Instance_SsmAssociation) *AWS_EC2_Instance {
	t.SsmAssociations = cfz.SV(v...)
	return t
}

// Set__SubnetId updates property "SubnetId".
func (t *AWS_EC2_Instance) Set__SubnetId(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.SubnetId = v
	return t
}

// SetV__SubnetId updates property "SubnetId".
func (t *AWS_EC2_Instance) SetV__SubnetId(v string) *AWS_EC2_Instance {
	t.SubnetId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_Instance) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_Instance {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_Instance) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_Instance {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_Instance) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_Instance {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Tenancy updates property "Tenancy".
func (t *AWS_EC2_Instance) Set__Tenancy(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.Tenancy = v
	return t
}

// SetV__Tenancy updates property "Tenancy".
func (t *AWS_EC2_Instance) SetV__Tenancy(v string) *AWS_EC2_Instance {
	t.Tenancy = cfz.V(v)
	return t
}

// Set__UserData updates property "UserData".
func (t *AWS_EC2_Instance) Set__UserData(v cfz.Expression[string]) *AWS_EC2_Instance {
	t.UserData = v
	return t
}

// SetV__UserData updates property "UserData".
func (t *AWS_EC2_Instance) SetV__UserData(v string) *AWS_EC2_Instance {
	t.UserData = cfz.V(v)
	return t
}

// Set__Volumes updates property "Volumes".
func (t *AWS_EC2_Instance) Set__Volumes(v cfz.ExpressionSlice[AWS_EC2_Instance_Volume]) *AWS_EC2_Instance {
	t.Volumes = v
	return t
}

// SetS__Volumes updates property "Volumes".
func (t *AWS_EC2_Instance) SetS__Volumes(v ...cfz.Expression[AWS_EC2_Instance_Volume]) *AWS_EC2_Instance {
	t.Volumes = cfz.S(v...)
	return t
}

// SetSV__Volumes updates property "Volumes".
func (t *AWS_EC2_Instance) SetSV__Volumes(v ...AWS_EC2_Instance_Volume) *AWS_EC2_Instance {
	t.Volumes = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_Instance) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AvailabilityZone returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AvailabilityZone
func (t *AWS_EC2_Instance) GetAtt__AvailabilityZone() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.AvailabilityZone))
}

// GetAtt__InstanceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: InstanceId
func (t *AWS_EC2_Instance) GetAtt__InstanceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.InstanceId))
}

// GetAtt__PrivateDnsName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PrivateDnsName
func (t *AWS_EC2_Instance) GetAtt__PrivateDnsName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.PrivateDnsName))
}

// GetAtt__PrivateIp returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PrivateIp
func (t *AWS_EC2_Instance) GetAtt__PrivateIp() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.PrivateIp))
}

// GetAtt__PublicDnsName returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublicDnsName
func (t *AWS_EC2_Instance) GetAtt__PublicDnsName() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.PublicDnsName))
}

// GetAtt__PublicIp returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PublicIp
func (t *AWS_EC2_Instance) GetAtt__PublicIp() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.PublicIp))
}

// GetAtt__State returns a $cfz.Expression[AWS_EC2_Instance_State] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_EC2_Instance) GetAtt__State() cfz.Expression[AWS_EC2_Instance_State] {
	return cfz.GetAtt[AWS_EC2_Instance_State](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.State))
}

// GetAtt__State_Code returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State.Code
func (t *AWS_EC2_Instance) GetAtt__State_Code() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.State_Code))
}

// GetAtt__State_Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State.Name
func (t *AWS_EC2_Instance) GetAtt__State_Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.State_Name))
}

// GetAtt__VpcId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcId
func (t *AWS_EC2_Instance) GetAtt__VpcId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Instance__AttributesMap.VpcId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_Instance) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AvailabilityZone returns a conventionally configured output for an attribute of this resource.
// Attribute: AvailabilityZone
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__AvailabilityZone(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAvailabilityZone", t.GetAtt__AvailabilityZone())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__InstanceId returns a conventionally configured output for an attribute of this resource.
// Attribute: InstanceId
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__InstanceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttInstanceId", t.GetAtt__InstanceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PrivateDnsName returns a conventionally configured output for an attribute of this resource.
// Attribute: PrivateDnsName
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__PrivateDnsName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPrivateDnsName", t.GetAtt__PrivateDnsName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PrivateIp returns a conventionally configured output for an attribute of this resource.
// Attribute: PrivateIp
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__PrivateIp(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPrivateIp", t.GetAtt__PrivateIp())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublicDnsName returns a conventionally configured output for an attribute of this resource.
// Attribute: PublicDnsName
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__PublicDnsName(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublicDnsName", t.GetAtt__PublicDnsName())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PublicIp returns a conventionally configured output for an attribute of this resource.
// Attribute: PublicIp
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__PublicIp(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPublicIp", t.GetAtt__PublicIp())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State_Code returns a conventionally configured output for an attribute of this resource.
// Attribute: State.Code
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__State_Code(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStateCode", t.GetAtt__State_Code())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State_Name returns a conventionally configured output for an attribute of this resource.
// Attribute: State.Name
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__State_Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStateName", t.GetAtt__State_Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcId returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcId
func (t *AWS_EC2_Instance) GetConventionalOutputAtt__VpcId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcId", t.GetAtt__VpcId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_Instance) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_Instance

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_Instance) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
