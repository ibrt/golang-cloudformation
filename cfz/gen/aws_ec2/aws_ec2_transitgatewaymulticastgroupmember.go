// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_TransitGatewayMulticastGroupMember)(nil)
	_ cfz.Resource                   = (*AWS_EC2_TransitGatewayMulticastGroupMember)(nil)
)

const (
	// AWS_EC2_TransitGatewayMulticastGroupMember__Type is the CloudFormation type for AWS::EC2::TransitGatewayMulticastGroupMember.
	AWS_EC2_TransitGatewayMulticastGroupMember__Type = "AWS::EC2::TransitGatewayMulticastGroupMember"
)

var (
	// AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap reports all the CloudFormation attributes for AWS::EC2::TransitGatewayMulticastGroupMember.
	AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap = struct {
		GroupMember                string
		GroupSource                string
		MemberType                 string
		ResourceId                 string
		ResourceType               string
		SubnetId                   string
		TransitGatewayAttachmentId string
	}{
		GroupMember:                "GroupMember",
		GroupSource:                "GroupSource",
		MemberType:                 "MemberType",
		ResourceId:                 "ResourceId",
		ResourceType:               "ResourceType",
		SubnetId:                   "SubnetId",
		TransitGatewayAttachmentId: "TransitGatewayAttachmentId",
	}

	// AWS_EC2_TransitGatewayMulticastGroupMember__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::TransitGatewayMulticastGroupMember.
	AWS_EC2_TransitGatewayMulticastGroupMember__AttributesSlice = []string{
		AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.GroupMember,
		AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.GroupSource,
		AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.MemberType,
		AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.ResourceId,
		AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.ResourceType,
		AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.SubnetId,
		AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.TransitGatewayAttachmentId,
	}
)

var (
	// AWS_EC2_TransitGatewayMulticastGroupMember__PropertiesMap reports all the CloudFormation properties for AWS::EC2::TransitGatewayMulticastGroupMember.
	AWS_EC2_TransitGatewayMulticastGroupMember__PropertiesMap = struct {
		GroupIpAddress                  string
		NetworkInterfaceId              string
		TransitGatewayMulticastDomainId string
	}{
		GroupIpAddress:                  "GroupIpAddress",
		NetworkInterfaceId:              "NetworkInterfaceId",
		TransitGatewayMulticastDomainId: "TransitGatewayMulticastDomainId",
	}

	// AWS_EC2_TransitGatewayMulticastGroupMember__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::TransitGatewayMulticastGroupMember.
	AWS_EC2_TransitGatewayMulticastGroupMember__PropertiesSlice = []string{
		AWS_EC2_TransitGatewayMulticastGroupMember__PropertiesMap.GroupIpAddress,
		AWS_EC2_TransitGatewayMulticastGroupMember__PropertiesMap.NetworkInterfaceId,
		AWS_EC2_TransitGatewayMulticastGroupMember__PropertiesMap.TransitGatewayMulticastDomainId,
	}
)

// AWS_EC2_TransitGatewayMulticastGroupMember is a binding for AWS::EC2::TransitGatewayMulticastGroupMember.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html
type AWS_EC2_TransitGatewayMulticastGroupMember struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// GroupIpAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-groupipaddress
	GroupIpAddress cfz.Expression[string] `json:"GroupIpAddress,omitempty"`

	// NetworkInterfaceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-networkinterfaceid
	NetworkInterfaceId cfz.Expression[string] `json:"NetworkInterfaceId,omitempty"`

	// TransitGatewayMulticastDomainId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastgroupmember.html#cfn-ec2-transitgatewaymulticastgroupmember-transitgatewaymulticastdomainid
	TransitGatewayMulticastDomainId cfz.Expression[string] `json:"TransitGatewayMulticastDomainId,omitempty"`
}

// New__AWS_EC2_TransitGatewayMulticastGroupMember initializes a new *AWS_EC2_TransitGatewayMulticastGroupMember.
func New__AWS_EC2_TransitGatewayMulticastGroupMember(logicalName string) *AWS_EC2_TransitGatewayMulticastGroupMember {
	return &AWS_EC2_TransitGatewayMulticastGroupMember{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_TransitGatewayMulticastGroupMember) GetType() string {
	return AWS_EC2_TransitGatewayMulticastGroupMember__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Set__LogicalName(v string) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__GroupIpAddress updates property "GroupIpAddress".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Set__GroupIpAddress(v cfz.Expression[string]) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.GroupIpAddress = v
	return t
}

// SetV__GroupIpAddress updates property "GroupIpAddress".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) SetV__GroupIpAddress(v string) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.GroupIpAddress = cfz.V(v)
	return t
}

// Set__NetworkInterfaceId updates property "NetworkInterfaceId".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Set__NetworkInterfaceId(v cfz.Expression[string]) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.NetworkInterfaceId = v
	return t
}

// SetV__NetworkInterfaceId updates property "NetworkInterfaceId".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) SetV__NetworkInterfaceId(v string) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.NetworkInterfaceId = cfz.V(v)
	return t
}

// Set__TransitGatewayMulticastDomainId updates property "TransitGatewayMulticastDomainId".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Set__TransitGatewayMulticastDomainId(v cfz.Expression[string]) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.TransitGatewayMulticastDomainId = v
	return t
}

// SetV__TransitGatewayMulticastDomainId updates property "TransitGatewayMulticastDomainId".
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) SetV__TransitGatewayMulticastDomainId(v string) *AWS_EC2_TransitGatewayMulticastGroupMember {
	t.TransitGatewayMulticastDomainId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__GroupMember returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: GroupMember
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetAtt__GroupMember() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.GroupMember))
}

// GetAtt__GroupSource returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: GroupSource
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetAtt__GroupSource() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.GroupSource))
}

// GetAtt__MemberType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MemberType
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetAtt__MemberType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.MemberType))
}

// GetAtt__ResourceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceId
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetAtt__ResourceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.ResourceId))
}

// GetAtt__ResourceType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceType
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetAtt__ResourceType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.ResourceType))
}

// GetAtt__SubnetId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SubnetId
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetAtt__SubnetId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.SubnetId))
}

// GetAtt__TransitGatewayAttachmentId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: TransitGatewayAttachmentId
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetAtt__TransitGatewayAttachmentId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastGroupMember__AttributesMap.TransitGatewayAttachmentId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__GroupMember returns a conventionally configured output for an attribute of this resource.
// Attribute: GroupMember
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetConventionalOutputAtt__GroupMember(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGroupMember", t.GetAtt__GroupMember())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__GroupSource returns a conventionally configured output for an attribute of this resource.
// Attribute: GroupSource
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetConventionalOutputAtt__GroupSource(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGroupSource", t.GetAtt__GroupSource())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MemberType returns a conventionally configured output for an attribute of this resource.
// Attribute: MemberType
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetConventionalOutputAtt__MemberType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMemberType", t.GetAtt__MemberType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceId returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceId
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetConventionalOutputAtt__ResourceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceId", t.GetAtt__ResourceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceType returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceType
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetConventionalOutputAtt__ResourceType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceType", t.GetAtt__ResourceType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SubnetId returns a conventionally configured output for an attribute of this resource.
// Attribute: SubnetId
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetConventionalOutputAtt__SubnetId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSubnetId", t.GetAtt__SubnetId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__TransitGatewayAttachmentId returns a conventionally configured output for an attribute of this resource.
// Attribute: TransitGatewayAttachmentId
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) GetConventionalOutputAtt__TransitGatewayAttachmentId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttTransitGatewayAttachmentId", t.GetAtt__TransitGatewayAttachmentId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_TransitGatewayMulticastGroupMember) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_TransitGatewayMulticastGroupMember

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_TransitGatewayMulticastGroupMember) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
