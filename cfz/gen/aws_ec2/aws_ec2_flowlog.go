// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_FlowLog)(nil)
	_ cfz.Resource                   = (*AWS_EC2_FlowLog)(nil)
)

const (
	// AWS_EC2_FlowLog__Type is the CloudFormation type for AWS::EC2::FlowLog.
	AWS_EC2_FlowLog__Type = "AWS::EC2::FlowLog"
)

var (
	// AWS_EC2_FlowLog__AttributesMap reports all the CloudFormation attributes for AWS::EC2::FlowLog.
	AWS_EC2_FlowLog__AttributesMap = struct {
		Id string
	}{
		Id: "Id",
	}

	// AWS_EC2_FlowLog__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::FlowLog.
	AWS_EC2_FlowLog__AttributesSlice = []string{
		AWS_EC2_FlowLog__AttributesMap.Id,
	}
)

var (
	// AWS_EC2_FlowLog__PropertiesMap reports all the CloudFormation properties for AWS::EC2::FlowLog.
	AWS_EC2_FlowLog__PropertiesMap = struct {
		DeliverCrossAccountRole  string
		DeliverLogsPermissionArn string
		DestinationOptions       string
		LogDestination           string
		LogDestinationType       string
		LogFormat                string
		LogGroupName             string
		MaxAggregationInterval   string
		ResourceId               string
		ResourceType             string
		Tags                     string
		TrafficType              string
	}{
		DeliverCrossAccountRole:  "DeliverCrossAccountRole",
		DeliverLogsPermissionArn: "DeliverLogsPermissionArn",
		DestinationOptions:       "DestinationOptions",
		LogDestination:           "LogDestination",
		LogDestinationType:       "LogDestinationType",
		LogFormat:                "LogFormat",
		LogGroupName:             "LogGroupName",
		MaxAggregationInterval:   "MaxAggregationInterval",
		ResourceId:               "ResourceId",
		ResourceType:             "ResourceType",
		Tags:                     "Tags",
		TrafficType:              "TrafficType",
	}

	// AWS_EC2_FlowLog__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::FlowLog.
	AWS_EC2_FlowLog__PropertiesSlice = []string{
		AWS_EC2_FlowLog__PropertiesMap.DeliverCrossAccountRole,
		AWS_EC2_FlowLog__PropertiesMap.DeliverLogsPermissionArn,
		AWS_EC2_FlowLog__PropertiesMap.DestinationOptions,
		AWS_EC2_FlowLog__PropertiesMap.LogDestination,
		AWS_EC2_FlowLog__PropertiesMap.LogDestinationType,
		AWS_EC2_FlowLog__PropertiesMap.LogFormat,
		AWS_EC2_FlowLog__PropertiesMap.LogGroupName,
		AWS_EC2_FlowLog__PropertiesMap.MaxAggregationInterval,
		AWS_EC2_FlowLog__PropertiesMap.ResourceId,
		AWS_EC2_FlowLog__PropertiesMap.ResourceType,
		AWS_EC2_FlowLog__PropertiesMap.Tags,
		AWS_EC2_FlowLog__PropertiesMap.TrafficType,
	}
)

// AWS_EC2_FlowLog is a binding for AWS::EC2::FlowLog.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html
type AWS_EC2_FlowLog struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DeliverCrossAccountRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-delivercrossaccountrole
	DeliverCrossAccountRole cfz.Expression[string] `json:"DeliverCrossAccountRole,omitempty"`

	// DeliverLogsPermissionArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-deliverlogspermissionarn
	DeliverLogsPermissionArn cfz.Expression[string] `json:"DeliverLogsPermissionArn,omitempty"`

	// DestinationOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-destinationoptions
	DestinationOptions cfz.Expression[AWS_EC2_FlowLog_DestinationOptions] `json:"DestinationOptions,omitempty"`

	// LogDestination is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestination
	LogDestination cfz.Expression[string] `json:"LogDestination,omitempty"`

	// LogDestinationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logdestinationtype
	LogDestinationType cfz.Expression[string] `json:"LogDestinationType,omitempty"`

	// LogFormat is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-logformat
	LogFormat cfz.Expression[string] `json:"LogFormat,omitempty"`

	// LogGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-loggroupname
	LogGroupName cfz.Expression[string] `json:"LogGroupName,omitempty"`

	// MaxAggregationInterval is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-maxaggregationinterval
	MaxAggregationInterval cfz.Expression[int32] `json:"MaxAggregationInterval,omitempty"`

	// ResourceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourceid
	ResourceId cfz.Expression[string] `json:"ResourceId,omitempty"`

	// ResourceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-resourcetype
	ResourceType cfz.Expression[string] `json:"ResourceType,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TrafficType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-flowlog.html#cfn-ec2-flowlog-traffictype
	TrafficType cfz.Expression[string] `json:"TrafficType,omitempty"`
}

// New__AWS_EC2_FlowLog initializes a new *AWS_EC2_FlowLog.
func New__AWS_EC2_FlowLog(logicalName string) *AWS_EC2_FlowLog {
	return &AWS_EC2_FlowLog{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_FlowLog) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_FlowLog) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_FlowLog) GetType() string {
	return AWS_EC2_FlowLog__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_FlowLog) Set__LogicalName(v string) *AWS_EC2_FlowLog {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_FlowLog) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_FlowLog {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_FlowLog) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_FlowLog {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_FlowLog) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_FlowLog {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_FlowLog) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_FlowLog {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_FlowLog) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_FlowLog {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_FlowLog) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_FlowLog {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DeliverCrossAccountRole updates property "DeliverCrossAccountRole".
func (t *AWS_EC2_FlowLog) Set__DeliverCrossAccountRole(v cfz.Expression[string]) *AWS_EC2_FlowLog {
	t.DeliverCrossAccountRole = v
	return t
}

// SetV__DeliverCrossAccountRole updates property "DeliverCrossAccountRole".
func (t *AWS_EC2_FlowLog) SetV__DeliverCrossAccountRole(v string) *AWS_EC2_FlowLog {
	t.DeliverCrossAccountRole = cfz.V(v)
	return t
}

// Set__DeliverLogsPermissionArn updates property "DeliverLogsPermissionArn".
func (t *AWS_EC2_FlowLog) Set__DeliverLogsPermissionArn(v cfz.Expression[string]) *AWS_EC2_FlowLog {
	t.DeliverLogsPermissionArn = v
	return t
}

// SetV__DeliverLogsPermissionArn updates property "DeliverLogsPermissionArn".
func (t *AWS_EC2_FlowLog) SetV__DeliverLogsPermissionArn(v string) *AWS_EC2_FlowLog {
	t.DeliverLogsPermissionArn = cfz.V(v)
	return t
}

// Set__DestinationOptions updates property "DestinationOptions".
func (t *AWS_EC2_FlowLog) Set__DestinationOptions(v cfz.Expression[AWS_EC2_FlowLog_DestinationOptions]) *AWS_EC2_FlowLog {
	t.DestinationOptions = v
	return t
}

// SetV__DestinationOptions updates property "DestinationOptions".
func (t *AWS_EC2_FlowLog) SetV__DestinationOptions(v AWS_EC2_FlowLog_DestinationOptions) *AWS_EC2_FlowLog {
	t.DestinationOptions = cfz.V(v)
	return t
}

// Set__LogDestination updates property "LogDestination".
func (t *AWS_EC2_FlowLog) Set__LogDestination(v cfz.Expression[string]) *AWS_EC2_FlowLog {
	t.LogDestination = v
	return t
}

// SetV__LogDestination updates property "LogDestination".
func (t *AWS_EC2_FlowLog) SetV__LogDestination(v string) *AWS_EC2_FlowLog {
	t.LogDestination = cfz.V(v)
	return t
}

// Set__LogDestinationType updates property "LogDestinationType".
func (t *AWS_EC2_FlowLog) Set__LogDestinationType(v cfz.Expression[string]) *AWS_EC2_FlowLog {
	t.LogDestinationType = v
	return t
}

// SetV__LogDestinationType updates property "LogDestinationType".
func (t *AWS_EC2_FlowLog) SetV__LogDestinationType(v string) *AWS_EC2_FlowLog {
	t.LogDestinationType = cfz.V(v)
	return t
}

// Set__LogFormat updates property "LogFormat".
func (t *AWS_EC2_FlowLog) Set__LogFormat(v cfz.Expression[string]) *AWS_EC2_FlowLog {
	t.LogFormat = v
	return t
}

// SetV__LogFormat updates property "LogFormat".
func (t *AWS_EC2_FlowLog) SetV__LogFormat(v string) *AWS_EC2_FlowLog {
	t.LogFormat = cfz.V(v)
	return t
}

// Set__LogGroupName updates property "LogGroupName".
func (t *AWS_EC2_FlowLog) Set__LogGroupName(v cfz.Expression[string]) *AWS_EC2_FlowLog {
	t.LogGroupName = v
	return t
}

// SetV__LogGroupName updates property "LogGroupName".
func (t *AWS_EC2_FlowLog) SetV__LogGroupName(v string) *AWS_EC2_FlowLog {
	t.LogGroupName = cfz.V(v)
	return t
}

// Set__MaxAggregationInterval updates property "MaxAggregationInterval".
func (t *AWS_EC2_FlowLog) Set__MaxAggregationInterval(v cfz.Expression[int32]) *AWS_EC2_FlowLog {
	t.MaxAggregationInterval = v
	return t
}

// SetV__MaxAggregationInterval updates property "MaxAggregationInterval".
func (t *AWS_EC2_FlowLog) SetV__MaxAggregationInterval(v int32) *AWS_EC2_FlowLog {
	t.MaxAggregationInterval = cfz.V(v)
	return t
}

// Set__ResourceId updates property "ResourceId".
func (t *AWS_EC2_FlowLog) Set__ResourceId(v cfz.Expression[string]) *AWS_EC2_FlowLog {
	t.ResourceId = v
	return t
}

// SetV__ResourceId updates property "ResourceId".
func (t *AWS_EC2_FlowLog) SetV__ResourceId(v string) *AWS_EC2_FlowLog {
	t.ResourceId = cfz.V(v)
	return t
}

// Set__ResourceType updates property "ResourceType".
func (t *AWS_EC2_FlowLog) Set__ResourceType(v cfz.Expression[string]) *AWS_EC2_FlowLog {
	t.ResourceType = v
	return t
}

// SetV__ResourceType updates property "ResourceType".
func (t *AWS_EC2_FlowLog) SetV__ResourceType(v string) *AWS_EC2_FlowLog {
	t.ResourceType = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_FlowLog) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_FlowLog {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_FlowLog) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_FlowLog {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_FlowLog) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_FlowLog {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TrafficType updates property "TrafficType".
func (t *AWS_EC2_FlowLog) Set__TrafficType(v cfz.Expression[string]) *AWS_EC2_FlowLog {
	t.TrafficType = v
	return t
}

// SetV__TrafficType updates property "TrafficType".
func (t *AWS_EC2_FlowLog) SetV__TrafficType(v string) *AWS_EC2_FlowLog {
	t.TrafficType = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_FlowLog) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_EC2_FlowLog) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_FlowLog__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_FlowLog) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_EC2_FlowLog) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_FlowLog) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_FlowLog

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_FlowLog) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
