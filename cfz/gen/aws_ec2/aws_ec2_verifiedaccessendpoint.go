// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VerifiedAccessEndpoint)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VerifiedAccessEndpoint)(nil)
)

const (
	// AWS_EC2_VerifiedAccessEndpoint__Type is the CloudFormation type for AWS::EC2::VerifiedAccessEndpoint.
	AWS_EC2_VerifiedAccessEndpoint__Type = "AWS::EC2::VerifiedAccessEndpoint"
)

var (
	// AWS_EC2_VerifiedAccessEndpoint__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VerifiedAccessEndpoint.
	AWS_EC2_VerifiedAccessEndpoint__AttributesMap = struct {
		CreationTime             string
		DeviceValidationDomain   string
		EndpointDomain           string
		LastUpdatedTime          string
		Status                   string
		VerifiedAccessEndpointId string
		VerifiedAccessInstanceId string
	}{
		CreationTime:             "CreationTime",
		DeviceValidationDomain:   "DeviceValidationDomain",
		EndpointDomain:           "EndpointDomain",
		LastUpdatedTime:          "LastUpdatedTime",
		Status:                   "Status",
		VerifiedAccessEndpointId: "VerifiedAccessEndpointId",
		VerifiedAccessInstanceId: "VerifiedAccessInstanceId",
	}

	// AWS_EC2_VerifiedAccessEndpoint__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VerifiedAccessEndpoint.
	AWS_EC2_VerifiedAccessEndpoint__AttributesSlice = []string{
		AWS_EC2_VerifiedAccessEndpoint__AttributesMap.CreationTime,
		AWS_EC2_VerifiedAccessEndpoint__AttributesMap.DeviceValidationDomain,
		AWS_EC2_VerifiedAccessEndpoint__AttributesMap.EndpointDomain,
		AWS_EC2_VerifiedAccessEndpoint__AttributesMap.LastUpdatedTime,
		AWS_EC2_VerifiedAccessEndpoint__AttributesMap.Status,
		AWS_EC2_VerifiedAccessEndpoint__AttributesMap.VerifiedAccessEndpointId,
		AWS_EC2_VerifiedAccessEndpoint__AttributesMap.VerifiedAccessInstanceId,
	}
)

var (
	// AWS_EC2_VerifiedAccessEndpoint__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VerifiedAccessEndpoint.
	AWS_EC2_VerifiedAccessEndpoint__PropertiesMap = struct {
		ApplicationDomain       string
		AttachmentType          string
		Description             string
		DomainCertificateArn    string
		EndpointDomainPrefix    string
		EndpointType            string
		LoadBalancerOptions     string
		NetworkInterfaceOptions string
		PolicyDocument          string
		PolicyEnabled           string
		SecurityGroupIds        string
		SseSpecification        string
		Tags                    string
		VerifiedAccessGroupId   string
	}{
		ApplicationDomain:       "ApplicationDomain",
		AttachmentType:          "AttachmentType",
		Description:             "Description",
		DomainCertificateArn:    "DomainCertificateArn",
		EndpointDomainPrefix:    "EndpointDomainPrefix",
		EndpointType:            "EndpointType",
		LoadBalancerOptions:     "LoadBalancerOptions",
		NetworkInterfaceOptions: "NetworkInterfaceOptions",
		PolicyDocument:          "PolicyDocument",
		PolicyEnabled:           "PolicyEnabled",
		SecurityGroupIds:        "SecurityGroupIds",
		SseSpecification:        "SseSpecification",
		Tags:                    "Tags",
		VerifiedAccessGroupId:   "VerifiedAccessGroupId",
	}

	// AWS_EC2_VerifiedAccessEndpoint__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VerifiedAccessEndpoint.
	AWS_EC2_VerifiedAccessEndpoint__PropertiesSlice = []string{
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.ApplicationDomain,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.AttachmentType,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.Description,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.DomainCertificateArn,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.EndpointDomainPrefix,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.EndpointType,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.LoadBalancerOptions,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.NetworkInterfaceOptions,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.PolicyDocument,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.PolicyEnabled,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.SecurityGroupIds,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.SseSpecification,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.Tags,
		AWS_EC2_VerifiedAccessEndpoint__PropertiesMap.VerifiedAccessGroupId,
	}
)

// AWS_EC2_VerifiedAccessEndpoint is a binding for AWS::EC2::VerifiedAccessEndpoint.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html
type AWS_EC2_VerifiedAccessEndpoint struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ApplicationDomain is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-applicationdomain
	ApplicationDomain cfz.Expression[string] `json:"ApplicationDomain,omitempty"`

	// AttachmentType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-attachmenttype
	AttachmentType cfz.Expression[string] `json:"AttachmentType,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DomainCertificateArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-domaincertificatearn
	DomainCertificateArn cfz.Expression[string] `json:"DomainCertificateArn,omitempty"`

	// EndpointDomainPrefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-endpointdomainprefix
	EndpointDomainPrefix cfz.Expression[string] `json:"EndpointDomainPrefix,omitempty"`

	// EndpointType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-endpointtype
	EndpointType cfz.Expression[string] `json:"EndpointType,omitempty"`

	// LoadBalancerOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-loadbalanceroptions
	LoadBalancerOptions cfz.Expression[AWS_EC2_VerifiedAccessEndpoint_LoadBalancerOptions] `json:"LoadBalancerOptions,omitempty"`

	// NetworkInterfaceOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-networkinterfaceoptions
	NetworkInterfaceOptions cfz.Expression[AWS_EC2_VerifiedAccessEndpoint_NetworkInterfaceOptions] `json:"NetworkInterfaceOptions,omitempty"`

	// PolicyDocument is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-policydocument
	PolicyDocument cfz.Expression[string] `json:"PolicyDocument,omitempty"`

	// PolicyEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-policyenabled
	PolicyEnabled cfz.Expression[bool] `json:"PolicyEnabled,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// SseSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-ssespecification
	SseSpecification cfz.Expression[AWS_EC2_VerifiedAccessEndpoint_SseSpecification] `json:"SseSpecification,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VerifiedAccessGroupId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessendpoint.html#cfn-ec2-verifiedaccessendpoint-verifiedaccessgroupid
	VerifiedAccessGroupId cfz.Expression[string] `json:"VerifiedAccessGroupId,omitempty"`
}

// New__AWS_EC2_VerifiedAccessEndpoint initializes a new *AWS_EC2_VerifiedAccessEndpoint.
func New__AWS_EC2_VerifiedAccessEndpoint(logicalName string) *AWS_EC2_VerifiedAccessEndpoint {
	return &AWS_EC2_VerifiedAccessEndpoint{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VerifiedAccessEndpoint) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VerifiedAccessEndpoint) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VerifiedAccessEndpoint) GetType() string {
	return AWS_EC2_VerifiedAccessEndpoint__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__LogicalName(v string) *AWS_EC2_VerifiedAccessEndpoint {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VerifiedAccessEndpoint {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VerifiedAccessEndpoint) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VerifiedAccessEndpoint {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VerifiedAccessEndpoint {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VerifiedAccessEndpoint {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VerifiedAccessEndpoint {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VerifiedAccessEndpoint) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VerifiedAccessEndpoint {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ApplicationDomain updates property "ApplicationDomain".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__ApplicationDomain(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.ApplicationDomain = v
	return t
}

// SetV__ApplicationDomain updates property "ApplicationDomain".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__ApplicationDomain(v string) *AWS_EC2_VerifiedAccessEndpoint {
	t.ApplicationDomain = cfz.V(v)
	return t
}

// Set__AttachmentType updates property "AttachmentType".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__AttachmentType(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.AttachmentType = v
	return t
}

// SetV__AttachmentType updates property "AttachmentType".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__AttachmentType(v string) *AWS_EC2_VerifiedAccessEndpoint {
	t.AttachmentType = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__Description(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__Description(v string) *AWS_EC2_VerifiedAccessEndpoint {
	t.Description = cfz.V(v)
	return t
}

// Set__DomainCertificateArn updates property "DomainCertificateArn".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__DomainCertificateArn(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.DomainCertificateArn = v
	return t
}

// SetV__DomainCertificateArn updates property "DomainCertificateArn".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__DomainCertificateArn(v string) *AWS_EC2_VerifiedAccessEndpoint {
	t.DomainCertificateArn = cfz.V(v)
	return t
}

// Set__EndpointDomainPrefix updates property "EndpointDomainPrefix".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__EndpointDomainPrefix(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.EndpointDomainPrefix = v
	return t
}

// SetV__EndpointDomainPrefix updates property "EndpointDomainPrefix".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__EndpointDomainPrefix(v string) *AWS_EC2_VerifiedAccessEndpoint {
	t.EndpointDomainPrefix = cfz.V(v)
	return t
}

// Set__EndpointType updates property "EndpointType".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__EndpointType(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.EndpointType = v
	return t
}

// SetV__EndpointType updates property "EndpointType".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__EndpointType(v string) *AWS_EC2_VerifiedAccessEndpoint {
	t.EndpointType = cfz.V(v)
	return t
}

// Set__LoadBalancerOptions updates property "LoadBalancerOptions".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__LoadBalancerOptions(v cfz.Expression[AWS_EC2_VerifiedAccessEndpoint_LoadBalancerOptions]) *AWS_EC2_VerifiedAccessEndpoint {
	t.LoadBalancerOptions = v
	return t
}

// SetV__LoadBalancerOptions updates property "LoadBalancerOptions".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__LoadBalancerOptions(v AWS_EC2_VerifiedAccessEndpoint_LoadBalancerOptions) *AWS_EC2_VerifiedAccessEndpoint {
	t.LoadBalancerOptions = cfz.V(v)
	return t
}

// Set__NetworkInterfaceOptions updates property "NetworkInterfaceOptions".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__NetworkInterfaceOptions(v cfz.Expression[AWS_EC2_VerifiedAccessEndpoint_NetworkInterfaceOptions]) *AWS_EC2_VerifiedAccessEndpoint {
	t.NetworkInterfaceOptions = v
	return t
}

// SetV__NetworkInterfaceOptions updates property "NetworkInterfaceOptions".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__NetworkInterfaceOptions(v AWS_EC2_VerifiedAccessEndpoint_NetworkInterfaceOptions) *AWS_EC2_VerifiedAccessEndpoint {
	t.NetworkInterfaceOptions = cfz.V(v)
	return t
}

// Set__PolicyDocument updates property "PolicyDocument".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__PolicyDocument(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.PolicyDocument = v
	return t
}

// SetV__PolicyDocument updates property "PolicyDocument".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__PolicyDocument(v string) *AWS_EC2_VerifiedAccessEndpoint {
	t.PolicyDocument = cfz.V(v)
	return t
}

// Set__PolicyEnabled updates property "PolicyEnabled".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__PolicyEnabled(v cfz.Expression[bool]) *AWS_EC2_VerifiedAccessEndpoint {
	t.PolicyEnabled = v
	return t
}

// SetV__PolicyEnabled updates property "PolicyEnabled".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__PolicyEnabled(v bool) *AWS_EC2_VerifiedAccessEndpoint {
	t.PolicyEnabled = cfz.V(v)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetSV__SecurityGroupIds(v ...string) *AWS_EC2_VerifiedAccessEndpoint {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__SseSpecification updates property "SseSpecification".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__SseSpecification(v cfz.Expression[AWS_EC2_VerifiedAccessEndpoint_SseSpecification]) *AWS_EC2_VerifiedAccessEndpoint {
	t.SseSpecification = v
	return t
}

// SetV__SseSpecification updates property "SseSpecification".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__SseSpecification(v AWS_EC2_VerifiedAccessEndpoint_SseSpecification) *AWS_EC2_VerifiedAccessEndpoint {
	t.SseSpecification = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_VerifiedAccessEndpoint {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_VerifiedAccessEndpoint {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_VerifiedAccessEndpoint {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VerifiedAccessGroupId updates property "VerifiedAccessGroupId".
func (t *AWS_EC2_VerifiedAccessEndpoint) Set__VerifiedAccessGroupId(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessEndpoint {
	t.VerifiedAccessGroupId = v
	return t
}

// SetV__VerifiedAccessGroupId updates property "VerifiedAccessGroupId".
func (t *AWS_EC2_VerifiedAccessEndpoint) SetV__VerifiedAccessGroupId(v string) *AWS_EC2_VerifiedAccessEndpoint {
	t.VerifiedAccessGroupId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VerifiedAccessEndpoint) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_EC2_VerifiedAccessEndpoint) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessEndpoint__AttributesMap.CreationTime))
}

// GetAtt__DeviceValidationDomain returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DeviceValidationDomain
func (t *AWS_EC2_VerifiedAccessEndpoint) GetAtt__DeviceValidationDomain() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessEndpoint__AttributesMap.DeviceValidationDomain))
}

// GetAtt__EndpointDomain returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointDomain
func (t *AWS_EC2_VerifiedAccessEndpoint) GetAtt__EndpointDomain() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessEndpoint__AttributesMap.EndpointDomain))
}

// GetAtt__LastUpdatedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastUpdatedTime
func (t *AWS_EC2_VerifiedAccessEndpoint) GetAtt__LastUpdatedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessEndpoint__AttributesMap.LastUpdatedTime))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_EC2_VerifiedAccessEndpoint) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessEndpoint__AttributesMap.Status))
}

// GetAtt__VerifiedAccessEndpointId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VerifiedAccessEndpointId
func (t *AWS_EC2_VerifiedAccessEndpoint) GetAtt__VerifiedAccessEndpointId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessEndpoint__AttributesMap.VerifiedAccessEndpointId))
}

// GetAtt__VerifiedAccessInstanceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VerifiedAccessInstanceId
func (t *AWS_EC2_VerifiedAccessEndpoint) GetAtt__VerifiedAccessInstanceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessEndpoint__AttributesMap.VerifiedAccessInstanceId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VerifiedAccessEndpoint) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_EC2_VerifiedAccessEndpoint) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DeviceValidationDomain returns a conventionally configured output for an attribute of this resource.
// Attribute: DeviceValidationDomain
func (t *AWS_EC2_VerifiedAccessEndpoint) GetConventionalOutputAtt__DeviceValidationDomain(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDeviceValidationDomain", t.GetAtt__DeviceValidationDomain())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointDomain returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointDomain
func (t *AWS_EC2_VerifiedAccessEndpoint) GetConventionalOutputAtt__EndpointDomain(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointDomain", t.GetAtt__EndpointDomain())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastUpdatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastUpdatedTime
func (t *AWS_EC2_VerifiedAccessEndpoint) GetConventionalOutputAtt__LastUpdatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastUpdatedTime", t.GetAtt__LastUpdatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_EC2_VerifiedAccessEndpoint) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VerifiedAccessEndpointId returns a conventionally configured output for an attribute of this resource.
// Attribute: VerifiedAccessEndpointId
func (t *AWS_EC2_VerifiedAccessEndpoint) GetConventionalOutputAtt__VerifiedAccessEndpointId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVerifiedAccessEndpointId", t.GetAtt__VerifiedAccessEndpointId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VerifiedAccessInstanceId returns a conventionally configured output for an attribute of this resource.
// Attribute: VerifiedAccessInstanceId
func (t *AWS_EC2_VerifiedAccessEndpoint) GetConventionalOutputAtt__VerifiedAccessInstanceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVerifiedAccessInstanceId", t.GetAtt__VerifiedAccessInstanceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VerifiedAccessEndpoint) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VerifiedAccessEndpoint

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VerifiedAccessEndpoint) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
