// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_SecurityGroupVpcAssociation)(nil)
	_ cfz.Resource                   = (*AWS_EC2_SecurityGroupVpcAssociation)(nil)
)

const (
	// AWS_EC2_SecurityGroupVpcAssociation__Type is the CloudFormation type for AWS::EC2::SecurityGroupVpcAssociation.
	AWS_EC2_SecurityGroupVpcAssociation__Type = "AWS::EC2::SecurityGroupVpcAssociation"
)

var (
	// AWS_EC2_SecurityGroupVpcAssociation__AttributesMap reports all the CloudFormation attributes for AWS::EC2::SecurityGroupVpcAssociation.
	AWS_EC2_SecurityGroupVpcAssociation__AttributesMap = struct {
		State       string
		StateReason string
		VpcOwnerId  string
	}{
		State:       "State",
		StateReason: "StateReason",
		VpcOwnerId:  "VpcOwnerId",
	}

	// AWS_EC2_SecurityGroupVpcAssociation__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::SecurityGroupVpcAssociation.
	AWS_EC2_SecurityGroupVpcAssociation__AttributesSlice = []string{
		AWS_EC2_SecurityGroupVpcAssociation__AttributesMap.State,
		AWS_EC2_SecurityGroupVpcAssociation__AttributesMap.StateReason,
		AWS_EC2_SecurityGroupVpcAssociation__AttributesMap.VpcOwnerId,
	}
)

var (
	// AWS_EC2_SecurityGroupVpcAssociation__PropertiesMap reports all the CloudFormation properties for AWS::EC2::SecurityGroupVpcAssociation.
	AWS_EC2_SecurityGroupVpcAssociation__PropertiesMap = struct {
		GroupId string
		VpcId   string
	}{
		GroupId: "GroupId",
		VpcId:   "VpcId",
	}

	// AWS_EC2_SecurityGroupVpcAssociation__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::SecurityGroupVpcAssociation.
	AWS_EC2_SecurityGroupVpcAssociation__PropertiesSlice = []string{
		AWS_EC2_SecurityGroupVpcAssociation__PropertiesMap.GroupId,
		AWS_EC2_SecurityGroupVpcAssociation__PropertiesMap.VpcId,
	}
)

// AWS_EC2_SecurityGroupVpcAssociation is a binding for AWS::EC2::SecurityGroupVpcAssociation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupvpcassociation.html
type AWS_EC2_SecurityGroupVpcAssociation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// GroupId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupvpcassociation.html#cfn-ec2-securitygroupvpcassociation-groupid
	GroupId cfz.Expression[string] `json:"GroupId,omitempty"`

	// VpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-securitygroupvpcassociation.html#cfn-ec2-securitygroupvpcassociation-vpcid
	VpcId cfz.Expression[string] `json:"VpcId,omitempty"`
}

// New__AWS_EC2_SecurityGroupVpcAssociation initializes a new *AWS_EC2_SecurityGroupVpcAssociation.
func New__AWS_EC2_SecurityGroupVpcAssociation(logicalName string) *AWS_EC2_SecurityGroupVpcAssociation {
	return &AWS_EC2_SecurityGroupVpcAssociation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_SecurityGroupVpcAssociation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_SecurityGroupVpcAssociation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_SecurityGroupVpcAssociation) GetType() string {
	return AWS_EC2_SecurityGroupVpcAssociation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_SecurityGroupVpcAssociation) Set__LogicalName(v string) *AWS_EC2_SecurityGroupVpcAssociation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_SecurityGroupVpcAssociation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_SecurityGroupVpcAssociation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_SecurityGroupVpcAssociation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_SecurityGroupVpcAssociation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_SecurityGroupVpcAssociation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_SecurityGroupVpcAssociation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_SecurityGroupVpcAssociation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_SecurityGroupVpcAssociation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_SecurityGroupVpcAssociation) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_SecurityGroupVpcAssociation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_SecurityGroupVpcAssociation) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_SecurityGroupVpcAssociation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__GroupId updates property "GroupId".
func (t *AWS_EC2_SecurityGroupVpcAssociation) Set__GroupId(v cfz.Expression[string]) *AWS_EC2_SecurityGroupVpcAssociation {
	t.GroupId = v
	return t
}

// SetV__GroupId updates property "GroupId".
func (t *AWS_EC2_SecurityGroupVpcAssociation) SetV__GroupId(v string) *AWS_EC2_SecurityGroupVpcAssociation {
	t.GroupId = cfz.V(v)
	return t
}

// Set__VpcId updates property "VpcId".
func (t *AWS_EC2_SecurityGroupVpcAssociation) Set__VpcId(v cfz.Expression[string]) *AWS_EC2_SecurityGroupVpcAssociation {
	t.VpcId = v
	return t
}

// SetV__VpcId updates property "VpcId".
func (t *AWS_EC2_SecurityGroupVpcAssociation) SetV__VpcId(v string) *AWS_EC2_SecurityGroupVpcAssociation {
	t.VpcId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_SecurityGroupVpcAssociation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_EC2_SecurityGroupVpcAssociation) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_SecurityGroupVpcAssociation__AttributesMap.State))
}

// GetAtt__StateReason returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StateReason
func (t *AWS_EC2_SecurityGroupVpcAssociation) GetAtt__StateReason() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_SecurityGroupVpcAssociation__AttributesMap.StateReason))
}

// GetAtt__VpcOwnerId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcOwnerId
func (t *AWS_EC2_SecurityGroupVpcAssociation) GetAtt__VpcOwnerId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_SecurityGroupVpcAssociation__AttributesMap.VpcOwnerId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_SecurityGroupVpcAssociation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_EC2_SecurityGroupVpcAssociation) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StateReason returns a conventionally configured output for an attribute of this resource.
// Attribute: StateReason
func (t *AWS_EC2_SecurityGroupVpcAssociation) GetConventionalOutputAtt__StateReason(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStateReason", t.GetAtt__StateReason())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcOwnerId returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcOwnerId
func (t *AWS_EC2_SecurityGroupVpcAssociation) GetConventionalOutputAtt__VpcOwnerId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcOwnerId", t.GetAtt__VpcOwnerId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_SecurityGroupVpcAssociation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_SecurityGroupVpcAssociation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_SecurityGroupVpcAssociation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
