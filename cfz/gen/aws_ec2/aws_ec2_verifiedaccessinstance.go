// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VerifiedAccessInstance)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VerifiedAccessInstance)(nil)
)

const (
	// AWS_EC2_VerifiedAccessInstance__Type is the CloudFormation type for AWS::EC2::VerifiedAccessInstance.
	AWS_EC2_VerifiedAccessInstance__Type = "AWS::EC2::VerifiedAccessInstance"
)

var (
	// AWS_EC2_VerifiedAccessInstance__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VerifiedAccessInstance.
	AWS_EC2_VerifiedAccessInstance__AttributesMap = struct {
		CreationTime             string
		LastUpdatedTime          string
		VerifiedAccessInstanceId string
	}{
		CreationTime:             "CreationTime",
		LastUpdatedTime:          "LastUpdatedTime",
		VerifiedAccessInstanceId: "VerifiedAccessInstanceId",
	}

	// AWS_EC2_VerifiedAccessInstance__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VerifiedAccessInstance.
	AWS_EC2_VerifiedAccessInstance__AttributesSlice = []string{
		AWS_EC2_VerifiedAccessInstance__AttributesMap.CreationTime,
		AWS_EC2_VerifiedAccessInstance__AttributesMap.LastUpdatedTime,
		AWS_EC2_VerifiedAccessInstance__AttributesMap.VerifiedAccessInstanceId,
	}
)

var (
	// AWS_EC2_VerifiedAccessInstance__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VerifiedAccessInstance.
	AWS_EC2_VerifiedAccessInstance__PropertiesMap = struct {
		Description                    string
		FipsEnabled                    string
		LoggingConfigurations          string
		Tags                           string
		VerifiedAccessTrustProviderIds string
		VerifiedAccessTrustProviders   string
	}{
		Description:                    "Description",
		FipsEnabled:                    "FipsEnabled",
		LoggingConfigurations:          "LoggingConfigurations",
		Tags:                           "Tags",
		VerifiedAccessTrustProviderIds: "VerifiedAccessTrustProviderIds",
		VerifiedAccessTrustProviders:   "VerifiedAccessTrustProviders",
	}

	// AWS_EC2_VerifiedAccessInstance__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VerifiedAccessInstance.
	AWS_EC2_VerifiedAccessInstance__PropertiesSlice = []string{
		AWS_EC2_VerifiedAccessInstance__PropertiesMap.Description,
		AWS_EC2_VerifiedAccessInstance__PropertiesMap.FipsEnabled,
		AWS_EC2_VerifiedAccessInstance__PropertiesMap.LoggingConfigurations,
		AWS_EC2_VerifiedAccessInstance__PropertiesMap.Tags,
		AWS_EC2_VerifiedAccessInstance__PropertiesMap.VerifiedAccessTrustProviderIds,
		AWS_EC2_VerifiedAccessInstance__PropertiesMap.VerifiedAccessTrustProviders,
	}
)

// AWS_EC2_VerifiedAccessInstance is a binding for AWS::EC2::VerifiedAccessInstance.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html
type AWS_EC2_VerifiedAccessInstance struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// FipsEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-fipsenabled
	FipsEnabled cfz.Expression[bool] `json:"FipsEnabled,omitempty"`

	// LoggingConfigurations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-loggingconfigurations
	LoggingConfigurations cfz.Expression[AWS_EC2_VerifiedAccessInstance_VerifiedAccessLogs] `json:"LoggingConfigurations,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VerifiedAccessTrustProviderIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-verifiedaccesstrustproviderids
	VerifiedAccessTrustProviderIds cfz.ExpressionSlice[string] `json:"VerifiedAccessTrustProviderIds,omitempty"`

	// VerifiedAccessTrustProviders is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessinstance.html#cfn-ec2-verifiedaccessinstance-verifiedaccesstrustproviders
	VerifiedAccessTrustProviders cfz.ExpressionSlice[AWS_EC2_VerifiedAccessInstance_VerifiedAccessTrustProvider] `json:"VerifiedAccessTrustProviders,omitempty"`
}

// New__AWS_EC2_VerifiedAccessInstance initializes a new *AWS_EC2_VerifiedAccessInstance.
func New__AWS_EC2_VerifiedAccessInstance(logicalName string) *AWS_EC2_VerifiedAccessInstance {
	return &AWS_EC2_VerifiedAccessInstance{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VerifiedAccessInstance) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VerifiedAccessInstance) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VerifiedAccessInstance) GetType() string {
	return AWS_EC2_VerifiedAccessInstance__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VerifiedAccessInstance) Set__LogicalName(v string) *AWS_EC2_VerifiedAccessInstance {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VerifiedAccessInstance) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VerifiedAccessInstance {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VerifiedAccessInstance) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VerifiedAccessInstance {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VerifiedAccessInstance) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VerifiedAccessInstance {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VerifiedAccessInstance) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VerifiedAccessInstance {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VerifiedAccessInstance) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VerifiedAccessInstance {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VerifiedAccessInstance) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VerifiedAccessInstance {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EC2_VerifiedAccessInstance) Set__Description(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessInstance {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EC2_VerifiedAccessInstance) SetV__Description(v string) *AWS_EC2_VerifiedAccessInstance {
	t.Description = cfz.V(v)
	return t
}

// Set__FipsEnabled updates property "FipsEnabled".
func (t *AWS_EC2_VerifiedAccessInstance) Set__FipsEnabled(v cfz.Expression[bool]) *AWS_EC2_VerifiedAccessInstance {
	t.FipsEnabled = v
	return t
}

// SetV__FipsEnabled updates property "FipsEnabled".
func (t *AWS_EC2_VerifiedAccessInstance) SetV__FipsEnabled(v bool) *AWS_EC2_VerifiedAccessInstance {
	t.FipsEnabled = cfz.V(v)
	return t
}

// Set__LoggingConfigurations updates property "LoggingConfigurations".
func (t *AWS_EC2_VerifiedAccessInstance) Set__LoggingConfigurations(v cfz.Expression[AWS_EC2_VerifiedAccessInstance_VerifiedAccessLogs]) *AWS_EC2_VerifiedAccessInstance {
	t.LoggingConfigurations = v
	return t
}

// SetV__LoggingConfigurations updates property "LoggingConfigurations".
func (t *AWS_EC2_VerifiedAccessInstance) SetV__LoggingConfigurations(v AWS_EC2_VerifiedAccessInstance_VerifiedAccessLogs) *AWS_EC2_VerifiedAccessInstance {
	t.LoggingConfigurations = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessInstance) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_VerifiedAccessInstance {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessInstance) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_VerifiedAccessInstance {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessInstance) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_VerifiedAccessInstance {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VerifiedAccessTrustProviderIds updates property "VerifiedAccessTrustProviderIds".
func (t *AWS_EC2_VerifiedAccessInstance) Set__VerifiedAccessTrustProviderIds(v cfz.ExpressionSlice[string]) *AWS_EC2_VerifiedAccessInstance {
	t.VerifiedAccessTrustProviderIds = v
	return t
}

// SetS__VerifiedAccessTrustProviderIds updates property "VerifiedAccessTrustProviderIds".
func (t *AWS_EC2_VerifiedAccessInstance) SetS__VerifiedAccessTrustProviderIds(v ...cfz.Expression[string]) *AWS_EC2_VerifiedAccessInstance {
	t.VerifiedAccessTrustProviderIds = cfz.S(v...)
	return t
}

// SetSV__VerifiedAccessTrustProviderIds updates property "VerifiedAccessTrustProviderIds".
func (t *AWS_EC2_VerifiedAccessInstance) SetSV__VerifiedAccessTrustProviderIds(v ...string) *AWS_EC2_VerifiedAccessInstance {
	t.VerifiedAccessTrustProviderIds = cfz.SV(v...)
	return t
}

// Set__VerifiedAccessTrustProviders updates property "VerifiedAccessTrustProviders".
func (t *AWS_EC2_VerifiedAccessInstance) Set__VerifiedAccessTrustProviders(v cfz.ExpressionSlice[AWS_EC2_VerifiedAccessInstance_VerifiedAccessTrustProvider]) *AWS_EC2_VerifiedAccessInstance {
	t.VerifiedAccessTrustProviders = v
	return t
}

// SetS__VerifiedAccessTrustProviders updates property "VerifiedAccessTrustProviders".
func (t *AWS_EC2_VerifiedAccessInstance) SetS__VerifiedAccessTrustProviders(v ...cfz.Expression[AWS_EC2_VerifiedAccessInstance_VerifiedAccessTrustProvider]) *AWS_EC2_VerifiedAccessInstance {
	t.VerifiedAccessTrustProviders = cfz.S(v...)
	return t
}

// SetSV__VerifiedAccessTrustProviders updates property "VerifiedAccessTrustProviders".
func (t *AWS_EC2_VerifiedAccessInstance) SetSV__VerifiedAccessTrustProviders(v ...AWS_EC2_VerifiedAccessInstance_VerifiedAccessTrustProvider) *AWS_EC2_VerifiedAccessInstance {
	t.VerifiedAccessTrustProviders = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VerifiedAccessInstance) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_EC2_VerifiedAccessInstance) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessInstance__AttributesMap.CreationTime))
}

// GetAtt__LastUpdatedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastUpdatedTime
func (t *AWS_EC2_VerifiedAccessInstance) GetAtt__LastUpdatedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessInstance__AttributesMap.LastUpdatedTime))
}

// GetAtt__VerifiedAccessInstanceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VerifiedAccessInstanceId
func (t *AWS_EC2_VerifiedAccessInstance) GetAtt__VerifiedAccessInstanceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessInstance__AttributesMap.VerifiedAccessInstanceId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VerifiedAccessInstance) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_EC2_VerifiedAccessInstance) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastUpdatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastUpdatedTime
func (t *AWS_EC2_VerifiedAccessInstance) GetConventionalOutputAtt__LastUpdatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastUpdatedTime", t.GetAtt__LastUpdatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VerifiedAccessInstanceId returns a conventionally configured output for an attribute of this resource.
// Attribute: VerifiedAccessInstanceId
func (t *AWS_EC2_VerifiedAccessInstance) GetConventionalOutputAtt__VerifiedAccessInstanceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVerifiedAccessInstanceId", t.GetAtt__VerifiedAccessInstanceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VerifiedAccessInstance) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VerifiedAccessInstance

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VerifiedAccessInstance) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
