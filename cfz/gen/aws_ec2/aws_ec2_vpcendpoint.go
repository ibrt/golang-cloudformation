// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VPCEndpoint)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VPCEndpoint)(nil)
)

const (
	// AWS_EC2_VPCEndpoint__Type is the CloudFormation type for AWS::EC2::VPCEndpoint.
	AWS_EC2_VPCEndpoint__Type = "AWS::EC2::VPCEndpoint"
)

var (
	// AWS_EC2_VPCEndpoint__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VPCEndpoint.
	AWS_EC2_VPCEndpoint__AttributesMap = struct {
		CreationTimestamp   string
		DnsEntries          string
		Id                  string
		NetworkInterfaceIds string
	}{
		CreationTimestamp:   "CreationTimestamp",
		DnsEntries:          "DnsEntries",
		Id:                  "Id",
		NetworkInterfaceIds: "NetworkInterfaceIds",
	}

	// AWS_EC2_VPCEndpoint__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VPCEndpoint.
	AWS_EC2_VPCEndpoint__AttributesSlice = []string{
		AWS_EC2_VPCEndpoint__AttributesMap.CreationTimestamp,
		AWS_EC2_VPCEndpoint__AttributesMap.DnsEntries,
		AWS_EC2_VPCEndpoint__AttributesMap.Id,
		AWS_EC2_VPCEndpoint__AttributesMap.NetworkInterfaceIds,
	}
)

var (
	// AWS_EC2_VPCEndpoint__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VPCEndpoint.
	AWS_EC2_VPCEndpoint__PropertiesMap = struct {
		PolicyDocument    string
		PrivateDnsEnabled string
		RouteTableIds     string
		SecurityGroupIds  string
		ServiceName       string
		SubnetIds         string
		VpcEndpointType   string
		VpcId             string
	}{
		PolicyDocument:    "PolicyDocument",
		PrivateDnsEnabled: "PrivateDnsEnabled",
		RouteTableIds:     "RouteTableIds",
		SecurityGroupIds:  "SecurityGroupIds",
		ServiceName:       "ServiceName",
		SubnetIds:         "SubnetIds",
		VpcEndpointType:   "VpcEndpointType",
		VpcId:             "VpcId",
	}

	// AWS_EC2_VPCEndpoint__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VPCEndpoint.
	AWS_EC2_VPCEndpoint__PropertiesSlice = []string{
		AWS_EC2_VPCEndpoint__PropertiesMap.PolicyDocument,
		AWS_EC2_VPCEndpoint__PropertiesMap.PrivateDnsEnabled,
		AWS_EC2_VPCEndpoint__PropertiesMap.RouteTableIds,
		AWS_EC2_VPCEndpoint__PropertiesMap.SecurityGroupIds,
		AWS_EC2_VPCEndpoint__PropertiesMap.ServiceName,
		AWS_EC2_VPCEndpoint__PropertiesMap.SubnetIds,
		AWS_EC2_VPCEndpoint__PropertiesMap.VpcEndpointType,
		AWS_EC2_VPCEndpoint__PropertiesMap.VpcId,
	}
)

// AWS_EC2_VPCEndpoint is a binding for AWS::EC2::VPCEndpoint.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html
type AWS_EC2_VPCEndpoint struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// PolicyDocument is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-policydocument
	PolicyDocument cfz.Expression[json.RawMessage] `json:"PolicyDocument,omitempty"`

	// PrivateDnsEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-privatednsenabled
	PrivateDnsEnabled cfz.Expression[bool] `json:"PrivateDnsEnabled,omitempty"`

	// RouteTableIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-routetableids
	RouteTableIds cfz.ExpressionSlice[string] `json:"RouteTableIds,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// ServiceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-servicename
	ServiceName cfz.Expression[string] `json:"ServiceName,omitempty"`

	// SubnetIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-subnetids
	SubnetIds cfz.ExpressionSlice[string] `json:"SubnetIds,omitempty"`

	// VpcEndpointType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcendpointtype
	VpcEndpointType cfz.Expression[string] `json:"VpcEndpointType,omitempty"`

	// VpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html#cfn-ec2-vpcendpoint-vpcid
	VpcId cfz.Expression[string] `json:"VpcId,omitempty"`
}

// New__AWS_EC2_VPCEndpoint initializes a new *AWS_EC2_VPCEndpoint.
func New__AWS_EC2_VPCEndpoint(logicalName string) *AWS_EC2_VPCEndpoint {
	return &AWS_EC2_VPCEndpoint{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VPCEndpoint) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VPCEndpoint) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VPCEndpoint) GetType() string {
	return AWS_EC2_VPCEndpoint__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VPCEndpoint) Set__LogicalName(v string) *AWS_EC2_VPCEndpoint {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VPCEndpoint) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VPCEndpoint {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VPCEndpoint) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VPCEndpoint {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VPCEndpoint) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VPCEndpoint {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VPCEndpoint) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VPCEndpoint {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VPCEndpoint) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VPCEndpoint {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VPCEndpoint) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VPCEndpoint {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__PolicyDocument updates property "PolicyDocument".
func (t *AWS_EC2_VPCEndpoint) Set__PolicyDocument(v cfz.Expression[json.RawMessage]) *AWS_EC2_VPCEndpoint {
	t.PolicyDocument = v
	return t
}

// SetV__PolicyDocument updates property "PolicyDocument".
func (t *AWS_EC2_VPCEndpoint) SetV__PolicyDocument(v json.RawMessage) *AWS_EC2_VPCEndpoint {
	t.PolicyDocument = cfz.V(v)
	return t
}

// Set__PrivateDnsEnabled updates property "PrivateDnsEnabled".
func (t *AWS_EC2_VPCEndpoint) Set__PrivateDnsEnabled(v cfz.Expression[bool]) *AWS_EC2_VPCEndpoint {
	t.PrivateDnsEnabled = v
	return t
}

// SetV__PrivateDnsEnabled updates property "PrivateDnsEnabled".
func (t *AWS_EC2_VPCEndpoint) SetV__PrivateDnsEnabled(v bool) *AWS_EC2_VPCEndpoint {
	t.PrivateDnsEnabled = cfz.V(v)
	return t
}

// Set__RouteTableIds updates property "RouteTableIds".
func (t *AWS_EC2_VPCEndpoint) Set__RouteTableIds(v cfz.ExpressionSlice[string]) *AWS_EC2_VPCEndpoint {
	t.RouteTableIds = v
	return t
}

// SetS__RouteTableIds updates property "RouteTableIds".
func (t *AWS_EC2_VPCEndpoint) SetS__RouteTableIds(v ...cfz.Expression[string]) *AWS_EC2_VPCEndpoint {
	t.RouteTableIds = cfz.S(v...)
	return t
}

// SetSV__RouteTableIds updates property "RouteTableIds".
func (t *AWS_EC2_VPCEndpoint) SetSV__RouteTableIds(v ...string) *AWS_EC2_VPCEndpoint {
	t.RouteTableIds = cfz.SV(v...)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_EC2_VPCEndpoint) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_EC2_VPCEndpoint {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_EC2_VPCEndpoint) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_EC2_VPCEndpoint {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_EC2_VPCEndpoint) SetSV__SecurityGroupIds(v ...string) *AWS_EC2_VPCEndpoint {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__ServiceName updates property "ServiceName".
func (t *AWS_EC2_VPCEndpoint) Set__ServiceName(v cfz.Expression[string]) *AWS_EC2_VPCEndpoint {
	t.ServiceName = v
	return t
}

// SetV__ServiceName updates property "ServiceName".
func (t *AWS_EC2_VPCEndpoint) SetV__ServiceName(v string) *AWS_EC2_VPCEndpoint {
	t.ServiceName = cfz.V(v)
	return t
}

// Set__SubnetIds updates property "SubnetIds".
func (t *AWS_EC2_VPCEndpoint) Set__SubnetIds(v cfz.ExpressionSlice[string]) *AWS_EC2_VPCEndpoint {
	t.SubnetIds = v
	return t
}

// SetS__SubnetIds updates property "SubnetIds".
func (t *AWS_EC2_VPCEndpoint) SetS__SubnetIds(v ...cfz.Expression[string]) *AWS_EC2_VPCEndpoint {
	t.SubnetIds = cfz.S(v...)
	return t
}

// SetSV__SubnetIds updates property "SubnetIds".
func (t *AWS_EC2_VPCEndpoint) SetSV__SubnetIds(v ...string) *AWS_EC2_VPCEndpoint {
	t.SubnetIds = cfz.SV(v...)
	return t
}

// Set__VpcEndpointType updates property "VpcEndpointType".
func (t *AWS_EC2_VPCEndpoint) Set__VpcEndpointType(v cfz.Expression[string]) *AWS_EC2_VPCEndpoint {
	t.VpcEndpointType = v
	return t
}

// SetV__VpcEndpointType updates property "VpcEndpointType".
func (t *AWS_EC2_VPCEndpoint) SetV__VpcEndpointType(v string) *AWS_EC2_VPCEndpoint {
	t.VpcEndpointType = cfz.V(v)
	return t
}

// Set__VpcId updates property "VpcId".
func (t *AWS_EC2_VPCEndpoint) Set__VpcId(v cfz.Expression[string]) *AWS_EC2_VPCEndpoint {
	t.VpcId = v
	return t
}

// SetV__VpcId updates property "VpcId".
func (t *AWS_EC2_VPCEndpoint) SetV__VpcId(v string) *AWS_EC2_VPCEndpoint {
	t.VpcId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VPCEndpoint) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTimestamp returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTimestamp
func (t *AWS_EC2_VPCEndpoint) GetAtt__CreationTimestamp() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCEndpoint__AttributesMap.CreationTimestamp))
}

// GetAttSlice__DnsEntries returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DnsEntries
func (t *AWS_EC2_VPCEndpoint) GetAttSlice__DnsEntries() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCEndpoint__AttributesMap.DnsEntries))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_EC2_VPCEndpoint) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCEndpoint__AttributesMap.Id))
}

// GetAttSlice__NetworkInterfaceIds returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NetworkInterfaceIds
func (t *AWS_EC2_VPCEndpoint) GetAttSlice__NetworkInterfaceIds() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCEndpoint__AttributesMap.NetworkInterfaceIds))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VPCEndpoint) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTimestamp returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTimestamp
func (t *AWS_EC2_VPCEndpoint) GetConventionalOutputAtt__CreationTimestamp(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTimestamp", t.GetAtt__CreationTimestamp())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DnsEntries returns a conventionally configured output for an attribute of this resource.
// Attribute: DnsEntries
func (t *AWS_EC2_VPCEndpoint) GetConventionalOutputAtt__DnsEntries(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDnsEntries", t.GetAttSlice__DnsEntries())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_EC2_VPCEndpoint) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NetworkInterfaceIds returns a conventionally configured output for an attribute of this resource.
// Attribute: NetworkInterfaceIds
func (t *AWS_EC2_VPCEndpoint) GetConventionalOutputAtt__NetworkInterfaceIds(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNetworkInterfaceIds", t.GetAttSlice__NetworkInterfaceIds())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VPCEndpoint) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VPCEndpoint

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VPCEndpoint) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
