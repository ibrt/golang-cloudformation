// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions__Type is the CloudFormation type for AWS::EC2::ClientVpnEndpoint.ClientLoginBannerOptions.
	AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions__Type = "AWS::EC2::ClientVpnEndpoint.ClientLoginBannerOptions"
)

var (
	// AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions__PropertiesMap reports all the CloudFormation properties for AWS::EC2::ClientVpnEndpoint.ClientLoginBannerOptions.
	AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions__PropertiesMap = struct {
		BannerText string
		Enabled    string
	}{
		BannerText: "BannerText",
		Enabled:    "Enabled",
	}

	// AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::ClientVpnEndpoint.ClientLoginBannerOptions.
	AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions__PropertiesSlice = []string{
		AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions__PropertiesMap.BannerText,
		AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions__PropertiesMap.Enabled,
	}
)

// AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions is a binding for AWS::EC2::ClientVpnEndpoint.ClientLoginBannerOptions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientloginbanneroptions.html
type AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions struct {
	// BannerText is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientloginbanneroptions.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions-bannertext
	BannerText cfz.Expression[string] `json:"BannerText,omitempty"`

	// Enabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientloginbanneroptions.html#cfn-ec2-clientvpnendpoint-clientloginbanneroptions-enabled
	Enabled cfz.Expression[bool] `json:"Enabled,omitempty"`
}

// New__AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions initializes a new AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions.
func New__AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions() AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions {
	return AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions) GetType() string {
	return AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions__Type
}

// Set__BannerText updates property "BannerText".
func (t AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions) Set__BannerText(v cfz.Expression[string]) AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions {
	t.BannerText = v
	return t
}

// SetV__BannerText updates property "BannerText".
func (t AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions) SetV__BannerText(v string) AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions {
	t.BannerText = cfz.V(v)
	return t
}

// Set__Enabled updates property "Enabled".
func (t AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions) Set__Enabled(v cfz.Expression[bool]) AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions {
	t.Enabled = v
	return t
}

// SetV__Enabled updates property "Enabled".
func (t AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions) SetV__Enabled(v bool) AWS_EC2_ClientVpnEndpoint_ClientLoginBannerOptions {
	t.Enabled = cfz.V(v)
	return t
}
