// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__Type is the CloudFormation type for AWS::EC2::SpotFleet.SpotFleetLaunchSpecification.
	AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__Type = "AWS::EC2::SpotFleet.SpotFleetLaunchSpecification"
)

var (
	// AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap reports all the CloudFormation properties for AWS::EC2::SpotFleet.SpotFleetLaunchSpecification.
	AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap = struct {
		BlockDeviceMappings  string
		EbsOptimized         string
		IamInstanceProfile   string
		ImageId              string
		InstanceRequirements string
		InstanceType         string
		KernelId             string
		KeyName              string
		Monitoring           string
		NetworkInterfaces    string
		Placement            string
		RamdiskId            string
		SecurityGroups       string
		SpotPrice            string
		SubnetId             string
		TagSpecifications    string
		UserData             string
		WeightedCapacity     string
	}{
		BlockDeviceMappings:  "BlockDeviceMappings",
		EbsOptimized:         "EbsOptimized",
		IamInstanceProfile:   "IamInstanceProfile",
		ImageId:              "ImageId",
		InstanceRequirements: "InstanceRequirements",
		InstanceType:         "InstanceType",
		KernelId:             "KernelId",
		KeyName:              "KeyName",
		Monitoring:           "Monitoring",
		NetworkInterfaces:    "NetworkInterfaces",
		Placement:            "Placement",
		RamdiskId:            "RamdiskId",
		SecurityGroups:       "SecurityGroups",
		SpotPrice:            "SpotPrice",
		SubnetId:             "SubnetId",
		TagSpecifications:    "TagSpecifications",
		UserData:             "UserData",
		WeightedCapacity:     "WeightedCapacity",
	}

	// AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::SpotFleet.SpotFleetLaunchSpecification.
	AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesSlice = []string{
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.BlockDeviceMappings,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.EbsOptimized,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.IamInstanceProfile,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.ImageId,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.InstanceRequirements,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.InstanceType,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.KernelId,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.KeyName,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.Monitoring,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.NetworkInterfaces,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.Placement,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.RamdiskId,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.SecurityGroups,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.SpotPrice,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.SubnetId,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.TagSpecifications,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.UserData,
		AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__PropertiesMap.WeightedCapacity,
	}
)

// AWS_EC2_SpotFleet_SpotFleetLaunchSpecification is a binding for AWS::EC2::SpotFleet.SpotFleetLaunchSpecification.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html
type AWS_EC2_SpotFleet_SpotFleetLaunchSpecification struct {
	// BlockDeviceMappings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-blockdevicemappings
	BlockDeviceMappings cfz.ExpressionSlice[AWS_EC2_SpotFleet_BlockDeviceMapping] `json:"BlockDeviceMappings,omitempty"`

	// EbsOptimized is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ebsoptimized
	EbsOptimized cfz.Expression[bool] `json:"EbsOptimized,omitempty"`

	// IamInstanceProfile is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-iaminstanceprofile
	IamInstanceProfile cfz.Expression[AWS_EC2_SpotFleet_IamInstanceProfileSpecification] `json:"IamInstanceProfile,omitempty"`

	// ImageId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-imageid
	ImageId cfz.Expression[string] `json:"ImageId,omitempty"`

	// InstanceRequirements is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancerequirements
	InstanceRequirements cfz.Expression[AWS_EC2_SpotFleet_InstanceRequirementsRequest] `json:"InstanceRequirements,omitempty"`

	// InstanceType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-instancetype
	InstanceType cfz.Expression[string] `json:"InstanceType,omitempty"`

	// KernelId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-kernelid
	KernelId cfz.Expression[string] `json:"KernelId,omitempty"`

	// KeyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-keyname
	KeyName cfz.Expression[string] `json:"KeyName,omitempty"`

	// Monitoring is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-monitoring
	Monitoring cfz.Expression[AWS_EC2_SpotFleet_SpotFleetMonitoring] `json:"Monitoring,omitempty"`

	// NetworkInterfaces is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-networkinterfaces
	NetworkInterfaces cfz.ExpressionSlice[AWS_EC2_SpotFleet_InstanceNetworkInterfaceSpecification] `json:"NetworkInterfaces,omitempty"`

	// Placement is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-placement
	Placement cfz.Expression[AWS_EC2_SpotFleet_SpotPlacement] `json:"Placement,omitempty"`

	// RamdiskId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-ramdiskid
	RamdiskId cfz.Expression[string] `json:"RamdiskId,omitempty"`

	// SecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-securitygroups
	SecurityGroups cfz.ExpressionSlice[AWS_EC2_SpotFleet_GroupIdentifier] `json:"SecurityGroups,omitempty"`

	// SpotPrice is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-spotprice
	SpotPrice cfz.Expression[string] `json:"SpotPrice,omitempty"`

	// SubnetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-subnetid
	SubnetId cfz.Expression[string] `json:"SubnetId,omitempty"`

	// TagSpecifications is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-tagspecifications
	TagSpecifications cfz.ExpressionSlice[AWS_EC2_SpotFleet_SpotFleetTagSpecification] `json:"TagSpecifications,omitempty"`

	// UserData is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-userdata
	UserData cfz.Expression[string] `json:"UserData,omitempty"`

	// WeightedCapacity is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-spotfleetlaunchspecification.html#cfn-ec2-spotfleet-spotfleetlaunchspecification-weightedcapacity
	WeightedCapacity cfz.Expression[float64] `json:"WeightedCapacity,omitempty"`
}

// New__AWS_EC2_SpotFleet_SpotFleetLaunchSpecification initializes a new AWS_EC2_SpotFleet_SpotFleetLaunchSpecification.
func New__AWS_EC2_SpotFleet_SpotFleetLaunchSpecification() AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	return AWS_EC2_SpotFleet_SpotFleetLaunchSpecification{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) GetType() string {
	return AWS_EC2_SpotFleet_SpotFleetLaunchSpecification__Type
}

// Set__BlockDeviceMappings updates property "BlockDeviceMappings".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__BlockDeviceMappings(v cfz.ExpressionSlice[AWS_EC2_SpotFleet_BlockDeviceMapping]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.BlockDeviceMappings = v
	return t
}

// SetS__BlockDeviceMappings updates property "BlockDeviceMappings".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetS__BlockDeviceMappings(v ...cfz.Expression[AWS_EC2_SpotFleet_BlockDeviceMapping]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.BlockDeviceMappings = cfz.S(v...)
	return t
}

// SetSV__BlockDeviceMappings updates property "BlockDeviceMappings".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetSV__BlockDeviceMappings(v ...AWS_EC2_SpotFleet_BlockDeviceMapping) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.BlockDeviceMappings = cfz.SV(v...)
	return t
}

// Set__EbsOptimized updates property "EbsOptimized".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__EbsOptimized(v cfz.Expression[bool]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.EbsOptimized = v
	return t
}

// SetV__EbsOptimized updates property "EbsOptimized".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__EbsOptimized(v bool) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.EbsOptimized = cfz.V(v)
	return t
}

// Set__IamInstanceProfile updates property "IamInstanceProfile".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__IamInstanceProfile(v cfz.Expression[AWS_EC2_SpotFleet_IamInstanceProfileSpecification]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.IamInstanceProfile = v
	return t
}

// SetV__IamInstanceProfile updates property "IamInstanceProfile".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__IamInstanceProfile(v AWS_EC2_SpotFleet_IamInstanceProfileSpecification) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.IamInstanceProfile = cfz.V(v)
	return t
}

// Set__ImageId updates property "ImageId".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__ImageId(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.ImageId = v
	return t
}

// SetV__ImageId updates property "ImageId".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__ImageId(v string) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.ImageId = cfz.V(v)
	return t
}

// Set__InstanceRequirements updates property "InstanceRequirements".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__InstanceRequirements(v cfz.Expression[AWS_EC2_SpotFleet_InstanceRequirementsRequest]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.InstanceRequirements = v
	return t
}

// SetV__InstanceRequirements updates property "InstanceRequirements".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__InstanceRequirements(v AWS_EC2_SpotFleet_InstanceRequirementsRequest) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.InstanceRequirements = cfz.V(v)
	return t
}

// Set__InstanceType updates property "InstanceType".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__InstanceType(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.InstanceType = v
	return t
}

// SetV__InstanceType updates property "InstanceType".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__InstanceType(v string) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.InstanceType = cfz.V(v)
	return t
}

// Set__KernelId updates property "KernelId".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__KernelId(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.KernelId = v
	return t
}

// SetV__KernelId updates property "KernelId".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__KernelId(v string) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.KernelId = cfz.V(v)
	return t
}

// Set__KeyName updates property "KeyName".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__KeyName(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.KeyName = v
	return t
}

// SetV__KeyName updates property "KeyName".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__KeyName(v string) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.KeyName = cfz.V(v)
	return t
}

// Set__Monitoring updates property "Monitoring".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__Monitoring(v cfz.Expression[AWS_EC2_SpotFleet_SpotFleetMonitoring]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.Monitoring = v
	return t
}

// SetV__Monitoring updates property "Monitoring".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__Monitoring(v AWS_EC2_SpotFleet_SpotFleetMonitoring) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.Monitoring = cfz.V(v)
	return t
}

// Set__NetworkInterfaces updates property "NetworkInterfaces".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__NetworkInterfaces(v cfz.ExpressionSlice[AWS_EC2_SpotFleet_InstanceNetworkInterfaceSpecification]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.NetworkInterfaces = v
	return t
}

// SetS__NetworkInterfaces updates property "NetworkInterfaces".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetS__NetworkInterfaces(v ...cfz.Expression[AWS_EC2_SpotFleet_InstanceNetworkInterfaceSpecification]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.NetworkInterfaces = cfz.S(v...)
	return t
}

// SetSV__NetworkInterfaces updates property "NetworkInterfaces".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetSV__NetworkInterfaces(v ...AWS_EC2_SpotFleet_InstanceNetworkInterfaceSpecification) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.NetworkInterfaces = cfz.SV(v...)
	return t
}

// Set__Placement updates property "Placement".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__Placement(v cfz.Expression[AWS_EC2_SpotFleet_SpotPlacement]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.Placement = v
	return t
}

// SetV__Placement updates property "Placement".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__Placement(v AWS_EC2_SpotFleet_SpotPlacement) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.Placement = cfz.V(v)
	return t
}

// Set__RamdiskId updates property "RamdiskId".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__RamdiskId(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.RamdiskId = v
	return t
}

// SetV__RamdiskId updates property "RamdiskId".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__RamdiskId(v string) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.RamdiskId = cfz.V(v)
	return t
}

// Set__SecurityGroups updates property "SecurityGroups".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__SecurityGroups(v cfz.ExpressionSlice[AWS_EC2_SpotFleet_GroupIdentifier]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.SecurityGroups = v
	return t
}

// SetS__SecurityGroups updates property "SecurityGroups".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetS__SecurityGroups(v ...cfz.Expression[AWS_EC2_SpotFleet_GroupIdentifier]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.SecurityGroups = cfz.S(v...)
	return t
}

// SetSV__SecurityGroups updates property "SecurityGroups".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetSV__SecurityGroups(v ...AWS_EC2_SpotFleet_GroupIdentifier) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.SecurityGroups = cfz.SV(v...)
	return t
}

// Set__SpotPrice updates property "SpotPrice".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__SpotPrice(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.SpotPrice = v
	return t
}

// SetV__SpotPrice updates property "SpotPrice".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__SpotPrice(v string) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.SpotPrice = cfz.V(v)
	return t
}

// Set__SubnetId updates property "SubnetId".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__SubnetId(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.SubnetId = v
	return t
}

// SetV__SubnetId updates property "SubnetId".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__SubnetId(v string) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.SubnetId = cfz.V(v)
	return t
}

// Set__TagSpecifications updates property "TagSpecifications".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__TagSpecifications(v cfz.ExpressionSlice[AWS_EC2_SpotFleet_SpotFleetTagSpecification]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.TagSpecifications = v
	return t
}

// SetS__TagSpecifications updates property "TagSpecifications".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetS__TagSpecifications(v ...cfz.Expression[AWS_EC2_SpotFleet_SpotFleetTagSpecification]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.TagSpecifications = cfz.S(v...)
	return t
}

// SetSV__TagSpecifications updates property "TagSpecifications".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetSV__TagSpecifications(v ...AWS_EC2_SpotFleet_SpotFleetTagSpecification) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.TagSpecifications = cfz.SV(v...)
	return t
}

// Set__UserData updates property "UserData".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__UserData(v cfz.Expression[string]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.UserData = v
	return t
}

// SetV__UserData updates property "UserData".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__UserData(v string) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.UserData = cfz.V(v)
	return t
}

// Set__WeightedCapacity updates property "WeightedCapacity".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) Set__WeightedCapacity(v cfz.Expression[float64]) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.WeightedCapacity = v
	return t
}

// SetV__WeightedCapacity updates property "WeightedCapacity".
func (t AWS_EC2_SpotFleet_SpotFleetLaunchSpecification) SetV__WeightedCapacity(v float64) AWS_EC2_SpotFleet_SpotFleetLaunchSpecification {
	t.WeightedCapacity = cfz.V(v)
	return t
}
