// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_Volume)(nil)
	_ cfz.Resource                   = (*AWS_EC2_Volume)(nil)
)

const (
	// AWS_EC2_Volume__Type is the CloudFormation type for AWS::EC2::Volume.
	AWS_EC2_Volume__Type = "AWS::EC2::Volume"
)

var (
	// AWS_EC2_Volume__AttributesMap reports all the CloudFormation attributes for AWS::EC2::Volume.
	AWS_EC2_Volume__AttributesMap = struct {
		VolumeId string
	}{
		VolumeId: "VolumeId",
	}

	// AWS_EC2_Volume__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::Volume.
	AWS_EC2_Volume__AttributesSlice = []string{
		AWS_EC2_Volume__AttributesMap.VolumeId,
	}
)

var (
	// AWS_EC2_Volume__PropertiesMap reports all the CloudFormation properties for AWS::EC2::Volume.
	AWS_EC2_Volume__PropertiesMap = struct {
		AutoEnableIO       string
		AvailabilityZone   string
		Encrypted          string
		Iops               string
		KmsKeyId           string
		MultiAttachEnabled string
		OutpostArn         string
		Size               string
		SnapshotId         string
		Tags               string
		Throughput         string
		VolumeType         string
	}{
		AutoEnableIO:       "AutoEnableIO",
		AvailabilityZone:   "AvailabilityZone",
		Encrypted:          "Encrypted",
		Iops:               "Iops",
		KmsKeyId:           "KmsKeyId",
		MultiAttachEnabled: "MultiAttachEnabled",
		OutpostArn:         "OutpostArn",
		Size:               "Size",
		SnapshotId:         "SnapshotId",
		Tags:               "Tags",
		Throughput:         "Throughput",
		VolumeType:         "VolumeType",
	}

	// AWS_EC2_Volume__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::Volume.
	AWS_EC2_Volume__PropertiesSlice = []string{
		AWS_EC2_Volume__PropertiesMap.AutoEnableIO,
		AWS_EC2_Volume__PropertiesMap.AvailabilityZone,
		AWS_EC2_Volume__PropertiesMap.Encrypted,
		AWS_EC2_Volume__PropertiesMap.Iops,
		AWS_EC2_Volume__PropertiesMap.KmsKeyId,
		AWS_EC2_Volume__PropertiesMap.MultiAttachEnabled,
		AWS_EC2_Volume__PropertiesMap.OutpostArn,
		AWS_EC2_Volume__PropertiesMap.Size,
		AWS_EC2_Volume__PropertiesMap.SnapshotId,
		AWS_EC2_Volume__PropertiesMap.Tags,
		AWS_EC2_Volume__PropertiesMap.Throughput,
		AWS_EC2_Volume__PropertiesMap.VolumeType,
	}
)

// AWS_EC2_Volume is a binding for AWS::EC2::Volume.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html
type AWS_EC2_Volume struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AutoEnableIO is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-autoenableio
	AutoEnableIO cfz.Expression[bool] `json:"AutoEnableIO,omitempty"`

	// AvailabilityZone is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-availabilityzone
	AvailabilityZone cfz.Expression[string] `json:"AvailabilityZone,omitempty"`

	// Encrypted is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-encrypted
	Encrypted cfz.Expression[bool] `json:"Encrypted,omitempty"`

	// Iops is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-iops
	Iops cfz.Expression[int32] `json:"Iops,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// MultiAttachEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-multiattachenabled
	MultiAttachEnabled cfz.Expression[bool] `json:"MultiAttachEnabled,omitempty"`

	// OutpostArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-outpostarn
	OutpostArn cfz.Expression[string] `json:"OutpostArn,omitempty"`

	// Size is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-size
	Size cfz.Expression[int32] `json:"Size,omitempty"`

	// SnapshotId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-snapshotid
	SnapshotId cfz.Expression[string] `json:"SnapshotId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Throughput is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-throughput
	Throughput cfz.Expression[int32] `json:"Throughput,omitempty"`

	// VolumeType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-volume.html#cfn-ec2-volume-volumetype
	VolumeType cfz.Expression[string] `json:"VolumeType,omitempty"`
}

// New__AWS_EC2_Volume initializes a new *AWS_EC2_Volume.
func New__AWS_EC2_Volume(logicalName string) *AWS_EC2_Volume {
	return &AWS_EC2_Volume{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_Volume) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_Volume) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_Volume) GetType() string {
	return AWS_EC2_Volume__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_Volume) Set__LogicalName(v string) *AWS_EC2_Volume {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_Volume) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_Volume {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_Volume) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_Volume {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_Volume) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_Volume {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_Volume) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_Volume {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_Volume) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_Volume {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_Volume) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_Volume {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AutoEnableIO updates property "AutoEnableIO".
func (t *AWS_EC2_Volume) Set__AutoEnableIO(v cfz.Expression[bool]) *AWS_EC2_Volume {
	t.AutoEnableIO = v
	return t
}

// SetV__AutoEnableIO updates property "AutoEnableIO".
func (t *AWS_EC2_Volume) SetV__AutoEnableIO(v bool) *AWS_EC2_Volume {
	t.AutoEnableIO = cfz.V(v)
	return t
}

// Set__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_EC2_Volume) Set__AvailabilityZone(v cfz.Expression[string]) *AWS_EC2_Volume {
	t.AvailabilityZone = v
	return t
}

// SetV__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_EC2_Volume) SetV__AvailabilityZone(v string) *AWS_EC2_Volume {
	t.AvailabilityZone = cfz.V(v)
	return t
}

// Set__Encrypted updates property "Encrypted".
func (t *AWS_EC2_Volume) Set__Encrypted(v cfz.Expression[bool]) *AWS_EC2_Volume {
	t.Encrypted = v
	return t
}

// SetV__Encrypted updates property "Encrypted".
func (t *AWS_EC2_Volume) SetV__Encrypted(v bool) *AWS_EC2_Volume {
	t.Encrypted = cfz.V(v)
	return t
}

// Set__Iops updates property "Iops".
func (t *AWS_EC2_Volume) Set__Iops(v cfz.Expression[int32]) *AWS_EC2_Volume {
	t.Iops = v
	return t
}

// SetV__Iops updates property "Iops".
func (t *AWS_EC2_Volume) SetV__Iops(v int32) *AWS_EC2_Volume {
	t.Iops = cfz.V(v)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_EC2_Volume) Set__KmsKeyId(v cfz.Expression[string]) *AWS_EC2_Volume {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_EC2_Volume) SetV__KmsKeyId(v string) *AWS_EC2_Volume {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__MultiAttachEnabled updates property "MultiAttachEnabled".
func (t *AWS_EC2_Volume) Set__MultiAttachEnabled(v cfz.Expression[bool]) *AWS_EC2_Volume {
	t.MultiAttachEnabled = v
	return t
}

// SetV__MultiAttachEnabled updates property "MultiAttachEnabled".
func (t *AWS_EC2_Volume) SetV__MultiAttachEnabled(v bool) *AWS_EC2_Volume {
	t.MultiAttachEnabled = cfz.V(v)
	return t
}

// Set__OutpostArn updates property "OutpostArn".
func (t *AWS_EC2_Volume) Set__OutpostArn(v cfz.Expression[string]) *AWS_EC2_Volume {
	t.OutpostArn = v
	return t
}

// SetV__OutpostArn updates property "OutpostArn".
func (t *AWS_EC2_Volume) SetV__OutpostArn(v string) *AWS_EC2_Volume {
	t.OutpostArn = cfz.V(v)
	return t
}

// Set__Size updates property "Size".
func (t *AWS_EC2_Volume) Set__Size(v cfz.Expression[int32]) *AWS_EC2_Volume {
	t.Size = v
	return t
}

// SetV__Size updates property "Size".
func (t *AWS_EC2_Volume) SetV__Size(v int32) *AWS_EC2_Volume {
	t.Size = cfz.V(v)
	return t
}

// Set__SnapshotId updates property "SnapshotId".
func (t *AWS_EC2_Volume) Set__SnapshotId(v cfz.Expression[string]) *AWS_EC2_Volume {
	t.SnapshotId = v
	return t
}

// SetV__SnapshotId updates property "SnapshotId".
func (t *AWS_EC2_Volume) SetV__SnapshotId(v string) *AWS_EC2_Volume {
	t.SnapshotId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_Volume) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_Volume {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_Volume) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_Volume {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_Volume) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_Volume {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Throughput updates property "Throughput".
func (t *AWS_EC2_Volume) Set__Throughput(v cfz.Expression[int32]) *AWS_EC2_Volume {
	t.Throughput = v
	return t
}

// SetV__Throughput updates property "Throughput".
func (t *AWS_EC2_Volume) SetV__Throughput(v int32) *AWS_EC2_Volume {
	t.Throughput = cfz.V(v)
	return t
}

// Set__VolumeType updates property "VolumeType".
func (t *AWS_EC2_Volume) Set__VolumeType(v cfz.Expression[string]) *AWS_EC2_Volume {
	t.VolumeType = v
	return t
}

// SetV__VolumeType updates property "VolumeType".
func (t *AWS_EC2_Volume) SetV__VolumeType(v string) *AWS_EC2_Volume {
	t.VolumeType = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_Volume) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__VolumeId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VolumeId
func (t *AWS_EC2_Volume) GetAtt__VolumeId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_Volume__AttributesMap.VolumeId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_Volume) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VolumeId returns a conventionally configured output for an attribute of this resource.
// Attribute: VolumeId
func (t *AWS_EC2_Volume) GetConventionalOutputAtt__VolumeId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVolumeId", t.GetAtt__VolumeId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_Volume) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_Volume

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_Volume) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
