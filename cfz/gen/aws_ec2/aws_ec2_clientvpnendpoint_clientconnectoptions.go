// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_ClientVpnEndpoint_ClientConnectOptions__Type is the CloudFormation type for AWS::EC2::ClientVpnEndpoint.ClientConnectOptions.
	AWS_EC2_ClientVpnEndpoint_ClientConnectOptions__Type = "AWS::EC2::ClientVpnEndpoint.ClientConnectOptions"
)

var (
	// AWS_EC2_ClientVpnEndpoint_ClientConnectOptions__PropertiesMap reports all the CloudFormation properties for AWS::EC2::ClientVpnEndpoint.ClientConnectOptions.
	AWS_EC2_ClientVpnEndpoint_ClientConnectOptions__PropertiesMap = struct {
		Enabled           string
		LambdaFunctionArn string
	}{
		Enabled:           "Enabled",
		LambdaFunctionArn: "LambdaFunctionArn",
	}

	// AWS_EC2_ClientVpnEndpoint_ClientConnectOptions__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::ClientVpnEndpoint.ClientConnectOptions.
	AWS_EC2_ClientVpnEndpoint_ClientConnectOptions__PropertiesSlice = []string{
		AWS_EC2_ClientVpnEndpoint_ClientConnectOptions__PropertiesMap.Enabled,
		AWS_EC2_ClientVpnEndpoint_ClientConnectOptions__PropertiesMap.LambdaFunctionArn,
	}
)

// AWS_EC2_ClientVpnEndpoint_ClientConnectOptions is a binding for AWS::EC2::ClientVpnEndpoint.ClientConnectOptions.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html
type AWS_EC2_ClientVpnEndpoint_ClientConnectOptions struct {
	// Enabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html#cfn-ec2-clientvpnendpoint-clientconnectoptions-enabled
	Enabled cfz.Expression[bool] `json:"Enabled,omitempty"`

	// LambdaFunctionArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-clientvpnendpoint-clientconnectoptions.html#cfn-ec2-clientvpnendpoint-clientconnectoptions-lambdafunctionarn
	LambdaFunctionArn cfz.Expression[string] `json:"LambdaFunctionArn,omitempty"`
}

// New__AWS_EC2_ClientVpnEndpoint_ClientConnectOptions initializes a new AWS_EC2_ClientVpnEndpoint_ClientConnectOptions.
func New__AWS_EC2_ClientVpnEndpoint_ClientConnectOptions() AWS_EC2_ClientVpnEndpoint_ClientConnectOptions {
	return AWS_EC2_ClientVpnEndpoint_ClientConnectOptions{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_ClientVpnEndpoint_ClientConnectOptions) GetType() string {
	return AWS_EC2_ClientVpnEndpoint_ClientConnectOptions__Type
}

// Set__Enabled updates property "Enabled".
func (t AWS_EC2_ClientVpnEndpoint_ClientConnectOptions) Set__Enabled(v cfz.Expression[bool]) AWS_EC2_ClientVpnEndpoint_ClientConnectOptions {
	t.Enabled = v
	return t
}

// SetV__Enabled updates property "Enabled".
func (t AWS_EC2_ClientVpnEndpoint_ClientConnectOptions) SetV__Enabled(v bool) AWS_EC2_ClientVpnEndpoint_ClientConnectOptions {
	t.Enabled = cfz.V(v)
	return t
}

// Set__LambdaFunctionArn updates property "LambdaFunctionArn".
func (t AWS_EC2_ClientVpnEndpoint_ClientConnectOptions) Set__LambdaFunctionArn(v cfz.Expression[string]) AWS_EC2_ClientVpnEndpoint_ClientConnectOptions {
	t.LambdaFunctionArn = v
	return t
}

// SetV__LambdaFunctionArn updates property "LambdaFunctionArn".
func (t AWS_EC2_ClientVpnEndpoint_ClientConnectOptions) SetV__LambdaFunctionArn(v string) AWS_EC2_ClientVpnEndpoint_ClientConnectOptions {
	t.LambdaFunctionArn = cfz.V(v)
	return t
}
