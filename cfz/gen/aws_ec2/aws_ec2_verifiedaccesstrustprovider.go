// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VerifiedAccessTrustProvider)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VerifiedAccessTrustProvider)(nil)
)

const (
	// AWS_EC2_VerifiedAccessTrustProvider__Type is the CloudFormation type for AWS::EC2::VerifiedAccessTrustProvider.
	AWS_EC2_VerifiedAccessTrustProvider__Type = "AWS::EC2::VerifiedAccessTrustProvider"
)

var (
	// AWS_EC2_VerifiedAccessTrustProvider__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VerifiedAccessTrustProvider.
	AWS_EC2_VerifiedAccessTrustProvider__AttributesMap = struct {
		CreationTime                  string
		LastUpdatedTime               string
		VerifiedAccessTrustProviderId string
	}{
		CreationTime:                  "CreationTime",
		LastUpdatedTime:               "LastUpdatedTime",
		VerifiedAccessTrustProviderId: "VerifiedAccessTrustProviderId",
	}

	// AWS_EC2_VerifiedAccessTrustProvider__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VerifiedAccessTrustProvider.
	AWS_EC2_VerifiedAccessTrustProvider__AttributesSlice = []string{
		AWS_EC2_VerifiedAccessTrustProvider__AttributesMap.CreationTime,
		AWS_EC2_VerifiedAccessTrustProvider__AttributesMap.LastUpdatedTime,
		AWS_EC2_VerifiedAccessTrustProvider__AttributesMap.VerifiedAccessTrustProviderId,
	}
)

var (
	// AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VerifiedAccessTrustProvider.
	AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap = struct {
		Description             string
		DeviceOptions           string
		DeviceTrustProviderType string
		OidcOptions             string
		PolicyReferenceName     string
		SseSpecification        string
		Tags                    string
		TrustProviderType       string
		UserTrustProviderType   string
	}{
		Description:             "Description",
		DeviceOptions:           "DeviceOptions",
		DeviceTrustProviderType: "DeviceTrustProviderType",
		OidcOptions:             "OidcOptions",
		PolicyReferenceName:     "PolicyReferenceName",
		SseSpecification:        "SseSpecification",
		Tags:                    "Tags",
		TrustProviderType:       "TrustProviderType",
		UserTrustProviderType:   "UserTrustProviderType",
	}

	// AWS_EC2_VerifiedAccessTrustProvider__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VerifiedAccessTrustProvider.
	AWS_EC2_VerifiedAccessTrustProvider__PropertiesSlice = []string{
		AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap.Description,
		AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap.DeviceOptions,
		AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap.DeviceTrustProviderType,
		AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap.OidcOptions,
		AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap.PolicyReferenceName,
		AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap.SseSpecification,
		AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap.Tags,
		AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap.TrustProviderType,
		AWS_EC2_VerifiedAccessTrustProvider__PropertiesMap.UserTrustProviderType,
	}
)

// AWS_EC2_VerifiedAccessTrustProvider is a binding for AWS::EC2::VerifiedAccessTrustProvider.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html
type AWS_EC2_VerifiedAccessTrustProvider struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// DeviceOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-deviceoptions
	DeviceOptions cfz.Expression[AWS_EC2_VerifiedAccessTrustProvider_DeviceOptions] `json:"DeviceOptions,omitempty"`

	// DeviceTrustProviderType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-devicetrustprovidertype
	DeviceTrustProviderType cfz.Expression[string] `json:"DeviceTrustProviderType,omitempty"`

	// OidcOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-oidcoptions
	OidcOptions cfz.Expression[AWS_EC2_VerifiedAccessTrustProvider_OidcOptions] `json:"OidcOptions,omitempty"`

	// PolicyReferenceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-policyreferencename
	PolicyReferenceName cfz.Expression[string] `json:"PolicyReferenceName,omitempty"`

	// SseSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-ssespecification
	SseSpecification cfz.Expression[AWS_EC2_VerifiedAccessTrustProvider_SseSpecification] `json:"SseSpecification,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TrustProviderType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-trustprovidertype
	TrustProviderType cfz.Expression[string] `json:"TrustProviderType,omitempty"`

	// UserTrustProviderType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccesstrustprovider.html#cfn-ec2-verifiedaccesstrustprovider-usertrustprovidertype
	UserTrustProviderType cfz.Expression[string] `json:"UserTrustProviderType,omitempty"`
}

// New__AWS_EC2_VerifiedAccessTrustProvider initializes a new *AWS_EC2_VerifiedAccessTrustProvider.
func New__AWS_EC2_VerifiedAccessTrustProvider(logicalName string) *AWS_EC2_VerifiedAccessTrustProvider {
	return &AWS_EC2_VerifiedAccessTrustProvider{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VerifiedAccessTrustProvider) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VerifiedAccessTrustProvider) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VerifiedAccessTrustProvider) GetType() string {
	return AWS_EC2_VerifiedAccessTrustProvider__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__LogicalName(v string) *AWS_EC2_VerifiedAccessTrustProvider {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VerifiedAccessTrustProvider {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VerifiedAccessTrustProvider {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VerifiedAccessTrustProvider {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VerifiedAccessTrustProvider {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VerifiedAccessTrustProvider {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VerifiedAccessTrustProvider {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__Description(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetV__Description(v string) *AWS_EC2_VerifiedAccessTrustProvider {
	t.Description = cfz.V(v)
	return t
}

// Set__DeviceOptions updates property "DeviceOptions".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__DeviceOptions(v cfz.Expression[AWS_EC2_VerifiedAccessTrustProvider_DeviceOptions]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.DeviceOptions = v
	return t
}

// SetV__DeviceOptions updates property "DeviceOptions".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetV__DeviceOptions(v AWS_EC2_VerifiedAccessTrustProvider_DeviceOptions) *AWS_EC2_VerifiedAccessTrustProvider {
	t.DeviceOptions = cfz.V(v)
	return t
}

// Set__DeviceTrustProviderType updates property "DeviceTrustProviderType".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__DeviceTrustProviderType(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.DeviceTrustProviderType = v
	return t
}

// SetV__DeviceTrustProviderType updates property "DeviceTrustProviderType".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetV__DeviceTrustProviderType(v string) *AWS_EC2_VerifiedAccessTrustProvider {
	t.DeviceTrustProviderType = cfz.V(v)
	return t
}

// Set__OidcOptions updates property "OidcOptions".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__OidcOptions(v cfz.Expression[AWS_EC2_VerifiedAccessTrustProvider_OidcOptions]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.OidcOptions = v
	return t
}

// SetV__OidcOptions updates property "OidcOptions".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetV__OidcOptions(v AWS_EC2_VerifiedAccessTrustProvider_OidcOptions) *AWS_EC2_VerifiedAccessTrustProvider {
	t.OidcOptions = cfz.V(v)
	return t
}

// Set__PolicyReferenceName updates property "PolicyReferenceName".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__PolicyReferenceName(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.PolicyReferenceName = v
	return t
}

// SetV__PolicyReferenceName updates property "PolicyReferenceName".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetV__PolicyReferenceName(v string) *AWS_EC2_VerifiedAccessTrustProvider {
	t.PolicyReferenceName = cfz.V(v)
	return t
}

// Set__SseSpecification updates property "SseSpecification".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__SseSpecification(v cfz.Expression[AWS_EC2_VerifiedAccessTrustProvider_SseSpecification]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.SseSpecification = v
	return t
}

// SetV__SseSpecification updates property "SseSpecification".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetV__SseSpecification(v AWS_EC2_VerifiedAccessTrustProvider_SseSpecification) *AWS_EC2_VerifiedAccessTrustProvider {
	t.SseSpecification = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_VerifiedAccessTrustProvider {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TrustProviderType updates property "TrustProviderType".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__TrustProviderType(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.TrustProviderType = v
	return t
}

// SetV__TrustProviderType updates property "TrustProviderType".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetV__TrustProviderType(v string) *AWS_EC2_VerifiedAccessTrustProvider {
	t.TrustProviderType = cfz.V(v)
	return t
}

// Set__UserTrustProviderType updates property "UserTrustProviderType".
func (t *AWS_EC2_VerifiedAccessTrustProvider) Set__UserTrustProviderType(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessTrustProvider {
	t.UserTrustProviderType = v
	return t
}

// SetV__UserTrustProviderType updates property "UserTrustProviderType".
func (t *AWS_EC2_VerifiedAccessTrustProvider) SetV__UserTrustProviderType(v string) *AWS_EC2_VerifiedAccessTrustProvider {
	t.UserTrustProviderType = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VerifiedAccessTrustProvider) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_EC2_VerifiedAccessTrustProvider) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessTrustProvider__AttributesMap.CreationTime))
}

// GetAtt__LastUpdatedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastUpdatedTime
func (t *AWS_EC2_VerifiedAccessTrustProvider) GetAtt__LastUpdatedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessTrustProvider__AttributesMap.LastUpdatedTime))
}

// GetAtt__VerifiedAccessTrustProviderId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VerifiedAccessTrustProviderId
func (t *AWS_EC2_VerifiedAccessTrustProvider) GetAtt__VerifiedAccessTrustProviderId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessTrustProvider__AttributesMap.VerifiedAccessTrustProviderId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VerifiedAccessTrustProvider) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_EC2_VerifiedAccessTrustProvider) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastUpdatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastUpdatedTime
func (t *AWS_EC2_VerifiedAccessTrustProvider) GetConventionalOutputAtt__LastUpdatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastUpdatedTime", t.GetAtt__LastUpdatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VerifiedAccessTrustProviderId returns a conventionally configured output for an attribute of this resource.
// Attribute: VerifiedAccessTrustProviderId
func (t *AWS_EC2_VerifiedAccessTrustProvider) GetConventionalOutputAtt__VerifiedAccessTrustProviderId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVerifiedAccessTrustProviderId", t.GetAtt__VerifiedAccessTrustProviderId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VerifiedAccessTrustProvider) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VerifiedAccessTrustProvider

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VerifiedAccessTrustProvider) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
