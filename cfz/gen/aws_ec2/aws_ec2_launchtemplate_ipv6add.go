// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_LaunchTemplate_Ipv6Add__Type is the CloudFormation type for AWS::EC2::LaunchTemplate.Ipv6Add.
	AWS_EC2_LaunchTemplate_Ipv6Add__Type = "AWS::EC2::LaunchTemplate.Ipv6Add"
)

var (
	// AWS_EC2_LaunchTemplate_Ipv6Add__PropertiesMap reports all the CloudFormation properties for AWS::EC2::LaunchTemplate.Ipv6Add.
	AWS_EC2_LaunchTemplate_Ipv6Add__PropertiesMap = struct {
		Ipv6Address string
	}{
		Ipv6Address: "Ipv6Address",
	}

	// AWS_EC2_LaunchTemplate_Ipv6Add__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::LaunchTemplate.Ipv6Add.
	AWS_EC2_LaunchTemplate_Ipv6Add__PropertiesSlice = []string{
		AWS_EC2_LaunchTemplate_Ipv6Add__PropertiesMap.Ipv6Address,
	}
)

// AWS_EC2_LaunchTemplate_Ipv6Add is a binding for AWS::EC2::LaunchTemplate.Ipv6Add.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html
type AWS_EC2_LaunchTemplate_Ipv6Add struct {
	// Ipv6Address is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-launchtemplate-ipv6add.html#cfn-ec2-launchtemplate-ipv6add-ipv6address
	Ipv6Address cfz.Expression[string] `json:"Ipv6Address,omitempty"`
}

// New__AWS_EC2_LaunchTemplate_Ipv6Add initializes a new AWS_EC2_LaunchTemplate_Ipv6Add.
func New__AWS_EC2_LaunchTemplate_Ipv6Add() AWS_EC2_LaunchTemplate_Ipv6Add {
	return AWS_EC2_LaunchTemplate_Ipv6Add{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_LaunchTemplate_Ipv6Add) GetType() string {
	return AWS_EC2_LaunchTemplate_Ipv6Add__Type
}

// Set__Ipv6Address updates property "Ipv6Address".
func (t AWS_EC2_LaunchTemplate_Ipv6Add) Set__Ipv6Address(v cfz.Expression[string]) AWS_EC2_LaunchTemplate_Ipv6Add {
	t.Ipv6Address = v
	return t
}

// SetV__Ipv6Address updates property "Ipv6Address".
func (t AWS_EC2_LaunchTemplate_Ipv6Add) SetV__Ipv6Address(v string) AWS_EC2_LaunchTemplate_Ipv6Add {
	t.Ipv6Address = cfz.V(v)
	return t
}
