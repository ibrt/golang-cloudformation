// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VPCDHCPOptionsAssociation)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VPCDHCPOptionsAssociation)(nil)
)

const (
	// AWS_EC2_VPCDHCPOptionsAssociation__Type is the CloudFormation type for AWS::EC2::VPCDHCPOptionsAssociation.
	AWS_EC2_VPCDHCPOptionsAssociation__Type = "AWS::EC2::VPCDHCPOptionsAssociation"
)

var (
	// AWS_EC2_VPCDHCPOptionsAssociation__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VPCDHCPOptionsAssociation.
	AWS_EC2_VPCDHCPOptionsAssociation__PropertiesMap = struct {
		DhcpOptionsId string
		VpcId         string
	}{
		DhcpOptionsId: "DhcpOptionsId",
		VpcId:         "VpcId",
	}

	// AWS_EC2_VPCDHCPOptionsAssociation__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VPCDHCPOptionsAssociation.
	AWS_EC2_VPCDHCPOptionsAssociation__PropertiesSlice = []string{
		AWS_EC2_VPCDHCPOptionsAssociation__PropertiesMap.DhcpOptionsId,
		AWS_EC2_VPCDHCPOptionsAssociation__PropertiesMap.VpcId,
	}
)

// AWS_EC2_VPCDHCPOptionsAssociation is a binding for AWS::EC2::VPCDHCPOptionsAssociation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html
type AWS_EC2_VPCDHCPOptionsAssociation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DhcpOptionsId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-dhcpoptionsid
	DhcpOptionsId cfz.Expression[string] `json:"DhcpOptionsId,omitempty"`

	// VpcId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcdhcpoptionsassociation.html#cfn-ec2-vpcdhcpoptionsassociation-vpcid
	VpcId cfz.Expression[string] `json:"VpcId,omitempty"`
}

// New__AWS_EC2_VPCDHCPOptionsAssociation initializes a new *AWS_EC2_VPCDHCPOptionsAssociation.
func New__AWS_EC2_VPCDHCPOptionsAssociation(logicalName string) *AWS_EC2_VPCDHCPOptionsAssociation {
	return &AWS_EC2_VPCDHCPOptionsAssociation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VPCDHCPOptionsAssociation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VPCDHCPOptionsAssociation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VPCDHCPOptionsAssociation) GetType() string {
	return AWS_EC2_VPCDHCPOptionsAssociation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Set__LogicalName(v string) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DhcpOptionsId updates property "DhcpOptionsId".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Set__DhcpOptionsId(v cfz.Expression[string]) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.DhcpOptionsId = v
	return t
}

// SetV__DhcpOptionsId updates property "DhcpOptionsId".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) SetV__DhcpOptionsId(v string) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.DhcpOptionsId = cfz.V(v)
	return t
}

// Set__VpcId updates property "VpcId".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Set__VpcId(v cfz.Expression[string]) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.VpcId = v
	return t
}

// SetV__VpcId updates property "VpcId".
func (t *AWS_EC2_VPCDHCPOptionsAssociation) SetV__VpcId(v string) *AWS_EC2_VPCDHCPOptionsAssociation {
	t.VpcId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VPCDHCPOptionsAssociation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VPCDHCPOptionsAssociation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VPCDHCPOptionsAssociation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VPCDHCPOptionsAssociation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VPCDHCPOptionsAssociation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
