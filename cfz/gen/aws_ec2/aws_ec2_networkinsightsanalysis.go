// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_NetworkInsightsAnalysis)(nil)
	_ cfz.Resource                   = (*AWS_EC2_NetworkInsightsAnalysis)(nil)
)

const (
	// AWS_EC2_NetworkInsightsAnalysis__Type is the CloudFormation type for AWS::EC2::NetworkInsightsAnalysis.
	AWS_EC2_NetworkInsightsAnalysis__Type = "AWS::EC2::NetworkInsightsAnalysis"
)

var (
	// AWS_EC2_NetworkInsightsAnalysis__AttributesMap reports all the CloudFormation attributes for AWS::EC2::NetworkInsightsAnalysis.
	AWS_EC2_NetworkInsightsAnalysis__AttributesMap = struct {
		AlternatePathHints         string
		Explanations               string
		ForwardPathComponents      string
		NetworkInsightsAnalysisArn string
		NetworkInsightsAnalysisId  string
		NetworkPathFound           string
		ReturnPathComponents       string
		StartDate                  string
		Status                     string
		StatusMessage              string
		SuggestedAccounts          string
	}{
		AlternatePathHints:         "AlternatePathHints",
		Explanations:               "Explanations",
		ForwardPathComponents:      "ForwardPathComponents",
		NetworkInsightsAnalysisArn: "NetworkInsightsAnalysisArn",
		NetworkInsightsAnalysisId:  "NetworkInsightsAnalysisId",
		NetworkPathFound:           "NetworkPathFound",
		ReturnPathComponents:       "ReturnPathComponents",
		StartDate:                  "StartDate",
		Status:                     "Status",
		StatusMessage:              "StatusMessage",
		SuggestedAccounts:          "SuggestedAccounts",
	}

	// AWS_EC2_NetworkInsightsAnalysis__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::NetworkInsightsAnalysis.
	AWS_EC2_NetworkInsightsAnalysis__AttributesSlice = []string{
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.AlternatePathHints,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.Explanations,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.ForwardPathComponents,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.NetworkInsightsAnalysisArn,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.NetworkInsightsAnalysisId,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.NetworkPathFound,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.ReturnPathComponents,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.StartDate,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.Status,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.StatusMessage,
		AWS_EC2_NetworkInsightsAnalysis__AttributesMap.SuggestedAccounts,
	}
)

var (
	// AWS_EC2_NetworkInsightsAnalysis__PropertiesMap reports all the CloudFormation properties for AWS::EC2::NetworkInsightsAnalysis.
	AWS_EC2_NetworkInsightsAnalysis__PropertiesMap = struct {
		AdditionalAccounts    string
		FilterInArns          string
		NetworkInsightsPathId string
		Tags                  string
	}{
		AdditionalAccounts:    "AdditionalAccounts",
		FilterInArns:          "FilterInArns",
		NetworkInsightsPathId: "NetworkInsightsPathId",
		Tags:                  "Tags",
	}

	// AWS_EC2_NetworkInsightsAnalysis__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::NetworkInsightsAnalysis.
	AWS_EC2_NetworkInsightsAnalysis__PropertiesSlice = []string{
		AWS_EC2_NetworkInsightsAnalysis__PropertiesMap.AdditionalAccounts,
		AWS_EC2_NetworkInsightsAnalysis__PropertiesMap.FilterInArns,
		AWS_EC2_NetworkInsightsAnalysis__PropertiesMap.NetworkInsightsPathId,
		AWS_EC2_NetworkInsightsAnalysis__PropertiesMap.Tags,
	}
)

// AWS_EC2_NetworkInsightsAnalysis is a binding for AWS::EC2::NetworkInsightsAnalysis.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html
type AWS_EC2_NetworkInsightsAnalysis struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AdditionalAccounts is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-additionalaccounts
	AdditionalAccounts cfz.ExpressionSlice[string] `json:"AdditionalAccounts,omitempty"`

	// FilterInArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-filterinarns
	FilterInArns cfz.ExpressionSlice[string] `json:"FilterInArns,omitempty"`

	// NetworkInsightsPathId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-networkinsightspathid
	NetworkInsightsPathId cfz.Expression[string] `json:"NetworkInsightsPathId,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-networkinsightsanalysis.html#cfn-ec2-networkinsightsanalysis-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_EC2_NetworkInsightsAnalysis initializes a new *AWS_EC2_NetworkInsightsAnalysis.
func New__AWS_EC2_NetworkInsightsAnalysis(logicalName string) *AWS_EC2_NetworkInsightsAnalysis {
	return &AWS_EC2_NetworkInsightsAnalysis{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_NetworkInsightsAnalysis) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_NetworkInsightsAnalysis) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_NetworkInsightsAnalysis) GetType() string {
	return AWS_EC2_NetworkInsightsAnalysis__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_NetworkInsightsAnalysis) Set__LogicalName(v string) *AWS_EC2_NetworkInsightsAnalysis {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_NetworkInsightsAnalysis) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_NetworkInsightsAnalysis {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_NetworkInsightsAnalysis) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_NetworkInsightsAnalysis {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_NetworkInsightsAnalysis) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_NetworkInsightsAnalysis {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_NetworkInsightsAnalysis) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_NetworkInsightsAnalysis {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_NetworkInsightsAnalysis) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_NetworkInsightsAnalysis {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_NetworkInsightsAnalysis) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_NetworkInsightsAnalysis {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AdditionalAccounts updates property "AdditionalAccounts".
func (t *AWS_EC2_NetworkInsightsAnalysis) Set__AdditionalAccounts(v cfz.ExpressionSlice[string]) *AWS_EC2_NetworkInsightsAnalysis {
	t.AdditionalAccounts = v
	return t
}

// SetS__AdditionalAccounts updates property "AdditionalAccounts".
func (t *AWS_EC2_NetworkInsightsAnalysis) SetS__AdditionalAccounts(v ...cfz.Expression[string]) *AWS_EC2_NetworkInsightsAnalysis {
	t.AdditionalAccounts = cfz.S(v...)
	return t
}

// SetSV__AdditionalAccounts updates property "AdditionalAccounts".
func (t *AWS_EC2_NetworkInsightsAnalysis) SetSV__AdditionalAccounts(v ...string) *AWS_EC2_NetworkInsightsAnalysis {
	t.AdditionalAccounts = cfz.SV(v...)
	return t
}

// Set__FilterInArns updates property "FilterInArns".
func (t *AWS_EC2_NetworkInsightsAnalysis) Set__FilterInArns(v cfz.ExpressionSlice[string]) *AWS_EC2_NetworkInsightsAnalysis {
	t.FilterInArns = v
	return t
}

// SetS__FilterInArns updates property "FilterInArns".
func (t *AWS_EC2_NetworkInsightsAnalysis) SetS__FilterInArns(v ...cfz.Expression[string]) *AWS_EC2_NetworkInsightsAnalysis {
	t.FilterInArns = cfz.S(v...)
	return t
}

// SetSV__FilterInArns updates property "FilterInArns".
func (t *AWS_EC2_NetworkInsightsAnalysis) SetSV__FilterInArns(v ...string) *AWS_EC2_NetworkInsightsAnalysis {
	t.FilterInArns = cfz.SV(v...)
	return t
}

// Set__NetworkInsightsPathId updates property "NetworkInsightsPathId".
func (t *AWS_EC2_NetworkInsightsAnalysis) Set__NetworkInsightsPathId(v cfz.Expression[string]) *AWS_EC2_NetworkInsightsAnalysis {
	t.NetworkInsightsPathId = v
	return t
}

// SetV__NetworkInsightsPathId updates property "NetworkInsightsPathId".
func (t *AWS_EC2_NetworkInsightsAnalysis) SetV__NetworkInsightsPathId(v string) *AWS_EC2_NetworkInsightsAnalysis {
	t.NetworkInsightsPathId = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_NetworkInsightsAnalysis) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_NetworkInsightsAnalysis {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_NetworkInsightsAnalysis) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_NetworkInsightsAnalysis {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_NetworkInsightsAnalysis) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_NetworkInsightsAnalysis {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_NetworkInsightsAnalysis) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAttSlice__AlternatePathHints returns a $cfz.ExpressionSlice[AWS_EC2_NetworkInsightsAnalysis_AlternatePathHint] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AlternatePathHints
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAttSlice__AlternatePathHints() cfz.ExpressionSlice[AWS_EC2_NetworkInsightsAnalysis_AlternatePathHint] {
	return cfz.GetAttSlice[AWS_EC2_NetworkInsightsAnalysis_AlternatePathHint](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.AlternatePathHints))
}

// GetAttSlice__Explanations returns a $cfz.ExpressionSlice[AWS_EC2_NetworkInsightsAnalysis_Explanation] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Explanations
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAttSlice__Explanations() cfz.ExpressionSlice[AWS_EC2_NetworkInsightsAnalysis_Explanation] {
	return cfz.GetAttSlice[AWS_EC2_NetworkInsightsAnalysis_Explanation](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.Explanations))
}

// GetAttSlice__ForwardPathComponents returns a $cfz.ExpressionSlice[AWS_EC2_NetworkInsightsAnalysis_PathComponent] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ForwardPathComponents
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAttSlice__ForwardPathComponents() cfz.ExpressionSlice[AWS_EC2_NetworkInsightsAnalysis_PathComponent] {
	return cfz.GetAttSlice[AWS_EC2_NetworkInsightsAnalysis_PathComponent](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.ForwardPathComponents))
}

// GetAtt__NetworkInsightsAnalysisArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NetworkInsightsAnalysisArn
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAtt__NetworkInsightsAnalysisArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.NetworkInsightsAnalysisArn))
}

// GetAtt__NetworkInsightsAnalysisId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NetworkInsightsAnalysisId
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAtt__NetworkInsightsAnalysisId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.NetworkInsightsAnalysisId))
}

// GetAtt__NetworkPathFound returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NetworkPathFound
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAtt__NetworkPathFound() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.NetworkPathFound))
}

// GetAttSlice__ReturnPathComponents returns a $cfz.ExpressionSlice[AWS_EC2_NetworkInsightsAnalysis_PathComponent] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ReturnPathComponents
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAttSlice__ReturnPathComponents() cfz.ExpressionSlice[AWS_EC2_NetworkInsightsAnalysis_PathComponent] {
	return cfz.GetAttSlice[AWS_EC2_NetworkInsightsAnalysis_PathComponent](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.ReturnPathComponents))
}

// GetAtt__StartDate returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StartDate
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAtt__StartDate() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.StartDate))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.Status))
}

// GetAtt__StatusMessage returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StatusMessage
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAtt__StatusMessage() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.StatusMessage))
}

// GetAttSlice__SuggestedAccounts returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: SuggestedAccounts
func (t *AWS_EC2_NetworkInsightsAnalysis) GetAttSlice__SuggestedAccounts() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_NetworkInsightsAnalysis__AttributesMap.SuggestedAccounts))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AlternatePathHints returns a conventionally configured output for an attribute of this resource.
// Attribute: AlternatePathHints
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__AlternatePathHints(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAlternatePathHints", t.GetAttSlice__AlternatePathHints())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Explanations returns a conventionally configured output for an attribute of this resource.
// Attribute: Explanations
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__Explanations(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttExplanations", t.GetAttSlice__Explanations())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ForwardPathComponents returns a conventionally configured output for an attribute of this resource.
// Attribute: ForwardPathComponents
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__ForwardPathComponents(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttForwardPathComponents", t.GetAttSlice__ForwardPathComponents())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NetworkInsightsAnalysisArn returns a conventionally configured output for an attribute of this resource.
// Attribute: NetworkInsightsAnalysisArn
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__NetworkInsightsAnalysisArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNetworkInsightsAnalysisArn", t.GetAtt__NetworkInsightsAnalysisArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NetworkInsightsAnalysisId returns a conventionally configured output for an attribute of this resource.
// Attribute: NetworkInsightsAnalysisId
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__NetworkInsightsAnalysisId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNetworkInsightsAnalysisId", t.GetAtt__NetworkInsightsAnalysisId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NetworkPathFound returns a conventionally configured output for an attribute of this resource.
// Attribute: NetworkPathFound
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__NetworkPathFound(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNetworkPathFound", t.GetAtt__NetworkPathFound())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ReturnPathComponents returns a conventionally configured output for an attribute of this resource.
// Attribute: ReturnPathComponents
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__ReturnPathComponents(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttReturnPathComponents", t.GetAttSlice__ReturnPathComponents())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StartDate returns a conventionally configured output for an attribute of this resource.
// Attribute: StartDate
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__StartDate(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStartDate", t.GetAtt__StartDate())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StatusMessage returns a conventionally configured output for an attribute of this resource.
// Attribute: StatusMessage
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__StatusMessage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatusMessage", t.GetAtt__StatusMessage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__SuggestedAccounts returns a conventionally configured output for an attribute of this resource.
// Attribute: SuggestedAccounts
func (t *AWS_EC2_NetworkInsightsAnalysis) GetConventionalOutputAtt__SuggestedAccounts(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttSuggestedAccounts", t.GetAttSlice__SuggestedAccounts())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_NetworkInsightsAnalysis) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_NetworkInsightsAnalysis

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_NetworkInsightsAnalysis) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
