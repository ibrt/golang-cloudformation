// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VPCEndpointService)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VPCEndpointService)(nil)
)

const (
	// AWS_EC2_VPCEndpointService__Type is the CloudFormation type for AWS::EC2::VPCEndpointService.
	AWS_EC2_VPCEndpointService__Type = "AWS::EC2::VPCEndpointService"
)

var (
	// AWS_EC2_VPCEndpointService__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VPCEndpointService.
	AWS_EC2_VPCEndpointService__AttributesMap = struct {
		ServiceId string
	}{
		ServiceId: "ServiceId",
	}

	// AWS_EC2_VPCEndpointService__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VPCEndpointService.
	AWS_EC2_VPCEndpointService__AttributesSlice = []string{
		AWS_EC2_VPCEndpointService__AttributesMap.ServiceId,
	}
)

var (
	// AWS_EC2_VPCEndpointService__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VPCEndpointService.
	AWS_EC2_VPCEndpointService__PropertiesMap = struct {
		AcceptanceRequired         string
		ContributorInsightsEnabled string
		GatewayLoadBalancerArns    string
		NetworkLoadBalancerArns    string
		PayerResponsibility        string
	}{
		AcceptanceRequired:         "AcceptanceRequired",
		ContributorInsightsEnabled: "ContributorInsightsEnabled",
		GatewayLoadBalancerArns:    "GatewayLoadBalancerArns",
		NetworkLoadBalancerArns:    "NetworkLoadBalancerArns",
		PayerResponsibility:        "PayerResponsibility",
	}

	// AWS_EC2_VPCEndpointService__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VPCEndpointService.
	AWS_EC2_VPCEndpointService__PropertiesSlice = []string{
		AWS_EC2_VPCEndpointService__PropertiesMap.AcceptanceRequired,
		AWS_EC2_VPCEndpointService__PropertiesMap.ContributorInsightsEnabled,
		AWS_EC2_VPCEndpointService__PropertiesMap.GatewayLoadBalancerArns,
		AWS_EC2_VPCEndpointService__PropertiesMap.NetworkLoadBalancerArns,
		AWS_EC2_VPCEndpointService__PropertiesMap.PayerResponsibility,
	}
)

// AWS_EC2_VPCEndpointService is a binding for AWS::EC2::VPCEndpointService.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html
type AWS_EC2_VPCEndpointService struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AcceptanceRequired is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-acceptancerequired
	AcceptanceRequired cfz.Expression[bool] `json:"AcceptanceRequired,omitempty"`

	// ContributorInsightsEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-contributorinsightsenabled
	ContributorInsightsEnabled cfz.Expression[bool] `json:"ContributorInsightsEnabled,omitempty"`

	// GatewayLoadBalancerArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-gatewayloadbalancerarns
	GatewayLoadBalancerArns cfz.ExpressionSlice[string] `json:"GatewayLoadBalancerArns,omitempty"`

	// NetworkLoadBalancerArns is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-networkloadbalancerarns
	NetworkLoadBalancerArns cfz.ExpressionSlice[string] `json:"NetworkLoadBalancerArns,omitempty"`

	// PayerResponsibility is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointservice.html#cfn-ec2-vpcendpointservice-payerresponsibility
	PayerResponsibility cfz.Expression[string] `json:"PayerResponsibility,omitempty"`
}

// New__AWS_EC2_VPCEndpointService initializes a new *AWS_EC2_VPCEndpointService.
func New__AWS_EC2_VPCEndpointService(logicalName string) *AWS_EC2_VPCEndpointService {
	return &AWS_EC2_VPCEndpointService{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VPCEndpointService) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VPCEndpointService) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VPCEndpointService) GetType() string {
	return AWS_EC2_VPCEndpointService__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VPCEndpointService) Set__LogicalName(v string) *AWS_EC2_VPCEndpointService {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VPCEndpointService) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VPCEndpointService {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VPCEndpointService) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VPCEndpointService {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VPCEndpointService) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VPCEndpointService {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VPCEndpointService) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VPCEndpointService {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VPCEndpointService) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VPCEndpointService {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VPCEndpointService) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VPCEndpointService {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AcceptanceRequired updates property "AcceptanceRequired".
func (t *AWS_EC2_VPCEndpointService) Set__AcceptanceRequired(v cfz.Expression[bool]) *AWS_EC2_VPCEndpointService {
	t.AcceptanceRequired = v
	return t
}

// SetV__AcceptanceRequired updates property "AcceptanceRequired".
func (t *AWS_EC2_VPCEndpointService) SetV__AcceptanceRequired(v bool) *AWS_EC2_VPCEndpointService {
	t.AcceptanceRequired = cfz.V(v)
	return t
}

// Set__ContributorInsightsEnabled updates property "ContributorInsightsEnabled".
func (t *AWS_EC2_VPCEndpointService) Set__ContributorInsightsEnabled(v cfz.Expression[bool]) *AWS_EC2_VPCEndpointService {
	t.ContributorInsightsEnabled = v
	return t
}

// SetV__ContributorInsightsEnabled updates property "ContributorInsightsEnabled".
func (t *AWS_EC2_VPCEndpointService) SetV__ContributorInsightsEnabled(v bool) *AWS_EC2_VPCEndpointService {
	t.ContributorInsightsEnabled = cfz.V(v)
	return t
}

// Set__GatewayLoadBalancerArns updates property "GatewayLoadBalancerArns".
func (t *AWS_EC2_VPCEndpointService) Set__GatewayLoadBalancerArns(v cfz.ExpressionSlice[string]) *AWS_EC2_VPCEndpointService {
	t.GatewayLoadBalancerArns = v
	return t
}

// SetS__GatewayLoadBalancerArns updates property "GatewayLoadBalancerArns".
func (t *AWS_EC2_VPCEndpointService) SetS__GatewayLoadBalancerArns(v ...cfz.Expression[string]) *AWS_EC2_VPCEndpointService {
	t.GatewayLoadBalancerArns = cfz.S(v...)
	return t
}

// SetSV__GatewayLoadBalancerArns updates property "GatewayLoadBalancerArns".
func (t *AWS_EC2_VPCEndpointService) SetSV__GatewayLoadBalancerArns(v ...string) *AWS_EC2_VPCEndpointService {
	t.GatewayLoadBalancerArns = cfz.SV(v...)
	return t
}

// Set__NetworkLoadBalancerArns updates property "NetworkLoadBalancerArns".
func (t *AWS_EC2_VPCEndpointService) Set__NetworkLoadBalancerArns(v cfz.ExpressionSlice[string]) *AWS_EC2_VPCEndpointService {
	t.NetworkLoadBalancerArns = v
	return t
}

// SetS__NetworkLoadBalancerArns updates property "NetworkLoadBalancerArns".
func (t *AWS_EC2_VPCEndpointService) SetS__NetworkLoadBalancerArns(v ...cfz.Expression[string]) *AWS_EC2_VPCEndpointService {
	t.NetworkLoadBalancerArns = cfz.S(v...)
	return t
}

// SetSV__NetworkLoadBalancerArns updates property "NetworkLoadBalancerArns".
func (t *AWS_EC2_VPCEndpointService) SetSV__NetworkLoadBalancerArns(v ...string) *AWS_EC2_VPCEndpointService {
	t.NetworkLoadBalancerArns = cfz.SV(v...)
	return t
}

// Set__PayerResponsibility updates property "PayerResponsibility".
func (t *AWS_EC2_VPCEndpointService) Set__PayerResponsibility(v cfz.Expression[string]) *AWS_EC2_VPCEndpointService {
	t.PayerResponsibility = v
	return t
}

// SetV__PayerResponsibility updates property "PayerResponsibility".
func (t *AWS_EC2_VPCEndpointService) SetV__PayerResponsibility(v string) *AWS_EC2_VPCEndpointService {
	t.PayerResponsibility = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VPCEndpointService) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ServiceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ServiceId
func (t *AWS_EC2_VPCEndpointService) GetAtt__ServiceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCEndpointService__AttributesMap.ServiceId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VPCEndpointService) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ServiceId returns a conventionally configured output for an attribute of this resource.
// Attribute: ServiceId
func (t *AWS_EC2_VPCEndpointService) GetConventionalOutputAtt__ServiceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttServiceId", t.GetAtt__ServiceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VPCEndpointService) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VPCEndpointService

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VPCEndpointService) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
