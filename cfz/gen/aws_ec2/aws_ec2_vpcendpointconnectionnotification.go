// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VPCEndpointConnectionNotification)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VPCEndpointConnectionNotification)(nil)
)

const (
	// AWS_EC2_VPCEndpointConnectionNotification__Type is the CloudFormation type for AWS::EC2::VPCEndpointConnectionNotification.
	AWS_EC2_VPCEndpointConnectionNotification__Type = "AWS::EC2::VPCEndpointConnectionNotification"
)

var (
	// AWS_EC2_VPCEndpointConnectionNotification__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VPCEndpointConnectionNotification.
	AWS_EC2_VPCEndpointConnectionNotification__AttributesMap = struct {
		VPCEndpointConnectionNotificationId string
	}{
		VPCEndpointConnectionNotificationId: "VPCEndpointConnectionNotificationId",
	}

	// AWS_EC2_VPCEndpointConnectionNotification__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VPCEndpointConnectionNotification.
	AWS_EC2_VPCEndpointConnectionNotification__AttributesSlice = []string{
		AWS_EC2_VPCEndpointConnectionNotification__AttributesMap.VPCEndpointConnectionNotificationId,
	}
)

var (
	// AWS_EC2_VPCEndpointConnectionNotification__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VPCEndpointConnectionNotification.
	AWS_EC2_VPCEndpointConnectionNotification__PropertiesMap = struct {
		ConnectionEvents          string
		ConnectionNotificationArn string
		ServiceId                 string
		VPCEndpointId             string
	}{
		ConnectionEvents:          "ConnectionEvents",
		ConnectionNotificationArn: "ConnectionNotificationArn",
		ServiceId:                 "ServiceId",
		VPCEndpointId:             "VPCEndpointId",
	}

	// AWS_EC2_VPCEndpointConnectionNotification__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VPCEndpointConnectionNotification.
	AWS_EC2_VPCEndpointConnectionNotification__PropertiesSlice = []string{
		AWS_EC2_VPCEndpointConnectionNotification__PropertiesMap.ConnectionEvents,
		AWS_EC2_VPCEndpointConnectionNotification__PropertiesMap.ConnectionNotificationArn,
		AWS_EC2_VPCEndpointConnectionNotification__PropertiesMap.ServiceId,
		AWS_EC2_VPCEndpointConnectionNotification__PropertiesMap.VPCEndpointId,
	}
)

// AWS_EC2_VPCEndpointConnectionNotification is a binding for AWS::EC2::VPCEndpointConnectionNotification.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html
type AWS_EC2_VPCEndpointConnectionNotification struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ConnectionEvents is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents
	ConnectionEvents cfz.ExpressionSlice[string] `json:"ConnectionEvents,omitempty"`

	// ConnectionNotificationArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn
	ConnectionNotificationArn cfz.Expression[string] `json:"ConnectionNotificationArn,omitempty"`

	// ServiceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid
	ServiceId cfz.Expression[string] `json:"ServiceId,omitempty"`

	// VPCEndpointId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid
	VPCEndpointId cfz.Expression[string] `json:"VPCEndpointId,omitempty"`
}

// New__AWS_EC2_VPCEndpointConnectionNotification initializes a new *AWS_EC2_VPCEndpointConnectionNotification.
func New__AWS_EC2_VPCEndpointConnectionNotification(logicalName string) *AWS_EC2_VPCEndpointConnectionNotification {
	return &AWS_EC2_VPCEndpointConnectionNotification{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VPCEndpointConnectionNotification) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VPCEndpointConnectionNotification) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VPCEndpointConnectionNotification) GetType() string {
	return AWS_EC2_VPCEndpointConnectionNotification__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Set__LogicalName(v string) *AWS_EC2_VPCEndpointConnectionNotification {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VPCEndpointConnectionNotification {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VPCEndpointConnectionNotification {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VPCEndpointConnectionNotification {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VPCEndpointConnectionNotification {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VPCEndpointConnectionNotification {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VPCEndpointConnectionNotification {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ConnectionEvents updates property "ConnectionEvents".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Set__ConnectionEvents(v cfz.ExpressionSlice[string]) *AWS_EC2_VPCEndpointConnectionNotification {
	t.ConnectionEvents = v
	return t
}

// SetS__ConnectionEvents updates property "ConnectionEvents".
func (t *AWS_EC2_VPCEndpointConnectionNotification) SetS__ConnectionEvents(v ...cfz.Expression[string]) *AWS_EC2_VPCEndpointConnectionNotification {
	t.ConnectionEvents = cfz.S(v...)
	return t
}

// SetSV__ConnectionEvents updates property "ConnectionEvents".
func (t *AWS_EC2_VPCEndpointConnectionNotification) SetSV__ConnectionEvents(v ...string) *AWS_EC2_VPCEndpointConnectionNotification {
	t.ConnectionEvents = cfz.SV(v...)
	return t
}

// Set__ConnectionNotificationArn updates property "ConnectionNotificationArn".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Set__ConnectionNotificationArn(v cfz.Expression[string]) *AWS_EC2_VPCEndpointConnectionNotification {
	t.ConnectionNotificationArn = v
	return t
}

// SetV__ConnectionNotificationArn updates property "ConnectionNotificationArn".
func (t *AWS_EC2_VPCEndpointConnectionNotification) SetV__ConnectionNotificationArn(v string) *AWS_EC2_VPCEndpointConnectionNotification {
	t.ConnectionNotificationArn = cfz.V(v)
	return t
}

// Set__ServiceId updates property "ServiceId".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Set__ServiceId(v cfz.Expression[string]) *AWS_EC2_VPCEndpointConnectionNotification {
	t.ServiceId = v
	return t
}

// SetV__ServiceId updates property "ServiceId".
func (t *AWS_EC2_VPCEndpointConnectionNotification) SetV__ServiceId(v string) *AWS_EC2_VPCEndpointConnectionNotification {
	t.ServiceId = cfz.V(v)
	return t
}

// Set__VPCEndpointId updates property "VPCEndpointId".
func (t *AWS_EC2_VPCEndpointConnectionNotification) Set__VPCEndpointId(v cfz.Expression[string]) *AWS_EC2_VPCEndpointConnectionNotification {
	t.VPCEndpointId = v
	return t
}

// SetV__VPCEndpointId updates property "VPCEndpointId".
func (t *AWS_EC2_VPCEndpointConnectionNotification) SetV__VPCEndpointId(v string) *AWS_EC2_VPCEndpointConnectionNotification {
	t.VPCEndpointId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VPCEndpointConnectionNotification) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__VPCEndpointConnectionNotificationId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VPCEndpointConnectionNotificationId
func (t *AWS_EC2_VPCEndpointConnectionNotification) GetAtt__VPCEndpointConnectionNotificationId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VPCEndpointConnectionNotification__AttributesMap.VPCEndpointConnectionNotificationId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VPCEndpointConnectionNotification) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VPCEndpointConnectionNotificationId returns a conventionally configured output for an attribute of this resource.
// Attribute: VPCEndpointConnectionNotificationId
func (t *AWS_EC2_VPCEndpointConnectionNotification) GetConventionalOutputAtt__VPCEndpointConnectionNotificationId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVPCEndpointConnectionNotificationId", t.GetAtt__VPCEndpointConnectionNotificationId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VPCEndpointConnectionNotification) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VPCEndpointConnectionNotification

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VPCEndpointConnectionNotification) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
