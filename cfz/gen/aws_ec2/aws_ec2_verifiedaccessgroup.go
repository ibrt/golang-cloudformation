// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_VerifiedAccessGroup)(nil)
	_ cfz.Resource                   = (*AWS_EC2_VerifiedAccessGroup)(nil)
)

const (
	// AWS_EC2_VerifiedAccessGroup__Type is the CloudFormation type for AWS::EC2::VerifiedAccessGroup.
	AWS_EC2_VerifiedAccessGroup__Type = "AWS::EC2::VerifiedAccessGroup"
)

var (
	// AWS_EC2_VerifiedAccessGroup__AttributesMap reports all the CloudFormation attributes for AWS::EC2::VerifiedAccessGroup.
	AWS_EC2_VerifiedAccessGroup__AttributesMap = struct {
		CreationTime           string
		LastUpdatedTime        string
		Owner                  string
		VerifiedAccessGroupArn string
		VerifiedAccessGroupId  string
	}{
		CreationTime:           "CreationTime",
		LastUpdatedTime:        "LastUpdatedTime",
		Owner:                  "Owner",
		VerifiedAccessGroupArn: "VerifiedAccessGroupArn",
		VerifiedAccessGroupId:  "VerifiedAccessGroupId",
	}

	// AWS_EC2_VerifiedAccessGroup__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::VerifiedAccessGroup.
	AWS_EC2_VerifiedAccessGroup__AttributesSlice = []string{
		AWS_EC2_VerifiedAccessGroup__AttributesMap.CreationTime,
		AWS_EC2_VerifiedAccessGroup__AttributesMap.LastUpdatedTime,
		AWS_EC2_VerifiedAccessGroup__AttributesMap.Owner,
		AWS_EC2_VerifiedAccessGroup__AttributesMap.VerifiedAccessGroupArn,
		AWS_EC2_VerifiedAccessGroup__AttributesMap.VerifiedAccessGroupId,
	}
)

var (
	// AWS_EC2_VerifiedAccessGroup__PropertiesMap reports all the CloudFormation properties for AWS::EC2::VerifiedAccessGroup.
	AWS_EC2_VerifiedAccessGroup__PropertiesMap = struct {
		Description              string
		PolicyDocument           string
		PolicyEnabled            string
		SseSpecification         string
		Tags                     string
		VerifiedAccessInstanceId string
	}{
		Description:              "Description",
		PolicyDocument:           "PolicyDocument",
		PolicyEnabled:            "PolicyEnabled",
		SseSpecification:         "SseSpecification",
		Tags:                     "Tags",
		VerifiedAccessInstanceId: "VerifiedAccessInstanceId",
	}

	// AWS_EC2_VerifiedAccessGroup__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::VerifiedAccessGroup.
	AWS_EC2_VerifiedAccessGroup__PropertiesSlice = []string{
		AWS_EC2_VerifiedAccessGroup__PropertiesMap.Description,
		AWS_EC2_VerifiedAccessGroup__PropertiesMap.PolicyDocument,
		AWS_EC2_VerifiedAccessGroup__PropertiesMap.PolicyEnabled,
		AWS_EC2_VerifiedAccessGroup__PropertiesMap.SseSpecification,
		AWS_EC2_VerifiedAccessGroup__PropertiesMap.Tags,
		AWS_EC2_VerifiedAccessGroup__PropertiesMap.VerifiedAccessInstanceId,
	}
)

// AWS_EC2_VerifiedAccessGroup is a binding for AWS::EC2::VerifiedAccessGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html
type AWS_EC2_VerifiedAccessGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// PolicyDocument is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-policydocument
	PolicyDocument cfz.Expression[string] `json:"PolicyDocument,omitempty"`

	// PolicyEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-policyenabled
	PolicyEnabled cfz.Expression[bool] `json:"PolicyEnabled,omitempty"`

	// SseSpecification is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-ssespecification
	SseSpecification cfz.Expression[AWS_EC2_VerifiedAccessGroup_SseSpecification] `json:"SseSpecification,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VerifiedAccessInstanceId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-verifiedaccessgroup.html#cfn-ec2-verifiedaccessgroup-verifiedaccessinstanceid
	VerifiedAccessInstanceId cfz.Expression[string] `json:"VerifiedAccessInstanceId,omitempty"`
}

// New__AWS_EC2_VerifiedAccessGroup initializes a new *AWS_EC2_VerifiedAccessGroup.
func New__AWS_EC2_VerifiedAccessGroup(logicalName string) *AWS_EC2_VerifiedAccessGroup {
	return &AWS_EC2_VerifiedAccessGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_VerifiedAccessGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_VerifiedAccessGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_VerifiedAccessGroup) GetType() string {
	return AWS_EC2_VerifiedAccessGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_VerifiedAccessGroup) Set__LogicalName(v string) *AWS_EC2_VerifiedAccessGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_VerifiedAccessGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_VerifiedAccessGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_VerifiedAccessGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_VerifiedAccessGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_VerifiedAccessGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_VerifiedAccessGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_VerifiedAccessGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_VerifiedAccessGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_VerifiedAccessGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_VerifiedAccessGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_VerifiedAccessGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_VerifiedAccessGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EC2_VerifiedAccessGroup) Set__Description(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessGroup {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EC2_VerifiedAccessGroup) SetV__Description(v string) *AWS_EC2_VerifiedAccessGroup {
	t.Description = cfz.V(v)
	return t
}

// Set__PolicyDocument updates property "PolicyDocument".
func (t *AWS_EC2_VerifiedAccessGroup) Set__PolicyDocument(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessGroup {
	t.PolicyDocument = v
	return t
}

// SetV__PolicyDocument updates property "PolicyDocument".
func (t *AWS_EC2_VerifiedAccessGroup) SetV__PolicyDocument(v string) *AWS_EC2_VerifiedAccessGroup {
	t.PolicyDocument = cfz.V(v)
	return t
}

// Set__PolicyEnabled updates property "PolicyEnabled".
func (t *AWS_EC2_VerifiedAccessGroup) Set__PolicyEnabled(v cfz.Expression[bool]) *AWS_EC2_VerifiedAccessGroup {
	t.PolicyEnabled = v
	return t
}

// SetV__PolicyEnabled updates property "PolicyEnabled".
func (t *AWS_EC2_VerifiedAccessGroup) SetV__PolicyEnabled(v bool) *AWS_EC2_VerifiedAccessGroup {
	t.PolicyEnabled = cfz.V(v)
	return t
}

// Set__SseSpecification updates property "SseSpecification".
func (t *AWS_EC2_VerifiedAccessGroup) Set__SseSpecification(v cfz.Expression[AWS_EC2_VerifiedAccessGroup_SseSpecification]) *AWS_EC2_VerifiedAccessGroup {
	t.SseSpecification = v
	return t
}

// SetV__SseSpecification updates property "SseSpecification".
func (t *AWS_EC2_VerifiedAccessGroup) SetV__SseSpecification(v AWS_EC2_VerifiedAccessGroup_SseSpecification) *AWS_EC2_VerifiedAccessGroup {
	t.SseSpecification = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_VerifiedAccessGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_VerifiedAccessGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_VerifiedAccessGroup) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_VerifiedAccessGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VerifiedAccessInstanceId updates property "VerifiedAccessInstanceId".
func (t *AWS_EC2_VerifiedAccessGroup) Set__VerifiedAccessInstanceId(v cfz.Expression[string]) *AWS_EC2_VerifiedAccessGroup {
	t.VerifiedAccessInstanceId = v
	return t
}

// SetV__VerifiedAccessInstanceId updates property "VerifiedAccessInstanceId".
func (t *AWS_EC2_VerifiedAccessGroup) SetV__VerifiedAccessInstanceId(v string) *AWS_EC2_VerifiedAccessGroup {
	t.VerifiedAccessInstanceId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_VerifiedAccessGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__CreationTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreationTime
func (t *AWS_EC2_VerifiedAccessGroup) GetAtt__CreationTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessGroup__AttributesMap.CreationTime))
}

// GetAtt__LastUpdatedTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastUpdatedTime
func (t *AWS_EC2_VerifiedAccessGroup) GetAtt__LastUpdatedTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessGroup__AttributesMap.LastUpdatedTime))
}

// GetAtt__Owner returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Owner
func (t *AWS_EC2_VerifiedAccessGroup) GetAtt__Owner() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessGroup__AttributesMap.Owner))
}

// GetAtt__VerifiedAccessGroupArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VerifiedAccessGroupArn
func (t *AWS_EC2_VerifiedAccessGroup) GetAtt__VerifiedAccessGroupArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessGroup__AttributesMap.VerifiedAccessGroupArn))
}

// GetAtt__VerifiedAccessGroupId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VerifiedAccessGroupId
func (t *AWS_EC2_VerifiedAccessGroup) GetAtt__VerifiedAccessGroupId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_VerifiedAccessGroup__AttributesMap.VerifiedAccessGroupId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_VerifiedAccessGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreationTime returns a conventionally configured output for an attribute of this resource.
// Attribute: CreationTime
func (t *AWS_EC2_VerifiedAccessGroup) GetConventionalOutputAtt__CreationTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreationTime", t.GetAtt__CreationTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastUpdatedTime returns a conventionally configured output for an attribute of this resource.
// Attribute: LastUpdatedTime
func (t *AWS_EC2_VerifiedAccessGroup) GetConventionalOutputAtt__LastUpdatedTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastUpdatedTime", t.GetAtt__LastUpdatedTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Owner returns a conventionally configured output for an attribute of this resource.
// Attribute: Owner
func (t *AWS_EC2_VerifiedAccessGroup) GetConventionalOutputAtt__Owner(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttOwner", t.GetAtt__Owner())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VerifiedAccessGroupArn returns a conventionally configured output for an attribute of this resource.
// Attribute: VerifiedAccessGroupArn
func (t *AWS_EC2_VerifiedAccessGroup) GetConventionalOutputAtt__VerifiedAccessGroupArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVerifiedAccessGroupArn", t.GetAtt__VerifiedAccessGroupArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VerifiedAccessGroupId returns a conventionally configured output for an attribute of this resource.
// Attribute: VerifiedAccessGroupId
func (t *AWS_EC2_VerifiedAccessGroup) GetConventionalOutputAtt__VerifiedAccessGroupId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVerifiedAccessGroupId", t.GetAtt__VerifiedAccessGroupId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_VerifiedAccessGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_VerifiedAccessGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_VerifiedAccessGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
