// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_TransitGatewayMulticastDomainAssociation)(nil)
	_ cfz.Resource                   = (*AWS_EC2_TransitGatewayMulticastDomainAssociation)(nil)
)

const (
	// AWS_EC2_TransitGatewayMulticastDomainAssociation__Type is the CloudFormation type for AWS::EC2::TransitGatewayMulticastDomainAssociation.
	AWS_EC2_TransitGatewayMulticastDomainAssociation__Type = "AWS::EC2::TransitGatewayMulticastDomainAssociation"
)

var (
	// AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesMap reports all the CloudFormation attributes for AWS::EC2::TransitGatewayMulticastDomainAssociation.
	AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesMap = struct {
		ResourceId   string
		ResourceType string
		State        string
	}{
		ResourceId:   "ResourceId",
		ResourceType: "ResourceType",
		State:        "State",
	}

	// AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::TransitGatewayMulticastDomainAssociation.
	AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesSlice = []string{
		AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesMap.ResourceId,
		AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesMap.ResourceType,
		AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesMap.State,
	}
)

var (
	// AWS_EC2_TransitGatewayMulticastDomainAssociation__PropertiesMap reports all the CloudFormation properties for AWS::EC2::TransitGatewayMulticastDomainAssociation.
	AWS_EC2_TransitGatewayMulticastDomainAssociation__PropertiesMap = struct {
		SubnetId                        string
		TransitGatewayAttachmentId      string
		TransitGatewayMulticastDomainId string
	}{
		SubnetId:                        "SubnetId",
		TransitGatewayAttachmentId:      "TransitGatewayAttachmentId",
		TransitGatewayMulticastDomainId: "TransitGatewayMulticastDomainId",
	}

	// AWS_EC2_TransitGatewayMulticastDomainAssociation__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::TransitGatewayMulticastDomainAssociation.
	AWS_EC2_TransitGatewayMulticastDomainAssociation__PropertiesSlice = []string{
		AWS_EC2_TransitGatewayMulticastDomainAssociation__PropertiesMap.SubnetId,
		AWS_EC2_TransitGatewayMulticastDomainAssociation__PropertiesMap.TransitGatewayAttachmentId,
		AWS_EC2_TransitGatewayMulticastDomainAssociation__PropertiesMap.TransitGatewayMulticastDomainId,
	}
)

// AWS_EC2_TransitGatewayMulticastDomainAssociation is a binding for AWS::EC2::TransitGatewayMulticastDomainAssociation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html
type AWS_EC2_TransitGatewayMulticastDomainAssociation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// SubnetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-subnetid
	SubnetId cfz.Expression[string] `json:"SubnetId,omitempty"`

	// TransitGatewayAttachmentId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewayattachmentid
	TransitGatewayAttachmentId cfz.Expression[string] `json:"TransitGatewayAttachmentId,omitempty"`

	// TransitGatewayMulticastDomainId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewaymulticastdomainassociation.html#cfn-ec2-transitgatewaymulticastdomainassociation-transitgatewaymulticastdomainid
	TransitGatewayMulticastDomainId cfz.Expression[string] `json:"TransitGatewayMulticastDomainId,omitempty"`
}

// New__AWS_EC2_TransitGatewayMulticastDomainAssociation initializes a new *AWS_EC2_TransitGatewayMulticastDomainAssociation.
func New__AWS_EC2_TransitGatewayMulticastDomainAssociation(logicalName string) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	return &AWS_EC2_TransitGatewayMulticastDomainAssociation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_TransitGatewayMulticastDomainAssociation) GetType() string {
	return AWS_EC2_TransitGatewayMulticastDomainAssociation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Set__LogicalName(v string) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__SubnetId updates property "SubnetId".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Set__SubnetId(v cfz.Expression[string]) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.SubnetId = v
	return t
}

// SetV__SubnetId updates property "SubnetId".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) SetV__SubnetId(v string) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.SubnetId = cfz.V(v)
	return t
}

// Set__TransitGatewayAttachmentId updates property "TransitGatewayAttachmentId".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Set__TransitGatewayAttachmentId(v cfz.Expression[string]) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.TransitGatewayAttachmentId = v
	return t
}

// SetV__TransitGatewayAttachmentId updates property "TransitGatewayAttachmentId".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) SetV__TransitGatewayAttachmentId(v string) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.TransitGatewayAttachmentId = cfz.V(v)
	return t
}

// Set__TransitGatewayMulticastDomainId updates property "TransitGatewayMulticastDomainId".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Set__TransitGatewayMulticastDomainId(v cfz.Expression[string]) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.TransitGatewayMulticastDomainId = v
	return t
}

// SetV__TransitGatewayMulticastDomainId updates property "TransitGatewayMulticastDomainId".
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) SetV__TransitGatewayMulticastDomainId(v string) *AWS_EC2_TransitGatewayMulticastDomainAssociation {
	t.TransitGatewayMulticastDomainId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ResourceId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceId
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) GetAtt__ResourceId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesMap.ResourceId))
}

// GetAtt__ResourceType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ResourceType
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) GetAtt__ResourceType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesMap.ResourceType))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_TransitGatewayMulticastDomainAssociation__AttributesMap.State))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceId returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceId
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) GetConventionalOutputAtt__ResourceId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceId", t.GetAtt__ResourceId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ResourceType returns a conventionally configured output for an attribute of this resource.
// Attribute: ResourceType
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) GetConventionalOutputAtt__ResourceType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttResourceType", t.GetAtt__ResourceType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_TransitGatewayMulticastDomainAssociation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_TransitGatewayMulticastDomainAssociation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
