// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_EC2_SpotFleet_LoadBalancersConfig__Type is the CloudFormation type for AWS::EC2::SpotFleet.LoadBalancersConfig.
	AWS_EC2_SpotFleet_LoadBalancersConfig__Type = "AWS::EC2::SpotFleet.LoadBalancersConfig"
)

var (
	// AWS_EC2_SpotFleet_LoadBalancersConfig__PropertiesMap reports all the CloudFormation properties for AWS::EC2::SpotFleet.LoadBalancersConfig.
	AWS_EC2_SpotFleet_LoadBalancersConfig__PropertiesMap = struct {
		ClassicLoadBalancersConfig string
		TargetGroupsConfig         string
	}{
		ClassicLoadBalancersConfig: "ClassicLoadBalancersConfig",
		TargetGroupsConfig:         "TargetGroupsConfig",
	}

	// AWS_EC2_SpotFleet_LoadBalancersConfig__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::SpotFleet.LoadBalancersConfig.
	AWS_EC2_SpotFleet_LoadBalancersConfig__PropertiesSlice = []string{
		AWS_EC2_SpotFleet_LoadBalancersConfig__PropertiesMap.ClassicLoadBalancersConfig,
		AWS_EC2_SpotFleet_LoadBalancersConfig__PropertiesMap.TargetGroupsConfig,
	}
)

// AWS_EC2_SpotFleet_LoadBalancersConfig is a binding for AWS::EC2::SpotFleet.LoadBalancersConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html
type AWS_EC2_SpotFleet_LoadBalancersConfig struct {
	// ClassicLoadBalancersConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-classicloadbalancersconfig
	ClassicLoadBalancersConfig cfz.Expression[AWS_EC2_SpotFleet_ClassicLoadBalancersConfig] `json:"ClassicLoadBalancersConfig,omitempty"`

	// TargetGroupsConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-spotfleet-loadbalancersconfig.html#cfn-ec2-spotfleet-loadbalancersconfig-targetgroupsconfig
	TargetGroupsConfig cfz.Expression[AWS_EC2_SpotFleet_TargetGroupsConfig] `json:"TargetGroupsConfig,omitempty"`
}

// New__AWS_EC2_SpotFleet_LoadBalancersConfig initializes a new AWS_EC2_SpotFleet_LoadBalancersConfig.
func New__AWS_EC2_SpotFleet_LoadBalancersConfig() AWS_EC2_SpotFleet_LoadBalancersConfig {
	return AWS_EC2_SpotFleet_LoadBalancersConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_EC2_SpotFleet_LoadBalancersConfig) GetType() string {
	return AWS_EC2_SpotFleet_LoadBalancersConfig__Type
}

// Set__ClassicLoadBalancersConfig updates property "ClassicLoadBalancersConfig".
func (t AWS_EC2_SpotFleet_LoadBalancersConfig) Set__ClassicLoadBalancersConfig(v cfz.Expression[AWS_EC2_SpotFleet_ClassicLoadBalancersConfig]) AWS_EC2_SpotFleet_LoadBalancersConfig {
	t.ClassicLoadBalancersConfig = v
	return t
}

// SetV__ClassicLoadBalancersConfig updates property "ClassicLoadBalancersConfig".
func (t AWS_EC2_SpotFleet_LoadBalancersConfig) SetV__ClassicLoadBalancersConfig(v AWS_EC2_SpotFleet_ClassicLoadBalancersConfig) AWS_EC2_SpotFleet_LoadBalancersConfig {
	t.ClassicLoadBalancersConfig = cfz.V(v)
	return t
}

// Set__TargetGroupsConfig updates property "TargetGroupsConfig".
func (t AWS_EC2_SpotFleet_LoadBalancersConfig) Set__TargetGroupsConfig(v cfz.Expression[AWS_EC2_SpotFleet_TargetGroupsConfig]) AWS_EC2_SpotFleet_LoadBalancersConfig {
	t.TargetGroupsConfig = v
	return t
}

// SetV__TargetGroupsConfig updates property "TargetGroupsConfig".
func (t AWS_EC2_SpotFleet_LoadBalancersConfig) SetV__TargetGroupsConfig(v AWS_EC2_SpotFleet_TargetGroupsConfig) AWS_EC2_SpotFleet_LoadBalancersConfig {
	t.TargetGroupsConfig = cfz.V(v)
	return t
}
