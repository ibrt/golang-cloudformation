// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_ec2

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_EC2_IPAMPool)(nil)
	_ cfz.Resource                   = (*AWS_EC2_IPAMPool)(nil)
)

const (
	// AWS_EC2_IPAMPool__Type is the CloudFormation type for AWS::EC2::IPAMPool.
	AWS_EC2_IPAMPool__Type = "AWS::EC2::IPAMPool"
)

var (
	// AWS_EC2_IPAMPool__AttributesMap reports all the CloudFormation attributes for AWS::EC2::IPAMPool.
	AWS_EC2_IPAMPool__AttributesMap = struct {
		Arn           string
		IpamArn       string
		IpamPoolId    string
		IpamScopeArn  string
		IpamScopeType string
		PoolDepth     string
		State         string
		StateMessage  string
	}{
		Arn:           "Arn",
		IpamArn:       "IpamArn",
		IpamPoolId:    "IpamPoolId",
		IpamScopeArn:  "IpamScopeArn",
		IpamScopeType: "IpamScopeType",
		PoolDepth:     "PoolDepth",
		State:         "State",
		StateMessage:  "StateMessage",
	}

	// AWS_EC2_IPAMPool__AttributesSlice reports all the CloudFormation attributes for AWS::EC2::IPAMPool.
	AWS_EC2_IPAMPool__AttributesSlice = []string{
		AWS_EC2_IPAMPool__AttributesMap.Arn,
		AWS_EC2_IPAMPool__AttributesMap.IpamArn,
		AWS_EC2_IPAMPool__AttributesMap.IpamPoolId,
		AWS_EC2_IPAMPool__AttributesMap.IpamScopeArn,
		AWS_EC2_IPAMPool__AttributesMap.IpamScopeType,
		AWS_EC2_IPAMPool__AttributesMap.PoolDepth,
		AWS_EC2_IPAMPool__AttributesMap.State,
		AWS_EC2_IPAMPool__AttributesMap.StateMessage,
	}
)

var (
	// AWS_EC2_IPAMPool__PropertiesMap reports all the CloudFormation properties for AWS::EC2::IPAMPool.
	AWS_EC2_IPAMPool__PropertiesMap = struct {
		AddressFamily                  string
		AllocationDefaultNetmaskLength string
		AllocationMaxNetmaskLength     string
		AllocationMinNetmaskLength     string
		AllocationResourceTags         string
		AutoImport                     string
		AwsService                     string
		Description                    string
		IpamScopeId                    string
		Locale                         string
		ProvisionedCidrs               string
		PublicIpSource                 string
		PubliclyAdvertisable           string
		SourceIpamPoolId               string
		SourceResource                 string
		Tags                           string
	}{
		AddressFamily:                  "AddressFamily",
		AllocationDefaultNetmaskLength: "AllocationDefaultNetmaskLength",
		AllocationMaxNetmaskLength:     "AllocationMaxNetmaskLength",
		AllocationMinNetmaskLength:     "AllocationMinNetmaskLength",
		AllocationResourceTags:         "AllocationResourceTags",
		AutoImport:                     "AutoImport",
		AwsService:                     "AwsService",
		Description:                    "Description",
		IpamScopeId:                    "IpamScopeId",
		Locale:                         "Locale",
		ProvisionedCidrs:               "ProvisionedCidrs",
		PublicIpSource:                 "PublicIpSource",
		PubliclyAdvertisable:           "PubliclyAdvertisable",
		SourceIpamPoolId:               "SourceIpamPoolId",
		SourceResource:                 "SourceResource",
		Tags:                           "Tags",
	}

	// AWS_EC2_IPAMPool__PropertiesSlice reports all the CloudFormation properties for AWS::EC2::IPAMPool.
	AWS_EC2_IPAMPool__PropertiesSlice = []string{
		AWS_EC2_IPAMPool__PropertiesMap.AddressFamily,
		AWS_EC2_IPAMPool__PropertiesMap.AllocationDefaultNetmaskLength,
		AWS_EC2_IPAMPool__PropertiesMap.AllocationMaxNetmaskLength,
		AWS_EC2_IPAMPool__PropertiesMap.AllocationMinNetmaskLength,
		AWS_EC2_IPAMPool__PropertiesMap.AllocationResourceTags,
		AWS_EC2_IPAMPool__PropertiesMap.AutoImport,
		AWS_EC2_IPAMPool__PropertiesMap.AwsService,
		AWS_EC2_IPAMPool__PropertiesMap.Description,
		AWS_EC2_IPAMPool__PropertiesMap.IpamScopeId,
		AWS_EC2_IPAMPool__PropertiesMap.Locale,
		AWS_EC2_IPAMPool__PropertiesMap.ProvisionedCidrs,
		AWS_EC2_IPAMPool__PropertiesMap.PublicIpSource,
		AWS_EC2_IPAMPool__PropertiesMap.PubliclyAdvertisable,
		AWS_EC2_IPAMPool__PropertiesMap.SourceIpamPoolId,
		AWS_EC2_IPAMPool__PropertiesMap.SourceResource,
		AWS_EC2_IPAMPool__PropertiesMap.Tags,
	}
)

// AWS_EC2_IPAMPool is a binding for AWS::EC2::IPAMPool.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html
type AWS_EC2_IPAMPool struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AddressFamily is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-addressfamily
	AddressFamily cfz.Expression[string] `json:"AddressFamily,omitempty"`

	// AllocationDefaultNetmaskLength is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationdefaultnetmasklength
	AllocationDefaultNetmaskLength cfz.Expression[int32] `json:"AllocationDefaultNetmaskLength,omitempty"`

	// AllocationMaxNetmaskLength is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationmaxnetmasklength
	AllocationMaxNetmaskLength cfz.Expression[int32] `json:"AllocationMaxNetmaskLength,omitempty"`

	// AllocationMinNetmaskLength is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationminnetmasklength
	AllocationMinNetmaskLength cfz.Expression[int32] `json:"AllocationMinNetmaskLength,omitempty"`

	// AllocationResourceTags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-allocationresourcetags
	AllocationResourceTags cfz.ExpressionSlice[cfz.Tag] `json:"AllocationResourceTags,omitempty"`

	// AutoImport is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-autoimport
	AutoImport cfz.Expression[bool] `json:"AutoImport,omitempty"`

	// AwsService is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-awsservice
	AwsService cfz.Expression[string] `json:"AwsService,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// IpamScopeId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-ipamscopeid
	IpamScopeId cfz.Expression[string] `json:"IpamScopeId,omitempty"`

	// Locale is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-locale
	Locale cfz.Expression[string] `json:"Locale,omitempty"`

	// ProvisionedCidrs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-provisionedcidrs
	ProvisionedCidrs cfz.ExpressionSlice[AWS_EC2_IPAMPool_ProvisionedCidr] `json:"ProvisionedCidrs,omitempty"`

	// PublicIpSource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-publicipsource
	PublicIpSource cfz.Expression[string] `json:"PublicIpSource,omitempty"`

	// PubliclyAdvertisable is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-publiclyadvertisable
	PubliclyAdvertisable cfz.Expression[bool] `json:"PubliclyAdvertisable,omitempty"`

	// SourceIpamPoolId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-sourceipampoolid
	SourceIpamPoolId cfz.Expression[string] `json:"SourceIpamPoolId,omitempty"`

	// SourceResource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-sourceresource
	SourceResource cfz.Expression[AWS_EC2_IPAMPool_SourceResource] `json:"SourceResource,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ipampool.html#cfn-ec2-ipampool-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_EC2_IPAMPool initializes a new *AWS_EC2_IPAMPool.
func New__AWS_EC2_IPAMPool(logicalName string) *AWS_EC2_IPAMPool {
	return &AWS_EC2_IPAMPool{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_EC2_IPAMPool) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_EC2_IPAMPool) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_EC2_IPAMPool) GetType() string {
	return AWS_EC2_IPAMPool__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_EC2_IPAMPool) Set__LogicalName(v string) *AWS_EC2_IPAMPool {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_EC2_IPAMPool) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_EC2_IPAMPool {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_EC2_IPAMPool) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_EC2_IPAMPool {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_EC2_IPAMPool) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_EC2_IPAMPool {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_EC2_IPAMPool) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_EC2_IPAMPool {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_EC2_IPAMPool) Set__RequestedOutputs(v []cfz.Output) *AWS_EC2_IPAMPool {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_EC2_IPAMPool) Add__RequestedOutputs(v ...cfz.Output) *AWS_EC2_IPAMPool {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AddressFamily updates property "AddressFamily".
func (t *AWS_EC2_IPAMPool) Set__AddressFamily(v cfz.Expression[string]) *AWS_EC2_IPAMPool {
	t.AddressFamily = v
	return t
}

// SetV__AddressFamily updates property "AddressFamily".
func (t *AWS_EC2_IPAMPool) SetV__AddressFamily(v string) *AWS_EC2_IPAMPool {
	t.AddressFamily = cfz.V(v)
	return t
}

// Set__AllocationDefaultNetmaskLength updates property "AllocationDefaultNetmaskLength".
func (t *AWS_EC2_IPAMPool) Set__AllocationDefaultNetmaskLength(v cfz.Expression[int32]) *AWS_EC2_IPAMPool {
	t.AllocationDefaultNetmaskLength = v
	return t
}

// SetV__AllocationDefaultNetmaskLength updates property "AllocationDefaultNetmaskLength".
func (t *AWS_EC2_IPAMPool) SetV__AllocationDefaultNetmaskLength(v int32) *AWS_EC2_IPAMPool {
	t.AllocationDefaultNetmaskLength = cfz.V(v)
	return t
}

// Set__AllocationMaxNetmaskLength updates property "AllocationMaxNetmaskLength".
func (t *AWS_EC2_IPAMPool) Set__AllocationMaxNetmaskLength(v cfz.Expression[int32]) *AWS_EC2_IPAMPool {
	t.AllocationMaxNetmaskLength = v
	return t
}

// SetV__AllocationMaxNetmaskLength updates property "AllocationMaxNetmaskLength".
func (t *AWS_EC2_IPAMPool) SetV__AllocationMaxNetmaskLength(v int32) *AWS_EC2_IPAMPool {
	t.AllocationMaxNetmaskLength = cfz.V(v)
	return t
}

// Set__AllocationMinNetmaskLength updates property "AllocationMinNetmaskLength".
func (t *AWS_EC2_IPAMPool) Set__AllocationMinNetmaskLength(v cfz.Expression[int32]) *AWS_EC2_IPAMPool {
	t.AllocationMinNetmaskLength = v
	return t
}

// SetV__AllocationMinNetmaskLength updates property "AllocationMinNetmaskLength".
func (t *AWS_EC2_IPAMPool) SetV__AllocationMinNetmaskLength(v int32) *AWS_EC2_IPAMPool {
	t.AllocationMinNetmaskLength = cfz.V(v)
	return t
}

// Set__AllocationResourceTags updates property "AllocationResourceTags".
func (t *AWS_EC2_IPAMPool) Set__AllocationResourceTags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_IPAMPool {
	t.AllocationResourceTags = v
	return t
}

// SetS__AllocationResourceTags updates property "AllocationResourceTags".
func (t *AWS_EC2_IPAMPool) SetS__AllocationResourceTags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_IPAMPool {
	t.AllocationResourceTags = cfz.S(v...)
	return t
}

// SetSV__AllocationResourceTags updates property "AllocationResourceTags".
func (t *AWS_EC2_IPAMPool) SetSV__AllocationResourceTags(v ...cfz.Tag) *AWS_EC2_IPAMPool {
	t.AllocationResourceTags = cfz.SV(v...)
	return t
}

// Set__AutoImport updates property "AutoImport".
func (t *AWS_EC2_IPAMPool) Set__AutoImport(v cfz.Expression[bool]) *AWS_EC2_IPAMPool {
	t.AutoImport = v
	return t
}

// SetV__AutoImport updates property "AutoImport".
func (t *AWS_EC2_IPAMPool) SetV__AutoImport(v bool) *AWS_EC2_IPAMPool {
	t.AutoImport = cfz.V(v)
	return t
}

// Set__AwsService updates property "AwsService".
func (t *AWS_EC2_IPAMPool) Set__AwsService(v cfz.Expression[string]) *AWS_EC2_IPAMPool {
	t.AwsService = v
	return t
}

// SetV__AwsService updates property "AwsService".
func (t *AWS_EC2_IPAMPool) SetV__AwsService(v string) *AWS_EC2_IPAMPool {
	t.AwsService = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_EC2_IPAMPool) Set__Description(v cfz.Expression[string]) *AWS_EC2_IPAMPool {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_EC2_IPAMPool) SetV__Description(v string) *AWS_EC2_IPAMPool {
	t.Description = cfz.V(v)
	return t
}

// Set__IpamScopeId updates property "IpamScopeId".
func (t *AWS_EC2_IPAMPool) Set__IpamScopeId(v cfz.Expression[string]) *AWS_EC2_IPAMPool {
	t.IpamScopeId = v
	return t
}

// SetV__IpamScopeId updates property "IpamScopeId".
func (t *AWS_EC2_IPAMPool) SetV__IpamScopeId(v string) *AWS_EC2_IPAMPool {
	t.IpamScopeId = cfz.V(v)
	return t
}

// Set__Locale updates property "Locale".
func (t *AWS_EC2_IPAMPool) Set__Locale(v cfz.Expression[string]) *AWS_EC2_IPAMPool {
	t.Locale = v
	return t
}

// SetV__Locale updates property "Locale".
func (t *AWS_EC2_IPAMPool) SetV__Locale(v string) *AWS_EC2_IPAMPool {
	t.Locale = cfz.V(v)
	return t
}

// Set__ProvisionedCidrs updates property "ProvisionedCidrs".
func (t *AWS_EC2_IPAMPool) Set__ProvisionedCidrs(v cfz.ExpressionSlice[AWS_EC2_IPAMPool_ProvisionedCidr]) *AWS_EC2_IPAMPool {
	t.ProvisionedCidrs = v
	return t
}

// SetS__ProvisionedCidrs updates property "ProvisionedCidrs".
func (t *AWS_EC2_IPAMPool) SetS__ProvisionedCidrs(v ...cfz.Expression[AWS_EC2_IPAMPool_ProvisionedCidr]) *AWS_EC2_IPAMPool {
	t.ProvisionedCidrs = cfz.S(v...)
	return t
}

// SetSV__ProvisionedCidrs updates property "ProvisionedCidrs".
func (t *AWS_EC2_IPAMPool) SetSV__ProvisionedCidrs(v ...AWS_EC2_IPAMPool_ProvisionedCidr) *AWS_EC2_IPAMPool {
	t.ProvisionedCidrs = cfz.SV(v...)
	return t
}

// Set__PublicIpSource updates property "PublicIpSource".
func (t *AWS_EC2_IPAMPool) Set__PublicIpSource(v cfz.Expression[string]) *AWS_EC2_IPAMPool {
	t.PublicIpSource = v
	return t
}

// SetV__PublicIpSource updates property "PublicIpSource".
func (t *AWS_EC2_IPAMPool) SetV__PublicIpSource(v string) *AWS_EC2_IPAMPool {
	t.PublicIpSource = cfz.V(v)
	return t
}

// Set__PubliclyAdvertisable updates property "PubliclyAdvertisable".
func (t *AWS_EC2_IPAMPool) Set__PubliclyAdvertisable(v cfz.Expression[bool]) *AWS_EC2_IPAMPool {
	t.PubliclyAdvertisable = v
	return t
}

// SetV__PubliclyAdvertisable updates property "PubliclyAdvertisable".
func (t *AWS_EC2_IPAMPool) SetV__PubliclyAdvertisable(v bool) *AWS_EC2_IPAMPool {
	t.PubliclyAdvertisable = cfz.V(v)
	return t
}

// Set__SourceIpamPoolId updates property "SourceIpamPoolId".
func (t *AWS_EC2_IPAMPool) Set__SourceIpamPoolId(v cfz.Expression[string]) *AWS_EC2_IPAMPool {
	t.SourceIpamPoolId = v
	return t
}

// SetV__SourceIpamPoolId updates property "SourceIpamPoolId".
func (t *AWS_EC2_IPAMPool) SetV__SourceIpamPoolId(v string) *AWS_EC2_IPAMPool {
	t.SourceIpamPoolId = cfz.V(v)
	return t
}

// Set__SourceResource updates property "SourceResource".
func (t *AWS_EC2_IPAMPool) Set__SourceResource(v cfz.Expression[AWS_EC2_IPAMPool_SourceResource]) *AWS_EC2_IPAMPool {
	t.SourceResource = v
	return t
}

// SetV__SourceResource updates property "SourceResource".
func (t *AWS_EC2_IPAMPool) SetV__SourceResource(v AWS_EC2_IPAMPool_SourceResource) *AWS_EC2_IPAMPool {
	t.SourceResource = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_EC2_IPAMPool) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_EC2_IPAMPool {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_EC2_IPAMPool) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_EC2_IPAMPool {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_EC2_IPAMPool) SetSV__Tags(v ...cfz.Tag) *AWS_EC2_IPAMPool {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_EC2_IPAMPool) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_EC2_IPAMPool) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPool__AttributesMap.Arn))
}

// GetAtt__IpamArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpamArn
func (t *AWS_EC2_IPAMPool) GetAtt__IpamArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPool__AttributesMap.IpamArn))
}

// GetAtt__IpamPoolId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpamPoolId
func (t *AWS_EC2_IPAMPool) GetAtt__IpamPoolId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPool__AttributesMap.IpamPoolId))
}

// GetAtt__IpamScopeArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpamScopeArn
func (t *AWS_EC2_IPAMPool) GetAtt__IpamScopeArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPool__AttributesMap.IpamScopeArn))
}

// GetAtt__IpamScopeType returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpamScopeType
func (t *AWS_EC2_IPAMPool) GetAtt__IpamScopeType() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPool__AttributesMap.IpamScopeType))
}

// GetAtt__PoolDepth returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PoolDepth
func (t *AWS_EC2_IPAMPool) GetAtt__PoolDepth() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPool__AttributesMap.PoolDepth))
}

// GetAtt__State returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: State
func (t *AWS_EC2_IPAMPool) GetAtt__State() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPool__AttributesMap.State))
}

// GetAtt__StateMessage returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StateMessage
func (t *AWS_EC2_IPAMPool) GetAtt__StateMessage() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_EC2_IPAMPool__AttributesMap.StateMessage))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_EC2_IPAMPool) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_EC2_IPAMPool) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpamArn returns a conventionally configured output for an attribute of this resource.
// Attribute: IpamArn
func (t *AWS_EC2_IPAMPool) GetConventionalOutputAtt__IpamArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpamArn", t.GetAtt__IpamArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpamPoolId returns a conventionally configured output for an attribute of this resource.
// Attribute: IpamPoolId
func (t *AWS_EC2_IPAMPool) GetConventionalOutputAtt__IpamPoolId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpamPoolId", t.GetAtt__IpamPoolId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpamScopeArn returns a conventionally configured output for an attribute of this resource.
// Attribute: IpamScopeArn
func (t *AWS_EC2_IPAMPool) GetConventionalOutputAtt__IpamScopeArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpamScopeArn", t.GetAtt__IpamScopeArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpamScopeType returns a conventionally configured output for an attribute of this resource.
// Attribute: IpamScopeType
func (t *AWS_EC2_IPAMPool) GetConventionalOutputAtt__IpamScopeType(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpamScopeType", t.GetAtt__IpamScopeType())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PoolDepth returns a conventionally configured output for an attribute of this resource.
// Attribute: PoolDepth
func (t *AWS_EC2_IPAMPool) GetConventionalOutputAtt__PoolDepth(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPoolDepth", t.GetAtt__PoolDepth())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__State returns a conventionally configured output for an attribute of this resource.
// Attribute: State
func (t *AWS_EC2_IPAMPool) GetConventionalOutputAtt__State(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttState", t.GetAtt__State())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StateMessage returns a conventionally configured output for an attribute of this resource.
// Attribute: StateMessage
func (t *AWS_EC2_IPAMPool) GetConventionalOutputAtt__StateMessage(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStateMessage", t.GetAtt__StateMessage())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_EC2_IPAMPool) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_EC2_IPAMPool

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_EC2_IPAMPool) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
