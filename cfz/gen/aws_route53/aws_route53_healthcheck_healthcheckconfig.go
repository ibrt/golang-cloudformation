// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_route53

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Route53_HealthCheck_HealthCheckConfig__Type is the CloudFormation type for AWS::Route53::HealthCheck.HealthCheckConfig.
	AWS_Route53_HealthCheck_HealthCheckConfig__Type = "AWS::Route53::HealthCheck.HealthCheckConfig"
)

var (
	// AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap reports all the CloudFormation properties for AWS::Route53::HealthCheck.HealthCheckConfig.
	AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap = struct {
		AlarmIdentifier              string
		ChildHealthChecks            string
		EnableSNI                    string
		FailureThreshold             string
		FullyQualifiedDomainName     string
		HealthThreshold              string
		IPAddress                    string
		InsufficientDataHealthStatus string
		Inverted                     string
		MeasureLatency               string
		Port                         string
		Regions                      string
		RequestInterval              string
		ResourcePath                 string
		RoutingControlArn            string
		SearchString                 string
		Type                         string
	}{
		AlarmIdentifier:              "AlarmIdentifier",
		ChildHealthChecks:            "ChildHealthChecks",
		EnableSNI:                    "EnableSNI",
		FailureThreshold:             "FailureThreshold",
		FullyQualifiedDomainName:     "FullyQualifiedDomainName",
		HealthThreshold:              "HealthThreshold",
		IPAddress:                    "IPAddress",
		InsufficientDataHealthStatus: "InsufficientDataHealthStatus",
		Inverted:                     "Inverted",
		MeasureLatency:               "MeasureLatency",
		Port:                         "Port",
		Regions:                      "Regions",
		RequestInterval:              "RequestInterval",
		ResourcePath:                 "ResourcePath",
		RoutingControlArn:            "RoutingControlArn",
		SearchString:                 "SearchString",
		Type:                         "Type",
	}

	// AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesSlice reports all the CloudFormation properties for AWS::Route53::HealthCheck.HealthCheckConfig.
	AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesSlice = []string{
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.AlarmIdentifier,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.ChildHealthChecks,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.EnableSNI,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.FailureThreshold,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.FullyQualifiedDomainName,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.HealthThreshold,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.IPAddress,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.InsufficientDataHealthStatus,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.Inverted,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.MeasureLatency,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.Port,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.Regions,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.RequestInterval,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.ResourcePath,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.RoutingControlArn,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.SearchString,
		AWS_Route53_HealthCheck_HealthCheckConfig__PropertiesMap.Type,
	}
)

// AWS_Route53_HealthCheck_HealthCheckConfig is a binding for AWS::Route53::HealthCheck.HealthCheckConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html
type AWS_Route53_HealthCheck_HealthCheckConfig struct {
	// AlarmIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-alarmidentifier
	AlarmIdentifier cfz.Expression[AWS_Route53_HealthCheck_AlarmIdentifier] `json:"AlarmIdentifier,omitempty"`

	// ChildHealthChecks is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-childhealthchecks
	ChildHealthChecks cfz.ExpressionSlice[string] `json:"ChildHealthChecks,omitempty"`

	// EnableSNI is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-enablesni
	EnableSNI cfz.Expression[bool] `json:"EnableSNI,omitempty"`

	// FailureThreshold is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-failurethreshold
	FailureThreshold cfz.Expression[int32] `json:"FailureThreshold,omitempty"`

	// FullyQualifiedDomainName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-fullyqualifieddomainname
	FullyQualifiedDomainName cfz.Expression[string] `json:"FullyQualifiedDomainName,omitempty"`

	// HealthThreshold is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-healththreshold
	HealthThreshold cfz.Expression[int32] `json:"HealthThreshold,omitempty"`

	// IPAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-ipaddress
	IPAddress cfz.Expression[string] `json:"IPAddress,omitempty"`

	// InsufficientDataHealthStatus is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-insufficientdatahealthstatus
	InsufficientDataHealthStatus cfz.Expression[string] `json:"InsufficientDataHealthStatus,omitempty"`

	// Inverted is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-inverted
	Inverted cfz.Expression[bool] `json:"Inverted,omitempty"`

	// MeasureLatency is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-measurelatency
	MeasureLatency cfz.Expression[bool] `json:"MeasureLatency,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-port
	Port cfz.Expression[int32] `json:"Port,omitempty"`

	// Regions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-regions
	Regions cfz.ExpressionSlice[string] `json:"Regions,omitempty"`

	// RequestInterval is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-requestinterval
	RequestInterval cfz.Expression[int32] `json:"RequestInterval,omitempty"`

	// ResourcePath is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-resourcepath
	ResourcePath cfz.Expression[string] `json:"ResourcePath,omitempty"`

	// RoutingControlArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-routingcontrolarn
	RoutingControlArn cfz.Expression[string] `json:"RoutingControlArn,omitempty"`

	// SearchString is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-searchstring
	SearchString cfz.Expression[string] `json:"SearchString,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-healthcheck-healthcheckconfig.html#cfn-route53-healthcheck-healthcheckconfig-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_Route53_HealthCheck_HealthCheckConfig initializes a new AWS_Route53_HealthCheck_HealthCheckConfig.
func New__AWS_Route53_HealthCheck_HealthCheckConfig() AWS_Route53_HealthCheck_HealthCheckConfig {
	return AWS_Route53_HealthCheck_HealthCheckConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_Route53_HealthCheck_HealthCheckConfig) GetType() string {
	return AWS_Route53_HealthCheck_HealthCheckConfig__Type
}

// Set__AlarmIdentifier updates property "AlarmIdentifier".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__AlarmIdentifier(v cfz.Expression[AWS_Route53_HealthCheck_AlarmIdentifier]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.AlarmIdentifier = v
	return t
}

// SetV__AlarmIdentifier updates property "AlarmIdentifier".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__AlarmIdentifier(v AWS_Route53_HealthCheck_AlarmIdentifier) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.AlarmIdentifier = cfz.V(v)
	return t
}

// Set__ChildHealthChecks updates property "ChildHealthChecks".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__ChildHealthChecks(v cfz.ExpressionSlice[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.ChildHealthChecks = v
	return t
}

// SetS__ChildHealthChecks updates property "ChildHealthChecks".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetS__ChildHealthChecks(v ...cfz.Expression[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.ChildHealthChecks = cfz.S(v...)
	return t
}

// SetSV__ChildHealthChecks updates property "ChildHealthChecks".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetSV__ChildHealthChecks(v ...string) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.ChildHealthChecks = cfz.SV(v...)
	return t
}

// Set__EnableSNI updates property "EnableSNI".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__EnableSNI(v cfz.Expression[bool]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.EnableSNI = v
	return t
}

// SetV__EnableSNI updates property "EnableSNI".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__EnableSNI(v bool) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.EnableSNI = cfz.V(v)
	return t
}

// Set__FailureThreshold updates property "FailureThreshold".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__FailureThreshold(v cfz.Expression[int32]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.FailureThreshold = v
	return t
}

// SetV__FailureThreshold updates property "FailureThreshold".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__FailureThreshold(v int32) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.FailureThreshold = cfz.V(v)
	return t
}

// Set__FullyQualifiedDomainName updates property "FullyQualifiedDomainName".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__FullyQualifiedDomainName(v cfz.Expression[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.FullyQualifiedDomainName = v
	return t
}

// SetV__FullyQualifiedDomainName updates property "FullyQualifiedDomainName".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__FullyQualifiedDomainName(v string) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.FullyQualifiedDomainName = cfz.V(v)
	return t
}

// Set__HealthThreshold updates property "HealthThreshold".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__HealthThreshold(v cfz.Expression[int32]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.HealthThreshold = v
	return t
}

// SetV__HealthThreshold updates property "HealthThreshold".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__HealthThreshold(v int32) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.HealthThreshold = cfz.V(v)
	return t
}

// Set__IPAddress updates property "IPAddress".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__IPAddress(v cfz.Expression[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.IPAddress = v
	return t
}

// SetV__IPAddress updates property "IPAddress".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__IPAddress(v string) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.IPAddress = cfz.V(v)
	return t
}

// Set__InsufficientDataHealthStatus updates property "InsufficientDataHealthStatus".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__InsufficientDataHealthStatus(v cfz.Expression[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.InsufficientDataHealthStatus = v
	return t
}

// SetV__InsufficientDataHealthStatus updates property "InsufficientDataHealthStatus".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__InsufficientDataHealthStatus(v string) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.InsufficientDataHealthStatus = cfz.V(v)
	return t
}

// Set__Inverted updates property "Inverted".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__Inverted(v cfz.Expression[bool]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.Inverted = v
	return t
}

// SetV__Inverted updates property "Inverted".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__Inverted(v bool) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.Inverted = cfz.V(v)
	return t
}

// Set__MeasureLatency updates property "MeasureLatency".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__MeasureLatency(v cfz.Expression[bool]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.MeasureLatency = v
	return t
}

// SetV__MeasureLatency updates property "MeasureLatency".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__MeasureLatency(v bool) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.MeasureLatency = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__Port(v cfz.Expression[int32]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__Port(v int32) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.Port = cfz.V(v)
	return t
}

// Set__Regions updates property "Regions".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__Regions(v cfz.ExpressionSlice[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.Regions = v
	return t
}

// SetS__Regions updates property "Regions".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetS__Regions(v ...cfz.Expression[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.Regions = cfz.S(v...)
	return t
}

// SetSV__Regions updates property "Regions".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetSV__Regions(v ...string) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.Regions = cfz.SV(v...)
	return t
}

// Set__RequestInterval updates property "RequestInterval".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__RequestInterval(v cfz.Expression[int32]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.RequestInterval = v
	return t
}

// SetV__RequestInterval updates property "RequestInterval".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__RequestInterval(v int32) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.RequestInterval = cfz.V(v)
	return t
}

// Set__ResourcePath updates property "ResourcePath".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__ResourcePath(v cfz.Expression[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.ResourcePath = v
	return t
}

// SetV__ResourcePath updates property "ResourcePath".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__ResourcePath(v string) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.ResourcePath = cfz.V(v)
	return t
}

// Set__RoutingControlArn updates property "RoutingControlArn".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__RoutingControlArn(v cfz.Expression[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.RoutingControlArn = v
	return t
}

// SetV__RoutingControlArn updates property "RoutingControlArn".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__RoutingControlArn(v string) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.RoutingControlArn = cfz.V(v)
	return t
}

// Set__SearchString updates property "SearchString".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__SearchString(v cfz.Expression[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.SearchString = v
	return t
}

// SetV__SearchString updates property "SearchString".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__SearchString(v string) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.SearchString = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) Set__Type(v cfz.Expression[string]) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t AWS_Route53_HealthCheck_HealthCheckConfig) SetV__Type(v string) AWS_Route53_HealthCheck_HealthCheckConfig {
	t.Type = cfz.V(v)
	return t
}
