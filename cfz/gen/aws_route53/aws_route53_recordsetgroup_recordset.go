// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_route53

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Route53_RecordSetGroup_RecordSet__Type is the CloudFormation type for AWS::Route53::RecordSetGroup.RecordSet.
	AWS_Route53_RecordSetGroup_RecordSet__Type = "AWS::Route53::RecordSetGroup.RecordSet"
)

var (
	// AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap reports all the CloudFormation properties for AWS::Route53::RecordSetGroup.RecordSet.
	AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap = struct {
		AliasTarget          string
		CidrRoutingConfig    string
		Failover             string
		GeoLocation          string
		GeoProximityLocation string
		HealthCheckId        string
		HostedZoneId         string
		HostedZoneName       string
		MultiValueAnswer     string
		Name                 string
		Region               string
		ResourceRecords      string
		SetIdentifier        string
		TTL                  string
		Type                 string
		Weight               string
	}{
		AliasTarget:          "AliasTarget",
		CidrRoutingConfig:    "CidrRoutingConfig",
		Failover:             "Failover",
		GeoLocation:          "GeoLocation",
		GeoProximityLocation: "GeoProximityLocation",
		HealthCheckId:        "HealthCheckId",
		HostedZoneId:         "HostedZoneId",
		HostedZoneName:       "HostedZoneName",
		MultiValueAnswer:     "MultiValueAnswer",
		Name:                 "Name",
		Region:               "Region",
		ResourceRecords:      "ResourceRecords",
		SetIdentifier:        "SetIdentifier",
		TTL:                  "TTL",
		Type:                 "Type",
		Weight:               "Weight",
	}

	// AWS_Route53_RecordSetGroup_RecordSet__PropertiesSlice reports all the CloudFormation properties for AWS::Route53::RecordSetGroup.RecordSet.
	AWS_Route53_RecordSetGroup_RecordSet__PropertiesSlice = []string{
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.AliasTarget,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.CidrRoutingConfig,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.Failover,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.GeoLocation,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.GeoProximityLocation,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.HealthCheckId,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.HostedZoneId,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.HostedZoneName,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.MultiValueAnswer,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.Name,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.Region,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.ResourceRecords,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.SetIdentifier,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.TTL,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.Type,
		AWS_Route53_RecordSetGroup_RecordSet__PropertiesMap.Weight,
	}
)

// AWS_Route53_RecordSetGroup_RecordSet is a binding for AWS::Route53::RecordSetGroup.RecordSet.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html
type AWS_Route53_RecordSetGroup_RecordSet struct {
	// AliasTarget is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-aliastarget
	AliasTarget cfz.Expression[AWS_Route53_RecordSetGroup_AliasTarget] `json:"AliasTarget,omitempty"`

	// CidrRoutingConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-cidrroutingconfig
	CidrRoutingConfig cfz.Expression[AWS_Route53_RecordSetGroup_CidrRoutingConfig] `json:"CidrRoutingConfig,omitempty"`

	// Failover is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-failover
	Failover cfz.Expression[string] `json:"Failover,omitempty"`

	// GeoLocation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-geolocation
	GeoLocation cfz.Expression[AWS_Route53_RecordSetGroup_GeoLocation] `json:"GeoLocation,omitempty"`

	// GeoProximityLocation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-geoproximitylocation
	GeoProximityLocation cfz.Expression[AWS_Route53_RecordSetGroup_GeoProximityLocation] `json:"GeoProximityLocation,omitempty"`

	// HealthCheckId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-healthcheckid
	HealthCheckId cfz.Expression[string] `json:"HealthCheckId,omitempty"`

	// HostedZoneId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzoneid
	HostedZoneId cfz.Expression[string] `json:"HostedZoneId,omitempty"`

	// HostedZoneName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-hostedzonename
	HostedZoneName cfz.Expression[string] `json:"HostedZoneName,omitempty"`

	// MultiValueAnswer is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-multivalueanswer
	MultiValueAnswer cfz.Expression[bool] `json:"MultiValueAnswer,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Region is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-region
	Region cfz.Expression[string] `json:"Region,omitempty"`

	// ResourceRecords is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-resourcerecords
	ResourceRecords cfz.ExpressionSlice[string] `json:"ResourceRecords,omitempty"`

	// SetIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-setidentifier
	SetIdentifier cfz.Expression[string] `json:"SetIdentifier,omitempty"`

	// TTL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-ttl
	TTL cfz.Expression[string] `json:"TTL,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-type
	Type cfz.Expression[string] `json:"Type,omitempty"`

	// Weight is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html#cfn-route53-recordset-weight
	Weight cfz.Expression[int32] `json:"Weight,omitempty"`
}

// New__AWS_Route53_RecordSetGroup_RecordSet initializes a new AWS_Route53_RecordSetGroup_RecordSet.
func New__AWS_Route53_RecordSetGroup_RecordSet() AWS_Route53_RecordSetGroup_RecordSet {
	return AWS_Route53_RecordSetGroup_RecordSet{}
}

// GetType returns the CloudFormation type.
func (AWS_Route53_RecordSetGroup_RecordSet) GetType() string {
	return AWS_Route53_RecordSetGroup_RecordSet__Type
}

// Set__AliasTarget updates property "AliasTarget".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__AliasTarget(v cfz.Expression[AWS_Route53_RecordSetGroup_AliasTarget]) AWS_Route53_RecordSetGroup_RecordSet {
	t.AliasTarget = v
	return t
}

// SetV__AliasTarget updates property "AliasTarget".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__AliasTarget(v AWS_Route53_RecordSetGroup_AliasTarget) AWS_Route53_RecordSetGroup_RecordSet {
	t.AliasTarget = cfz.V(v)
	return t
}

// Set__CidrRoutingConfig updates property "CidrRoutingConfig".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__CidrRoutingConfig(v cfz.Expression[AWS_Route53_RecordSetGroup_CidrRoutingConfig]) AWS_Route53_RecordSetGroup_RecordSet {
	t.CidrRoutingConfig = v
	return t
}

// SetV__CidrRoutingConfig updates property "CidrRoutingConfig".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__CidrRoutingConfig(v AWS_Route53_RecordSetGroup_CidrRoutingConfig) AWS_Route53_RecordSetGroup_RecordSet {
	t.CidrRoutingConfig = cfz.V(v)
	return t
}

// Set__Failover updates property "Failover".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__Failover(v cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.Failover = v
	return t
}

// SetV__Failover updates property "Failover".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__Failover(v string) AWS_Route53_RecordSetGroup_RecordSet {
	t.Failover = cfz.V(v)
	return t
}

// Set__GeoLocation updates property "GeoLocation".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__GeoLocation(v cfz.Expression[AWS_Route53_RecordSetGroup_GeoLocation]) AWS_Route53_RecordSetGroup_RecordSet {
	t.GeoLocation = v
	return t
}

// SetV__GeoLocation updates property "GeoLocation".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__GeoLocation(v AWS_Route53_RecordSetGroup_GeoLocation) AWS_Route53_RecordSetGroup_RecordSet {
	t.GeoLocation = cfz.V(v)
	return t
}

// Set__GeoProximityLocation updates property "GeoProximityLocation".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__GeoProximityLocation(v cfz.Expression[AWS_Route53_RecordSetGroup_GeoProximityLocation]) AWS_Route53_RecordSetGroup_RecordSet {
	t.GeoProximityLocation = v
	return t
}

// SetV__GeoProximityLocation updates property "GeoProximityLocation".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__GeoProximityLocation(v AWS_Route53_RecordSetGroup_GeoProximityLocation) AWS_Route53_RecordSetGroup_RecordSet {
	t.GeoProximityLocation = cfz.V(v)
	return t
}

// Set__HealthCheckId updates property "HealthCheckId".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__HealthCheckId(v cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.HealthCheckId = v
	return t
}

// SetV__HealthCheckId updates property "HealthCheckId".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__HealthCheckId(v string) AWS_Route53_RecordSetGroup_RecordSet {
	t.HealthCheckId = cfz.V(v)
	return t
}

// Set__HostedZoneId updates property "HostedZoneId".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__HostedZoneId(v cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.HostedZoneId = v
	return t
}

// SetV__HostedZoneId updates property "HostedZoneId".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__HostedZoneId(v string) AWS_Route53_RecordSetGroup_RecordSet {
	t.HostedZoneId = cfz.V(v)
	return t
}

// Set__HostedZoneName updates property "HostedZoneName".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__HostedZoneName(v cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.HostedZoneName = v
	return t
}

// SetV__HostedZoneName updates property "HostedZoneName".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__HostedZoneName(v string) AWS_Route53_RecordSetGroup_RecordSet {
	t.HostedZoneName = cfz.V(v)
	return t
}

// Set__MultiValueAnswer updates property "MultiValueAnswer".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__MultiValueAnswer(v cfz.Expression[bool]) AWS_Route53_RecordSetGroup_RecordSet {
	t.MultiValueAnswer = v
	return t
}

// SetV__MultiValueAnswer updates property "MultiValueAnswer".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__MultiValueAnswer(v bool) AWS_Route53_RecordSetGroup_RecordSet {
	t.MultiValueAnswer = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__Name(v cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__Name(v string) AWS_Route53_RecordSetGroup_RecordSet {
	t.Name = cfz.V(v)
	return t
}

// Set__Region updates property "Region".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__Region(v cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.Region = v
	return t
}

// SetV__Region updates property "Region".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__Region(v string) AWS_Route53_RecordSetGroup_RecordSet {
	t.Region = cfz.V(v)
	return t
}

// Set__ResourceRecords updates property "ResourceRecords".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__ResourceRecords(v cfz.ExpressionSlice[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.ResourceRecords = v
	return t
}

// SetS__ResourceRecords updates property "ResourceRecords".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetS__ResourceRecords(v ...cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.ResourceRecords = cfz.S(v...)
	return t
}

// SetSV__ResourceRecords updates property "ResourceRecords".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetSV__ResourceRecords(v ...string) AWS_Route53_RecordSetGroup_RecordSet {
	t.ResourceRecords = cfz.SV(v...)
	return t
}

// Set__SetIdentifier updates property "SetIdentifier".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__SetIdentifier(v cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.SetIdentifier = v
	return t
}

// SetV__SetIdentifier updates property "SetIdentifier".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__SetIdentifier(v string) AWS_Route53_RecordSetGroup_RecordSet {
	t.SetIdentifier = cfz.V(v)
	return t
}

// Set__TTL updates property "TTL".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__TTL(v cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.TTL = v
	return t
}

// SetV__TTL updates property "TTL".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__TTL(v string) AWS_Route53_RecordSetGroup_RecordSet {
	t.TTL = cfz.V(v)
	return t
}

// Set__Type updates property "Type".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__Type(v cfz.Expression[string]) AWS_Route53_RecordSetGroup_RecordSet {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__Type(v string) AWS_Route53_RecordSetGroup_RecordSet {
	t.Type = cfz.V(v)
	return t
}

// Set__Weight updates property "Weight".
func (t AWS_Route53_RecordSetGroup_RecordSet) Set__Weight(v cfz.Expression[int32]) AWS_Route53_RecordSetGroup_RecordSet {
	t.Weight = v
	return t
}

// SetV__Weight updates property "Weight".
func (t AWS_Route53_RecordSetGroup_RecordSet) SetV__Weight(v int32) AWS_Route53_RecordSetGroup_RecordSet {
	t.Weight = cfz.V(v)
	return t
}
