// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_redshift

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Redshift_EndpointAuthorization)(nil)
	_ cfz.Resource                   = (*AWS_Redshift_EndpointAuthorization)(nil)
)

const (
	// AWS_Redshift_EndpointAuthorization__Type is the CloudFormation type for AWS::Redshift::EndpointAuthorization.
	AWS_Redshift_EndpointAuthorization__Type = "AWS::Redshift::EndpointAuthorization"
)

var (
	// AWS_Redshift_EndpointAuthorization__AttributesMap reports all the CloudFormation attributes for AWS::Redshift::EndpointAuthorization.
	AWS_Redshift_EndpointAuthorization__AttributesMap = struct {
		AllowedAllVPCs string
		AllowedVPCs    string
		AuthorizeTime  string
		ClusterStatus  string
		EndpointCount  string
		Grantee        string
		Grantor        string
		Status         string
	}{
		AllowedAllVPCs: "AllowedAllVPCs",
		AllowedVPCs:    "AllowedVPCs",
		AuthorizeTime:  "AuthorizeTime",
		ClusterStatus:  "ClusterStatus",
		EndpointCount:  "EndpointCount",
		Grantee:        "Grantee",
		Grantor:        "Grantor",
		Status:         "Status",
	}

	// AWS_Redshift_EndpointAuthorization__AttributesSlice reports all the CloudFormation attributes for AWS::Redshift::EndpointAuthorization.
	AWS_Redshift_EndpointAuthorization__AttributesSlice = []string{
		AWS_Redshift_EndpointAuthorization__AttributesMap.AllowedAllVPCs,
		AWS_Redshift_EndpointAuthorization__AttributesMap.AllowedVPCs,
		AWS_Redshift_EndpointAuthorization__AttributesMap.AuthorizeTime,
		AWS_Redshift_EndpointAuthorization__AttributesMap.ClusterStatus,
		AWS_Redshift_EndpointAuthorization__AttributesMap.EndpointCount,
		AWS_Redshift_EndpointAuthorization__AttributesMap.Grantee,
		AWS_Redshift_EndpointAuthorization__AttributesMap.Grantor,
		AWS_Redshift_EndpointAuthorization__AttributesMap.Status,
	}
)

var (
	// AWS_Redshift_EndpointAuthorization__PropertiesMap reports all the CloudFormation properties for AWS::Redshift::EndpointAuthorization.
	AWS_Redshift_EndpointAuthorization__PropertiesMap = struct {
		Account           string
		ClusterIdentifier string
		Force             string
		VpcIds            string
	}{
		Account:           "Account",
		ClusterIdentifier: "ClusterIdentifier",
		Force:             "Force",
		VpcIds:            "VpcIds",
	}

	// AWS_Redshift_EndpointAuthorization__PropertiesSlice reports all the CloudFormation properties for AWS::Redshift::EndpointAuthorization.
	AWS_Redshift_EndpointAuthorization__PropertiesSlice = []string{
		AWS_Redshift_EndpointAuthorization__PropertiesMap.Account,
		AWS_Redshift_EndpointAuthorization__PropertiesMap.ClusterIdentifier,
		AWS_Redshift_EndpointAuthorization__PropertiesMap.Force,
		AWS_Redshift_EndpointAuthorization__PropertiesMap.VpcIds,
	}
)

// AWS_Redshift_EndpointAuthorization is a binding for AWS::Redshift::EndpointAuthorization.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html
type AWS_Redshift_EndpointAuthorization struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Account is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-account
	Account cfz.Expression[string] `json:"Account,omitempty"`

	// ClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-clusteridentifier
	ClusterIdentifier cfz.Expression[string] `json:"ClusterIdentifier,omitempty"`

	// Force is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-force
	Force cfz.Expression[bool] `json:"Force,omitempty"`

	// VpcIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointauthorization.html#cfn-redshift-endpointauthorization-vpcids
	VpcIds cfz.ExpressionSlice[string] `json:"VpcIds,omitempty"`
}

// New__AWS_Redshift_EndpointAuthorization initializes a new *AWS_Redshift_EndpointAuthorization.
func New__AWS_Redshift_EndpointAuthorization(logicalName string) *AWS_Redshift_EndpointAuthorization {
	return &AWS_Redshift_EndpointAuthorization{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Redshift_EndpointAuthorization) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Redshift_EndpointAuthorization) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Redshift_EndpointAuthorization) GetType() string {
	return AWS_Redshift_EndpointAuthorization__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Redshift_EndpointAuthorization) Set__LogicalName(v string) *AWS_Redshift_EndpointAuthorization {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Redshift_EndpointAuthorization) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Redshift_EndpointAuthorization {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Redshift_EndpointAuthorization) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Redshift_EndpointAuthorization {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Redshift_EndpointAuthorization) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Redshift_EndpointAuthorization {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Redshift_EndpointAuthorization) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Redshift_EndpointAuthorization {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Redshift_EndpointAuthorization) Set__RequestedOutputs(v []cfz.Output) *AWS_Redshift_EndpointAuthorization {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Redshift_EndpointAuthorization) Add__RequestedOutputs(v ...cfz.Output) *AWS_Redshift_EndpointAuthorization {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Account updates property "Account".
func (t *AWS_Redshift_EndpointAuthorization) Set__Account(v cfz.Expression[string]) *AWS_Redshift_EndpointAuthorization {
	t.Account = v
	return t
}

// SetV__Account updates property "Account".
func (t *AWS_Redshift_EndpointAuthorization) SetV__Account(v string) *AWS_Redshift_EndpointAuthorization {
	t.Account = cfz.V(v)
	return t
}

// Set__ClusterIdentifier updates property "ClusterIdentifier".
func (t *AWS_Redshift_EndpointAuthorization) Set__ClusterIdentifier(v cfz.Expression[string]) *AWS_Redshift_EndpointAuthorization {
	t.ClusterIdentifier = v
	return t
}

// SetV__ClusterIdentifier updates property "ClusterIdentifier".
func (t *AWS_Redshift_EndpointAuthorization) SetV__ClusterIdentifier(v string) *AWS_Redshift_EndpointAuthorization {
	t.ClusterIdentifier = cfz.V(v)
	return t
}

// Set__Force updates property "Force".
func (t *AWS_Redshift_EndpointAuthorization) Set__Force(v cfz.Expression[bool]) *AWS_Redshift_EndpointAuthorization {
	t.Force = v
	return t
}

// SetV__Force updates property "Force".
func (t *AWS_Redshift_EndpointAuthorization) SetV__Force(v bool) *AWS_Redshift_EndpointAuthorization {
	t.Force = cfz.V(v)
	return t
}

// Set__VpcIds updates property "VpcIds".
func (t *AWS_Redshift_EndpointAuthorization) Set__VpcIds(v cfz.ExpressionSlice[string]) *AWS_Redshift_EndpointAuthorization {
	t.VpcIds = v
	return t
}

// SetS__VpcIds updates property "VpcIds".
func (t *AWS_Redshift_EndpointAuthorization) SetS__VpcIds(v ...cfz.Expression[string]) *AWS_Redshift_EndpointAuthorization {
	t.VpcIds = cfz.S(v...)
	return t
}

// SetSV__VpcIds updates property "VpcIds".
func (t *AWS_Redshift_EndpointAuthorization) SetSV__VpcIds(v ...string) *AWS_Redshift_EndpointAuthorization {
	t.VpcIds = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Redshift_EndpointAuthorization) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AllowedAllVPCs returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AllowedAllVPCs
func (t *AWS_Redshift_EndpointAuthorization) GetAtt__AllowedAllVPCs() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAuthorization__AttributesMap.AllowedAllVPCs))
}

// GetAttSlice__AllowedVPCs returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AllowedVPCs
func (t *AWS_Redshift_EndpointAuthorization) GetAttSlice__AllowedVPCs() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAuthorization__AttributesMap.AllowedVPCs))
}

// GetAtt__AuthorizeTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AuthorizeTime
func (t *AWS_Redshift_EndpointAuthorization) GetAtt__AuthorizeTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAuthorization__AttributesMap.AuthorizeTime))
}

// GetAtt__ClusterStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ClusterStatus
func (t *AWS_Redshift_EndpointAuthorization) GetAtt__ClusterStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAuthorization__AttributesMap.ClusterStatus))
}

// GetAtt__EndpointCount returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointCount
func (t *AWS_Redshift_EndpointAuthorization) GetAtt__EndpointCount() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAuthorization__AttributesMap.EndpointCount))
}

// GetAtt__Grantee returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Grantee
func (t *AWS_Redshift_EndpointAuthorization) GetAtt__Grantee() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAuthorization__AttributesMap.Grantee))
}

// GetAtt__Grantor returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Grantor
func (t *AWS_Redshift_EndpointAuthorization) GetAtt__Grantor() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAuthorization__AttributesMap.Grantor))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_Redshift_EndpointAuthorization) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAuthorization__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Redshift_EndpointAuthorization) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AllowedAllVPCs returns a conventionally configured output for an attribute of this resource.
// Attribute: AllowedAllVPCs
func (t *AWS_Redshift_EndpointAuthorization) GetConventionalOutputAtt__AllowedAllVPCs(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAllowedAllVPCs", t.GetAtt__AllowedAllVPCs())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AllowedVPCs returns a conventionally configured output for an attribute of this resource.
// Attribute: AllowedVPCs
func (t *AWS_Redshift_EndpointAuthorization) GetConventionalOutputAtt__AllowedVPCs(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAllowedVPCs", t.GetAttSlice__AllowedVPCs())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AuthorizeTime returns a conventionally configured output for an attribute of this resource.
// Attribute: AuthorizeTime
func (t *AWS_Redshift_EndpointAuthorization) GetConventionalOutputAtt__AuthorizeTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAuthorizeTime", t.GetAtt__AuthorizeTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ClusterStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: ClusterStatus
func (t *AWS_Redshift_EndpointAuthorization) GetConventionalOutputAtt__ClusterStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttClusterStatus", t.GetAtt__ClusterStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointCount returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointCount
func (t *AWS_Redshift_EndpointAuthorization) GetConventionalOutputAtt__EndpointCount(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointCount", t.GetAtt__EndpointCount())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Grantee returns a conventionally configured output for an attribute of this resource.
// Attribute: Grantee
func (t *AWS_Redshift_EndpointAuthorization) GetConventionalOutputAtt__Grantee(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGrantee", t.GetAtt__Grantee())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Grantor returns a conventionally configured output for an attribute of this resource.
// Attribute: Grantor
func (t *AWS_Redshift_EndpointAuthorization) GetConventionalOutputAtt__Grantor(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttGrantor", t.GetAtt__Grantor())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_Redshift_EndpointAuthorization) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Redshift_EndpointAuthorization) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Redshift_EndpointAuthorization

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Redshift_EndpointAuthorization) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
