// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_redshift

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Redshift_Cluster)(nil)
	_ cfz.Resource                   = (*AWS_Redshift_Cluster)(nil)
)

const (
	// AWS_Redshift_Cluster__Type is the CloudFormation type for AWS::Redshift::Cluster.
	AWS_Redshift_Cluster__Type = "AWS::Redshift::Cluster"
)

var (
	// AWS_Redshift_Cluster__AttributesMap reports all the CloudFormation attributes for AWS::Redshift::Cluster.
	AWS_Redshift_Cluster__AttributesMap = struct {
		ClusterNamespaceArn        string
		DeferMaintenanceIdentifier string
		Endpoint_Address           string
		Endpoint_Port              string
		MasterPasswordSecretArn    string
	}{
		ClusterNamespaceArn:        "ClusterNamespaceArn",
		DeferMaintenanceIdentifier: "DeferMaintenanceIdentifier",
		Endpoint_Address:           "Endpoint.Address",
		Endpoint_Port:              "Endpoint.Port",
		MasterPasswordSecretArn:    "MasterPasswordSecretArn",
	}

	// AWS_Redshift_Cluster__AttributesSlice reports all the CloudFormation attributes for AWS::Redshift::Cluster.
	AWS_Redshift_Cluster__AttributesSlice = []string{
		AWS_Redshift_Cluster__AttributesMap.ClusterNamespaceArn,
		AWS_Redshift_Cluster__AttributesMap.DeferMaintenanceIdentifier,
		AWS_Redshift_Cluster__AttributesMap.Endpoint_Address,
		AWS_Redshift_Cluster__AttributesMap.Endpoint_Port,
		AWS_Redshift_Cluster__AttributesMap.MasterPasswordSecretArn,
	}
)

var (
	// AWS_Redshift_Cluster__PropertiesMap reports all the CloudFormation properties for AWS::Redshift::Cluster.
	AWS_Redshift_Cluster__PropertiesMap = struct {
		AllowVersionUpgrade              string
		AquaConfigurationStatus          string
		AutomatedSnapshotRetentionPeriod string
		AvailabilityZone                 string
		AvailabilityZoneRelocation       string
		AvailabilityZoneRelocationStatus string
		Classic                          string
		ClusterIdentifier                string
		ClusterParameterGroupName        string
		ClusterSecurityGroups            string
		ClusterSubnetGroupName           string
		ClusterType                      string
		ClusterVersion                   string
		DBName                           string
		DeferMaintenance                 string
		DeferMaintenanceDuration         string
		DeferMaintenanceEndTime          string
		DeferMaintenanceStartTime        string
		DestinationRegion                string
		ElasticIp                        string
		Encrypted                        string
		Endpoint                         string
		EnhancedVpcRouting               string
		HsmClientCertificateIdentifier   string
		HsmConfigurationIdentifier       string
		IamRoles                         string
		KmsKeyId                         string
		LoggingProperties                string
		MaintenanceTrackName             string
		ManageMasterPassword             string
		ManualSnapshotRetentionPeriod    string
		MasterPasswordSecretKmsKeyId     string
		MasterUserPassword               string
		MasterUsername                   string
		MultiAZ                          string
		NamespaceResourcePolicy          string
		NodeType                         string
		NumberOfNodes                    string
		OwnerAccount                     string
		Port                             string
		PreferredMaintenanceWindow       string
		PubliclyAccessible               string
		ResourceAction                   string
		RevisionTarget                   string
		RotateEncryptionKey              string
		SnapshotClusterIdentifier        string
		SnapshotCopyGrantName            string
		SnapshotCopyManual               string
		SnapshotCopyRetentionPeriod      string
		SnapshotIdentifier               string
		Tags                             string
		VpcSecurityGroupIds              string
	}{
		AllowVersionUpgrade:              "AllowVersionUpgrade",
		AquaConfigurationStatus:          "AquaConfigurationStatus",
		AutomatedSnapshotRetentionPeriod: "AutomatedSnapshotRetentionPeriod",
		AvailabilityZone:                 "AvailabilityZone",
		AvailabilityZoneRelocation:       "AvailabilityZoneRelocation",
		AvailabilityZoneRelocationStatus: "AvailabilityZoneRelocationStatus",
		Classic:                          "Classic",
		ClusterIdentifier:                "ClusterIdentifier",
		ClusterParameterGroupName:        "ClusterParameterGroupName",
		ClusterSecurityGroups:            "ClusterSecurityGroups",
		ClusterSubnetGroupName:           "ClusterSubnetGroupName",
		ClusterType:                      "ClusterType",
		ClusterVersion:                   "ClusterVersion",
		DBName:                           "DBName",
		DeferMaintenance:                 "DeferMaintenance",
		DeferMaintenanceDuration:         "DeferMaintenanceDuration",
		DeferMaintenanceEndTime:          "DeferMaintenanceEndTime",
		DeferMaintenanceStartTime:        "DeferMaintenanceStartTime",
		DestinationRegion:                "DestinationRegion",
		ElasticIp:                        "ElasticIp",
		Encrypted:                        "Encrypted",
		Endpoint:                         "Endpoint",
		EnhancedVpcRouting:               "EnhancedVpcRouting",
		HsmClientCertificateIdentifier:   "HsmClientCertificateIdentifier",
		HsmConfigurationIdentifier:       "HsmConfigurationIdentifier",
		IamRoles:                         "IamRoles",
		KmsKeyId:                         "KmsKeyId",
		LoggingProperties:                "LoggingProperties",
		MaintenanceTrackName:             "MaintenanceTrackName",
		ManageMasterPassword:             "ManageMasterPassword",
		ManualSnapshotRetentionPeriod:    "ManualSnapshotRetentionPeriod",
		MasterPasswordSecretKmsKeyId:     "MasterPasswordSecretKmsKeyId",
		MasterUserPassword:               "MasterUserPassword",
		MasterUsername:                   "MasterUsername",
		MultiAZ:                          "MultiAZ",
		NamespaceResourcePolicy:          "NamespaceResourcePolicy",
		NodeType:                         "NodeType",
		NumberOfNodes:                    "NumberOfNodes",
		OwnerAccount:                     "OwnerAccount",
		Port:                             "Port",
		PreferredMaintenanceWindow:       "PreferredMaintenanceWindow",
		PubliclyAccessible:               "PubliclyAccessible",
		ResourceAction:                   "ResourceAction",
		RevisionTarget:                   "RevisionTarget",
		RotateEncryptionKey:              "RotateEncryptionKey",
		SnapshotClusterIdentifier:        "SnapshotClusterIdentifier",
		SnapshotCopyGrantName:            "SnapshotCopyGrantName",
		SnapshotCopyManual:               "SnapshotCopyManual",
		SnapshotCopyRetentionPeriod:      "SnapshotCopyRetentionPeriod",
		SnapshotIdentifier:               "SnapshotIdentifier",
		Tags:                             "Tags",
		VpcSecurityGroupIds:              "VpcSecurityGroupIds",
	}

	// AWS_Redshift_Cluster__PropertiesSlice reports all the CloudFormation properties for AWS::Redshift::Cluster.
	AWS_Redshift_Cluster__PropertiesSlice = []string{
		AWS_Redshift_Cluster__PropertiesMap.AllowVersionUpgrade,
		AWS_Redshift_Cluster__PropertiesMap.AquaConfigurationStatus,
		AWS_Redshift_Cluster__PropertiesMap.AutomatedSnapshotRetentionPeriod,
		AWS_Redshift_Cluster__PropertiesMap.AvailabilityZone,
		AWS_Redshift_Cluster__PropertiesMap.AvailabilityZoneRelocation,
		AWS_Redshift_Cluster__PropertiesMap.AvailabilityZoneRelocationStatus,
		AWS_Redshift_Cluster__PropertiesMap.Classic,
		AWS_Redshift_Cluster__PropertiesMap.ClusterIdentifier,
		AWS_Redshift_Cluster__PropertiesMap.ClusterParameterGroupName,
		AWS_Redshift_Cluster__PropertiesMap.ClusterSecurityGroups,
		AWS_Redshift_Cluster__PropertiesMap.ClusterSubnetGroupName,
		AWS_Redshift_Cluster__PropertiesMap.ClusterType,
		AWS_Redshift_Cluster__PropertiesMap.ClusterVersion,
		AWS_Redshift_Cluster__PropertiesMap.DBName,
		AWS_Redshift_Cluster__PropertiesMap.DeferMaintenance,
		AWS_Redshift_Cluster__PropertiesMap.DeferMaintenanceDuration,
		AWS_Redshift_Cluster__PropertiesMap.DeferMaintenanceEndTime,
		AWS_Redshift_Cluster__PropertiesMap.DeferMaintenanceStartTime,
		AWS_Redshift_Cluster__PropertiesMap.DestinationRegion,
		AWS_Redshift_Cluster__PropertiesMap.ElasticIp,
		AWS_Redshift_Cluster__PropertiesMap.Encrypted,
		AWS_Redshift_Cluster__PropertiesMap.Endpoint,
		AWS_Redshift_Cluster__PropertiesMap.EnhancedVpcRouting,
		AWS_Redshift_Cluster__PropertiesMap.HsmClientCertificateIdentifier,
		AWS_Redshift_Cluster__PropertiesMap.HsmConfigurationIdentifier,
		AWS_Redshift_Cluster__PropertiesMap.IamRoles,
		AWS_Redshift_Cluster__PropertiesMap.KmsKeyId,
		AWS_Redshift_Cluster__PropertiesMap.LoggingProperties,
		AWS_Redshift_Cluster__PropertiesMap.MaintenanceTrackName,
		AWS_Redshift_Cluster__PropertiesMap.ManageMasterPassword,
		AWS_Redshift_Cluster__PropertiesMap.ManualSnapshotRetentionPeriod,
		AWS_Redshift_Cluster__PropertiesMap.MasterPasswordSecretKmsKeyId,
		AWS_Redshift_Cluster__PropertiesMap.MasterUserPassword,
		AWS_Redshift_Cluster__PropertiesMap.MasterUsername,
		AWS_Redshift_Cluster__PropertiesMap.MultiAZ,
		AWS_Redshift_Cluster__PropertiesMap.NamespaceResourcePolicy,
		AWS_Redshift_Cluster__PropertiesMap.NodeType,
		AWS_Redshift_Cluster__PropertiesMap.NumberOfNodes,
		AWS_Redshift_Cluster__PropertiesMap.OwnerAccount,
		AWS_Redshift_Cluster__PropertiesMap.Port,
		AWS_Redshift_Cluster__PropertiesMap.PreferredMaintenanceWindow,
		AWS_Redshift_Cluster__PropertiesMap.PubliclyAccessible,
		AWS_Redshift_Cluster__PropertiesMap.ResourceAction,
		AWS_Redshift_Cluster__PropertiesMap.RevisionTarget,
		AWS_Redshift_Cluster__PropertiesMap.RotateEncryptionKey,
		AWS_Redshift_Cluster__PropertiesMap.SnapshotClusterIdentifier,
		AWS_Redshift_Cluster__PropertiesMap.SnapshotCopyGrantName,
		AWS_Redshift_Cluster__PropertiesMap.SnapshotCopyManual,
		AWS_Redshift_Cluster__PropertiesMap.SnapshotCopyRetentionPeriod,
		AWS_Redshift_Cluster__PropertiesMap.SnapshotIdentifier,
		AWS_Redshift_Cluster__PropertiesMap.Tags,
		AWS_Redshift_Cluster__PropertiesMap.VpcSecurityGroupIds,
	}
)

// AWS_Redshift_Cluster is a binding for AWS::Redshift::Cluster.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html
type AWS_Redshift_Cluster struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AllowVersionUpgrade is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-allowversionupgrade
	AllowVersionUpgrade cfz.Expression[bool] `json:"AllowVersionUpgrade,omitempty"`

	// AquaConfigurationStatus is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-aquaconfigurationstatus
	AquaConfigurationStatus cfz.Expression[string] `json:"AquaConfigurationStatus,omitempty"`

	// AutomatedSnapshotRetentionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-automatedsnapshotretentionperiod
	AutomatedSnapshotRetentionPeriod cfz.Expression[int32] `json:"AutomatedSnapshotRetentionPeriod,omitempty"`

	// AvailabilityZone is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzone
	AvailabilityZone cfz.Expression[string] `json:"AvailabilityZone,omitempty"`

	// AvailabilityZoneRelocation is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzonerelocation
	AvailabilityZoneRelocation cfz.Expression[bool] `json:"AvailabilityZoneRelocation,omitempty"`

	// AvailabilityZoneRelocationStatus is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-availabilityzonerelocationstatus
	AvailabilityZoneRelocationStatus cfz.Expression[string] `json:"AvailabilityZoneRelocationStatus,omitempty"`

	// Classic is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-classic
	Classic cfz.Expression[bool] `json:"Classic,omitempty"`

	// ClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusteridentifier
	ClusterIdentifier cfz.Expression[string] `json:"ClusterIdentifier,omitempty"`

	// ClusterParameterGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterparametergroupname
	ClusterParameterGroupName cfz.Expression[string] `json:"ClusterParameterGroupName,omitempty"`

	// ClusterSecurityGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersecuritygroups
	ClusterSecurityGroups cfz.ExpressionSlice[string] `json:"ClusterSecurityGroups,omitempty"`

	// ClusterSubnetGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustersubnetgroupname
	ClusterSubnetGroupName cfz.Expression[string] `json:"ClusterSubnetGroupName,omitempty"`

	// ClusterType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clustertype
	ClusterType cfz.Expression[string] `json:"ClusterType,omitempty"`

	// ClusterVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-clusterversion
	ClusterVersion cfz.Expression[string] `json:"ClusterVersion,omitempty"`

	// DBName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-dbname
	DBName cfz.Expression[string] `json:"DBName,omitempty"`

	// DeferMaintenance is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenance
	DeferMaintenance cfz.Expression[bool] `json:"DeferMaintenance,omitempty"`

	// DeferMaintenanceDuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenanceduration
	DeferMaintenanceDuration cfz.Expression[int32] `json:"DeferMaintenanceDuration,omitempty"`

	// DeferMaintenanceEndTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenanceendtime
	DeferMaintenanceEndTime cfz.Expression[string] `json:"DeferMaintenanceEndTime,omitempty"`

	// DeferMaintenanceStartTime is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-defermaintenancestarttime
	DeferMaintenanceStartTime cfz.Expression[string] `json:"DeferMaintenanceStartTime,omitempty"`

	// DestinationRegion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-destinationregion
	DestinationRegion cfz.Expression[string] `json:"DestinationRegion,omitempty"`

	// ElasticIp is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-elasticip
	ElasticIp cfz.Expression[string] `json:"ElasticIp,omitempty"`

	// Encrypted is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-encrypted
	Encrypted cfz.Expression[bool] `json:"Encrypted,omitempty"`

	// Endpoint is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-endpoint
	Endpoint cfz.Expression[AWS_Redshift_Cluster_Endpoint] `json:"Endpoint,omitempty"`

	// EnhancedVpcRouting is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-enhancedvpcrouting
	EnhancedVpcRouting cfz.Expression[bool] `json:"EnhancedVpcRouting,omitempty"`

	// HsmClientCertificateIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-hsmclientcertificateidentifier
	HsmClientCertificateIdentifier cfz.Expression[string] `json:"HsmClientCertificateIdentifier,omitempty"`

	// HsmConfigurationIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-hsmconfigurationidentifier
	HsmConfigurationIdentifier cfz.Expression[string] `json:"HsmConfigurationIdentifier,omitempty"`

	// IamRoles is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-iamroles
	IamRoles cfz.ExpressionSlice[string] `json:"IamRoles,omitempty"`

	// KmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-kmskeyid
	KmsKeyId cfz.Expression[string] `json:"KmsKeyId,omitempty"`

	// LoggingProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-loggingproperties
	LoggingProperties cfz.Expression[AWS_Redshift_Cluster_LoggingProperties] `json:"LoggingProperties,omitempty"`

	// MaintenanceTrackName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-maintenancetrackname
	MaintenanceTrackName cfz.Expression[string] `json:"MaintenanceTrackName,omitempty"`

	// ManageMasterPassword is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-managemasterpassword
	ManageMasterPassword cfz.Expression[bool] `json:"ManageMasterPassword,omitempty"`

	// ManualSnapshotRetentionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-manualsnapshotretentionperiod
	ManualSnapshotRetentionPeriod cfz.Expression[int32] `json:"ManualSnapshotRetentionPeriod,omitempty"`

	// MasterPasswordSecretKmsKeyId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masterpasswordsecretkmskeyid
	MasterPasswordSecretKmsKeyId cfz.Expression[string] `json:"MasterPasswordSecretKmsKeyId,omitempty"`

	// MasterUserPassword is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masteruserpassword
	MasterUserPassword cfz.Expression[string] `json:"MasterUserPassword,omitempty"`

	// MasterUsername is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-masterusername
	MasterUsername cfz.Expression[string] `json:"MasterUsername,omitempty"`

	// MultiAZ is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-multiaz
	MultiAZ cfz.Expression[bool] `json:"MultiAZ,omitempty"`

	// NamespaceResourcePolicy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-namespaceresourcepolicy
	NamespaceResourcePolicy cfz.Expression[json.RawMessage] `json:"NamespaceResourcePolicy,omitempty"`

	// NodeType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-nodetype
	NodeType cfz.Expression[string] `json:"NodeType,omitempty"`

	// NumberOfNodes is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-numberofnodes
	NumberOfNodes cfz.Expression[int32] `json:"NumberOfNodes,omitempty"`

	// OwnerAccount is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-owneraccount
	OwnerAccount cfz.Expression[string] `json:"OwnerAccount,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-port
	Port cfz.Expression[int32] `json:"Port,omitempty"`

	// PreferredMaintenanceWindow is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-preferredmaintenancewindow
	PreferredMaintenanceWindow cfz.Expression[string] `json:"PreferredMaintenanceWindow,omitempty"`

	// PubliclyAccessible is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-publiclyaccessible
	PubliclyAccessible cfz.Expression[bool] `json:"PubliclyAccessible,omitempty"`

	// ResourceAction is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-resourceaction
	ResourceAction cfz.Expression[string] `json:"ResourceAction,omitempty"`

	// RevisionTarget is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-revisiontarget
	RevisionTarget cfz.Expression[string] `json:"RevisionTarget,omitempty"`

	// RotateEncryptionKey is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-rotateencryptionkey
	RotateEncryptionKey cfz.Expression[bool] `json:"RotateEncryptionKey,omitempty"`

	// SnapshotClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotclusteridentifier
	SnapshotClusterIdentifier cfz.Expression[string] `json:"SnapshotClusterIdentifier,omitempty"`

	// SnapshotCopyGrantName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopygrantname
	SnapshotCopyGrantName cfz.Expression[string] `json:"SnapshotCopyGrantName,omitempty"`

	// SnapshotCopyManual is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopymanual
	SnapshotCopyManual cfz.Expression[bool] `json:"SnapshotCopyManual,omitempty"`

	// SnapshotCopyRetentionPeriod is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotcopyretentionperiod
	SnapshotCopyRetentionPeriod cfz.Expression[int32] `json:"SnapshotCopyRetentionPeriod,omitempty"`

	// SnapshotIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-snapshotidentifier
	SnapshotIdentifier cfz.Expression[string] `json:"SnapshotIdentifier,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// VpcSecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-cluster.html#cfn-redshift-cluster-vpcsecuritygroupids
	VpcSecurityGroupIds cfz.ExpressionSlice[string] `json:"VpcSecurityGroupIds,omitempty"`
}

// New__AWS_Redshift_Cluster initializes a new *AWS_Redshift_Cluster.
func New__AWS_Redshift_Cluster(logicalName string) *AWS_Redshift_Cluster {
	return &AWS_Redshift_Cluster{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Redshift_Cluster) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Redshift_Cluster) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Redshift_Cluster) GetType() string {
	return AWS_Redshift_Cluster__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Redshift_Cluster) Set__LogicalName(v string) *AWS_Redshift_Cluster {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Redshift_Cluster) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Redshift_Cluster {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Redshift_Cluster) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Redshift_Cluster {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Redshift_Cluster) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Redshift_Cluster {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Redshift_Cluster) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Redshift_Cluster {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Redshift_Cluster) Set__RequestedOutputs(v []cfz.Output) *AWS_Redshift_Cluster {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Redshift_Cluster) Add__RequestedOutputs(v ...cfz.Output) *AWS_Redshift_Cluster {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AllowVersionUpgrade updates property "AllowVersionUpgrade".
func (t *AWS_Redshift_Cluster) Set__AllowVersionUpgrade(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.AllowVersionUpgrade = v
	return t
}

// SetV__AllowVersionUpgrade updates property "AllowVersionUpgrade".
func (t *AWS_Redshift_Cluster) SetV__AllowVersionUpgrade(v bool) *AWS_Redshift_Cluster {
	t.AllowVersionUpgrade = cfz.V(v)
	return t
}

// Set__AquaConfigurationStatus updates property "AquaConfigurationStatus".
func (t *AWS_Redshift_Cluster) Set__AquaConfigurationStatus(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.AquaConfigurationStatus = v
	return t
}

// SetV__AquaConfigurationStatus updates property "AquaConfigurationStatus".
func (t *AWS_Redshift_Cluster) SetV__AquaConfigurationStatus(v string) *AWS_Redshift_Cluster {
	t.AquaConfigurationStatus = cfz.V(v)
	return t
}

// Set__AutomatedSnapshotRetentionPeriod updates property "AutomatedSnapshotRetentionPeriod".
func (t *AWS_Redshift_Cluster) Set__AutomatedSnapshotRetentionPeriod(v cfz.Expression[int32]) *AWS_Redshift_Cluster {
	t.AutomatedSnapshotRetentionPeriod = v
	return t
}

// SetV__AutomatedSnapshotRetentionPeriod updates property "AutomatedSnapshotRetentionPeriod".
func (t *AWS_Redshift_Cluster) SetV__AutomatedSnapshotRetentionPeriod(v int32) *AWS_Redshift_Cluster {
	t.AutomatedSnapshotRetentionPeriod = cfz.V(v)
	return t
}

// Set__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_Redshift_Cluster) Set__AvailabilityZone(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.AvailabilityZone = v
	return t
}

// SetV__AvailabilityZone updates property "AvailabilityZone".
func (t *AWS_Redshift_Cluster) SetV__AvailabilityZone(v string) *AWS_Redshift_Cluster {
	t.AvailabilityZone = cfz.V(v)
	return t
}

// Set__AvailabilityZoneRelocation updates property "AvailabilityZoneRelocation".
func (t *AWS_Redshift_Cluster) Set__AvailabilityZoneRelocation(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.AvailabilityZoneRelocation = v
	return t
}

// SetV__AvailabilityZoneRelocation updates property "AvailabilityZoneRelocation".
func (t *AWS_Redshift_Cluster) SetV__AvailabilityZoneRelocation(v bool) *AWS_Redshift_Cluster {
	t.AvailabilityZoneRelocation = cfz.V(v)
	return t
}

// Set__AvailabilityZoneRelocationStatus updates property "AvailabilityZoneRelocationStatus".
func (t *AWS_Redshift_Cluster) Set__AvailabilityZoneRelocationStatus(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.AvailabilityZoneRelocationStatus = v
	return t
}

// SetV__AvailabilityZoneRelocationStatus updates property "AvailabilityZoneRelocationStatus".
func (t *AWS_Redshift_Cluster) SetV__AvailabilityZoneRelocationStatus(v string) *AWS_Redshift_Cluster {
	t.AvailabilityZoneRelocationStatus = cfz.V(v)
	return t
}

// Set__Classic updates property "Classic".
func (t *AWS_Redshift_Cluster) Set__Classic(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.Classic = v
	return t
}

// SetV__Classic updates property "Classic".
func (t *AWS_Redshift_Cluster) SetV__Classic(v bool) *AWS_Redshift_Cluster {
	t.Classic = cfz.V(v)
	return t
}

// Set__ClusterIdentifier updates property "ClusterIdentifier".
func (t *AWS_Redshift_Cluster) Set__ClusterIdentifier(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.ClusterIdentifier = v
	return t
}

// SetV__ClusterIdentifier updates property "ClusterIdentifier".
func (t *AWS_Redshift_Cluster) SetV__ClusterIdentifier(v string) *AWS_Redshift_Cluster {
	t.ClusterIdentifier = cfz.V(v)
	return t
}

// Set__ClusterParameterGroupName updates property "ClusterParameterGroupName".
func (t *AWS_Redshift_Cluster) Set__ClusterParameterGroupName(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.ClusterParameterGroupName = v
	return t
}

// SetV__ClusterParameterGroupName updates property "ClusterParameterGroupName".
func (t *AWS_Redshift_Cluster) SetV__ClusterParameterGroupName(v string) *AWS_Redshift_Cluster {
	t.ClusterParameterGroupName = cfz.V(v)
	return t
}

// Set__ClusterSecurityGroups updates property "ClusterSecurityGroups".
func (t *AWS_Redshift_Cluster) Set__ClusterSecurityGroups(v cfz.ExpressionSlice[string]) *AWS_Redshift_Cluster {
	t.ClusterSecurityGroups = v
	return t
}

// SetS__ClusterSecurityGroups updates property "ClusterSecurityGroups".
func (t *AWS_Redshift_Cluster) SetS__ClusterSecurityGroups(v ...cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.ClusterSecurityGroups = cfz.S(v...)
	return t
}

// SetSV__ClusterSecurityGroups updates property "ClusterSecurityGroups".
func (t *AWS_Redshift_Cluster) SetSV__ClusterSecurityGroups(v ...string) *AWS_Redshift_Cluster {
	t.ClusterSecurityGroups = cfz.SV(v...)
	return t
}

// Set__ClusterSubnetGroupName updates property "ClusterSubnetGroupName".
func (t *AWS_Redshift_Cluster) Set__ClusterSubnetGroupName(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.ClusterSubnetGroupName = v
	return t
}

// SetV__ClusterSubnetGroupName updates property "ClusterSubnetGroupName".
func (t *AWS_Redshift_Cluster) SetV__ClusterSubnetGroupName(v string) *AWS_Redshift_Cluster {
	t.ClusterSubnetGroupName = cfz.V(v)
	return t
}

// Set__ClusterType updates property "ClusterType".
func (t *AWS_Redshift_Cluster) Set__ClusterType(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.ClusterType = v
	return t
}

// SetV__ClusterType updates property "ClusterType".
func (t *AWS_Redshift_Cluster) SetV__ClusterType(v string) *AWS_Redshift_Cluster {
	t.ClusterType = cfz.V(v)
	return t
}

// Set__ClusterVersion updates property "ClusterVersion".
func (t *AWS_Redshift_Cluster) Set__ClusterVersion(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.ClusterVersion = v
	return t
}

// SetV__ClusterVersion updates property "ClusterVersion".
func (t *AWS_Redshift_Cluster) SetV__ClusterVersion(v string) *AWS_Redshift_Cluster {
	t.ClusterVersion = cfz.V(v)
	return t
}

// Set__DBName updates property "DBName".
func (t *AWS_Redshift_Cluster) Set__DBName(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.DBName = v
	return t
}

// SetV__DBName updates property "DBName".
func (t *AWS_Redshift_Cluster) SetV__DBName(v string) *AWS_Redshift_Cluster {
	t.DBName = cfz.V(v)
	return t
}

// Set__DeferMaintenance updates property "DeferMaintenance".
func (t *AWS_Redshift_Cluster) Set__DeferMaintenance(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.DeferMaintenance = v
	return t
}

// SetV__DeferMaintenance updates property "DeferMaintenance".
func (t *AWS_Redshift_Cluster) SetV__DeferMaintenance(v bool) *AWS_Redshift_Cluster {
	t.DeferMaintenance = cfz.V(v)
	return t
}

// Set__DeferMaintenanceDuration updates property "DeferMaintenanceDuration".
func (t *AWS_Redshift_Cluster) Set__DeferMaintenanceDuration(v cfz.Expression[int32]) *AWS_Redshift_Cluster {
	t.DeferMaintenanceDuration = v
	return t
}

// SetV__DeferMaintenanceDuration updates property "DeferMaintenanceDuration".
func (t *AWS_Redshift_Cluster) SetV__DeferMaintenanceDuration(v int32) *AWS_Redshift_Cluster {
	t.DeferMaintenanceDuration = cfz.V(v)
	return t
}

// Set__DeferMaintenanceEndTime updates property "DeferMaintenanceEndTime".
func (t *AWS_Redshift_Cluster) Set__DeferMaintenanceEndTime(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.DeferMaintenanceEndTime = v
	return t
}

// SetV__DeferMaintenanceEndTime updates property "DeferMaintenanceEndTime".
func (t *AWS_Redshift_Cluster) SetV__DeferMaintenanceEndTime(v string) *AWS_Redshift_Cluster {
	t.DeferMaintenanceEndTime = cfz.V(v)
	return t
}

// Set__DeferMaintenanceStartTime updates property "DeferMaintenanceStartTime".
func (t *AWS_Redshift_Cluster) Set__DeferMaintenanceStartTime(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.DeferMaintenanceStartTime = v
	return t
}

// SetV__DeferMaintenanceStartTime updates property "DeferMaintenanceStartTime".
func (t *AWS_Redshift_Cluster) SetV__DeferMaintenanceStartTime(v string) *AWS_Redshift_Cluster {
	t.DeferMaintenanceStartTime = cfz.V(v)
	return t
}

// Set__DestinationRegion updates property "DestinationRegion".
func (t *AWS_Redshift_Cluster) Set__DestinationRegion(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.DestinationRegion = v
	return t
}

// SetV__DestinationRegion updates property "DestinationRegion".
func (t *AWS_Redshift_Cluster) SetV__DestinationRegion(v string) *AWS_Redshift_Cluster {
	t.DestinationRegion = cfz.V(v)
	return t
}

// Set__ElasticIp updates property "ElasticIp".
func (t *AWS_Redshift_Cluster) Set__ElasticIp(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.ElasticIp = v
	return t
}

// SetV__ElasticIp updates property "ElasticIp".
func (t *AWS_Redshift_Cluster) SetV__ElasticIp(v string) *AWS_Redshift_Cluster {
	t.ElasticIp = cfz.V(v)
	return t
}

// Set__Encrypted updates property "Encrypted".
func (t *AWS_Redshift_Cluster) Set__Encrypted(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.Encrypted = v
	return t
}

// SetV__Encrypted updates property "Encrypted".
func (t *AWS_Redshift_Cluster) SetV__Encrypted(v bool) *AWS_Redshift_Cluster {
	t.Encrypted = cfz.V(v)
	return t
}

// Set__Endpoint updates property "Endpoint".
func (t *AWS_Redshift_Cluster) Set__Endpoint(v cfz.Expression[AWS_Redshift_Cluster_Endpoint]) *AWS_Redshift_Cluster {
	t.Endpoint = v
	return t
}

// SetV__Endpoint updates property "Endpoint".
func (t *AWS_Redshift_Cluster) SetV__Endpoint(v AWS_Redshift_Cluster_Endpoint) *AWS_Redshift_Cluster {
	t.Endpoint = cfz.V(v)
	return t
}

// Set__EnhancedVpcRouting updates property "EnhancedVpcRouting".
func (t *AWS_Redshift_Cluster) Set__EnhancedVpcRouting(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.EnhancedVpcRouting = v
	return t
}

// SetV__EnhancedVpcRouting updates property "EnhancedVpcRouting".
func (t *AWS_Redshift_Cluster) SetV__EnhancedVpcRouting(v bool) *AWS_Redshift_Cluster {
	t.EnhancedVpcRouting = cfz.V(v)
	return t
}

// Set__HsmClientCertificateIdentifier updates property "HsmClientCertificateIdentifier".
func (t *AWS_Redshift_Cluster) Set__HsmClientCertificateIdentifier(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.HsmClientCertificateIdentifier = v
	return t
}

// SetV__HsmClientCertificateIdentifier updates property "HsmClientCertificateIdentifier".
func (t *AWS_Redshift_Cluster) SetV__HsmClientCertificateIdentifier(v string) *AWS_Redshift_Cluster {
	t.HsmClientCertificateIdentifier = cfz.V(v)
	return t
}

// Set__HsmConfigurationIdentifier updates property "HsmConfigurationIdentifier".
func (t *AWS_Redshift_Cluster) Set__HsmConfigurationIdentifier(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.HsmConfigurationIdentifier = v
	return t
}

// SetV__HsmConfigurationIdentifier updates property "HsmConfigurationIdentifier".
func (t *AWS_Redshift_Cluster) SetV__HsmConfigurationIdentifier(v string) *AWS_Redshift_Cluster {
	t.HsmConfigurationIdentifier = cfz.V(v)
	return t
}

// Set__IamRoles updates property "IamRoles".
func (t *AWS_Redshift_Cluster) Set__IamRoles(v cfz.ExpressionSlice[string]) *AWS_Redshift_Cluster {
	t.IamRoles = v
	return t
}

// SetS__IamRoles updates property "IamRoles".
func (t *AWS_Redshift_Cluster) SetS__IamRoles(v ...cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.IamRoles = cfz.S(v...)
	return t
}

// SetSV__IamRoles updates property "IamRoles".
func (t *AWS_Redshift_Cluster) SetSV__IamRoles(v ...string) *AWS_Redshift_Cluster {
	t.IamRoles = cfz.SV(v...)
	return t
}

// Set__KmsKeyId updates property "KmsKeyId".
func (t *AWS_Redshift_Cluster) Set__KmsKeyId(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.KmsKeyId = v
	return t
}

// SetV__KmsKeyId updates property "KmsKeyId".
func (t *AWS_Redshift_Cluster) SetV__KmsKeyId(v string) *AWS_Redshift_Cluster {
	t.KmsKeyId = cfz.V(v)
	return t
}

// Set__LoggingProperties updates property "LoggingProperties".
func (t *AWS_Redshift_Cluster) Set__LoggingProperties(v cfz.Expression[AWS_Redshift_Cluster_LoggingProperties]) *AWS_Redshift_Cluster {
	t.LoggingProperties = v
	return t
}

// SetV__LoggingProperties updates property "LoggingProperties".
func (t *AWS_Redshift_Cluster) SetV__LoggingProperties(v AWS_Redshift_Cluster_LoggingProperties) *AWS_Redshift_Cluster {
	t.LoggingProperties = cfz.V(v)
	return t
}

// Set__MaintenanceTrackName updates property "MaintenanceTrackName".
func (t *AWS_Redshift_Cluster) Set__MaintenanceTrackName(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.MaintenanceTrackName = v
	return t
}

// SetV__MaintenanceTrackName updates property "MaintenanceTrackName".
func (t *AWS_Redshift_Cluster) SetV__MaintenanceTrackName(v string) *AWS_Redshift_Cluster {
	t.MaintenanceTrackName = cfz.V(v)
	return t
}

// Set__ManageMasterPassword updates property "ManageMasterPassword".
func (t *AWS_Redshift_Cluster) Set__ManageMasterPassword(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.ManageMasterPassword = v
	return t
}

// SetV__ManageMasterPassword updates property "ManageMasterPassword".
func (t *AWS_Redshift_Cluster) SetV__ManageMasterPassword(v bool) *AWS_Redshift_Cluster {
	t.ManageMasterPassword = cfz.V(v)
	return t
}

// Set__ManualSnapshotRetentionPeriod updates property "ManualSnapshotRetentionPeriod".
func (t *AWS_Redshift_Cluster) Set__ManualSnapshotRetentionPeriod(v cfz.Expression[int32]) *AWS_Redshift_Cluster {
	t.ManualSnapshotRetentionPeriod = v
	return t
}

// SetV__ManualSnapshotRetentionPeriod updates property "ManualSnapshotRetentionPeriod".
func (t *AWS_Redshift_Cluster) SetV__ManualSnapshotRetentionPeriod(v int32) *AWS_Redshift_Cluster {
	t.ManualSnapshotRetentionPeriod = cfz.V(v)
	return t
}

// Set__MasterPasswordSecretKmsKeyId updates property "MasterPasswordSecretKmsKeyId".
func (t *AWS_Redshift_Cluster) Set__MasterPasswordSecretKmsKeyId(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.MasterPasswordSecretKmsKeyId = v
	return t
}

// SetV__MasterPasswordSecretKmsKeyId updates property "MasterPasswordSecretKmsKeyId".
func (t *AWS_Redshift_Cluster) SetV__MasterPasswordSecretKmsKeyId(v string) *AWS_Redshift_Cluster {
	t.MasterPasswordSecretKmsKeyId = cfz.V(v)
	return t
}

// Set__MasterUserPassword updates property "MasterUserPassword".
func (t *AWS_Redshift_Cluster) Set__MasterUserPassword(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.MasterUserPassword = v
	return t
}

// SetV__MasterUserPassword updates property "MasterUserPassword".
func (t *AWS_Redshift_Cluster) SetV__MasterUserPassword(v string) *AWS_Redshift_Cluster {
	t.MasterUserPassword = cfz.V(v)
	return t
}

// Set__MasterUsername updates property "MasterUsername".
func (t *AWS_Redshift_Cluster) Set__MasterUsername(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.MasterUsername = v
	return t
}

// SetV__MasterUsername updates property "MasterUsername".
func (t *AWS_Redshift_Cluster) SetV__MasterUsername(v string) *AWS_Redshift_Cluster {
	t.MasterUsername = cfz.V(v)
	return t
}

// Set__MultiAZ updates property "MultiAZ".
func (t *AWS_Redshift_Cluster) Set__MultiAZ(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.MultiAZ = v
	return t
}

// SetV__MultiAZ updates property "MultiAZ".
func (t *AWS_Redshift_Cluster) SetV__MultiAZ(v bool) *AWS_Redshift_Cluster {
	t.MultiAZ = cfz.V(v)
	return t
}

// Set__NamespaceResourcePolicy updates property "NamespaceResourcePolicy".
func (t *AWS_Redshift_Cluster) Set__NamespaceResourcePolicy(v cfz.Expression[json.RawMessage]) *AWS_Redshift_Cluster {
	t.NamespaceResourcePolicy = v
	return t
}

// SetV__NamespaceResourcePolicy updates property "NamespaceResourcePolicy".
func (t *AWS_Redshift_Cluster) SetV__NamespaceResourcePolicy(v json.RawMessage) *AWS_Redshift_Cluster {
	t.NamespaceResourcePolicy = cfz.V(v)
	return t
}

// Set__NodeType updates property "NodeType".
func (t *AWS_Redshift_Cluster) Set__NodeType(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.NodeType = v
	return t
}

// SetV__NodeType updates property "NodeType".
func (t *AWS_Redshift_Cluster) SetV__NodeType(v string) *AWS_Redshift_Cluster {
	t.NodeType = cfz.V(v)
	return t
}

// Set__NumberOfNodes updates property "NumberOfNodes".
func (t *AWS_Redshift_Cluster) Set__NumberOfNodes(v cfz.Expression[int32]) *AWS_Redshift_Cluster {
	t.NumberOfNodes = v
	return t
}

// SetV__NumberOfNodes updates property "NumberOfNodes".
func (t *AWS_Redshift_Cluster) SetV__NumberOfNodes(v int32) *AWS_Redshift_Cluster {
	t.NumberOfNodes = cfz.V(v)
	return t
}

// Set__OwnerAccount updates property "OwnerAccount".
func (t *AWS_Redshift_Cluster) Set__OwnerAccount(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.OwnerAccount = v
	return t
}

// SetV__OwnerAccount updates property "OwnerAccount".
func (t *AWS_Redshift_Cluster) SetV__OwnerAccount(v string) *AWS_Redshift_Cluster {
	t.OwnerAccount = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t *AWS_Redshift_Cluster) Set__Port(v cfz.Expression[int32]) *AWS_Redshift_Cluster {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t *AWS_Redshift_Cluster) SetV__Port(v int32) *AWS_Redshift_Cluster {
	t.Port = cfz.V(v)
	return t
}

// Set__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_Redshift_Cluster) Set__PreferredMaintenanceWindow(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.PreferredMaintenanceWindow = v
	return t
}

// SetV__PreferredMaintenanceWindow updates property "PreferredMaintenanceWindow".
func (t *AWS_Redshift_Cluster) SetV__PreferredMaintenanceWindow(v string) *AWS_Redshift_Cluster {
	t.PreferredMaintenanceWindow = cfz.V(v)
	return t
}

// Set__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_Redshift_Cluster) Set__PubliclyAccessible(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.PubliclyAccessible = v
	return t
}

// SetV__PubliclyAccessible updates property "PubliclyAccessible".
func (t *AWS_Redshift_Cluster) SetV__PubliclyAccessible(v bool) *AWS_Redshift_Cluster {
	t.PubliclyAccessible = cfz.V(v)
	return t
}

// Set__ResourceAction updates property "ResourceAction".
func (t *AWS_Redshift_Cluster) Set__ResourceAction(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.ResourceAction = v
	return t
}

// SetV__ResourceAction updates property "ResourceAction".
func (t *AWS_Redshift_Cluster) SetV__ResourceAction(v string) *AWS_Redshift_Cluster {
	t.ResourceAction = cfz.V(v)
	return t
}

// Set__RevisionTarget updates property "RevisionTarget".
func (t *AWS_Redshift_Cluster) Set__RevisionTarget(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.RevisionTarget = v
	return t
}

// SetV__RevisionTarget updates property "RevisionTarget".
func (t *AWS_Redshift_Cluster) SetV__RevisionTarget(v string) *AWS_Redshift_Cluster {
	t.RevisionTarget = cfz.V(v)
	return t
}

// Set__RotateEncryptionKey updates property "RotateEncryptionKey".
func (t *AWS_Redshift_Cluster) Set__RotateEncryptionKey(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.RotateEncryptionKey = v
	return t
}

// SetV__RotateEncryptionKey updates property "RotateEncryptionKey".
func (t *AWS_Redshift_Cluster) SetV__RotateEncryptionKey(v bool) *AWS_Redshift_Cluster {
	t.RotateEncryptionKey = cfz.V(v)
	return t
}

// Set__SnapshotClusterIdentifier updates property "SnapshotClusterIdentifier".
func (t *AWS_Redshift_Cluster) Set__SnapshotClusterIdentifier(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.SnapshotClusterIdentifier = v
	return t
}

// SetV__SnapshotClusterIdentifier updates property "SnapshotClusterIdentifier".
func (t *AWS_Redshift_Cluster) SetV__SnapshotClusterIdentifier(v string) *AWS_Redshift_Cluster {
	t.SnapshotClusterIdentifier = cfz.V(v)
	return t
}

// Set__SnapshotCopyGrantName updates property "SnapshotCopyGrantName".
func (t *AWS_Redshift_Cluster) Set__SnapshotCopyGrantName(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.SnapshotCopyGrantName = v
	return t
}

// SetV__SnapshotCopyGrantName updates property "SnapshotCopyGrantName".
func (t *AWS_Redshift_Cluster) SetV__SnapshotCopyGrantName(v string) *AWS_Redshift_Cluster {
	t.SnapshotCopyGrantName = cfz.V(v)
	return t
}

// Set__SnapshotCopyManual updates property "SnapshotCopyManual".
func (t *AWS_Redshift_Cluster) Set__SnapshotCopyManual(v cfz.Expression[bool]) *AWS_Redshift_Cluster {
	t.SnapshotCopyManual = v
	return t
}

// SetV__SnapshotCopyManual updates property "SnapshotCopyManual".
func (t *AWS_Redshift_Cluster) SetV__SnapshotCopyManual(v bool) *AWS_Redshift_Cluster {
	t.SnapshotCopyManual = cfz.V(v)
	return t
}

// Set__SnapshotCopyRetentionPeriod updates property "SnapshotCopyRetentionPeriod".
func (t *AWS_Redshift_Cluster) Set__SnapshotCopyRetentionPeriod(v cfz.Expression[int32]) *AWS_Redshift_Cluster {
	t.SnapshotCopyRetentionPeriod = v
	return t
}

// SetV__SnapshotCopyRetentionPeriod updates property "SnapshotCopyRetentionPeriod".
func (t *AWS_Redshift_Cluster) SetV__SnapshotCopyRetentionPeriod(v int32) *AWS_Redshift_Cluster {
	t.SnapshotCopyRetentionPeriod = cfz.V(v)
	return t
}

// Set__SnapshotIdentifier updates property "SnapshotIdentifier".
func (t *AWS_Redshift_Cluster) Set__SnapshotIdentifier(v cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.SnapshotIdentifier = v
	return t
}

// SetV__SnapshotIdentifier updates property "SnapshotIdentifier".
func (t *AWS_Redshift_Cluster) SetV__SnapshotIdentifier(v string) *AWS_Redshift_Cluster {
	t.SnapshotIdentifier = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Redshift_Cluster) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Redshift_Cluster {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Redshift_Cluster) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Redshift_Cluster {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Redshift_Cluster) SetSV__Tags(v ...cfz.Tag) *AWS_Redshift_Cluster {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_Redshift_Cluster) Set__VpcSecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_Redshift_Cluster {
	t.VpcSecurityGroupIds = v
	return t
}

// SetS__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_Redshift_Cluster) SetS__VpcSecurityGroupIds(v ...cfz.Expression[string]) *AWS_Redshift_Cluster {
	t.VpcSecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_Redshift_Cluster) SetSV__VpcSecurityGroupIds(v ...string) *AWS_Redshift_Cluster {
	t.VpcSecurityGroupIds = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Redshift_Cluster) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ClusterNamespaceArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ClusterNamespaceArn
func (t *AWS_Redshift_Cluster) GetAtt__ClusterNamespaceArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_Cluster__AttributesMap.ClusterNamespaceArn))
}

// GetAtt__DeferMaintenanceIdentifier returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DeferMaintenanceIdentifier
func (t *AWS_Redshift_Cluster) GetAtt__DeferMaintenanceIdentifier() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_Cluster__AttributesMap.DeferMaintenanceIdentifier))
}

// GetAtt__Endpoint_Address returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint.Address
func (t *AWS_Redshift_Cluster) GetAtt__Endpoint_Address() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_Cluster__AttributesMap.Endpoint_Address))
}

// GetAtt__Endpoint_Port returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Endpoint.Port
func (t *AWS_Redshift_Cluster) GetAtt__Endpoint_Port() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_Cluster__AttributesMap.Endpoint_Port))
}

// GetAtt__MasterPasswordSecretArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: MasterPasswordSecretArn
func (t *AWS_Redshift_Cluster) GetAtt__MasterPasswordSecretArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_Cluster__AttributesMap.MasterPasswordSecretArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Redshift_Cluster) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ClusterNamespaceArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ClusterNamespaceArn
func (t *AWS_Redshift_Cluster) GetConventionalOutputAtt__ClusterNamespaceArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttClusterNamespaceArn", t.GetAtt__ClusterNamespaceArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DeferMaintenanceIdentifier returns a conventionally configured output for an attribute of this resource.
// Attribute: DeferMaintenanceIdentifier
func (t *AWS_Redshift_Cluster) GetConventionalOutputAtt__DeferMaintenanceIdentifier(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDeferMaintenanceIdentifier", t.GetAtt__DeferMaintenanceIdentifier())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint_Address returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint.Address
func (t *AWS_Redshift_Cluster) GetConventionalOutputAtt__Endpoint_Address(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointAddress", t.GetAtt__Endpoint_Address())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Endpoint_Port returns a conventionally configured output for an attribute of this resource.
// Attribute: Endpoint.Port
func (t *AWS_Redshift_Cluster) GetConventionalOutputAtt__Endpoint_Port(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointPort", t.GetAtt__Endpoint_Port())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__MasterPasswordSecretArn returns a conventionally configured output for an attribute of this resource.
// Attribute: MasterPasswordSecretArn
func (t *AWS_Redshift_Cluster) GetConventionalOutputAtt__MasterPasswordSecretArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttMasterPasswordSecretArn", t.GetAtt__MasterPasswordSecretArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Redshift_Cluster) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Redshift_Cluster

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Redshift_Cluster) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
