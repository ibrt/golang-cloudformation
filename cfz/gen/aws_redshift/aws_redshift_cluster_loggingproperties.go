// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_redshift

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Redshift_Cluster_LoggingProperties__Type is the CloudFormation type for AWS::Redshift::Cluster.LoggingProperties.
	AWS_Redshift_Cluster_LoggingProperties__Type = "AWS::Redshift::Cluster.LoggingProperties"
)

var (
	// AWS_Redshift_Cluster_LoggingProperties__PropertiesMap reports all the CloudFormation properties for AWS::Redshift::Cluster.LoggingProperties.
	AWS_Redshift_Cluster_LoggingProperties__PropertiesMap = struct {
		BucketName         string
		LogDestinationType string
		LogExports         string
		S3KeyPrefix        string
	}{
		BucketName:         "BucketName",
		LogDestinationType: "LogDestinationType",
		LogExports:         "LogExports",
		S3KeyPrefix:        "S3KeyPrefix",
	}

	// AWS_Redshift_Cluster_LoggingProperties__PropertiesSlice reports all the CloudFormation properties for AWS::Redshift::Cluster.LoggingProperties.
	AWS_Redshift_Cluster_LoggingProperties__PropertiesSlice = []string{
		AWS_Redshift_Cluster_LoggingProperties__PropertiesMap.BucketName,
		AWS_Redshift_Cluster_LoggingProperties__PropertiesMap.LogDestinationType,
		AWS_Redshift_Cluster_LoggingProperties__PropertiesMap.LogExports,
		AWS_Redshift_Cluster_LoggingProperties__PropertiesMap.S3KeyPrefix,
	}
)

// AWS_Redshift_Cluster_LoggingProperties is a binding for AWS::Redshift::Cluster.LoggingProperties.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-loggingproperties.html
type AWS_Redshift_Cluster_LoggingProperties struct {
	// BucketName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-loggingproperties.html#cfn-redshift-cluster-loggingproperties-bucketname
	BucketName cfz.Expression[string] `json:"BucketName,omitempty"`

	// LogDestinationType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-loggingproperties.html#cfn-redshift-cluster-loggingproperties-logdestinationtype
	LogDestinationType cfz.Expression[string] `json:"LogDestinationType,omitempty"`

	// LogExports is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-loggingproperties.html#cfn-redshift-cluster-loggingproperties-logexports
	LogExports cfz.ExpressionSlice[string] `json:"LogExports,omitempty"`

	// S3KeyPrefix is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshift-cluster-loggingproperties.html#cfn-redshift-cluster-loggingproperties-s3keyprefix
	S3KeyPrefix cfz.Expression[string] `json:"S3KeyPrefix,omitempty"`
}

// New__AWS_Redshift_Cluster_LoggingProperties initializes a new AWS_Redshift_Cluster_LoggingProperties.
func New__AWS_Redshift_Cluster_LoggingProperties() AWS_Redshift_Cluster_LoggingProperties {
	return AWS_Redshift_Cluster_LoggingProperties{}
}

// GetType returns the CloudFormation type.
func (AWS_Redshift_Cluster_LoggingProperties) GetType() string {
	return AWS_Redshift_Cluster_LoggingProperties__Type
}

// Set__BucketName updates property "BucketName".
func (t AWS_Redshift_Cluster_LoggingProperties) Set__BucketName(v cfz.Expression[string]) AWS_Redshift_Cluster_LoggingProperties {
	t.BucketName = v
	return t
}

// SetV__BucketName updates property "BucketName".
func (t AWS_Redshift_Cluster_LoggingProperties) SetV__BucketName(v string) AWS_Redshift_Cluster_LoggingProperties {
	t.BucketName = cfz.V(v)
	return t
}

// Set__LogDestinationType updates property "LogDestinationType".
func (t AWS_Redshift_Cluster_LoggingProperties) Set__LogDestinationType(v cfz.Expression[string]) AWS_Redshift_Cluster_LoggingProperties {
	t.LogDestinationType = v
	return t
}

// SetV__LogDestinationType updates property "LogDestinationType".
func (t AWS_Redshift_Cluster_LoggingProperties) SetV__LogDestinationType(v string) AWS_Redshift_Cluster_LoggingProperties {
	t.LogDestinationType = cfz.V(v)
	return t
}

// Set__LogExports updates property "LogExports".
func (t AWS_Redshift_Cluster_LoggingProperties) Set__LogExports(v cfz.ExpressionSlice[string]) AWS_Redshift_Cluster_LoggingProperties {
	t.LogExports = v
	return t
}

// SetS__LogExports updates property "LogExports".
func (t AWS_Redshift_Cluster_LoggingProperties) SetS__LogExports(v ...cfz.Expression[string]) AWS_Redshift_Cluster_LoggingProperties {
	t.LogExports = cfz.S(v...)
	return t
}

// SetSV__LogExports updates property "LogExports".
func (t AWS_Redshift_Cluster_LoggingProperties) SetSV__LogExports(v ...string) AWS_Redshift_Cluster_LoggingProperties {
	t.LogExports = cfz.SV(v...)
	return t
}

// Set__S3KeyPrefix updates property "S3KeyPrefix".
func (t AWS_Redshift_Cluster_LoggingProperties) Set__S3KeyPrefix(v cfz.Expression[string]) AWS_Redshift_Cluster_LoggingProperties {
	t.S3KeyPrefix = v
	return t
}

// SetV__S3KeyPrefix updates property "S3KeyPrefix".
func (t AWS_Redshift_Cluster_LoggingProperties) SetV__S3KeyPrefix(v string) AWS_Redshift_Cluster_LoggingProperties {
	t.S3KeyPrefix = cfz.V(v)
	return t
}
