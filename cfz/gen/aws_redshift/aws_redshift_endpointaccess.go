// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_redshift

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Redshift_EndpointAccess)(nil)
	_ cfz.Resource                   = (*AWS_Redshift_EndpointAccess)(nil)
)

const (
	// AWS_Redshift_EndpointAccess__Type is the CloudFormation type for AWS::Redshift::EndpointAccess.
	AWS_Redshift_EndpointAccess__Type = "AWS::Redshift::EndpointAccess"
)

var (
	// AWS_Redshift_EndpointAccess__AttributesMap reports all the CloudFormation attributes for AWS::Redshift::EndpointAccess.
	AWS_Redshift_EndpointAccess__AttributesMap = struct {
		Address                       string
		EndpointCreateTime            string
		EndpointStatus                string
		Port                          string
		VpcEndpoint                   string
		VpcEndpoint_NetworkInterfaces string
		VpcEndpoint_VpcEndpointId     string
		VpcEndpoint_VpcId             string
		VpcSecurityGroups             string
	}{
		Address:                       "Address",
		EndpointCreateTime:            "EndpointCreateTime",
		EndpointStatus:                "EndpointStatus",
		Port:                          "Port",
		VpcEndpoint:                   "VpcEndpoint",
		VpcEndpoint_NetworkInterfaces: "VpcEndpoint.NetworkInterfaces",
		VpcEndpoint_VpcEndpointId:     "VpcEndpoint.VpcEndpointId",
		VpcEndpoint_VpcId:             "VpcEndpoint.VpcId",
		VpcSecurityGroups:             "VpcSecurityGroups",
	}

	// AWS_Redshift_EndpointAccess__AttributesSlice reports all the CloudFormation attributes for AWS::Redshift::EndpointAccess.
	AWS_Redshift_EndpointAccess__AttributesSlice = []string{
		AWS_Redshift_EndpointAccess__AttributesMap.Address,
		AWS_Redshift_EndpointAccess__AttributesMap.EndpointCreateTime,
		AWS_Redshift_EndpointAccess__AttributesMap.EndpointStatus,
		AWS_Redshift_EndpointAccess__AttributesMap.Port,
		AWS_Redshift_EndpointAccess__AttributesMap.VpcEndpoint,
		AWS_Redshift_EndpointAccess__AttributesMap.VpcEndpoint_NetworkInterfaces,
		AWS_Redshift_EndpointAccess__AttributesMap.VpcEndpoint_VpcEndpointId,
		AWS_Redshift_EndpointAccess__AttributesMap.VpcEndpoint_VpcId,
		AWS_Redshift_EndpointAccess__AttributesMap.VpcSecurityGroups,
	}
)

var (
	// AWS_Redshift_EndpointAccess__PropertiesMap reports all the CloudFormation properties for AWS::Redshift::EndpointAccess.
	AWS_Redshift_EndpointAccess__PropertiesMap = struct {
		ClusterIdentifier   string
		EndpointName        string
		ResourceOwner       string
		SubnetGroupName     string
		VpcSecurityGroupIds string
	}{
		ClusterIdentifier:   "ClusterIdentifier",
		EndpointName:        "EndpointName",
		ResourceOwner:       "ResourceOwner",
		SubnetGroupName:     "SubnetGroupName",
		VpcSecurityGroupIds: "VpcSecurityGroupIds",
	}

	// AWS_Redshift_EndpointAccess__PropertiesSlice reports all the CloudFormation properties for AWS::Redshift::EndpointAccess.
	AWS_Redshift_EndpointAccess__PropertiesSlice = []string{
		AWS_Redshift_EndpointAccess__PropertiesMap.ClusterIdentifier,
		AWS_Redshift_EndpointAccess__PropertiesMap.EndpointName,
		AWS_Redshift_EndpointAccess__PropertiesMap.ResourceOwner,
		AWS_Redshift_EndpointAccess__PropertiesMap.SubnetGroupName,
		AWS_Redshift_EndpointAccess__PropertiesMap.VpcSecurityGroupIds,
	}
)

// AWS_Redshift_EndpointAccess is a binding for AWS::Redshift::EndpointAccess.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html
type AWS_Redshift_EndpointAccess struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ClusterIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-clusteridentifier
	ClusterIdentifier cfz.Expression[string] `json:"ClusterIdentifier,omitempty"`

	// EndpointName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-endpointname
	EndpointName cfz.Expression[string] `json:"EndpointName,omitempty"`

	// ResourceOwner is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-resourceowner
	ResourceOwner cfz.Expression[string] `json:"ResourceOwner,omitempty"`

	// SubnetGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-subnetgroupname
	SubnetGroupName cfz.Expression[string] `json:"SubnetGroupName,omitempty"`

	// VpcSecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-endpointaccess.html#cfn-redshift-endpointaccess-vpcsecuritygroupids
	VpcSecurityGroupIds cfz.ExpressionSlice[string] `json:"VpcSecurityGroupIds,omitempty"`
}

// New__AWS_Redshift_EndpointAccess initializes a new *AWS_Redshift_EndpointAccess.
func New__AWS_Redshift_EndpointAccess(logicalName string) *AWS_Redshift_EndpointAccess {
	return &AWS_Redshift_EndpointAccess{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Redshift_EndpointAccess) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Redshift_EndpointAccess) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Redshift_EndpointAccess) GetType() string {
	return AWS_Redshift_EndpointAccess__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Redshift_EndpointAccess) Set__LogicalName(v string) *AWS_Redshift_EndpointAccess {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Redshift_EndpointAccess) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Redshift_EndpointAccess {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Redshift_EndpointAccess) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Redshift_EndpointAccess {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Redshift_EndpointAccess) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Redshift_EndpointAccess {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Redshift_EndpointAccess) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Redshift_EndpointAccess {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Redshift_EndpointAccess) Set__RequestedOutputs(v []cfz.Output) *AWS_Redshift_EndpointAccess {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Redshift_EndpointAccess) Add__RequestedOutputs(v ...cfz.Output) *AWS_Redshift_EndpointAccess {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ClusterIdentifier updates property "ClusterIdentifier".
func (t *AWS_Redshift_EndpointAccess) Set__ClusterIdentifier(v cfz.Expression[string]) *AWS_Redshift_EndpointAccess {
	t.ClusterIdentifier = v
	return t
}

// SetV__ClusterIdentifier updates property "ClusterIdentifier".
func (t *AWS_Redshift_EndpointAccess) SetV__ClusterIdentifier(v string) *AWS_Redshift_EndpointAccess {
	t.ClusterIdentifier = cfz.V(v)
	return t
}

// Set__EndpointName updates property "EndpointName".
func (t *AWS_Redshift_EndpointAccess) Set__EndpointName(v cfz.Expression[string]) *AWS_Redshift_EndpointAccess {
	t.EndpointName = v
	return t
}

// SetV__EndpointName updates property "EndpointName".
func (t *AWS_Redshift_EndpointAccess) SetV__EndpointName(v string) *AWS_Redshift_EndpointAccess {
	t.EndpointName = cfz.V(v)
	return t
}

// Set__ResourceOwner updates property "ResourceOwner".
func (t *AWS_Redshift_EndpointAccess) Set__ResourceOwner(v cfz.Expression[string]) *AWS_Redshift_EndpointAccess {
	t.ResourceOwner = v
	return t
}

// SetV__ResourceOwner updates property "ResourceOwner".
func (t *AWS_Redshift_EndpointAccess) SetV__ResourceOwner(v string) *AWS_Redshift_EndpointAccess {
	t.ResourceOwner = cfz.V(v)
	return t
}

// Set__SubnetGroupName updates property "SubnetGroupName".
func (t *AWS_Redshift_EndpointAccess) Set__SubnetGroupName(v cfz.Expression[string]) *AWS_Redshift_EndpointAccess {
	t.SubnetGroupName = v
	return t
}

// SetV__SubnetGroupName updates property "SubnetGroupName".
func (t *AWS_Redshift_EndpointAccess) SetV__SubnetGroupName(v string) *AWS_Redshift_EndpointAccess {
	t.SubnetGroupName = cfz.V(v)
	return t
}

// Set__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_Redshift_EndpointAccess) Set__VpcSecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_Redshift_EndpointAccess {
	t.VpcSecurityGroupIds = v
	return t
}

// SetS__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_Redshift_EndpointAccess) SetS__VpcSecurityGroupIds(v ...cfz.Expression[string]) *AWS_Redshift_EndpointAccess {
	t.VpcSecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__VpcSecurityGroupIds updates property "VpcSecurityGroupIds".
func (t *AWS_Redshift_EndpointAccess) SetSV__VpcSecurityGroupIds(v ...string) *AWS_Redshift_EndpointAccess {
	t.VpcSecurityGroupIds = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Redshift_EndpointAccess) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Address returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Address
func (t *AWS_Redshift_EndpointAccess) GetAtt__Address() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAccess__AttributesMap.Address))
}

// GetAtt__EndpointCreateTime returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointCreateTime
func (t *AWS_Redshift_EndpointAccess) GetAtt__EndpointCreateTime() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAccess__AttributesMap.EndpointCreateTime))
}

// GetAtt__EndpointStatus returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: EndpointStatus
func (t *AWS_Redshift_EndpointAccess) GetAtt__EndpointStatus() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAccess__AttributesMap.EndpointStatus))
}

// GetAtt__Port returns a $cfz.Expression[int32] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Port
func (t *AWS_Redshift_EndpointAccess) GetAtt__Port() cfz.Expression[int32] {
	return cfz.GetAtt[int32](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAccess__AttributesMap.Port))
}

// GetAtt__VpcEndpoint returns a $cfz.Expression[AWS_Redshift_EndpointAccess_VpcEndpoint] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcEndpoint
func (t *AWS_Redshift_EndpointAccess) GetAtt__VpcEndpoint() cfz.Expression[AWS_Redshift_EndpointAccess_VpcEndpoint] {
	return cfz.GetAtt[AWS_Redshift_EndpointAccess_VpcEndpoint](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAccess__AttributesMap.VpcEndpoint))
}

// GetAttSlice__VpcEndpoint_NetworkInterfaces returns a $cfz.ExpressionSlice[AWS_Redshift_EndpointAccess_NetworkInterface] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcEndpoint.NetworkInterfaces
func (t *AWS_Redshift_EndpointAccess) GetAttSlice__VpcEndpoint_NetworkInterfaces() cfz.ExpressionSlice[AWS_Redshift_EndpointAccess_NetworkInterface] {
	return cfz.GetAttSlice[AWS_Redshift_EndpointAccess_NetworkInterface](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAccess__AttributesMap.VpcEndpoint_NetworkInterfaces))
}

// GetAtt__VpcEndpoint_VpcEndpointId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcEndpoint.VpcEndpointId
func (t *AWS_Redshift_EndpointAccess) GetAtt__VpcEndpoint_VpcEndpointId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAccess__AttributesMap.VpcEndpoint_VpcEndpointId))
}

// GetAtt__VpcEndpoint_VpcId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcEndpoint.VpcId
func (t *AWS_Redshift_EndpointAccess) GetAtt__VpcEndpoint_VpcId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAccess__AttributesMap.VpcEndpoint_VpcId))
}

// GetAttSlice__VpcSecurityGroups returns a $cfz.ExpressionSlice[AWS_Redshift_EndpointAccess_VpcSecurityGroup] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: VpcSecurityGroups
func (t *AWS_Redshift_EndpointAccess) GetAttSlice__VpcSecurityGroups() cfz.ExpressionSlice[AWS_Redshift_EndpointAccess_VpcSecurityGroup] {
	return cfz.GetAttSlice[AWS_Redshift_EndpointAccess_VpcSecurityGroup](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Redshift_EndpointAccess__AttributesMap.VpcSecurityGroups))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Address returns a conventionally configured output for an attribute of this resource.
// Attribute: Address
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputAtt__Address(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAddress", t.GetAtt__Address())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointCreateTime returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointCreateTime
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputAtt__EndpointCreateTime(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointCreateTime", t.GetAtt__EndpointCreateTime())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__EndpointStatus returns a conventionally configured output for an attribute of this resource.
// Attribute: EndpointStatus
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputAtt__EndpointStatus(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttEndpointStatus", t.GetAtt__EndpointStatus())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Port returns a conventionally configured output for an attribute of this resource.
// Attribute: Port
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputAtt__Port(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPort", t.GetAtt__Port())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcEndpoint returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcEndpoint
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputAtt__VpcEndpoint(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcEndpoint", t.GetAtt__VpcEndpoint())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcEndpoint_NetworkInterfaces returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcEndpoint.NetworkInterfaces
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputAtt__VpcEndpoint_NetworkInterfaces(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcEndpointNetworkInterfaces", t.GetAttSlice__VpcEndpoint_NetworkInterfaces())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcEndpoint_VpcEndpointId returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcEndpoint.VpcEndpointId
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputAtt__VpcEndpoint_VpcEndpointId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcEndpointVpcEndpointId", t.GetAtt__VpcEndpoint_VpcEndpointId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcEndpoint_VpcId returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcEndpoint.VpcId
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputAtt__VpcEndpoint_VpcId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcEndpointVpcId", t.GetAtt__VpcEndpoint_VpcId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__VpcSecurityGroups returns a conventionally configured output for an attribute of this resource.
// Attribute: VpcSecurityGroups
func (t *AWS_Redshift_EndpointAccess) GetConventionalOutputAtt__VpcSecurityGroups(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttVpcSecurityGroups", t.GetAttSlice__VpcSecurityGroups())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Redshift_EndpointAccess) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Redshift_EndpointAccess

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Redshift_EndpointAccess) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
