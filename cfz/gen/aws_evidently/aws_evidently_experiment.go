// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_evidently

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Evidently_Experiment)(nil)
	_ cfz.Resource                   = (*AWS_Evidently_Experiment)(nil)
)

const (
	// AWS_Evidently_Experiment__Type is the CloudFormation type for AWS::Evidently::Experiment.
	AWS_Evidently_Experiment__Type = "AWS::Evidently::Experiment"
)

var (
	// AWS_Evidently_Experiment__AttributesMap reports all the CloudFormation attributes for AWS::Evidently::Experiment.
	AWS_Evidently_Experiment__AttributesMap = struct {
		Arn string
	}{
		Arn: "Arn",
	}

	// AWS_Evidently_Experiment__AttributesSlice reports all the CloudFormation attributes for AWS::Evidently::Experiment.
	AWS_Evidently_Experiment__AttributesSlice = []string{
		AWS_Evidently_Experiment__AttributesMap.Arn,
	}
)

var (
	// AWS_Evidently_Experiment__PropertiesMap reports all the CloudFormation properties for AWS::Evidently::Experiment.
	AWS_Evidently_Experiment__PropertiesMap = struct {
		Description       string
		MetricGoals       string
		Name              string
		OnlineAbConfig    string
		Project           string
		RandomizationSalt string
		RemoveSegment     string
		RunningStatus     string
		SamplingRate      string
		Segment           string
		Tags              string
		Treatments        string
	}{
		Description:       "Description",
		MetricGoals:       "MetricGoals",
		Name:              "Name",
		OnlineAbConfig:    "OnlineAbConfig",
		Project:           "Project",
		RandomizationSalt: "RandomizationSalt",
		RemoveSegment:     "RemoveSegment",
		RunningStatus:     "RunningStatus",
		SamplingRate:      "SamplingRate",
		Segment:           "Segment",
		Tags:              "Tags",
		Treatments:        "Treatments",
	}

	// AWS_Evidently_Experiment__PropertiesSlice reports all the CloudFormation properties for AWS::Evidently::Experiment.
	AWS_Evidently_Experiment__PropertiesSlice = []string{
		AWS_Evidently_Experiment__PropertiesMap.Description,
		AWS_Evidently_Experiment__PropertiesMap.MetricGoals,
		AWS_Evidently_Experiment__PropertiesMap.Name,
		AWS_Evidently_Experiment__PropertiesMap.OnlineAbConfig,
		AWS_Evidently_Experiment__PropertiesMap.Project,
		AWS_Evidently_Experiment__PropertiesMap.RandomizationSalt,
		AWS_Evidently_Experiment__PropertiesMap.RemoveSegment,
		AWS_Evidently_Experiment__PropertiesMap.RunningStatus,
		AWS_Evidently_Experiment__PropertiesMap.SamplingRate,
		AWS_Evidently_Experiment__PropertiesMap.Segment,
		AWS_Evidently_Experiment__PropertiesMap.Tags,
		AWS_Evidently_Experiment__PropertiesMap.Treatments,
	}
)

// AWS_Evidently_Experiment is a binding for AWS::Evidently::Experiment.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html
type AWS_Evidently_Experiment struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// MetricGoals is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-metricgoals
	MetricGoals cfz.ExpressionSlice[AWS_Evidently_Experiment_MetricGoalObject] `json:"MetricGoals,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// OnlineAbConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-onlineabconfig
	OnlineAbConfig cfz.Expression[AWS_Evidently_Experiment_OnlineAbConfigObject] `json:"OnlineAbConfig,omitempty"`

	// Project is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-project
	Project cfz.Expression[string] `json:"Project,omitempty"`

	// RandomizationSalt is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-randomizationsalt
	RandomizationSalt cfz.Expression[string] `json:"RandomizationSalt,omitempty"`

	// RemoveSegment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-removesegment
	RemoveSegment cfz.Expression[bool] `json:"RemoveSegment,omitempty"`

	// RunningStatus is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-runningstatus
	RunningStatus cfz.Expression[AWS_Evidently_Experiment_RunningStatusObject] `json:"RunningStatus,omitempty"`

	// SamplingRate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-samplingrate
	SamplingRate cfz.Expression[int32] `json:"SamplingRate,omitempty"`

	// Segment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-segment
	Segment cfz.Expression[string] `json:"Segment,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Treatments is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-experiment.html#cfn-evidently-experiment-treatments
	Treatments cfz.ExpressionSlice[AWS_Evidently_Experiment_TreatmentObject] `json:"Treatments,omitempty"`
}

// New__AWS_Evidently_Experiment initializes a new *AWS_Evidently_Experiment.
func New__AWS_Evidently_Experiment(logicalName string) *AWS_Evidently_Experiment {
	return &AWS_Evidently_Experiment{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Evidently_Experiment) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Evidently_Experiment) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Evidently_Experiment) GetType() string {
	return AWS_Evidently_Experiment__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Evidently_Experiment) Set__LogicalName(v string) *AWS_Evidently_Experiment {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Evidently_Experiment) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Evidently_Experiment {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Evidently_Experiment) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Evidently_Experiment {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Evidently_Experiment) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Evidently_Experiment {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Evidently_Experiment) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Evidently_Experiment {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Evidently_Experiment) Set__RequestedOutputs(v []cfz.Output) *AWS_Evidently_Experiment {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Evidently_Experiment) Add__RequestedOutputs(v ...cfz.Output) *AWS_Evidently_Experiment {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Evidently_Experiment) Set__Description(v cfz.Expression[string]) *AWS_Evidently_Experiment {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Evidently_Experiment) SetV__Description(v string) *AWS_Evidently_Experiment {
	t.Description = cfz.V(v)
	return t
}

// Set__MetricGoals updates property "MetricGoals".
func (t *AWS_Evidently_Experiment) Set__MetricGoals(v cfz.ExpressionSlice[AWS_Evidently_Experiment_MetricGoalObject]) *AWS_Evidently_Experiment {
	t.MetricGoals = v
	return t
}

// SetS__MetricGoals updates property "MetricGoals".
func (t *AWS_Evidently_Experiment) SetS__MetricGoals(v ...cfz.Expression[AWS_Evidently_Experiment_MetricGoalObject]) *AWS_Evidently_Experiment {
	t.MetricGoals = cfz.S(v...)
	return t
}

// SetSV__MetricGoals updates property "MetricGoals".
func (t *AWS_Evidently_Experiment) SetSV__MetricGoals(v ...AWS_Evidently_Experiment_MetricGoalObject) *AWS_Evidently_Experiment {
	t.MetricGoals = cfz.SV(v...)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_Evidently_Experiment) Set__Name(v cfz.Expression[string]) *AWS_Evidently_Experiment {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_Evidently_Experiment) SetV__Name(v string) *AWS_Evidently_Experiment {
	t.Name = cfz.V(v)
	return t
}

// Set__OnlineAbConfig updates property "OnlineAbConfig".
func (t *AWS_Evidently_Experiment) Set__OnlineAbConfig(v cfz.Expression[AWS_Evidently_Experiment_OnlineAbConfigObject]) *AWS_Evidently_Experiment {
	t.OnlineAbConfig = v
	return t
}

// SetV__OnlineAbConfig updates property "OnlineAbConfig".
func (t *AWS_Evidently_Experiment) SetV__OnlineAbConfig(v AWS_Evidently_Experiment_OnlineAbConfigObject) *AWS_Evidently_Experiment {
	t.OnlineAbConfig = cfz.V(v)
	return t
}

// Set__Project updates property "Project".
func (t *AWS_Evidently_Experiment) Set__Project(v cfz.Expression[string]) *AWS_Evidently_Experiment {
	t.Project = v
	return t
}

// SetV__Project updates property "Project".
func (t *AWS_Evidently_Experiment) SetV__Project(v string) *AWS_Evidently_Experiment {
	t.Project = cfz.V(v)
	return t
}

// Set__RandomizationSalt updates property "RandomizationSalt".
func (t *AWS_Evidently_Experiment) Set__RandomizationSalt(v cfz.Expression[string]) *AWS_Evidently_Experiment {
	t.RandomizationSalt = v
	return t
}

// SetV__RandomizationSalt updates property "RandomizationSalt".
func (t *AWS_Evidently_Experiment) SetV__RandomizationSalt(v string) *AWS_Evidently_Experiment {
	t.RandomizationSalt = cfz.V(v)
	return t
}

// Set__RemoveSegment updates property "RemoveSegment".
func (t *AWS_Evidently_Experiment) Set__RemoveSegment(v cfz.Expression[bool]) *AWS_Evidently_Experiment {
	t.RemoveSegment = v
	return t
}

// SetV__RemoveSegment updates property "RemoveSegment".
func (t *AWS_Evidently_Experiment) SetV__RemoveSegment(v bool) *AWS_Evidently_Experiment {
	t.RemoveSegment = cfz.V(v)
	return t
}

// Set__RunningStatus updates property "RunningStatus".
func (t *AWS_Evidently_Experiment) Set__RunningStatus(v cfz.Expression[AWS_Evidently_Experiment_RunningStatusObject]) *AWS_Evidently_Experiment {
	t.RunningStatus = v
	return t
}

// SetV__RunningStatus updates property "RunningStatus".
func (t *AWS_Evidently_Experiment) SetV__RunningStatus(v AWS_Evidently_Experiment_RunningStatusObject) *AWS_Evidently_Experiment {
	t.RunningStatus = cfz.V(v)
	return t
}

// Set__SamplingRate updates property "SamplingRate".
func (t *AWS_Evidently_Experiment) Set__SamplingRate(v cfz.Expression[int32]) *AWS_Evidently_Experiment {
	t.SamplingRate = v
	return t
}

// SetV__SamplingRate updates property "SamplingRate".
func (t *AWS_Evidently_Experiment) SetV__SamplingRate(v int32) *AWS_Evidently_Experiment {
	t.SamplingRate = cfz.V(v)
	return t
}

// Set__Segment updates property "Segment".
func (t *AWS_Evidently_Experiment) Set__Segment(v cfz.Expression[string]) *AWS_Evidently_Experiment {
	t.Segment = v
	return t
}

// SetV__Segment updates property "Segment".
func (t *AWS_Evidently_Experiment) SetV__Segment(v string) *AWS_Evidently_Experiment {
	t.Segment = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Evidently_Experiment) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Evidently_Experiment {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Evidently_Experiment) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Evidently_Experiment {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Evidently_Experiment) SetSV__Tags(v ...cfz.Tag) *AWS_Evidently_Experiment {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Treatments updates property "Treatments".
func (t *AWS_Evidently_Experiment) Set__Treatments(v cfz.ExpressionSlice[AWS_Evidently_Experiment_TreatmentObject]) *AWS_Evidently_Experiment {
	t.Treatments = v
	return t
}

// SetS__Treatments updates property "Treatments".
func (t *AWS_Evidently_Experiment) SetS__Treatments(v ...cfz.Expression[AWS_Evidently_Experiment_TreatmentObject]) *AWS_Evidently_Experiment {
	t.Treatments = cfz.S(v...)
	return t
}

// SetSV__Treatments updates property "Treatments".
func (t *AWS_Evidently_Experiment) SetSV__Treatments(v ...AWS_Evidently_Experiment_TreatmentObject) *AWS_Evidently_Experiment {
	t.Treatments = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Evidently_Experiment) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Evidently_Experiment) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Evidently_Experiment__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Evidently_Experiment) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Evidently_Experiment) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Evidently_Experiment) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Evidently_Experiment

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Evidently_Experiment) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
