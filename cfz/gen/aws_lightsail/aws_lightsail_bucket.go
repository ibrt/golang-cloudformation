// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lightsail

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lightsail_Bucket)(nil)
	_ cfz.Resource                   = (*AWS_Lightsail_Bucket)(nil)
)

const (
	// AWS_Lightsail_Bucket__Type is the CloudFormation type for AWS::Lightsail::Bucket.
	AWS_Lightsail_Bucket__Type = "AWS::Lightsail::Bucket"
)

var (
	// AWS_Lightsail_Bucket__AttributesMap reports all the CloudFormation attributes for AWS::Lightsail::Bucket.
	AWS_Lightsail_Bucket__AttributesMap = struct {
		AbleToUpdateBundle string
		BucketArn          string
		Url                string
	}{
		AbleToUpdateBundle: "AbleToUpdateBundle",
		BucketArn:          "BucketArn",
		Url:                "Url",
	}

	// AWS_Lightsail_Bucket__AttributesSlice reports all the CloudFormation attributes for AWS::Lightsail::Bucket.
	AWS_Lightsail_Bucket__AttributesSlice = []string{
		AWS_Lightsail_Bucket__AttributesMap.AbleToUpdateBundle,
		AWS_Lightsail_Bucket__AttributesMap.BucketArn,
		AWS_Lightsail_Bucket__AttributesMap.Url,
	}
)

var (
	// AWS_Lightsail_Bucket__PropertiesMap reports all the CloudFormation properties for AWS::Lightsail::Bucket.
	AWS_Lightsail_Bucket__PropertiesMap = struct {
		AccessRules              string
		BucketName               string
		BundleId                 string
		ObjectVersioning         string
		ReadOnlyAccessAccounts   string
		ResourcesReceivingAccess string
		Tags                     string
	}{
		AccessRules:              "AccessRules",
		BucketName:               "BucketName",
		BundleId:                 "BundleId",
		ObjectVersioning:         "ObjectVersioning",
		ReadOnlyAccessAccounts:   "ReadOnlyAccessAccounts",
		ResourcesReceivingAccess: "ResourcesReceivingAccess",
		Tags:                     "Tags",
	}

	// AWS_Lightsail_Bucket__PropertiesSlice reports all the CloudFormation properties for AWS::Lightsail::Bucket.
	AWS_Lightsail_Bucket__PropertiesSlice = []string{
		AWS_Lightsail_Bucket__PropertiesMap.AccessRules,
		AWS_Lightsail_Bucket__PropertiesMap.BucketName,
		AWS_Lightsail_Bucket__PropertiesMap.BundleId,
		AWS_Lightsail_Bucket__PropertiesMap.ObjectVersioning,
		AWS_Lightsail_Bucket__PropertiesMap.ReadOnlyAccessAccounts,
		AWS_Lightsail_Bucket__PropertiesMap.ResourcesReceivingAccess,
		AWS_Lightsail_Bucket__PropertiesMap.Tags,
	}
)

// AWS_Lightsail_Bucket is a binding for AWS::Lightsail::Bucket.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html
type AWS_Lightsail_Bucket struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessRules is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-accessrules
	AccessRules cfz.Expression[AWS_Lightsail_Bucket_AccessRules] `json:"AccessRules,omitempty"`

	// BucketName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-bucketname
	BucketName cfz.Expression[string] `json:"BucketName,omitempty"`

	// BundleId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-bundleid
	BundleId cfz.Expression[string] `json:"BundleId,omitempty"`

	// ObjectVersioning is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-objectversioning
	ObjectVersioning cfz.Expression[bool] `json:"ObjectVersioning,omitempty"`

	// ReadOnlyAccessAccounts is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-readonlyaccessaccounts
	ReadOnlyAccessAccounts cfz.ExpressionSlice[string] `json:"ReadOnlyAccessAccounts,omitempty"`

	// ResourcesReceivingAccess is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-resourcesreceivingaccess
	ResourcesReceivingAccess cfz.ExpressionSlice[string] `json:"ResourcesReceivingAccess,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-bucket.html#cfn-lightsail-bucket-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Lightsail_Bucket initializes a new *AWS_Lightsail_Bucket.
func New__AWS_Lightsail_Bucket(logicalName string) *AWS_Lightsail_Bucket {
	return &AWS_Lightsail_Bucket{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lightsail_Bucket) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lightsail_Bucket) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lightsail_Bucket) GetType() string {
	return AWS_Lightsail_Bucket__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lightsail_Bucket) Set__LogicalName(v string) *AWS_Lightsail_Bucket {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lightsail_Bucket) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lightsail_Bucket {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lightsail_Bucket) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lightsail_Bucket {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lightsail_Bucket) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lightsail_Bucket {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lightsail_Bucket) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lightsail_Bucket {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lightsail_Bucket) Set__RequestedOutputs(v []cfz.Output) *AWS_Lightsail_Bucket {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lightsail_Bucket) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lightsail_Bucket {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessRules updates property "AccessRules".
func (t *AWS_Lightsail_Bucket) Set__AccessRules(v cfz.Expression[AWS_Lightsail_Bucket_AccessRules]) *AWS_Lightsail_Bucket {
	t.AccessRules = v
	return t
}

// SetV__AccessRules updates property "AccessRules".
func (t *AWS_Lightsail_Bucket) SetV__AccessRules(v AWS_Lightsail_Bucket_AccessRules) *AWS_Lightsail_Bucket {
	t.AccessRules = cfz.V(v)
	return t
}

// Set__BucketName updates property "BucketName".
func (t *AWS_Lightsail_Bucket) Set__BucketName(v cfz.Expression[string]) *AWS_Lightsail_Bucket {
	t.BucketName = v
	return t
}

// SetV__BucketName updates property "BucketName".
func (t *AWS_Lightsail_Bucket) SetV__BucketName(v string) *AWS_Lightsail_Bucket {
	t.BucketName = cfz.V(v)
	return t
}

// Set__BundleId updates property "BundleId".
func (t *AWS_Lightsail_Bucket) Set__BundleId(v cfz.Expression[string]) *AWS_Lightsail_Bucket {
	t.BundleId = v
	return t
}

// SetV__BundleId updates property "BundleId".
func (t *AWS_Lightsail_Bucket) SetV__BundleId(v string) *AWS_Lightsail_Bucket {
	t.BundleId = cfz.V(v)
	return t
}

// Set__ObjectVersioning updates property "ObjectVersioning".
func (t *AWS_Lightsail_Bucket) Set__ObjectVersioning(v cfz.Expression[bool]) *AWS_Lightsail_Bucket {
	t.ObjectVersioning = v
	return t
}

// SetV__ObjectVersioning updates property "ObjectVersioning".
func (t *AWS_Lightsail_Bucket) SetV__ObjectVersioning(v bool) *AWS_Lightsail_Bucket {
	t.ObjectVersioning = cfz.V(v)
	return t
}

// Set__ReadOnlyAccessAccounts updates property "ReadOnlyAccessAccounts".
func (t *AWS_Lightsail_Bucket) Set__ReadOnlyAccessAccounts(v cfz.ExpressionSlice[string]) *AWS_Lightsail_Bucket {
	t.ReadOnlyAccessAccounts = v
	return t
}

// SetS__ReadOnlyAccessAccounts updates property "ReadOnlyAccessAccounts".
func (t *AWS_Lightsail_Bucket) SetS__ReadOnlyAccessAccounts(v ...cfz.Expression[string]) *AWS_Lightsail_Bucket {
	t.ReadOnlyAccessAccounts = cfz.S(v...)
	return t
}

// SetSV__ReadOnlyAccessAccounts updates property "ReadOnlyAccessAccounts".
func (t *AWS_Lightsail_Bucket) SetSV__ReadOnlyAccessAccounts(v ...string) *AWS_Lightsail_Bucket {
	t.ReadOnlyAccessAccounts = cfz.SV(v...)
	return t
}

// Set__ResourcesReceivingAccess updates property "ResourcesReceivingAccess".
func (t *AWS_Lightsail_Bucket) Set__ResourcesReceivingAccess(v cfz.ExpressionSlice[string]) *AWS_Lightsail_Bucket {
	t.ResourcesReceivingAccess = v
	return t
}

// SetS__ResourcesReceivingAccess updates property "ResourcesReceivingAccess".
func (t *AWS_Lightsail_Bucket) SetS__ResourcesReceivingAccess(v ...cfz.Expression[string]) *AWS_Lightsail_Bucket {
	t.ResourcesReceivingAccess = cfz.S(v...)
	return t
}

// SetSV__ResourcesReceivingAccess updates property "ResourcesReceivingAccess".
func (t *AWS_Lightsail_Bucket) SetSV__ResourcesReceivingAccess(v ...string) *AWS_Lightsail_Bucket {
	t.ResourcesReceivingAccess = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Lightsail_Bucket) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Lightsail_Bucket {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Lightsail_Bucket) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Lightsail_Bucket {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Lightsail_Bucket) SetSV__Tags(v ...cfz.Tag) *AWS_Lightsail_Bucket {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lightsail_Bucket) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AbleToUpdateBundle returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AbleToUpdateBundle
func (t *AWS_Lightsail_Bucket) GetAtt__AbleToUpdateBundle() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_Bucket__AttributesMap.AbleToUpdateBundle))
}

// GetAtt__BucketArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BucketArn
func (t *AWS_Lightsail_Bucket) GetAtt__BucketArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_Bucket__AttributesMap.BucketArn))
}

// GetAtt__Url returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Url
func (t *AWS_Lightsail_Bucket) GetAtt__Url() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_Bucket__AttributesMap.Url))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lightsail_Bucket) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AbleToUpdateBundle returns a conventionally configured output for an attribute of this resource.
// Attribute: AbleToUpdateBundle
func (t *AWS_Lightsail_Bucket) GetConventionalOutputAtt__AbleToUpdateBundle(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAbleToUpdateBundle", t.GetAtt__AbleToUpdateBundle())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BucketArn returns a conventionally configured output for an attribute of this resource.
// Attribute: BucketArn
func (t *AWS_Lightsail_Bucket) GetConventionalOutputAtt__BucketArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBucketArn", t.GetAtt__BucketArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Url returns a conventionally configured output for an attribute of this resource.
// Attribute: Url
func (t *AWS_Lightsail_Bucket) GetConventionalOutputAtt__Url(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUrl", t.GetAtt__Url())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lightsail_Bucket) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lightsail_Bucket

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lightsail_Bucket) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
