// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lightsail

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Lightsail_Distribution_CacheSettings__Type is the CloudFormation type for AWS::Lightsail::Distribution.CacheSettings.
	AWS_Lightsail_Distribution_CacheSettings__Type = "AWS::Lightsail::Distribution.CacheSettings"
)

var (
	// AWS_Lightsail_Distribution_CacheSettings__PropertiesMap reports all the CloudFormation properties for AWS::Lightsail::Distribution.CacheSettings.
	AWS_Lightsail_Distribution_CacheSettings__PropertiesMap = struct {
		AllowedHTTPMethods    string
		CachedHTTPMethods     string
		DefaultTTL            string
		ForwardedCookies      string
		ForwardedHeaders      string
		ForwardedQueryStrings string
		MaximumTTL            string
		MinimumTTL            string
	}{
		AllowedHTTPMethods:    "AllowedHTTPMethods",
		CachedHTTPMethods:     "CachedHTTPMethods",
		DefaultTTL:            "DefaultTTL",
		ForwardedCookies:      "ForwardedCookies",
		ForwardedHeaders:      "ForwardedHeaders",
		ForwardedQueryStrings: "ForwardedQueryStrings",
		MaximumTTL:            "MaximumTTL",
		MinimumTTL:            "MinimumTTL",
	}

	// AWS_Lightsail_Distribution_CacheSettings__PropertiesSlice reports all the CloudFormation properties for AWS::Lightsail::Distribution.CacheSettings.
	AWS_Lightsail_Distribution_CacheSettings__PropertiesSlice = []string{
		AWS_Lightsail_Distribution_CacheSettings__PropertiesMap.AllowedHTTPMethods,
		AWS_Lightsail_Distribution_CacheSettings__PropertiesMap.CachedHTTPMethods,
		AWS_Lightsail_Distribution_CacheSettings__PropertiesMap.DefaultTTL,
		AWS_Lightsail_Distribution_CacheSettings__PropertiesMap.ForwardedCookies,
		AWS_Lightsail_Distribution_CacheSettings__PropertiesMap.ForwardedHeaders,
		AWS_Lightsail_Distribution_CacheSettings__PropertiesMap.ForwardedQueryStrings,
		AWS_Lightsail_Distribution_CacheSettings__PropertiesMap.MaximumTTL,
		AWS_Lightsail_Distribution_CacheSettings__PropertiesMap.MinimumTTL,
	}
)

// AWS_Lightsail_Distribution_CacheSettings is a binding for AWS::Lightsail::Distribution.CacheSettings.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-distribution-cachesettings.html
type AWS_Lightsail_Distribution_CacheSettings struct {
	// AllowedHTTPMethods is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-distribution-cachesettings.html#cfn-lightsail-distribution-cachesettings-allowedhttpmethods
	AllowedHTTPMethods cfz.Expression[string] `json:"AllowedHTTPMethods,omitempty"`

	// CachedHTTPMethods is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-distribution-cachesettings.html#cfn-lightsail-distribution-cachesettings-cachedhttpmethods
	CachedHTTPMethods cfz.Expression[string] `json:"CachedHTTPMethods,omitempty"`

	// DefaultTTL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-distribution-cachesettings.html#cfn-lightsail-distribution-cachesettings-defaultttl
	DefaultTTL cfz.Expression[int32] `json:"DefaultTTL,omitempty"`

	// ForwardedCookies is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-distribution-cachesettings.html#cfn-lightsail-distribution-cachesettings-forwardedcookies
	ForwardedCookies cfz.Expression[AWS_Lightsail_Distribution_CookieObject] `json:"ForwardedCookies,omitempty"`

	// ForwardedHeaders is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-distribution-cachesettings.html#cfn-lightsail-distribution-cachesettings-forwardedheaders
	ForwardedHeaders cfz.Expression[AWS_Lightsail_Distribution_HeaderObject] `json:"ForwardedHeaders,omitempty"`

	// ForwardedQueryStrings is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-distribution-cachesettings.html#cfn-lightsail-distribution-cachesettings-forwardedquerystrings
	ForwardedQueryStrings cfz.Expression[AWS_Lightsail_Distribution_QueryStringObject] `json:"ForwardedQueryStrings,omitempty"`

	// MaximumTTL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-distribution-cachesettings.html#cfn-lightsail-distribution-cachesettings-maximumttl
	MaximumTTL cfz.Expression[int32] `json:"MaximumTTL,omitempty"`

	// MinimumTTL is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-distribution-cachesettings.html#cfn-lightsail-distribution-cachesettings-minimumttl
	MinimumTTL cfz.Expression[int32] `json:"MinimumTTL,omitempty"`
}

// New__AWS_Lightsail_Distribution_CacheSettings initializes a new AWS_Lightsail_Distribution_CacheSettings.
func New__AWS_Lightsail_Distribution_CacheSettings() AWS_Lightsail_Distribution_CacheSettings {
	return AWS_Lightsail_Distribution_CacheSettings{}
}

// GetType returns the CloudFormation type.
func (AWS_Lightsail_Distribution_CacheSettings) GetType() string {
	return AWS_Lightsail_Distribution_CacheSettings__Type
}

// Set__AllowedHTTPMethods updates property "AllowedHTTPMethods".
func (t AWS_Lightsail_Distribution_CacheSettings) Set__AllowedHTTPMethods(v cfz.Expression[string]) AWS_Lightsail_Distribution_CacheSettings {
	t.AllowedHTTPMethods = v
	return t
}

// SetV__AllowedHTTPMethods updates property "AllowedHTTPMethods".
func (t AWS_Lightsail_Distribution_CacheSettings) SetV__AllowedHTTPMethods(v string) AWS_Lightsail_Distribution_CacheSettings {
	t.AllowedHTTPMethods = cfz.V(v)
	return t
}

// Set__CachedHTTPMethods updates property "CachedHTTPMethods".
func (t AWS_Lightsail_Distribution_CacheSettings) Set__CachedHTTPMethods(v cfz.Expression[string]) AWS_Lightsail_Distribution_CacheSettings {
	t.CachedHTTPMethods = v
	return t
}

// SetV__CachedHTTPMethods updates property "CachedHTTPMethods".
func (t AWS_Lightsail_Distribution_CacheSettings) SetV__CachedHTTPMethods(v string) AWS_Lightsail_Distribution_CacheSettings {
	t.CachedHTTPMethods = cfz.V(v)
	return t
}

// Set__DefaultTTL updates property "DefaultTTL".
func (t AWS_Lightsail_Distribution_CacheSettings) Set__DefaultTTL(v cfz.Expression[int32]) AWS_Lightsail_Distribution_CacheSettings {
	t.DefaultTTL = v
	return t
}

// SetV__DefaultTTL updates property "DefaultTTL".
func (t AWS_Lightsail_Distribution_CacheSettings) SetV__DefaultTTL(v int32) AWS_Lightsail_Distribution_CacheSettings {
	t.DefaultTTL = cfz.V(v)
	return t
}

// Set__ForwardedCookies updates property "ForwardedCookies".
func (t AWS_Lightsail_Distribution_CacheSettings) Set__ForwardedCookies(v cfz.Expression[AWS_Lightsail_Distribution_CookieObject]) AWS_Lightsail_Distribution_CacheSettings {
	t.ForwardedCookies = v
	return t
}

// SetV__ForwardedCookies updates property "ForwardedCookies".
func (t AWS_Lightsail_Distribution_CacheSettings) SetV__ForwardedCookies(v AWS_Lightsail_Distribution_CookieObject) AWS_Lightsail_Distribution_CacheSettings {
	t.ForwardedCookies = cfz.V(v)
	return t
}

// Set__ForwardedHeaders updates property "ForwardedHeaders".
func (t AWS_Lightsail_Distribution_CacheSettings) Set__ForwardedHeaders(v cfz.Expression[AWS_Lightsail_Distribution_HeaderObject]) AWS_Lightsail_Distribution_CacheSettings {
	t.ForwardedHeaders = v
	return t
}

// SetV__ForwardedHeaders updates property "ForwardedHeaders".
func (t AWS_Lightsail_Distribution_CacheSettings) SetV__ForwardedHeaders(v AWS_Lightsail_Distribution_HeaderObject) AWS_Lightsail_Distribution_CacheSettings {
	t.ForwardedHeaders = cfz.V(v)
	return t
}

// Set__ForwardedQueryStrings updates property "ForwardedQueryStrings".
func (t AWS_Lightsail_Distribution_CacheSettings) Set__ForwardedQueryStrings(v cfz.Expression[AWS_Lightsail_Distribution_QueryStringObject]) AWS_Lightsail_Distribution_CacheSettings {
	t.ForwardedQueryStrings = v
	return t
}

// SetV__ForwardedQueryStrings updates property "ForwardedQueryStrings".
func (t AWS_Lightsail_Distribution_CacheSettings) SetV__ForwardedQueryStrings(v AWS_Lightsail_Distribution_QueryStringObject) AWS_Lightsail_Distribution_CacheSettings {
	t.ForwardedQueryStrings = cfz.V(v)
	return t
}

// Set__MaximumTTL updates property "MaximumTTL".
func (t AWS_Lightsail_Distribution_CacheSettings) Set__MaximumTTL(v cfz.Expression[int32]) AWS_Lightsail_Distribution_CacheSettings {
	t.MaximumTTL = v
	return t
}

// SetV__MaximumTTL updates property "MaximumTTL".
func (t AWS_Lightsail_Distribution_CacheSettings) SetV__MaximumTTL(v int32) AWS_Lightsail_Distribution_CacheSettings {
	t.MaximumTTL = cfz.V(v)
	return t
}

// Set__MinimumTTL updates property "MinimumTTL".
func (t AWS_Lightsail_Distribution_CacheSettings) Set__MinimumTTL(v cfz.Expression[int32]) AWS_Lightsail_Distribution_CacheSettings {
	t.MinimumTTL = v
	return t
}

// SetV__MinimumTTL updates property "MinimumTTL".
func (t AWS_Lightsail_Distribution_CacheSettings) SetV__MinimumTTL(v int32) AWS_Lightsail_Distribution_CacheSettings {
	t.MinimumTTL = cfz.V(v)
	return t
}
