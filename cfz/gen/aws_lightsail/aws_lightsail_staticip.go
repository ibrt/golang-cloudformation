// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lightsail

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lightsail_StaticIp)(nil)
	_ cfz.Resource                   = (*AWS_Lightsail_StaticIp)(nil)
)

const (
	// AWS_Lightsail_StaticIp__Type is the CloudFormation type for AWS::Lightsail::StaticIp.
	AWS_Lightsail_StaticIp__Type = "AWS::Lightsail::StaticIp"
)

var (
	// AWS_Lightsail_StaticIp__AttributesMap reports all the CloudFormation attributes for AWS::Lightsail::StaticIp.
	AWS_Lightsail_StaticIp__AttributesMap = struct {
		IpAddress   string
		IsAttached  string
		StaticIpArn string
	}{
		IpAddress:   "IpAddress",
		IsAttached:  "IsAttached",
		StaticIpArn: "StaticIpArn",
	}

	// AWS_Lightsail_StaticIp__AttributesSlice reports all the CloudFormation attributes for AWS::Lightsail::StaticIp.
	AWS_Lightsail_StaticIp__AttributesSlice = []string{
		AWS_Lightsail_StaticIp__AttributesMap.IpAddress,
		AWS_Lightsail_StaticIp__AttributesMap.IsAttached,
		AWS_Lightsail_StaticIp__AttributesMap.StaticIpArn,
	}
)

var (
	// AWS_Lightsail_StaticIp__PropertiesMap reports all the CloudFormation properties for AWS::Lightsail::StaticIp.
	AWS_Lightsail_StaticIp__PropertiesMap = struct {
		AttachedTo   string
		StaticIpName string
	}{
		AttachedTo:   "AttachedTo",
		StaticIpName: "StaticIpName",
	}

	// AWS_Lightsail_StaticIp__PropertiesSlice reports all the CloudFormation properties for AWS::Lightsail::StaticIp.
	AWS_Lightsail_StaticIp__PropertiesSlice = []string{
		AWS_Lightsail_StaticIp__PropertiesMap.AttachedTo,
		AWS_Lightsail_StaticIp__PropertiesMap.StaticIpName,
	}
)

// AWS_Lightsail_StaticIp is a binding for AWS::Lightsail::StaticIp.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-staticip.html
type AWS_Lightsail_StaticIp struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AttachedTo is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-staticip.html#cfn-lightsail-staticip-attachedto
	AttachedTo cfz.Expression[string] `json:"AttachedTo,omitempty"`

	// StaticIpName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-staticip.html#cfn-lightsail-staticip-staticipname
	StaticIpName cfz.Expression[string] `json:"StaticIpName,omitempty"`
}

// New__AWS_Lightsail_StaticIp initializes a new *AWS_Lightsail_StaticIp.
func New__AWS_Lightsail_StaticIp(logicalName string) *AWS_Lightsail_StaticIp {
	return &AWS_Lightsail_StaticIp{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lightsail_StaticIp) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lightsail_StaticIp) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lightsail_StaticIp) GetType() string {
	return AWS_Lightsail_StaticIp__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lightsail_StaticIp) Set__LogicalName(v string) *AWS_Lightsail_StaticIp {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lightsail_StaticIp) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lightsail_StaticIp {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lightsail_StaticIp) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lightsail_StaticIp {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lightsail_StaticIp) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lightsail_StaticIp {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lightsail_StaticIp) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lightsail_StaticIp {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lightsail_StaticIp) Set__RequestedOutputs(v []cfz.Output) *AWS_Lightsail_StaticIp {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lightsail_StaticIp) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lightsail_StaticIp {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AttachedTo updates property "AttachedTo".
func (t *AWS_Lightsail_StaticIp) Set__AttachedTo(v cfz.Expression[string]) *AWS_Lightsail_StaticIp {
	t.AttachedTo = v
	return t
}

// SetV__AttachedTo updates property "AttachedTo".
func (t *AWS_Lightsail_StaticIp) SetV__AttachedTo(v string) *AWS_Lightsail_StaticIp {
	t.AttachedTo = cfz.V(v)
	return t
}

// Set__StaticIpName updates property "StaticIpName".
func (t *AWS_Lightsail_StaticIp) Set__StaticIpName(v cfz.Expression[string]) *AWS_Lightsail_StaticIp {
	t.StaticIpName = v
	return t
}

// SetV__StaticIpName updates property "StaticIpName".
func (t *AWS_Lightsail_StaticIp) SetV__StaticIpName(v string) *AWS_Lightsail_StaticIp {
	t.StaticIpName = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lightsail_StaticIp) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__IpAddress returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IpAddress
func (t *AWS_Lightsail_StaticIp) GetAtt__IpAddress() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_StaticIp__AttributesMap.IpAddress))
}

// GetAtt__IsAttached returns a $cfz.Expression[bool] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: IsAttached
func (t *AWS_Lightsail_StaticIp) GetAtt__IsAttached() cfz.Expression[bool] {
	return cfz.GetAtt[bool](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_StaticIp__AttributesMap.IsAttached))
}

// GetAtt__StaticIpArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: StaticIpArn
func (t *AWS_Lightsail_StaticIp) GetAtt__StaticIpArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_StaticIp__AttributesMap.StaticIpArn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lightsail_StaticIp) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IpAddress returns a conventionally configured output for an attribute of this resource.
// Attribute: IpAddress
func (t *AWS_Lightsail_StaticIp) GetConventionalOutputAtt__IpAddress(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIpAddress", t.GetAtt__IpAddress())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__IsAttached returns a conventionally configured output for an attribute of this resource.
// Attribute: IsAttached
func (t *AWS_Lightsail_StaticIp) GetConventionalOutputAtt__IsAttached(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttIsAttached", t.GetAtt__IsAttached())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__StaticIpArn returns a conventionally configured output for an attribute of this resource.
// Attribute: StaticIpArn
func (t *AWS_Lightsail_StaticIp) GetConventionalOutputAtt__StaticIpArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStaticIpArn", t.GetAtt__StaticIpArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lightsail_StaticIp) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lightsail_StaticIp

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lightsail_StaticIp) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
