// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lightsail

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_Lightsail_Container_Container__Type is the CloudFormation type for AWS::Lightsail::Container.Container.
	AWS_Lightsail_Container_Container__Type = "AWS::Lightsail::Container.Container"
)

var (
	// AWS_Lightsail_Container_Container__PropertiesMap reports all the CloudFormation properties for AWS::Lightsail::Container.Container.
	AWS_Lightsail_Container_Container__PropertiesMap = struct {
		Command       string
		ContainerName string
		Environment   string
		Image         string
		Ports         string
	}{
		Command:       "Command",
		ContainerName: "ContainerName",
		Environment:   "Environment",
		Image:         "Image",
		Ports:         "Ports",
	}

	// AWS_Lightsail_Container_Container__PropertiesSlice reports all the CloudFormation properties for AWS::Lightsail::Container.Container.
	AWS_Lightsail_Container_Container__PropertiesSlice = []string{
		AWS_Lightsail_Container_Container__PropertiesMap.Command,
		AWS_Lightsail_Container_Container__PropertiesMap.ContainerName,
		AWS_Lightsail_Container_Container__PropertiesMap.Environment,
		AWS_Lightsail_Container_Container__PropertiesMap.Image,
		AWS_Lightsail_Container_Container__PropertiesMap.Ports,
	}
)

// AWS_Lightsail_Container_Container is a binding for AWS::Lightsail::Container.Container.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-container-container.html
type AWS_Lightsail_Container_Container struct {
	// Command is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-container-container.html#cfn-lightsail-container-container-command
	Command cfz.ExpressionSlice[string] `json:"Command,omitempty"`

	// ContainerName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-container-container.html#cfn-lightsail-container-container-containername
	ContainerName cfz.Expression[string] `json:"ContainerName,omitempty"`

	// Environment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-container-container.html#cfn-lightsail-container-container-environment
	Environment cfz.ExpressionSlice[AWS_Lightsail_Container_EnvironmentVariable] `json:"Environment,omitempty"`

	// Image is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-container-container.html#cfn-lightsail-container-container-image
	Image cfz.Expression[string] `json:"Image,omitempty"`

	// Ports is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lightsail-container-container.html#cfn-lightsail-container-container-ports
	Ports cfz.ExpressionSlice[AWS_Lightsail_Container_PortInfo] `json:"Ports,omitempty"`
}

// New__AWS_Lightsail_Container_Container initializes a new AWS_Lightsail_Container_Container.
func New__AWS_Lightsail_Container_Container() AWS_Lightsail_Container_Container {
	return AWS_Lightsail_Container_Container{}
}

// GetType returns the CloudFormation type.
func (AWS_Lightsail_Container_Container) GetType() string {
	return AWS_Lightsail_Container_Container__Type
}

// Set__Command updates property "Command".
func (t AWS_Lightsail_Container_Container) Set__Command(v cfz.ExpressionSlice[string]) AWS_Lightsail_Container_Container {
	t.Command = v
	return t
}

// SetS__Command updates property "Command".
func (t AWS_Lightsail_Container_Container) SetS__Command(v ...cfz.Expression[string]) AWS_Lightsail_Container_Container {
	t.Command = cfz.S(v...)
	return t
}

// SetSV__Command updates property "Command".
func (t AWS_Lightsail_Container_Container) SetSV__Command(v ...string) AWS_Lightsail_Container_Container {
	t.Command = cfz.SV(v...)
	return t
}

// Set__ContainerName updates property "ContainerName".
func (t AWS_Lightsail_Container_Container) Set__ContainerName(v cfz.Expression[string]) AWS_Lightsail_Container_Container {
	t.ContainerName = v
	return t
}

// SetV__ContainerName updates property "ContainerName".
func (t AWS_Lightsail_Container_Container) SetV__ContainerName(v string) AWS_Lightsail_Container_Container {
	t.ContainerName = cfz.V(v)
	return t
}

// Set__Environment updates property "Environment".
func (t AWS_Lightsail_Container_Container) Set__Environment(v cfz.ExpressionSlice[AWS_Lightsail_Container_EnvironmentVariable]) AWS_Lightsail_Container_Container {
	t.Environment = v
	return t
}

// SetS__Environment updates property "Environment".
func (t AWS_Lightsail_Container_Container) SetS__Environment(v ...cfz.Expression[AWS_Lightsail_Container_EnvironmentVariable]) AWS_Lightsail_Container_Container {
	t.Environment = cfz.S(v...)
	return t
}

// SetSV__Environment updates property "Environment".
func (t AWS_Lightsail_Container_Container) SetSV__Environment(v ...AWS_Lightsail_Container_EnvironmentVariable) AWS_Lightsail_Container_Container {
	t.Environment = cfz.SV(v...)
	return t
}

// Set__Image updates property "Image".
func (t AWS_Lightsail_Container_Container) Set__Image(v cfz.Expression[string]) AWS_Lightsail_Container_Container {
	t.Image = v
	return t
}

// SetV__Image updates property "Image".
func (t AWS_Lightsail_Container_Container) SetV__Image(v string) AWS_Lightsail_Container_Container {
	t.Image = cfz.V(v)
	return t
}

// Set__Ports updates property "Ports".
func (t AWS_Lightsail_Container_Container) Set__Ports(v cfz.ExpressionSlice[AWS_Lightsail_Container_PortInfo]) AWS_Lightsail_Container_Container {
	t.Ports = v
	return t
}

// SetS__Ports updates property "Ports".
func (t AWS_Lightsail_Container_Container) SetS__Ports(v ...cfz.Expression[AWS_Lightsail_Container_PortInfo]) AWS_Lightsail_Container_Container {
	t.Ports = cfz.S(v...)
	return t
}

// SetSV__Ports updates property "Ports".
func (t AWS_Lightsail_Container_Container) SetSV__Ports(v ...AWS_Lightsail_Container_PortInfo) AWS_Lightsail_Container_Container {
	t.Ports = cfz.SV(v...)
	return t
}
