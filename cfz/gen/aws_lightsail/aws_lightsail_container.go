// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_lightsail

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Lightsail_Container)(nil)
	_ cfz.Resource                   = (*AWS_Lightsail_Container)(nil)
)

const (
	// AWS_Lightsail_Container__Type is the CloudFormation type for AWS::Lightsail::Container.
	AWS_Lightsail_Container__Type = "AWS::Lightsail::Container"
)

var (
	// AWS_Lightsail_Container__AttributesMap reports all the CloudFormation attributes for AWS::Lightsail::Container.
	AWS_Lightsail_Container__AttributesMap = struct {
		ContainerArn                                          string
		PrincipalArn                                          string
		PrivateRegistryAccess_EcrImagePullerRole_PrincipalArn string
		Url                                                   string
	}{
		ContainerArn: "ContainerArn",
		PrincipalArn: "PrincipalArn",
		PrivateRegistryAccess_EcrImagePullerRole_PrincipalArn: "PrivateRegistryAccess.EcrImagePullerRole.PrincipalArn",
		Url: "Url",
	}

	// AWS_Lightsail_Container__AttributesSlice reports all the CloudFormation attributes for AWS::Lightsail::Container.
	AWS_Lightsail_Container__AttributesSlice = []string{
		AWS_Lightsail_Container__AttributesMap.ContainerArn,
		AWS_Lightsail_Container__AttributesMap.PrincipalArn,
		AWS_Lightsail_Container__AttributesMap.PrivateRegistryAccess_EcrImagePullerRole_PrincipalArn,
		AWS_Lightsail_Container__AttributesMap.Url,
	}
)

var (
	// AWS_Lightsail_Container__PropertiesMap reports all the CloudFormation properties for AWS::Lightsail::Container.
	AWS_Lightsail_Container__PropertiesMap = struct {
		ContainerServiceDeployment string
		IsDisabled                 string
		Power                      string
		PrivateRegistryAccess      string
		PublicDomainNames          string
		Scale                      string
		ServiceName                string
		Tags                       string
	}{
		ContainerServiceDeployment: "ContainerServiceDeployment",
		IsDisabled:                 "IsDisabled",
		Power:                      "Power",
		PrivateRegistryAccess:      "PrivateRegistryAccess",
		PublicDomainNames:          "PublicDomainNames",
		Scale:                      "Scale",
		ServiceName:                "ServiceName",
		Tags:                       "Tags",
	}

	// AWS_Lightsail_Container__PropertiesSlice reports all the CloudFormation properties for AWS::Lightsail::Container.
	AWS_Lightsail_Container__PropertiesSlice = []string{
		AWS_Lightsail_Container__PropertiesMap.ContainerServiceDeployment,
		AWS_Lightsail_Container__PropertiesMap.IsDisabled,
		AWS_Lightsail_Container__PropertiesMap.Power,
		AWS_Lightsail_Container__PropertiesMap.PrivateRegistryAccess,
		AWS_Lightsail_Container__PropertiesMap.PublicDomainNames,
		AWS_Lightsail_Container__PropertiesMap.Scale,
		AWS_Lightsail_Container__PropertiesMap.ServiceName,
		AWS_Lightsail_Container__PropertiesMap.Tags,
	}
)

// AWS_Lightsail_Container is a binding for AWS::Lightsail::Container.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html
type AWS_Lightsail_Container struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ContainerServiceDeployment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-containerservicedeployment
	ContainerServiceDeployment cfz.Expression[AWS_Lightsail_Container_ContainerServiceDeployment] `json:"ContainerServiceDeployment,omitempty"`

	// IsDisabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-isdisabled
	IsDisabled cfz.Expression[bool] `json:"IsDisabled,omitempty"`

	// Power is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-power
	Power cfz.Expression[string] `json:"Power,omitempty"`

	// PrivateRegistryAccess is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-privateregistryaccess
	PrivateRegistryAccess cfz.Expression[AWS_Lightsail_Container_PrivateRegistryAccess] `json:"PrivateRegistryAccess,omitempty"`

	// PublicDomainNames is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-publicdomainnames
	PublicDomainNames cfz.ExpressionSlice[AWS_Lightsail_Container_PublicDomainName] `json:"PublicDomainNames,omitempty"`

	// Scale is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-scale
	Scale cfz.Expression[int32] `json:"Scale,omitempty"`

	// ServiceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-servicename
	ServiceName cfz.Expression[string] `json:"ServiceName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Lightsail_Container initializes a new *AWS_Lightsail_Container.
func New__AWS_Lightsail_Container(logicalName string) *AWS_Lightsail_Container {
	return &AWS_Lightsail_Container{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Lightsail_Container) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Lightsail_Container) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Lightsail_Container) GetType() string {
	return AWS_Lightsail_Container__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Lightsail_Container) Set__LogicalName(v string) *AWS_Lightsail_Container {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Lightsail_Container) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Lightsail_Container {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Lightsail_Container) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Lightsail_Container {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Lightsail_Container) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Lightsail_Container {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Lightsail_Container) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Lightsail_Container {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Lightsail_Container) Set__RequestedOutputs(v []cfz.Output) *AWS_Lightsail_Container {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Lightsail_Container) Add__RequestedOutputs(v ...cfz.Output) *AWS_Lightsail_Container {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ContainerServiceDeployment updates property "ContainerServiceDeployment".
func (t *AWS_Lightsail_Container) Set__ContainerServiceDeployment(v cfz.Expression[AWS_Lightsail_Container_ContainerServiceDeployment]) *AWS_Lightsail_Container {
	t.ContainerServiceDeployment = v
	return t
}

// SetV__ContainerServiceDeployment updates property "ContainerServiceDeployment".
func (t *AWS_Lightsail_Container) SetV__ContainerServiceDeployment(v AWS_Lightsail_Container_ContainerServiceDeployment) *AWS_Lightsail_Container {
	t.ContainerServiceDeployment = cfz.V(v)
	return t
}

// Set__IsDisabled updates property "IsDisabled".
func (t *AWS_Lightsail_Container) Set__IsDisabled(v cfz.Expression[bool]) *AWS_Lightsail_Container {
	t.IsDisabled = v
	return t
}

// SetV__IsDisabled updates property "IsDisabled".
func (t *AWS_Lightsail_Container) SetV__IsDisabled(v bool) *AWS_Lightsail_Container {
	t.IsDisabled = cfz.V(v)
	return t
}

// Set__Power updates property "Power".
func (t *AWS_Lightsail_Container) Set__Power(v cfz.Expression[string]) *AWS_Lightsail_Container {
	t.Power = v
	return t
}

// SetV__Power updates property "Power".
func (t *AWS_Lightsail_Container) SetV__Power(v string) *AWS_Lightsail_Container {
	t.Power = cfz.V(v)
	return t
}

// Set__PrivateRegistryAccess updates property "PrivateRegistryAccess".
func (t *AWS_Lightsail_Container) Set__PrivateRegistryAccess(v cfz.Expression[AWS_Lightsail_Container_PrivateRegistryAccess]) *AWS_Lightsail_Container {
	t.PrivateRegistryAccess = v
	return t
}

// SetV__PrivateRegistryAccess updates property "PrivateRegistryAccess".
func (t *AWS_Lightsail_Container) SetV__PrivateRegistryAccess(v AWS_Lightsail_Container_PrivateRegistryAccess) *AWS_Lightsail_Container {
	t.PrivateRegistryAccess = cfz.V(v)
	return t
}

// Set__PublicDomainNames updates property "PublicDomainNames".
func (t *AWS_Lightsail_Container) Set__PublicDomainNames(v cfz.ExpressionSlice[AWS_Lightsail_Container_PublicDomainName]) *AWS_Lightsail_Container {
	t.PublicDomainNames = v
	return t
}

// SetS__PublicDomainNames updates property "PublicDomainNames".
func (t *AWS_Lightsail_Container) SetS__PublicDomainNames(v ...cfz.Expression[AWS_Lightsail_Container_PublicDomainName]) *AWS_Lightsail_Container {
	t.PublicDomainNames = cfz.S(v...)
	return t
}

// SetSV__PublicDomainNames updates property "PublicDomainNames".
func (t *AWS_Lightsail_Container) SetSV__PublicDomainNames(v ...AWS_Lightsail_Container_PublicDomainName) *AWS_Lightsail_Container {
	t.PublicDomainNames = cfz.SV(v...)
	return t
}

// Set__Scale updates property "Scale".
func (t *AWS_Lightsail_Container) Set__Scale(v cfz.Expression[int32]) *AWS_Lightsail_Container {
	t.Scale = v
	return t
}

// SetV__Scale updates property "Scale".
func (t *AWS_Lightsail_Container) SetV__Scale(v int32) *AWS_Lightsail_Container {
	t.Scale = cfz.V(v)
	return t
}

// Set__ServiceName updates property "ServiceName".
func (t *AWS_Lightsail_Container) Set__ServiceName(v cfz.Expression[string]) *AWS_Lightsail_Container {
	t.ServiceName = v
	return t
}

// SetV__ServiceName updates property "ServiceName".
func (t *AWS_Lightsail_Container) SetV__ServiceName(v string) *AWS_Lightsail_Container {
	t.ServiceName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Lightsail_Container) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Lightsail_Container {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Lightsail_Container) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Lightsail_Container {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Lightsail_Container) SetSV__Tags(v ...cfz.Tag) *AWS_Lightsail_Container {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Lightsail_Container) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__ContainerArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ContainerArn
func (t *AWS_Lightsail_Container) GetAtt__ContainerArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_Container__AttributesMap.ContainerArn))
}

// GetAtt__PrincipalArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PrincipalArn
func (t *AWS_Lightsail_Container) GetAtt__PrincipalArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_Container__AttributesMap.PrincipalArn))
}

// GetAtt__PrivateRegistryAccess_EcrImagePullerRole_PrincipalArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: PrivateRegistryAccess.EcrImagePullerRole.PrincipalArn
func (t *AWS_Lightsail_Container) GetAtt__PrivateRegistryAccess_EcrImagePullerRole_PrincipalArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_Container__AttributesMap.PrivateRegistryAccess_EcrImagePullerRole_PrincipalArn))
}

// GetAtt__Url returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Url
func (t *AWS_Lightsail_Container) GetAtt__Url() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Lightsail_Container__AttributesMap.Url))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Lightsail_Container) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ContainerArn returns a conventionally configured output for an attribute of this resource.
// Attribute: ContainerArn
func (t *AWS_Lightsail_Container) GetConventionalOutputAtt__ContainerArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttContainerArn", t.GetAtt__ContainerArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PrincipalArn returns a conventionally configured output for an attribute of this resource.
// Attribute: PrincipalArn
func (t *AWS_Lightsail_Container) GetConventionalOutputAtt__PrincipalArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPrincipalArn", t.GetAtt__PrincipalArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__PrivateRegistryAccess_EcrImagePullerRole_PrincipalArn returns a conventionally configured output for an attribute of this resource.
// Attribute: PrivateRegistryAccess.EcrImagePullerRole.PrincipalArn
func (t *AWS_Lightsail_Container) GetConventionalOutputAtt__PrivateRegistryAccess_EcrImagePullerRole_PrincipalArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttPrivateRegistryAccessEcrImagePullerRolePrincipalArn", t.GetAtt__PrivateRegistryAccess_EcrImagePullerRole_PrincipalArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Url returns a conventionally configured output for an attribute of this resource.
// Attribute: Url
func (t *AWS_Lightsail_Container) GetConventionalOutputAtt__Url(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttUrl", t.GetAtt__Url())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Lightsail_Container) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Lightsail_Container

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Lightsail_Container) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
