// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_workspaces

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_WorkSpaces_ConnectionAlias)(nil)
	_ cfz.Resource                   = (*AWS_WorkSpaces_ConnectionAlias)(nil)
)

const (
	// AWS_WorkSpaces_ConnectionAlias__Type is the CloudFormation type for AWS::WorkSpaces::ConnectionAlias.
	AWS_WorkSpaces_ConnectionAlias__Type = "AWS::WorkSpaces::ConnectionAlias"
)

var (
	// AWS_WorkSpaces_ConnectionAlias__AttributesMap reports all the CloudFormation attributes for AWS::WorkSpaces::ConnectionAlias.
	AWS_WorkSpaces_ConnectionAlias__AttributesMap = struct {
		AliasId              string
		Associations         string
		ConnectionAliasState string
	}{
		AliasId:              "AliasId",
		Associations:         "Associations",
		ConnectionAliasState: "ConnectionAliasState",
	}

	// AWS_WorkSpaces_ConnectionAlias__AttributesSlice reports all the CloudFormation attributes for AWS::WorkSpaces::ConnectionAlias.
	AWS_WorkSpaces_ConnectionAlias__AttributesSlice = []string{
		AWS_WorkSpaces_ConnectionAlias__AttributesMap.AliasId,
		AWS_WorkSpaces_ConnectionAlias__AttributesMap.Associations,
		AWS_WorkSpaces_ConnectionAlias__AttributesMap.ConnectionAliasState,
	}
)

var (
	// AWS_WorkSpaces_ConnectionAlias__PropertiesMap reports all the CloudFormation properties for AWS::WorkSpaces::ConnectionAlias.
	AWS_WorkSpaces_ConnectionAlias__PropertiesMap = struct {
		ConnectionString string
		Tags             string
	}{
		ConnectionString: "ConnectionString",
		Tags:             "Tags",
	}

	// AWS_WorkSpaces_ConnectionAlias__PropertiesSlice reports all the CloudFormation properties for AWS::WorkSpaces::ConnectionAlias.
	AWS_WorkSpaces_ConnectionAlias__PropertiesSlice = []string{
		AWS_WorkSpaces_ConnectionAlias__PropertiesMap.ConnectionString,
		AWS_WorkSpaces_ConnectionAlias__PropertiesMap.Tags,
	}
)

// AWS_WorkSpaces_ConnectionAlias is a binding for AWS::WorkSpaces::ConnectionAlias.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html
type AWS_WorkSpaces_ConnectionAlias struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ConnectionString is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html#cfn-workspaces-connectionalias-connectionstring
	ConnectionString cfz.Expression[string] `json:"ConnectionString,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-workspaces-connectionalias.html#cfn-workspaces-connectionalias-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_WorkSpaces_ConnectionAlias initializes a new *AWS_WorkSpaces_ConnectionAlias.
func New__AWS_WorkSpaces_ConnectionAlias(logicalName string) *AWS_WorkSpaces_ConnectionAlias {
	return &AWS_WorkSpaces_ConnectionAlias{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_WorkSpaces_ConnectionAlias) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_WorkSpaces_ConnectionAlias) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_WorkSpaces_ConnectionAlias) GetType() string {
	return AWS_WorkSpaces_ConnectionAlias__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_WorkSpaces_ConnectionAlias) Set__LogicalName(v string) *AWS_WorkSpaces_ConnectionAlias {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_WorkSpaces_ConnectionAlias) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_WorkSpaces_ConnectionAlias {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_WorkSpaces_ConnectionAlias) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_WorkSpaces_ConnectionAlias {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_WorkSpaces_ConnectionAlias) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_WorkSpaces_ConnectionAlias {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_WorkSpaces_ConnectionAlias) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_WorkSpaces_ConnectionAlias {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_WorkSpaces_ConnectionAlias) Set__RequestedOutputs(v []cfz.Output) *AWS_WorkSpaces_ConnectionAlias {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_WorkSpaces_ConnectionAlias) Add__RequestedOutputs(v ...cfz.Output) *AWS_WorkSpaces_ConnectionAlias {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ConnectionString updates property "ConnectionString".
func (t *AWS_WorkSpaces_ConnectionAlias) Set__ConnectionString(v cfz.Expression[string]) *AWS_WorkSpaces_ConnectionAlias {
	t.ConnectionString = v
	return t
}

// SetV__ConnectionString updates property "ConnectionString".
func (t *AWS_WorkSpaces_ConnectionAlias) SetV__ConnectionString(v string) *AWS_WorkSpaces_ConnectionAlias {
	t.ConnectionString = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_WorkSpaces_ConnectionAlias) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_WorkSpaces_ConnectionAlias {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_WorkSpaces_ConnectionAlias) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_WorkSpaces_ConnectionAlias {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_WorkSpaces_ConnectionAlias) SetSV__Tags(v ...cfz.Tag) *AWS_WorkSpaces_ConnectionAlias {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_WorkSpaces_ConnectionAlias) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AliasId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AliasId
func (t *AWS_WorkSpaces_ConnectionAlias) GetAtt__AliasId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpaces_ConnectionAlias__AttributesMap.AliasId))
}

// GetAttSlice__Associations returns a $cfz.ExpressionSlice[AWS_WorkSpaces_ConnectionAlias_ConnectionAliasAssociation] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Associations
func (t *AWS_WorkSpaces_ConnectionAlias) GetAttSlice__Associations() cfz.ExpressionSlice[AWS_WorkSpaces_ConnectionAlias_ConnectionAliasAssociation] {
	return cfz.GetAttSlice[AWS_WorkSpaces_ConnectionAlias_ConnectionAliasAssociation](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpaces_ConnectionAlias__AttributesMap.Associations))
}

// GetAtt__ConnectionAliasState returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConnectionAliasState
func (t *AWS_WorkSpaces_ConnectionAlias) GetAtt__ConnectionAliasState() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_WorkSpaces_ConnectionAlias__AttributesMap.ConnectionAliasState))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_WorkSpaces_ConnectionAlias) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AliasId returns a conventionally configured output for an attribute of this resource.
// Attribute: AliasId
func (t *AWS_WorkSpaces_ConnectionAlias) GetConventionalOutputAtt__AliasId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAliasId", t.GetAtt__AliasId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Associations returns a conventionally configured output for an attribute of this resource.
// Attribute: Associations
func (t *AWS_WorkSpaces_ConnectionAlias) GetConventionalOutputAtt__Associations(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAssociations", t.GetAttSlice__Associations())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConnectionAliasState returns a conventionally configured output for an attribute of this resource.
// Attribute: ConnectionAliasState
func (t *AWS_WorkSpaces_ConnectionAlias) GetConventionalOutputAtt__ConnectionAliasState(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConnectionAliasState", t.GetAtt__ConnectionAliasState())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_WorkSpaces_ConnectionAlias) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_WorkSpaces_ConnectionAlias

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_WorkSpaces_ConnectionAlias) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
