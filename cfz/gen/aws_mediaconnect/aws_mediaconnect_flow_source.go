// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediaconnect

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaConnect_Flow_Source__Type is the CloudFormation type for AWS::MediaConnect::Flow.Source.
	AWS_MediaConnect_Flow_Source__Type = "AWS::MediaConnect::Flow.Source"
)

var (
	// AWS_MediaConnect_Flow_Source__PropertiesMap reports all the CloudFormation properties for AWS::MediaConnect::Flow.Source.
	AWS_MediaConnect_Flow_Source__PropertiesMap = struct {
		Decryption                      string
		Description                     string
		EntitlementArn                  string
		GatewayBridgeSource             string
		IngestIp                        string
		IngestPort                      string
		MaxBitrate                      string
		MaxLatency                      string
		MaxSyncBuffer                   string
		MediaStreamSourceConfigurations string
		MinLatency                      string
		Name                            string
		Protocol                        string
		SenderControlPort               string
		SenderIpAddress                 string
		SourceArn                       string
		SourceIngestPort                string
		SourceListenerAddress           string
		SourceListenerPort              string
		StreamId                        string
		VpcInterfaceName                string
		WhitelistCidr                   string
	}{
		Decryption:                      "Decryption",
		Description:                     "Description",
		EntitlementArn:                  "EntitlementArn",
		GatewayBridgeSource:             "GatewayBridgeSource",
		IngestIp:                        "IngestIp",
		IngestPort:                      "IngestPort",
		MaxBitrate:                      "MaxBitrate",
		MaxLatency:                      "MaxLatency",
		MaxSyncBuffer:                   "MaxSyncBuffer",
		MediaStreamSourceConfigurations: "MediaStreamSourceConfigurations",
		MinLatency:                      "MinLatency",
		Name:                            "Name",
		Protocol:                        "Protocol",
		SenderControlPort:               "SenderControlPort",
		SenderIpAddress:                 "SenderIpAddress",
		SourceArn:                       "SourceArn",
		SourceIngestPort:                "SourceIngestPort",
		SourceListenerAddress:           "SourceListenerAddress",
		SourceListenerPort:              "SourceListenerPort",
		StreamId:                        "StreamId",
		VpcInterfaceName:                "VpcInterfaceName",
		WhitelistCidr:                   "WhitelistCidr",
	}

	// AWS_MediaConnect_Flow_Source__PropertiesSlice reports all the CloudFormation properties for AWS::MediaConnect::Flow.Source.
	AWS_MediaConnect_Flow_Source__PropertiesSlice = []string{
		AWS_MediaConnect_Flow_Source__PropertiesMap.Decryption,
		AWS_MediaConnect_Flow_Source__PropertiesMap.Description,
		AWS_MediaConnect_Flow_Source__PropertiesMap.EntitlementArn,
		AWS_MediaConnect_Flow_Source__PropertiesMap.GatewayBridgeSource,
		AWS_MediaConnect_Flow_Source__PropertiesMap.IngestIp,
		AWS_MediaConnect_Flow_Source__PropertiesMap.IngestPort,
		AWS_MediaConnect_Flow_Source__PropertiesMap.MaxBitrate,
		AWS_MediaConnect_Flow_Source__PropertiesMap.MaxLatency,
		AWS_MediaConnect_Flow_Source__PropertiesMap.MaxSyncBuffer,
		AWS_MediaConnect_Flow_Source__PropertiesMap.MediaStreamSourceConfigurations,
		AWS_MediaConnect_Flow_Source__PropertiesMap.MinLatency,
		AWS_MediaConnect_Flow_Source__PropertiesMap.Name,
		AWS_MediaConnect_Flow_Source__PropertiesMap.Protocol,
		AWS_MediaConnect_Flow_Source__PropertiesMap.SenderControlPort,
		AWS_MediaConnect_Flow_Source__PropertiesMap.SenderIpAddress,
		AWS_MediaConnect_Flow_Source__PropertiesMap.SourceArn,
		AWS_MediaConnect_Flow_Source__PropertiesMap.SourceIngestPort,
		AWS_MediaConnect_Flow_Source__PropertiesMap.SourceListenerAddress,
		AWS_MediaConnect_Flow_Source__PropertiesMap.SourceListenerPort,
		AWS_MediaConnect_Flow_Source__PropertiesMap.StreamId,
		AWS_MediaConnect_Flow_Source__PropertiesMap.VpcInterfaceName,
		AWS_MediaConnect_Flow_Source__PropertiesMap.WhitelistCidr,
	}
)

// AWS_MediaConnect_Flow_Source is a binding for AWS::MediaConnect::Flow.Source.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html
type AWS_MediaConnect_Flow_Source struct {
	// Decryption is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-decryption
	Decryption cfz.Expression[AWS_MediaConnect_Flow_Encryption] `json:"Decryption,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// EntitlementArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-entitlementarn
	EntitlementArn cfz.Expression[string] `json:"EntitlementArn,omitempty"`

	// GatewayBridgeSource is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-gatewaybridgesource
	GatewayBridgeSource cfz.Expression[AWS_MediaConnect_Flow_GatewayBridgeSource] `json:"GatewayBridgeSource,omitempty"`

	// IngestIp is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-ingestip
	IngestIp cfz.Expression[string] `json:"IngestIp,omitempty"`

	// IngestPort is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-ingestport
	IngestPort cfz.Expression[int32] `json:"IngestPort,omitempty"`

	// MaxBitrate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-maxbitrate
	MaxBitrate cfz.Expression[int32] `json:"MaxBitrate,omitempty"`

	// MaxLatency is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-maxlatency
	MaxLatency cfz.Expression[int32] `json:"MaxLatency,omitempty"`

	// MaxSyncBuffer is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-maxsyncbuffer
	MaxSyncBuffer cfz.Expression[int32] `json:"MaxSyncBuffer,omitempty"`

	// MediaStreamSourceConfigurations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-mediastreamsourceconfigurations
	MediaStreamSourceConfigurations cfz.ExpressionSlice[AWS_MediaConnect_Flow_MediaStreamSourceConfiguration] `json:"MediaStreamSourceConfigurations,omitempty"`

	// MinLatency is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-minlatency
	MinLatency cfz.Expression[int32] `json:"MinLatency,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Protocol is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-protocol
	Protocol cfz.Expression[string] `json:"Protocol,omitempty"`

	// SenderControlPort is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-sendercontrolport
	SenderControlPort cfz.Expression[int32] `json:"SenderControlPort,omitempty"`

	// SenderIpAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-senderipaddress
	SenderIpAddress cfz.Expression[string] `json:"SenderIpAddress,omitempty"`

	// SourceArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-sourcearn
	SourceArn cfz.Expression[string] `json:"SourceArn,omitempty"`

	// SourceIngestPort is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-sourceingestport
	SourceIngestPort cfz.Expression[string] `json:"SourceIngestPort,omitempty"`

	// SourceListenerAddress is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-sourcelisteneraddress
	SourceListenerAddress cfz.Expression[string] `json:"SourceListenerAddress,omitempty"`

	// SourceListenerPort is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-sourcelistenerport
	SourceListenerPort cfz.Expression[int32] `json:"SourceListenerPort,omitempty"`

	// StreamId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-streamid
	StreamId cfz.Expression[string] `json:"StreamId,omitempty"`

	// VpcInterfaceName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-vpcinterfacename
	VpcInterfaceName cfz.Expression[string] `json:"VpcInterfaceName,omitempty"`

	// WhitelistCidr is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-flow-source.html#cfn-mediaconnect-flow-source-whitelistcidr
	WhitelistCidr cfz.Expression[string] `json:"WhitelistCidr,omitempty"`
}

// New__AWS_MediaConnect_Flow_Source initializes a new AWS_MediaConnect_Flow_Source.
func New__AWS_MediaConnect_Flow_Source() AWS_MediaConnect_Flow_Source {
	return AWS_MediaConnect_Flow_Source{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaConnect_Flow_Source) GetType() string {
	return AWS_MediaConnect_Flow_Source__Type
}

// Set__Decryption updates property "Decryption".
func (t AWS_MediaConnect_Flow_Source) Set__Decryption(v cfz.Expression[AWS_MediaConnect_Flow_Encryption]) AWS_MediaConnect_Flow_Source {
	t.Decryption = v
	return t
}

// SetV__Decryption updates property "Decryption".
func (t AWS_MediaConnect_Flow_Source) SetV__Decryption(v AWS_MediaConnect_Flow_Encryption) AWS_MediaConnect_Flow_Source {
	t.Decryption = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t AWS_MediaConnect_Flow_Source) Set__Description(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t AWS_MediaConnect_Flow_Source) SetV__Description(v string) AWS_MediaConnect_Flow_Source {
	t.Description = cfz.V(v)
	return t
}

// Set__EntitlementArn updates property "EntitlementArn".
func (t AWS_MediaConnect_Flow_Source) Set__EntitlementArn(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.EntitlementArn = v
	return t
}

// SetV__EntitlementArn updates property "EntitlementArn".
func (t AWS_MediaConnect_Flow_Source) SetV__EntitlementArn(v string) AWS_MediaConnect_Flow_Source {
	t.EntitlementArn = cfz.V(v)
	return t
}

// Set__GatewayBridgeSource updates property "GatewayBridgeSource".
func (t AWS_MediaConnect_Flow_Source) Set__GatewayBridgeSource(v cfz.Expression[AWS_MediaConnect_Flow_GatewayBridgeSource]) AWS_MediaConnect_Flow_Source {
	t.GatewayBridgeSource = v
	return t
}

// SetV__GatewayBridgeSource updates property "GatewayBridgeSource".
func (t AWS_MediaConnect_Flow_Source) SetV__GatewayBridgeSource(v AWS_MediaConnect_Flow_GatewayBridgeSource) AWS_MediaConnect_Flow_Source {
	t.GatewayBridgeSource = cfz.V(v)
	return t
}

// Set__IngestIp updates property "IngestIp".
func (t AWS_MediaConnect_Flow_Source) Set__IngestIp(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.IngestIp = v
	return t
}

// SetV__IngestIp updates property "IngestIp".
func (t AWS_MediaConnect_Flow_Source) SetV__IngestIp(v string) AWS_MediaConnect_Flow_Source {
	t.IngestIp = cfz.V(v)
	return t
}

// Set__IngestPort updates property "IngestPort".
func (t AWS_MediaConnect_Flow_Source) Set__IngestPort(v cfz.Expression[int32]) AWS_MediaConnect_Flow_Source {
	t.IngestPort = v
	return t
}

// SetV__IngestPort updates property "IngestPort".
func (t AWS_MediaConnect_Flow_Source) SetV__IngestPort(v int32) AWS_MediaConnect_Flow_Source {
	t.IngestPort = cfz.V(v)
	return t
}

// Set__MaxBitrate updates property "MaxBitrate".
func (t AWS_MediaConnect_Flow_Source) Set__MaxBitrate(v cfz.Expression[int32]) AWS_MediaConnect_Flow_Source {
	t.MaxBitrate = v
	return t
}

// SetV__MaxBitrate updates property "MaxBitrate".
func (t AWS_MediaConnect_Flow_Source) SetV__MaxBitrate(v int32) AWS_MediaConnect_Flow_Source {
	t.MaxBitrate = cfz.V(v)
	return t
}

// Set__MaxLatency updates property "MaxLatency".
func (t AWS_MediaConnect_Flow_Source) Set__MaxLatency(v cfz.Expression[int32]) AWS_MediaConnect_Flow_Source {
	t.MaxLatency = v
	return t
}

// SetV__MaxLatency updates property "MaxLatency".
func (t AWS_MediaConnect_Flow_Source) SetV__MaxLatency(v int32) AWS_MediaConnect_Flow_Source {
	t.MaxLatency = cfz.V(v)
	return t
}

// Set__MaxSyncBuffer updates property "MaxSyncBuffer".
func (t AWS_MediaConnect_Flow_Source) Set__MaxSyncBuffer(v cfz.Expression[int32]) AWS_MediaConnect_Flow_Source {
	t.MaxSyncBuffer = v
	return t
}

// SetV__MaxSyncBuffer updates property "MaxSyncBuffer".
func (t AWS_MediaConnect_Flow_Source) SetV__MaxSyncBuffer(v int32) AWS_MediaConnect_Flow_Source {
	t.MaxSyncBuffer = cfz.V(v)
	return t
}

// Set__MediaStreamSourceConfigurations updates property "MediaStreamSourceConfigurations".
func (t AWS_MediaConnect_Flow_Source) Set__MediaStreamSourceConfigurations(v cfz.ExpressionSlice[AWS_MediaConnect_Flow_MediaStreamSourceConfiguration]) AWS_MediaConnect_Flow_Source {
	t.MediaStreamSourceConfigurations = v
	return t
}

// SetS__MediaStreamSourceConfigurations updates property "MediaStreamSourceConfigurations".
func (t AWS_MediaConnect_Flow_Source) SetS__MediaStreamSourceConfigurations(v ...cfz.Expression[AWS_MediaConnect_Flow_MediaStreamSourceConfiguration]) AWS_MediaConnect_Flow_Source {
	t.MediaStreamSourceConfigurations = cfz.S(v...)
	return t
}

// SetSV__MediaStreamSourceConfigurations updates property "MediaStreamSourceConfigurations".
func (t AWS_MediaConnect_Flow_Source) SetSV__MediaStreamSourceConfigurations(v ...AWS_MediaConnect_Flow_MediaStreamSourceConfiguration) AWS_MediaConnect_Flow_Source {
	t.MediaStreamSourceConfigurations = cfz.SV(v...)
	return t
}

// Set__MinLatency updates property "MinLatency".
func (t AWS_MediaConnect_Flow_Source) Set__MinLatency(v cfz.Expression[int32]) AWS_MediaConnect_Flow_Source {
	t.MinLatency = v
	return t
}

// SetV__MinLatency updates property "MinLatency".
func (t AWS_MediaConnect_Flow_Source) SetV__MinLatency(v int32) AWS_MediaConnect_Flow_Source {
	t.MinLatency = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t AWS_MediaConnect_Flow_Source) Set__Name(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t AWS_MediaConnect_Flow_Source) SetV__Name(v string) AWS_MediaConnect_Flow_Source {
	t.Name = cfz.V(v)
	return t
}

// Set__Protocol updates property "Protocol".
func (t AWS_MediaConnect_Flow_Source) Set__Protocol(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.Protocol = v
	return t
}

// SetV__Protocol updates property "Protocol".
func (t AWS_MediaConnect_Flow_Source) SetV__Protocol(v string) AWS_MediaConnect_Flow_Source {
	t.Protocol = cfz.V(v)
	return t
}

// Set__SenderControlPort updates property "SenderControlPort".
func (t AWS_MediaConnect_Flow_Source) Set__SenderControlPort(v cfz.Expression[int32]) AWS_MediaConnect_Flow_Source {
	t.SenderControlPort = v
	return t
}

// SetV__SenderControlPort updates property "SenderControlPort".
func (t AWS_MediaConnect_Flow_Source) SetV__SenderControlPort(v int32) AWS_MediaConnect_Flow_Source {
	t.SenderControlPort = cfz.V(v)
	return t
}

// Set__SenderIpAddress updates property "SenderIpAddress".
func (t AWS_MediaConnect_Flow_Source) Set__SenderIpAddress(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.SenderIpAddress = v
	return t
}

// SetV__SenderIpAddress updates property "SenderIpAddress".
func (t AWS_MediaConnect_Flow_Source) SetV__SenderIpAddress(v string) AWS_MediaConnect_Flow_Source {
	t.SenderIpAddress = cfz.V(v)
	return t
}

// Set__SourceArn updates property "SourceArn".
func (t AWS_MediaConnect_Flow_Source) Set__SourceArn(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.SourceArn = v
	return t
}

// SetV__SourceArn updates property "SourceArn".
func (t AWS_MediaConnect_Flow_Source) SetV__SourceArn(v string) AWS_MediaConnect_Flow_Source {
	t.SourceArn = cfz.V(v)
	return t
}

// Set__SourceIngestPort updates property "SourceIngestPort".
func (t AWS_MediaConnect_Flow_Source) Set__SourceIngestPort(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.SourceIngestPort = v
	return t
}

// SetV__SourceIngestPort updates property "SourceIngestPort".
func (t AWS_MediaConnect_Flow_Source) SetV__SourceIngestPort(v string) AWS_MediaConnect_Flow_Source {
	t.SourceIngestPort = cfz.V(v)
	return t
}

// Set__SourceListenerAddress updates property "SourceListenerAddress".
func (t AWS_MediaConnect_Flow_Source) Set__SourceListenerAddress(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.SourceListenerAddress = v
	return t
}

// SetV__SourceListenerAddress updates property "SourceListenerAddress".
func (t AWS_MediaConnect_Flow_Source) SetV__SourceListenerAddress(v string) AWS_MediaConnect_Flow_Source {
	t.SourceListenerAddress = cfz.V(v)
	return t
}

// Set__SourceListenerPort updates property "SourceListenerPort".
func (t AWS_MediaConnect_Flow_Source) Set__SourceListenerPort(v cfz.Expression[int32]) AWS_MediaConnect_Flow_Source {
	t.SourceListenerPort = v
	return t
}

// SetV__SourceListenerPort updates property "SourceListenerPort".
func (t AWS_MediaConnect_Flow_Source) SetV__SourceListenerPort(v int32) AWS_MediaConnect_Flow_Source {
	t.SourceListenerPort = cfz.V(v)
	return t
}

// Set__StreamId updates property "StreamId".
func (t AWS_MediaConnect_Flow_Source) Set__StreamId(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.StreamId = v
	return t
}

// SetV__StreamId updates property "StreamId".
func (t AWS_MediaConnect_Flow_Source) SetV__StreamId(v string) AWS_MediaConnect_Flow_Source {
	t.StreamId = cfz.V(v)
	return t
}

// Set__VpcInterfaceName updates property "VpcInterfaceName".
func (t AWS_MediaConnect_Flow_Source) Set__VpcInterfaceName(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.VpcInterfaceName = v
	return t
}

// SetV__VpcInterfaceName updates property "VpcInterfaceName".
func (t AWS_MediaConnect_Flow_Source) SetV__VpcInterfaceName(v string) AWS_MediaConnect_Flow_Source {
	t.VpcInterfaceName = cfz.V(v)
	return t
}

// Set__WhitelistCidr updates property "WhitelistCidr".
func (t AWS_MediaConnect_Flow_Source) Set__WhitelistCidr(v cfz.Expression[string]) AWS_MediaConnect_Flow_Source {
	t.WhitelistCidr = v
	return t
}

// SetV__WhitelistCidr updates property "WhitelistCidr".
func (t AWS_MediaConnect_Flow_Source) SetV__WhitelistCidr(v string) AWS_MediaConnect_Flow_Source {
	t.WhitelistCidr = cfz.V(v)
	return t
}
