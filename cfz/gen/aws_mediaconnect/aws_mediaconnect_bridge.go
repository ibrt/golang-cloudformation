// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediaconnect

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_MediaConnect_Bridge)(nil)
	_ cfz.Resource                   = (*AWS_MediaConnect_Bridge)(nil)
)

const (
	// AWS_MediaConnect_Bridge__Type is the CloudFormation type for AWS::MediaConnect::Bridge.
	AWS_MediaConnect_Bridge__Type = "AWS::MediaConnect::Bridge"
)

var (
	// AWS_MediaConnect_Bridge__AttributesMap reports all the CloudFormation attributes for AWS::MediaConnect::Bridge.
	AWS_MediaConnect_Bridge__AttributesMap = struct {
		BridgeArn   string
		BridgeState string
	}{
		BridgeArn:   "BridgeArn",
		BridgeState: "BridgeState",
	}

	// AWS_MediaConnect_Bridge__AttributesSlice reports all the CloudFormation attributes for AWS::MediaConnect::Bridge.
	AWS_MediaConnect_Bridge__AttributesSlice = []string{
		AWS_MediaConnect_Bridge__AttributesMap.BridgeArn,
		AWS_MediaConnect_Bridge__AttributesMap.BridgeState,
	}
)

var (
	// AWS_MediaConnect_Bridge__PropertiesMap reports all the CloudFormation properties for AWS::MediaConnect::Bridge.
	AWS_MediaConnect_Bridge__PropertiesMap = struct {
		EgressGatewayBridge  string
		IngressGatewayBridge string
		Name                 string
		Outputs              string
		PlacementArn         string
		SourceFailoverConfig string
		Sources              string
	}{
		EgressGatewayBridge:  "EgressGatewayBridge",
		IngressGatewayBridge: "IngressGatewayBridge",
		Name:                 "Name",
		Outputs:              "Outputs",
		PlacementArn:         "PlacementArn",
		SourceFailoverConfig: "SourceFailoverConfig",
		Sources:              "Sources",
	}

	// AWS_MediaConnect_Bridge__PropertiesSlice reports all the CloudFormation properties for AWS::MediaConnect::Bridge.
	AWS_MediaConnect_Bridge__PropertiesSlice = []string{
		AWS_MediaConnect_Bridge__PropertiesMap.EgressGatewayBridge,
		AWS_MediaConnect_Bridge__PropertiesMap.IngressGatewayBridge,
		AWS_MediaConnect_Bridge__PropertiesMap.Name,
		AWS_MediaConnect_Bridge__PropertiesMap.Outputs,
		AWS_MediaConnect_Bridge__PropertiesMap.PlacementArn,
		AWS_MediaConnect_Bridge__PropertiesMap.SourceFailoverConfig,
		AWS_MediaConnect_Bridge__PropertiesMap.Sources,
	}
)

// AWS_MediaConnect_Bridge is a binding for AWS::MediaConnect::Bridge.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html
type AWS_MediaConnect_Bridge struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// EgressGatewayBridge is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-egressgatewaybridge
	EgressGatewayBridge cfz.Expression[AWS_MediaConnect_Bridge_EgressGatewayBridge] `json:"EgressGatewayBridge,omitempty"`

	// IngressGatewayBridge is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-ingressgatewaybridge
	IngressGatewayBridge cfz.Expression[AWS_MediaConnect_Bridge_IngressGatewayBridge] `json:"IngressGatewayBridge,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Outputs is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-outputs
	Outputs cfz.ExpressionSlice[AWS_MediaConnect_Bridge_BridgeOutput] `json:"Outputs,omitempty"`

	// PlacementArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-placementarn
	PlacementArn cfz.Expression[string] `json:"PlacementArn,omitempty"`

	// SourceFailoverConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-sourcefailoverconfig
	SourceFailoverConfig cfz.Expression[AWS_MediaConnect_Bridge_FailoverConfig] `json:"SourceFailoverConfig,omitempty"`

	// Sources is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-bridge.html#cfn-mediaconnect-bridge-sources
	Sources cfz.ExpressionSlice[AWS_MediaConnect_Bridge_BridgeSource] `json:"Sources,omitempty"`
}

// New__AWS_MediaConnect_Bridge initializes a new *AWS_MediaConnect_Bridge.
func New__AWS_MediaConnect_Bridge(logicalName string) *AWS_MediaConnect_Bridge {
	return &AWS_MediaConnect_Bridge{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_MediaConnect_Bridge) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_MediaConnect_Bridge) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_MediaConnect_Bridge) GetType() string {
	return AWS_MediaConnect_Bridge__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_MediaConnect_Bridge) Set__LogicalName(v string) *AWS_MediaConnect_Bridge {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_MediaConnect_Bridge) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_MediaConnect_Bridge {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_MediaConnect_Bridge) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_MediaConnect_Bridge {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_MediaConnect_Bridge) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_MediaConnect_Bridge {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_MediaConnect_Bridge) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_MediaConnect_Bridge {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_MediaConnect_Bridge) Set__RequestedOutputs(v []cfz.Output) *AWS_MediaConnect_Bridge {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_MediaConnect_Bridge) Add__RequestedOutputs(v ...cfz.Output) *AWS_MediaConnect_Bridge {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__EgressGatewayBridge updates property "EgressGatewayBridge".
func (t *AWS_MediaConnect_Bridge) Set__EgressGatewayBridge(v cfz.Expression[AWS_MediaConnect_Bridge_EgressGatewayBridge]) *AWS_MediaConnect_Bridge {
	t.EgressGatewayBridge = v
	return t
}

// SetV__EgressGatewayBridge updates property "EgressGatewayBridge".
func (t *AWS_MediaConnect_Bridge) SetV__EgressGatewayBridge(v AWS_MediaConnect_Bridge_EgressGatewayBridge) *AWS_MediaConnect_Bridge {
	t.EgressGatewayBridge = cfz.V(v)
	return t
}

// Set__IngressGatewayBridge updates property "IngressGatewayBridge".
func (t *AWS_MediaConnect_Bridge) Set__IngressGatewayBridge(v cfz.Expression[AWS_MediaConnect_Bridge_IngressGatewayBridge]) *AWS_MediaConnect_Bridge {
	t.IngressGatewayBridge = v
	return t
}

// SetV__IngressGatewayBridge updates property "IngressGatewayBridge".
func (t *AWS_MediaConnect_Bridge) SetV__IngressGatewayBridge(v AWS_MediaConnect_Bridge_IngressGatewayBridge) *AWS_MediaConnect_Bridge {
	t.IngressGatewayBridge = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_MediaConnect_Bridge) Set__Name(v cfz.Expression[string]) *AWS_MediaConnect_Bridge {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_MediaConnect_Bridge) SetV__Name(v string) *AWS_MediaConnect_Bridge {
	t.Name = cfz.V(v)
	return t
}

// Set__Outputs updates property "Outputs".
func (t *AWS_MediaConnect_Bridge) Set__Outputs(v cfz.ExpressionSlice[AWS_MediaConnect_Bridge_BridgeOutput]) *AWS_MediaConnect_Bridge {
	t.Outputs = v
	return t
}

// SetS__Outputs updates property "Outputs".
func (t *AWS_MediaConnect_Bridge) SetS__Outputs(v ...cfz.Expression[AWS_MediaConnect_Bridge_BridgeOutput]) *AWS_MediaConnect_Bridge {
	t.Outputs = cfz.S(v...)
	return t
}

// SetSV__Outputs updates property "Outputs".
func (t *AWS_MediaConnect_Bridge) SetSV__Outputs(v ...AWS_MediaConnect_Bridge_BridgeOutput) *AWS_MediaConnect_Bridge {
	t.Outputs = cfz.SV(v...)
	return t
}

// Set__PlacementArn updates property "PlacementArn".
func (t *AWS_MediaConnect_Bridge) Set__PlacementArn(v cfz.Expression[string]) *AWS_MediaConnect_Bridge {
	t.PlacementArn = v
	return t
}

// SetV__PlacementArn updates property "PlacementArn".
func (t *AWS_MediaConnect_Bridge) SetV__PlacementArn(v string) *AWS_MediaConnect_Bridge {
	t.PlacementArn = cfz.V(v)
	return t
}

// Set__SourceFailoverConfig updates property "SourceFailoverConfig".
func (t *AWS_MediaConnect_Bridge) Set__SourceFailoverConfig(v cfz.Expression[AWS_MediaConnect_Bridge_FailoverConfig]) *AWS_MediaConnect_Bridge {
	t.SourceFailoverConfig = v
	return t
}

// SetV__SourceFailoverConfig updates property "SourceFailoverConfig".
func (t *AWS_MediaConnect_Bridge) SetV__SourceFailoverConfig(v AWS_MediaConnect_Bridge_FailoverConfig) *AWS_MediaConnect_Bridge {
	t.SourceFailoverConfig = cfz.V(v)
	return t
}

// Set__Sources updates property "Sources".
func (t *AWS_MediaConnect_Bridge) Set__Sources(v cfz.ExpressionSlice[AWS_MediaConnect_Bridge_BridgeSource]) *AWS_MediaConnect_Bridge {
	t.Sources = v
	return t
}

// SetS__Sources updates property "Sources".
func (t *AWS_MediaConnect_Bridge) SetS__Sources(v ...cfz.Expression[AWS_MediaConnect_Bridge_BridgeSource]) *AWS_MediaConnect_Bridge {
	t.Sources = cfz.S(v...)
	return t
}

// SetSV__Sources updates property "Sources".
func (t *AWS_MediaConnect_Bridge) SetSV__Sources(v ...AWS_MediaConnect_Bridge_BridgeSource) *AWS_MediaConnect_Bridge {
	t.Sources = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_MediaConnect_Bridge) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__BridgeArn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BridgeArn
func (t *AWS_MediaConnect_Bridge) GetAtt__BridgeArn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaConnect_Bridge__AttributesMap.BridgeArn))
}

// GetAtt__BridgeState returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: BridgeState
func (t *AWS_MediaConnect_Bridge) GetAtt__BridgeState() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaConnect_Bridge__AttributesMap.BridgeState))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_MediaConnect_Bridge) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BridgeArn returns a conventionally configured output for an attribute of this resource.
// Attribute: BridgeArn
func (t *AWS_MediaConnect_Bridge) GetConventionalOutputAtt__BridgeArn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBridgeArn", t.GetAtt__BridgeArn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__BridgeState returns a conventionally configured output for an attribute of this resource.
// Attribute: BridgeState
func (t *AWS_MediaConnect_Bridge) GetConventionalOutputAtt__BridgeState(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttBridgeState", t.GetAtt__BridgeState())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_MediaConnect_Bridge) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_MediaConnect_Bridge

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_MediaConnect_Bridge) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
