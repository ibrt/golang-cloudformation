// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediaconnect

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_MediaConnect_FlowVpcInterface)(nil)
	_ cfz.Resource                   = (*AWS_MediaConnect_FlowVpcInterface)(nil)
)

const (
	// AWS_MediaConnect_FlowVpcInterface__Type is the CloudFormation type for AWS::MediaConnect::FlowVpcInterface.
	AWS_MediaConnect_FlowVpcInterface__Type = "AWS::MediaConnect::FlowVpcInterface"
)

var (
	// AWS_MediaConnect_FlowVpcInterface__AttributesMap reports all the CloudFormation attributes for AWS::MediaConnect::FlowVpcInterface.
	AWS_MediaConnect_FlowVpcInterface__AttributesMap = struct {
		NetworkInterfaceIds string
	}{
		NetworkInterfaceIds: "NetworkInterfaceIds",
	}

	// AWS_MediaConnect_FlowVpcInterface__AttributesSlice reports all the CloudFormation attributes for AWS::MediaConnect::FlowVpcInterface.
	AWS_MediaConnect_FlowVpcInterface__AttributesSlice = []string{
		AWS_MediaConnect_FlowVpcInterface__AttributesMap.NetworkInterfaceIds,
	}
)

var (
	// AWS_MediaConnect_FlowVpcInterface__PropertiesMap reports all the CloudFormation properties for AWS::MediaConnect::FlowVpcInterface.
	AWS_MediaConnect_FlowVpcInterface__PropertiesMap = struct {
		FlowArn          string
		Name             string
		RoleArn          string
		SecurityGroupIds string
		SubnetId         string
	}{
		FlowArn:          "FlowArn",
		Name:             "Name",
		RoleArn:          "RoleArn",
		SecurityGroupIds: "SecurityGroupIds",
		SubnetId:         "SubnetId",
	}

	// AWS_MediaConnect_FlowVpcInterface__PropertiesSlice reports all the CloudFormation properties for AWS::MediaConnect::FlowVpcInterface.
	AWS_MediaConnect_FlowVpcInterface__PropertiesSlice = []string{
		AWS_MediaConnect_FlowVpcInterface__PropertiesMap.FlowArn,
		AWS_MediaConnect_FlowVpcInterface__PropertiesMap.Name,
		AWS_MediaConnect_FlowVpcInterface__PropertiesMap.RoleArn,
		AWS_MediaConnect_FlowVpcInterface__PropertiesMap.SecurityGroupIds,
		AWS_MediaConnect_FlowVpcInterface__PropertiesMap.SubnetId,
	}
)

// AWS_MediaConnect_FlowVpcInterface is a binding for AWS::MediaConnect::FlowVpcInterface.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html
type AWS_MediaConnect_FlowVpcInterface struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// FlowArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-flowarn
	FlowArn cfz.Expression[string] `json:"FlowArn,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// SecurityGroupIds is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-securitygroupids
	SecurityGroupIds cfz.ExpressionSlice[string] `json:"SecurityGroupIds,omitempty"`

	// SubnetId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mediaconnect-flowvpcinterface.html#cfn-mediaconnect-flowvpcinterface-subnetid
	SubnetId cfz.Expression[string] `json:"SubnetId,omitempty"`
}

// New__AWS_MediaConnect_FlowVpcInterface initializes a new *AWS_MediaConnect_FlowVpcInterface.
func New__AWS_MediaConnect_FlowVpcInterface(logicalName string) *AWS_MediaConnect_FlowVpcInterface {
	return &AWS_MediaConnect_FlowVpcInterface{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_MediaConnect_FlowVpcInterface) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_MediaConnect_FlowVpcInterface) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_MediaConnect_FlowVpcInterface) GetType() string {
	return AWS_MediaConnect_FlowVpcInterface__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__LogicalName(v string) *AWS_MediaConnect_FlowVpcInterface {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_MediaConnect_FlowVpcInterface {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_MediaConnect_FlowVpcInterface) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_MediaConnect_FlowVpcInterface {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_MediaConnect_FlowVpcInterface {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_MediaConnect_FlowVpcInterface {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__RequestedOutputs(v []cfz.Output) *AWS_MediaConnect_FlowVpcInterface {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_MediaConnect_FlowVpcInterface) Add__RequestedOutputs(v ...cfz.Output) *AWS_MediaConnect_FlowVpcInterface {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__FlowArn updates property "FlowArn".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__FlowArn(v cfz.Expression[string]) *AWS_MediaConnect_FlowVpcInterface {
	t.FlowArn = v
	return t
}

// SetV__FlowArn updates property "FlowArn".
func (t *AWS_MediaConnect_FlowVpcInterface) SetV__FlowArn(v string) *AWS_MediaConnect_FlowVpcInterface {
	t.FlowArn = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__Name(v cfz.Expression[string]) *AWS_MediaConnect_FlowVpcInterface {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_MediaConnect_FlowVpcInterface) SetV__Name(v string) *AWS_MediaConnect_FlowVpcInterface {
	t.Name = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__RoleArn(v cfz.Expression[string]) *AWS_MediaConnect_FlowVpcInterface {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_MediaConnect_FlowVpcInterface) SetV__RoleArn(v string) *AWS_MediaConnect_FlowVpcInterface {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__SecurityGroupIds(v cfz.ExpressionSlice[string]) *AWS_MediaConnect_FlowVpcInterface {
	t.SecurityGroupIds = v
	return t
}

// SetS__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_MediaConnect_FlowVpcInterface) SetS__SecurityGroupIds(v ...cfz.Expression[string]) *AWS_MediaConnect_FlowVpcInterface {
	t.SecurityGroupIds = cfz.S(v...)
	return t
}

// SetSV__SecurityGroupIds updates property "SecurityGroupIds".
func (t *AWS_MediaConnect_FlowVpcInterface) SetSV__SecurityGroupIds(v ...string) *AWS_MediaConnect_FlowVpcInterface {
	t.SecurityGroupIds = cfz.SV(v...)
	return t
}

// Set__SubnetId updates property "SubnetId".
func (t *AWS_MediaConnect_FlowVpcInterface) Set__SubnetId(v cfz.Expression[string]) *AWS_MediaConnect_FlowVpcInterface {
	t.SubnetId = v
	return t
}

// SetV__SubnetId updates property "SubnetId".
func (t *AWS_MediaConnect_FlowVpcInterface) SetV__SubnetId(v string) *AWS_MediaConnect_FlowVpcInterface {
	t.SubnetId = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_MediaConnect_FlowVpcInterface) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAttSlice__NetworkInterfaceIds returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: NetworkInterfaceIds
func (t *AWS_MediaConnect_FlowVpcInterface) GetAttSlice__NetworkInterfaceIds() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_MediaConnect_FlowVpcInterface__AttributesMap.NetworkInterfaceIds))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_MediaConnect_FlowVpcInterface) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__NetworkInterfaceIds returns a conventionally configured output for an attribute of this resource.
// Attribute: NetworkInterfaceIds
func (t *AWS_MediaConnect_FlowVpcInterface) GetConventionalOutputAtt__NetworkInterfaceIds(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttNetworkInterfaceIds", t.GetAttSlice__NetworkInterfaceIds())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_MediaConnect_FlowVpcInterface) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_MediaConnect_FlowVpcInterface

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_MediaConnect_FlowVpcInterface) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
