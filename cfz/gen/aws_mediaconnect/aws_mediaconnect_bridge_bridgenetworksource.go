// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_mediaconnect

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_MediaConnect_Bridge_BridgeNetworkSource__Type is the CloudFormation type for AWS::MediaConnect::Bridge.BridgeNetworkSource.
	AWS_MediaConnect_Bridge_BridgeNetworkSource__Type = "AWS::MediaConnect::Bridge.BridgeNetworkSource"
)

var (
	// AWS_MediaConnect_Bridge_BridgeNetworkSource__PropertiesMap reports all the CloudFormation properties for AWS::MediaConnect::Bridge.BridgeNetworkSource.
	AWS_MediaConnect_Bridge_BridgeNetworkSource__PropertiesMap = struct {
		MulticastIp string
		Name        string
		NetworkName string
		Port        string
		Protocol    string
	}{
		MulticastIp: "MulticastIp",
		Name:        "Name",
		NetworkName: "NetworkName",
		Port:        "Port",
		Protocol:    "Protocol",
	}

	// AWS_MediaConnect_Bridge_BridgeNetworkSource__PropertiesSlice reports all the CloudFormation properties for AWS::MediaConnect::Bridge.BridgeNetworkSource.
	AWS_MediaConnect_Bridge_BridgeNetworkSource__PropertiesSlice = []string{
		AWS_MediaConnect_Bridge_BridgeNetworkSource__PropertiesMap.MulticastIp,
		AWS_MediaConnect_Bridge_BridgeNetworkSource__PropertiesMap.Name,
		AWS_MediaConnect_Bridge_BridgeNetworkSource__PropertiesMap.NetworkName,
		AWS_MediaConnect_Bridge_BridgeNetworkSource__PropertiesMap.Port,
		AWS_MediaConnect_Bridge_BridgeNetworkSource__PropertiesMap.Protocol,
	}
)

// AWS_MediaConnect_Bridge_BridgeNetworkSource is a binding for AWS::MediaConnect::Bridge.BridgeNetworkSource.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-bridge-bridgenetworksource.html
type AWS_MediaConnect_Bridge_BridgeNetworkSource struct {
	// MulticastIp is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-bridge-bridgenetworksource.html#cfn-mediaconnect-bridge-bridgenetworksource-multicastip
	MulticastIp cfz.Expression[string] `json:"MulticastIp,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-bridge-bridgenetworksource.html#cfn-mediaconnect-bridge-bridgenetworksource-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// NetworkName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-bridge-bridgenetworksource.html#cfn-mediaconnect-bridge-bridgenetworksource-networkname
	NetworkName cfz.Expression[string] `json:"NetworkName,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-bridge-bridgenetworksource.html#cfn-mediaconnect-bridge-bridgenetworksource-port
	Port cfz.Expression[int32] `json:"Port,omitempty"`

	// Protocol is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediaconnect-bridge-bridgenetworksource.html#cfn-mediaconnect-bridge-bridgenetworksource-protocol
	Protocol cfz.Expression[string] `json:"Protocol,omitempty"`
}

// New__AWS_MediaConnect_Bridge_BridgeNetworkSource initializes a new AWS_MediaConnect_Bridge_BridgeNetworkSource.
func New__AWS_MediaConnect_Bridge_BridgeNetworkSource() AWS_MediaConnect_Bridge_BridgeNetworkSource {
	return AWS_MediaConnect_Bridge_BridgeNetworkSource{}
}

// GetType returns the CloudFormation type.
func (AWS_MediaConnect_Bridge_BridgeNetworkSource) GetType() string {
	return AWS_MediaConnect_Bridge_BridgeNetworkSource__Type
}

// Set__MulticastIp updates property "MulticastIp".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) Set__MulticastIp(v cfz.Expression[string]) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.MulticastIp = v
	return t
}

// SetV__MulticastIp updates property "MulticastIp".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) SetV__MulticastIp(v string) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.MulticastIp = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) Set__Name(v cfz.Expression[string]) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) SetV__Name(v string) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.Name = cfz.V(v)
	return t
}

// Set__NetworkName updates property "NetworkName".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) Set__NetworkName(v cfz.Expression[string]) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.NetworkName = v
	return t
}

// SetV__NetworkName updates property "NetworkName".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) SetV__NetworkName(v string) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.NetworkName = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) Set__Port(v cfz.Expression[int32]) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) SetV__Port(v int32) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.Port = cfz.V(v)
	return t
}

// Set__Protocol updates property "Protocol".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) Set__Protocol(v cfz.Expression[string]) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.Protocol = v
	return t
}

// SetV__Protocol updates property "Protocol".
func (t AWS_MediaConnect_Bridge_BridgeNetworkSource) SetV__Protocol(v string) AWS_MediaConnect_Bridge_BridgeNetworkSource {
	t.Protocol = cfz.V(v)
	return t
}
