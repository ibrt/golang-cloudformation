// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_vpclattice

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_VpcLattice_Rule_PathMatch__Type is the CloudFormation type for AWS::VpcLattice::Rule.PathMatch.
	AWS_VpcLattice_Rule_PathMatch__Type = "AWS::VpcLattice::Rule.PathMatch"
)

var (
	// AWS_VpcLattice_Rule_PathMatch__PropertiesMap reports all the CloudFormation properties for AWS::VpcLattice::Rule.PathMatch.
	AWS_VpcLattice_Rule_PathMatch__PropertiesMap = struct {
		CaseSensitive string
		Match         string
	}{
		CaseSensitive: "CaseSensitive",
		Match:         "Match",
	}

	// AWS_VpcLattice_Rule_PathMatch__PropertiesSlice reports all the CloudFormation properties for AWS::VpcLattice::Rule.PathMatch.
	AWS_VpcLattice_Rule_PathMatch__PropertiesSlice = []string{
		AWS_VpcLattice_Rule_PathMatch__PropertiesMap.CaseSensitive,
		AWS_VpcLattice_Rule_PathMatch__PropertiesMap.Match,
	}
)

// AWS_VpcLattice_Rule_PathMatch is a binding for AWS::VpcLattice::Rule.PathMatch.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-rule-pathmatch.html
type AWS_VpcLattice_Rule_PathMatch struct {
	// CaseSensitive is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-rule-pathmatch.html#cfn-vpclattice-rule-pathmatch-casesensitive
	CaseSensitive cfz.Expression[bool] `json:"CaseSensitive,omitempty"`

	// Match is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-rule-pathmatch.html#cfn-vpclattice-rule-pathmatch-match
	Match cfz.Expression[AWS_VpcLattice_Rule_PathMatchType] `json:"Match,omitempty"`
}

// New__AWS_VpcLattice_Rule_PathMatch initializes a new AWS_VpcLattice_Rule_PathMatch.
func New__AWS_VpcLattice_Rule_PathMatch() AWS_VpcLattice_Rule_PathMatch {
	return AWS_VpcLattice_Rule_PathMatch{}
}

// GetType returns the CloudFormation type.
func (AWS_VpcLattice_Rule_PathMatch) GetType() string {
	return AWS_VpcLattice_Rule_PathMatch__Type
}

// Set__CaseSensitive updates property "CaseSensitive".
func (t AWS_VpcLattice_Rule_PathMatch) Set__CaseSensitive(v cfz.Expression[bool]) AWS_VpcLattice_Rule_PathMatch {
	t.CaseSensitive = v
	return t
}

// SetV__CaseSensitive updates property "CaseSensitive".
func (t AWS_VpcLattice_Rule_PathMatch) SetV__CaseSensitive(v bool) AWS_VpcLattice_Rule_PathMatch {
	t.CaseSensitive = cfz.V(v)
	return t
}

// Set__Match updates property "Match".
func (t AWS_VpcLattice_Rule_PathMatch) Set__Match(v cfz.Expression[AWS_VpcLattice_Rule_PathMatchType]) AWS_VpcLattice_Rule_PathMatch {
	t.Match = v
	return t
}

// SetV__Match updates property "Match".
func (t AWS_VpcLattice_Rule_PathMatch) SetV__Match(v AWS_VpcLattice_Rule_PathMatchType) AWS_VpcLattice_Rule_PathMatch {
	t.Match = cfz.V(v)
	return t
}
