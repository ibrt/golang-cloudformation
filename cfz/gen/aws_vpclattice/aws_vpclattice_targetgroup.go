// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_vpclattice

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_VpcLattice_TargetGroup)(nil)
	_ cfz.Resource                   = (*AWS_VpcLattice_TargetGroup)(nil)
)

const (
	// AWS_VpcLattice_TargetGroup__Type is the CloudFormation type for AWS::VpcLattice::TargetGroup.
	AWS_VpcLattice_TargetGroup__Type = "AWS::VpcLattice::TargetGroup"
)

var (
	// AWS_VpcLattice_TargetGroup__AttributesMap reports all the CloudFormation attributes for AWS::VpcLattice::TargetGroup.
	AWS_VpcLattice_TargetGroup__AttributesMap = struct {
		Arn           string
		CreatedAt     string
		Id            string
		LastUpdatedAt string
		Status        string
	}{
		Arn:           "Arn",
		CreatedAt:     "CreatedAt",
		Id:            "Id",
		LastUpdatedAt: "LastUpdatedAt",
		Status:        "Status",
	}

	// AWS_VpcLattice_TargetGroup__AttributesSlice reports all the CloudFormation attributes for AWS::VpcLattice::TargetGroup.
	AWS_VpcLattice_TargetGroup__AttributesSlice = []string{
		AWS_VpcLattice_TargetGroup__AttributesMap.Arn,
		AWS_VpcLattice_TargetGroup__AttributesMap.CreatedAt,
		AWS_VpcLattice_TargetGroup__AttributesMap.Id,
		AWS_VpcLattice_TargetGroup__AttributesMap.LastUpdatedAt,
		AWS_VpcLattice_TargetGroup__AttributesMap.Status,
	}
)

var (
	// AWS_VpcLattice_TargetGroup__PropertiesMap reports all the CloudFormation properties for AWS::VpcLattice::TargetGroup.
	AWS_VpcLattice_TargetGroup__PropertiesMap = struct {
		Config  string
		Name    string
		Tags    string
		Targets string
		Type    string
	}{
		Config:  "Config",
		Name:    "Name",
		Tags:    "Tags",
		Targets: "Targets",
		Type:    "Type",
	}

	// AWS_VpcLattice_TargetGroup__PropertiesSlice reports all the CloudFormation properties for AWS::VpcLattice::TargetGroup.
	AWS_VpcLattice_TargetGroup__PropertiesSlice = []string{
		AWS_VpcLattice_TargetGroup__PropertiesMap.Config,
		AWS_VpcLattice_TargetGroup__PropertiesMap.Name,
		AWS_VpcLattice_TargetGroup__PropertiesMap.Tags,
		AWS_VpcLattice_TargetGroup__PropertiesMap.Targets,
		AWS_VpcLattice_TargetGroup__PropertiesMap.Type,
	}
)

// AWS_VpcLattice_TargetGroup is a binding for AWS::VpcLattice::TargetGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html
type AWS_VpcLattice_TargetGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Config is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-config
	Config cfz.Expression[AWS_VpcLattice_TargetGroup_TargetGroupConfig] `json:"Config,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Targets is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-targets
	Targets cfz.ExpressionSlice[AWS_VpcLattice_TargetGroup_Target] `json:"Targets,omitempty"`

	// Type is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-vpclattice-targetgroup.html#cfn-vpclattice-targetgroup-type
	Type cfz.Expression[string] `json:"Type,omitempty"`
}

// New__AWS_VpcLattice_TargetGroup initializes a new *AWS_VpcLattice_TargetGroup.
func New__AWS_VpcLattice_TargetGroup(logicalName string) *AWS_VpcLattice_TargetGroup {
	return &AWS_VpcLattice_TargetGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_VpcLattice_TargetGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_VpcLattice_TargetGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_VpcLattice_TargetGroup) GetType() string {
	return AWS_VpcLattice_TargetGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_VpcLattice_TargetGroup) Set__LogicalName(v string) *AWS_VpcLattice_TargetGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_VpcLattice_TargetGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_VpcLattice_TargetGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_VpcLattice_TargetGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_VpcLattice_TargetGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_VpcLattice_TargetGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_VpcLattice_TargetGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_VpcLattice_TargetGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_VpcLattice_TargetGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_VpcLattice_TargetGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_VpcLattice_TargetGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_VpcLattice_TargetGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_VpcLattice_TargetGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Config updates property "Config".
func (t *AWS_VpcLattice_TargetGroup) Set__Config(v cfz.Expression[AWS_VpcLattice_TargetGroup_TargetGroupConfig]) *AWS_VpcLattice_TargetGroup {
	t.Config = v
	return t
}

// SetV__Config updates property "Config".
func (t *AWS_VpcLattice_TargetGroup) SetV__Config(v AWS_VpcLattice_TargetGroup_TargetGroupConfig) *AWS_VpcLattice_TargetGroup {
	t.Config = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_VpcLattice_TargetGroup) Set__Name(v cfz.Expression[string]) *AWS_VpcLattice_TargetGroup {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_VpcLattice_TargetGroup) SetV__Name(v string) *AWS_VpcLattice_TargetGroup {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_VpcLattice_TargetGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_VpcLattice_TargetGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_VpcLattice_TargetGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_VpcLattice_TargetGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_VpcLattice_TargetGroup) SetSV__Tags(v ...cfz.Tag) *AWS_VpcLattice_TargetGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Targets updates property "Targets".
func (t *AWS_VpcLattice_TargetGroup) Set__Targets(v cfz.ExpressionSlice[AWS_VpcLattice_TargetGroup_Target]) *AWS_VpcLattice_TargetGroup {
	t.Targets = v
	return t
}

// SetS__Targets updates property "Targets".
func (t *AWS_VpcLattice_TargetGroup) SetS__Targets(v ...cfz.Expression[AWS_VpcLattice_TargetGroup_Target]) *AWS_VpcLattice_TargetGroup {
	t.Targets = cfz.S(v...)
	return t
}

// SetSV__Targets updates property "Targets".
func (t *AWS_VpcLattice_TargetGroup) SetSV__Targets(v ...AWS_VpcLattice_TargetGroup_Target) *AWS_VpcLattice_TargetGroup {
	t.Targets = cfz.SV(v...)
	return t
}

// Set__Type updates property "Type".
func (t *AWS_VpcLattice_TargetGroup) Set__Type(v cfz.Expression[string]) *AWS_VpcLattice_TargetGroup {
	t.Type = v
	return t
}

// SetV__Type updates property "Type".
func (t *AWS_VpcLattice_TargetGroup) SetV__Type(v string) *AWS_VpcLattice_TargetGroup {
	t.Type = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_VpcLattice_TargetGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_VpcLattice_TargetGroup) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_VpcLattice_TargetGroup__AttributesMap.Arn))
}

// GetAtt__CreatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: CreatedAt
func (t *AWS_VpcLattice_TargetGroup) GetAtt__CreatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_VpcLattice_TargetGroup__AttributesMap.CreatedAt))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_VpcLattice_TargetGroup) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_VpcLattice_TargetGroup__AttributesMap.Id))
}

// GetAtt__LastUpdatedAt returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: LastUpdatedAt
func (t *AWS_VpcLattice_TargetGroup) GetAtt__LastUpdatedAt() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_VpcLattice_TargetGroup__AttributesMap.LastUpdatedAt))
}

// GetAtt__Status returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Status
func (t *AWS_VpcLattice_TargetGroup) GetAtt__Status() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_VpcLattice_TargetGroup__AttributesMap.Status))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_VpcLattice_TargetGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_VpcLattice_TargetGroup) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__CreatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: CreatedAt
func (t *AWS_VpcLattice_TargetGroup) GetConventionalOutputAtt__CreatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttCreatedAt", t.GetAtt__CreatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_VpcLattice_TargetGroup) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__LastUpdatedAt returns a conventionally configured output for an attribute of this resource.
// Attribute: LastUpdatedAt
func (t *AWS_VpcLattice_TargetGroup) GetConventionalOutputAtt__LastUpdatedAt(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttLastUpdatedAt", t.GetAtt__LastUpdatedAt())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Status returns a conventionally configured output for an attribute of this resource.
// Attribute: Status
func (t *AWS_VpcLattice_TargetGroup) GetConventionalOutputAtt__Status(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttStatus", t.GetAtt__Status())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_VpcLattice_TargetGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_VpcLattice_TargetGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_VpcLattice_TargetGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
