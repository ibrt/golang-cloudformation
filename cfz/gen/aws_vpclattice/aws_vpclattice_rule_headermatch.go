// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_vpclattice

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_VpcLattice_Rule_HeaderMatch__Type is the CloudFormation type for AWS::VpcLattice::Rule.HeaderMatch.
	AWS_VpcLattice_Rule_HeaderMatch__Type = "AWS::VpcLattice::Rule.HeaderMatch"
)

var (
	// AWS_VpcLattice_Rule_HeaderMatch__PropertiesMap reports all the CloudFormation properties for AWS::VpcLattice::Rule.HeaderMatch.
	AWS_VpcLattice_Rule_HeaderMatch__PropertiesMap = struct {
		CaseSensitive string
		Match         string
		Name          string
	}{
		CaseSensitive: "CaseSensitive",
		Match:         "Match",
		Name:          "Name",
	}

	// AWS_VpcLattice_Rule_HeaderMatch__PropertiesSlice reports all the CloudFormation properties for AWS::VpcLattice::Rule.HeaderMatch.
	AWS_VpcLattice_Rule_HeaderMatch__PropertiesSlice = []string{
		AWS_VpcLattice_Rule_HeaderMatch__PropertiesMap.CaseSensitive,
		AWS_VpcLattice_Rule_HeaderMatch__PropertiesMap.Match,
		AWS_VpcLattice_Rule_HeaderMatch__PropertiesMap.Name,
	}
)

// AWS_VpcLattice_Rule_HeaderMatch is a binding for AWS::VpcLattice::Rule.HeaderMatch.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-rule-headermatch.html
type AWS_VpcLattice_Rule_HeaderMatch struct {
	// CaseSensitive is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-rule-headermatch.html#cfn-vpclattice-rule-headermatch-casesensitive
	CaseSensitive cfz.Expression[bool] `json:"CaseSensitive,omitempty"`

	// Match is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-rule-headermatch.html#cfn-vpclattice-rule-headermatch-match
	Match cfz.Expression[AWS_VpcLattice_Rule_HeaderMatchType] `json:"Match,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-rule-headermatch.html#cfn-vpclattice-rule-headermatch-name
	Name cfz.Expression[string] `json:"Name,omitempty"`
}

// New__AWS_VpcLattice_Rule_HeaderMatch initializes a new AWS_VpcLattice_Rule_HeaderMatch.
func New__AWS_VpcLattice_Rule_HeaderMatch() AWS_VpcLattice_Rule_HeaderMatch {
	return AWS_VpcLattice_Rule_HeaderMatch{}
}

// GetType returns the CloudFormation type.
func (AWS_VpcLattice_Rule_HeaderMatch) GetType() string {
	return AWS_VpcLattice_Rule_HeaderMatch__Type
}

// Set__CaseSensitive updates property "CaseSensitive".
func (t AWS_VpcLattice_Rule_HeaderMatch) Set__CaseSensitive(v cfz.Expression[bool]) AWS_VpcLattice_Rule_HeaderMatch {
	t.CaseSensitive = v
	return t
}

// SetV__CaseSensitive updates property "CaseSensitive".
func (t AWS_VpcLattice_Rule_HeaderMatch) SetV__CaseSensitive(v bool) AWS_VpcLattice_Rule_HeaderMatch {
	t.CaseSensitive = cfz.V(v)
	return t
}

// Set__Match updates property "Match".
func (t AWS_VpcLattice_Rule_HeaderMatch) Set__Match(v cfz.Expression[AWS_VpcLattice_Rule_HeaderMatchType]) AWS_VpcLattice_Rule_HeaderMatch {
	t.Match = v
	return t
}

// SetV__Match updates property "Match".
func (t AWS_VpcLattice_Rule_HeaderMatch) SetV__Match(v AWS_VpcLattice_Rule_HeaderMatchType) AWS_VpcLattice_Rule_HeaderMatch {
	t.Match = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t AWS_VpcLattice_Rule_HeaderMatch) Set__Name(v cfz.Expression[string]) AWS_VpcLattice_Rule_HeaderMatch {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t AWS_VpcLattice_Rule_HeaderMatch) SetV__Name(v string) AWS_VpcLattice_Rule_HeaderMatch {
	t.Name = cfz.V(v)
	return t
}
