// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_vpclattice

import (
	"github.com/ibrt/golang-cloudformation/cfz"
)

const (
	// AWS_VpcLattice_TargetGroup_TargetGroupConfig__Type is the CloudFormation type for AWS::VpcLattice::TargetGroup.TargetGroupConfig.
	AWS_VpcLattice_TargetGroup_TargetGroupConfig__Type = "AWS::VpcLattice::TargetGroup.TargetGroupConfig"
)

var (
	// AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesMap reports all the CloudFormation properties for AWS::VpcLattice::TargetGroup.TargetGroupConfig.
	AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesMap = struct {
		HealthCheck                 string
		IpAddressType               string
		LambdaEventStructureVersion string
		Port                        string
		Protocol                    string
		ProtocolVersion             string
		VpcIdentifier               string
	}{
		HealthCheck:                 "HealthCheck",
		IpAddressType:               "IpAddressType",
		LambdaEventStructureVersion: "LambdaEventStructureVersion",
		Port:                        "Port",
		Protocol:                    "Protocol",
		ProtocolVersion:             "ProtocolVersion",
		VpcIdentifier:               "VpcIdentifier",
	}

	// AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesSlice reports all the CloudFormation properties for AWS::VpcLattice::TargetGroup.TargetGroupConfig.
	AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesSlice = []string{
		AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesMap.HealthCheck,
		AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesMap.IpAddressType,
		AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesMap.LambdaEventStructureVersion,
		AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesMap.Port,
		AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesMap.Protocol,
		AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesMap.ProtocolVersion,
		AWS_VpcLattice_TargetGroup_TargetGroupConfig__PropertiesMap.VpcIdentifier,
	}
)

// AWS_VpcLattice_TargetGroup_TargetGroupConfig is a binding for AWS::VpcLattice::TargetGroup.TargetGroupConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-targetgroup-targetgroupconfig.html
type AWS_VpcLattice_TargetGroup_TargetGroupConfig struct {
	// HealthCheck is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-targetgroup-targetgroupconfig.html#cfn-vpclattice-targetgroup-targetgroupconfig-healthcheck
	HealthCheck cfz.Expression[AWS_VpcLattice_TargetGroup_HealthCheckConfig] `json:"HealthCheck,omitempty"`

	// IpAddressType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-targetgroup-targetgroupconfig.html#cfn-vpclattice-targetgroup-targetgroupconfig-ipaddresstype
	IpAddressType cfz.Expression[string] `json:"IpAddressType,omitempty"`

	// LambdaEventStructureVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-targetgroup-targetgroupconfig.html#cfn-vpclattice-targetgroup-targetgroupconfig-lambdaeventstructureversion
	LambdaEventStructureVersion cfz.Expression[string] `json:"LambdaEventStructureVersion,omitempty"`

	// Port is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-targetgroup-targetgroupconfig.html#cfn-vpclattice-targetgroup-targetgroupconfig-port
	Port cfz.Expression[int32] `json:"Port,omitempty"`

	// Protocol is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-targetgroup-targetgroupconfig.html#cfn-vpclattice-targetgroup-targetgroupconfig-protocol
	Protocol cfz.Expression[string] `json:"Protocol,omitempty"`

	// ProtocolVersion is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-targetgroup-targetgroupconfig.html#cfn-vpclattice-targetgroup-targetgroupconfig-protocolversion
	ProtocolVersion cfz.Expression[string] `json:"ProtocolVersion,omitempty"`

	// VpcIdentifier is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-vpclattice-targetgroup-targetgroupconfig.html#cfn-vpclattice-targetgroup-targetgroupconfig-vpcidentifier
	VpcIdentifier cfz.Expression[string] `json:"VpcIdentifier,omitempty"`
}

// New__AWS_VpcLattice_TargetGroup_TargetGroupConfig initializes a new AWS_VpcLattice_TargetGroup_TargetGroupConfig.
func New__AWS_VpcLattice_TargetGroup_TargetGroupConfig() AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	return AWS_VpcLattice_TargetGroup_TargetGroupConfig{}
}

// GetType returns the CloudFormation type.
func (AWS_VpcLattice_TargetGroup_TargetGroupConfig) GetType() string {
	return AWS_VpcLattice_TargetGroup_TargetGroupConfig__Type
}

// Set__HealthCheck updates property "HealthCheck".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) Set__HealthCheck(v cfz.Expression[AWS_VpcLattice_TargetGroup_HealthCheckConfig]) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.HealthCheck = v
	return t
}

// SetV__HealthCheck updates property "HealthCheck".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) SetV__HealthCheck(v AWS_VpcLattice_TargetGroup_HealthCheckConfig) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.HealthCheck = cfz.V(v)
	return t
}

// Set__IpAddressType updates property "IpAddressType".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) Set__IpAddressType(v cfz.Expression[string]) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.IpAddressType = v
	return t
}

// SetV__IpAddressType updates property "IpAddressType".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) SetV__IpAddressType(v string) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.IpAddressType = cfz.V(v)
	return t
}

// Set__LambdaEventStructureVersion updates property "LambdaEventStructureVersion".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) Set__LambdaEventStructureVersion(v cfz.Expression[string]) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.LambdaEventStructureVersion = v
	return t
}

// SetV__LambdaEventStructureVersion updates property "LambdaEventStructureVersion".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) SetV__LambdaEventStructureVersion(v string) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.LambdaEventStructureVersion = cfz.V(v)
	return t
}

// Set__Port updates property "Port".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) Set__Port(v cfz.Expression[int32]) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.Port = v
	return t
}

// SetV__Port updates property "Port".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) SetV__Port(v int32) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.Port = cfz.V(v)
	return t
}

// Set__Protocol updates property "Protocol".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) Set__Protocol(v cfz.Expression[string]) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.Protocol = v
	return t
}

// SetV__Protocol updates property "Protocol".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) SetV__Protocol(v string) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.Protocol = cfz.V(v)
	return t
}

// Set__ProtocolVersion updates property "ProtocolVersion".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) Set__ProtocolVersion(v cfz.Expression[string]) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.ProtocolVersion = v
	return t
}

// SetV__ProtocolVersion updates property "ProtocolVersion".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) SetV__ProtocolVersion(v string) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.ProtocolVersion = cfz.V(v)
	return t
}

// Set__VpcIdentifier updates property "VpcIdentifier".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) Set__VpcIdentifier(v cfz.Expression[string]) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.VpcIdentifier = v
	return t
}

// SetV__VpcIdentifier updates property "VpcIdentifier".
func (t AWS_VpcLattice_TargetGroup_TargetGroupConfig) SetV__VpcIdentifier(v string) AWS_VpcLattice_TargetGroup_TargetGroupConfig {
	t.VpcIdentifier = cfz.V(v)
	return t
}
