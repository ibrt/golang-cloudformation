// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_transfer

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Transfer_Server)(nil)
	_ cfz.Resource                   = (*AWS_Transfer_Server)(nil)
)

const (
	// AWS_Transfer_Server__Type is the CloudFormation type for AWS::Transfer::Server.
	AWS_Transfer_Server__Type = "AWS::Transfer::Server"
)

var (
	// AWS_Transfer_Server__AttributesMap reports all the CloudFormation attributes for AWS::Transfer::Server.
	AWS_Transfer_Server__AttributesMap = struct {
		Arn                                string
		As2ServiceManagedEgressIpAddresses string
		ServerId                           string
	}{
		Arn:                                "Arn",
		As2ServiceManagedEgressIpAddresses: "As2ServiceManagedEgressIpAddresses",
		ServerId:                           "ServerId",
	}

	// AWS_Transfer_Server__AttributesSlice reports all the CloudFormation attributes for AWS::Transfer::Server.
	AWS_Transfer_Server__AttributesSlice = []string{
		AWS_Transfer_Server__AttributesMap.Arn,
		AWS_Transfer_Server__AttributesMap.As2ServiceManagedEgressIpAddresses,
		AWS_Transfer_Server__AttributesMap.ServerId,
	}
)

var (
	// AWS_Transfer_Server__PropertiesMap reports all the CloudFormation properties for AWS::Transfer::Server.
	AWS_Transfer_Server__PropertiesMap = struct {
		Certificate                   string
		Domain                        string
		EndpointDetails               string
		EndpointType                  string
		IdentityProviderDetails       string
		IdentityProviderType          string
		LoggingRole                   string
		PostAuthenticationLoginBanner string
		PreAuthenticationLoginBanner  string
		ProtocolDetails               string
		Protocols                     string
		S3StorageOptions              string
		SecurityPolicyName            string
		StructuredLogDestinations     string
		Tags                          string
		WorkflowDetails               string
	}{
		Certificate:                   "Certificate",
		Domain:                        "Domain",
		EndpointDetails:               "EndpointDetails",
		EndpointType:                  "EndpointType",
		IdentityProviderDetails:       "IdentityProviderDetails",
		IdentityProviderType:          "IdentityProviderType",
		LoggingRole:                   "LoggingRole",
		PostAuthenticationLoginBanner: "PostAuthenticationLoginBanner",
		PreAuthenticationLoginBanner:  "PreAuthenticationLoginBanner",
		ProtocolDetails:               "ProtocolDetails",
		Protocols:                     "Protocols",
		S3StorageOptions:              "S3StorageOptions",
		SecurityPolicyName:            "SecurityPolicyName",
		StructuredLogDestinations:     "StructuredLogDestinations",
		Tags:                          "Tags",
		WorkflowDetails:               "WorkflowDetails",
	}

	// AWS_Transfer_Server__PropertiesSlice reports all the CloudFormation properties for AWS::Transfer::Server.
	AWS_Transfer_Server__PropertiesSlice = []string{
		AWS_Transfer_Server__PropertiesMap.Certificate,
		AWS_Transfer_Server__PropertiesMap.Domain,
		AWS_Transfer_Server__PropertiesMap.EndpointDetails,
		AWS_Transfer_Server__PropertiesMap.EndpointType,
		AWS_Transfer_Server__PropertiesMap.IdentityProviderDetails,
		AWS_Transfer_Server__PropertiesMap.IdentityProviderType,
		AWS_Transfer_Server__PropertiesMap.LoggingRole,
		AWS_Transfer_Server__PropertiesMap.PostAuthenticationLoginBanner,
		AWS_Transfer_Server__PropertiesMap.PreAuthenticationLoginBanner,
		AWS_Transfer_Server__PropertiesMap.ProtocolDetails,
		AWS_Transfer_Server__PropertiesMap.Protocols,
		AWS_Transfer_Server__PropertiesMap.S3StorageOptions,
		AWS_Transfer_Server__PropertiesMap.SecurityPolicyName,
		AWS_Transfer_Server__PropertiesMap.StructuredLogDestinations,
		AWS_Transfer_Server__PropertiesMap.Tags,
		AWS_Transfer_Server__PropertiesMap.WorkflowDetails,
	}
)

// AWS_Transfer_Server is a binding for AWS::Transfer::Server.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html
type AWS_Transfer_Server struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// Certificate is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-certificate
	Certificate cfz.Expression[string] `json:"Certificate,omitempty"`

	// Domain is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-domain
	Domain cfz.Expression[string] `json:"Domain,omitempty"`

	// EndpointDetails is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-endpointdetails
	EndpointDetails cfz.Expression[AWS_Transfer_Server_EndpointDetails] `json:"EndpointDetails,omitempty"`

	// EndpointType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-endpointtype
	EndpointType cfz.Expression[string] `json:"EndpointType,omitempty"`

	// IdentityProviderDetails is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-identityproviderdetails
	IdentityProviderDetails cfz.Expression[AWS_Transfer_Server_IdentityProviderDetails] `json:"IdentityProviderDetails,omitempty"`

	// IdentityProviderType is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-identityprovidertype
	IdentityProviderType cfz.Expression[string] `json:"IdentityProviderType,omitempty"`

	// LoggingRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-loggingrole
	LoggingRole cfz.Expression[string] `json:"LoggingRole,omitempty"`

	// PostAuthenticationLoginBanner is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-postauthenticationloginbanner
	PostAuthenticationLoginBanner cfz.Expression[string] `json:"PostAuthenticationLoginBanner,omitempty"`

	// PreAuthenticationLoginBanner is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-preauthenticationloginbanner
	PreAuthenticationLoginBanner cfz.Expression[string] `json:"PreAuthenticationLoginBanner,omitempty"`

	// ProtocolDetails is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-protocoldetails
	ProtocolDetails cfz.Expression[AWS_Transfer_Server_ProtocolDetails] `json:"ProtocolDetails,omitempty"`

	// Protocols is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-protocols
	Protocols cfz.ExpressionSlice[string] `json:"Protocols,omitempty"`

	// S3StorageOptions is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-s3storageoptions
	S3StorageOptions cfz.Expression[AWS_Transfer_Server_S3StorageOptions] `json:"S3StorageOptions,omitempty"`

	// SecurityPolicyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-securitypolicyname
	SecurityPolicyName cfz.Expression[string] `json:"SecurityPolicyName,omitempty"`

	// StructuredLogDestinations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-structuredlogdestinations
	StructuredLogDestinations cfz.ExpressionSlice[string] `json:"StructuredLogDestinations,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// WorkflowDetails is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-server.html#cfn-transfer-server-workflowdetails
	WorkflowDetails cfz.Expression[AWS_Transfer_Server_WorkflowDetails] `json:"WorkflowDetails,omitempty"`
}

// New__AWS_Transfer_Server initializes a new *AWS_Transfer_Server.
func New__AWS_Transfer_Server(logicalName string) *AWS_Transfer_Server {
	return &AWS_Transfer_Server{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Transfer_Server) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Transfer_Server) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Transfer_Server) GetType() string {
	return AWS_Transfer_Server__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Transfer_Server) Set__LogicalName(v string) *AWS_Transfer_Server {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Transfer_Server) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Transfer_Server {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Transfer_Server) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Transfer_Server {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Transfer_Server) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Transfer_Server {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Transfer_Server) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Transfer_Server {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Transfer_Server) Set__RequestedOutputs(v []cfz.Output) *AWS_Transfer_Server {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Transfer_Server) Add__RequestedOutputs(v ...cfz.Output) *AWS_Transfer_Server {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__Certificate updates property "Certificate".
func (t *AWS_Transfer_Server) Set__Certificate(v cfz.Expression[string]) *AWS_Transfer_Server {
	t.Certificate = v
	return t
}

// SetV__Certificate updates property "Certificate".
func (t *AWS_Transfer_Server) SetV__Certificate(v string) *AWS_Transfer_Server {
	t.Certificate = cfz.V(v)
	return t
}

// Set__Domain updates property "Domain".
func (t *AWS_Transfer_Server) Set__Domain(v cfz.Expression[string]) *AWS_Transfer_Server {
	t.Domain = v
	return t
}

// SetV__Domain updates property "Domain".
func (t *AWS_Transfer_Server) SetV__Domain(v string) *AWS_Transfer_Server {
	t.Domain = cfz.V(v)
	return t
}

// Set__EndpointDetails updates property "EndpointDetails".
func (t *AWS_Transfer_Server) Set__EndpointDetails(v cfz.Expression[AWS_Transfer_Server_EndpointDetails]) *AWS_Transfer_Server {
	t.EndpointDetails = v
	return t
}

// SetV__EndpointDetails updates property "EndpointDetails".
func (t *AWS_Transfer_Server) SetV__EndpointDetails(v AWS_Transfer_Server_EndpointDetails) *AWS_Transfer_Server {
	t.EndpointDetails = cfz.V(v)
	return t
}

// Set__EndpointType updates property "EndpointType".
func (t *AWS_Transfer_Server) Set__EndpointType(v cfz.Expression[string]) *AWS_Transfer_Server {
	t.EndpointType = v
	return t
}

// SetV__EndpointType updates property "EndpointType".
func (t *AWS_Transfer_Server) SetV__EndpointType(v string) *AWS_Transfer_Server {
	t.EndpointType = cfz.V(v)
	return t
}

// Set__IdentityProviderDetails updates property "IdentityProviderDetails".
func (t *AWS_Transfer_Server) Set__IdentityProviderDetails(v cfz.Expression[AWS_Transfer_Server_IdentityProviderDetails]) *AWS_Transfer_Server {
	t.IdentityProviderDetails = v
	return t
}

// SetV__IdentityProviderDetails updates property "IdentityProviderDetails".
func (t *AWS_Transfer_Server) SetV__IdentityProviderDetails(v AWS_Transfer_Server_IdentityProviderDetails) *AWS_Transfer_Server {
	t.IdentityProviderDetails = cfz.V(v)
	return t
}

// Set__IdentityProviderType updates property "IdentityProviderType".
func (t *AWS_Transfer_Server) Set__IdentityProviderType(v cfz.Expression[string]) *AWS_Transfer_Server {
	t.IdentityProviderType = v
	return t
}

// SetV__IdentityProviderType updates property "IdentityProviderType".
func (t *AWS_Transfer_Server) SetV__IdentityProviderType(v string) *AWS_Transfer_Server {
	t.IdentityProviderType = cfz.V(v)
	return t
}

// Set__LoggingRole updates property "LoggingRole".
func (t *AWS_Transfer_Server) Set__LoggingRole(v cfz.Expression[string]) *AWS_Transfer_Server {
	t.LoggingRole = v
	return t
}

// SetV__LoggingRole updates property "LoggingRole".
func (t *AWS_Transfer_Server) SetV__LoggingRole(v string) *AWS_Transfer_Server {
	t.LoggingRole = cfz.V(v)
	return t
}

// Set__PostAuthenticationLoginBanner updates property "PostAuthenticationLoginBanner".
func (t *AWS_Transfer_Server) Set__PostAuthenticationLoginBanner(v cfz.Expression[string]) *AWS_Transfer_Server {
	t.PostAuthenticationLoginBanner = v
	return t
}

// SetV__PostAuthenticationLoginBanner updates property "PostAuthenticationLoginBanner".
func (t *AWS_Transfer_Server) SetV__PostAuthenticationLoginBanner(v string) *AWS_Transfer_Server {
	t.PostAuthenticationLoginBanner = cfz.V(v)
	return t
}

// Set__PreAuthenticationLoginBanner updates property "PreAuthenticationLoginBanner".
func (t *AWS_Transfer_Server) Set__PreAuthenticationLoginBanner(v cfz.Expression[string]) *AWS_Transfer_Server {
	t.PreAuthenticationLoginBanner = v
	return t
}

// SetV__PreAuthenticationLoginBanner updates property "PreAuthenticationLoginBanner".
func (t *AWS_Transfer_Server) SetV__PreAuthenticationLoginBanner(v string) *AWS_Transfer_Server {
	t.PreAuthenticationLoginBanner = cfz.V(v)
	return t
}

// Set__ProtocolDetails updates property "ProtocolDetails".
func (t *AWS_Transfer_Server) Set__ProtocolDetails(v cfz.Expression[AWS_Transfer_Server_ProtocolDetails]) *AWS_Transfer_Server {
	t.ProtocolDetails = v
	return t
}

// SetV__ProtocolDetails updates property "ProtocolDetails".
func (t *AWS_Transfer_Server) SetV__ProtocolDetails(v AWS_Transfer_Server_ProtocolDetails) *AWS_Transfer_Server {
	t.ProtocolDetails = cfz.V(v)
	return t
}

// Set__Protocols updates property "Protocols".
func (t *AWS_Transfer_Server) Set__Protocols(v cfz.ExpressionSlice[string]) *AWS_Transfer_Server {
	t.Protocols = v
	return t
}

// SetS__Protocols updates property "Protocols".
func (t *AWS_Transfer_Server) SetS__Protocols(v ...cfz.Expression[string]) *AWS_Transfer_Server {
	t.Protocols = cfz.S(v...)
	return t
}

// SetSV__Protocols updates property "Protocols".
func (t *AWS_Transfer_Server) SetSV__Protocols(v ...string) *AWS_Transfer_Server {
	t.Protocols = cfz.SV(v...)
	return t
}

// Set__S3StorageOptions updates property "S3StorageOptions".
func (t *AWS_Transfer_Server) Set__S3StorageOptions(v cfz.Expression[AWS_Transfer_Server_S3StorageOptions]) *AWS_Transfer_Server {
	t.S3StorageOptions = v
	return t
}

// SetV__S3StorageOptions updates property "S3StorageOptions".
func (t *AWS_Transfer_Server) SetV__S3StorageOptions(v AWS_Transfer_Server_S3StorageOptions) *AWS_Transfer_Server {
	t.S3StorageOptions = cfz.V(v)
	return t
}

// Set__SecurityPolicyName updates property "SecurityPolicyName".
func (t *AWS_Transfer_Server) Set__SecurityPolicyName(v cfz.Expression[string]) *AWS_Transfer_Server {
	t.SecurityPolicyName = v
	return t
}

// SetV__SecurityPolicyName updates property "SecurityPolicyName".
func (t *AWS_Transfer_Server) SetV__SecurityPolicyName(v string) *AWS_Transfer_Server {
	t.SecurityPolicyName = cfz.V(v)
	return t
}

// Set__StructuredLogDestinations updates property "StructuredLogDestinations".
func (t *AWS_Transfer_Server) Set__StructuredLogDestinations(v cfz.ExpressionSlice[string]) *AWS_Transfer_Server {
	t.StructuredLogDestinations = v
	return t
}

// SetS__StructuredLogDestinations updates property "StructuredLogDestinations".
func (t *AWS_Transfer_Server) SetS__StructuredLogDestinations(v ...cfz.Expression[string]) *AWS_Transfer_Server {
	t.StructuredLogDestinations = cfz.S(v...)
	return t
}

// SetSV__StructuredLogDestinations updates property "StructuredLogDestinations".
func (t *AWS_Transfer_Server) SetSV__StructuredLogDestinations(v ...string) *AWS_Transfer_Server {
	t.StructuredLogDestinations = cfz.SV(v...)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Transfer_Server) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Transfer_Server {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Transfer_Server) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Transfer_Server {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Transfer_Server) SetSV__Tags(v ...cfz.Tag) *AWS_Transfer_Server {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__WorkflowDetails updates property "WorkflowDetails".
func (t *AWS_Transfer_Server) Set__WorkflowDetails(v cfz.Expression[AWS_Transfer_Server_WorkflowDetails]) *AWS_Transfer_Server {
	t.WorkflowDetails = v
	return t
}

// SetV__WorkflowDetails updates property "WorkflowDetails".
func (t *AWS_Transfer_Server) SetV__WorkflowDetails(v AWS_Transfer_Server_WorkflowDetails) *AWS_Transfer_Server {
	t.WorkflowDetails = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Transfer_Server) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Transfer_Server) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Transfer_Server__AttributesMap.Arn))
}

// GetAttSlice__As2ServiceManagedEgressIpAddresses returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: As2ServiceManagedEgressIpAddresses
func (t *AWS_Transfer_Server) GetAttSlice__As2ServiceManagedEgressIpAddresses() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Transfer_Server__AttributesMap.As2ServiceManagedEgressIpAddresses))
}

// GetAtt__ServerId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ServerId
func (t *AWS_Transfer_Server) GetAtt__ServerId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Transfer_Server__AttributesMap.ServerId))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Transfer_Server) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Transfer_Server) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__As2ServiceManagedEgressIpAddresses returns a conventionally configured output for an attribute of this resource.
// Attribute: As2ServiceManagedEgressIpAddresses
func (t *AWS_Transfer_Server) GetConventionalOutputAtt__As2ServiceManagedEgressIpAddresses(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAs2ServiceManagedEgressIpAddresses", t.GetAttSlice__As2ServiceManagedEgressIpAddresses())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ServerId returns a conventionally configured output for an attribute of this resource.
// Attribute: ServerId
func (t *AWS_Transfer_Server) GetConventionalOutputAtt__ServerId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttServerId", t.GetAtt__ServerId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Transfer_Server) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Transfer_Server

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Transfer_Server) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
