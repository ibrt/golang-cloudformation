// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_transfer

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Transfer_Agreement)(nil)
	_ cfz.Resource                   = (*AWS_Transfer_Agreement)(nil)
)

const (
	// AWS_Transfer_Agreement__Type is the CloudFormation type for AWS::Transfer::Agreement.
	AWS_Transfer_Agreement__Type = "AWS::Transfer::Agreement"
)

var (
	// AWS_Transfer_Agreement__AttributesMap reports all the CloudFormation attributes for AWS::Transfer::Agreement.
	AWS_Transfer_Agreement__AttributesMap = struct {
		AgreementId string
		Arn         string
	}{
		AgreementId: "AgreementId",
		Arn:         "Arn",
	}

	// AWS_Transfer_Agreement__AttributesSlice reports all the CloudFormation attributes for AWS::Transfer::Agreement.
	AWS_Transfer_Agreement__AttributesSlice = []string{
		AWS_Transfer_Agreement__AttributesMap.AgreementId,
		AWS_Transfer_Agreement__AttributesMap.Arn,
	}
)

var (
	// AWS_Transfer_Agreement__PropertiesMap reports all the CloudFormation properties for AWS::Transfer::Agreement.
	AWS_Transfer_Agreement__PropertiesMap = struct {
		AccessRole       string
		BaseDirectory    string
		Description      string
		LocalProfileId   string
		PartnerProfileId string
		ServerId         string
		Status           string
		Tags             string
	}{
		AccessRole:       "AccessRole",
		BaseDirectory:    "BaseDirectory",
		Description:      "Description",
		LocalProfileId:   "LocalProfileId",
		PartnerProfileId: "PartnerProfileId",
		ServerId:         "ServerId",
		Status:           "Status",
		Tags:             "Tags",
	}

	// AWS_Transfer_Agreement__PropertiesSlice reports all the CloudFormation properties for AWS::Transfer::Agreement.
	AWS_Transfer_Agreement__PropertiesSlice = []string{
		AWS_Transfer_Agreement__PropertiesMap.AccessRole,
		AWS_Transfer_Agreement__PropertiesMap.BaseDirectory,
		AWS_Transfer_Agreement__PropertiesMap.Description,
		AWS_Transfer_Agreement__PropertiesMap.LocalProfileId,
		AWS_Transfer_Agreement__PropertiesMap.PartnerProfileId,
		AWS_Transfer_Agreement__PropertiesMap.ServerId,
		AWS_Transfer_Agreement__PropertiesMap.Status,
		AWS_Transfer_Agreement__PropertiesMap.Tags,
	}
)

// AWS_Transfer_Agreement is a binding for AWS::Transfer::Agreement.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html
type AWS_Transfer_Agreement struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-accessrole
	AccessRole cfz.Expression[string] `json:"AccessRole,omitempty"`

	// BaseDirectory is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-basedirectory
	BaseDirectory cfz.Expression[string] `json:"BaseDirectory,omitempty"`

	// Description is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-description
	Description cfz.Expression[string] `json:"Description,omitempty"`

	// LocalProfileId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-localprofileid
	LocalProfileId cfz.Expression[string] `json:"LocalProfileId,omitempty"`

	// PartnerProfileId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-partnerprofileid
	PartnerProfileId cfz.Expression[string] `json:"PartnerProfileId,omitempty"`

	// ServerId is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-serverid
	ServerId cfz.Expression[string] `json:"ServerId,omitempty"`

	// Status is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-status
	Status cfz.Expression[string] `json:"Status,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Transfer_Agreement initializes a new *AWS_Transfer_Agreement.
func New__AWS_Transfer_Agreement(logicalName string) *AWS_Transfer_Agreement {
	return &AWS_Transfer_Agreement{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Transfer_Agreement) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Transfer_Agreement) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Transfer_Agreement) GetType() string {
	return AWS_Transfer_Agreement__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Transfer_Agreement) Set__LogicalName(v string) *AWS_Transfer_Agreement {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Transfer_Agreement) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Transfer_Agreement {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Transfer_Agreement) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Transfer_Agreement {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Transfer_Agreement) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Transfer_Agreement {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Transfer_Agreement) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Transfer_Agreement {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Transfer_Agreement) Set__RequestedOutputs(v []cfz.Output) *AWS_Transfer_Agreement {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Transfer_Agreement) Add__RequestedOutputs(v ...cfz.Output) *AWS_Transfer_Agreement {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessRole updates property "AccessRole".
func (t *AWS_Transfer_Agreement) Set__AccessRole(v cfz.Expression[string]) *AWS_Transfer_Agreement {
	t.AccessRole = v
	return t
}

// SetV__AccessRole updates property "AccessRole".
func (t *AWS_Transfer_Agreement) SetV__AccessRole(v string) *AWS_Transfer_Agreement {
	t.AccessRole = cfz.V(v)
	return t
}

// Set__BaseDirectory updates property "BaseDirectory".
func (t *AWS_Transfer_Agreement) Set__BaseDirectory(v cfz.Expression[string]) *AWS_Transfer_Agreement {
	t.BaseDirectory = v
	return t
}

// SetV__BaseDirectory updates property "BaseDirectory".
func (t *AWS_Transfer_Agreement) SetV__BaseDirectory(v string) *AWS_Transfer_Agreement {
	t.BaseDirectory = cfz.V(v)
	return t
}

// Set__Description updates property "Description".
func (t *AWS_Transfer_Agreement) Set__Description(v cfz.Expression[string]) *AWS_Transfer_Agreement {
	t.Description = v
	return t
}

// SetV__Description updates property "Description".
func (t *AWS_Transfer_Agreement) SetV__Description(v string) *AWS_Transfer_Agreement {
	t.Description = cfz.V(v)
	return t
}

// Set__LocalProfileId updates property "LocalProfileId".
func (t *AWS_Transfer_Agreement) Set__LocalProfileId(v cfz.Expression[string]) *AWS_Transfer_Agreement {
	t.LocalProfileId = v
	return t
}

// SetV__LocalProfileId updates property "LocalProfileId".
func (t *AWS_Transfer_Agreement) SetV__LocalProfileId(v string) *AWS_Transfer_Agreement {
	t.LocalProfileId = cfz.V(v)
	return t
}

// Set__PartnerProfileId updates property "PartnerProfileId".
func (t *AWS_Transfer_Agreement) Set__PartnerProfileId(v cfz.Expression[string]) *AWS_Transfer_Agreement {
	t.PartnerProfileId = v
	return t
}

// SetV__PartnerProfileId updates property "PartnerProfileId".
func (t *AWS_Transfer_Agreement) SetV__PartnerProfileId(v string) *AWS_Transfer_Agreement {
	t.PartnerProfileId = cfz.V(v)
	return t
}

// Set__ServerId updates property "ServerId".
func (t *AWS_Transfer_Agreement) Set__ServerId(v cfz.Expression[string]) *AWS_Transfer_Agreement {
	t.ServerId = v
	return t
}

// SetV__ServerId updates property "ServerId".
func (t *AWS_Transfer_Agreement) SetV__ServerId(v string) *AWS_Transfer_Agreement {
	t.ServerId = cfz.V(v)
	return t
}

// Set__Status updates property "Status".
func (t *AWS_Transfer_Agreement) Set__Status(v cfz.Expression[string]) *AWS_Transfer_Agreement {
	t.Status = v
	return t
}

// SetV__Status updates property "Status".
func (t *AWS_Transfer_Agreement) SetV__Status(v string) *AWS_Transfer_Agreement {
	t.Status = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Transfer_Agreement) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Transfer_Agreement {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Transfer_Agreement) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Transfer_Agreement {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Transfer_Agreement) SetSV__Tags(v ...cfz.Tag) *AWS_Transfer_Agreement {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Transfer_Agreement) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__AgreementId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: AgreementId
func (t *AWS_Transfer_Agreement) GetAtt__AgreementId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Transfer_Agreement__AttributesMap.AgreementId))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Transfer_Agreement) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Transfer_Agreement__AttributesMap.Arn))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Transfer_Agreement) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__AgreementId returns a conventionally configured output for an attribute of this resource.
// Attribute: AgreementId
func (t *AWS_Transfer_Agreement) GetConventionalOutputAtt__AgreementId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttAgreementId", t.GetAtt__AgreementId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Transfer_Agreement) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Transfer_Agreement) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Transfer_Agreement

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Transfer_Agreement) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
