// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_transfer

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Transfer_Connector)(nil)
	_ cfz.Resource                   = (*AWS_Transfer_Connector)(nil)
)

const (
	// AWS_Transfer_Connector__Type is the CloudFormation type for AWS::Transfer::Connector.
	AWS_Transfer_Connector__Type = "AWS::Transfer::Connector"
)

var (
	// AWS_Transfer_Connector__AttributesMap reports all the CloudFormation attributes for AWS::Transfer::Connector.
	AWS_Transfer_Connector__AttributesMap = struct {
		Arn                             string
		ConnectorId                     string
		ServiceManagedEgressIpAddresses string
	}{
		Arn:                             "Arn",
		ConnectorId:                     "ConnectorId",
		ServiceManagedEgressIpAddresses: "ServiceManagedEgressIpAddresses",
	}

	// AWS_Transfer_Connector__AttributesSlice reports all the CloudFormation attributes for AWS::Transfer::Connector.
	AWS_Transfer_Connector__AttributesSlice = []string{
		AWS_Transfer_Connector__AttributesMap.Arn,
		AWS_Transfer_Connector__AttributesMap.ConnectorId,
		AWS_Transfer_Connector__AttributesMap.ServiceManagedEgressIpAddresses,
	}
)

var (
	// AWS_Transfer_Connector__PropertiesMap reports all the CloudFormation properties for AWS::Transfer::Connector.
	AWS_Transfer_Connector__PropertiesMap = struct {
		AccessRole         string
		As2Config          string
		LoggingRole        string
		SecurityPolicyName string
		SftpConfig         string
		Tags               string
		Url                string
	}{
		AccessRole:         "AccessRole",
		As2Config:          "As2Config",
		LoggingRole:        "LoggingRole",
		SecurityPolicyName: "SecurityPolicyName",
		SftpConfig:         "SftpConfig",
		Tags:               "Tags",
		Url:                "Url",
	}

	// AWS_Transfer_Connector__PropertiesSlice reports all the CloudFormation properties for AWS::Transfer::Connector.
	AWS_Transfer_Connector__PropertiesSlice = []string{
		AWS_Transfer_Connector__PropertiesMap.AccessRole,
		AWS_Transfer_Connector__PropertiesMap.As2Config,
		AWS_Transfer_Connector__PropertiesMap.LoggingRole,
		AWS_Transfer_Connector__PropertiesMap.SecurityPolicyName,
		AWS_Transfer_Connector__PropertiesMap.SftpConfig,
		AWS_Transfer_Connector__PropertiesMap.Tags,
		AWS_Transfer_Connector__PropertiesMap.Url,
	}
)

// AWS_Transfer_Connector is a binding for AWS::Transfer::Connector.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html
type AWS_Transfer_Connector struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AccessRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-accessrole
	AccessRole cfz.Expression[string] `json:"AccessRole,omitempty"`

	// As2Config is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-as2config
	As2Config cfz.Expression[AWS_Transfer_Connector_As2Config] `json:"As2Config,omitempty"`

	// LoggingRole is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-loggingrole
	LoggingRole cfz.Expression[string] `json:"LoggingRole,omitempty"`

	// SecurityPolicyName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-securitypolicyname
	SecurityPolicyName cfz.Expression[string] `json:"SecurityPolicyName,omitempty"`

	// SftpConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-sftpconfig
	SftpConfig cfz.Expression[AWS_Transfer_Connector_SftpConfig] `json:"SftpConfig,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// Url is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-connector.html#cfn-transfer-connector-url
	Url cfz.Expression[string] `json:"Url,omitempty"`
}

// New__AWS_Transfer_Connector initializes a new *AWS_Transfer_Connector.
func New__AWS_Transfer_Connector(logicalName string) *AWS_Transfer_Connector {
	return &AWS_Transfer_Connector{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Transfer_Connector) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Transfer_Connector) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Transfer_Connector) GetType() string {
	return AWS_Transfer_Connector__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Transfer_Connector) Set__LogicalName(v string) *AWS_Transfer_Connector {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Transfer_Connector) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Transfer_Connector {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Transfer_Connector) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Transfer_Connector {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Transfer_Connector) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Transfer_Connector {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Transfer_Connector) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Transfer_Connector {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Transfer_Connector) Set__RequestedOutputs(v []cfz.Output) *AWS_Transfer_Connector {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Transfer_Connector) Add__RequestedOutputs(v ...cfz.Output) *AWS_Transfer_Connector {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AccessRole updates property "AccessRole".
func (t *AWS_Transfer_Connector) Set__AccessRole(v cfz.Expression[string]) *AWS_Transfer_Connector {
	t.AccessRole = v
	return t
}

// SetV__AccessRole updates property "AccessRole".
func (t *AWS_Transfer_Connector) SetV__AccessRole(v string) *AWS_Transfer_Connector {
	t.AccessRole = cfz.V(v)
	return t
}

// Set__As2Config updates property "As2Config".
func (t *AWS_Transfer_Connector) Set__As2Config(v cfz.Expression[AWS_Transfer_Connector_As2Config]) *AWS_Transfer_Connector {
	t.As2Config = v
	return t
}

// SetV__As2Config updates property "As2Config".
func (t *AWS_Transfer_Connector) SetV__As2Config(v AWS_Transfer_Connector_As2Config) *AWS_Transfer_Connector {
	t.As2Config = cfz.V(v)
	return t
}

// Set__LoggingRole updates property "LoggingRole".
func (t *AWS_Transfer_Connector) Set__LoggingRole(v cfz.Expression[string]) *AWS_Transfer_Connector {
	t.LoggingRole = v
	return t
}

// SetV__LoggingRole updates property "LoggingRole".
func (t *AWS_Transfer_Connector) SetV__LoggingRole(v string) *AWS_Transfer_Connector {
	t.LoggingRole = cfz.V(v)
	return t
}

// Set__SecurityPolicyName updates property "SecurityPolicyName".
func (t *AWS_Transfer_Connector) Set__SecurityPolicyName(v cfz.Expression[string]) *AWS_Transfer_Connector {
	t.SecurityPolicyName = v
	return t
}

// SetV__SecurityPolicyName updates property "SecurityPolicyName".
func (t *AWS_Transfer_Connector) SetV__SecurityPolicyName(v string) *AWS_Transfer_Connector {
	t.SecurityPolicyName = cfz.V(v)
	return t
}

// Set__SftpConfig updates property "SftpConfig".
func (t *AWS_Transfer_Connector) Set__SftpConfig(v cfz.Expression[AWS_Transfer_Connector_SftpConfig]) *AWS_Transfer_Connector {
	t.SftpConfig = v
	return t
}

// SetV__SftpConfig updates property "SftpConfig".
func (t *AWS_Transfer_Connector) SetV__SftpConfig(v AWS_Transfer_Connector_SftpConfig) *AWS_Transfer_Connector {
	t.SftpConfig = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Transfer_Connector) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Transfer_Connector {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Transfer_Connector) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Transfer_Connector {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Transfer_Connector) SetSV__Tags(v ...cfz.Tag) *AWS_Transfer_Connector {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__Url updates property "Url".
func (t *AWS_Transfer_Connector) Set__Url(v cfz.Expression[string]) *AWS_Transfer_Connector {
	t.Url = v
	return t
}

// SetV__Url updates property "Url".
func (t *AWS_Transfer_Connector) SetV__Url(v string) *AWS_Transfer_Connector {
	t.Url = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Transfer_Connector) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Transfer_Connector) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Transfer_Connector__AttributesMap.Arn))
}

// GetAtt__ConnectorId returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ConnectorId
func (t *AWS_Transfer_Connector) GetAtt__ConnectorId() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Transfer_Connector__AttributesMap.ConnectorId))
}

// GetAttSlice__ServiceManagedEgressIpAddresses returns a $cfz.ExpressionSlice[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: ServiceManagedEgressIpAddresses
func (t *AWS_Transfer_Connector) GetAttSlice__ServiceManagedEgressIpAddresses() cfz.ExpressionSlice[string] {
	return cfz.GetAttSlice[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Transfer_Connector__AttributesMap.ServiceManagedEgressIpAddresses))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Transfer_Connector) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Transfer_Connector) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ConnectorId returns a conventionally configured output for an attribute of this resource.
// Attribute: ConnectorId
func (t *AWS_Transfer_Connector) GetConventionalOutputAtt__ConnectorId(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttConnectorId", t.GetAtt__ConnectorId())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__ServiceManagedEgressIpAddresses returns a conventionally configured output for an attribute of this resource.
// Attribute: ServiceManagedEgressIpAddresses
func (t *AWS_Transfer_Connector) GetConventionalOutputAtt__ServiceManagedEgressIpAddresses(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttServiceManagedEgressIpAddresses", t.GetAttSlice__ServiceManagedEgressIpAddresses())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Transfer_Connector) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Transfer_Connector

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Transfer_Connector) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
