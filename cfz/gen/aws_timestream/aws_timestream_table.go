// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_timestream

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_Timestream_Table)(nil)
	_ cfz.Resource                   = (*AWS_Timestream_Table)(nil)
)

const (
	// AWS_Timestream_Table__Type is the CloudFormation type for AWS::Timestream::Table.
	AWS_Timestream_Table__Type = "AWS::Timestream::Table"
)

var (
	// AWS_Timestream_Table__AttributesMap reports all the CloudFormation attributes for AWS::Timestream::Table.
	AWS_Timestream_Table__AttributesMap = struct {
		Arn  string
		Name string
	}{
		Arn:  "Arn",
		Name: "Name",
	}

	// AWS_Timestream_Table__AttributesSlice reports all the CloudFormation attributes for AWS::Timestream::Table.
	AWS_Timestream_Table__AttributesSlice = []string{
		AWS_Timestream_Table__AttributesMap.Arn,
		AWS_Timestream_Table__AttributesMap.Name,
	}
)

var (
	// AWS_Timestream_Table__PropertiesMap reports all the CloudFormation properties for AWS::Timestream::Table.
	AWS_Timestream_Table__PropertiesMap = struct {
		DatabaseName                 string
		MagneticStoreWriteProperties string
		RetentionProperties          string
		Schema                       string
		TableName                    string
		Tags                         string
	}{
		DatabaseName:                 "DatabaseName",
		MagneticStoreWriteProperties: "MagneticStoreWriteProperties",
		RetentionProperties:          "RetentionProperties",
		Schema:                       "Schema",
		TableName:                    "TableName",
		Tags:                         "Tags",
	}

	// AWS_Timestream_Table__PropertiesSlice reports all the CloudFormation properties for AWS::Timestream::Table.
	AWS_Timestream_Table__PropertiesSlice = []string{
		AWS_Timestream_Table__PropertiesMap.DatabaseName,
		AWS_Timestream_Table__PropertiesMap.MagneticStoreWriteProperties,
		AWS_Timestream_Table__PropertiesMap.RetentionProperties,
		AWS_Timestream_Table__PropertiesMap.Schema,
		AWS_Timestream_Table__PropertiesMap.TableName,
		AWS_Timestream_Table__PropertiesMap.Tags,
	}
)

// AWS_Timestream_Table is a binding for AWS::Timestream::Table.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html
type AWS_Timestream_Table struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// DatabaseName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-databasename
	DatabaseName cfz.Expression[string] `json:"DatabaseName,omitempty"`

	// MagneticStoreWriteProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-magneticstorewriteproperties
	MagneticStoreWriteProperties cfz.Expression[AWS_Timestream_Table_MagneticStoreWriteProperties] `json:"MagneticStoreWriteProperties,omitempty"`

	// RetentionProperties is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-retentionproperties
	RetentionProperties cfz.Expression[AWS_Timestream_Table_RetentionProperties] `json:"RetentionProperties,omitempty"`

	// Schema is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-schema
	Schema cfz.Expression[AWS_Timestream_Table_Schema] `json:"Schema,omitempty"`

	// TableName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-tablename
	TableName cfz.Expression[string] `json:"TableName,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-timestream-table.html#cfn-timestream-table-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_Timestream_Table initializes a new *AWS_Timestream_Table.
func New__AWS_Timestream_Table(logicalName string) *AWS_Timestream_Table {
	return &AWS_Timestream_Table{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_Timestream_Table) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_Timestream_Table) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_Timestream_Table) GetType() string {
	return AWS_Timestream_Table__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_Timestream_Table) Set__LogicalName(v string) *AWS_Timestream_Table {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_Timestream_Table) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_Timestream_Table {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_Timestream_Table) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_Timestream_Table {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_Timestream_Table) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_Timestream_Table {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_Timestream_Table) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_Timestream_Table {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_Timestream_Table) Set__RequestedOutputs(v []cfz.Output) *AWS_Timestream_Table {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_Timestream_Table) Add__RequestedOutputs(v ...cfz.Output) *AWS_Timestream_Table {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__DatabaseName updates property "DatabaseName".
func (t *AWS_Timestream_Table) Set__DatabaseName(v cfz.Expression[string]) *AWS_Timestream_Table {
	t.DatabaseName = v
	return t
}

// SetV__DatabaseName updates property "DatabaseName".
func (t *AWS_Timestream_Table) SetV__DatabaseName(v string) *AWS_Timestream_Table {
	t.DatabaseName = cfz.V(v)
	return t
}

// Set__MagneticStoreWriteProperties updates property "MagneticStoreWriteProperties".
func (t *AWS_Timestream_Table) Set__MagneticStoreWriteProperties(v cfz.Expression[AWS_Timestream_Table_MagneticStoreWriteProperties]) *AWS_Timestream_Table {
	t.MagneticStoreWriteProperties = v
	return t
}

// SetV__MagneticStoreWriteProperties updates property "MagneticStoreWriteProperties".
func (t *AWS_Timestream_Table) SetV__MagneticStoreWriteProperties(v AWS_Timestream_Table_MagneticStoreWriteProperties) *AWS_Timestream_Table {
	t.MagneticStoreWriteProperties = cfz.V(v)
	return t
}

// Set__RetentionProperties updates property "RetentionProperties".
func (t *AWS_Timestream_Table) Set__RetentionProperties(v cfz.Expression[AWS_Timestream_Table_RetentionProperties]) *AWS_Timestream_Table {
	t.RetentionProperties = v
	return t
}

// SetV__RetentionProperties updates property "RetentionProperties".
func (t *AWS_Timestream_Table) SetV__RetentionProperties(v AWS_Timestream_Table_RetentionProperties) *AWS_Timestream_Table {
	t.RetentionProperties = cfz.V(v)
	return t
}

// Set__Schema updates property "Schema".
func (t *AWS_Timestream_Table) Set__Schema(v cfz.Expression[AWS_Timestream_Table_Schema]) *AWS_Timestream_Table {
	t.Schema = v
	return t
}

// SetV__Schema updates property "Schema".
func (t *AWS_Timestream_Table) SetV__Schema(v AWS_Timestream_Table_Schema) *AWS_Timestream_Table {
	t.Schema = cfz.V(v)
	return t
}

// Set__TableName updates property "TableName".
func (t *AWS_Timestream_Table) Set__TableName(v cfz.Expression[string]) *AWS_Timestream_Table {
	t.TableName = v
	return t
}

// SetV__TableName updates property "TableName".
func (t *AWS_Timestream_Table) SetV__TableName(v string) *AWS_Timestream_Table {
	t.TableName = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_Timestream_Table) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_Timestream_Table {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_Timestream_Table) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_Timestream_Table {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_Timestream_Table) SetSV__Tags(v ...cfz.Tag) *AWS_Timestream_Table {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_Timestream_Table) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Arn returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Arn
func (t *AWS_Timestream_Table) GetAtt__Arn() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Timestream_Table__AttributesMap.Arn))
}

// GetAtt__Name returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Name
func (t *AWS_Timestream_Table) GetAtt__Name() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_Timestream_Table__AttributesMap.Name))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_Timestream_Table) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Arn returns a conventionally configured output for an attribute of this resource.
// Attribute: Arn
func (t *AWS_Timestream_Table) GetConventionalOutputAtt__Arn(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttArn", t.GetAtt__Arn())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Name returns a conventionally configured output for an attribute of this resource.
// Attribute: Name
func (t *AWS_Timestream_Table) GetConventionalOutputAtt__Name(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttName", t.GetAtt__Name())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_Timestream_Table) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_Timestream_Table

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_Timestream_Table) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
