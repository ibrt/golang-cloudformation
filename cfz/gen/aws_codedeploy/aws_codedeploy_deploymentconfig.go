// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_codedeploy

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CodeDeploy_DeploymentConfig)(nil)
	_ cfz.Resource                   = (*AWS_CodeDeploy_DeploymentConfig)(nil)
)

const (
	// AWS_CodeDeploy_DeploymentConfig__Type is the CloudFormation type for AWS::CodeDeploy::DeploymentConfig.
	AWS_CodeDeploy_DeploymentConfig__Type = "AWS::CodeDeploy::DeploymentConfig"
)

var (
	// AWS_CodeDeploy_DeploymentConfig__PropertiesMap reports all the CloudFormation properties for AWS::CodeDeploy::DeploymentConfig.
	AWS_CodeDeploy_DeploymentConfig__PropertiesMap = struct {
		ComputePlatform      string
		DeploymentConfigName string
		MinimumHealthyHosts  string
		TrafficRoutingConfig string
		ZonalConfig          string
	}{
		ComputePlatform:      "ComputePlatform",
		DeploymentConfigName: "DeploymentConfigName",
		MinimumHealthyHosts:  "MinimumHealthyHosts",
		TrafficRoutingConfig: "TrafficRoutingConfig",
		ZonalConfig:          "ZonalConfig",
	}

	// AWS_CodeDeploy_DeploymentConfig__PropertiesSlice reports all the CloudFormation properties for AWS::CodeDeploy::DeploymentConfig.
	AWS_CodeDeploy_DeploymentConfig__PropertiesSlice = []string{
		AWS_CodeDeploy_DeploymentConfig__PropertiesMap.ComputePlatform,
		AWS_CodeDeploy_DeploymentConfig__PropertiesMap.DeploymentConfigName,
		AWS_CodeDeploy_DeploymentConfig__PropertiesMap.MinimumHealthyHosts,
		AWS_CodeDeploy_DeploymentConfig__PropertiesMap.TrafficRoutingConfig,
		AWS_CodeDeploy_DeploymentConfig__PropertiesMap.ZonalConfig,
	}
)

// AWS_CodeDeploy_DeploymentConfig is a binding for AWS::CodeDeploy::DeploymentConfig.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html
type AWS_CodeDeploy_DeploymentConfig struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// ComputePlatform is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-computeplatform
	ComputePlatform cfz.Expression[string] `json:"ComputePlatform,omitempty"`

	// DeploymentConfigName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-deploymentconfigname
	DeploymentConfigName cfz.Expression[string] `json:"DeploymentConfigName,omitempty"`

	// MinimumHealthyHosts is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-minimumhealthyhosts
	MinimumHealthyHosts cfz.Expression[AWS_CodeDeploy_DeploymentConfig_MinimumHealthyHosts] `json:"MinimumHealthyHosts,omitempty"`

	// TrafficRoutingConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-trafficroutingconfig
	TrafficRoutingConfig cfz.Expression[AWS_CodeDeploy_DeploymentConfig_TrafficRoutingConfig] `json:"TrafficRoutingConfig,omitempty"`

	// ZonalConfig is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentconfig.html#cfn-codedeploy-deploymentconfig-zonalconfig
	ZonalConfig cfz.Expression[AWS_CodeDeploy_DeploymentConfig_ZonalConfig] `json:"ZonalConfig,omitempty"`
}

// New__AWS_CodeDeploy_DeploymentConfig initializes a new *AWS_CodeDeploy_DeploymentConfig.
func New__AWS_CodeDeploy_DeploymentConfig(logicalName string) *AWS_CodeDeploy_DeploymentConfig {
	return &AWS_CodeDeploy_DeploymentConfig{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CodeDeploy_DeploymentConfig) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CodeDeploy_DeploymentConfig) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CodeDeploy_DeploymentConfig) GetType() string {
	return AWS_CodeDeploy_DeploymentConfig__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__LogicalName(v string) *AWS_CodeDeploy_DeploymentConfig {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CodeDeploy_DeploymentConfig {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CodeDeploy_DeploymentConfig) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CodeDeploy_DeploymentConfig {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CodeDeploy_DeploymentConfig {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CodeDeploy_DeploymentConfig {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__RequestedOutputs(v []cfz.Output) *AWS_CodeDeploy_DeploymentConfig {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CodeDeploy_DeploymentConfig) Add__RequestedOutputs(v ...cfz.Output) *AWS_CodeDeploy_DeploymentConfig {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__ComputePlatform updates property "ComputePlatform".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__ComputePlatform(v cfz.Expression[string]) *AWS_CodeDeploy_DeploymentConfig {
	t.ComputePlatform = v
	return t
}

// SetV__ComputePlatform updates property "ComputePlatform".
func (t *AWS_CodeDeploy_DeploymentConfig) SetV__ComputePlatform(v string) *AWS_CodeDeploy_DeploymentConfig {
	t.ComputePlatform = cfz.V(v)
	return t
}

// Set__DeploymentConfigName updates property "DeploymentConfigName".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__DeploymentConfigName(v cfz.Expression[string]) *AWS_CodeDeploy_DeploymentConfig {
	t.DeploymentConfigName = v
	return t
}

// SetV__DeploymentConfigName updates property "DeploymentConfigName".
func (t *AWS_CodeDeploy_DeploymentConfig) SetV__DeploymentConfigName(v string) *AWS_CodeDeploy_DeploymentConfig {
	t.DeploymentConfigName = cfz.V(v)
	return t
}

// Set__MinimumHealthyHosts updates property "MinimumHealthyHosts".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__MinimumHealthyHosts(v cfz.Expression[AWS_CodeDeploy_DeploymentConfig_MinimumHealthyHosts]) *AWS_CodeDeploy_DeploymentConfig {
	t.MinimumHealthyHosts = v
	return t
}

// SetV__MinimumHealthyHosts updates property "MinimumHealthyHosts".
func (t *AWS_CodeDeploy_DeploymentConfig) SetV__MinimumHealthyHosts(v AWS_CodeDeploy_DeploymentConfig_MinimumHealthyHosts) *AWS_CodeDeploy_DeploymentConfig {
	t.MinimumHealthyHosts = cfz.V(v)
	return t
}

// Set__TrafficRoutingConfig updates property "TrafficRoutingConfig".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__TrafficRoutingConfig(v cfz.Expression[AWS_CodeDeploy_DeploymentConfig_TrafficRoutingConfig]) *AWS_CodeDeploy_DeploymentConfig {
	t.TrafficRoutingConfig = v
	return t
}

// SetV__TrafficRoutingConfig updates property "TrafficRoutingConfig".
func (t *AWS_CodeDeploy_DeploymentConfig) SetV__TrafficRoutingConfig(v AWS_CodeDeploy_DeploymentConfig_TrafficRoutingConfig) *AWS_CodeDeploy_DeploymentConfig {
	t.TrafficRoutingConfig = cfz.V(v)
	return t
}

// Set__ZonalConfig updates property "ZonalConfig".
func (t *AWS_CodeDeploy_DeploymentConfig) Set__ZonalConfig(v cfz.Expression[AWS_CodeDeploy_DeploymentConfig_ZonalConfig]) *AWS_CodeDeploy_DeploymentConfig {
	t.ZonalConfig = v
	return t
}

// SetV__ZonalConfig updates property "ZonalConfig".
func (t *AWS_CodeDeploy_DeploymentConfig) SetV__ZonalConfig(v AWS_CodeDeploy_DeploymentConfig_ZonalConfig) *AWS_CodeDeploy_DeploymentConfig {
	t.ZonalConfig = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CodeDeploy_DeploymentConfig) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CodeDeploy_DeploymentConfig) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CodeDeploy_DeploymentConfig) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CodeDeploy_DeploymentConfig

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CodeDeploy_DeploymentConfig) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
