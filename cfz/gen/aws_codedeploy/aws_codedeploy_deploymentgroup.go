// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_codedeploy

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_CodeDeploy_DeploymentGroup)(nil)
	_ cfz.Resource                   = (*AWS_CodeDeploy_DeploymentGroup)(nil)
)

const (
	// AWS_CodeDeploy_DeploymentGroup__Type is the CloudFormation type for AWS::CodeDeploy::DeploymentGroup.
	AWS_CodeDeploy_DeploymentGroup__Type = "AWS::CodeDeploy::DeploymentGroup"
)

var (
	// AWS_CodeDeploy_DeploymentGroup__PropertiesMap reports all the CloudFormation properties for AWS::CodeDeploy::DeploymentGroup.
	AWS_CodeDeploy_DeploymentGroup__PropertiesMap = struct {
		AlarmConfiguration               string
		ApplicationName                  string
		AutoRollbackConfiguration        string
		AutoScalingGroups                string
		BlueGreenDeploymentConfiguration string
		Deployment                       string
		DeploymentConfigName             string
		DeploymentGroupName              string
		DeploymentStyle                  string
		ECSServices                      string
		Ec2TagFilters                    string
		Ec2TagSet                        string
		LoadBalancerInfo                 string
		OnPremisesInstanceTagFilters     string
		OnPremisesTagSet                 string
		OutdatedInstancesStrategy        string
		ServiceRoleArn                   string
		Tags                             string
		TerminationHookEnabled           string
		TriggerConfigurations            string
	}{
		AlarmConfiguration:               "AlarmConfiguration",
		ApplicationName:                  "ApplicationName",
		AutoRollbackConfiguration:        "AutoRollbackConfiguration",
		AutoScalingGroups:                "AutoScalingGroups",
		BlueGreenDeploymentConfiguration: "BlueGreenDeploymentConfiguration",
		Deployment:                       "Deployment",
		DeploymentConfigName:             "DeploymentConfigName",
		DeploymentGroupName:              "DeploymentGroupName",
		DeploymentStyle:                  "DeploymentStyle",
		ECSServices:                      "ECSServices",
		Ec2TagFilters:                    "Ec2TagFilters",
		Ec2TagSet:                        "Ec2TagSet",
		LoadBalancerInfo:                 "LoadBalancerInfo",
		OnPremisesInstanceTagFilters:     "OnPremisesInstanceTagFilters",
		OnPremisesTagSet:                 "OnPremisesTagSet",
		OutdatedInstancesStrategy:        "OutdatedInstancesStrategy",
		ServiceRoleArn:                   "ServiceRoleArn",
		Tags:                             "Tags",
		TerminationHookEnabled:           "TerminationHookEnabled",
		TriggerConfigurations:            "TriggerConfigurations",
	}

	// AWS_CodeDeploy_DeploymentGroup__PropertiesSlice reports all the CloudFormation properties for AWS::CodeDeploy::DeploymentGroup.
	AWS_CodeDeploy_DeploymentGroup__PropertiesSlice = []string{
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.AlarmConfiguration,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.ApplicationName,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.AutoRollbackConfiguration,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.AutoScalingGroups,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.BlueGreenDeploymentConfiguration,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.Deployment,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.DeploymentConfigName,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.DeploymentGroupName,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.DeploymentStyle,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.ECSServices,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.Ec2TagFilters,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.Ec2TagSet,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.LoadBalancerInfo,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.OnPremisesInstanceTagFilters,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.OnPremisesTagSet,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.OutdatedInstancesStrategy,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.ServiceRoleArn,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.Tags,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.TerminationHookEnabled,
		AWS_CodeDeploy_DeploymentGroup__PropertiesMap.TriggerConfigurations,
	}
)

// AWS_CodeDeploy_DeploymentGroup is a binding for AWS::CodeDeploy::DeploymentGroup.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html
type AWS_CodeDeploy_DeploymentGroup struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AlarmConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-alarmconfiguration
	AlarmConfiguration cfz.Expression[AWS_CodeDeploy_DeploymentGroup_AlarmConfiguration] `json:"AlarmConfiguration,omitempty"`

	// ApplicationName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-applicationname
	ApplicationName cfz.Expression[string] `json:"ApplicationName,omitempty"`

	// AutoRollbackConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration
	AutoRollbackConfiguration cfz.Expression[AWS_CodeDeploy_DeploymentGroup_AutoRollbackConfiguration] `json:"AutoRollbackConfiguration,omitempty"`

	// AutoScalingGroups is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autoscalinggroups
	AutoScalingGroups cfz.ExpressionSlice[string] `json:"AutoScalingGroups,omitempty"`

	// BlueGreenDeploymentConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration
	BlueGreenDeploymentConfiguration cfz.Expression[AWS_CodeDeploy_DeploymentGroup_BlueGreenDeploymentConfiguration] `json:"BlueGreenDeploymentConfiguration,omitempty"`

	// Deployment is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deployment
	Deployment cfz.Expression[AWS_CodeDeploy_DeploymentGroup_Deployment] `json:"Deployment,omitempty"`

	// DeploymentConfigName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentconfigname
	DeploymentConfigName cfz.Expression[string] `json:"DeploymentConfigName,omitempty"`

	// DeploymentGroupName is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentgroupname
	DeploymentGroupName cfz.Expression[string] `json:"DeploymentGroupName,omitempty"`

	// DeploymentStyle is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentstyle
	DeploymentStyle cfz.Expression[AWS_CodeDeploy_DeploymentGroup_DeploymentStyle] `json:"DeploymentStyle,omitempty"`

	// ECSServices is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ecsservices
	ECSServices cfz.ExpressionSlice[AWS_CodeDeploy_DeploymentGroup_ECSService] `json:"ECSServices,omitempty"`

	// Ec2TagFilters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagfilters
	Ec2TagFilters cfz.ExpressionSlice[AWS_CodeDeploy_DeploymentGroup_EC2TagFilter] `json:"Ec2TagFilters,omitempty"`

	// Ec2TagSet is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagset
	Ec2TagSet cfz.Expression[AWS_CodeDeploy_DeploymentGroup_EC2TagSet] `json:"Ec2TagSet,omitempty"`

	// LoadBalancerInfo is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo
	LoadBalancerInfo cfz.Expression[AWS_CodeDeploy_DeploymentGroup_LoadBalancerInfo] `json:"LoadBalancerInfo,omitempty"`

	// OnPremisesInstanceTagFilters is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisesinstancetagfilters
	OnPremisesInstanceTagFilters cfz.ExpressionSlice[AWS_CodeDeploy_DeploymentGroup_TagFilter] `json:"OnPremisesInstanceTagFilters,omitempty"`

	// OnPremisesTagSet is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisestagset
	OnPremisesTagSet cfz.Expression[AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSet] `json:"OnPremisesTagSet,omitempty"`

	// OutdatedInstancesStrategy is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-outdatedinstancesstrategy
	OutdatedInstancesStrategy cfz.Expression[string] `json:"OutdatedInstancesStrategy,omitempty"`

	// ServiceRoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-servicerolearn
	ServiceRoleArn cfz.Expression[string] `json:"ServiceRoleArn,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`

	// TerminationHookEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-terminationhookenabled
	TerminationHookEnabled cfz.Expression[bool] `json:"TerminationHookEnabled,omitempty"`

	// TriggerConfigurations is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-triggerconfigurations
	TriggerConfigurations cfz.ExpressionSlice[AWS_CodeDeploy_DeploymentGroup_TriggerConfig] `json:"TriggerConfigurations,omitempty"`
}

// New__AWS_CodeDeploy_DeploymentGroup initializes a new *AWS_CodeDeploy_DeploymentGroup.
func New__AWS_CodeDeploy_DeploymentGroup(logicalName string) *AWS_CodeDeploy_DeploymentGroup {
	return &AWS_CodeDeploy_DeploymentGroup{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_CodeDeploy_DeploymentGroup) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_CodeDeploy_DeploymentGroup) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_CodeDeploy_DeploymentGroup) GetType() string {
	return AWS_CodeDeploy_DeploymentGroup__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__LogicalName(v string) *AWS_CodeDeploy_DeploymentGroup {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_CodeDeploy_DeploymentGroup {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_CodeDeploy_DeploymentGroup) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_CodeDeploy_DeploymentGroup {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_CodeDeploy_DeploymentGroup {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_CodeDeploy_DeploymentGroup {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__RequestedOutputs(v []cfz.Output) *AWS_CodeDeploy_DeploymentGroup {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_CodeDeploy_DeploymentGroup) Add__RequestedOutputs(v ...cfz.Output) *AWS_CodeDeploy_DeploymentGroup {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AlarmConfiguration updates property "AlarmConfiguration".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__AlarmConfiguration(v cfz.Expression[AWS_CodeDeploy_DeploymentGroup_AlarmConfiguration]) *AWS_CodeDeploy_DeploymentGroup {
	t.AlarmConfiguration = v
	return t
}

// SetV__AlarmConfiguration updates property "AlarmConfiguration".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__AlarmConfiguration(v AWS_CodeDeploy_DeploymentGroup_AlarmConfiguration) *AWS_CodeDeploy_DeploymentGroup {
	t.AlarmConfiguration = cfz.V(v)
	return t
}

// Set__ApplicationName updates property "ApplicationName".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__ApplicationName(v cfz.Expression[string]) *AWS_CodeDeploy_DeploymentGroup {
	t.ApplicationName = v
	return t
}

// SetV__ApplicationName updates property "ApplicationName".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__ApplicationName(v string) *AWS_CodeDeploy_DeploymentGroup {
	t.ApplicationName = cfz.V(v)
	return t
}

// Set__AutoRollbackConfiguration updates property "AutoRollbackConfiguration".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__AutoRollbackConfiguration(v cfz.Expression[AWS_CodeDeploy_DeploymentGroup_AutoRollbackConfiguration]) *AWS_CodeDeploy_DeploymentGroup {
	t.AutoRollbackConfiguration = v
	return t
}

// SetV__AutoRollbackConfiguration updates property "AutoRollbackConfiguration".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__AutoRollbackConfiguration(v AWS_CodeDeploy_DeploymentGroup_AutoRollbackConfiguration) *AWS_CodeDeploy_DeploymentGroup {
	t.AutoRollbackConfiguration = cfz.V(v)
	return t
}

// Set__AutoScalingGroups updates property "AutoScalingGroups".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__AutoScalingGroups(v cfz.ExpressionSlice[string]) *AWS_CodeDeploy_DeploymentGroup {
	t.AutoScalingGroups = v
	return t
}

// SetS__AutoScalingGroups updates property "AutoScalingGroups".
func (t *AWS_CodeDeploy_DeploymentGroup) SetS__AutoScalingGroups(v ...cfz.Expression[string]) *AWS_CodeDeploy_DeploymentGroup {
	t.AutoScalingGroups = cfz.S(v...)
	return t
}

// SetSV__AutoScalingGroups updates property "AutoScalingGroups".
func (t *AWS_CodeDeploy_DeploymentGroup) SetSV__AutoScalingGroups(v ...string) *AWS_CodeDeploy_DeploymentGroup {
	t.AutoScalingGroups = cfz.SV(v...)
	return t
}

// Set__BlueGreenDeploymentConfiguration updates property "BlueGreenDeploymentConfiguration".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__BlueGreenDeploymentConfiguration(v cfz.Expression[AWS_CodeDeploy_DeploymentGroup_BlueGreenDeploymentConfiguration]) *AWS_CodeDeploy_DeploymentGroup {
	t.BlueGreenDeploymentConfiguration = v
	return t
}

// SetV__BlueGreenDeploymentConfiguration updates property "BlueGreenDeploymentConfiguration".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__BlueGreenDeploymentConfiguration(v AWS_CodeDeploy_DeploymentGroup_BlueGreenDeploymentConfiguration) *AWS_CodeDeploy_DeploymentGroup {
	t.BlueGreenDeploymentConfiguration = cfz.V(v)
	return t
}

// Set__Deployment updates property "Deployment".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__Deployment(v cfz.Expression[AWS_CodeDeploy_DeploymentGroup_Deployment]) *AWS_CodeDeploy_DeploymentGroup {
	t.Deployment = v
	return t
}

// SetV__Deployment updates property "Deployment".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__Deployment(v AWS_CodeDeploy_DeploymentGroup_Deployment) *AWS_CodeDeploy_DeploymentGroup {
	t.Deployment = cfz.V(v)
	return t
}

// Set__DeploymentConfigName updates property "DeploymentConfigName".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__DeploymentConfigName(v cfz.Expression[string]) *AWS_CodeDeploy_DeploymentGroup {
	t.DeploymentConfigName = v
	return t
}

// SetV__DeploymentConfigName updates property "DeploymentConfigName".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__DeploymentConfigName(v string) *AWS_CodeDeploy_DeploymentGroup {
	t.DeploymentConfigName = cfz.V(v)
	return t
}

// Set__DeploymentGroupName updates property "DeploymentGroupName".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__DeploymentGroupName(v cfz.Expression[string]) *AWS_CodeDeploy_DeploymentGroup {
	t.DeploymentGroupName = v
	return t
}

// SetV__DeploymentGroupName updates property "DeploymentGroupName".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__DeploymentGroupName(v string) *AWS_CodeDeploy_DeploymentGroup {
	t.DeploymentGroupName = cfz.V(v)
	return t
}

// Set__DeploymentStyle updates property "DeploymentStyle".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__DeploymentStyle(v cfz.Expression[AWS_CodeDeploy_DeploymentGroup_DeploymentStyle]) *AWS_CodeDeploy_DeploymentGroup {
	t.DeploymentStyle = v
	return t
}

// SetV__DeploymentStyle updates property "DeploymentStyle".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__DeploymentStyle(v AWS_CodeDeploy_DeploymentGroup_DeploymentStyle) *AWS_CodeDeploy_DeploymentGroup {
	t.DeploymentStyle = cfz.V(v)
	return t
}

// Set__ECSServices updates property "ECSServices".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__ECSServices(v cfz.ExpressionSlice[AWS_CodeDeploy_DeploymentGroup_ECSService]) *AWS_CodeDeploy_DeploymentGroup {
	t.ECSServices = v
	return t
}

// SetS__ECSServices updates property "ECSServices".
func (t *AWS_CodeDeploy_DeploymentGroup) SetS__ECSServices(v ...cfz.Expression[AWS_CodeDeploy_DeploymentGroup_ECSService]) *AWS_CodeDeploy_DeploymentGroup {
	t.ECSServices = cfz.S(v...)
	return t
}

// SetSV__ECSServices updates property "ECSServices".
func (t *AWS_CodeDeploy_DeploymentGroup) SetSV__ECSServices(v ...AWS_CodeDeploy_DeploymentGroup_ECSService) *AWS_CodeDeploy_DeploymentGroup {
	t.ECSServices = cfz.SV(v...)
	return t
}

// Set__Ec2TagFilters updates property "Ec2TagFilters".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__Ec2TagFilters(v cfz.ExpressionSlice[AWS_CodeDeploy_DeploymentGroup_EC2TagFilter]) *AWS_CodeDeploy_DeploymentGroup {
	t.Ec2TagFilters = v
	return t
}

// SetS__Ec2TagFilters updates property "Ec2TagFilters".
func (t *AWS_CodeDeploy_DeploymentGroup) SetS__Ec2TagFilters(v ...cfz.Expression[AWS_CodeDeploy_DeploymentGroup_EC2TagFilter]) *AWS_CodeDeploy_DeploymentGroup {
	t.Ec2TagFilters = cfz.S(v...)
	return t
}

// SetSV__Ec2TagFilters updates property "Ec2TagFilters".
func (t *AWS_CodeDeploy_DeploymentGroup) SetSV__Ec2TagFilters(v ...AWS_CodeDeploy_DeploymentGroup_EC2TagFilter) *AWS_CodeDeploy_DeploymentGroup {
	t.Ec2TagFilters = cfz.SV(v...)
	return t
}

// Set__Ec2TagSet updates property "Ec2TagSet".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__Ec2TagSet(v cfz.Expression[AWS_CodeDeploy_DeploymentGroup_EC2TagSet]) *AWS_CodeDeploy_DeploymentGroup {
	t.Ec2TagSet = v
	return t
}

// SetV__Ec2TagSet updates property "Ec2TagSet".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__Ec2TagSet(v AWS_CodeDeploy_DeploymentGroup_EC2TagSet) *AWS_CodeDeploy_DeploymentGroup {
	t.Ec2TagSet = cfz.V(v)
	return t
}

// Set__LoadBalancerInfo updates property "LoadBalancerInfo".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__LoadBalancerInfo(v cfz.Expression[AWS_CodeDeploy_DeploymentGroup_LoadBalancerInfo]) *AWS_CodeDeploy_DeploymentGroup {
	t.LoadBalancerInfo = v
	return t
}

// SetV__LoadBalancerInfo updates property "LoadBalancerInfo".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__LoadBalancerInfo(v AWS_CodeDeploy_DeploymentGroup_LoadBalancerInfo) *AWS_CodeDeploy_DeploymentGroup {
	t.LoadBalancerInfo = cfz.V(v)
	return t
}

// Set__OnPremisesInstanceTagFilters updates property "OnPremisesInstanceTagFilters".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__OnPremisesInstanceTagFilters(v cfz.ExpressionSlice[AWS_CodeDeploy_DeploymentGroup_TagFilter]) *AWS_CodeDeploy_DeploymentGroup {
	t.OnPremisesInstanceTagFilters = v
	return t
}

// SetS__OnPremisesInstanceTagFilters updates property "OnPremisesInstanceTagFilters".
func (t *AWS_CodeDeploy_DeploymentGroup) SetS__OnPremisesInstanceTagFilters(v ...cfz.Expression[AWS_CodeDeploy_DeploymentGroup_TagFilter]) *AWS_CodeDeploy_DeploymentGroup {
	t.OnPremisesInstanceTagFilters = cfz.S(v...)
	return t
}

// SetSV__OnPremisesInstanceTagFilters updates property "OnPremisesInstanceTagFilters".
func (t *AWS_CodeDeploy_DeploymentGroup) SetSV__OnPremisesInstanceTagFilters(v ...AWS_CodeDeploy_DeploymentGroup_TagFilter) *AWS_CodeDeploy_DeploymentGroup {
	t.OnPremisesInstanceTagFilters = cfz.SV(v...)
	return t
}

// Set__OnPremisesTagSet updates property "OnPremisesTagSet".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__OnPremisesTagSet(v cfz.Expression[AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSet]) *AWS_CodeDeploy_DeploymentGroup {
	t.OnPremisesTagSet = v
	return t
}

// SetV__OnPremisesTagSet updates property "OnPremisesTagSet".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__OnPremisesTagSet(v AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSet) *AWS_CodeDeploy_DeploymentGroup {
	t.OnPremisesTagSet = cfz.V(v)
	return t
}

// Set__OutdatedInstancesStrategy updates property "OutdatedInstancesStrategy".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__OutdatedInstancesStrategy(v cfz.Expression[string]) *AWS_CodeDeploy_DeploymentGroup {
	t.OutdatedInstancesStrategy = v
	return t
}

// SetV__OutdatedInstancesStrategy updates property "OutdatedInstancesStrategy".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__OutdatedInstancesStrategy(v string) *AWS_CodeDeploy_DeploymentGroup {
	t.OutdatedInstancesStrategy = cfz.V(v)
	return t
}

// Set__ServiceRoleArn updates property "ServiceRoleArn".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__ServiceRoleArn(v cfz.Expression[string]) *AWS_CodeDeploy_DeploymentGroup {
	t.ServiceRoleArn = v
	return t
}

// SetV__ServiceRoleArn updates property "ServiceRoleArn".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__ServiceRoleArn(v string) *AWS_CodeDeploy_DeploymentGroup {
	t.ServiceRoleArn = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_CodeDeploy_DeploymentGroup {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_CodeDeploy_DeploymentGroup) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_CodeDeploy_DeploymentGroup {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_CodeDeploy_DeploymentGroup) SetSV__Tags(v ...cfz.Tag) *AWS_CodeDeploy_DeploymentGroup {
	t.Tags = cfz.SV(v...)
	return t
}

// Set__TerminationHookEnabled updates property "TerminationHookEnabled".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__TerminationHookEnabled(v cfz.Expression[bool]) *AWS_CodeDeploy_DeploymentGroup {
	t.TerminationHookEnabled = v
	return t
}

// SetV__TerminationHookEnabled updates property "TerminationHookEnabled".
func (t *AWS_CodeDeploy_DeploymentGroup) SetV__TerminationHookEnabled(v bool) *AWS_CodeDeploy_DeploymentGroup {
	t.TerminationHookEnabled = cfz.V(v)
	return t
}

// Set__TriggerConfigurations updates property "TriggerConfigurations".
func (t *AWS_CodeDeploy_DeploymentGroup) Set__TriggerConfigurations(v cfz.ExpressionSlice[AWS_CodeDeploy_DeploymentGroup_TriggerConfig]) *AWS_CodeDeploy_DeploymentGroup {
	t.TriggerConfigurations = v
	return t
}

// SetS__TriggerConfigurations updates property "TriggerConfigurations".
func (t *AWS_CodeDeploy_DeploymentGroup) SetS__TriggerConfigurations(v ...cfz.Expression[AWS_CodeDeploy_DeploymentGroup_TriggerConfig]) *AWS_CodeDeploy_DeploymentGroup {
	t.TriggerConfigurations = cfz.S(v...)
	return t
}

// SetSV__TriggerConfigurations updates property "TriggerConfigurations".
func (t *AWS_CodeDeploy_DeploymentGroup) SetSV__TriggerConfigurations(v ...AWS_CodeDeploy_DeploymentGroup_TriggerConfig) *AWS_CodeDeploy_DeploymentGroup {
	t.TriggerConfigurations = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_CodeDeploy_DeploymentGroup) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_CodeDeploy_DeploymentGroup) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_CodeDeploy_DeploymentGroup) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_CodeDeploy_DeploymentGroup

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_CodeDeploy_DeploymentGroup) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
