// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_rum

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_RUM_AppMonitor)(nil)
	_ cfz.Resource                   = (*AWS_RUM_AppMonitor)(nil)
)

const (
	// AWS_RUM_AppMonitor__Type is the CloudFormation type for AWS::RUM::AppMonitor.
	AWS_RUM_AppMonitor__Type = "AWS::RUM::AppMonitor"
)

var (
	// AWS_RUM_AppMonitor__AttributesMap reports all the CloudFormation attributes for AWS::RUM::AppMonitor.
	AWS_RUM_AppMonitor__AttributesMap = struct {
		Id string
	}{
		Id: "Id",
	}

	// AWS_RUM_AppMonitor__AttributesSlice reports all the CloudFormation attributes for AWS::RUM::AppMonitor.
	AWS_RUM_AppMonitor__AttributesSlice = []string{
		AWS_RUM_AppMonitor__AttributesMap.Id,
	}
)

var (
	// AWS_RUM_AppMonitor__PropertiesMap reports all the CloudFormation properties for AWS::RUM::AppMonitor.
	AWS_RUM_AppMonitor__PropertiesMap = struct {
		AppMonitorConfiguration string
		CustomEvents            string
		CwLogEnabled            string
		Domain                  string
		Name                    string
		Tags                    string
	}{
		AppMonitorConfiguration: "AppMonitorConfiguration",
		CustomEvents:            "CustomEvents",
		CwLogEnabled:            "CwLogEnabled",
		Domain:                  "Domain",
		Name:                    "Name",
		Tags:                    "Tags",
	}

	// AWS_RUM_AppMonitor__PropertiesSlice reports all the CloudFormation properties for AWS::RUM::AppMonitor.
	AWS_RUM_AppMonitor__PropertiesSlice = []string{
		AWS_RUM_AppMonitor__PropertiesMap.AppMonitorConfiguration,
		AWS_RUM_AppMonitor__PropertiesMap.CustomEvents,
		AWS_RUM_AppMonitor__PropertiesMap.CwLogEnabled,
		AWS_RUM_AppMonitor__PropertiesMap.Domain,
		AWS_RUM_AppMonitor__PropertiesMap.Name,
		AWS_RUM_AppMonitor__PropertiesMap.Tags,
	}
)

// AWS_RUM_AppMonitor is a binding for AWS::RUM::AppMonitor.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html
type AWS_RUM_AppMonitor struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// AppMonitorConfiguration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-appmonitorconfiguration
	AppMonitorConfiguration cfz.Expression[AWS_RUM_AppMonitor_AppMonitorConfiguration] `json:"AppMonitorConfiguration,omitempty"`

	// CustomEvents is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-customevents
	CustomEvents cfz.Expression[AWS_RUM_AppMonitor_CustomEvents] `json:"CustomEvents,omitempty"`

	// CwLogEnabled is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-cwlogenabled
	CwLogEnabled cfz.Expression[bool] `json:"CwLogEnabled,omitempty"`

	// Domain is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-domain
	Domain cfz.Expression[string] `json:"Domain,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// Tags is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rum-appmonitor.html#cfn-rum-appmonitor-tags
	Tags cfz.ExpressionSlice[cfz.Tag] `json:"Tags,omitempty"`
}

// New__AWS_RUM_AppMonitor initializes a new *AWS_RUM_AppMonitor.
func New__AWS_RUM_AppMonitor(logicalName string) *AWS_RUM_AppMonitor {
	return &AWS_RUM_AppMonitor{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_RUM_AppMonitor) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_RUM_AppMonitor) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_RUM_AppMonitor) GetType() string {
	return AWS_RUM_AppMonitor__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_RUM_AppMonitor) Set__LogicalName(v string) *AWS_RUM_AppMonitor {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_RUM_AppMonitor) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_RUM_AppMonitor {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_RUM_AppMonitor) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_RUM_AppMonitor {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_RUM_AppMonitor) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_RUM_AppMonitor {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_RUM_AppMonitor) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_RUM_AppMonitor {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_RUM_AppMonitor) Set__RequestedOutputs(v []cfz.Output) *AWS_RUM_AppMonitor {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_RUM_AppMonitor) Add__RequestedOutputs(v ...cfz.Output) *AWS_RUM_AppMonitor {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__AppMonitorConfiguration updates property "AppMonitorConfiguration".
func (t *AWS_RUM_AppMonitor) Set__AppMonitorConfiguration(v cfz.Expression[AWS_RUM_AppMonitor_AppMonitorConfiguration]) *AWS_RUM_AppMonitor {
	t.AppMonitorConfiguration = v
	return t
}

// SetV__AppMonitorConfiguration updates property "AppMonitorConfiguration".
func (t *AWS_RUM_AppMonitor) SetV__AppMonitorConfiguration(v AWS_RUM_AppMonitor_AppMonitorConfiguration) *AWS_RUM_AppMonitor {
	t.AppMonitorConfiguration = cfz.V(v)
	return t
}

// Set__CustomEvents updates property "CustomEvents".
func (t *AWS_RUM_AppMonitor) Set__CustomEvents(v cfz.Expression[AWS_RUM_AppMonitor_CustomEvents]) *AWS_RUM_AppMonitor {
	t.CustomEvents = v
	return t
}

// SetV__CustomEvents updates property "CustomEvents".
func (t *AWS_RUM_AppMonitor) SetV__CustomEvents(v AWS_RUM_AppMonitor_CustomEvents) *AWS_RUM_AppMonitor {
	t.CustomEvents = cfz.V(v)
	return t
}

// Set__CwLogEnabled updates property "CwLogEnabled".
func (t *AWS_RUM_AppMonitor) Set__CwLogEnabled(v cfz.Expression[bool]) *AWS_RUM_AppMonitor {
	t.CwLogEnabled = v
	return t
}

// SetV__CwLogEnabled updates property "CwLogEnabled".
func (t *AWS_RUM_AppMonitor) SetV__CwLogEnabled(v bool) *AWS_RUM_AppMonitor {
	t.CwLogEnabled = cfz.V(v)
	return t
}

// Set__Domain updates property "Domain".
func (t *AWS_RUM_AppMonitor) Set__Domain(v cfz.Expression[string]) *AWS_RUM_AppMonitor {
	t.Domain = v
	return t
}

// SetV__Domain updates property "Domain".
func (t *AWS_RUM_AppMonitor) SetV__Domain(v string) *AWS_RUM_AppMonitor {
	t.Domain = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_RUM_AppMonitor) Set__Name(v cfz.Expression[string]) *AWS_RUM_AppMonitor {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_RUM_AppMonitor) SetV__Name(v string) *AWS_RUM_AppMonitor {
	t.Name = cfz.V(v)
	return t
}

// Set__Tags updates property "Tags".
func (t *AWS_RUM_AppMonitor) Set__Tags(v cfz.ExpressionSlice[cfz.Tag]) *AWS_RUM_AppMonitor {
	t.Tags = v
	return t
}

// SetS__Tags updates property "Tags".
func (t *AWS_RUM_AppMonitor) SetS__Tags(v ...cfz.Expression[cfz.Tag]) *AWS_RUM_AppMonitor {
	t.Tags = cfz.S(v...)
	return t
}

// SetSV__Tags updates property "Tags".
func (t *AWS_RUM_AppMonitor) SetSV__Tags(v ...cfz.Tag) *AWS_RUM_AppMonitor {
	t.Tags = cfz.SV(v...)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_RUM_AppMonitor) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__Id returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: Id
func (t *AWS_RUM_AppMonitor) GetAtt__Id() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_RUM_AppMonitor__AttributesMap.Id))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_RUM_AppMonitor) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__Id returns a conventionally configured output for an attribute of this resource.
// Attribute: Id
func (t *AWS_RUM_AppMonitor) GetConventionalOutputAtt__Id(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttId", t.GetAtt__Id())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_RUM_AppMonitor) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_RUM_AppMonitor

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_RUM_AppMonitor) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
