// Code generated by "golang-cloudformation". DO NOT EDIT.

package aws_simspaceweaver

import (
	"encoding/json"
	"github.com/ibrt/golang-cloudformation/cfz"
)

var (
	_ cfz.ResourcePartialLogicalName = (*AWS_SimSpaceWeaver_Simulation)(nil)
	_ cfz.Resource                   = (*AWS_SimSpaceWeaver_Simulation)(nil)
)

const (
	// AWS_SimSpaceWeaver_Simulation__Type is the CloudFormation type for AWS::SimSpaceWeaver::Simulation.
	AWS_SimSpaceWeaver_Simulation__Type = "AWS::SimSpaceWeaver::Simulation"
)

var (
	// AWS_SimSpaceWeaver_Simulation__AttributesMap reports all the CloudFormation attributes for AWS::SimSpaceWeaver::Simulation.
	AWS_SimSpaceWeaver_Simulation__AttributesMap = struct {
		DescribePayload string
	}{
		DescribePayload: "DescribePayload",
	}

	// AWS_SimSpaceWeaver_Simulation__AttributesSlice reports all the CloudFormation attributes for AWS::SimSpaceWeaver::Simulation.
	AWS_SimSpaceWeaver_Simulation__AttributesSlice = []string{
		AWS_SimSpaceWeaver_Simulation__AttributesMap.DescribePayload,
	}
)

var (
	// AWS_SimSpaceWeaver_Simulation__PropertiesMap reports all the CloudFormation properties for AWS::SimSpaceWeaver::Simulation.
	AWS_SimSpaceWeaver_Simulation__PropertiesMap = struct {
		MaximumDuration    string
		Name               string
		RoleArn            string
		SchemaS3Location   string
		SnapshotS3Location string
	}{
		MaximumDuration:    "MaximumDuration",
		Name:               "Name",
		RoleArn:            "RoleArn",
		SchemaS3Location:   "SchemaS3Location",
		SnapshotS3Location: "SnapshotS3Location",
	}

	// AWS_SimSpaceWeaver_Simulation__PropertiesSlice reports all the CloudFormation properties for AWS::SimSpaceWeaver::Simulation.
	AWS_SimSpaceWeaver_Simulation__PropertiesSlice = []string{
		AWS_SimSpaceWeaver_Simulation__PropertiesMap.MaximumDuration,
		AWS_SimSpaceWeaver_Simulation__PropertiesMap.Name,
		AWS_SimSpaceWeaver_Simulation__PropertiesMap.RoleArn,
		AWS_SimSpaceWeaver_Simulation__PropertiesMap.SchemaS3Location,
		AWS_SimSpaceWeaver_Simulation__PropertiesMap.SnapshotS3Location,
	}
)

// AWS_SimSpaceWeaver_Simulation is a binding for AWS::SimSpaceWeaver::Simulation.
// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html
type AWS_SimSpaceWeaver_Simulation struct { // __LogicalName is the CloudFormation logical name for this resource in the template.
	__LogicalName string `json:"-"`

	// __DependsOn indicates which resources must be created before this one.
	__DependsOn []cfz.ResourcePartialLogicalName `json:"-"`

	// __DeletionPolicy indicates the deletion behavior of CloudFormation for this resource.
	__DeletionPolicy cfz.ResourceDeletionPolicy `json:"-"`

	// __UpdateReplacePolicy indicates the update replace behavior of CloudFormation for this resource.
	__UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"-"`

	// __RequestedOutputs allows to group outputs together with resources, for later inclusion in a template.
	__RequestedOutputs []cfz.Output

	// MaximumDuration is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-maximumduration
	MaximumDuration cfz.Expression[string] `json:"MaximumDuration,omitempty"`

	// Name is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-name
	Name cfz.Expression[string] `json:"Name,omitempty"`

	// RoleArn is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-rolearn
	RoleArn cfz.Expression[string] `json:"RoleArn,omitempty"`

	// SchemaS3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-schemas3location
	SchemaS3Location cfz.Expression[AWS_SimSpaceWeaver_Simulation_S3Location] `json:"SchemaS3Location,omitempty"`

	// SnapshotS3Location is a property.
	// See: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-simspaceweaver-simulation.html#cfn-simspaceweaver-simulation-snapshots3location
	SnapshotS3Location cfz.Expression[AWS_SimSpaceWeaver_Simulation_S3Location] `json:"SnapshotS3Location,omitempty"`
}

// New__AWS_SimSpaceWeaver_Simulation initializes a new *AWS_SimSpaceWeaver_Simulation.
func New__AWS_SimSpaceWeaver_Simulation(logicalName string) *AWS_SimSpaceWeaver_Simulation {
	return &AWS_SimSpaceWeaver_Simulation{
		__LogicalName: logicalName,
	}
}

// GetLogicalName returns the CloudFormation logical name for this resource in the template.
// It implements the cfz.Resource and cfz.ResourcePartialLogicalName interface.
func (t *AWS_SimSpaceWeaver_Simulation) GetResourceLogicalName() string {
	return t.__LogicalName
}

// GetRequestedOutputs returns the requested outputs for this resource in the template.
// It implements the cfz.Resource interface.
func (t *AWS_SimSpaceWeaver_Simulation) GetRequestedOutputs() []cfz.Output {
	return t.__RequestedOutputs
}

// GetType returns the CloudFormation type.
// It implements the cfz.Resource interface.
func (*AWS_SimSpaceWeaver_Simulation) GetType() string {
	return AWS_SimSpaceWeaver_Simulation__Type
}

// Set__LogicalName updates field "__LogicalName".
func (t *AWS_SimSpaceWeaver_Simulation) Set__LogicalName(v string) *AWS_SimSpaceWeaver_Simulation {
	t.__LogicalName = v
	return t
}

// Set__DependsOn updates (replaces) field "__DependsOn".
func (t *AWS_SimSpaceWeaver_Simulation) Set__DependsOn(v []cfz.ResourcePartialLogicalName) *AWS_SimSpaceWeaver_Simulation {
	t.__DependsOn = v
	return t
}

// Add__DependsOn updates (appends to) field "__DependsOn".
func (t *AWS_SimSpaceWeaver_Simulation) Add__DependsOn(v ...cfz.ResourcePartialLogicalName) *AWS_SimSpaceWeaver_Simulation {
	t.__DependsOn = append(t.__DependsOn, v...)
	return t
}

// Set__DeletionPolicy updates field "__DeletionPolicy".
func (t *AWS_SimSpaceWeaver_Simulation) Set__DeletionPolicy(v cfz.ResourceDeletionPolicy) *AWS_SimSpaceWeaver_Simulation {
	t.__DeletionPolicy = v
	return t
}

// Set__UpdateReplacePolicy updates field "__UpdateReplacePolicy".
func (t *AWS_SimSpaceWeaver_Simulation) Set__UpdateReplacePolicy(v cfz.ResourceUpdateReplacePolicy) *AWS_SimSpaceWeaver_Simulation {
	t.__UpdateReplacePolicy = v
	return t
}

// Set__RequestedOutputs updates (replaces) field "__RequestedOutputs".
func (t *AWS_SimSpaceWeaver_Simulation) Set__RequestedOutputs(v []cfz.Output) *AWS_SimSpaceWeaver_Simulation {
	t.__RequestedOutputs = v
	return t
}

// Add__RequestedOutputs updates (appends to) field "__RequestedOutputs".
func (t *AWS_SimSpaceWeaver_Simulation) Add__RequestedOutputs(v ...cfz.Output) *AWS_SimSpaceWeaver_Simulation {
	t.__RequestedOutputs = append(t.__RequestedOutputs, v...)
	return t
}

// Set__MaximumDuration updates property "MaximumDuration".
func (t *AWS_SimSpaceWeaver_Simulation) Set__MaximumDuration(v cfz.Expression[string]) *AWS_SimSpaceWeaver_Simulation {
	t.MaximumDuration = v
	return t
}

// SetV__MaximumDuration updates property "MaximumDuration".
func (t *AWS_SimSpaceWeaver_Simulation) SetV__MaximumDuration(v string) *AWS_SimSpaceWeaver_Simulation {
	t.MaximumDuration = cfz.V(v)
	return t
}

// Set__Name updates property "Name".
func (t *AWS_SimSpaceWeaver_Simulation) Set__Name(v cfz.Expression[string]) *AWS_SimSpaceWeaver_Simulation {
	t.Name = v
	return t
}

// SetV__Name updates property "Name".
func (t *AWS_SimSpaceWeaver_Simulation) SetV__Name(v string) *AWS_SimSpaceWeaver_Simulation {
	t.Name = cfz.V(v)
	return t
}

// Set__RoleArn updates property "RoleArn".
func (t *AWS_SimSpaceWeaver_Simulation) Set__RoleArn(v cfz.Expression[string]) *AWS_SimSpaceWeaver_Simulation {
	t.RoleArn = v
	return t
}

// SetV__RoleArn updates property "RoleArn".
func (t *AWS_SimSpaceWeaver_Simulation) SetV__RoleArn(v string) *AWS_SimSpaceWeaver_Simulation {
	t.RoleArn = cfz.V(v)
	return t
}

// Set__SchemaS3Location updates property "SchemaS3Location".
func (t *AWS_SimSpaceWeaver_Simulation) Set__SchemaS3Location(v cfz.Expression[AWS_SimSpaceWeaver_Simulation_S3Location]) *AWS_SimSpaceWeaver_Simulation {
	t.SchemaS3Location = v
	return t
}

// SetV__SchemaS3Location updates property "SchemaS3Location".
func (t *AWS_SimSpaceWeaver_Simulation) SetV__SchemaS3Location(v AWS_SimSpaceWeaver_Simulation_S3Location) *AWS_SimSpaceWeaver_Simulation {
	t.SchemaS3Location = cfz.V(v)
	return t
}

// Set__SnapshotS3Location updates property "SnapshotS3Location".
func (t *AWS_SimSpaceWeaver_Simulation) Set__SnapshotS3Location(v cfz.Expression[AWS_SimSpaceWeaver_Simulation_S3Location]) *AWS_SimSpaceWeaver_Simulation {
	t.SnapshotS3Location = v
	return t
}

// SetV__SnapshotS3Location updates property "SnapshotS3Location".
func (t *AWS_SimSpaceWeaver_Simulation) SetV__SnapshotS3Location(v AWS_SimSpaceWeaver_Simulation_S3Location) *AWS_SimSpaceWeaver_Simulation {
	t.SnapshotS3Location = cfz.V(v)
	return t
}

// Ref returns a cfz.Expression[string] that resolves to the Ref intrinsic function for this resource.
func (t *AWS_SimSpaceWeaver_Simulation) Ref() cfz.Expression[string] {
	return cfz.Ref(cfz.V(t.GetResourceLogicalName()))
}

// GetAtt__DescribePayload returns a $cfz.Expression[string] that resolves to the FN::GetAtt intrinsic function for this resource.
// Attribute: DescribePayload
func (t *AWS_SimSpaceWeaver_Simulation) GetAtt__DescribePayload() cfz.Expression[string] {
	return cfz.GetAtt[string](cfz.V(t.GetResourceLogicalName()), cfz.V(AWS_SimSpaceWeaver_Simulation__AttributesMap.DescribePayload))
}

// GetConventionalOutputRef returns a conventionally configured output for the Ref of this resource.
func (t *AWS_SimSpaceWeaver_Simulation) GetConventionalOutputRef(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"Ref", t.Ref())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// GetConventionalOutputAtt__DescribePayload returns a conventionally configured output for an attribute of this resource.
// Attribute: DescribePayload
func (t *AWS_SimSpaceWeaver_Simulation) GetConventionalOutputAtt__DescribePayload(isExported bool) cfz.Output {
	o := cfz.NewOutput(t.GetResourceLogicalName()+"AttDescribePayload", t.GetAtt__DescribePayload())
	if isExported {
		o.SetConventionalExportName()
	}
	return o
}

// MarshalJSON implements the cfz.Resource interface.
func (t *AWS_SimSpaceWeaver_Simulation) MarshalJSON() ([]byte, error) {
	if t == nil {
		return []byte(`null`), nil
	}

	type Properties AWS_SimSpaceWeaver_Simulation

	return json.Marshal(struct {
		Type                string                          `json:"Type"`
		DependsOn           []string                        `json:"DependsOn,omitempty"`
		DeletionPolicy      cfz.ResourceDeletionPolicy      `json:"DeletionPolicy,omitempty"`
		UpdateReplacePolicy cfz.ResourceUpdateReplacePolicy `json:"UpdateReplacePolicy,omitempty"`
		Properties          *Properties                     `json:"Properties,omitempty"`
	}{
		Type:       t.GetType(),
		DependsOn:  t.getDependsOn(),
		Properties: (*Properties)(t),
	})
}

func (t *AWS_SimSpaceWeaver_Simulation) getDependsOn() []string {
	dependsOn := make([]string, 0, len(t.__DependsOn))

	for _, r := range t.__DependsOn {
		dependsOn = append(dependsOn, r.GetResourceLogicalName())
	}

	return dependsOn
}
